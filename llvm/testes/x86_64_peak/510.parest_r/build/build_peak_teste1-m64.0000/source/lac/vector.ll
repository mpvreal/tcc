; ModuleID = 'source/lac/vector.cc'
source_filename = "source/lac/vector.cc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

module asm ".globl _ZSt21ios_base_library_initv"

%"class.dealii::Vector" = type { %"class.dealii::Subscriptor", i32, i32, ptr }
%"class.dealii::Subscriptor" = type { ptr, i32, %"class.std::map", ptr }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<const char *, std::pair<const char *const, unsigned int>, std::_Select1st<std::pair<const char *const, unsigned int> >, std::less<const char *> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<const char *, std::pair<const char *const, unsigned int>, std::_Select1st<std::pair<const char *const, unsigned int> >, std::less<const char *> >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.dealii::BlockVectorBase" = type { %"class.dealii::Subscriptor", %"class.std::vector", %"class.dealii::BlockIndices" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::BlockIndices" = type { i32, %"class.std::vector.3" }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::StandardExceptions::ExcIO" = type { %"class.dealii::ExceptionBase.base", [4 x i8] }
%"class.dealii::ExceptionBase.base" = type <{ %"class.std::exception", ptr, i32, [4 x i8], ptr, ptr, ptr, ptr, i32 }>
%"class.std::exception" = type { ptr }
%"class.std::ios_base" = type { ptr, i64, i64, i32, i32, i32, ptr, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, ptr, %"class.std::locale" }
%"struct.std::ios_base::_Words" = type { ptr, i64 }
%"class.std::locale" = type { ptr }
%"class.std::basic_ios" = type { %"class.std::ios_base", ptr, i8, i8, ptr, ptr, ptr, ptr }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], ptr, i8, [7 x i8], ptr, ptr, ptr, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ ptr, i32 }>
%"class.dealii::Vector.8" = type { %"class.dealii::Subscriptor", i32, i32, ptr }
%"class.dealii::BlockVectorBase.10" = type { %"class.dealii::Subscriptor", %"class.std::vector.11", %"class.dealii::BlockIndices" }
%"class.std::vector.11" = type { %"struct.std::_Vector_base.12" }
%"struct.std::_Vector_base.12" = type { %"struct.std::_Vector_base<dealii::Vector<float>, std::allocator<dealii::Vector<float> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Vector<float>, std::allocator<dealii::Vector<float> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Vector<float>, std::allocator<dealii::Vector<float> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Vector<float>, std::allocator<dealii::Vector<float> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Vector.16" = type { %"class.dealii::Subscriptor", i32, i32, ptr }
%"class.dealii::BlockVectorBase.18" = type { %"class.dealii::Subscriptor", %"class.std::vector.19", %"class.dealii::BlockIndices" }
%"class.std::vector.19" = type { %"struct.std::_Vector_base.20" }
%"struct.std::_Vector_base.20" = type { %"struct.std::_Vector_base<dealii::Vector<long double>, std::allocator<dealii::Vector<long double> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Vector<long double>, std::allocator<dealii::Vector<long double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Vector<long double>, std::allocator<dealii::Vector<long double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Vector<long double>, std::allocator<dealii::Vector<long double> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Vector.24" = type { %"class.dealii::Subscriptor", i32, i32, ptr }
%"class.std::complex" = type { { double, double } }
%"class.dealii::BlockVectorBase.26" = type { %"class.dealii::Subscriptor", %"class.std::vector.27", %"class.dealii::BlockIndices" }
%"class.std::vector.27" = type { %"struct.std::_Vector_base.28" }
%"struct.std::_Vector_base.28" = type { %"struct.std::_Vector_base<dealii::Vector<std::complex<double> >, std::allocator<dealii::Vector<std::complex<double> > > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Vector<std::complex<double> >, std::allocator<dealii::Vector<std::complex<double> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Vector<std::complex<double> >, std::allocator<dealii::Vector<std::complex<double> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Vector<std::complex<double> >, std::allocator<dealii::Vector<std::complex<double> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Vector.32" = type { %"class.dealii::Subscriptor", i32, i32, ptr }
%"class.std::complex.33" = type { { float, float } }
%"class.dealii::BlockVectorBase.35" = type { %"class.dealii::Subscriptor", %"class.std::vector.36", %"class.dealii::BlockIndices" }
%"class.std::vector.36" = type { %"struct.std::_Vector_base.37" }
%"struct.std::_Vector_base.37" = type { %"struct.std::_Vector_base<dealii::Vector<std::complex<float> >, std::allocator<dealii::Vector<std::complex<float> > > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Vector<std::complex<float> >, std::allocator<dealii::Vector<std::complex<float> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Vector<std::complex<float> >, std::allocator<dealii::Vector<std::complex<float> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Vector<std::complex<float> >, std::allocator<dealii::Vector<std::complex<float> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Vector.41" = type { %"class.dealii::Subscriptor", i32, i32, ptr }
%"class.std::complex.42" = type { { x86_fp80, x86_fp80 } }
%"class.dealii::BlockVectorBase.44" = type { %"class.dealii::Subscriptor", %"class.std::vector.45", %"class.dealii::BlockIndices" }
%"class.std::vector.45" = type { %"struct.std::_Vector_base.46" }
%"struct.std::_Vector_base.46" = type { %"struct.std::_Vector_base<dealii::Vector<std::complex<long double> >, std::allocator<dealii::Vector<std::complex<long double> > > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Vector<std::complex<long double> >, std::allocator<dealii::Vector<std::complex<long double> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Vector<std::complex<long double> >, std::allocator<dealii::Vector<std::complex<long double> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Vector<std::complex<long double> >, std::allocator<dealii::Vector<std::complex<long double> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }

$_ZN6dealii6VectorIdEC5Ev = comdat any

$_ZN6dealii6VectorIdEC5ERKS1_ = comdat any

$_ZNK6dealii6VectorIdE4sizeEv = comdat any

$_ZNK6dealii6VectorIdE5beginEv = comdat any

$_ZNK6dealii6VectorIdE3endEv = comdat any

$_ZN6dealii6VectorIdE5beginEv = comdat any

$__clang_call_terminate = comdat any

$_ZN6dealii6VectorIdEC5Ej = comdat any

$_ZN6dealii6VectorIdED5Ev = comdat any

$_ZNK6dealii6VectorIdE8compressEv = comdat any

$_ZN6dealii6VectorIdE6reinitEjb = comdat any

$_ZN6dealii6VectorIdEaSEd = comdat any

$_ZN6dealii6VectorIdE4swapERS1_ = comdat any

$_ZN6dealii6VectorIdE3endEv = comdat any

$_ZN6dealii6VectorIdEaSERKS1_ = comdat any

$_ZN6dealii6VectorIdEaSERKNS_11BlockVectorIdEE = comdat any

$_ZNK6dealii6VectorIdEclEj = comdat any

$_ZNK6dealii6VectorIdE8norm_sqrEv = comdat any

$_ZNK6dealii6VectorIdE10mean_valueEv = comdat any

$_ZNK6dealii6VectorIdE7l1_normEv = comdat any

$_ZNK6dealii6VectorIdE7l2_normEv = comdat any

$_ZNK6dealii6VectorIdE7lp_normEd = comdat any

$_ZNK6dealii6VectorIdE11linfty_normEv = comdat any

$_ZNK6dealii6VectorIdE8all_zeroEv = comdat any

$_ZNK6dealii6VectorIdE15is_non_negativeEv = comdat any

$_ZN6dealii6VectorIdEclEj = comdat any

$_ZN6dealii6VectorIdEpLERKS1_ = comdat any

$_ZN6dealii6VectorIdE3addERKS1_ = comdat any

$_ZN6dealii6VectorIdEmIERKS1_ = comdat any

$_ZN6dealii6VectorIdE3addEd = comdat any

$_ZN6dealii6VectorIdE3addEdRKS1_ = comdat any

$_ZN6dealii6VectorIdE3addEdRKS1_dS3_ = comdat any

$_ZN6dealii6VectorIdE4saddEdRKS1_ = comdat any

$_ZN6dealii6VectorIdE4saddEddRKS1_ = comdat any

$_ZN6dealii6VectorIdE4saddEddRKS1_dS3_ = comdat any

$_ZN6dealii6VectorIdE4saddEddRKS1_dS3_dS3_ = comdat any

$_ZN6dealii6VectorIdE5scaleEd = comdat any

$_ZN6dealii6VectorIdEmLEd = comdat any

$_ZN6dealii6VectorIdEdVEd = comdat any

$_ZN6dealii6VectorIdE3equEdRKS1_dS3_ = comdat any

$_ZN6dealii6VectorIdE3equEdRKS1_dS3_dS3_ = comdat any

$_ZN6dealii6VectorIdE5ratioERKS1_S3_ = comdat any

$_ZNK6dealii6VectorIdE5printEPKc = comdat any

$_ZNK6dealii6VectorIdE5printERSojbb = comdat any

$_ZNK6dealii6VectorIdE11block_writeERSo = comdat any

$_ZN6dealii6VectorIdE10block_readERSi = comdat any

$_ZNK6dealii6VectorIdE18memory_consumptionEv = comdat any

$_ZN6dealii6VectorIfEC5Ev = comdat any

$_ZN6dealii6VectorIfEC5ERKS1_ = comdat any

$_ZNK6dealii6VectorIfE4sizeEv = comdat any

$_ZNK6dealii6VectorIfE5beginEv = comdat any

$_ZNK6dealii6VectorIfE3endEv = comdat any

$_ZN6dealii6VectorIfE5beginEv = comdat any

$_ZN6dealii6VectorIfEC5Ej = comdat any

$_ZN6dealii6VectorIfED5Ev = comdat any

$_ZNK6dealii6VectorIfE8compressEv = comdat any

$_ZN6dealii6VectorIfE6reinitEjb = comdat any

$_ZN6dealii6VectorIfEaSEf = comdat any

$_ZN6dealii6VectorIfE4swapERS1_ = comdat any

$_ZN6dealii6VectorIfE3endEv = comdat any

$_ZN6dealii6VectorIfEaSERKS1_ = comdat any

$_ZN6dealii6VectorIfEaSERKNS_11BlockVectorIfEE = comdat any

$_ZNK6dealii6VectorIfEclEj = comdat any

$_ZNK6dealii6VectorIfE8norm_sqrEv = comdat any

$_ZNK6dealii6VectorIfE10mean_valueEv = comdat any

$_ZNK6dealii6VectorIfE7l1_normEv = comdat any

$_ZNK6dealii6VectorIfE7l2_normEv = comdat any

$_ZNK6dealii6VectorIfE7lp_normEf = comdat any

$_ZNK6dealii6VectorIfE11linfty_normEv = comdat any

$_ZNK6dealii6VectorIfE8all_zeroEv = comdat any

$_ZNK6dealii6VectorIfE15is_non_negativeEv = comdat any

$_ZN6dealii6VectorIfEclEj = comdat any

$_ZN6dealii6VectorIfEpLERKS1_ = comdat any

$_ZN6dealii6VectorIfE3addERKS1_ = comdat any

$_ZN6dealii6VectorIfEmIERKS1_ = comdat any

$_ZN6dealii6VectorIfE3addEf = comdat any

$_ZN6dealii6VectorIfE3addEfRKS1_ = comdat any

$_ZN6dealii6VectorIfE3addEfRKS1_fS3_ = comdat any

$_ZN6dealii6VectorIfE4saddEfRKS1_ = comdat any

$_ZN6dealii6VectorIfE4saddEffRKS1_ = comdat any

$_ZN6dealii6VectorIfE4saddEffRKS1_fS3_ = comdat any

$_ZN6dealii6VectorIfE4saddEffRKS1_fS3_fS3_ = comdat any

$_ZN6dealii6VectorIfE5scaleEf = comdat any

$_ZN6dealii6VectorIfEmLEf = comdat any

$_ZN6dealii6VectorIfEdVEf = comdat any

$_ZN6dealii6VectorIfE3equEfRKS1_fS3_ = comdat any

$_ZN6dealii6VectorIfE3equEfRKS1_fS3_fS3_ = comdat any

$_ZN6dealii6VectorIfE5ratioERKS1_S3_ = comdat any

$_ZNK6dealii6VectorIfE5printEPKc = comdat any

$_ZNK6dealii6VectorIfE5printERSojbb = comdat any

$_ZNK6dealii6VectorIfE11block_writeERSo = comdat any

$_ZN6dealii6VectorIfE10block_readERSi = comdat any

$_ZNK6dealii6VectorIfE18memory_consumptionEv = comdat any

$_ZN6dealii6VectorIeEC5Ev = comdat any

$_ZN6dealii6VectorIeEC5ERKS1_ = comdat any

$_ZNK6dealii6VectorIeE4sizeEv = comdat any

$_ZNK6dealii6VectorIeE5beginEv = comdat any

$_ZNK6dealii6VectorIeE3endEv = comdat any

$_ZN6dealii6VectorIeE5beginEv = comdat any

$_ZN6dealii6VectorIeEC5Ej = comdat any

$_ZN6dealii6VectorIeED5Ev = comdat any

$_ZNK6dealii6VectorIeE8compressEv = comdat any

$_ZN6dealii6VectorIeE6reinitEjb = comdat any

$_ZN6dealii6VectorIeEaSEe = comdat any

$_ZN6dealii6VectorIeE4swapERS1_ = comdat any

$_ZN6dealii6VectorIeE3endEv = comdat any

$_ZN6dealii6VectorIeEaSERKS1_ = comdat any

$_ZN6dealii6VectorIeEaSERKNS_11BlockVectorIeEE = comdat any

$_ZNK6dealii6VectorIeEclEj = comdat any

$_ZNK6dealii6VectorIeE8norm_sqrEv = comdat any

$_ZNK6dealii6VectorIeE10mean_valueEv = comdat any

$_ZNK6dealii6VectorIeE7l1_normEv = comdat any

$_ZNK6dealii6VectorIeE7l2_normEv = comdat any

$_ZNK6dealii6VectorIeE7lp_normEe = comdat any

$_ZNK6dealii6VectorIeE11linfty_normEv = comdat any

$_ZNK6dealii6VectorIeE8all_zeroEv = comdat any

$_ZNK6dealii6VectorIeE15is_non_negativeEv = comdat any

$_ZN6dealii6VectorIeEclEj = comdat any

$_ZN6dealii6VectorIeEpLERKS1_ = comdat any

$_ZN6dealii6VectorIeE3addERKS1_ = comdat any

$_ZN6dealii6VectorIeEmIERKS1_ = comdat any

$_ZN6dealii6VectorIeE3addEe = comdat any

$_ZN6dealii6VectorIeE3addEeRKS1_ = comdat any

$_ZN6dealii6VectorIeE3addEeRKS1_eS3_ = comdat any

$_ZN6dealii6VectorIeE4saddEeRKS1_ = comdat any

$_ZN6dealii6VectorIeE4saddEeeRKS1_ = comdat any

$_ZN6dealii6VectorIeE4saddEeeRKS1_eS3_ = comdat any

$_ZN6dealii6VectorIeE4saddEeeRKS1_eS3_eS3_ = comdat any

$_ZN6dealii6VectorIeE5scaleEe = comdat any

$_ZN6dealii6VectorIeEmLEe = comdat any

$_ZN6dealii6VectorIeEdVEe = comdat any

$_ZN6dealii6VectorIeE3equEeRKS1_eS3_ = comdat any

$_ZN6dealii6VectorIeE3equEeRKS1_eS3_eS3_ = comdat any

$_ZN6dealii6VectorIeE5ratioERKS1_S3_ = comdat any

$_ZNK6dealii6VectorIeE5printEPKc = comdat any

$_ZNK6dealii6VectorIeE5printERSojbb = comdat any

$_ZNK6dealii6VectorIeE11block_writeERSo = comdat any

$_ZN6dealii6VectorIeE10block_readERSi = comdat any

$_ZNK6dealii6VectorIeE18memory_consumptionEv = comdat any

$_ZNK6dealii6VectorIdEeqIdEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIdEmlIdEEdRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIdE6reinitIdEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorIdE3equIdEEvdRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIdE5scaleIdEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIdEeqIfEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIdEmlIfEEdRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIdE6reinitIfEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorIdE3equIfEEvdRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIdE5scaleIfEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIdEeqIeEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIdEmlIeEEdRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIdE6reinitIeEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorIdE3equIeEEvdRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIdE5scaleIeEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIfEeqIdEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIfEmlIdEEfRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIfE6reinitIdEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorIfE3equIdEEvfRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIfE5scaleIdEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIfEeqIfEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIfEmlIfEEfRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIfE6reinitIfEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorIfE3equIfEEvfRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIfE5scaleIfEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIfEeqIeEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIfEmlIeEEfRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIfE6reinitIeEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorIfE3equIeEEvfRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIfE5scaleIeEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIeEeqIdEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIeEmlIdEEeRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIeE6reinitIdEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorIeE3equIdEEveRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIeE5scaleIdEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIeEeqIfEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIeEmlIfEEeRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIeE6reinitIfEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorIeE3equIfEEveRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIeE5scaleIfEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIeEeqIeEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorIeEmlIeEEeRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIeE6reinitIeEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorIeE3equIeEEveRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIeE5scaleIeEEvRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIdEEC5Ev = comdat any

$_ZN6dealii6VectorISt7complexIdEEC5ERKS3_ = comdat any

$_ZNK6dealii6VectorISt7complexIdEE4sizeEv = comdat any

$_ZNK6dealii6VectorISt7complexIdEE5beginEv = comdat any

$_ZNK6dealii6VectorISt7complexIdEE3endEv = comdat any

$_ZN6dealii6VectorISt7complexIdEE5beginEv = comdat any

$_ZN6dealii6VectorISt7complexIdEEC5Ej = comdat any

$_ZN6dealii6VectorISt7complexIdEED5Ev = comdat any

$_ZNK6dealii6VectorISt7complexIdEE8compressEv = comdat any

$_ZN6dealii6VectorISt7complexIdEE6reinitEjb = comdat any

$_ZN6dealii6VectorISt7complexIdEEaSES2_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE4swapERS3_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE3endEv = comdat any

$_ZN6dealii6VectorISt7complexIdEEaSERKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIdEEaSERKNS_11BlockVectorIS2_EE = comdat any

$_ZNK6dealii6VectorISt7complexIdEEclEj = comdat any

$_ZNK6dealii6VectorISt7complexIdEE8norm_sqrEv = comdat any

$_ZNK6dealii6VectorISt7complexIdEE10mean_valueEv = comdat any

$_ZNK6dealii6VectorISt7complexIdEE7l1_normEv = comdat any

$_ZNK6dealii6VectorISt7complexIdEE7l2_normEv = comdat any

$_ZNK6dealii6VectorISt7complexIdEE7lp_normEd = comdat any

$_ZNK6dealii6VectorISt7complexIdEE11linfty_normEv = comdat any

$_ZNK6dealii6VectorISt7complexIdEE8all_zeroEv = comdat any

$_ZNK6dealii6VectorISt7complexIdEE15is_non_negativeEv = comdat any

$_ZN6dealii6VectorISt7complexIdEEclEj = comdat any

$_ZN6dealii6VectorISt7complexIdEEpLERKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE3addERKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIdEEmIERKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE3addES2_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE3addES2_RKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE3addES2_RKS3_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE4saddES2_RKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE4saddES2_S2_RKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE4saddES2_S2_RKS3_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE4saddES2_S2_RKS3_S2_S5_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE5scaleES2_ = comdat any

$_ZN6dealii6VectorISt7complexIdEEmLES2_ = comdat any

$_ZN6dealii6VectorISt7complexIdEEdVES2_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE3equES2_RKS3_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE3equES2_RKS3_S2_S5_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIdEE5ratioERKS3_S5_ = comdat any

$_ZNK6dealii6VectorISt7complexIdEE5printEPKc = comdat any

$_ZNK6dealii6VectorISt7complexIdEE5printERSojbb = comdat any

$_ZNK6dealii6VectorISt7complexIdEE11block_writeERSo = comdat any

$_ZN6dealii6VectorISt7complexIdEE10block_readERSi = comdat any

$_ZNK6dealii6VectorISt7complexIdEE18memory_consumptionEv = comdat any

$_ZN6dealii6VectorISt7complexIfEEC5Ev = comdat any

$_ZN6dealii6VectorISt7complexIfEEC5ERKS3_ = comdat any

$_ZNK6dealii6VectorISt7complexIfEE4sizeEv = comdat any

$_ZNK6dealii6VectorISt7complexIfEE5beginEv = comdat any

$_ZNK6dealii6VectorISt7complexIfEE3endEv = comdat any

$_ZN6dealii6VectorISt7complexIfEE5beginEv = comdat any

$_ZN6dealii6VectorISt7complexIfEEC5Ej = comdat any

$_ZN6dealii6VectorISt7complexIfEED5Ev = comdat any

$_ZNK6dealii6VectorISt7complexIfEE8compressEv = comdat any

$_ZN6dealii6VectorISt7complexIfEE6reinitEjb = comdat any

$_ZN6dealii6VectorISt7complexIfEEaSES2_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE4swapERS3_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE3endEv = comdat any

$_ZN6dealii6VectorISt7complexIfEEaSERKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIfEEaSERKNS_11BlockVectorIS2_EE = comdat any

$_ZNK6dealii6VectorISt7complexIfEEclEj = comdat any

$_ZNK6dealii6VectorISt7complexIfEE8norm_sqrEv = comdat any

$_ZNK6dealii6VectorISt7complexIfEE10mean_valueEv = comdat any

$_ZNK6dealii6VectorISt7complexIfEE7l1_normEv = comdat any

$_ZNK6dealii6VectorISt7complexIfEE7l2_normEv = comdat any

$_ZNK6dealii6VectorISt7complexIfEE7lp_normEf = comdat any

$_ZNK6dealii6VectorISt7complexIfEE11linfty_normEv = comdat any

$_ZNK6dealii6VectorISt7complexIfEE8all_zeroEv = comdat any

$_ZNK6dealii6VectorISt7complexIfEE15is_non_negativeEv = comdat any

$_ZN6dealii6VectorISt7complexIfEEclEj = comdat any

$_ZN6dealii6VectorISt7complexIfEEpLERKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE3addERKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIfEEmIERKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE3addES2_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE3addES2_RKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE3addES2_RKS3_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE4saddES2_RKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE4saddES2_S2_RKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE4saddES2_S2_RKS3_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE4saddES2_S2_RKS3_S2_S5_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE5scaleES2_ = comdat any

$_ZN6dealii6VectorISt7complexIfEEmLES2_ = comdat any

$_ZN6dealii6VectorISt7complexIfEEdVES2_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE3equES2_RKS3_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE3equES2_RKS3_S2_S5_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIfEE5ratioERKS3_S5_ = comdat any

$_ZNK6dealii6VectorISt7complexIfEE5printEPKc = comdat any

$_ZNK6dealii6VectorISt7complexIfEE5printERSojbb = comdat any

$_ZNK6dealii6VectorISt7complexIfEE11block_writeERSo = comdat any

$_ZN6dealii6VectorISt7complexIfEE10block_readERSi = comdat any

$_ZNK6dealii6VectorISt7complexIfEE18memory_consumptionEv = comdat any

$_ZN6dealii6VectorISt7complexIeEEC5Ev = comdat any

$_ZN6dealii6VectorISt7complexIeEEC5ERKS3_ = comdat any

$_ZNK6dealii6VectorISt7complexIeEE4sizeEv = comdat any

$_ZNK6dealii6VectorISt7complexIeEE5beginEv = comdat any

$_ZNK6dealii6VectorISt7complexIeEE3endEv = comdat any

$_ZN6dealii6VectorISt7complexIeEE5beginEv = comdat any

$_ZN6dealii6VectorISt7complexIeEEC5Ej = comdat any

$_ZN6dealii6VectorISt7complexIeEED5Ev = comdat any

$_ZNK6dealii6VectorISt7complexIeEE8compressEv = comdat any

$_ZN6dealii6VectorISt7complexIeEE6reinitEjb = comdat any

$_ZN6dealii6VectorISt7complexIeEEaSES2_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE4swapERS3_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE3endEv = comdat any

$_ZN6dealii6VectorISt7complexIeEEaSERKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIeEEaSERKNS_11BlockVectorIS2_EE = comdat any

$_ZNK6dealii6VectorISt7complexIeEEclEj = comdat any

$_ZNK6dealii6VectorISt7complexIeEE8norm_sqrEv = comdat any

$_ZNK6dealii6VectorISt7complexIeEE10mean_valueEv = comdat any

$_ZNK6dealii6VectorISt7complexIeEE7l1_normEv = comdat any

$_ZNK6dealii6VectorISt7complexIeEE7l2_normEv = comdat any

$_ZNK6dealii6VectorISt7complexIeEE7lp_normEe = comdat any

$_ZNK6dealii6VectorISt7complexIeEE11linfty_normEv = comdat any

$_ZNK6dealii6VectorISt7complexIeEE8all_zeroEv = comdat any

$_ZNK6dealii6VectorISt7complexIeEE15is_non_negativeEv = comdat any

$_ZN6dealii6VectorISt7complexIeEEclEj = comdat any

$_ZN6dealii6VectorISt7complexIeEEpLERKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE3addERKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIeEEmIERKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE3addES2_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE3addES2_RKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE3addES2_RKS3_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE4saddES2_RKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE4saddES2_S2_RKS3_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE4saddES2_S2_RKS3_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE4saddES2_S2_RKS3_S2_S5_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE5scaleES2_ = comdat any

$_ZN6dealii6VectorISt7complexIeEEmLES2_ = comdat any

$_ZN6dealii6VectorISt7complexIeEEdVES2_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE3equES2_RKS3_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE3equES2_RKS3_S2_S5_S2_S5_ = comdat any

$_ZN6dealii6VectorISt7complexIeEE5ratioERKS3_S5_ = comdat any

$_ZNK6dealii6VectorISt7complexIeEE5printEPKc = comdat any

$_ZNK6dealii6VectorISt7complexIeEE5printERSojbb = comdat any

$_ZNK6dealii6VectorISt7complexIeEE11block_writeERSo = comdat any

$_ZN6dealii6VectorISt7complexIeEE10block_readERSi = comdat any

$_ZNK6dealii6VectorISt7complexIeEE18memory_consumptionEv = comdat any

$_ZNK6dealii6VectorISt7complexIdEEeqIS2_EEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIdEEmlIS2_EES2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIdEE6reinitIS2_EEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorISt7complexIdEE3equIS2_EEvS2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIdEE5scaleIS2_EEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIdEEeqIS1_IfEEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIdEEmlIS1_IfEEES2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIdEE6reinitIS1_IfEEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorISt7complexIdEE3equIS1_IfEEEvS2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIdEE5scaleIS1_IfEEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIdEEeqIS1_IeEEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIdEEmlIS1_IeEEES2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIdEE6reinitIS1_IeEEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorISt7complexIdEE3equIS1_IeEEEvS2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIdEE5scaleIS1_IeEEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIfEEeqIS1_IdEEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIfEEmlIS1_IdEEES2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIfEE6reinitIS1_IdEEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorISt7complexIfEE3equIS1_IdEEEvS2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIfEE5scaleIS1_IdEEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIfEEeqIS2_EEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIfEEmlIS2_EES2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIfEE6reinitIS2_EEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorISt7complexIfEE3equIS2_EEvS2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIfEE5scaleIS2_EEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIfEEeqIS1_IeEEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIfEEmlIS1_IeEEES2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIfEE6reinitIS1_IeEEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorISt7complexIfEE3equIS1_IeEEEvS2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIfEE5scaleIS1_IeEEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIeEEeqIS1_IdEEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIeEEmlIS1_IdEEES2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIeEE6reinitIS1_IdEEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorISt7complexIeEE3equIS1_IdEEEvS2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIeEE5scaleIS1_IdEEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIeEEeqIS1_IfEEEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIeEEmlIS1_IfEEES2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIeEE6reinitIS1_IfEEEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorISt7complexIeEE3equIS1_IfEEEvS2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIeEE5scaleIS1_IfEEEvRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIeEEeqIS2_EEbRKNS0_IT_EE = comdat any

$_ZNK6dealii6VectorISt7complexIeEEmlIS2_EES2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIeEE6reinitIS2_EEvRKNS0_IT_EEb = comdat any

$_ZN6dealii6VectorISt7complexIeEE3equIS2_EEvS2_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIeEE5scaleIS2_EEvRKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIdEC5IfEERKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIfEC5IdEERKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIeEC5IdEERKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIdEC5IeEERKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIeEC5IfEERKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIfEC5IeEERKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIdEEC5IS1_IfEEERKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIfEEC5IS1_IdEEERKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIeEEC5IS1_IdEEERKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIdEEC5IS1_IeEEERKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIeEEC5IS1_IfEEERKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIfEEC5IS1_IeEEERKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIdEaSIfEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIfEaSIdEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIeEaSIdEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIdEaSIeEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIeEaSIfEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorIfEaSIeEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIdEEaSIS1_IfEEERS3_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIfEEaSIS1_IdEEERS3_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIeEEaSIS1_IdEEERS3_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIdEEaSIS1_IeEEERS3_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIeEEaSIS1_IfEEERS3_RKNS0_IT_EE = comdat any

$_ZN6dealii6VectorISt7complexIfEEaSIS1_IeEEERS3_RKNS0_IT_EE = comdat any

$_ZN6dealii18StandardExceptions5ExcIOD0Ev = comdat any

$_ZTVN6dealii6VectorIdEE = comdat any

$_ZTVN6dealii6VectorIfEE = comdat any

$_ZTVN6dealii6VectorIeEE = comdat any

$_ZTVN6dealii6VectorISt7complexIdEEE = comdat any

$_ZTVN6dealii6VectorISt7complexIfEEE = comdat any

$_ZTVN6dealii6VectorISt7complexIeEEE = comdat any

$_ZTSN6dealii6VectorIdEE = comdat any

$_ZTIN6dealii6VectorIdEE = comdat any

$_ZTSN6dealii6VectorIfEE = comdat any

$_ZTIN6dealii6VectorIfEE = comdat any

$_ZTSN6dealii6VectorIeEE = comdat any

$_ZTIN6dealii6VectorIeEE = comdat any

$_ZTSN6dealii6VectorISt7complexIdEEE = comdat any

$_ZTIN6dealii6VectorISt7complexIdEEE = comdat any

$_ZTSN6dealii6VectorISt7complexIfEEE = comdat any

$_ZTIN6dealii6VectorISt7complexIfEEE = comdat any

$_ZTSN6dealii6VectorISt7complexIeEEE = comdat any

$_ZTIN6dealii6VectorISt7complexIeEEE = comdat any

$_ZTVN6dealii18StandardExceptions5ExcIOE = comdat any

$_ZTSN6dealii18StandardExceptions5ExcIOE = comdat any

$_ZTIN6dealii18StandardExceptions5ExcIOE = comdat any

@_ZTVN6dealii6VectorIdEE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii6VectorIdEE, ptr @_ZN6dealii6VectorIdED2Ev, ptr @_ZN6dealii6VectorIdED0Ev, ptr @_ZN6dealii6VectorIdE6reinitEjb, ptr @_ZN6dealii6VectorIdE4swapERS1_] }, comdat, align 8
@.str.1 = private unnamed_addr constant [31 x i8] c"include/lac/vector.templates.h\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"ExcIO()\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"\0A[\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"c=='['\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"c==']'\00", align 1
@_ZTVN6dealii6VectorIfEE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii6VectorIfEE, ptr @_ZN6dealii6VectorIfED2Ev, ptr @_ZN6dealii6VectorIfED0Ev, ptr @_ZN6dealii6VectorIfE6reinitEjb, ptr @_ZN6dealii6VectorIfE4swapERS1_] }, comdat, align 8
@_ZTVN6dealii6VectorIeEE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii6VectorIeEE, ptr @_ZN6dealii6VectorIeED2Ev, ptr @_ZN6dealii6VectorIeED0Ev, ptr @_ZN6dealii6VectorIeE6reinitEjb, ptr @_ZN6dealii6VectorIeE4swapERS1_] }, comdat, align 8
@_ZTVN6dealii6VectorISt7complexIdEEE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii6VectorISt7complexIdEEE, ptr @_ZN6dealii6VectorISt7complexIdEED2Ev, ptr @_ZN6dealii6VectorISt7complexIdEED0Ev, ptr @_ZN6dealii6VectorISt7complexIdEE6reinitEjb, ptr @_ZN6dealii6VectorISt7complexIdEE4swapERS3_] }, comdat, align 8
@_ZTVN6dealii6VectorISt7complexIfEEE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii6VectorISt7complexIfEEE, ptr @_ZN6dealii6VectorISt7complexIfEED2Ev, ptr @_ZN6dealii6VectorISt7complexIfEED0Ev, ptr @_ZN6dealii6VectorISt7complexIfEE6reinitEjb, ptr @_ZN6dealii6VectorISt7complexIfEE4swapERS3_] }, comdat, align 8
@_ZTVN6dealii6VectorISt7complexIeEEE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii6VectorISt7complexIeEEE, ptr @_ZN6dealii6VectorISt7complexIeEED2Ev, ptr @_ZN6dealii6VectorISt7complexIeEED0Ev, ptr @_ZN6dealii6VectorISt7complexIeEE6reinitEjb, ptr @_ZN6dealii6VectorISt7complexIeEE4swapERS3_] }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global ptr
@_ZTSN6dealii6VectorIdEE = weak_odr dso_local constant [20 x i8] c"N6dealii6VectorIdEE\00", comdat, align 1
@_ZTIN6dealii11SubscriptorE = external constant ptr
@_ZTIN6dealii6VectorIdEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii6VectorIdEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTSN6dealii6VectorIfEE = weak_odr dso_local constant [20 x i8] c"N6dealii6VectorIfEE\00", comdat, align 1
@_ZTIN6dealii6VectorIfEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii6VectorIfEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTSN6dealii6VectorIeEE = weak_odr dso_local constant [20 x i8] c"N6dealii6VectorIeEE\00", comdat, align 1
@_ZTIN6dealii6VectorIeEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii6VectorIeEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTSN6dealii6VectorISt7complexIdEEE = weak_odr dso_local constant [32 x i8] c"N6dealii6VectorISt7complexIdEEE\00", comdat, align 1
@_ZTIN6dealii6VectorISt7complexIdEEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii6VectorISt7complexIdEEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTSN6dealii6VectorISt7complexIfEEE = weak_odr dso_local constant [32 x i8] c"N6dealii6VectorISt7complexIfEEE\00", comdat, align 1
@_ZTIN6dealii6VectorISt7complexIfEEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii6VectorISt7complexIfEEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTSN6dealii6VectorISt7complexIeEEE = weak_odr dso_local constant [32 x i8] c"N6dealii6VectorISt7complexIeEEE\00", comdat, align 1
@_ZTIN6dealii6VectorISt7complexIeEEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii6VectorISt7complexIeEEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTVN6dealii18StandardExceptions5ExcIOE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii18StandardExceptions5ExcIOD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZTSN6dealii18StandardExceptions5ExcIOE = linkonce_odr dso_local constant [36 x i8] c"N6dealii18StandardExceptions5ExcIOE\00", comdat, align 1
@_ZTIN6dealii13ExceptionBaseE = external constant ptr
@_ZTIN6dealii18StandardExceptions5ExcIOE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii18StandardExceptions5ExcIOE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@.str.10 = private unnamed_addr constant [7 x i8] c" %5.2f\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c" %5.2f+%5.2fi\00", align 1

@_ZN6dealii6VectorIdEC1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii6VectorIdEC2Ev
@_ZN6dealii6VectorIdEC1ERKS1_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorIdEC2ERKS1_
@_ZN6dealii6VectorIdEC1Ej = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii6VectorIdEC2Ej
@_ZN6dealii6VectorIdED1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii6VectorIdED2Ev
@_ZN6dealii6VectorIfEC1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii6VectorIfEC2Ev
@_ZN6dealii6VectorIfEC1ERKS1_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorIfEC2ERKS1_
@_ZN6dealii6VectorIfEC1Ej = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii6VectorIfEC2Ej
@_ZN6dealii6VectorIfED1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii6VectorIfED2Ev
@_ZN6dealii6VectorIeEC1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii6VectorIeEC2Ev
@_ZN6dealii6VectorIeEC1ERKS1_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorIeEC2ERKS1_
@_ZN6dealii6VectorIeEC1Ej = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii6VectorIeEC2Ej
@_ZN6dealii6VectorIeED1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii6VectorIeED2Ev
@_ZN6dealii6VectorISt7complexIdEEC1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii6VectorISt7complexIdEEC2Ev
@_ZN6dealii6VectorISt7complexIdEEC1ERKS3_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorISt7complexIdEEC2ERKS3_
@_ZN6dealii6VectorISt7complexIdEEC1Ej = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii6VectorISt7complexIdEEC2Ej
@_ZN6dealii6VectorISt7complexIdEED1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii6VectorISt7complexIdEED2Ev
@_ZN6dealii6VectorISt7complexIfEEC1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii6VectorISt7complexIfEEC2Ev
@_ZN6dealii6VectorISt7complexIfEEC1ERKS3_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorISt7complexIfEEC2ERKS3_
@_ZN6dealii6VectorISt7complexIfEEC1Ej = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii6VectorISt7complexIfEEC2Ej
@_ZN6dealii6VectorISt7complexIfEED1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii6VectorISt7complexIfEED2Ev
@_ZN6dealii6VectorISt7complexIeEEC1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii6VectorISt7complexIeEEC2Ev
@_ZN6dealii6VectorISt7complexIeEEC1ERKS3_ = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorISt7complexIeEEC2ERKS3_
@_ZN6dealii6VectorISt7complexIeEEC1Ej = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii6VectorISt7complexIeEEC2Ej
@_ZN6dealii6VectorISt7complexIeEED1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii6VectorISt7complexIeEED2Ev
@_ZN6dealii6VectorIdEC1IfEERKNS0_IT_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorIdEC2IfEERKNS0_IT_EE
@_ZN6dealii6VectorIfEC1IdEERKNS0_IT_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorIfEC2IdEERKNS0_IT_EE
@_ZN6dealii6VectorIeEC1IdEERKNS0_IT_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorIeEC2IdEERKNS0_IT_EE
@_ZN6dealii6VectorIdEC1IeEERKNS0_IT_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorIdEC2IeEERKNS0_IT_EE
@_ZN6dealii6VectorIeEC1IfEERKNS0_IT_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorIeEC2IfEERKNS0_IT_EE
@_ZN6dealii6VectorIfEC1IeEERKNS0_IT_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorIfEC2IeEERKNS0_IT_EE
@_ZN6dealii6VectorISt7complexIdEEC1IS1_IfEEERKNS0_IT_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorISt7complexIdEEC2IS1_IfEEERKNS0_IT_EE
@_ZN6dealii6VectorISt7complexIfEEC1IS1_IdEEERKNS0_IT_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorISt7complexIfEEC2IS1_IdEEERKNS0_IT_EE
@_ZN6dealii6VectorISt7complexIeEEC1IS1_IdEEERKNS0_IT_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorISt7complexIeEEC2IS1_IdEEERKNS0_IT_EE
@_ZN6dealii6VectorISt7complexIdEEC1IS1_IeEEERKNS0_IT_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorISt7complexIdEEC2IS1_IeEEERKNS0_IT_EE
@_ZN6dealii6VectorISt7complexIeEEC1IS1_IfEEERKNS0_IT_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorISt7complexIeEEC2IS1_IfEEERKNS0_IT_EE
@_ZN6dealii6VectorISt7complexIfEEC1IS1_IeEEERKNS0_IT_EE = weak_odr dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN6dealii6VectorISt7complexIfEEC2IS1_IeEEERKNS0_IT_EE

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdEC2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorIdEC5Ev) align 2 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72)) unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorIdEC5ERKS1_) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  store i32 %5, ptr %3, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  %7 = load i32, ptr %4, align 8, !tbaa !8
  store i32 %7, ptr %6, align 4, !tbaa !23
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  store ptr null, ptr %8, align 8, !tbaa !24
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %2
  %11 = zext i32 %7 to i64
  %12 = shl nuw nsw i64 %11, 3
  %13 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %12) #22
          to label %14 unwind label %23

14:                                               ; preds = %10
  store ptr %13, ptr %8, align 8, !tbaa !24
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !24
  %17 = icmp ugt i32 %7, 1
  br i1 %17, label %18, label %19, !prof !25

18:                                               ; preds = %14
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %13, ptr align 8 %16, i64 %12, i1 false)
  br label %25

19:                                               ; preds = %14
  %20 = icmp eq i32 %7, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %19
  %22 = load double, ptr %16, align 8, !tbaa !26
  store double %22, ptr %13, align 8, !tbaa !26
  br label %25

23:                                               ; preds = %10
  %24 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %26 unwind label %27

25:                                               ; preds = %21, %19, %18, %2
  ret void

26:                                               ; preds = %23
  resume { ptr, i32 } %24

27:                                               ; preds = %23
  %28 = landingpad { ptr, i32 }
          catch ptr null
  %29 = extractvalue { ptr, i32 } %28, 0
  tail call void @__clang_call_terminate(ptr %29) #23
  unreachable
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii6VectorIdE4sizeEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !8
  ret i32 %3
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii6VectorIdE5beginEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !24
  ret ptr %3
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii6VectorIdE3endEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !24
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds double, ptr %3, i64 %6
  ret ptr %7
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZN6dealii6VectorIdE5beginEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !24
  ret ptr %3
}

declare void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72)) unnamed_addr #1

; Function Attrs: noinline noreturn nounwind sspstrong uwtable
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #5 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #24
  tail call void @_ZSt9terminatev() #23
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdEC2Ej(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) unnamed_addr #0 comdat($_ZN6dealii6VectorIdEC5Ej) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = zext i32 %1 to i64
  %7 = shl nuw nsw i64 %6, 3
  %8 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %7) #22
          to label %9 unwind label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  store ptr %8, ptr %10, align 8, !tbaa !24
  store i32 %1, ptr %11, align 4, !tbaa !23
  store i32 %1, ptr %3, align 8, !tbaa !8
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %8, i8 0, i64 %7, i1 false), !tbaa !26
  br label %12

12:                                               ; preds = %2, %9
  ret void

13:                                               ; preds = %5
  %14 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %15 unwind label %16

15:                                               ; preds = %13
  resume { ptr, i32 } %14

16:                                               ; preds = %13
  %17 = landingpad { ptr, i32 }
          catch ptr null
  %18 = extractvalue { ptr, i32 } %17, 0
  tail call void @__clang_call_terminate(ptr %18) #23
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorIdED5Ev) align 2 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !24
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #25
  store ptr null, ptr %2, align 8, !tbaa !24
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #6

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorIdED5Ev) align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !24
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #25
  store ptr null, ptr %2, align 8, !tbaa !24
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  resume { ptr, i32 } %9
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorIdE8compressEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE6reinitEjb(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !24
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(ptr noundef nonnull %7) #25
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  br label %32

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !23
  %15 = icmp ult i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !24
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %18) #25
  br label %21

21:                                               ; preds = %20, %16
  %22 = zext i32 %1 to i64
  %23 = shl nuw nsw i64 %22, 3
  %24 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %23) #22
  store ptr %24, ptr %17, align 8, !tbaa !24
  store i32 %1, ptr %13, align 4, !tbaa !23
  br label %25

25:                                               ; preds = %21, %12
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  store i32 %1, ptr %26, align 8, !tbaa !8
  br i1 %2, label %32, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !24
  %30 = zext i32 %1 to i64
  %31 = shl nuw nsw i64 %30, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %29, i8 0, i64 %31, i1 false), !tbaa !26
  br label %32

32:                                               ; preds = %27, %10, %25
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSEd(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds double, ptr %8, i64 %9
  %11 = add nuw nsw i64 %9, 2305843009213693951
  %12 = and i64 %11, 2305843009213693951
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp ult i64 %12, 15
  br i1 %14, label %38, label %15

15:                                               ; preds = %6
  %16 = and i64 %13, 4611686018427387888
  %17 = shl i64 %16, 3
  %18 = getelementptr i8, ptr %8, i64 %17
  %19 = insertelement <4 x double> poison, double %1, i64 0
  %20 = shufflevector <4 x double> %19, <4 x double> poison, <4 x i32> zeroinitializer
  %21 = insertelement <4 x double> poison, double %1, i64 0
  %22 = shufflevector <4 x double> %21, <4 x double> poison, <4 x i32> zeroinitializer
  %23 = insertelement <4 x double> poison, double %1, i64 0
  %24 = shufflevector <4 x double> %23, <4 x double> poison, <4 x i32> zeroinitializer
  %25 = insertelement <4 x double> poison, double %1, i64 0
  %26 = shufflevector <4 x double> %25, <4 x double> poison, <4 x i32> zeroinitializer
  br label %27

27:                                               ; preds = %27, %15
  %28 = phi i64 [ 0, %15 ], [ %34, %27 ]
  %29 = shl i64 %28, 3
  %30 = getelementptr i8, ptr %8, i64 %29
  store <4 x double> %20, ptr %30, align 8, !tbaa !26
  %31 = getelementptr double, ptr %30, i64 4
  store <4 x double> %22, ptr %31, align 8, !tbaa !26
  %32 = getelementptr double, ptr %30, i64 8
  store <4 x double> %24, ptr %32, align 8, !tbaa !26
  %33 = getelementptr double, ptr %30, i64 12
  store <4 x double> %26, ptr %33, align 8, !tbaa !26
  %34 = add nuw i64 %28, 16
  %35 = icmp eq i64 %34, %16
  br i1 %35, label %36, label %27, !llvm.loop !28

36:                                               ; preds = %27
  %37 = icmp eq i64 %13, %16
  br i1 %37, label %44, label %38

38:                                               ; preds = %6, %36
  %39 = phi ptr [ %8, %6 ], [ %18, %36 ]
  br label %40

40:                                               ; preds = %38, %40
  %41 = phi ptr [ %42, %40 ], [ %39, %38 ]
  store double %1, ptr %41, align 8, !tbaa !26
  %42 = getelementptr inbounds double, ptr %41, i64 1
  %43 = icmp eq ptr %42, %10
  br i1 %43, label %44, label %40, !llvm.loop !31

44:                                               ; preds = %40, %36, %2
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE4swapERS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !32
  %6 = load i32, ptr %4, align 8, !tbaa !32
  store i32 %6, ptr %3, align 8, !tbaa !32
  store i32 %5, ptr %4, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 2
  %9 = load i32, ptr %7, align 4, !tbaa !32
  %10 = load i32, ptr %8, align 4, !tbaa !32
  store i32 %10, ptr %7, align 4, !tbaa !32
  store i32 %9, ptr %8, align 4, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %11, align 8, !tbaa !33
  %14 = load ptr, ptr %12, align 8, !tbaa !33
  store ptr %14, ptr %11, align 8, !tbaa !33
  store ptr %13, ptr %12, align 8, !tbaa !33
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZN6dealii6VectorIdE3endEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !24
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds double, ptr %3, i64 %6
  ret ptr %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !8
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !24
  %19 = load i32, ptr %3, align 8, !tbaa !8
  %20 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !24
  %22 = icmp ugt i32 %19, 1
  br i1 %22, label %23, label %26, !prof !25

23:                                               ; preds = %16
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %21, ptr align 8 %18, i64 %25, i1 false)
  br label %30

26:                                               ; preds = %16
  %27 = icmp eq i32 %19, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = load double, ptr %18, align 8, !tbaa !26
  store double %29, ptr %21, align 8, !tbaa !26
  br label %30

30:                                               ; preds = %28, %26, %23, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKNS_11BlockVectorIdEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !34
  %6 = zext i32 %5 to i64
  %7 = load ptr, ptr %4, align 8, !tbaa !40
  %8 = getelementptr inbounds i32, ptr %7, i64 %6
  %9 = load i32, ptr %8, align 4, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !8
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = load ptr, ptr %0, align 8, !tbaa !5
  %15 = getelementptr inbounds ptr, ptr %14, i64 2
  %16 = load ptr, ptr %15, align 8
  tail call void %16(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %9, i1 noundef zeroext true)
  %17 = load i32, ptr %3, align 8, !tbaa !34
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi i32 [ %17, %13 ], [ %5, %2 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %102, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !41
  %24 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = ptrtoint ptr %25 to i64
  %27 = zext i32 %19 to i64
  br label %28

28:                                               ; preds = %21, %103
  %29 = phi i64 [ 0, %21 ], [ %105, %103 ]
  %30 = phi i32 [ 0, %21 ], [ %104, %103 ]
  %31 = getelementptr inbounds %"class.dealii::Vector", ptr %23, i64 %29, i32 1
  %32 = load i32, ptr %31, align 8, !tbaa !8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %103, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.dealii::Vector", ptr %23, i64 %29, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !24
  %37 = ptrtoint ptr %36 to i64
  %38 = zext i32 %32 to i64
  %39 = icmp ult i32 %32, 20
  br i1 %39, label %78, label %40

40:                                               ; preds = %34
  %41 = add nsw i64 %38, -1
  %42 = trunc i64 %41 to i32
  %43 = xor i32 %30, -1
  %44 = icmp ult i32 %43, %42
  %45 = icmp ugt i64 %41, 4294967295
  %46 = or i1 %44, %45
  br i1 %46, label %78, label %47

47:                                               ; preds = %40
  %48 = zext i32 %30 to i64
  %49 = shl nuw nsw i64 %48, 3
  %50 = add i64 %49, %26
  %51 = sub i64 %50, %37
  %52 = icmp ult i64 %51, 128
  br i1 %52, label %78, label %53

53:                                               ; preds = %47
  %54 = and i64 %38, 4294967280
  %55 = trunc i64 %54 to i32
  %56 = add i32 %30, %55
  br label %57

57:                                               ; preds = %57, %53
  %58 = phi i64 [ 0, %53 ], [ %74, %57 ]
  %59 = trunc i64 %58 to i32
  %60 = add i32 %30, %59
  %61 = getelementptr inbounds double, ptr %36, i64 %58
  %62 = load <4 x double>, ptr %61, align 8, !tbaa !26
  %63 = getelementptr inbounds double, ptr %61, i64 4
  %64 = load <4 x double>, ptr %63, align 8, !tbaa !26
  %65 = getelementptr inbounds double, ptr %61, i64 8
  %66 = load <4 x double>, ptr %65, align 8, !tbaa !26
  %67 = getelementptr inbounds double, ptr %61, i64 12
  %68 = load <4 x double>, ptr %67, align 8, !tbaa !26
  %69 = zext i32 %60 to i64
  %70 = getelementptr inbounds double, ptr %25, i64 %69
  store <4 x double> %62, ptr %70, align 8, !tbaa !26
  %71 = getelementptr inbounds double, ptr %70, i64 4
  store <4 x double> %64, ptr %71, align 8, !tbaa !26
  %72 = getelementptr inbounds double, ptr %70, i64 8
  store <4 x double> %66, ptr %72, align 8, !tbaa !26
  %73 = getelementptr inbounds double, ptr %70, i64 12
  store <4 x double> %68, ptr %73, align 8, !tbaa !26
  %74 = add nuw i64 %58, 16
  %75 = icmp eq i64 %74, %54
  br i1 %75, label %76, label %57, !llvm.loop !43

76:                                               ; preds = %57
  %77 = icmp eq i64 %54, %38
  br i1 %77, label %103, label %78

78:                                               ; preds = %47, %40, %34, %76
  %79 = phi i64 [ 0, %47 ], [ 0, %40 ], [ 0, %34 ], [ %54, %76 ]
  %80 = phi i32 [ %30, %47 ], [ %30, %40 ], [ %30, %34 ], [ %56, %76 ]
  %81 = xor i64 %79, -1
  %82 = add nsw i64 %81, %38
  %83 = and i64 %38, 3
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %97, label %85

85:                                               ; preds = %78, %85
  %86 = phi i64 [ %93, %85 ], [ %79, %78 ]
  %87 = phi i32 [ %94, %85 ], [ %80, %78 ]
  %88 = phi i64 [ %95, %85 ], [ 0, %78 ]
  %89 = getelementptr inbounds double, ptr %36, i64 %86
  %90 = load double, ptr %89, align 8, !tbaa !26
  %91 = zext i32 %87 to i64
  %92 = getelementptr inbounds double, ptr %25, i64 %91
  store double %90, ptr %92, align 8, !tbaa !26
  %93 = add nuw nsw i64 %86, 1
  %94 = add i32 %87, 1
  %95 = add i64 %88, 1
  %96 = icmp eq i64 %95, %83
  br i1 %96, label %97, label %85, !llvm.loop !44

97:                                               ; preds = %85, %78
  %98 = phi i32 [ undef, %78 ], [ %94, %85 ]
  %99 = phi i64 [ %79, %78 ], [ %93, %85 ]
  %100 = phi i32 [ %80, %78 ], [ %94, %85 ]
  %101 = icmp ult i64 %82, 3
  br i1 %101, label %103, label %107

102:                                              ; preds = %103, %18
  ret ptr %0

103:                                              ; preds = %97, %107, %76, %28
  %104 = phi i32 [ %30, %28 ], [ %56, %76 ], [ %98, %97 ], [ %133, %107 ]
  %105 = add nuw nsw i64 %29, 1
  %106 = icmp eq i64 %105, %27
  br i1 %106, label %102, label %28

107:                                              ; preds = %97, %107
  %108 = phi i64 [ %132, %107 ], [ %99, %97 ]
  %109 = phi i32 [ %133, %107 ], [ %100, %97 ]
  %110 = getelementptr inbounds double, ptr %36, i64 %108
  %111 = load double, ptr %110, align 8, !tbaa !26
  %112 = zext i32 %109 to i64
  %113 = getelementptr inbounds double, ptr %25, i64 %112
  store double %111, ptr %113, align 8, !tbaa !26
  %114 = add nuw nsw i64 %108, 1
  %115 = add i32 %109, 1
  %116 = getelementptr inbounds double, ptr %36, i64 %114
  %117 = load double, ptr %116, align 8, !tbaa !26
  %118 = zext i32 %115 to i64
  %119 = getelementptr inbounds double, ptr %25, i64 %118
  store double %117, ptr %119, align 8, !tbaa !26
  %120 = add nuw nsw i64 %108, 2
  %121 = add i32 %109, 2
  %122 = getelementptr inbounds double, ptr %36, i64 %120
  %123 = load double, ptr %122, align 8, !tbaa !26
  %124 = zext i32 %121 to i64
  %125 = getelementptr inbounds double, ptr %25, i64 %124
  store double %123, ptr %125, align 8, !tbaa !26
  %126 = add nuw nsw i64 %108, 3
  %127 = add i32 %109, 3
  %128 = getelementptr inbounds double, ptr %36, i64 %126
  %129 = load double, ptr %128, align 8, !tbaa !26
  %130 = zext i32 %127 to i64
  %131 = getelementptr inbounds double, ptr %25, i64 %130
  store double %129, ptr %131, align 8, !tbaa !26
  %132 = add nuw nsw i64 %108, 4
  %133 = add i32 %109, 4
  %134 = icmp eq i64 %132, %38
  br i1 %134, label %103, label %107, !llvm.loop !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #7

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorIdEclEj(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !24
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds double, ptr %4, i64 %5
  %7 = load double, ptr %6, align 8, !tbaa !26
  ret double %7
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #7

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorIdE8norm_sqrEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !24
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %31

13:                                               ; preds = %31, %5
  %14 = phi double [ undef, %5 ], [ %53, %31 ]
  %15 = phi i64 [ 0, %5 ], [ %54, %31 ]
  %16 = phi double [ 0.000000e+00, %5 ], [ %53, %31 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %26, %18 ], [ %15, %13 ]
  %20 = phi double [ %25, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %27, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds double, ptr %7, i64 %19
  %23 = load double, ptr %22, align 8, !tbaa !26
  %24 = fmul double %23, %23
  %25 = fadd double %20, %24
  %26 = add nuw nsw i64 %19, 1
  %27 = add i64 %21, 1
  %28 = icmp eq i64 %27, %9
  br i1 %28, label %29, label %18, !llvm.loop !47

29:                                               ; preds = %13, %18, %1
  %30 = phi double [ 0.000000e+00, %1 ], [ %14, %13 ], [ %25, %18 ]
  ret double %30

31:                                               ; preds = %31, %11
  %32 = phi i64 [ 0, %11 ], [ %54, %31 ]
  %33 = phi double [ 0.000000e+00, %11 ], [ %53, %31 ]
  %34 = phi i64 [ 0, %11 ], [ %55, %31 ]
  %35 = getelementptr inbounds double, ptr %7, i64 %32
  %36 = load double, ptr %35, align 8, !tbaa !26
  %37 = fmul double %36, %36
  %38 = fadd double %33, %37
  %39 = or i64 %32, 1
  %40 = getelementptr inbounds double, ptr %7, i64 %39
  %41 = load double, ptr %40, align 8, !tbaa !26
  %42 = fmul double %41, %41
  %43 = fadd double %38, %42
  %44 = or i64 %32, 2
  %45 = getelementptr inbounds double, ptr %7, i64 %44
  %46 = load double, ptr %45, align 8, !tbaa !26
  %47 = fmul double %46, %46
  %48 = fadd double %43, %47
  %49 = or i64 %32, 3
  %50 = getelementptr inbounds double, ptr %7, i64 %49
  %51 = load double, ptr %50, align 8, !tbaa !26
  %52 = fmul double %51, %51
  %53 = fadd double %48, %52
  %54 = add nuw nsw i64 %32, 4
  %55 = add i64 %34, 4
  %56 = icmp eq i64 %55, %12
  br i1 %56, label %13, label %31
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorIdE10mean_valueEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !24
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 7
  %10 = icmp ult i32 %3, 8
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967288
  br label %32

13:                                               ; preds = %32, %5
  %14 = phi double [ undef, %5 ], [ %66, %32 ]
  %15 = phi i64 [ 0, %5 ], [ %67, %32 ]
  %16 = phi double [ 0.000000e+00, %5 ], [ %66, %32 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %25, %18 ], [ %15, %13 ]
  %20 = phi double [ %24, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %26, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds double, ptr %7, i64 %19
  %23 = load double, ptr %22, align 8, !tbaa !26
  %24 = fadd double %20, %23
  %25 = add nuw nsw i64 %19, 1
  %26 = add i64 %21, 1
  %27 = icmp eq i64 %26, %9
  br i1 %27, label %28, label %18, !llvm.loop !48

28:                                               ; preds = %13, %18, %1
  %29 = phi double [ 0.000000e+00, %1 ], [ %14, %13 ], [ %24, %18 ]
  %30 = uitofp i32 %3 to double
  %31 = fdiv double %29, %30
  ret double %31

32:                                               ; preds = %32, %11
  %33 = phi i64 [ 0, %11 ], [ %67, %32 ]
  %34 = phi double [ 0.000000e+00, %11 ], [ %66, %32 ]
  %35 = phi i64 [ 0, %11 ], [ %68, %32 ]
  %36 = getelementptr inbounds double, ptr %7, i64 %33
  %37 = load double, ptr %36, align 8, !tbaa !26
  %38 = fadd double %34, %37
  %39 = or i64 %33, 1
  %40 = getelementptr inbounds double, ptr %7, i64 %39
  %41 = load double, ptr %40, align 8, !tbaa !26
  %42 = fadd double %38, %41
  %43 = or i64 %33, 2
  %44 = getelementptr inbounds double, ptr %7, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !26
  %46 = fadd double %42, %45
  %47 = or i64 %33, 3
  %48 = getelementptr inbounds double, ptr %7, i64 %47
  %49 = load double, ptr %48, align 8, !tbaa !26
  %50 = fadd double %46, %49
  %51 = or i64 %33, 4
  %52 = getelementptr inbounds double, ptr %7, i64 %51
  %53 = load double, ptr %52, align 8, !tbaa !26
  %54 = fadd double %50, %53
  %55 = or i64 %33, 5
  %56 = getelementptr inbounds double, ptr %7, i64 %55
  %57 = load double, ptr %56, align 8, !tbaa !26
  %58 = fadd double %54, %57
  %59 = or i64 %33, 6
  %60 = getelementptr inbounds double, ptr %7, i64 %59
  %61 = load double, ptr %60, align 8, !tbaa !26
  %62 = fadd double %58, %61
  %63 = or i64 %33, 7
  %64 = getelementptr inbounds double, ptr %7, i64 %63
  %65 = load double, ptr %64, align 8, !tbaa !26
  %66 = fadd double %62, %65
  %67 = add nuw nsw i64 %33, 8
  %68 = add i64 %35, 8
  %69 = icmp eq i64 %68, %12
  br i1 %69, label %13, label %32
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorIdE7l1_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !24
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %31

13:                                               ; preds = %31, %5
  %14 = phi double [ undef, %5 ], [ %53, %31 ]
  %15 = phi i64 [ 0, %5 ], [ %54, %31 ]
  %16 = phi double [ 0.000000e+00, %5 ], [ %53, %31 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %26, %18 ], [ %15, %13 ]
  %20 = phi double [ %25, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %27, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds double, ptr %7, i64 %19
  %23 = load double, ptr %22, align 8, !tbaa !26
  %24 = tail call double @llvm.fabs.f64(double %23)
  %25 = fadd double %20, %24
  %26 = add nuw nsw i64 %19, 1
  %27 = add i64 %21, 1
  %28 = icmp eq i64 %27, %9
  br i1 %28, label %29, label %18, !llvm.loop !49

29:                                               ; preds = %13, %18, %1
  %30 = phi double [ 0.000000e+00, %1 ], [ %14, %13 ], [ %25, %18 ]
  ret double %30

31:                                               ; preds = %31, %11
  %32 = phi i64 [ 0, %11 ], [ %54, %31 ]
  %33 = phi double [ 0.000000e+00, %11 ], [ %53, %31 ]
  %34 = phi i64 [ 0, %11 ], [ %55, %31 ]
  %35 = getelementptr inbounds double, ptr %7, i64 %32
  %36 = load double, ptr %35, align 8, !tbaa !26
  %37 = tail call double @llvm.fabs.f64(double %36)
  %38 = fadd double %33, %37
  %39 = or i64 %32, 1
  %40 = getelementptr inbounds double, ptr %7, i64 %39
  %41 = load double, ptr %40, align 8, !tbaa !26
  %42 = tail call double @llvm.fabs.f64(double %41)
  %43 = fadd double %38, %42
  %44 = or i64 %32, 2
  %45 = getelementptr inbounds double, ptr %7, i64 %44
  %46 = load double, ptr %45, align 8, !tbaa !26
  %47 = tail call double @llvm.fabs.f64(double %46)
  %48 = fadd double %43, %47
  %49 = or i64 %32, 3
  %50 = getelementptr inbounds double, ptr %7, i64 %49
  %51 = load double, ptr %50, align 8, !tbaa !26
  %52 = tail call double @llvm.fabs.f64(double %51)
  %53 = fadd double %48, %52
  %54 = add nuw nsw i64 %32, 4
  %55 = add i64 %34, 4
  %56 = icmp eq i64 %55, %12
  br i1 %56, label %13, label %31
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorIdE7l2_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !24
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %39, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64 [ 0, %11 ], [ %36, %13 ]
  %15 = phi double [ 0.000000e+00, %11 ], [ %35, %13 ]
  %16 = phi i64 [ 0, %11 ], [ %37, %13 ]
  %17 = getelementptr inbounds double, ptr %7, i64 %14
  %18 = load double, ptr %17, align 8, !tbaa !26
  %19 = fmul double %18, %18
  %20 = fadd double %15, %19
  %21 = or i64 %14, 1
  %22 = getelementptr inbounds double, ptr %7, i64 %21
  %23 = load double, ptr %22, align 8, !tbaa !26
  %24 = fmul double %23, %23
  %25 = fadd double %20, %24
  %26 = or i64 %14, 2
  %27 = getelementptr inbounds double, ptr %7, i64 %26
  %28 = load double, ptr %27, align 8, !tbaa !26
  %29 = fmul double %28, %28
  %30 = fadd double %25, %29
  %31 = or i64 %14, 3
  %32 = getelementptr inbounds double, ptr %7, i64 %31
  %33 = load double, ptr %32, align 8, !tbaa !26
  %34 = fmul double %33, %33
  %35 = fadd double %30, %34
  %36 = add nuw nsw i64 %14, 4
  %37 = add i64 %16, 4
  %38 = icmp eq i64 %37, %12
  br i1 %38, label %39, label %13

39:                                               ; preds = %13, %5
  %40 = phi double [ undef, %5 ], [ %35, %13 ]
  %41 = phi i64 [ 0, %5 ], [ %36, %13 ]
  %42 = phi double [ 0.000000e+00, %5 ], [ %35, %13 ]
  %43 = icmp eq i64 %9, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %39, %44
  %45 = phi i64 [ %52, %44 ], [ %41, %39 ]
  %46 = phi double [ %51, %44 ], [ %42, %39 ]
  %47 = phi i64 [ %53, %44 ], [ 0, %39 ]
  %48 = getelementptr inbounds double, ptr %7, i64 %45
  %49 = load double, ptr %48, align 8, !tbaa !26
  %50 = fmul double %49, %49
  %51 = fadd double %46, %50
  %52 = add nuw nsw i64 %45, 1
  %53 = add i64 %47, 1
  %54 = icmp eq i64 %53, %9
  br i1 %54, label %55, label %44, !llvm.loop !50

55:                                               ; preds = %39, %44, %1
  %56 = phi double [ 0.000000e+00, %1 ], [ %40, %39 ], [ %51, %44 ]
  %57 = tail call double @sqrt(double noundef %56) #24
  ret double %57
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @sqrt(double noundef) local_unnamed_addr #8

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorIdE7lp_normEd(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  br label %12

8:                                                ; preds = %12, %2
  %9 = phi double [ 0.000000e+00, %2 ], [ %20, %12 ]
  %10 = fdiv double 1.000000e+00, %1
  %11 = tail call double @pow(double noundef %9, double noundef %10) #24
  ret double %11

12:                                               ; preds = %6, %12
  %13 = phi i64 [ 0, %6 ], [ %21, %12 ]
  %14 = phi double [ 0.000000e+00, %6 ], [ %20, %12 ]
  %15 = load ptr, ptr %7, align 8, !tbaa !24
  %16 = getelementptr inbounds double, ptr %15, i64 %13
  %17 = load double, ptr %16, align 8, !tbaa !26
  %18 = tail call double @llvm.fabs.f64(double %17)
  %19 = tail call double @pow(double noundef %18, double noundef %1) #24
  %20 = fadd double %14, %19
  %21 = add nuw nsw i64 %13, 1
  %22 = load i32, ptr %3, align 8, !tbaa !8
  %23 = zext i32 %22 to i64
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %12, label %8
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @pow(double noundef, double noundef) local_unnamed_addr #8

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorIdE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !24
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %32

13:                                               ; preds = %32, %5
  %14 = phi double [ undef, %5 ], [ %58, %32 ]
  %15 = phi i64 [ 0, %5 ], [ %59, %32 ]
  %16 = phi double [ 0.000000e+00, %5 ], [ %58, %32 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %27, %18 ], [ %15, %13 ]
  %20 = phi double [ %26, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %28, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds double, ptr %7, i64 %19
  %23 = load double, ptr %22, align 8, !tbaa !26
  %24 = tail call double @llvm.fabs.f64(double %23)
  %25 = fcmp olt double %24, %20
  %26 = select i1 %25, double %20, double %24
  %27 = add nuw nsw i64 %19, 1
  %28 = add i64 %21, 1
  %29 = icmp eq i64 %28, %9
  br i1 %29, label %30, label %18, !llvm.loop !51

30:                                               ; preds = %13, %18, %1
  %31 = phi double [ 0.000000e+00, %1 ], [ %14, %13 ], [ %26, %18 ]
  ret double %31

32:                                               ; preds = %32, %11
  %33 = phi i64 [ 0, %11 ], [ %59, %32 ]
  %34 = phi double [ 0.000000e+00, %11 ], [ %58, %32 ]
  %35 = phi i64 [ 0, %11 ], [ %60, %32 ]
  %36 = getelementptr inbounds double, ptr %7, i64 %33
  %37 = load double, ptr %36, align 8, !tbaa !26
  %38 = tail call double @llvm.fabs.f64(double %37)
  %39 = fcmp olt double %38, %34
  %40 = select i1 %39, double %34, double %38
  %41 = or i64 %33, 1
  %42 = getelementptr inbounds double, ptr %7, i64 %41
  %43 = load double, ptr %42, align 8, !tbaa !26
  %44 = tail call double @llvm.fabs.f64(double %43)
  %45 = fcmp olt double %44, %40
  %46 = select i1 %45, double %40, double %44
  %47 = or i64 %33, 2
  %48 = getelementptr inbounds double, ptr %7, i64 %47
  %49 = load double, ptr %48, align 8, !tbaa !26
  %50 = tail call double @llvm.fabs.f64(double %49)
  %51 = fcmp olt double %50, %46
  %52 = select i1 %51, double %46, double %50
  %53 = or i64 %33, 3
  %54 = getelementptr inbounds double, ptr %7, i64 %53
  %55 = load double, ptr %54, align 8, !tbaa !26
  %56 = tail call double @llvm.fabs.f64(double %55)
  %57 = fcmp olt double %56, %52
  %58 = select i1 %57, double %52, double %56
  %59 = add nuw nsw i64 %33, 4
  %60 = add i64 %35, 4
  %61 = icmp eq i64 %60, %12
  br i1 %61, label %13, label %32
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIdE8all_zeroEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !24
  %8 = zext i32 %3 to i64
  %9 = load double, ptr %7, align 8, !tbaa !26
  %10 = fcmp une double %9, 0.000000e+00
  br i1 %10, label %21, label %11

11:                                               ; preds = %5, %15
  %12 = phi i64 [ %13, %15 ], [ 0, %5 ]
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp eq i64 %13, %8
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds double, ptr %7, i64 %13
  %17 = load double, ptr %16, align 8, !tbaa !26
  %18 = fcmp une double %17, 0.000000e+00
  br i1 %18, label %19, label %11

19:                                               ; preds = %11, %15
  %20 = icmp uge i64 %13, %8
  br label %21

21:                                               ; preds = %19, %5, %1
  %22 = phi i1 [ true, %1 ], [ false, %5 ], [ %20, %19 ]
  ret i1 %22
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIdE15is_non_negativeEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !24
  %8 = zext i32 %3 to i64
  %9 = load double, ptr %7, align 8, !tbaa !26
  %10 = fcmp ult double %9, 0.000000e+00
  br i1 %10, label %21, label %11

11:                                               ; preds = %5, %15
  %12 = phi i64 [ %13, %15 ], [ 0, %5 ]
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp eq i64 %13, %8
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds double, ptr %7, i64 %13
  %17 = load double, ptr %16, align 8, !tbaa !26
  %18 = fcmp ult double %17, 0.000000e+00
  br i1 %18, label %19, label %11

19:                                               ; preds = %11, %15
  %20 = icmp uge i64 %13, %8
  br label %21

21:                                               ; preds = %19, %5, %1
  %22 = phi i1 [ true, %1 ], [ false, %5 ], [ %20, %19 ]
  ret i1 %22
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(8) ptr @_ZN6dealii6VectorIdEclEj(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !24
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds double, ptr %4, i64 %5
  ret ptr %6
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEpLERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %95, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = zext i32 %4 to i64
  %12 = icmp ult i32 %4, 16
  br i1 %12, label %48, label %13

13:                                               ; preds = %6
  %14 = shl nuw nsw i64 %11, 3
  %15 = getelementptr i8, ptr %10, i64 %14
  %16 = getelementptr i8, ptr %8, i64 %14
  %17 = icmp ult ptr %10, %16
  %18 = icmp ult ptr %8, %15
  %19 = and i1 %17, %18
  br i1 %19, label %48, label %20

20:                                               ; preds = %13
  %21 = and i64 %11, 4294967280
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %44, %22 ]
  %24 = getelementptr inbounds double, ptr %8, i64 %23
  %25 = load <4 x double>, ptr %24, align 8, !tbaa !26, !alias.scope !52
  %26 = getelementptr inbounds double, ptr %24, i64 4
  %27 = load <4 x double>, ptr %26, align 8, !tbaa !26, !alias.scope !52
  %28 = getelementptr inbounds double, ptr %24, i64 8
  %29 = load <4 x double>, ptr %28, align 8, !tbaa !26, !alias.scope !52
  %30 = getelementptr inbounds double, ptr %24, i64 12
  %31 = load <4 x double>, ptr %30, align 8, !tbaa !26, !alias.scope !52
  %32 = getelementptr inbounds double, ptr %10, i64 %23
  %33 = load <4 x double>, ptr %32, align 8, !tbaa !26, !alias.scope !55, !noalias !52
  %34 = getelementptr inbounds double, ptr %32, i64 4
  %35 = load <4 x double>, ptr %34, align 8, !tbaa !26, !alias.scope !55, !noalias !52
  %36 = getelementptr inbounds double, ptr %32, i64 8
  %37 = load <4 x double>, ptr %36, align 8, !tbaa !26, !alias.scope !55, !noalias !52
  %38 = getelementptr inbounds double, ptr %32, i64 12
  %39 = load <4 x double>, ptr %38, align 8, !tbaa !26, !alias.scope !55, !noalias !52
  %40 = fadd <4 x double> %25, %33
  %41 = fadd <4 x double> %27, %35
  %42 = fadd <4 x double> %29, %37
  %43 = fadd <4 x double> %31, %39
  store <4 x double> %40, ptr %32, align 8, !tbaa !26, !alias.scope !55, !noalias !52
  store <4 x double> %41, ptr %34, align 8, !tbaa !26, !alias.scope !55, !noalias !52
  store <4 x double> %42, ptr %36, align 8, !tbaa !26, !alias.scope !55, !noalias !52
  store <4 x double> %43, ptr %38, align 8, !tbaa !26, !alias.scope !55, !noalias !52
  %44 = add nuw i64 %23, 16
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %22, !llvm.loop !57

46:                                               ; preds = %22
  %47 = icmp eq i64 %21, %11
  br i1 %47, label %95, label %48

48:                                               ; preds = %13, %6, %46
  %49 = phi i64 [ 0, %13 ], [ 0, %6 ], [ %21, %46 ]
  %50 = xor i64 %49, -1
  %51 = add nsw i64 %50, %11
  %52 = and i64 %11, 3
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %48, %54
  %55 = phi i64 [ %62, %54 ], [ %49, %48 ]
  %56 = phi i64 [ %63, %54 ], [ 0, %48 ]
  %57 = getelementptr inbounds double, ptr %8, i64 %55
  %58 = load double, ptr %57, align 8, !tbaa !26
  %59 = getelementptr inbounds double, ptr %10, i64 %55
  %60 = load double, ptr %59, align 8, !tbaa !26
  %61 = fadd double %58, %60
  store double %61, ptr %59, align 8, !tbaa !26
  %62 = add nuw nsw i64 %55, 1
  %63 = add i64 %56, 1
  %64 = icmp eq i64 %63, %52
  br i1 %64, label %65, label %54, !llvm.loop !58

65:                                               ; preds = %54, %48
  %66 = phi i64 [ %49, %48 ], [ %62, %54 ]
  %67 = icmp ult i64 %51, 3
  br i1 %67, label %95, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %93, %68 ], [ %66, %65 ]
  %70 = getelementptr inbounds double, ptr %8, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !26
  %72 = getelementptr inbounds double, ptr %10, i64 %69
  %73 = load double, ptr %72, align 8, !tbaa !26
  %74 = fadd double %71, %73
  store double %74, ptr %72, align 8, !tbaa !26
  %75 = add nuw nsw i64 %69, 1
  %76 = getelementptr inbounds double, ptr %8, i64 %75
  %77 = load double, ptr %76, align 8, !tbaa !26
  %78 = getelementptr inbounds double, ptr %10, i64 %75
  %79 = load double, ptr %78, align 8, !tbaa !26
  %80 = fadd double %77, %79
  store double %80, ptr %78, align 8, !tbaa !26
  %81 = add nuw nsw i64 %69, 2
  %82 = getelementptr inbounds double, ptr %8, i64 %81
  %83 = load double, ptr %82, align 8, !tbaa !26
  %84 = getelementptr inbounds double, ptr %10, i64 %81
  %85 = load double, ptr %84, align 8, !tbaa !26
  %86 = fadd double %83, %85
  store double %86, ptr %84, align 8, !tbaa !26
  %87 = add nuw nsw i64 %69, 3
  %88 = getelementptr inbounds double, ptr %8, i64 %87
  %89 = load double, ptr %88, align 8, !tbaa !26
  %90 = getelementptr inbounds double, ptr %10, i64 %87
  %91 = load double, ptr %90, align 8, !tbaa !26
  %92 = fadd double %89, %91
  store double %92, ptr %90, align 8, !tbaa !26
  %93 = add nuw nsw i64 %69, 4
  %94 = icmp eq i64 %93, %11
  br i1 %94, label %95, label %68, !llvm.loop !59

95:                                               ; preds = %65, %68, %46, %2
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE3addERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = zext i32 %4 to i64
  %12 = icmp ult i32 %4, 16
  br i1 %12, label %48, label %13

13:                                               ; preds = %6
  %14 = shl nuw nsw i64 %11, 3
  %15 = getelementptr i8, ptr %10, i64 %14
  %16 = getelementptr i8, ptr %8, i64 %14
  %17 = icmp ult ptr %10, %16
  %18 = icmp ult ptr %8, %15
  %19 = and i1 %17, %18
  br i1 %19, label %48, label %20

20:                                               ; preds = %13
  %21 = and i64 %11, 4294967280
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %44, %22 ]
  %24 = getelementptr inbounds double, ptr %8, i64 %23
  %25 = load <4 x double>, ptr %24, align 8, !tbaa !26, !alias.scope !60
  %26 = getelementptr inbounds double, ptr %24, i64 4
  %27 = load <4 x double>, ptr %26, align 8, !tbaa !26, !alias.scope !60
  %28 = getelementptr inbounds double, ptr %24, i64 8
  %29 = load <4 x double>, ptr %28, align 8, !tbaa !26, !alias.scope !60
  %30 = getelementptr inbounds double, ptr %24, i64 12
  %31 = load <4 x double>, ptr %30, align 8, !tbaa !26, !alias.scope !60
  %32 = getelementptr inbounds double, ptr %10, i64 %23
  %33 = load <4 x double>, ptr %32, align 8, !tbaa !26, !alias.scope !63, !noalias !60
  %34 = getelementptr inbounds double, ptr %32, i64 4
  %35 = load <4 x double>, ptr %34, align 8, !tbaa !26, !alias.scope !63, !noalias !60
  %36 = getelementptr inbounds double, ptr %32, i64 8
  %37 = load <4 x double>, ptr %36, align 8, !tbaa !26, !alias.scope !63, !noalias !60
  %38 = getelementptr inbounds double, ptr %32, i64 12
  %39 = load <4 x double>, ptr %38, align 8, !tbaa !26, !alias.scope !63, !noalias !60
  %40 = fadd <4 x double> %25, %33
  %41 = fadd <4 x double> %27, %35
  %42 = fadd <4 x double> %29, %37
  %43 = fadd <4 x double> %31, %39
  store <4 x double> %40, ptr %32, align 8, !tbaa !26, !alias.scope !63, !noalias !60
  store <4 x double> %41, ptr %34, align 8, !tbaa !26, !alias.scope !63, !noalias !60
  store <4 x double> %42, ptr %36, align 8, !tbaa !26, !alias.scope !63, !noalias !60
  store <4 x double> %43, ptr %38, align 8, !tbaa !26, !alias.scope !63, !noalias !60
  %44 = add nuw i64 %23, 16
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %22, !llvm.loop !65

46:                                               ; preds = %22
  %47 = icmp eq i64 %21, %11
  br i1 %47, label %68, label %48

48:                                               ; preds = %13, %6, %46
  %49 = phi i64 [ 0, %13 ], [ 0, %6 ], [ %21, %46 ]
  %50 = xor i64 %49, -1
  %51 = add nsw i64 %50, %11
  %52 = and i64 %11, 3
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %48, %54
  %55 = phi i64 [ %62, %54 ], [ %49, %48 ]
  %56 = phi i64 [ %63, %54 ], [ 0, %48 ]
  %57 = getelementptr inbounds double, ptr %8, i64 %55
  %58 = load double, ptr %57, align 8, !tbaa !26
  %59 = getelementptr inbounds double, ptr %10, i64 %55
  %60 = load double, ptr %59, align 8, !tbaa !26
  %61 = fadd double %58, %60
  store double %61, ptr %59, align 8, !tbaa !26
  %62 = add nuw nsw i64 %55, 1
  %63 = add i64 %56, 1
  %64 = icmp eq i64 %63, %52
  br i1 %64, label %65, label %54, !llvm.loop !66

65:                                               ; preds = %54, %48
  %66 = phi i64 [ %49, %48 ], [ %62, %54 ]
  %67 = icmp ult i64 %51, 3
  br i1 %67, label %68, label %69

68:                                               ; preds = %65, %69, %46, %2
  ret void

69:                                               ; preds = %65, %69
  %70 = phi i64 [ %94, %69 ], [ %66, %65 ]
  %71 = getelementptr inbounds double, ptr %8, i64 %70
  %72 = load double, ptr %71, align 8, !tbaa !26
  %73 = getelementptr inbounds double, ptr %10, i64 %70
  %74 = load double, ptr %73, align 8, !tbaa !26
  %75 = fadd double %72, %74
  store double %75, ptr %73, align 8, !tbaa !26
  %76 = add nuw nsw i64 %70, 1
  %77 = getelementptr inbounds double, ptr %8, i64 %76
  %78 = load double, ptr %77, align 8, !tbaa !26
  %79 = getelementptr inbounds double, ptr %10, i64 %76
  %80 = load double, ptr %79, align 8, !tbaa !26
  %81 = fadd double %78, %80
  store double %81, ptr %79, align 8, !tbaa !26
  %82 = add nuw nsw i64 %70, 2
  %83 = getelementptr inbounds double, ptr %8, i64 %82
  %84 = load double, ptr %83, align 8, !tbaa !26
  %85 = getelementptr inbounds double, ptr %10, i64 %82
  %86 = load double, ptr %85, align 8, !tbaa !26
  %87 = fadd double %84, %86
  store double %87, ptr %85, align 8, !tbaa !26
  %88 = add nuw nsw i64 %70, 3
  %89 = getelementptr inbounds double, ptr %8, i64 %88
  %90 = load double, ptr %89, align 8, !tbaa !26
  %91 = getelementptr inbounds double, ptr %10, i64 %88
  %92 = load double, ptr %91, align 8, !tbaa !26
  %93 = fadd double %90, %92
  store double %93, ptr %91, align 8, !tbaa !26
  %94 = add nuw nsw i64 %70, 4
  %95 = icmp eq i64 %94, %11
  br i1 %95, label %68, label %69, !llvm.loop !67
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEmIERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = zext i32 %4 to i64
  %12 = icmp ult i32 %4, 16
  br i1 %12, label %48, label %13

13:                                               ; preds = %6
  %14 = shl nuw nsw i64 %11, 3
  %15 = getelementptr i8, ptr %10, i64 %14
  %16 = getelementptr i8, ptr %8, i64 %14
  %17 = icmp ult ptr %10, %16
  %18 = icmp ult ptr %8, %15
  %19 = and i1 %17, %18
  br i1 %19, label %48, label %20

20:                                               ; preds = %13
  %21 = and i64 %11, 4294967280
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %44, %22 ]
  %24 = getelementptr inbounds double, ptr %8, i64 %23
  %25 = load <4 x double>, ptr %24, align 8, !tbaa !26, !alias.scope !68
  %26 = getelementptr inbounds double, ptr %24, i64 4
  %27 = load <4 x double>, ptr %26, align 8, !tbaa !26, !alias.scope !68
  %28 = getelementptr inbounds double, ptr %24, i64 8
  %29 = load <4 x double>, ptr %28, align 8, !tbaa !26, !alias.scope !68
  %30 = getelementptr inbounds double, ptr %24, i64 12
  %31 = load <4 x double>, ptr %30, align 8, !tbaa !26, !alias.scope !68
  %32 = getelementptr inbounds double, ptr %10, i64 %23
  %33 = load <4 x double>, ptr %32, align 8, !tbaa !26, !alias.scope !71, !noalias !68
  %34 = getelementptr inbounds double, ptr %32, i64 4
  %35 = load <4 x double>, ptr %34, align 8, !tbaa !26, !alias.scope !71, !noalias !68
  %36 = getelementptr inbounds double, ptr %32, i64 8
  %37 = load <4 x double>, ptr %36, align 8, !tbaa !26, !alias.scope !71, !noalias !68
  %38 = getelementptr inbounds double, ptr %32, i64 12
  %39 = load <4 x double>, ptr %38, align 8, !tbaa !26, !alias.scope !71, !noalias !68
  %40 = fsub <4 x double> %33, %25
  %41 = fsub <4 x double> %35, %27
  %42 = fsub <4 x double> %37, %29
  %43 = fsub <4 x double> %39, %31
  store <4 x double> %40, ptr %32, align 8, !tbaa !26, !alias.scope !71, !noalias !68
  store <4 x double> %41, ptr %34, align 8, !tbaa !26, !alias.scope !71, !noalias !68
  store <4 x double> %42, ptr %36, align 8, !tbaa !26, !alias.scope !71, !noalias !68
  store <4 x double> %43, ptr %38, align 8, !tbaa !26, !alias.scope !71, !noalias !68
  %44 = add nuw i64 %23, 16
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %22, !llvm.loop !73

46:                                               ; preds = %22
  %47 = icmp eq i64 %21, %11
  br i1 %47, label %68, label %48

48:                                               ; preds = %13, %6, %46
  %49 = phi i64 [ 0, %13 ], [ 0, %6 ], [ %21, %46 ]
  %50 = xor i64 %49, -1
  %51 = add nsw i64 %50, %11
  %52 = and i64 %11, 3
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %48, %54
  %55 = phi i64 [ %62, %54 ], [ %49, %48 ]
  %56 = phi i64 [ %63, %54 ], [ 0, %48 ]
  %57 = getelementptr inbounds double, ptr %8, i64 %55
  %58 = load double, ptr %57, align 8, !tbaa !26
  %59 = getelementptr inbounds double, ptr %10, i64 %55
  %60 = load double, ptr %59, align 8, !tbaa !26
  %61 = fsub double %60, %58
  store double %61, ptr %59, align 8, !tbaa !26
  %62 = add nuw nsw i64 %55, 1
  %63 = add i64 %56, 1
  %64 = icmp eq i64 %63, %52
  br i1 %64, label %65, label %54, !llvm.loop !74

65:                                               ; preds = %54, %48
  %66 = phi i64 [ %49, %48 ], [ %62, %54 ]
  %67 = icmp ult i64 %51, 3
  br i1 %67, label %68, label %69

68:                                               ; preds = %65, %69, %46, %2
  ret ptr %0

69:                                               ; preds = %65, %69
  %70 = phi i64 [ %94, %69 ], [ %66, %65 ]
  %71 = getelementptr inbounds double, ptr %8, i64 %70
  %72 = load double, ptr %71, align 8, !tbaa !26
  %73 = getelementptr inbounds double, ptr %10, i64 %70
  %74 = load double, ptr %73, align 8, !tbaa !26
  %75 = fsub double %74, %72
  store double %75, ptr %73, align 8, !tbaa !26
  %76 = add nuw nsw i64 %70, 1
  %77 = getelementptr inbounds double, ptr %8, i64 %76
  %78 = load double, ptr %77, align 8, !tbaa !26
  %79 = getelementptr inbounds double, ptr %10, i64 %76
  %80 = load double, ptr %79, align 8, !tbaa !26
  %81 = fsub double %80, %78
  store double %81, ptr %79, align 8, !tbaa !26
  %82 = add nuw nsw i64 %70, 2
  %83 = getelementptr inbounds double, ptr %8, i64 %82
  %84 = load double, ptr %83, align 8, !tbaa !26
  %85 = getelementptr inbounds double, ptr %10, i64 %82
  %86 = load double, ptr %85, align 8, !tbaa !26
  %87 = fsub double %86, %84
  store double %87, ptr %85, align 8, !tbaa !26
  %88 = add nuw nsw i64 %70, 3
  %89 = getelementptr inbounds double, ptr %8, i64 %88
  %90 = load double, ptr %89, align 8, !tbaa !26
  %91 = getelementptr inbounds double, ptr %10, i64 %88
  %92 = load double, ptr %91, align 8, !tbaa !26
  %93 = fsub double %92, %90
  store double %93, ptr %91, align 8, !tbaa !26
  %94 = add nuw nsw i64 %70, 4
  %95 = icmp eq i64 %94, %11
  br i1 %95, label %68, label %69, !llvm.loop !75
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE3addEd(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %41, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = zext i32 %4 to i64
  %10 = icmp ult i32 %4, 16
  br i1 %10, label %39, label %11

11:                                               ; preds = %6
  %12 = and i64 %9, 4294967280
  %13 = insertelement <4 x double> poison, double %1, i64 0
  %14 = shufflevector <4 x double> %13, <4 x double> poison, <4 x i32> zeroinitializer
  %15 = insertelement <4 x double> poison, double %1, i64 0
  %16 = shufflevector <4 x double> %15, <4 x double> poison, <4 x i32> zeroinitializer
  %17 = insertelement <4 x double> poison, double %1, i64 0
  %18 = shufflevector <4 x double> %17, <4 x double> poison, <4 x i32> zeroinitializer
  %19 = insertelement <4 x double> poison, double %1, i64 0
  %20 = shufflevector <4 x double> %19, <4 x double> poison, <4 x i32> zeroinitializer
  br label %21

21:                                               ; preds = %21, %11
  %22 = phi i64 [ 0, %11 ], [ %35, %21 ]
  %23 = getelementptr inbounds double, ptr %8, i64 %22
  %24 = load <4 x double>, ptr %23, align 8, !tbaa !26
  %25 = getelementptr inbounds double, ptr %23, i64 4
  %26 = load <4 x double>, ptr %25, align 8, !tbaa !26
  %27 = getelementptr inbounds double, ptr %23, i64 8
  %28 = load <4 x double>, ptr %27, align 8, !tbaa !26
  %29 = getelementptr inbounds double, ptr %23, i64 12
  %30 = load <4 x double>, ptr %29, align 8, !tbaa !26
  %31 = fadd <4 x double> %24, %14
  %32 = fadd <4 x double> %26, %16
  %33 = fadd <4 x double> %28, %18
  %34 = fadd <4 x double> %30, %20
  store <4 x double> %31, ptr %23, align 8, !tbaa !26
  store <4 x double> %32, ptr %25, align 8, !tbaa !26
  store <4 x double> %33, ptr %27, align 8, !tbaa !26
  store <4 x double> %34, ptr %29, align 8, !tbaa !26
  %35 = add nuw i64 %22, 16
  %36 = icmp eq i64 %35, %12
  br i1 %36, label %37, label %21, !llvm.loop !76

37:                                               ; preds = %21
  %38 = icmp eq i64 %12, %9
  br i1 %38, label %41, label %39

39:                                               ; preds = %6, %37
  %40 = phi i64 [ 0, %6 ], [ %12, %37 ]
  br label %42

41:                                               ; preds = %42, %37, %2
  ret void

42:                                               ; preds = %39, %42
  %43 = phi i64 [ %47, %42 ], [ %40, %39 ]
  %44 = getelementptr inbounds double, ptr %8, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !26
  %46 = fadd double %45, %1
  store double %46, ptr %44, align 8, !tbaa !26
  %47 = add nuw nsw i64 %43, 1
  %48 = icmp eq i64 %47, %9
  br i1 %48, label %41, label %42, !llvm.loop !77
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE3addEdRKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !24
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds double, ptr %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %79, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !24
  %14 = add nuw nsw i64 %8, 2305843009213693951
  %15 = and i64 %14, 2305843009213693951
  %16 = add nuw nsw i64 %15, 1
  %17 = icmp ult i64 %15, 15
  br i1 %17, label %67, label %18

18:                                               ; preds = %11
  %19 = shl nuw nsw i64 %8, 3
  %20 = getelementptr i8, ptr %5, i64 %19
  %21 = getelementptr i8, ptr %13, i64 %19
  %22 = icmp ult ptr %5, %21
  %23 = icmp ult ptr %13, %20
  %24 = and i1 %22, %23
  br i1 %24, label %67, label %25

25:                                               ; preds = %18
  %26 = and i64 %16, 4611686018427387888
  %27 = shl i64 %26, 3
  %28 = getelementptr i8, ptr %13, i64 %27
  %29 = shl i64 %26, 3
  %30 = getelementptr i8, ptr %5, i64 %29
  %31 = insertelement <4 x double> poison, double %1, i64 0
  %32 = shufflevector <4 x double> %31, <4 x double> poison, <4 x i32> zeroinitializer
  %33 = insertelement <4 x double> poison, double %1, i64 0
  %34 = shufflevector <4 x double> %33, <4 x double> poison, <4 x i32> zeroinitializer
  %35 = insertelement <4 x double> poison, double %1, i64 0
  %36 = shufflevector <4 x double> %35, <4 x double> poison, <4 x i32> zeroinitializer
  %37 = insertelement <4 x double> poison, double %1, i64 0
  %38 = shufflevector <4 x double> %37, <4 x double> poison, <4 x i32> zeroinitializer
  br label %39

39:                                               ; preds = %39, %25
  %40 = phi i64 [ 0, %25 ], [ %63, %39 ]
  %41 = shl i64 %40, 3
  %42 = getelementptr i8, ptr %13, i64 %41
  %43 = shl i64 %40, 3
  %44 = getelementptr i8, ptr %5, i64 %43
  %45 = load <4 x double>, ptr %42, align 8, !tbaa !26, !alias.scope !78
  %46 = getelementptr double, ptr %42, i64 4
  %47 = load <4 x double>, ptr %46, align 8, !tbaa !26, !alias.scope !78
  %48 = getelementptr double, ptr %42, i64 8
  %49 = load <4 x double>, ptr %48, align 8, !tbaa !26, !alias.scope !78
  %50 = getelementptr double, ptr %42, i64 12
  %51 = load <4 x double>, ptr %50, align 8, !tbaa !26, !alias.scope !78
  %52 = load <4 x double>, ptr %44, align 8, !tbaa !26, !alias.scope !81, !noalias !78
  %53 = getelementptr double, ptr %44, i64 4
  %54 = load <4 x double>, ptr %53, align 8, !tbaa !26, !alias.scope !81, !noalias !78
  %55 = getelementptr double, ptr %44, i64 8
  %56 = load <4 x double>, ptr %55, align 8, !tbaa !26, !alias.scope !81, !noalias !78
  %57 = getelementptr double, ptr %44, i64 12
  %58 = load <4 x double>, ptr %57, align 8, !tbaa !26, !alias.scope !81, !noalias !78
  %59 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %32, <4 x double> %45, <4 x double> %52)
  %60 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %34, <4 x double> %47, <4 x double> %54)
  %61 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %36, <4 x double> %49, <4 x double> %56)
  %62 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %38, <4 x double> %51, <4 x double> %58)
  store <4 x double> %59, ptr %44, align 8, !tbaa !26, !alias.scope !81, !noalias !78
  store <4 x double> %60, ptr %53, align 8, !tbaa !26, !alias.scope !81, !noalias !78
  store <4 x double> %61, ptr %55, align 8, !tbaa !26, !alias.scope !81, !noalias !78
  store <4 x double> %62, ptr %57, align 8, !tbaa !26, !alias.scope !81, !noalias !78
  %63 = add nuw i64 %40, 16
  %64 = icmp eq i64 %63, %26
  br i1 %64, label %65, label %39, !llvm.loop !83

65:                                               ; preds = %39
  %66 = icmp eq i64 %16, %26
  br i1 %66, label %79, label %67

67:                                               ; preds = %18, %11, %65
  %68 = phi ptr [ %13, %18 ], [ %13, %11 ], [ %28, %65 ]
  %69 = phi ptr [ %5, %18 ], [ %5, %11 ], [ %30, %65 ]
  br label %70

70:                                               ; preds = %67, %70
  %71 = phi ptr [ %73, %70 ], [ %68, %67 ]
  %72 = phi ptr [ %75, %70 ], [ %69, %67 ]
  %73 = getelementptr inbounds double, ptr %71, i64 1
  %74 = load double, ptr %71, align 8, !tbaa !26
  %75 = getelementptr inbounds double, ptr %72, i64 1
  %76 = load double, ptr %72, align 8, !tbaa !26
  %77 = tail call double @llvm.fmuladd.f64(double %1, double %74, double %76)
  store double %77, ptr %72, align 8, !tbaa !26
  %78 = icmp eq ptr %75, %9
  br i1 %78, label %79, label %70, !llvm.loop !84

79:                                               ; preds = %70, %65, %3
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #10

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE3addEdRKS1_dS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #9 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %110, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !24
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %4, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !24
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !24
  %16 = zext i32 %7 to i64
  %17 = icmp ult i32 %7, 16
  br i1 %17, label %90, label %18

18:                                               ; preds = %9
  %19 = shl nuw nsw i64 %16, 3
  %20 = getelementptr i8, ptr %15, i64 %19
  %21 = getelementptr i8, ptr %11, i64 %19
  %22 = getelementptr i8, ptr %13, i64 %19
  %23 = icmp ult ptr %15, %21
  %24 = icmp ult ptr %11, %20
  %25 = and i1 %23, %24
  %26 = icmp ult ptr %15, %22
  %27 = icmp ult ptr %13, %20
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %90, label %30

30:                                               ; preds = %18
  %31 = and i64 %16, 4294967280
  %32 = insertelement <4 x double> poison, double %3, i64 0
  %33 = shufflevector <4 x double> %32, <4 x double> poison, <4 x i32> zeroinitializer
  %34 = insertelement <4 x double> poison, double %3, i64 0
  %35 = shufflevector <4 x double> %34, <4 x double> poison, <4 x i32> zeroinitializer
  %36 = insertelement <4 x double> poison, double %3, i64 0
  %37 = shufflevector <4 x double> %36, <4 x double> poison, <4 x i32> zeroinitializer
  %38 = insertelement <4 x double> poison, double %3, i64 0
  %39 = shufflevector <4 x double> %38, <4 x double> poison, <4 x i32> zeroinitializer
  %40 = insertelement <4 x double> poison, double %1, i64 0
  %41 = shufflevector <4 x double> %40, <4 x double> poison, <4 x i32> zeroinitializer
  %42 = insertelement <4 x double> poison, double %1, i64 0
  %43 = shufflevector <4 x double> %42, <4 x double> poison, <4 x i32> zeroinitializer
  %44 = insertelement <4 x double> poison, double %1, i64 0
  %45 = shufflevector <4 x double> %44, <4 x double> poison, <4 x i32> zeroinitializer
  %46 = insertelement <4 x double> poison, double %1, i64 0
  %47 = shufflevector <4 x double> %46, <4 x double> poison, <4 x i32> zeroinitializer
  br label %48

48:                                               ; preds = %48, %30
  %49 = phi i64 [ 0, %30 ], [ %86, %48 ]
  %50 = getelementptr inbounds double, ptr %11, i64 %49
  %51 = load <4 x double>, ptr %50, align 8, !tbaa !26, !alias.scope !85
  %52 = getelementptr inbounds double, ptr %50, i64 4
  %53 = load <4 x double>, ptr %52, align 8, !tbaa !26, !alias.scope !85
  %54 = getelementptr inbounds double, ptr %50, i64 8
  %55 = load <4 x double>, ptr %54, align 8, !tbaa !26, !alias.scope !85
  %56 = getelementptr inbounds double, ptr %50, i64 12
  %57 = load <4 x double>, ptr %56, align 8, !tbaa !26, !alias.scope !85
  %58 = getelementptr inbounds double, ptr %13, i64 %49
  %59 = load <4 x double>, ptr %58, align 8, !tbaa !26, !alias.scope !88
  %60 = getelementptr inbounds double, ptr %58, i64 4
  %61 = load <4 x double>, ptr %60, align 8, !tbaa !26, !alias.scope !88
  %62 = getelementptr inbounds double, ptr %58, i64 8
  %63 = load <4 x double>, ptr %62, align 8, !tbaa !26, !alias.scope !88
  %64 = getelementptr inbounds double, ptr %58, i64 12
  %65 = load <4 x double>, ptr %64, align 8, !tbaa !26, !alias.scope !88
  %66 = fmul <4 x double> %59, %33
  %67 = fmul <4 x double> %61, %35
  %68 = fmul <4 x double> %63, %37
  %69 = fmul <4 x double> %65, %39
  %70 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %41, <4 x double> %51, <4 x double> %66)
  %71 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %43, <4 x double> %53, <4 x double> %67)
  %72 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %45, <4 x double> %55, <4 x double> %68)
  %73 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %47, <4 x double> %57, <4 x double> %69)
  %74 = getelementptr inbounds double, ptr %15, i64 %49
  %75 = load <4 x double>, ptr %74, align 8, !tbaa !26, !alias.scope !90, !noalias !92
  %76 = getelementptr inbounds double, ptr %74, i64 4
  %77 = load <4 x double>, ptr %76, align 8, !tbaa !26, !alias.scope !90, !noalias !92
  %78 = getelementptr inbounds double, ptr %74, i64 8
  %79 = load <4 x double>, ptr %78, align 8, !tbaa !26, !alias.scope !90, !noalias !92
  %80 = getelementptr inbounds double, ptr %74, i64 12
  %81 = load <4 x double>, ptr %80, align 8, !tbaa !26, !alias.scope !90, !noalias !92
  %82 = fadd <4 x double> %75, %70
  %83 = fadd <4 x double> %77, %71
  %84 = fadd <4 x double> %79, %72
  %85 = fadd <4 x double> %81, %73
  store <4 x double> %82, ptr %74, align 8, !tbaa !26, !alias.scope !90, !noalias !92
  store <4 x double> %83, ptr %76, align 8, !tbaa !26, !alias.scope !90, !noalias !92
  store <4 x double> %84, ptr %78, align 8, !tbaa !26, !alias.scope !90, !noalias !92
  store <4 x double> %85, ptr %80, align 8, !tbaa !26, !alias.scope !90, !noalias !92
  %86 = add nuw i64 %49, 16
  %87 = icmp eq i64 %86, %31
  br i1 %87, label %88, label %48, !llvm.loop !93

88:                                               ; preds = %48
  %89 = icmp eq i64 %31, %16
  br i1 %89, label %110, label %90

90:                                               ; preds = %18, %9, %88
  %91 = phi i64 [ 0, %18 ], [ 0, %9 ], [ %31, %88 ]
  %92 = xor i64 %91, -1
  %93 = and i64 %16, 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %106, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds double, ptr %11, i64 %91
  %97 = load double, ptr %96, align 8, !tbaa !26
  %98 = getelementptr inbounds double, ptr %13, i64 %91
  %99 = load double, ptr %98, align 8, !tbaa !26
  %100 = fmul double %99, %3
  %101 = tail call double @llvm.fmuladd.f64(double %1, double %97, double %100)
  %102 = getelementptr inbounds double, ptr %15, i64 %91
  %103 = load double, ptr %102, align 8, !tbaa !26
  %104 = fadd double %103, %101
  store double %104, ptr %102, align 8, !tbaa !26
  %105 = or i64 %91, 1
  br label %106

106:                                              ; preds = %95, %90
  %107 = phi i64 [ %91, %90 ], [ %105, %95 ]
  %108 = sub nsw i64 0, %16
  %109 = icmp eq i64 %92, %108
  br i1 %109, label %110, label %111

110:                                              ; preds = %106, %111, %88, %5
  ret void

111:                                              ; preds = %106, %111
  %112 = phi i64 [ %132, %111 ], [ %107, %106 ]
  %113 = getelementptr inbounds double, ptr %11, i64 %112
  %114 = load double, ptr %113, align 8, !tbaa !26
  %115 = getelementptr inbounds double, ptr %13, i64 %112
  %116 = load double, ptr %115, align 8, !tbaa !26
  %117 = fmul double %116, %3
  %118 = tail call double @llvm.fmuladd.f64(double %1, double %114, double %117)
  %119 = getelementptr inbounds double, ptr %15, i64 %112
  %120 = load double, ptr %119, align 8, !tbaa !26
  %121 = fadd double %120, %118
  store double %121, ptr %119, align 8, !tbaa !26
  %122 = add nuw nsw i64 %112, 1
  %123 = getelementptr inbounds double, ptr %11, i64 %122
  %124 = load double, ptr %123, align 8, !tbaa !26
  %125 = getelementptr inbounds double, ptr %13, i64 %122
  %126 = load double, ptr %125, align 8, !tbaa !26
  %127 = fmul double %126, %3
  %128 = tail call double @llvm.fmuladd.f64(double %1, double %124, double %127)
  %129 = getelementptr inbounds double, ptr %15, i64 %122
  %130 = load double, ptr %129, align 8, !tbaa !26
  %131 = fadd double %130, %128
  store double %131, ptr %129, align 8, !tbaa !26
  %132 = add nuw nsw i64 %112, 2
  %133 = icmp eq i64 %132, %16
  br i1 %133, label %110, label %111, !llvm.loop !94
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE4saddEdRKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !24
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !24
  %12 = zext i32 %5 to i64
  %13 = icmp ult i32 %5, 16
  br i1 %13, label %57, label %14

14:                                               ; preds = %7
  %15 = shl nuw nsw i64 %12, 3
  %16 = getelementptr i8, ptr %9, i64 %15
  %17 = getelementptr i8, ptr %11, i64 %15
  %18 = icmp ult ptr %9, %17
  %19 = icmp ult ptr %11, %16
  %20 = and i1 %18, %19
  br i1 %20, label %57, label %21

21:                                               ; preds = %14
  %22 = and i64 %12, 4294967280
  %23 = insertelement <4 x double> poison, double %1, i64 0
  %24 = shufflevector <4 x double> %23, <4 x double> poison, <4 x i32> zeroinitializer
  %25 = insertelement <4 x double> poison, double %1, i64 0
  %26 = shufflevector <4 x double> %25, <4 x double> poison, <4 x i32> zeroinitializer
  %27 = insertelement <4 x double> poison, double %1, i64 0
  %28 = shufflevector <4 x double> %27, <4 x double> poison, <4 x i32> zeroinitializer
  %29 = insertelement <4 x double> poison, double %1, i64 0
  %30 = shufflevector <4 x double> %29, <4 x double> poison, <4 x i32> zeroinitializer
  br label %31

31:                                               ; preds = %31, %21
  %32 = phi i64 [ 0, %21 ], [ %53, %31 ]
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = load <4 x double>, ptr %33, align 8, !tbaa !26, !alias.scope !95, !noalias !98
  %35 = getelementptr inbounds double, ptr %33, i64 4
  %36 = load <4 x double>, ptr %35, align 8, !tbaa !26, !alias.scope !95, !noalias !98
  %37 = getelementptr inbounds double, ptr %33, i64 8
  %38 = load <4 x double>, ptr %37, align 8, !tbaa !26, !alias.scope !95, !noalias !98
  %39 = getelementptr inbounds double, ptr %33, i64 12
  %40 = load <4 x double>, ptr %39, align 8, !tbaa !26, !alias.scope !95, !noalias !98
  %41 = getelementptr inbounds double, ptr %11, i64 %32
  %42 = load <4 x double>, ptr %41, align 8, !tbaa !26, !alias.scope !98
  %43 = getelementptr inbounds double, ptr %41, i64 4
  %44 = load <4 x double>, ptr %43, align 8, !tbaa !26, !alias.scope !98
  %45 = getelementptr inbounds double, ptr %41, i64 8
  %46 = load <4 x double>, ptr %45, align 8, !tbaa !26, !alias.scope !98
  %47 = getelementptr inbounds double, ptr %41, i64 12
  %48 = load <4 x double>, ptr %47, align 8, !tbaa !26, !alias.scope !98
  %49 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %24, <4 x double> %34, <4 x double> %42)
  %50 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %26, <4 x double> %36, <4 x double> %44)
  %51 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %28, <4 x double> %38, <4 x double> %46)
  %52 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %30, <4 x double> %40, <4 x double> %48)
  store <4 x double> %49, ptr %33, align 8, !tbaa !26, !alias.scope !95, !noalias !98
  store <4 x double> %50, ptr %35, align 8, !tbaa !26, !alias.scope !95, !noalias !98
  store <4 x double> %51, ptr %37, align 8, !tbaa !26, !alias.scope !95, !noalias !98
  store <4 x double> %52, ptr %39, align 8, !tbaa !26, !alias.scope !95, !noalias !98
  %53 = add nuw i64 %32, 16
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %55, label %31, !llvm.loop !100

55:                                               ; preds = %31
  %56 = icmp eq i64 %22, %12
  br i1 %56, label %73, label %57

57:                                               ; preds = %14, %7, %55
  %58 = phi i64 [ 0, %14 ], [ 0, %7 ], [ %22, %55 ]
  %59 = xor i64 %58, -1
  %60 = and i64 %12, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds double, ptr %9, i64 %58
  %64 = load double, ptr %63, align 8, !tbaa !26
  %65 = getelementptr inbounds double, ptr %11, i64 %58
  %66 = load double, ptr %65, align 8, !tbaa !26
  %67 = tail call double @llvm.fmuladd.f64(double %1, double %64, double %66)
  store double %67, ptr %63, align 8, !tbaa !26
  %68 = or i64 %58, 1
  br label %69

69:                                               ; preds = %62, %57
  %70 = phi i64 [ %58, %57 ], [ %68, %62 ]
  %71 = sub nsw i64 0, %12
  %72 = icmp eq i64 %59, %71
  br i1 %72, label %73, label %74

73:                                               ; preds = %69, %74, %55, %3
  ret void

74:                                               ; preds = %69, %74
  %75 = phi i64 [ %87, %74 ], [ %70, %69 ]
  %76 = getelementptr inbounds double, ptr %9, i64 %75
  %77 = load double, ptr %76, align 8, !tbaa !26
  %78 = getelementptr inbounds double, ptr %11, i64 %75
  %79 = load double, ptr %78, align 8, !tbaa !26
  %80 = tail call double @llvm.fmuladd.f64(double %1, double %77, double %79)
  store double %80, ptr %76, align 8, !tbaa !26
  %81 = add nuw nsw i64 %75, 1
  %82 = getelementptr inbounds double, ptr %9, i64 %81
  %83 = load double, ptr %82, align 8, !tbaa !26
  %84 = getelementptr inbounds double, ptr %11, i64 %81
  %85 = load double, ptr %84, align 8, !tbaa !26
  %86 = tail call double @llvm.fmuladd.f64(double %1, double %83, double %85)
  store double %86, ptr %82, align 8, !tbaa !26
  %87 = add nuw nsw i64 %75, 2
  %88 = icmp eq i64 %87, %12
  br i1 %88, label %73, label %74, !llvm.loop !101
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE4saddEddRKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1, double noundef %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #3 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !24
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !8
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds double, ptr %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %93, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %3, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !24
  %15 = add nuw nsw i64 %9, 2305843009213693951
  %16 = and i64 %15, 2305843009213693951
  %17 = add nuw nsw i64 %16, 1
  %18 = icmp ult i64 %16, 15
  br i1 %18, label %80, label %19

19:                                               ; preds = %12
  %20 = shl nuw nsw i64 %9, 3
  %21 = getelementptr i8, ptr %6, i64 %20
  %22 = getelementptr i8, ptr %14, i64 %20
  %23 = icmp ult ptr %6, %22
  %24 = icmp ult ptr %14, %21
  %25 = and i1 %23, %24
  br i1 %25, label %80, label %26

26:                                               ; preds = %19
  %27 = and i64 %17, 4611686018427387888
  %28 = shl i64 %27, 3
  %29 = getelementptr i8, ptr %14, i64 %28
  %30 = shl i64 %27, 3
  %31 = getelementptr i8, ptr %6, i64 %30
  %32 = insertelement <4 x double> poison, double %2, i64 0
  %33 = shufflevector <4 x double> %32, <4 x double> poison, <4 x i32> zeroinitializer
  %34 = insertelement <4 x double> poison, double %2, i64 0
  %35 = shufflevector <4 x double> %34, <4 x double> poison, <4 x i32> zeroinitializer
  %36 = insertelement <4 x double> poison, double %2, i64 0
  %37 = shufflevector <4 x double> %36, <4 x double> poison, <4 x i32> zeroinitializer
  %38 = insertelement <4 x double> poison, double %2, i64 0
  %39 = shufflevector <4 x double> %38, <4 x double> poison, <4 x i32> zeroinitializer
  %40 = insertelement <4 x double> poison, double %1, i64 0
  %41 = shufflevector <4 x double> %40, <4 x double> poison, <4 x i32> zeroinitializer
  %42 = insertelement <4 x double> poison, double %1, i64 0
  %43 = shufflevector <4 x double> %42, <4 x double> poison, <4 x i32> zeroinitializer
  %44 = insertelement <4 x double> poison, double %1, i64 0
  %45 = shufflevector <4 x double> %44, <4 x double> poison, <4 x i32> zeroinitializer
  %46 = insertelement <4 x double> poison, double %1, i64 0
  %47 = shufflevector <4 x double> %46, <4 x double> poison, <4 x i32> zeroinitializer
  br label %48

48:                                               ; preds = %48, %26
  %49 = phi i64 [ 0, %26 ], [ %76, %48 ]
  %50 = shl i64 %49, 3
  %51 = getelementptr i8, ptr %14, i64 %50
  %52 = shl i64 %49, 3
  %53 = getelementptr i8, ptr %6, i64 %52
  %54 = load <4 x double>, ptr %53, align 8, !tbaa !26, !alias.scope !102, !noalias !105
  %55 = getelementptr double, ptr %53, i64 4
  %56 = load <4 x double>, ptr %55, align 8, !tbaa !26, !alias.scope !102, !noalias !105
  %57 = getelementptr double, ptr %53, i64 8
  %58 = load <4 x double>, ptr %57, align 8, !tbaa !26, !alias.scope !102, !noalias !105
  %59 = getelementptr double, ptr %53, i64 12
  %60 = load <4 x double>, ptr %59, align 8, !tbaa !26, !alias.scope !102, !noalias !105
  %61 = load <4 x double>, ptr %51, align 8, !tbaa !26, !alias.scope !105
  %62 = getelementptr double, ptr %51, i64 4
  %63 = load <4 x double>, ptr %62, align 8, !tbaa !26, !alias.scope !105
  %64 = getelementptr double, ptr %51, i64 8
  %65 = load <4 x double>, ptr %64, align 8, !tbaa !26, !alias.scope !105
  %66 = getelementptr double, ptr %51, i64 12
  %67 = load <4 x double>, ptr %66, align 8, !tbaa !26, !alias.scope !105
  %68 = fmul <4 x double> %61, %33
  %69 = fmul <4 x double> %63, %35
  %70 = fmul <4 x double> %65, %37
  %71 = fmul <4 x double> %67, %39
  %72 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %41, <4 x double> %54, <4 x double> %68)
  %73 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %43, <4 x double> %56, <4 x double> %69)
  %74 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %45, <4 x double> %58, <4 x double> %70)
  %75 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %47, <4 x double> %60, <4 x double> %71)
  store <4 x double> %72, ptr %53, align 8, !tbaa !26, !alias.scope !102, !noalias !105
  store <4 x double> %73, ptr %55, align 8, !tbaa !26, !alias.scope !102, !noalias !105
  store <4 x double> %74, ptr %57, align 8, !tbaa !26, !alias.scope !102, !noalias !105
  store <4 x double> %75, ptr %59, align 8, !tbaa !26, !alias.scope !102, !noalias !105
  %76 = add nuw i64 %49, 16
  %77 = icmp eq i64 %76, %27
  br i1 %77, label %78, label %48, !llvm.loop !107

78:                                               ; preds = %48
  %79 = icmp eq i64 %17, %27
  br i1 %79, label %93, label %80

80:                                               ; preds = %19, %12, %78
  %81 = phi ptr [ %14, %19 ], [ %14, %12 ], [ %29, %78 ]
  %82 = phi ptr [ %6, %19 ], [ %6, %12 ], [ %31, %78 ]
  br label %83

83:                                               ; preds = %80, %83
  %84 = phi ptr [ %87, %83 ], [ %81, %80 ]
  %85 = phi ptr [ %91, %83 ], [ %82, %80 ]
  %86 = load double, ptr %85, align 8, !tbaa !26
  %87 = getelementptr inbounds double, ptr %84, i64 1
  %88 = load double, ptr %84, align 8, !tbaa !26
  %89 = fmul double %88, %2
  %90 = tail call double @llvm.fmuladd.f64(double %1, double %86, double %89)
  store double %90, ptr %85, align 8, !tbaa !26
  %91 = getelementptr inbounds double, ptr %85, i64 1
  %92 = icmp eq ptr %91, %10
  br i1 %92, label %93, label %83, !llvm.loop !108

93:                                               ; preds = %83, %78, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE4saddEddRKS1_dS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1, double noundef %2, ptr noundef nonnull align 8 dereferenceable(88) %3, double noundef %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #9 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %74, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !24
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %3, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !24
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !24
  %17 = zext i32 %8 to i64
  %18 = icmp ult i32 %8, 8
  br i1 %18, label %54, label %19

19:                                               ; preds = %10
  %20 = shl nuw nsw i64 %17, 3
  %21 = getelementptr i8, ptr %12, i64 %20
  %22 = getelementptr i8, ptr %14, i64 %20
  %23 = getelementptr i8, ptr %16, i64 %20
  %24 = icmp ult ptr %12, %22
  %25 = icmp ult ptr %14, %21
  %26 = and i1 %24, %25
  %27 = icmp ult ptr %12, %23
  %28 = icmp ult ptr %16, %21
  %29 = and i1 %27, %28
  %30 = or i1 %26, %29
  br i1 %30, label %54, label %31

31:                                               ; preds = %19
  %32 = and i64 %17, 4294967292
  %33 = insertelement <4 x double> poison, double %2, i64 0
  %34 = shufflevector <4 x double> %33, <4 x double> poison, <4 x i32> zeroinitializer
  %35 = insertelement <4 x double> poison, double %1, i64 0
  %36 = shufflevector <4 x double> %35, <4 x double> poison, <4 x i32> zeroinitializer
  %37 = insertelement <4 x double> poison, double %4, i64 0
  %38 = shufflevector <4 x double> %37, <4 x double> poison, <4 x i32> zeroinitializer
  br label %39

39:                                               ; preds = %39, %31
  %40 = phi i64 [ 0, %31 ], [ %50, %39 ]
  %41 = getelementptr inbounds double, ptr %12, i64 %40
  %42 = load <4 x double>, ptr %41, align 8, !tbaa !26, !alias.scope !109, !noalias !112
  %43 = getelementptr inbounds double, ptr %14, i64 %40
  %44 = load <4 x double>, ptr %43, align 8, !tbaa !26, !alias.scope !115
  %45 = fmul <4 x double> %44, %34
  %46 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %36, <4 x double> %42, <4 x double> %45)
  %47 = getelementptr inbounds double, ptr %16, i64 %40
  %48 = load <4 x double>, ptr %47, align 8, !tbaa !26, !alias.scope !116
  %49 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %38, <4 x double> %48, <4 x double> %46)
  store <4 x double> %49, ptr %41, align 8, !tbaa !26, !alias.scope !109, !noalias !112
  %50 = add nuw i64 %40, 4
  %51 = icmp eq i64 %50, %32
  br i1 %51, label %52, label %39, !llvm.loop !117

52:                                               ; preds = %39
  %53 = icmp eq i64 %32, %17
  br i1 %53, label %74, label %54

54:                                               ; preds = %19, %10, %52
  %55 = phi i64 [ 0, %19 ], [ 0, %10 ], [ %32, %52 ]
  %56 = xor i64 %55, -1
  %57 = and i64 %17, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds double, ptr %12, i64 %55
  %61 = load double, ptr %60, align 8, !tbaa !26
  %62 = getelementptr inbounds double, ptr %14, i64 %55
  %63 = load double, ptr %62, align 8, !tbaa !26
  %64 = fmul double %63, %2
  %65 = tail call double @llvm.fmuladd.f64(double %1, double %61, double %64)
  %66 = getelementptr inbounds double, ptr %16, i64 %55
  %67 = load double, ptr %66, align 8, !tbaa !26
  %68 = tail call double @llvm.fmuladd.f64(double %4, double %67, double %65)
  store double %68, ptr %60, align 8, !tbaa !26
  %69 = or i64 %55, 1
  br label %70

70:                                               ; preds = %59, %54
  %71 = phi i64 [ %55, %54 ], [ %69, %59 ]
  %72 = sub nsw i64 0, %17
  %73 = icmp eq i64 %56, %72
  br i1 %73, label %74, label %75

74:                                               ; preds = %70, %75, %52, %6
  ret void

75:                                               ; preds = %70, %75
  %76 = phi i64 [ %96, %75 ], [ %71, %70 ]
  %77 = getelementptr inbounds double, ptr %12, i64 %76
  %78 = load double, ptr %77, align 8, !tbaa !26
  %79 = getelementptr inbounds double, ptr %14, i64 %76
  %80 = load double, ptr %79, align 8, !tbaa !26
  %81 = fmul double %80, %2
  %82 = tail call double @llvm.fmuladd.f64(double %1, double %78, double %81)
  %83 = getelementptr inbounds double, ptr %16, i64 %76
  %84 = load double, ptr %83, align 8, !tbaa !26
  %85 = tail call double @llvm.fmuladd.f64(double %4, double %84, double %82)
  store double %85, ptr %77, align 8, !tbaa !26
  %86 = add nuw nsw i64 %76, 1
  %87 = getelementptr inbounds double, ptr %12, i64 %86
  %88 = load double, ptr %87, align 8, !tbaa !26
  %89 = getelementptr inbounds double, ptr %14, i64 %86
  %90 = load double, ptr %89, align 8, !tbaa !26
  %91 = fmul double %90, %2
  %92 = tail call double @llvm.fmuladd.f64(double %1, double %88, double %91)
  %93 = getelementptr inbounds double, ptr %16, i64 %86
  %94 = load double, ptr %93, align 8, !tbaa !26
  %95 = tail call double @llvm.fmuladd.f64(double %4, double %94, double %92)
  store double %95, ptr %87, align 8, !tbaa !26
  %96 = add nuw nsw i64 %76, 2
  %97 = icmp eq i64 %96, %17
  br i1 %97, label %74, label %75, !llvm.loop !118
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE4saddEddRKS1_dS3_dS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1, double noundef %2, ptr noundef nonnull align 8 dereferenceable(88) %3, double noundef %4, ptr noundef nonnull align 8 dereferenceable(88) %5, double noundef %6, ptr noundef nonnull align 8 dereferenceable(88) %7) local_unnamed_addr #9 comdat align 2 {
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %70, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !24
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %3, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !24
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !24
  %19 = getelementptr inbounds %"class.dealii::Vector", ptr %7, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !24
  %21 = zext i32 %10 to i64
  %22 = icmp ult i32 %10, 8
  br i1 %22, label %68, label %23

23:                                               ; preds = %12
  %24 = shl nuw nsw i64 %21, 3
  %25 = getelementptr i8, ptr %14, i64 %24
  %26 = getelementptr i8, ptr %16, i64 %24
  %27 = getelementptr i8, ptr %18, i64 %24
  %28 = getelementptr i8, ptr %20, i64 %24
  %29 = icmp ult ptr %14, %26
  %30 = icmp ult ptr %16, %25
  %31 = and i1 %29, %30
  %32 = icmp ult ptr %14, %27
  %33 = icmp ult ptr %18, %25
  %34 = and i1 %32, %33
  %35 = or i1 %31, %34
  %36 = icmp ult ptr %14, %28
  %37 = icmp ult ptr %20, %25
  %38 = and i1 %36, %37
  %39 = or i1 %35, %38
  br i1 %39, label %68, label %40

40:                                               ; preds = %23
  %41 = and i64 %21, 4294967292
  %42 = insertelement <4 x double> poison, double %2, i64 0
  %43 = shufflevector <4 x double> %42, <4 x double> poison, <4 x i32> zeroinitializer
  %44 = insertelement <4 x double> poison, double %1, i64 0
  %45 = shufflevector <4 x double> %44, <4 x double> poison, <4 x i32> zeroinitializer
  %46 = insertelement <4 x double> poison, double %4, i64 0
  %47 = shufflevector <4 x double> %46, <4 x double> poison, <4 x i32> zeroinitializer
  %48 = insertelement <4 x double> poison, double %6, i64 0
  %49 = shufflevector <4 x double> %48, <4 x double> poison, <4 x i32> zeroinitializer
  br label %50

50:                                               ; preds = %50, %40
  %51 = phi i64 [ 0, %40 ], [ %64, %50 ]
  %52 = getelementptr inbounds double, ptr %14, i64 %51
  %53 = load <4 x double>, ptr %52, align 8, !tbaa !26, !alias.scope !119, !noalias !122
  %54 = getelementptr inbounds double, ptr %16, i64 %51
  %55 = load <4 x double>, ptr %54, align 8, !tbaa !26, !alias.scope !126
  %56 = fmul <4 x double> %55, %43
  %57 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %45, <4 x double> %53, <4 x double> %56)
  %58 = getelementptr inbounds double, ptr %18, i64 %51
  %59 = load <4 x double>, ptr %58, align 8, !tbaa !26, !alias.scope !127
  %60 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %47, <4 x double> %59, <4 x double> %57)
  %61 = getelementptr inbounds double, ptr %20, i64 %51
  %62 = load <4 x double>, ptr %61, align 8, !tbaa !26, !alias.scope !128
  %63 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %49, <4 x double> %62, <4 x double> %60)
  store <4 x double> %63, ptr %52, align 8, !tbaa !26, !alias.scope !119, !noalias !122
  %64 = add nuw i64 %51, 4
  %65 = icmp eq i64 %64, %41
  br i1 %65, label %66, label %50, !llvm.loop !129

66:                                               ; preds = %50
  %67 = icmp eq i64 %41, %21
  br i1 %67, label %70, label %68

68:                                               ; preds = %23, %12, %66
  %69 = phi i64 [ 0, %23 ], [ 0, %12 ], [ %41, %66 ]
  br label %71

70:                                               ; preds = %71, %66, %8
  ret void

71:                                               ; preds = %68, %71
  %72 = phi i64 [ %85, %71 ], [ %69, %68 ]
  %73 = getelementptr inbounds double, ptr %14, i64 %72
  %74 = load double, ptr %73, align 8, !tbaa !26
  %75 = getelementptr inbounds double, ptr %16, i64 %72
  %76 = load double, ptr %75, align 8, !tbaa !26
  %77 = fmul double %76, %2
  %78 = tail call double @llvm.fmuladd.f64(double %1, double %74, double %77)
  %79 = getelementptr inbounds double, ptr %18, i64 %72
  %80 = load double, ptr %79, align 8, !tbaa !26
  %81 = tail call double @llvm.fmuladd.f64(double %4, double %80, double %78)
  %82 = getelementptr inbounds double, ptr %20, i64 %72
  %83 = load double, ptr %82, align 8, !tbaa !26
  %84 = tail call double @llvm.fmuladd.f64(double %6, double %83, double %81)
  store double %84, ptr %73, align 8, !tbaa !26
  %85 = add nuw nsw i64 %72, 1
  %86 = icmp eq i64 %85, %21
  br i1 %86, label %70, label %71, !llvm.loop !130
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE5scaleEd(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !24
  %5 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds double, ptr %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %2
  %11 = add nuw nsw i64 %7, 2305843009213693951
  %12 = and i64 %11, 2305843009213693951
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp ult i64 %12, 15
  br i1 %14, label %46, label %15

15:                                               ; preds = %10
  %16 = and i64 %13, 4611686018427387888
  %17 = shl i64 %16, 3
  %18 = getelementptr i8, ptr %4, i64 %17
  %19 = insertelement <4 x double> poison, double %1, i64 0
  %20 = shufflevector <4 x double> %19, <4 x double> poison, <4 x i32> zeroinitializer
  %21 = insertelement <4 x double> poison, double %1, i64 0
  %22 = shufflevector <4 x double> %21, <4 x double> poison, <4 x i32> zeroinitializer
  %23 = insertelement <4 x double> poison, double %1, i64 0
  %24 = shufflevector <4 x double> %23, <4 x double> poison, <4 x i32> zeroinitializer
  %25 = insertelement <4 x double> poison, double %1, i64 0
  %26 = shufflevector <4 x double> %25, <4 x double> poison, <4 x i32> zeroinitializer
  br label %27

27:                                               ; preds = %27, %15
  %28 = phi i64 [ 0, %15 ], [ %42, %27 ]
  %29 = shl i64 %28, 3
  %30 = getelementptr i8, ptr %4, i64 %29
  %31 = load <4 x double>, ptr %30, align 8, !tbaa !26
  %32 = getelementptr double, ptr %30, i64 4
  %33 = load <4 x double>, ptr %32, align 8, !tbaa !26
  %34 = getelementptr double, ptr %30, i64 8
  %35 = load <4 x double>, ptr %34, align 8, !tbaa !26
  %36 = getelementptr double, ptr %30, i64 12
  %37 = load <4 x double>, ptr %36, align 8, !tbaa !26
  %38 = fmul <4 x double> %31, %20
  %39 = fmul <4 x double> %33, %22
  %40 = fmul <4 x double> %35, %24
  %41 = fmul <4 x double> %37, %26
  store <4 x double> %38, ptr %30, align 8, !tbaa !26
  store <4 x double> %39, ptr %32, align 8, !tbaa !26
  store <4 x double> %40, ptr %34, align 8, !tbaa !26
  store <4 x double> %41, ptr %36, align 8, !tbaa !26
  %42 = add nuw i64 %28, 16
  %43 = icmp eq i64 %42, %16
  br i1 %43, label %44, label %27, !llvm.loop !131

44:                                               ; preds = %27
  %45 = icmp eq i64 %13, %16
  br i1 %45, label %54, label %46

46:                                               ; preds = %10, %44
  %47 = phi ptr [ %4, %10 ], [ %18, %44 ]
  br label %48

48:                                               ; preds = %46, %48
  %49 = phi ptr [ %50, %48 ], [ %47, %46 ]
  %50 = getelementptr inbounds double, ptr %49, i64 1
  %51 = load double, ptr %49, align 8, !tbaa !26
  %52 = fmul double %51, %1
  store double %52, ptr %49, align 8, !tbaa !26
  %53 = icmp eq ptr %50, %8
  br i1 %53, label %54, label %48, !llvm.loop !132

54:                                               ; preds = %48, %44, %2
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEmLEd(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !24
  %5 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds double, ptr %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %2
  %11 = add nuw nsw i64 %7, 2305843009213693951
  %12 = and i64 %11, 2305843009213693951
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp ult i64 %12, 15
  br i1 %14, label %46, label %15

15:                                               ; preds = %10
  %16 = and i64 %13, 4611686018427387888
  %17 = shl i64 %16, 3
  %18 = getelementptr i8, ptr %4, i64 %17
  %19 = insertelement <4 x double> poison, double %1, i64 0
  %20 = shufflevector <4 x double> %19, <4 x double> poison, <4 x i32> zeroinitializer
  %21 = insertelement <4 x double> poison, double %1, i64 0
  %22 = shufflevector <4 x double> %21, <4 x double> poison, <4 x i32> zeroinitializer
  %23 = insertelement <4 x double> poison, double %1, i64 0
  %24 = shufflevector <4 x double> %23, <4 x double> poison, <4 x i32> zeroinitializer
  %25 = insertelement <4 x double> poison, double %1, i64 0
  %26 = shufflevector <4 x double> %25, <4 x double> poison, <4 x i32> zeroinitializer
  br label %27

27:                                               ; preds = %27, %15
  %28 = phi i64 [ 0, %15 ], [ %42, %27 ]
  %29 = shl i64 %28, 3
  %30 = getelementptr i8, ptr %4, i64 %29
  %31 = load <4 x double>, ptr %30, align 8, !tbaa !26
  %32 = getelementptr double, ptr %30, i64 4
  %33 = load <4 x double>, ptr %32, align 8, !tbaa !26
  %34 = getelementptr double, ptr %30, i64 8
  %35 = load <4 x double>, ptr %34, align 8, !tbaa !26
  %36 = getelementptr double, ptr %30, i64 12
  %37 = load <4 x double>, ptr %36, align 8, !tbaa !26
  %38 = fmul <4 x double> %31, %20
  %39 = fmul <4 x double> %33, %22
  %40 = fmul <4 x double> %35, %24
  %41 = fmul <4 x double> %37, %26
  store <4 x double> %38, ptr %30, align 8, !tbaa !26
  store <4 x double> %39, ptr %32, align 8, !tbaa !26
  store <4 x double> %40, ptr %34, align 8, !tbaa !26
  store <4 x double> %41, ptr %36, align 8, !tbaa !26
  %42 = add nuw i64 %28, 16
  %43 = icmp eq i64 %42, %16
  br i1 %43, label %44, label %27, !llvm.loop !133

44:                                               ; preds = %27
  %45 = icmp eq i64 %13, %16
  br i1 %45, label %54, label %46

46:                                               ; preds = %10, %44
  %47 = phi ptr [ %4, %10 ], [ %18, %44 ]
  br label %48

48:                                               ; preds = %46, %48
  %49 = phi ptr [ %50, %48 ], [ %47, %46 ]
  %50 = getelementptr inbounds double, ptr %49, i64 1
  %51 = load double, ptr %49, align 8, !tbaa !26
  %52 = fmul double %51, %1
  store double %52, ptr %49, align 8, !tbaa !26
  %53 = icmp eq ptr %50, %8
  br i1 %53, label %54, label %48, !llvm.loop !134

54:                                               ; preds = %48, %44, %2
  ret ptr %0
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEdVEd(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = fdiv double 1.000000e+00, %1
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !24
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds double, ptr %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %2
  %12 = add nuw nsw i64 %8, 2305843009213693951
  %13 = and i64 %12, 2305843009213693951
  %14 = add nuw nsw i64 %13, 1
  %15 = icmp ult i64 %13, 15
  br i1 %15, label %47, label %16

16:                                               ; preds = %11
  %17 = and i64 %14, 4611686018427387888
  %18 = shl i64 %17, 3
  %19 = getelementptr i8, ptr %5, i64 %18
  %20 = insertelement <4 x double> poison, double %3, i64 0
  %21 = shufflevector <4 x double> %20, <4 x double> poison, <4 x i32> zeroinitializer
  %22 = insertelement <4 x double> poison, double %3, i64 0
  %23 = shufflevector <4 x double> %22, <4 x double> poison, <4 x i32> zeroinitializer
  %24 = insertelement <4 x double> poison, double %3, i64 0
  %25 = shufflevector <4 x double> %24, <4 x double> poison, <4 x i32> zeroinitializer
  %26 = insertelement <4 x double> poison, double %3, i64 0
  %27 = shufflevector <4 x double> %26, <4 x double> poison, <4 x i32> zeroinitializer
  br label %28

28:                                               ; preds = %28, %16
  %29 = phi i64 [ 0, %16 ], [ %43, %28 ]
  %30 = shl i64 %29, 3
  %31 = getelementptr i8, ptr %5, i64 %30
  %32 = load <4 x double>, ptr %31, align 8, !tbaa !26
  %33 = getelementptr double, ptr %31, i64 4
  %34 = load <4 x double>, ptr %33, align 8, !tbaa !26
  %35 = getelementptr double, ptr %31, i64 8
  %36 = load <4 x double>, ptr %35, align 8, !tbaa !26
  %37 = getelementptr double, ptr %31, i64 12
  %38 = load <4 x double>, ptr %37, align 8, !tbaa !26
  %39 = fmul <4 x double> %21, %32
  %40 = fmul <4 x double> %23, %34
  %41 = fmul <4 x double> %25, %36
  %42 = fmul <4 x double> %27, %38
  store <4 x double> %39, ptr %31, align 8, !tbaa !26
  store <4 x double> %40, ptr %33, align 8, !tbaa !26
  store <4 x double> %41, ptr %35, align 8, !tbaa !26
  store <4 x double> %42, ptr %37, align 8, !tbaa !26
  %43 = add nuw i64 %29, 16
  %44 = icmp eq i64 %43, %17
  br i1 %44, label %45, label %28, !llvm.loop !135

45:                                               ; preds = %28
  %46 = icmp eq i64 %14, %17
  br i1 %46, label %55, label %47

47:                                               ; preds = %11, %45
  %48 = phi ptr [ %5, %11 ], [ %19, %45 ]
  br label %49

49:                                               ; preds = %47, %49
  %50 = phi ptr [ %51, %49 ], [ %48, %47 ]
  %51 = getelementptr inbounds double, ptr %50, i64 1
  %52 = load double, ptr %50, align 8, !tbaa !26
  %53 = fmul double %3, %52
  store double %53, ptr %50, align 8, !tbaa !26
  %54 = icmp eq ptr %51, %9
  br i1 %54, label %55, label %49, !llvm.loop !136

55:                                               ; preds = %49, %45, %2
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE3equEdRKS1_dS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #9 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %97, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !24
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %4, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !24
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !24
  %16 = zext i32 %7 to i64
  %17 = icmp ult i32 %7, 16
  br i1 %17, label %79, label %18

18:                                               ; preds = %9
  %19 = ptrtoint ptr %15 to i64
  %20 = ptrtoint ptr %13 to i64
  %21 = ptrtoint ptr %11 to i64
  %22 = sub i64 %19, %21
  %23 = icmp ult i64 %22, 128
  %24 = sub i64 %19, %20
  %25 = icmp ult i64 %24, 128
  %26 = or i1 %23, %25
  br i1 %26, label %79, label %27

27:                                               ; preds = %18
  %28 = and i64 %16, 4294967280
  %29 = insertelement <4 x double> poison, double %3, i64 0
  %30 = shufflevector <4 x double> %29, <4 x double> poison, <4 x i32> zeroinitializer
  %31 = insertelement <4 x double> poison, double %3, i64 0
  %32 = shufflevector <4 x double> %31, <4 x double> poison, <4 x i32> zeroinitializer
  %33 = insertelement <4 x double> poison, double %3, i64 0
  %34 = shufflevector <4 x double> %33, <4 x double> poison, <4 x i32> zeroinitializer
  %35 = insertelement <4 x double> poison, double %3, i64 0
  %36 = shufflevector <4 x double> %35, <4 x double> poison, <4 x i32> zeroinitializer
  %37 = insertelement <4 x double> poison, double %1, i64 0
  %38 = shufflevector <4 x double> %37, <4 x double> poison, <4 x i32> zeroinitializer
  %39 = insertelement <4 x double> poison, double %1, i64 0
  %40 = shufflevector <4 x double> %39, <4 x double> poison, <4 x i32> zeroinitializer
  %41 = insertelement <4 x double> poison, double %1, i64 0
  %42 = shufflevector <4 x double> %41, <4 x double> poison, <4 x i32> zeroinitializer
  %43 = insertelement <4 x double> poison, double %1, i64 0
  %44 = shufflevector <4 x double> %43, <4 x double> poison, <4 x i32> zeroinitializer
  br label %45

45:                                               ; preds = %45, %27
  %46 = phi i64 [ 0, %27 ], [ %75, %45 ]
  %47 = getelementptr inbounds double, ptr %11, i64 %46
  %48 = load <4 x double>, ptr %47, align 8, !tbaa !26
  %49 = getelementptr inbounds double, ptr %47, i64 4
  %50 = load <4 x double>, ptr %49, align 8, !tbaa !26
  %51 = getelementptr inbounds double, ptr %47, i64 8
  %52 = load <4 x double>, ptr %51, align 8, !tbaa !26
  %53 = getelementptr inbounds double, ptr %47, i64 12
  %54 = load <4 x double>, ptr %53, align 8, !tbaa !26
  %55 = getelementptr inbounds double, ptr %13, i64 %46
  %56 = load <4 x double>, ptr %55, align 8, !tbaa !26
  %57 = getelementptr inbounds double, ptr %55, i64 4
  %58 = load <4 x double>, ptr %57, align 8, !tbaa !26
  %59 = getelementptr inbounds double, ptr %55, i64 8
  %60 = load <4 x double>, ptr %59, align 8, !tbaa !26
  %61 = getelementptr inbounds double, ptr %55, i64 12
  %62 = load <4 x double>, ptr %61, align 8, !tbaa !26
  %63 = fmul <4 x double> %56, %30
  %64 = fmul <4 x double> %58, %32
  %65 = fmul <4 x double> %60, %34
  %66 = fmul <4 x double> %62, %36
  %67 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %38, <4 x double> %48, <4 x double> %63)
  %68 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %40, <4 x double> %50, <4 x double> %64)
  %69 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %42, <4 x double> %52, <4 x double> %65)
  %70 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %44, <4 x double> %54, <4 x double> %66)
  %71 = getelementptr inbounds double, ptr %15, i64 %46
  store <4 x double> %67, ptr %71, align 8, !tbaa !26
  %72 = getelementptr inbounds double, ptr %71, i64 4
  store <4 x double> %68, ptr %72, align 8, !tbaa !26
  %73 = getelementptr inbounds double, ptr %71, i64 8
  store <4 x double> %69, ptr %73, align 8, !tbaa !26
  %74 = getelementptr inbounds double, ptr %71, i64 12
  store <4 x double> %70, ptr %74, align 8, !tbaa !26
  %75 = add nuw i64 %46, 16
  %76 = icmp eq i64 %75, %28
  br i1 %76, label %77, label %45, !llvm.loop !137

77:                                               ; preds = %45
  %78 = icmp eq i64 %28, %16
  br i1 %78, label %97, label %79

79:                                               ; preds = %18, %9, %77
  %80 = phi i64 [ 0, %18 ], [ 0, %9 ], [ %28, %77 ]
  %81 = xor i64 %80, -1
  %82 = and i64 %16, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %93, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds double, ptr %11, i64 %80
  %86 = load double, ptr %85, align 8, !tbaa !26
  %87 = getelementptr inbounds double, ptr %13, i64 %80
  %88 = load double, ptr %87, align 8, !tbaa !26
  %89 = fmul double %88, %3
  %90 = tail call double @llvm.fmuladd.f64(double %1, double %86, double %89)
  %91 = getelementptr inbounds double, ptr %15, i64 %80
  store double %90, ptr %91, align 8, !tbaa !26
  %92 = or i64 %80, 1
  br label %93

93:                                               ; preds = %84, %79
  %94 = phi i64 [ %80, %79 ], [ %92, %84 ]
  %95 = sub nsw i64 0, %16
  %96 = icmp eq i64 %81, %95
  br i1 %96, label %97, label %98

97:                                               ; preds = %93, %98, %77, %5
  ret void

98:                                               ; preds = %93, %98
  %99 = phi i64 [ %115, %98 ], [ %94, %93 ]
  %100 = getelementptr inbounds double, ptr %11, i64 %99
  %101 = load double, ptr %100, align 8, !tbaa !26
  %102 = getelementptr inbounds double, ptr %13, i64 %99
  %103 = load double, ptr %102, align 8, !tbaa !26
  %104 = fmul double %103, %3
  %105 = tail call double @llvm.fmuladd.f64(double %1, double %101, double %104)
  %106 = getelementptr inbounds double, ptr %15, i64 %99
  store double %105, ptr %106, align 8, !tbaa !26
  %107 = add nuw nsw i64 %99, 1
  %108 = getelementptr inbounds double, ptr %11, i64 %107
  %109 = load double, ptr %108, align 8, !tbaa !26
  %110 = getelementptr inbounds double, ptr %13, i64 %107
  %111 = load double, ptr %110, align 8, !tbaa !26
  %112 = fmul double %111, %3
  %113 = tail call double @llvm.fmuladd.f64(double %1, double %109, double %112)
  %114 = getelementptr inbounds double, ptr %15, i64 %107
  store double %113, ptr %114, align 8, !tbaa !26
  %115 = add nuw nsw i64 %99, 2
  %116 = icmp eq i64 %115, %16
  br i1 %116, label %97, label %98, !llvm.loop !138
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE3equEdRKS1_dS3_dS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3, ptr noundef nonnull align 8 dereferenceable(88) %4, double noundef %5, ptr noundef nonnull align 8 dereferenceable(88) %6) local_unnamed_addr #9 comdat align 2 {
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %80, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !24
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %4, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !24
  %16 = getelementptr inbounds %"class.dealii::Vector", ptr %6, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !24
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !24
  %20 = zext i32 %9 to i64
  %21 = icmp ult i32 %9, 8
  br i1 %21, label %59, label %22

22:                                               ; preds = %11
  %23 = ptrtoint ptr %19 to i64
  %24 = ptrtoint ptr %17 to i64
  %25 = ptrtoint ptr %15 to i64
  %26 = ptrtoint ptr %13 to i64
  %27 = sub i64 %23, %26
  %28 = icmp ult i64 %27, 32
  %29 = sub i64 %23, %25
  %30 = icmp ult i64 %29, 32
  %31 = or i1 %28, %30
  %32 = sub i64 %23, %24
  %33 = icmp ult i64 %32, 32
  %34 = or i1 %31, %33
  br i1 %34, label %59, label %35

35:                                               ; preds = %22
  %36 = and i64 %20, 4294967292
  %37 = insertelement <4 x double> poison, double %3, i64 0
  %38 = shufflevector <4 x double> %37, <4 x double> poison, <4 x i32> zeroinitializer
  %39 = insertelement <4 x double> poison, double %1, i64 0
  %40 = shufflevector <4 x double> %39, <4 x double> poison, <4 x i32> zeroinitializer
  %41 = insertelement <4 x double> poison, double %5, i64 0
  %42 = shufflevector <4 x double> %41, <4 x double> poison, <4 x i32> zeroinitializer
  br label %43

43:                                               ; preds = %43, %35
  %44 = phi i64 [ 0, %35 ], [ %55, %43 ]
  %45 = getelementptr inbounds double, ptr %13, i64 %44
  %46 = load <4 x double>, ptr %45, align 8, !tbaa !26
  %47 = getelementptr inbounds double, ptr %15, i64 %44
  %48 = load <4 x double>, ptr %47, align 8, !tbaa !26
  %49 = fmul <4 x double> %48, %38
  %50 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %40, <4 x double> %46, <4 x double> %49)
  %51 = getelementptr inbounds double, ptr %17, i64 %44
  %52 = load <4 x double>, ptr %51, align 8, !tbaa !26
  %53 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %42, <4 x double> %52, <4 x double> %50)
  %54 = getelementptr inbounds double, ptr %19, i64 %44
  store <4 x double> %53, ptr %54, align 8, !tbaa !26
  %55 = add nuw i64 %44, 4
  %56 = icmp eq i64 %55, %36
  br i1 %56, label %57, label %43, !llvm.loop !139

57:                                               ; preds = %43
  %58 = icmp eq i64 %36, %20
  br i1 %58, label %80, label %59

59:                                               ; preds = %22, %11, %57
  %60 = phi i64 [ 0, %22 ], [ 0, %11 ], [ %36, %57 ]
  %61 = xor i64 %60, -1
  %62 = and i64 %20, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %76, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds double, ptr %13, i64 %60
  %66 = load double, ptr %65, align 8, !tbaa !26
  %67 = getelementptr inbounds double, ptr %15, i64 %60
  %68 = load double, ptr %67, align 8, !tbaa !26
  %69 = fmul double %68, %3
  %70 = tail call double @llvm.fmuladd.f64(double %1, double %66, double %69)
  %71 = getelementptr inbounds double, ptr %17, i64 %60
  %72 = load double, ptr %71, align 8, !tbaa !26
  %73 = tail call double @llvm.fmuladd.f64(double %5, double %72, double %70)
  %74 = getelementptr inbounds double, ptr %19, i64 %60
  store double %73, ptr %74, align 8, !tbaa !26
  %75 = or i64 %60, 1
  br label %76

76:                                               ; preds = %64, %59
  %77 = phi i64 [ %60, %59 ], [ %75, %64 ]
  %78 = sub nsw i64 0, %20
  %79 = icmp eq i64 %61, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %76, %81, %57, %7
  ret void

81:                                               ; preds = %76, %81
  %82 = phi i64 [ %104, %81 ], [ %77, %76 ]
  %83 = getelementptr inbounds double, ptr %13, i64 %82
  %84 = load double, ptr %83, align 8, !tbaa !26
  %85 = getelementptr inbounds double, ptr %15, i64 %82
  %86 = load double, ptr %85, align 8, !tbaa !26
  %87 = fmul double %86, %3
  %88 = tail call double @llvm.fmuladd.f64(double %1, double %84, double %87)
  %89 = getelementptr inbounds double, ptr %17, i64 %82
  %90 = load double, ptr %89, align 8, !tbaa !26
  %91 = tail call double @llvm.fmuladd.f64(double %5, double %90, double %88)
  %92 = getelementptr inbounds double, ptr %19, i64 %82
  store double %91, ptr %92, align 8, !tbaa !26
  %93 = add nuw nsw i64 %82, 1
  %94 = getelementptr inbounds double, ptr %13, i64 %93
  %95 = load double, ptr %94, align 8, !tbaa !26
  %96 = getelementptr inbounds double, ptr %15, i64 %93
  %97 = load double, ptr %96, align 8, !tbaa !26
  %98 = fmul double %97, %3
  %99 = tail call double @llvm.fmuladd.f64(double %1, double %95, double %98)
  %100 = getelementptr inbounds double, ptr %17, i64 %93
  %101 = load double, ptr %100, align 8, !tbaa !26
  %102 = tail call double @llvm.fmuladd.f64(double %5, double %101, double %99)
  %103 = getelementptr inbounds double, ptr %19, i64 %93
  store double %102, ptr %103, align 8, !tbaa !26
  %104 = add nuw nsw i64 %82, 2
  %105 = icmp eq i64 %104, %20
  br i1 %105, label %80, label %81, !llvm.loop !140
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE5ratioERKS1_S3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext true)
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %65, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !24
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !24
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !24
  %19 = zext i32 %10 to i64
  %20 = icmp ult i32 %10, 4
  br i1 %20, label %44, label %21

21:                                               ; preds = %12
  %22 = ptrtoint ptr %18 to i64
  %23 = ptrtoint ptr %16 to i64
  %24 = ptrtoint ptr %14 to i64
  %25 = sub i64 %22, %24
  %26 = icmp ult i64 %25, 32
  %27 = sub i64 %22, %23
  %28 = icmp ult i64 %27, 32
  %29 = or i1 %26, %28
  br i1 %29, label %44, label %30

30:                                               ; preds = %21
  %31 = and i64 %19, 4294967292
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %40, %32 ]
  %34 = getelementptr inbounds double, ptr %14, i64 %33
  %35 = load <4 x double>, ptr %34, align 8, !tbaa !26
  %36 = getelementptr inbounds double, ptr %16, i64 %33
  %37 = load <4 x double>, ptr %36, align 8, !tbaa !26
  %38 = fdiv <4 x double> %35, %37
  %39 = getelementptr inbounds double, ptr %18, i64 %33
  store <4 x double> %38, ptr %39, align 8, !tbaa !26
  %40 = add nuw i64 %33, 4
  %41 = icmp eq i64 %40, %31
  br i1 %41, label %42, label %32, !llvm.loop !141

42:                                               ; preds = %32
  %43 = icmp eq i64 %31, %19
  br i1 %43, label %65, label %44

44:                                               ; preds = %21, %12, %42
  %45 = phi i64 [ 0, %21 ], [ 0, %12 ], [ %31, %42 ]
  %46 = xor i64 %45, -1
  %47 = add nsw i64 %46, %19
  %48 = and i64 %19, 3
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %62, label %50

50:                                               ; preds = %44, %50
  %51 = phi i64 [ %59, %50 ], [ %45, %44 ]
  %52 = phi i64 [ %60, %50 ], [ 0, %44 ]
  %53 = getelementptr inbounds double, ptr %14, i64 %51
  %54 = load double, ptr %53, align 8, !tbaa !26
  %55 = getelementptr inbounds double, ptr %16, i64 %51
  %56 = load double, ptr %55, align 8, !tbaa !26
  %57 = fdiv double %54, %56
  %58 = getelementptr inbounds double, ptr %18, i64 %51
  store double %57, ptr %58, align 8, !tbaa !26
  %59 = add nuw nsw i64 %51, 1
  %60 = add i64 %52, 1
  %61 = icmp eq i64 %60, %48
  br i1 %61, label %62, label %50, !llvm.loop !142

62:                                               ; preds = %50, %44
  %63 = phi i64 [ %45, %44 ], [ %59, %50 ]
  %64 = icmp ult i64 %47, 3
  br i1 %64, label %65, label %66

65:                                               ; preds = %62, %66, %42, %3
  ret void

66:                                               ; preds = %62, %66
  %67 = phi i64 [ %95, %66 ], [ %63, %62 ]
  %68 = getelementptr inbounds double, ptr %14, i64 %67
  %69 = load double, ptr %68, align 8, !tbaa !26
  %70 = getelementptr inbounds double, ptr %16, i64 %67
  %71 = load double, ptr %70, align 8, !tbaa !26
  %72 = fdiv double %69, %71
  %73 = getelementptr inbounds double, ptr %18, i64 %67
  store double %72, ptr %73, align 8, !tbaa !26
  %74 = add nuw nsw i64 %67, 1
  %75 = getelementptr inbounds double, ptr %14, i64 %74
  %76 = load double, ptr %75, align 8, !tbaa !26
  %77 = getelementptr inbounds double, ptr %16, i64 %74
  %78 = load double, ptr %77, align 8, !tbaa !26
  %79 = fdiv double %76, %78
  %80 = getelementptr inbounds double, ptr %18, i64 %74
  store double %79, ptr %80, align 8, !tbaa !26
  %81 = add nuw nsw i64 %67, 2
  %82 = getelementptr inbounds double, ptr %14, i64 %81
  %83 = load double, ptr %82, align 8, !tbaa !26
  %84 = getelementptr inbounds double, ptr %16, i64 %81
  %85 = load double, ptr %84, align 8, !tbaa !26
  %86 = fdiv double %83, %85
  %87 = getelementptr inbounds double, ptr %18, i64 %81
  store double %86, ptr %87, align 8, !tbaa !26
  %88 = add nuw nsw i64 %67, 3
  %89 = getelementptr inbounds double, ptr %14, i64 %88
  %90 = load double, ptr %89, align 8, !tbaa !26
  %91 = getelementptr inbounds double, ptr %16, i64 %88
  %92 = load double, ptr %91, align 8, !tbaa !26
  %93 = fdiv double %90, %92
  %94 = getelementptr inbounds double, ptr %18, i64 %88
  store double %93, ptr %94, align 8, !tbaa !26
  %95 = add nuw nsw i64 %67, 4
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %65, label %66, !llvm.loop !143
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorIdE5printEPKc(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %8 = icmp eq ptr %1, null
  %9 = select i1 %8, ptr @.str.10, ptr %1
  br label %12

10:                                               ; preds = %12, %2
  %11 = tail call i32 @putchar(i32 10)
  ret void

12:                                               ; preds = %6, %12
  %13 = phi i64 [ 0, %6 ], [ %18, %12 ]
  %14 = load ptr, ptr %7, align 8, !tbaa !24
  %15 = getelementptr inbounds double, ptr %14, i64 %13
  %16 = load double, ptr %15, align 8, !tbaa !26
  %17 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) %9, double noundef %16)
  %18 = add nuw nsw i64 %13, 1
  %19 = load i32, ptr %3, align 8, !tbaa !8
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 %18, %20
  br i1 %21, label %12, label %10
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #11

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorIdE5printERSojbb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = getelementptr i8, ptr %9, i64 -24
  %11 = load i64, ptr %10, align 8
  %12 = getelementptr inbounds i8, ptr %1, i64 %11
  %13 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 5
  %14 = load i32, ptr %13, align 8, !tbaa !144
  %15 = and i32 %14, 5
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.1, i32 noundef 784, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %18 unwind label %24

18:                                               ; preds = %17
  %19 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %19, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %20 unwind label %22

20:                                               ; preds = %18
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %21 unwind label %24

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %19) #24
  br label %155

24:                                               ; preds = %20, %17
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %155

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 3
  %28 = load i32, ptr %27, align 8, !tbaa !150
  %29 = zext i32 %2 to i64
  %30 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 1
  %31 = load i64, ptr %30, align 8, !tbaa !151
  store i64 %29, ptr %30, align 8, !tbaa !151
  %32 = load i64, ptr %10, align 8
  %33 = getelementptr inbounds i8, ptr %1, i64 %32
  %34 = getelementptr inbounds %"class.std::ios_base", ptr %33, i64 0, i32 1
  store i64 %29, ptr %34, align 8, !tbaa !151
  %35 = load i64, ptr %10, align 8
  %36 = getelementptr inbounds i8, ptr %1, i64 %35
  %37 = getelementptr inbounds %"class.std::ios_base", ptr %36, i64 0, i32 3
  %38 = load i32, ptr %37, align 8, !tbaa !152
  %39 = and i32 %38, -261
  %40 = select i1 %3, i32 256, i32 4
  %41 = or i32 %39, %40
  store i32 %41, ptr %37, align 8, !tbaa !152
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %43 = load i32, ptr %42, align 8, !tbaa !8
  %44 = icmp eq i32 %43, 0
  br i1 %4, label %48, label %45

45:                                               ; preds = %26
  br i1 %44, label %107, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  br label %73

48:                                               ; preds = %26
  br i1 %44, label %107, label %49

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  br label %51

51:                                               ; preds = %49, %68
  %52 = phi i64 [ 0, %49 ], [ %69, %68 ]
  %53 = load ptr, ptr %50, align 8, !tbaa !24
  %54 = getelementptr inbounds double, ptr %53, i64 %52
  %55 = load double, ptr %54, align 8, !tbaa !26
  %56 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, double noundef %55)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6)
  store i8 32, ptr %6, align 1, !tbaa !153
  %57 = load ptr, ptr %56, align 8, !tbaa !5
  %58 = getelementptr i8, ptr %57, i64 -24
  %59 = load i64, ptr %58, align 8
  %60 = getelementptr inbounds i8, ptr %56, i64 %59
  %61 = getelementptr inbounds %"class.std::ios_base", ptr %60, i64 0, i32 2
  %62 = load i64, ptr %61, align 8, !tbaa !154
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %51
  %65 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %56, ptr noundef nonnull %6, i64 noundef 1)
  br label %68

66:                                               ; preds = %51
  %67 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %56, i8 noundef signext 32)
  br label %68

68:                                               ; preds = %64, %66
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6)
  %69 = add nuw nsw i64 %52, 1
  %70 = load i32, ptr %42, align 8, !tbaa !8
  %71 = zext i32 %70 to i64
  %72 = icmp ult i64 %69, %71
  br i1 %72, label %51, label %107

73:                                               ; preds = %46, %99
  %74 = phi i64 [ 0, %46 ], [ %103, %99 ]
  %75 = load ptr, ptr %47, align 8, !tbaa !24
  %76 = getelementptr inbounds double, ptr %75, i64 %74
  %77 = load double, ptr %76, align 8, !tbaa !26
  %78 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, double noundef %77)
  %79 = load ptr, ptr %78, align 8, !tbaa !5
  %80 = getelementptr i8, ptr %79, i64 -24
  %81 = load i64, ptr %80, align 8
  %82 = getelementptr inbounds i8, ptr %78, i64 %81
  %83 = getelementptr inbounds %"class.std::basic_ios", ptr %82, i64 0, i32 5
  %84 = load ptr, ptr %83, align 8, !tbaa !155
  %85 = icmp eq ptr %84, null
  br i1 %85, label %86, label %87

86:                                               ; preds = %73
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

87:                                               ; preds = %73
  %88 = getelementptr inbounds %"class.std::ctype", ptr %84, i64 0, i32 8
  %89 = load i8, ptr %88, align 8, !tbaa !158
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::ctype", ptr %84, i64 0, i32 9, i64 10
  %93 = load i8, ptr %92, align 1, !tbaa !153
  br label %99

94:                                               ; preds = %87
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %84)
  %95 = load ptr, ptr %84, align 8, !tbaa !5
  %96 = getelementptr inbounds ptr, ptr %95, i64 6
  %97 = load ptr, ptr %96, align 8
  %98 = tail call noundef signext i8 %97(ptr noundef nonnull align 8 dereferenceable(570) %84, i8 noundef signext 10)
  br label %99

99:                                               ; preds = %91, %94
  %100 = phi i8 [ %93, %91 ], [ %98, %94 ]
  %101 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %78, i8 noundef signext %100)
  %102 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %101)
  %103 = add nuw nsw i64 %74, 1
  %104 = load i32, ptr %42, align 8, !tbaa !8
  %105 = zext i32 %104 to i64
  %106 = icmp ult i64 %103, %105
  br i1 %106, label %73, label %107

107:                                              ; preds = %99, %68, %45, %48
  %108 = load ptr, ptr %1, align 8, !tbaa !5
  %109 = getelementptr i8, ptr %108, i64 -24
  %110 = load i64, ptr %109, align 8
  %111 = getelementptr inbounds i8, ptr %1, i64 %110
  %112 = getelementptr inbounds %"class.std::basic_ios", ptr %111, i64 0, i32 5
  %113 = load ptr, ptr %112, align 8, !tbaa !155
  %114 = icmp eq ptr %113, null
  br i1 %114, label %115, label %116

115:                                              ; preds = %107
  call void @_ZSt16__throw_bad_castv() #26
  unreachable

116:                                              ; preds = %107
  %117 = getelementptr inbounds %"class.std::ctype", ptr %113, i64 0, i32 8
  %118 = load i8, ptr %117, align 8, !tbaa !158
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.std::ctype", ptr %113, i64 0, i32 9, i64 10
  %122 = load i8, ptr %121, align 1, !tbaa !153
  br label %128

123:                                              ; preds = %116
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %113)
  %124 = load ptr, ptr %113, align 8, !tbaa !5
  %125 = getelementptr inbounds ptr, ptr %124, i64 6
  %126 = load ptr, ptr %125, align 8
  %127 = call noundef signext i8 %126(ptr noundef nonnull align 8 dereferenceable(570) %113, i8 noundef signext 10)
  br label %128

128:                                              ; preds = %120, %123
  %129 = phi i8 [ %122, %120 ], [ %127, %123 ]
  %130 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %129)
  %131 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %130)
  %132 = load ptr, ptr %1, align 8, !tbaa !5
  %133 = getelementptr i8, ptr %132, i64 -24
  %134 = load i64, ptr %133, align 8
  %135 = getelementptr inbounds i8, ptr %1, i64 %134
  %136 = getelementptr inbounds %"class.std::ios_base", ptr %135, i64 0, i32 5
  %137 = load i32, ptr %136, align 8, !tbaa !144
  %138 = and i32 %137, 5
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %149, label %140

140:                                              ; preds = %128
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %8, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %8)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %8, ptr noundef nonnull @.str.1, i32 noundef 803, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %141 unwind label %147

141:                                              ; preds = %140
  %142 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %142, ptr noundef nonnull align 8 dereferenceable(60) %8)
          to label %143 unwind label %145

143:                                              ; preds = %141
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %142, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %142, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %144 unwind label %147

144:                                              ; preds = %143
  unreachable

145:                                              ; preds = %141
  %146 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %142) #24
  br label %155

147:                                              ; preds = %143, %140
  %148 = landingpad { ptr, i32 }
          cleanup
  br label %155

149:                                              ; preds = %128
  %150 = getelementptr inbounds %"class.std::ios_base", ptr %135, i64 0, i32 3
  store i32 %28, ptr %150, align 8, !tbaa !150
  %151 = load i64, ptr %133, align 8
  %152 = getelementptr inbounds i8, ptr %1, i64 %151
  %153 = and i64 %31, 4294967295
  %154 = getelementptr inbounds %"class.std::ios_base", ptr %152, i64 0, i32 1
  store i64 %153, ptr %154, align 8, !tbaa !151
  ret void

155:                                              ; preds = %147, %145, %24, %22
  %156 = phi ptr [ %7, %22 ], [ %7, %24 ], [ %8, %145 ], [ %8, %147 ]
  %157 = phi { ptr, i32 } [ %23, %22 ], [ %25, %24 ], [ %146, %145 ], [ %148, %147 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %156) #24
  resume { ptr, i32 } %157
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #12

; Function Attrs: nounwind
declare void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #13

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorIdE11block_writeERSo(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = load ptr, ptr %1, align 8, !tbaa !5
  %8 = getelementptr i8, ptr %7, i64 -24
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = getelementptr inbounds %"class.std::ios_base", ptr %10, i64 0, i32 5
  %12 = load i32, ptr %11, align 8, !tbaa !144
  %13 = and i32 %12, 5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.1, i32 noundef 814, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %16 unwind label %22

16:                                               ; preds = %15
  %17 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %17, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %18 unwind label %20

18:                                               ; preds = %16
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %17, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %19 unwind label %22

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %16
  %21 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %17) #24
  br label %24

22:                                               ; preds = %18, %15
  %23 = landingpad { ptr, i32 }
          cleanup
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi { ptr, i32 } [ %23, %22 ], [ %21, %20 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  br label %61

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %28 = load i32, ptr %27, align 8, !tbaa !8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #24
  %29 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) @.str.5, i32 noundef %28) #24
  %30 = call i64 @strlen(ptr nonnull dereferenceable(1) %4)
  %31 = getelementptr inbounds i8, ptr %4, i64 %30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(3) %31, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %32 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %4) #27
  %33 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %4, i64 noundef %32)
  %34 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !24
  %36 = load i32, ptr %27, align 8, !tbaa !8
  %37 = zext i32 %36 to i64
  %38 = shl nuw nsw i64 %37, 3
  %39 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef %35, i64 noundef %38)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #24
  store i8 93, ptr %5, align 1, !tbaa !153
  %40 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %5, i64 noundef 1)
  %41 = load ptr, ptr %1, align 8, !tbaa !5
  %42 = getelementptr i8, ptr %41, i64 -24
  %43 = load i64, ptr %42, align 8
  %44 = getelementptr inbounds i8, ptr %1, i64 %43
  %45 = getelementptr inbounds %"class.std::ios_base", ptr %44, i64 0, i32 5
  %46 = load i32, ptr %45, align 8, !tbaa !144
  %47 = and i32 %46, 5
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %26
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.1, i32 noundef 837, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %50 unwind label %56

50:                                               ; preds = %49
  %51 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %51, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %52 unwind label %54

52:                                               ; preds = %50
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %51, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %51, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %53 unwind label %56

53:                                               ; preds = %52
  unreachable

54:                                               ; preds = %50
  %55 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %51) #24
  br label %58

56:                                               ; preds = %52, %49
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi { ptr, i32 } [ %57, %56 ], [ %55, %54 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  br label %61

60:                                               ; preds = %26
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  ret void

61:                                               ; preds = %58, %24
  %62 = phi { ptr, i32 } [ %59, %58 ], [ %25, %24 ]
  resume { ptr, i32 } %62
}

; Function Attrs: nofree nounwind
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #11

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #14

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE10block_readERSi(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = load ptr, ptr %1, align 8, !tbaa !5
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 %10
  %12 = getelementptr inbounds %"class.std::ios_base", ptr %11, i64 0, i32 5
  %13 = load i32, ptr %12, align 8, !tbaa !144
  %14 = and i32 %13, 5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.1, i32 noundef 845, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.4)
          to label %17 unwind label %23

17:                                               ; preds = %16
  %18 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %18, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %19 unwind label %21

19:                                               ; preds = %17
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %18, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %18, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %20 unwind label %23

20:                                               ; preds = %19
  unreachable

21:                                               ; preds = %17
  %22 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %18) #24
  br label %25

23:                                               ; preds = %19, %16
  %24 = landingpad { ptr, i32 }
          cleanup
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi { ptr, i32 } [ %24, %23 ], [ %22, %21 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  br label %70

27:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #24
  %28 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi7getlineEPclc(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %4, i64 noundef 16, i8 noundef signext 10)
  %29 = call i64 @__isoc23_strtol(ptr noundef nonnull %4, ptr noundef null, i32 noundef 10) #24
  %30 = trunc i64 %29 to i32
  %31 = load ptr, ptr %0, align 8, !tbaa !5
  %32 = getelementptr inbounds ptr, ptr %31, i64 2
  %33 = load ptr, ptr %32, align 8
  call void %33(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %30, i1 noundef zeroext true)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #24
  %34 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %5, i64 noundef 1)
  %35 = load i8, ptr %5, align 1, !tbaa !153
  %36 = icmp eq i8 %35, 91
  br i1 %36, label %46, label %37

37:                                               ; preds = %27
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.1, i32 noundef 862, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.4)
          to label %38 unwind label %44

38:                                               ; preds = %37
  %39 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %39, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %40 unwind label %42

40:                                               ; preds = %38
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %39, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %39, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %41 unwind label %44

41:                                               ; preds = %40
  unreachable

42:                                               ; preds = %38
  %43 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %39) #24
  br label %67

44:                                               ; preds = %40, %37
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %67

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !24
  %49 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %50 = load i32, ptr %49, align 8, !tbaa !8
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 3
  %53 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef %48, i64 noundef %52)
  %54 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %5, i64 noundef 1)
  %55 = load i8, ptr %5, align 1, !tbaa !153
  %56 = icmp eq i8 %55, 93
  br i1 %56, label %66, label %57

57:                                               ; preds = %46
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.1, i32 noundef 870, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.4)
          to label %58 unwind label %64

58:                                               ; preds = %57
  %59 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %59, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %60 unwind label %62

60:                                               ; preds = %58
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %59, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %59, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %61 unwind label %64

61:                                               ; preds = %60
  unreachable

62:                                               ; preds = %58
  %63 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %59) #24
  br label %67

64:                                               ; preds = %60, %57
  %65 = landingpad { ptr, i32 }
          cleanup
  br label %67

66:                                               ; preds = %46
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  ret void

67:                                               ; preds = %64, %62, %44, %42
  %68 = phi ptr [ %6, %42 ], [ %6, %44 ], [ %7, %62 ], [ %7, %64 ]
  %69 = phi { ptr, i32 } [ %43, %42 ], [ %45, %44 ], [ %63, %62 ], [ %65, %64 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %68) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  br label %70

70:                                               ; preds = %67, %25
  %71 = phi { ptr, i32 } [ %69, %67 ], [ %26, %25 ]
  resume { ptr, i32 } %71
}

declare noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi7getlineEPclc(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef, i64 noundef, i8 noundef signext) local_unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii6VectorIdE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !23
  %4 = shl i32 %3, 3
  %5 = add i32 %4, 88
  ret i32 %5
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfEC2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorIfEC5Ev) align 2 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorIfEC5ERKS1_) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  store i32 %5, ptr %3, align 8, !tbaa !161
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 2
  %7 = load i32, ptr %4, align 8, !tbaa !161
  store i32 %7, ptr %6, align 4, !tbaa !163
  %8 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  store ptr null, ptr %8, align 8, !tbaa !164
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %2
  %11 = zext i32 %7 to i64
  %12 = shl nuw nsw i64 %11, 2
  %13 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %12) #22
          to label %14 unwind label %23

14:                                               ; preds = %10
  store ptr %13, ptr %8, align 8, !tbaa !164
  %15 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !164
  %17 = icmp ugt i32 %7, 1
  br i1 %17, label %18, label %19, !prof !25

18:                                               ; preds = %14
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %13, ptr align 4 %16, i64 %12, i1 false)
  br label %25

19:                                               ; preds = %14
  %20 = icmp eq i32 %7, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %19
  %22 = load float, ptr %16, align 4, !tbaa !165
  store float %22, ptr %13, align 4, !tbaa !165
  br label %25

23:                                               ; preds = %10
  %24 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %26 unwind label %27

25:                                               ; preds = %21, %19, %18, %2
  ret void

26:                                               ; preds = %23
  resume { ptr, i32 } %24

27:                                               ; preds = %23
  %28 = landingpad { ptr, i32 }
          catch ptr null
  %29 = extractvalue { ptr, i32 } %28, 0
  tail call void @__clang_call_terminate(ptr %29) #23
  unreachable
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii6VectorIfE4sizeEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !161
  ret i32 %3
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii6VectorIfE5beginEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !164
  ret ptr %3
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii6VectorIfE3endEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !164
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds float, ptr %3, i64 %6
  ret ptr %7
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZN6dealii6VectorIfE5beginEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !164
  ret ptr %3
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfEC2Ej(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) unnamed_addr #0 comdat($_ZN6dealii6VectorIfEC5Ej) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = zext i32 %1 to i64
  %7 = shl nuw nsw i64 %6, 2
  %8 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %7) #22
          to label %9 unwind label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 2
  store ptr %8, ptr %10, align 8, !tbaa !164
  store i32 %1, ptr %11, align 4, !tbaa !163
  store i32 %1, ptr %3, align 8, !tbaa !161
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %8, i8 0, i64 %7, i1 false), !tbaa !165
  br label %12

12:                                               ; preds = %2, %9
  ret void

13:                                               ; preds = %5
  %14 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %15 unwind label %16

15:                                               ; preds = %13
  resume { ptr, i32 } %14

16:                                               ; preds = %13
  %17 = landingpad { ptr, i32 }
          catch ptr null
  %18 = extractvalue { ptr, i32 } %17, 0
  tail call void @__clang_call_terminate(ptr %18) #23
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorIfED5Ev) align 2 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !164
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #25
  store ptr null, ptr %2, align 8, !tbaa !164
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorIfED5Ev) align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !164
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #25
  store ptr null, ptr %2, align 8, !tbaa !164
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  resume { ptr, i32 } %9
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorIfE8compressEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE6reinitEjb(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !164
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(ptr noundef nonnull %7) #25
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  br label %32

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !163
  %15 = icmp ult i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !164
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %18) #25
  br label %21

21:                                               ; preds = %20, %16
  %22 = zext i32 %1 to i64
  %23 = shl nuw nsw i64 %22, 2
  %24 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %23) #22
  store ptr %24, ptr %17, align 8, !tbaa !164
  store i32 %1, ptr %13, align 4, !tbaa !163
  br label %25

25:                                               ; preds = %21, %12
  %26 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  store i32 %1, ptr %26, align 8, !tbaa !161
  br i1 %2, label %32, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !164
  %30 = zext i32 %1 to i64
  %31 = shl nuw nsw i64 %30, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %29, i8 0, i64 %31, i1 false), !tbaa !165
  br label %32

32:                                               ; preds = %27, %10, %25
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEaSEf(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds float, ptr %8, i64 %9
  %11 = add nuw nsw i64 %9, 4611686018427387903
  %12 = and i64 %11, 4611686018427387903
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp ult i64 %12, 31
  br i1 %14, label %38, label %15

15:                                               ; preds = %6
  %16 = and i64 %13, 9223372036854775776
  %17 = shl i64 %16, 2
  %18 = getelementptr i8, ptr %8, i64 %17
  %19 = insertelement <8 x float> poison, float %1, i64 0
  %20 = shufflevector <8 x float> %19, <8 x float> poison, <8 x i32> zeroinitializer
  %21 = insertelement <8 x float> poison, float %1, i64 0
  %22 = shufflevector <8 x float> %21, <8 x float> poison, <8 x i32> zeroinitializer
  %23 = insertelement <8 x float> poison, float %1, i64 0
  %24 = shufflevector <8 x float> %23, <8 x float> poison, <8 x i32> zeroinitializer
  %25 = insertelement <8 x float> poison, float %1, i64 0
  %26 = shufflevector <8 x float> %25, <8 x float> poison, <8 x i32> zeroinitializer
  br label %27

27:                                               ; preds = %27, %15
  %28 = phi i64 [ 0, %15 ], [ %34, %27 ]
  %29 = shl i64 %28, 2
  %30 = getelementptr i8, ptr %8, i64 %29
  store <8 x float> %20, ptr %30, align 4, !tbaa !165
  %31 = getelementptr float, ptr %30, i64 8
  store <8 x float> %22, ptr %31, align 4, !tbaa !165
  %32 = getelementptr float, ptr %30, i64 16
  store <8 x float> %24, ptr %32, align 4, !tbaa !165
  %33 = getelementptr float, ptr %30, i64 24
  store <8 x float> %26, ptr %33, align 4, !tbaa !165
  %34 = add nuw i64 %28, 32
  %35 = icmp eq i64 %34, %16
  br i1 %35, label %36, label %27, !llvm.loop !167

36:                                               ; preds = %27
  %37 = icmp eq i64 %13, %16
  br i1 %37, label %44, label %38

38:                                               ; preds = %6, %36
  %39 = phi ptr [ %8, %6 ], [ %18, %36 ]
  br label %40

40:                                               ; preds = %38, %40
  %41 = phi ptr [ %42, %40 ], [ %39, %38 ]
  store float %1, ptr %41, align 4, !tbaa !165
  %42 = getelementptr inbounds float, ptr %41, i64 1
  %43 = icmp eq ptr %42, %10
  br i1 %43, label %44, label %40, !llvm.loop !168

44:                                               ; preds = %40, %36, %2
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE4swapERS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !32
  %6 = load i32, ptr %4, align 8, !tbaa !32
  store i32 %6, ptr %3, align 8, !tbaa !32
  store i32 %5, ptr %4, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 2
  %9 = load i32, ptr %7, align 4, !tbaa !32
  %10 = load i32, ptr %8, align 4, !tbaa !32
  store i32 %10, ptr %7, align 4, !tbaa !32
  store i32 %9, ptr %8, align 4, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %11, align 8, !tbaa !33
  %14 = load ptr, ptr %12, align 8, !tbaa !33
  store ptr %14, ptr %11, align 8, !tbaa !33
  store ptr %13, ptr %12, align 8, !tbaa !33
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZN6dealii6VectorIfE3endEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !164
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds float, ptr %3, i64 %6
  ret ptr %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !161
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !161
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !164
  %19 = load i32, ptr %3, align 8, !tbaa !161
  %20 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !164
  %22 = icmp ugt i32 %19, 1
  br i1 %22, label %23, label %26, !prof !25

23:                                               ; preds = %16
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %21, ptr align 4 %18, i64 %25, i1 false)
  br label %30

26:                                               ; preds = %16
  %27 = icmp eq i32 %19, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = load float, ptr %18, align 4, !tbaa !165
  store float %29, ptr %21, align 4, !tbaa !165
  br label %30

30:                                               ; preds = %28, %26, %23, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEaSERKNS_11BlockVectorIfEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::BlockVectorBase.10", ptr %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.10", ptr %1, i64 0, i32 2, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !34
  %6 = zext i32 %5 to i64
  %7 = load ptr, ptr %4, align 8, !tbaa !40
  %8 = getelementptr inbounds i32, ptr %7, i64 %6
  %9 = load i32, ptr %8, align 4, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !161
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = load ptr, ptr %0, align 8, !tbaa !5
  %15 = getelementptr inbounds ptr, ptr %14, i64 2
  %16 = load ptr, ptr %15, align 8
  tail call void %16(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %9, i1 noundef zeroext true)
  %17 = load i32, ptr %3, align 8, !tbaa !34
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi i32 [ %17, %13 ], [ %5, %2 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %102, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.dealii::BlockVectorBase.10", ptr %1, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !169
  %24 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = ptrtoint ptr %25 to i64
  %27 = zext i32 %19 to i64
  br label %28

28:                                               ; preds = %21, %103
  %29 = phi i64 [ 0, %21 ], [ %105, %103 ]
  %30 = phi i32 [ 0, %21 ], [ %104, %103 ]
  %31 = getelementptr inbounds %"class.dealii::Vector.8", ptr %23, i64 %29, i32 1
  %32 = load i32, ptr %31, align 8, !tbaa !161
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %103, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.dealii::Vector.8", ptr %23, i64 %29, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !164
  %37 = ptrtoint ptr %36 to i64
  %38 = zext i32 %32 to i64
  %39 = icmp ult i32 %32, 32
  br i1 %39, label %78, label %40

40:                                               ; preds = %34
  %41 = add nsw i64 %38, -1
  %42 = trunc i64 %41 to i32
  %43 = xor i32 %30, -1
  %44 = icmp ult i32 %43, %42
  %45 = icmp ugt i64 %41, 4294967295
  %46 = or i1 %44, %45
  br i1 %46, label %78, label %47

47:                                               ; preds = %40
  %48 = zext i32 %30 to i64
  %49 = shl nuw nsw i64 %48, 2
  %50 = add i64 %49, %26
  %51 = sub i64 %50, %37
  %52 = icmp ult i64 %51, 128
  br i1 %52, label %78, label %53

53:                                               ; preds = %47
  %54 = and i64 %38, 4294967264
  %55 = trunc i64 %54 to i32
  %56 = add i32 %30, %55
  br label %57

57:                                               ; preds = %57, %53
  %58 = phi i64 [ 0, %53 ], [ %74, %57 ]
  %59 = trunc i64 %58 to i32
  %60 = add i32 %30, %59
  %61 = getelementptr inbounds float, ptr %36, i64 %58
  %62 = load <8 x float>, ptr %61, align 4, !tbaa !165
  %63 = getelementptr inbounds float, ptr %61, i64 8
  %64 = load <8 x float>, ptr %63, align 4, !tbaa !165
  %65 = getelementptr inbounds float, ptr %61, i64 16
  %66 = load <8 x float>, ptr %65, align 4, !tbaa !165
  %67 = getelementptr inbounds float, ptr %61, i64 24
  %68 = load <8 x float>, ptr %67, align 4, !tbaa !165
  %69 = zext i32 %60 to i64
  %70 = getelementptr inbounds float, ptr %25, i64 %69
  store <8 x float> %62, ptr %70, align 4, !tbaa !165
  %71 = getelementptr inbounds float, ptr %70, i64 8
  store <8 x float> %64, ptr %71, align 4, !tbaa !165
  %72 = getelementptr inbounds float, ptr %70, i64 16
  store <8 x float> %66, ptr %72, align 4, !tbaa !165
  %73 = getelementptr inbounds float, ptr %70, i64 24
  store <8 x float> %68, ptr %73, align 4, !tbaa !165
  %74 = add nuw i64 %58, 32
  %75 = icmp eq i64 %74, %54
  br i1 %75, label %76, label %57, !llvm.loop !171

76:                                               ; preds = %57
  %77 = icmp eq i64 %54, %38
  br i1 %77, label %103, label %78

78:                                               ; preds = %47, %40, %34, %76
  %79 = phi i64 [ 0, %47 ], [ 0, %40 ], [ 0, %34 ], [ %54, %76 ]
  %80 = phi i32 [ %30, %47 ], [ %30, %40 ], [ %30, %34 ], [ %56, %76 ]
  %81 = xor i64 %79, -1
  %82 = add nsw i64 %81, %38
  %83 = and i64 %38, 3
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %97, label %85

85:                                               ; preds = %78, %85
  %86 = phi i64 [ %93, %85 ], [ %79, %78 ]
  %87 = phi i32 [ %94, %85 ], [ %80, %78 ]
  %88 = phi i64 [ %95, %85 ], [ 0, %78 ]
  %89 = getelementptr inbounds float, ptr %36, i64 %86
  %90 = load float, ptr %89, align 4, !tbaa !165
  %91 = zext i32 %87 to i64
  %92 = getelementptr inbounds float, ptr %25, i64 %91
  store float %90, ptr %92, align 4, !tbaa !165
  %93 = add nuw nsw i64 %86, 1
  %94 = add i32 %87, 1
  %95 = add i64 %88, 1
  %96 = icmp eq i64 %95, %83
  br i1 %96, label %97, label %85, !llvm.loop !172

97:                                               ; preds = %85, %78
  %98 = phi i32 [ undef, %78 ], [ %94, %85 ]
  %99 = phi i64 [ %79, %78 ], [ %93, %85 ]
  %100 = phi i32 [ %80, %78 ], [ %94, %85 ]
  %101 = icmp ult i64 %82, 3
  br i1 %101, label %103, label %107

102:                                              ; preds = %103, %18
  ret ptr %0

103:                                              ; preds = %97, %107, %76, %28
  %104 = phi i32 [ %30, %28 ], [ %56, %76 ], [ %98, %97 ], [ %133, %107 ]
  %105 = add nuw nsw i64 %29, 1
  %106 = icmp eq i64 %105, %27
  br i1 %106, label %102, label %28

107:                                              ; preds = %97, %107
  %108 = phi i64 [ %132, %107 ], [ %99, %97 ]
  %109 = phi i32 [ %133, %107 ], [ %100, %97 ]
  %110 = getelementptr inbounds float, ptr %36, i64 %108
  %111 = load float, ptr %110, align 4, !tbaa !165
  %112 = zext i32 %109 to i64
  %113 = getelementptr inbounds float, ptr %25, i64 %112
  store float %111, ptr %113, align 4, !tbaa !165
  %114 = add nuw nsw i64 %108, 1
  %115 = add i32 %109, 1
  %116 = getelementptr inbounds float, ptr %36, i64 %114
  %117 = load float, ptr %116, align 4, !tbaa !165
  %118 = zext i32 %115 to i64
  %119 = getelementptr inbounds float, ptr %25, i64 %118
  store float %117, ptr %119, align 4, !tbaa !165
  %120 = add nuw nsw i64 %108, 2
  %121 = add i32 %109, 2
  %122 = getelementptr inbounds float, ptr %36, i64 %120
  %123 = load float, ptr %122, align 4, !tbaa !165
  %124 = zext i32 %121 to i64
  %125 = getelementptr inbounds float, ptr %25, i64 %124
  store float %123, ptr %125, align 4, !tbaa !165
  %126 = add nuw nsw i64 %108, 3
  %127 = add i32 %109, 3
  %128 = getelementptr inbounds float, ptr %36, i64 %126
  %129 = load float, ptr %128, align 4, !tbaa !165
  %130 = zext i32 %127 to i64
  %131 = getelementptr inbounds float, ptr %25, i64 %130
  store float %129, ptr %131, align 4, !tbaa !165
  %132 = add nuw nsw i64 %108, 4
  %133 = add i32 %109, 4
  %134 = icmp eq i64 %132, %38
  br i1 %134, label %103, label %107, !llvm.loop !173
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorIfEclEj(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !164
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds float, ptr %4, i64 %5
  %7 = load float, ptr %6, align 4, !tbaa !165
  ret float %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorIfE8norm_sqrEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !161
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !164
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %31

13:                                               ; preds = %31, %5
  %14 = phi float [ undef, %5 ], [ %53, %31 ]
  %15 = phi i64 [ 0, %5 ], [ %54, %31 ]
  %16 = phi float [ 0.000000e+00, %5 ], [ %53, %31 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %26, %18 ], [ %15, %13 ]
  %20 = phi float [ %25, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %27, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds float, ptr %7, i64 %19
  %23 = load float, ptr %22, align 4, !tbaa !165
  %24 = fmul float %23, %23
  %25 = fadd float %20, %24
  %26 = add nuw nsw i64 %19, 1
  %27 = add i64 %21, 1
  %28 = icmp eq i64 %27, %9
  br i1 %28, label %29, label %18, !llvm.loop !174

29:                                               ; preds = %13, %18, %1
  %30 = phi float [ 0.000000e+00, %1 ], [ %14, %13 ], [ %25, %18 ]
  ret float %30

31:                                               ; preds = %31, %11
  %32 = phi i64 [ 0, %11 ], [ %54, %31 ]
  %33 = phi float [ 0.000000e+00, %11 ], [ %53, %31 ]
  %34 = phi i64 [ 0, %11 ], [ %55, %31 ]
  %35 = getelementptr inbounds float, ptr %7, i64 %32
  %36 = load float, ptr %35, align 4, !tbaa !165
  %37 = fmul float %36, %36
  %38 = fadd float %33, %37
  %39 = or i64 %32, 1
  %40 = getelementptr inbounds float, ptr %7, i64 %39
  %41 = load float, ptr %40, align 4, !tbaa !165
  %42 = fmul float %41, %41
  %43 = fadd float %38, %42
  %44 = or i64 %32, 2
  %45 = getelementptr inbounds float, ptr %7, i64 %44
  %46 = load float, ptr %45, align 4, !tbaa !165
  %47 = fmul float %46, %46
  %48 = fadd float %43, %47
  %49 = or i64 %32, 3
  %50 = getelementptr inbounds float, ptr %7, i64 %49
  %51 = load float, ptr %50, align 4, !tbaa !165
  %52 = fmul float %51, %51
  %53 = fadd float %48, %52
  %54 = add nuw nsw i64 %32, 4
  %55 = add i64 %34, 4
  %56 = icmp eq i64 %55, %12
  br i1 %56, label %13, label %31
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorIfE10mean_valueEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !161
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !164
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 7
  %10 = icmp ult i32 %3, 8
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967288
  br label %32

13:                                               ; preds = %32, %5
  %14 = phi float [ undef, %5 ], [ %66, %32 ]
  %15 = phi i64 [ 0, %5 ], [ %67, %32 ]
  %16 = phi float [ 0.000000e+00, %5 ], [ %66, %32 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %25, %18 ], [ %15, %13 ]
  %20 = phi float [ %24, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %26, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds float, ptr %7, i64 %19
  %23 = load float, ptr %22, align 4, !tbaa !165
  %24 = fadd float %20, %23
  %25 = add nuw nsw i64 %19, 1
  %26 = add i64 %21, 1
  %27 = icmp eq i64 %26, %9
  br i1 %27, label %28, label %18, !llvm.loop !175

28:                                               ; preds = %13, %18, %1
  %29 = phi float [ 0.000000e+00, %1 ], [ %14, %13 ], [ %24, %18 ]
  %30 = uitofp i32 %3 to float
  %31 = fdiv float %29, %30
  ret float %31

32:                                               ; preds = %32, %11
  %33 = phi i64 [ 0, %11 ], [ %67, %32 ]
  %34 = phi float [ 0.000000e+00, %11 ], [ %66, %32 ]
  %35 = phi i64 [ 0, %11 ], [ %68, %32 ]
  %36 = getelementptr inbounds float, ptr %7, i64 %33
  %37 = load float, ptr %36, align 4, !tbaa !165
  %38 = fadd float %34, %37
  %39 = or i64 %33, 1
  %40 = getelementptr inbounds float, ptr %7, i64 %39
  %41 = load float, ptr %40, align 4, !tbaa !165
  %42 = fadd float %38, %41
  %43 = or i64 %33, 2
  %44 = getelementptr inbounds float, ptr %7, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !165
  %46 = fadd float %42, %45
  %47 = or i64 %33, 3
  %48 = getelementptr inbounds float, ptr %7, i64 %47
  %49 = load float, ptr %48, align 4, !tbaa !165
  %50 = fadd float %46, %49
  %51 = or i64 %33, 4
  %52 = getelementptr inbounds float, ptr %7, i64 %51
  %53 = load float, ptr %52, align 4, !tbaa !165
  %54 = fadd float %50, %53
  %55 = or i64 %33, 5
  %56 = getelementptr inbounds float, ptr %7, i64 %55
  %57 = load float, ptr %56, align 4, !tbaa !165
  %58 = fadd float %54, %57
  %59 = or i64 %33, 6
  %60 = getelementptr inbounds float, ptr %7, i64 %59
  %61 = load float, ptr %60, align 4, !tbaa !165
  %62 = fadd float %58, %61
  %63 = or i64 %33, 7
  %64 = getelementptr inbounds float, ptr %7, i64 %63
  %65 = load float, ptr %64, align 4, !tbaa !165
  %66 = fadd float %62, %65
  %67 = add nuw nsw i64 %33, 8
  %68 = add i64 %35, 8
  %69 = icmp eq i64 %68, %12
  br i1 %69, label %13, label %32
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorIfE7l1_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !161
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !164
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %31

13:                                               ; preds = %31, %5
  %14 = phi float [ undef, %5 ], [ %53, %31 ]
  %15 = phi i64 [ 0, %5 ], [ %54, %31 ]
  %16 = phi float [ 0.000000e+00, %5 ], [ %53, %31 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %26, %18 ], [ %15, %13 ]
  %20 = phi float [ %25, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %27, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds float, ptr %7, i64 %19
  %23 = load float, ptr %22, align 4, !tbaa !165
  %24 = tail call float @llvm.fabs.f32(float %23)
  %25 = fadd float %20, %24
  %26 = add nuw nsw i64 %19, 1
  %27 = add i64 %21, 1
  %28 = icmp eq i64 %27, %9
  br i1 %28, label %29, label %18, !llvm.loop !176

29:                                               ; preds = %13, %18, %1
  %30 = phi float [ 0.000000e+00, %1 ], [ %14, %13 ], [ %25, %18 ]
  ret float %30

31:                                               ; preds = %31, %11
  %32 = phi i64 [ 0, %11 ], [ %54, %31 ]
  %33 = phi float [ 0.000000e+00, %11 ], [ %53, %31 ]
  %34 = phi i64 [ 0, %11 ], [ %55, %31 ]
  %35 = getelementptr inbounds float, ptr %7, i64 %32
  %36 = load float, ptr %35, align 4, !tbaa !165
  %37 = tail call float @llvm.fabs.f32(float %36)
  %38 = fadd float %33, %37
  %39 = or i64 %32, 1
  %40 = getelementptr inbounds float, ptr %7, i64 %39
  %41 = load float, ptr %40, align 4, !tbaa !165
  %42 = tail call float @llvm.fabs.f32(float %41)
  %43 = fadd float %38, %42
  %44 = or i64 %32, 2
  %45 = getelementptr inbounds float, ptr %7, i64 %44
  %46 = load float, ptr %45, align 4, !tbaa !165
  %47 = tail call float @llvm.fabs.f32(float %46)
  %48 = fadd float %43, %47
  %49 = or i64 %32, 3
  %50 = getelementptr inbounds float, ptr %7, i64 %49
  %51 = load float, ptr %50, align 4, !tbaa !165
  %52 = tail call float @llvm.fabs.f32(float %51)
  %53 = fadd float %48, %52
  %54 = add nuw nsw i64 %32, 4
  %55 = add i64 %34, 4
  %56 = icmp eq i64 %55, %12
  br i1 %56, label %13, label %31
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorIfE7l2_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !161
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !164
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %39, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64 [ 0, %11 ], [ %36, %13 ]
  %15 = phi float [ 0.000000e+00, %11 ], [ %35, %13 ]
  %16 = phi i64 [ 0, %11 ], [ %37, %13 ]
  %17 = getelementptr inbounds float, ptr %7, i64 %14
  %18 = load float, ptr %17, align 4, !tbaa !165
  %19 = fmul float %18, %18
  %20 = fadd float %15, %19
  %21 = or i64 %14, 1
  %22 = getelementptr inbounds float, ptr %7, i64 %21
  %23 = load float, ptr %22, align 4, !tbaa !165
  %24 = fmul float %23, %23
  %25 = fadd float %20, %24
  %26 = or i64 %14, 2
  %27 = getelementptr inbounds float, ptr %7, i64 %26
  %28 = load float, ptr %27, align 4, !tbaa !165
  %29 = fmul float %28, %28
  %30 = fadd float %25, %29
  %31 = or i64 %14, 3
  %32 = getelementptr inbounds float, ptr %7, i64 %31
  %33 = load float, ptr %32, align 4, !tbaa !165
  %34 = fmul float %33, %33
  %35 = fadd float %30, %34
  %36 = add nuw nsw i64 %14, 4
  %37 = add i64 %16, 4
  %38 = icmp eq i64 %37, %12
  br i1 %38, label %39, label %13

39:                                               ; preds = %13, %5
  %40 = phi float [ undef, %5 ], [ %35, %13 ]
  %41 = phi i64 [ 0, %5 ], [ %36, %13 ]
  %42 = phi float [ 0.000000e+00, %5 ], [ %35, %13 ]
  %43 = icmp eq i64 %9, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %39, %44
  %45 = phi i64 [ %52, %44 ], [ %41, %39 ]
  %46 = phi float [ %51, %44 ], [ %42, %39 ]
  %47 = phi i64 [ %53, %44 ], [ 0, %39 ]
  %48 = getelementptr inbounds float, ptr %7, i64 %45
  %49 = load float, ptr %48, align 4, !tbaa !165
  %50 = fmul float %49, %49
  %51 = fadd float %46, %50
  %52 = add nuw nsw i64 %45, 1
  %53 = add i64 %47, 1
  %54 = icmp eq i64 %53, %9
  br i1 %54, label %55, label %44, !llvm.loop !177

55:                                               ; preds = %39, %44, %1
  %56 = phi float [ 0.000000e+00, %1 ], [ %40, %39 ], [ %51, %44 ]
  %57 = tail call float @sqrtf(float noundef %56) #24
  ret float %57
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorIfE7lp_normEf(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  br label %12

8:                                                ; preds = %12, %2
  %9 = phi float [ 0.000000e+00, %2 ], [ %20, %12 ]
  %10 = fdiv float 1.000000e+00, %1
  %11 = tail call float @powf(float noundef %9, float noundef %10) #24
  ret float %11

12:                                               ; preds = %6, %12
  %13 = phi i64 [ 0, %6 ], [ %21, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %20, %12 ]
  %15 = load ptr, ptr %7, align 8, !tbaa !164
  %16 = getelementptr inbounds float, ptr %15, i64 %13
  %17 = load float, ptr %16, align 4, !tbaa !165
  %18 = tail call float @llvm.fabs.f32(float %17)
  %19 = tail call float @powf(float noundef %18, float noundef %1) #24
  %20 = fadd float %14, %19
  %21 = add nuw nsw i64 %13, 1
  %22 = load i32, ptr %3, align 8, !tbaa !161
  %23 = zext i32 %22 to i64
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %12, label %8
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorIfE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !161
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !164
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %32

13:                                               ; preds = %32, %5
  %14 = phi float [ undef, %5 ], [ %58, %32 ]
  %15 = phi i64 [ 0, %5 ], [ %59, %32 ]
  %16 = phi float [ 0.000000e+00, %5 ], [ %58, %32 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %27, %18 ], [ %15, %13 ]
  %20 = phi float [ %26, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %28, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds float, ptr %7, i64 %19
  %23 = load float, ptr %22, align 4, !tbaa !165
  %24 = tail call float @llvm.fabs.f32(float %23)
  %25 = fcmp olt float %24, %20
  %26 = select i1 %25, float %20, float %24
  %27 = add nuw nsw i64 %19, 1
  %28 = add i64 %21, 1
  %29 = icmp eq i64 %28, %9
  br i1 %29, label %30, label %18, !llvm.loop !178

30:                                               ; preds = %13, %18, %1
  %31 = phi float [ 0.000000e+00, %1 ], [ %14, %13 ], [ %26, %18 ]
  ret float %31

32:                                               ; preds = %32, %11
  %33 = phi i64 [ 0, %11 ], [ %59, %32 ]
  %34 = phi float [ 0.000000e+00, %11 ], [ %58, %32 ]
  %35 = phi i64 [ 0, %11 ], [ %60, %32 ]
  %36 = getelementptr inbounds float, ptr %7, i64 %33
  %37 = load float, ptr %36, align 4, !tbaa !165
  %38 = tail call float @llvm.fabs.f32(float %37)
  %39 = fcmp olt float %38, %34
  %40 = select i1 %39, float %34, float %38
  %41 = or i64 %33, 1
  %42 = getelementptr inbounds float, ptr %7, i64 %41
  %43 = load float, ptr %42, align 4, !tbaa !165
  %44 = tail call float @llvm.fabs.f32(float %43)
  %45 = fcmp olt float %44, %40
  %46 = select i1 %45, float %40, float %44
  %47 = or i64 %33, 2
  %48 = getelementptr inbounds float, ptr %7, i64 %47
  %49 = load float, ptr %48, align 4, !tbaa !165
  %50 = tail call float @llvm.fabs.f32(float %49)
  %51 = fcmp olt float %50, %46
  %52 = select i1 %51, float %46, float %50
  %53 = or i64 %33, 3
  %54 = getelementptr inbounds float, ptr %7, i64 %53
  %55 = load float, ptr %54, align 4, !tbaa !165
  %56 = tail call float @llvm.fabs.f32(float %55)
  %57 = fcmp olt float %56, %52
  %58 = select i1 %57, float %52, float %56
  %59 = add nuw nsw i64 %33, 4
  %60 = add i64 %35, 4
  %61 = icmp eq i64 %60, %12
  br i1 %61, label %13, label %32
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIfE8all_zeroEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !161
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !164
  %8 = zext i32 %3 to i64
  %9 = load float, ptr %7, align 4, !tbaa !165
  %10 = fcmp une float %9, 0.000000e+00
  br i1 %10, label %21, label %11

11:                                               ; preds = %5, %15
  %12 = phi i64 [ %13, %15 ], [ 0, %5 ]
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp eq i64 %13, %8
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds float, ptr %7, i64 %13
  %17 = load float, ptr %16, align 4, !tbaa !165
  %18 = fcmp une float %17, 0.000000e+00
  br i1 %18, label %19, label %11

19:                                               ; preds = %11, %15
  %20 = icmp uge i64 %13, %8
  br label %21

21:                                               ; preds = %19, %5, %1
  %22 = phi i1 [ true, %1 ], [ false, %5 ], [ %20, %19 ]
  ret i1 %22
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIfE15is_non_negativeEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !161
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !164
  %8 = zext i32 %3 to i64
  %9 = load float, ptr %7, align 4, !tbaa !165
  %10 = fcmp ult float %9, 0.000000e+00
  br i1 %10, label %21, label %11

11:                                               ; preds = %5, %15
  %12 = phi i64 [ %13, %15 ], [ 0, %5 ]
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp eq i64 %13, %8
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds float, ptr %7, i64 %13
  %17 = load float, ptr %16, align 4, !tbaa !165
  %18 = fcmp ult float %17, 0.000000e+00
  br i1 %18, label %19, label %11

19:                                               ; preds = %11, %15
  %20 = icmp uge i64 %13, %8
  br label %21

21:                                               ; preds = %19, %5, %1
  %22 = phi i1 [ true, %1 ], [ false, %5 ], [ %20, %19 ]
  ret i1 %22
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 4 dereferenceable(4) ptr @_ZN6dealii6VectorIfEclEj(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !164
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds float, ptr %4, i64 %5
  ret ptr %6
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEpLERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %95, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %11 = zext i32 %4 to i64
  %12 = icmp ult i32 %4, 32
  br i1 %12, label %48, label %13

13:                                               ; preds = %6
  %14 = shl nuw nsw i64 %11, 2
  %15 = getelementptr i8, ptr %10, i64 %14
  %16 = getelementptr i8, ptr %8, i64 %14
  %17 = icmp ult ptr %10, %16
  %18 = icmp ult ptr %8, %15
  %19 = and i1 %17, %18
  br i1 %19, label %48, label %20

20:                                               ; preds = %13
  %21 = and i64 %11, 4294967264
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %44, %22 ]
  %24 = getelementptr inbounds float, ptr %8, i64 %23
  %25 = load <8 x float>, ptr %24, align 4, !tbaa !165, !alias.scope !179
  %26 = getelementptr inbounds float, ptr %24, i64 8
  %27 = load <8 x float>, ptr %26, align 4, !tbaa !165, !alias.scope !179
  %28 = getelementptr inbounds float, ptr %24, i64 16
  %29 = load <8 x float>, ptr %28, align 4, !tbaa !165, !alias.scope !179
  %30 = getelementptr inbounds float, ptr %24, i64 24
  %31 = load <8 x float>, ptr %30, align 4, !tbaa !165, !alias.scope !179
  %32 = getelementptr inbounds float, ptr %10, i64 %23
  %33 = load <8 x float>, ptr %32, align 4, !tbaa !165, !alias.scope !182, !noalias !179
  %34 = getelementptr inbounds float, ptr %32, i64 8
  %35 = load <8 x float>, ptr %34, align 4, !tbaa !165, !alias.scope !182, !noalias !179
  %36 = getelementptr inbounds float, ptr %32, i64 16
  %37 = load <8 x float>, ptr %36, align 4, !tbaa !165, !alias.scope !182, !noalias !179
  %38 = getelementptr inbounds float, ptr %32, i64 24
  %39 = load <8 x float>, ptr %38, align 4, !tbaa !165, !alias.scope !182, !noalias !179
  %40 = fadd <8 x float> %25, %33
  %41 = fadd <8 x float> %27, %35
  %42 = fadd <8 x float> %29, %37
  %43 = fadd <8 x float> %31, %39
  store <8 x float> %40, ptr %32, align 4, !tbaa !165, !alias.scope !182, !noalias !179
  store <8 x float> %41, ptr %34, align 4, !tbaa !165, !alias.scope !182, !noalias !179
  store <8 x float> %42, ptr %36, align 4, !tbaa !165, !alias.scope !182, !noalias !179
  store <8 x float> %43, ptr %38, align 4, !tbaa !165, !alias.scope !182, !noalias !179
  %44 = add nuw i64 %23, 32
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %22, !llvm.loop !184

46:                                               ; preds = %22
  %47 = icmp eq i64 %21, %11
  br i1 %47, label %95, label %48

48:                                               ; preds = %13, %6, %46
  %49 = phi i64 [ 0, %13 ], [ 0, %6 ], [ %21, %46 ]
  %50 = xor i64 %49, -1
  %51 = add nsw i64 %50, %11
  %52 = and i64 %11, 3
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %48, %54
  %55 = phi i64 [ %62, %54 ], [ %49, %48 ]
  %56 = phi i64 [ %63, %54 ], [ 0, %48 ]
  %57 = getelementptr inbounds float, ptr %8, i64 %55
  %58 = load float, ptr %57, align 4, !tbaa !165
  %59 = getelementptr inbounds float, ptr %10, i64 %55
  %60 = load float, ptr %59, align 4, !tbaa !165
  %61 = fadd float %58, %60
  store float %61, ptr %59, align 4, !tbaa !165
  %62 = add nuw nsw i64 %55, 1
  %63 = add i64 %56, 1
  %64 = icmp eq i64 %63, %52
  br i1 %64, label %65, label %54, !llvm.loop !185

65:                                               ; preds = %54, %48
  %66 = phi i64 [ %49, %48 ], [ %62, %54 ]
  %67 = icmp ult i64 %51, 3
  br i1 %67, label %95, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %93, %68 ], [ %66, %65 ]
  %70 = getelementptr inbounds float, ptr %8, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !165
  %72 = getelementptr inbounds float, ptr %10, i64 %69
  %73 = load float, ptr %72, align 4, !tbaa !165
  %74 = fadd float %71, %73
  store float %74, ptr %72, align 4, !tbaa !165
  %75 = add nuw nsw i64 %69, 1
  %76 = getelementptr inbounds float, ptr %8, i64 %75
  %77 = load float, ptr %76, align 4, !tbaa !165
  %78 = getelementptr inbounds float, ptr %10, i64 %75
  %79 = load float, ptr %78, align 4, !tbaa !165
  %80 = fadd float %77, %79
  store float %80, ptr %78, align 4, !tbaa !165
  %81 = add nuw nsw i64 %69, 2
  %82 = getelementptr inbounds float, ptr %8, i64 %81
  %83 = load float, ptr %82, align 4, !tbaa !165
  %84 = getelementptr inbounds float, ptr %10, i64 %81
  %85 = load float, ptr %84, align 4, !tbaa !165
  %86 = fadd float %83, %85
  store float %86, ptr %84, align 4, !tbaa !165
  %87 = add nuw nsw i64 %69, 3
  %88 = getelementptr inbounds float, ptr %8, i64 %87
  %89 = load float, ptr %88, align 4, !tbaa !165
  %90 = getelementptr inbounds float, ptr %10, i64 %87
  %91 = load float, ptr %90, align 4, !tbaa !165
  %92 = fadd float %89, %91
  store float %92, ptr %90, align 4, !tbaa !165
  %93 = add nuw nsw i64 %69, 4
  %94 = icmp eq i64 %93, %11
  br i1 %94, label %95, label %68, !llvm.loop !186

95:                                               ; preds = %65, %68, %46, %2
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE3addERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %11 = zext i32 %4 to i64
  %12 = icmp ult i32 %4, 32
  br i1 %12, label %48, label %13

13:                                               ; preds = %6
  %14 = shl nuw nsw i64 %11, 2
  %15 = getelementptr i8, ptr %10, i64 %14
  %16 = getelementptr i8, ptr %8, i64 %14
  %17 = icmp ult ptr %10, %16
  %18 = icmp ult ptr %8, %15
  %19 = and i1 %17, %18
  br i1 %19, label %48, label %20

20:                                               ; preds = %13
  %21 = and i64 %11, 4294967264
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %44, %22 ]
  %24 = getelementptr inbounds float, ptr %8, i64 %23
  %25 = load <8 x float>, ptr %24, align 4, !tbaa !165, !alias.scope !187
  %26 = getelementptr inbounds float, ptr %24, i64 8
  %27 = load <8 x float>, ptr %26, align 4, !tbaa !165, !alias.scope !187
  %28 = getelementptr inbounds float, ptr %24, i64 16
  %29 = load <8 x float>, ptr %28, align 4, !tbaa !165, !alias.scope !187
  %30 = getelementptr inbounds float, ptr %24, i64 24
  %31 = load <8 x float>, ptr %30, align 4, !tbaa !165, !alias.scope !187
  %32 = getelementptr inbounds float, ptr %10, i64 %23
  %33 = load <8 x float>, ptr %32, align 4, !tbaa !165, !alias.scope !190, !noalias !187
  %34 = getelementptr inbounds float, ptr %32, i64 8
  %35 = load <8 x float>, ptr %34, align 4, !tbaa !165, !alias.scope !190, !noalias !187
  %36 = getelementptr inbounds float, ptr %32, i64 16
  %37 = load <8 x float>, ptr %36, align 4, !tbaa !165, !alias.scope !190, !noalias !187
  %38 = getelementptr inbounds float, ptr %32, i64 24
  %39 = load <8 x float>, ptr %38, align 4, !tbaa !165, !alias.scope !190, !noalias !187
  %40 = fadd <8 x float> %25, %33
  %41 = fadd <8 x float> %27, %35
  %42 = fadd <8 x float> %29, %37
  %43 = fadd <8 x float> %31, %39
  store <8 x float> %40, ptr %32, align 4, !tbaa !165, !alias.scope !190, !noalias !187
  store <8 x float> %41, ptr %34, align 4, !tbaa !165, !alias.scope !190, !noalias !187
  store <8 x float> %42, ptr %36, align 4, !tbaa !165, !alias.scope !190, !noalias !187
  store <8 x float> %43, ptr %38, align 4, !tbaa !165, !alias.scope !190, !noalias !187
  %44 = add nuw i64 %23, 32
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %22, !llvm.loop !192

46:                                               ; preds = %22
  %47 = icmp eq i64 %21, %11
  br i1 %47, label %68, label %48

48:                                               ; preds = %13, %6, %46
  %49 = phi i64 [ 0, %13 ], [ 0, %6 ], [ %21, %46 ]
  %50 = xor i64 %49, -1
  %51 = add nsw i64 %50, %11
  %52 = and i64 %11, 3
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %48, %54
  %55 = phi i64 [ %62, %54 ], [ %49, %48 ]
  %56 = phi i64 [ %63, %54 ], [ 0, %48 ]
  %57 = getelementptr inbounds float, ptr %8, i64 %55
  %58 = load float, ptr %57, align 4, !tbaa !165
  %59 = getelementptr inbounds float, ptr %10, i64 %55
  %60 = load float, ptr %59, align 4, !tbaa !165
  %61 = fadd float %58, %60
  store float %61, ptr %59, align 4, !tbaa !165
  %62 = add nuw nsw i64 %55, 1
  %63 = add i64 %56, 1
  %64 = icmp eq i64 %63, %52
  br i1 %64, label %65, label %54, !llvm.loop !193

65:                                               ; preds = %54, %48
  %66 = phi i64 [ %49, %48 ], [ %62, %54 ]
  %67 = icmp ult i64 %51, 3
  br i1 %67, label %68, label %69

68:                                               ; preds = %65, %69, %46, %2
  ret void

69:                                               ; preds = %65, %69
  %70 = phi i64 [ %94, %69 ], [ %66, %65 ]
  %71 = getelementptr inbounds float, ptr %8, i64 %70
  %72 = load float, ptr %71, align 4, !tbaa !165
  %73 = getelementptr inbounds float, ptr %10, i64 %70
  %74 = load float, ptr %73, align 4, !tbaa !165
  %75 = fadd float %72, %74
  store float %75, ptr %73, align 4, !tbaa !165
  %76 = add nuw nsw i64 %70, 1
  %77 = getelementptr inbounds float, ptr %8, i64 %76
  %78 = load float, ptr %77, align 4, !tbaa !165
  %79 = getelementptr inbounds float, ptr %10, i64 %76
  %80 = load float, ptr %79, align 4, !tbaa !165
  %81 = fadd float %78, %80
  store float %81, ptr %79, align 4, !tbaa !165
  %82 = add nuw nsw i64 %70, 2
  %83 = getelementptr inbounds float, ptr %8, i64 %82
  %84 = load float, ptr %83, align 4, !tbaa !165
  %85 = getelementptr inbounds float, ptr %10, i64 %82
  %86 = load float, ptr %85, align 4, !tbaa !165
  %87 = fadd float %84, %86
  store float %87, ptr %85, align 4, !tbaa !165
  %88 = add nuw nsw i64 %70, 3
  %89 = getelementptr inbounds float, ptr %8, i64 %88
  %90 = load float, ptr %89, align 4, !tbaa !165
  %91 = getelementptr inbounds float, ptr %10, i64 %88
  %92 = load float, ptr %91, align 4, !tbaa !165
  %93 = fadd float %90, %92
  store float %93, ptr %91, align 4, !tbaa !165
  %94 = add nuw nsw i64 %70, 4
  %95 = icmp eq i64 %94, %11
  br i1 %95, label %68, label %69, !llvm.loop !194
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEmIERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %11 = zext i32 %4 to i64
  %12 = icmp ult i32 %4, 32
  br i1 %12, label %48, label %13

13:                                               ; preds = %6
  %14 = shl nuw nsw i64 %11, 2
  %15 = getelementptr i8, ptr %10, i64 %14
  %16 = getelementptr i8, ptr %8, i64 %14
  %17 = icmp ult ptr %10, %16
  %18 = icmp ult ptr %8, %15
  %19 = and i1 %17, %18
  br i1 %19, label %48, label %20

20:                                               ; preds = %13
  %21 = and i64 %11, 4294967264
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %44, %22 ]
  %24 = getelementptr inbounds float, ptr %8, i64 %23
  %25 = load <8 x float>, ptr %24, align 4, !tbaa !165, !alias.scope !195
  %26 = getelementptr inbounds float, ptr %24, i64 8
  %27 = load <8 x float>, ptr %26, align 4, !tbaa !165, !alias.scope !195
  %28 = getelementptr inbounds float, ptr %24, i64 16
  %29 = load <8 x float>, ptr %28, align 4, !tbaa !165, !alias.scope !195
  %30 = getelementptr inbounds float, ptr %24, i64 24
  %31 = load <8 x float>, ptr %30, align 4, !tbaa !165, !alias.scope !195
  %32 = getelementptr inbounds float, ptr %10, i64 %23
  %33 = load <8 x float>, ptr %32, align 4, !tbaa !165, !alias.scope !198, !noalias !195
  %34 = getelementptr inbounds float, ptr %32, i64 8
  %35 = load <8 x float>, ptr %34, align 4, !tbaa !165, !alias.scope !198, !noalias !195
  %36 = getelementptr inbounds float, ptr %32, i64 16
  %37 = load <8 x float>, ptr %36, align 4, !tbaa !165, !alias.scope !198, !noalias !195
  %38 = getelementptr inbounds float, ptr %32, i64 24
  %39 = load <8 x float>, ptr %38, align 4, !tbaa !165, !alias.scope !198, !noalias !195
  %40 = fsub <8 x float> %33, %25
  %41 = fsub <8 x float> %35, %27
  %42 = fsub <8 x float> %37, %29
  %43 = fsub <8 x float> %39, %31
  store <8 x float> %40, ptr %32, align 4, !tbaa !165, !alias.scope !198, !noalias !195
  store <8 x float> %41, ptr %34, align 4, !tbaa !165, !alias.scope !198, !noalias !195
  store <8 x float> %42, ptr %36, align 4, !tbaa !165, !alias.scope !198, !noalias !195
  store <8 x float> %43, ptr %38, align 4, !tbaa !165, !alias.scope !198, !noalias !195
  %44 = add nuw i64 %23, 32
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %22, !llvm.loop !200

46:                                               ; preds = %22
  %47 = icmp eq i64 %21, %11
  br i1 %47, label %68, label %48

48:                                               ; preds = %13, %6, %46
  %49 = phi i64 [ 0, %13 ], [ 0, %6 ], [ %21, %46 ]
  %50 = xor i64 %49, -1
  %51 = add nsw i64 %50, %11
  %52 = and i64 %11, 3
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %48, %54
  %55 = phi i64 [ %62, %54 ], [ %49, %48 ]
  %56 = phi i64 [ %63, %54 ], [ 0, %48 ]
  %57 = getelementptr inbounds float, ptr %8, i64 %55
  %58 = load float, ptr %57, align 4, !tbaa !165
  %59 = getelementptr inbounds float, ptr %10, i64 %55
  %60 = load float, ptr %59, align 4, !tbaa !165
  %61 = fsub float %60, %58
  store float %61, ptr %59, align 4, !tbaa !165
  %62 = add nuw nsw i64 %55, 1
  %63 = add i64 %56, 1
  %64 = icmp eq i64 %63, %52
  br i1 %64, label %65, label %54, !llvm.loop !201

65:                                               ; preds = %54, %48
  %66 = phi i64 [ %49, %48 ], [ %62, %54 ]
  %67 = icmp ult i64 %51, 3
  br i1 %67, label %68, label %69

68:                                               ; preds = %65, %69, %46, %2
  ret ptr %0

69:                                               ; preds = %65, %69
  %70 = phi i64 [ %94, %69 ], [ %66, %65 ]
  %71 = getelementptr inbounds float, ptr %8, i64 %70
  %72 = load float, ptr %71, align 4, !tbaa !165
  %73 = getelementptr inbounds float, ptr %10, i64 %70
  %74 = load float, ptr %73, align 4, !tbaa !165
  %75 = fsub float %74, %72
  store float %75, ptr %73, align 4, !tbaa !165
  %76 = add nuw nsw i64 %70, 1
  %77 = getelementptr inbounds float, ptr %8, i64 %76
  %78 = load float, ptr %77, align 4, !tbaa !165
  %79 = getelementptr inbounds float, ptr %10, i64 %76
  %80 = load float, ptr %79, align 4, !tbaa !165
  %81 = fsub float %80, %78
  store float %81, ptr %79, align 4, !tbaa !165
  %82 = add nuw nsw i64 %70, 2
  %83 = getelementptr inbounds float, ptr %8, i64 %82
  %84 = load float, ptr %83, align 4, !tbaa !165
  %85 = getelementptr inbounds float, ptr %10, i64 %82
  %86 = load float, ptr %85, align 4, !tbaa !165
  %87 = fsub float %86, %84
  store float %87, ptr %85, align 4, !tbaa !165
  %88 = add nuw nsw i64 %70, 3
  %89 = getelementptr inbounds float, ptr %8, i64 %88
  %90 = load float, ptr %89, align 4, !tbaa !165
  %91 = getelementptr inbounds float, ptr %10, i64 %88
  %92 = load float, ptr %91, align 4, !tbaa !165
  %93 = fsub float %92, %90
  store float %93, ptr %91, align 4, !tbaa !165
  %94 = add nuw nsw i64 %70, 4
  %95 = icmp eq i64 %94, %11
  br i1 %95, label %68, label %69, !llvm.loop !202
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE3addEf(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %41, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = zext i32 %4 to i64
  %10 = icmp ult i32 %4, 32
  br i1 %10, label %39, label %11

11:                                               ; preds = %6
  %12 = and i64 %9, 4294967264
  %13 = insertelement <8 x float> poison, float %1, i64 0
  %14 = shufflevector <8 x float> %13, <8 x float> poison, <8 x i32> zeroinitializer
  %15 = insertelement <8 x float> poison, float %1, i64 0
  %16 = shufflevector <8 x float> %15, <8 x float> poison, <8 x i32> zeroinitializer
  %17 = insertelement <8 x float> poison, float %1, i64 0
  %18 = shufflevector <8 x float> %17, <8 x float> poison, <8 x i32> zeroinitializer
  %19 = insertelement <8 x float> poison, float %1, i64 0
  %20 = shufflevector <8 x float> %19, <8 x float> poison, <8 x i32> zeroinitializer
  br label %21

21:                                               ; preds = %21, %11
  %22 = phi i64 [ 0, %11 ], [ %35, %21 ]
  %23 = getelementptr inbounds float, ptr %8, i64 %22
  %24 = load <8 x float>, ptr %23, align 4, !tbaa !165
  %25 = getelementptr inbounds float, ptr %23, i64 8
  %26 = load <8 x float>, ptr %25, align 4, !tbaa !165
  %27 = getelementptr inbounds float, ptr %23, i64 16
  %28 = load <8 x float>, ptr %27, align 4, !tbaa !165
  %29 = getelementptr inbounds float, ptr %23, i64 24
  %30 = load <8 x float>, ptr %29, align 4, !tbaa !165
  %31 = fadd <8 x float> %24, %14
  %32 = fadd <8 x float> %26, %16
  %33 = fadd <8 x float> %28, %18
  %34 = fadd <8 x float> %30, %20
  store <8 x float> %31, ptr %23, align 4, !tbaa !165
  store <8 x float> %32, ptr %25, align 4, !tbaa !165
  store <8 x float> %33, ptr %27, align 4, !tbaa !165
  store <8 x float> %34, ptr %29, align 4, !tbaa !165
  %35 = add nuw i64 %22, 32
  %36 = icmp eq i64 %35, %12
  br i1 %36, label %37, label %21, !llvm.loop !203

37:                                               ; preds = %21
  %38 = icmp eq i64 %12, %9
  br i1 %38, label %41, label %39

39:                                               ; preds = %6, %37
  %40 = phi i64 [ 0, %6 ], [ %12, %37 ]
  br label %42

41:                                               ; preds = %42, %37, %2
  ret void

42:                                               ; preds = %39, %42
  %43 = phi i64 [ %47, %42 ], [ %40, %39 ]
  %44 = getelementptr inbounds float, ptr %8, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !165
  %46 = fadd float %45, %1
  store float %46, ptr %44, align 4, !tbaa !165
  %47 = add nuw nsw i64 %43, 1
  %48 = icmp eq i64 %47, %9
  br i1 %48, label %41, label %42, !llvm.loop !204
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE3addEfRKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !164
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !161
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds float, ptr %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %79, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.dealii::Vector.8", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !164
  %14 = add nuw nsw i64 %8, 4611686018427387903
  %15 = and i64 %14, 4611686018427387903
  %16 = add nuw nsw i64 %15, 1
  %17 = icmp ult i64 %15, 31
  br i1 %17, label %67, label %18

18:                                               ; preds = %11
  %19 = shl nuw nsw i64 %8, 2
  %20 = getelementptr i8, ptr %5, i64 %19
  %21 = getelementptr i8, ptr %13, i64 %19
  %22 = icmp ult ptr %5, %21
  %23 = icmp ult ptr %13, %20
  %24 = and i1 %22, %23
  br i1 %24, label %67, label %25

25:                                               ; preds = %18
  %26 = and i64 %16, 9223372036854775776
  %27 = shl i64 %26, 2
  %28 = getelementptr i8, ptr %13, i64 %27
  %29 = shl i64 %26, 2
  %30 = getelementptr i8, ptr %5, i64 %29
  %31 = insertelement <8 x float> poison, float %1, i64 0
  %32 = shufflevector <8 x float> %31, <8 x float> poison, <8 x i32> zeroinitializer
  %33 = insertelement <8 x float> poison, float %1, i64 0
  %34 = shufflevector <8 x float> %33, <8 x float> poison, <8 x i32> zeroinitializer
  %35 = insertelement <8 x float> poison, float %1, i64 0
  %36 = shufflevector <8 x float> %35, <8 x float> poison, <8 x i32> zeroinitializer
  %37 = insertelement <8 x float> poison, float %1, i64 0
  %38 = shufflevector <8 x float> %37, <8 x float> poison, <8 x i32> zeroinitializer
  br label %39

39:                                               ; preds = %39, %25
  %40 = phi i64 [ 0, %25 ], [ %63, %39 ]
  %41 = shl i64 %40, 2
  %42 = getelementptr i8, ptr %13, i64 %41
  %43 = shl i64 %40, 2
  %44 = getelementptr i8, ptr %5, i64 %43
  %45 = load <8 x float>, ptr %42, align 4, !tbaa !165, !alias.scope !205
  %46 = getelementptr float, ptr %42, i64 8
  %47 = load <8 x float>, ptr %46, align 4, !tbaa !165, !alias.scope !205
  %48 = getelementptr float, ptr %42, i64 16
  %49 = load <8 x float>, ptr %48, align 4, !tbaa !165, !alias.scope !205
  %50 = getelementptr float, ptr %42, i64 24
  %51 = load <8 x float>, ptr %50, align 4, !tbaa !165, !alias.scope !205
  %52 = load <8 x float>, ptr %44, align 4, !tbaa !165, !alias.scope !208, !noalias !205
  %53 = getelementptr float, ptr %44, i64 8
  %54 = load <8 x float>, ptr %53, align 4, !tbaa !165, !alias.scope !208, !noalias !205
  %55 = getelementptr float, ptr %44, i64 16
  %56 = load <8 x float>, ptr %55, align 4, !tbaa !165, !alias.scope !208, !noalias !205
  %57 = getelementptr float, ptr %44, i64 24
  %58 = load <8 x float>, ptr %57, align 4, !tbaa !165, !alias.scope !208, !noalias !205
  %59 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %32, <8 x float> %45, <8 x float> %52)
  %60 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %34, <8 x float> %47, <8 x float> %54)
  %61 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %36, <8 x float> %49, <8 x float> %56)
  %62 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %38, <8 x float> %51, <8 x float> %58)
  store <8 x float> %59, ptr %44, align 4, !tbaa !165, !alias.scope !208, !noalias !205
  store <8 x float> %60, ptr %53, align 4, !tbaa !165, !alias.scope !208, !noalias !205
  store <8 x float> %61, ptr %55, align 4, !tbaa !165, !alias.scope !208, !noalias !205
  store <8 x float> %62, ptr %57, align 4, !tbaa !165, !alias.scope !208, !noalias !205
  %63 = add nuw i64 %40, 32
  %64 = icmp eq i64 %63, %26
  br i1 %64, label %65, label %39, !llvm.loop !210

65:                                               ; preds = %39
  %66 = icmp eq i64 %16, %26
  br i1 %66, label %79, label %67

67:                                               ; preds = %18, %11, %65
  %68 = phi ptr [ %13, %18 ], [ %13, %11 ], [ %28, %65 ]
  %69 = phi ptr [ %5, %18 ], [ %5, %11 ], [ %30, %65 ]
  br label %70

70:                                               ; preds = %67, %70
  %71 = phi ptr [ %73, %70 ], [ %68, %67 ]
  %72 = phi ptr [ %75, %70 ], [ %69, %67 ]
  %73 = getelementptr inbounds float, ptr %71, i64 1
  %74 = load float, ptr %71, align 4, !tbaa !165
  %75 = getelementptr inbounds float, ptr %72, i64 1
  %76 = load float, ptr %72, align 4, !tbaa !165
  %77 = tail call float @llvm.fmuladd.f32(float %1, float %74, float %76)
  store float %77, ptr %72, align 4, !tbaa !165
  %78 = icmp eq ptr %75, %9
  br i1 %78, label %79, label %70, !llvm.loop !211

79:                                               ; preds = %70, %65, %3
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fmuladd.f32(float, float, float) #10

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE3addEfRKS1_fS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #9 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !161
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %110, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.8", ptr %2, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !164
  %12 = getelementptr inbounds %"class.dealii::Vector.8", ptr %4, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !164
  %14 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !164
  %16 = zext i32 %7 to i64
  %17 = icmp ult i32 %7, 32
  br i1 %17, label %90, label %18

18:                                               ; preds = %9
  %19 = shl nuw nsw i64 %16, 2
  %20 = getelementptr i8, ptr %15, i64 %19
  %21 = getelementptr i8, ptr %11, i64 %19
  %22 = getelementptr i8, ptr %13, i64 %19
  %23 = icmp ult ptr %15, %21
  %24 = icmp ult ptr %11, %20
  %25 = and i1 %23, %24
  %26 = icmp ult ptr %15, %22
  %27 = icmp ult ptr %13, %20
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %90, label %30

30:                                               ; preds = %18
  %31 = and i64 %16, 4294967264
  %32 = insertelement <8 x float> poison, float %3, i64 0
  %33 = shufflevector <8 x float> %32, <8 x float> poison, <8 x i32> zeroinitializer
  %34 = insertelement <8 x float> poison, float %3, i64 0
  %35 = shufflevector <8 x float> %34, <8 x float> poison, <8 x i32> zeroinitializer
  %36 = insertelement <8 x float> poison, float %3, i64 0
  %37 = shufflevector <8 x float> %36, <8 x float> poison, <8 x i32> zeroinitializer
  %38 = insertelement <8 x float> poison, float %3, i64 0
  %39 = shufflevector <8 x float> %38, <8 x float> poison, <8 x i32> zeroinitializer
  %40 = insertelement <8 x float> poison, float %1, i64 0
  %41 = shufflevector <8 x float> %40, <8 x float> poison, <8 x i32> zeroinitializer
  %42 = insertelement <8 x float> poison, float %1, i64 0
  %43 = shufflevector <8 x float> %42, <8 x float> poison, <8 x i32> zeroinitializer
  %44 = insertelement <8 x float> poison, float %1, i64 0
  %45 = shufflevector <8 x float> %44, <8 x float> poison, <8 x i32> zeroinitializer
  %46 = insertelement <8 x float> poison, float %1, i64 0
  %47 = shufflevector <8 x float> %46, <8 x float> poison, <8 x i32> zeroinitializer
  br label %48

48:                                               ; preds = %48, %30
  %49 = phi i64 [ 0, %30 ], [ %86, %48 ]
  %50 = getelementptr inbounds float, ptr %11, i64 %49
  %51 = load <8 x float>, ptr %50, align 4, !tbaa !165, !alias.scope !212
  %52 = getelementptr inbounds float, ptr %50, i64 8
  %53 = load <8 x float>, ptr %52, align 4, !tbaa !165, !alias.scope !212
  %54 = getelementptr inbounds float, ptr %50, i64 16
  %55 = load <8 x float>, ptr %54, align 4, !tbaa !165, !alias.scope !212
  %56 = getelementptr inbounds float, ptr %50, i64 24
  %57 = load <8 x float>, ptr %56, align 4, !tbaa !165, !alias.scope !212
  %58 = getelementptr inbounds float, ptr %13, i64 %49
  %59 = load <8 x float>, ptr %58, align 4, !tbaa !165, !alias.scope !215
  %60 = getelementptr inbounds float, ptr %58, i64 8
  %61 = load <8 x float>, ptr %60, align 4, !tbaa !165, !alias.scope !215
  %62 = getelementptr inbounds float, ptr %58, i64 16
  %63 = load <8 x float>, ptr %62, align 4, !tbaa !165, !alias.scope !215
  %64 = getelementptr inbounds float, ptr %58, i64 24
  %65 = load <8 x float>, ptr %64, align 4, !tbaa !165, !alias.scope !215
  %66 = fmul <8 x float> %59, %33
  %67 = fmul <8 x float> %61, %35
  %68 = fmul <8 x float> %63, %37
  %69 = fmul <8 x float> %65, %39
  %70 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %41, <8 x float> %51, <8 x float> %66)
  %71 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %43, <8 x float> %53, <8 x float> %67)
  %72 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %45, <8 x float> %55, <8 x float> %68)
  %73 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %47, <8 x float> %57, <8 x float> %69)
  %74 = getelementptr inbounds float, ptr %15, i64 %49
  %75 = load <8 x float>, ptr %74, align 4, !tbaa !165, !alias.scope !217, !noalias !219
  %76 = getelementptr inbounds float, ptr %74, i64 8
  %77 = load <8 x float>, ptr %76, align 4, !tbaa !165, !alias.scope !217, !noalias !219
  %78 = getelementptr inbounds float, ptr %74, i64 16
  %79 = load <8 x float>, ptr %78, align 4, !tbaa !165, !alias.scope !217, !noalias !219
  %80 = getelementptr inbounds float, ptr %74, i64 24
  %81 = load <8 x float>, ptr %80, align 4, !tbaa !165, !alias.scope !217, !noalias !219
  %82 = fadd <8 x float> %75, %70
  %83 = fadd <8 x float> %77, %71
  %84 = fadd <8 x float> %79, %72
  %85 = fadd <8 x float> %81, %73
  store <8 x float> %82, ptr %74, align 4, !tbaa !165, !alias.scope !217, !noalias !219
  store <8 x float> %83, ptr %76, align 4, !tbaa !165, !alias.scope !217, !noalias !219
  store <8 x float> %84, ptr %78, align 4, !tbaa !165, !alias.scope !217, !noalias !219
  store <8 x float> %85, ptr %80, align 4, !tbaa !165, !alias.scope !217, !noalias !219
  %86 = add nuw i64 %49, 32
  %87 = icmp eq i64 %86, %31
  br i1 %87, label %88, label %48, !llvm.loop !220

88:                                               ; preds = %48
  %89 = icmp eq i64 %31, %16
  br i1 %89, label %110, label %90

90:                                               ; preds = %18, %9, %88
  %91 = phi i64 [ 0, %18 ], [ 0, %9 ], [ %31, %88 ]
  %92 = xor i64 %91, -1
  %93 = and i64 %16, 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %106, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds float, ptr %11, i64 %91
  %97 = load float, ptr %96, align 4, !tbaa !165
  %98 = getelementptr inbounds float, ptr %13, i64 %91
  %99 = load float, ptr %98, align 4, !tbaa !165
  %100 = fmul float %99, %3
  %101 = tail call float @llvm.fmuladd.f32(float %1, float %97, float %100)
  %102 = getelementptr inbounds float, ptr %15, i64 %91
  %103 = load float, ptr %102, align 4, !tbaa !165
  %104 = fadd float %103, %101
  store float %104, ptr %102, align 4, !tbaa !165
  %105 = or i64 %91, 1
  br label %106

106:                                              ; preds = %95, %90
  %107 = phi i64 [ %91, %90 ], [ %105, %95 ]
  %108 = sub nsw i64 0, %16
  %109 = icmp eq i64 %92, %108
  br i1 %109, label %110, label %111

110:                                              ; preds = %106, %111, %88, %5
  ret void

111:                                              ; preds = %106, %111
  %112 = phi i64 [ %132, %111 ], [ %107, %106 ]
  %113 = getelementptr inbounds float, ptr %11, i64 %112
  %114 = load float, ptr %113, align 4, !tbaa !165
  %115 = getelementptr inbounds float, ptr %13, i64 %112
  %116 = load float, ptr %115, align 4, !tbaa !165
  %117 = fmul float %116, %3
  %118 = tail call float @llvm.fmuladd.f32(float %1, float %114, float %117)
  %119 = getelementptr inbounds float, ptr %15, i64 %112
  %120 = load float, ptr %119, align 4, !tbaa !165
  %121 = fadd float %120, %118
  store float %121, ptr %119, align 4, !tbaa !165
  %122 = add nuw nsw i64 %112, 1
  %123 = getelementptr inbounds float, ptr %11, i64 %122
  %124 = load float, ptr %123, align 4, !tbaa !165
  %125 = getelementptr inbounds float, ptr %13, i64 %122
  %126 = load float, ptr %125, align 4, !tbaa !165
  %127 = fmul float %126, %3
  %128 = tail call float @llvm.fmuladd.f32(float %1, float %124, float %127)
  %129 = getelementptr inbounds float, ptr %15, i64 %122
  %130 = load float, ptr %129, align 4, !tbaa !165
  %131 = fadd float %130, %128
  store float %131, ptr %129, align 4, !tbaa !165
  %132 = add nuw nsw i64 %112, 2
  %133 = icmp eq i64 %132, %16
  br i1 %133, label %110, label %111, !llvm.loop !221
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE4saddEfRKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !164
  %10 = getelementptr inbounds %"class.dealii::Vector.8", ptr %2, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !164
  %12 = zext i32 %5 to i64
  %13 = icmp ult i32 %5, 32
  br i1 %13, label %57, label %14

14:                                               ; preds = %7
  %15 = shl nuw nsw i64 %12, 2
  %16 = getelementptr i8, ptr %9, i64 %15
  %17 = getelementptr i8, ptr %11, i64 %15
  %18 = icmp ult ptr %9, %17
  %19 = icmp ult ptr %11, %16
  %20 = and i1 %18, %19
  br i1 %20, label %57, label %21

21:                                               ; preds = %14
  %22 = and i64 %12, 4294967264
  %23 = insertelement <8 x float> poison, float %1, i64 0
  %24 = shufflevector <8 x float> %23, <8 x float> poison, <8 x i32> zeroinitializer
  %25 = insertelement <8 x float> poison, float %1, i64 0
  %26 = shufflevector <8 x float> %25, <8 x float> poison, <8 x i32> zeroinitializer
  %27 = insertelement <8 x float> poison, float %1, i64 0
  %28 = shufflevector <8 x float> %27, <8 x float> poison, <8 x i32> zeroinitializer
  %29 = insertelement <8 x float> poison, float %1, i64 0
  %30 = shufflevector <8 x float> %29, <8 x float> poison, <8 x i32> zeroinitializer
  br label %31

31:                                               ; preds = %31, %21
  %32 = phi i64 [ 0, %21 ], [ %53, %31 ]
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = load <8 x float>, ptr %33, align 4, !tbaa !165, !alias.scope !222, !noalias !225
  %35 = getelementptr inbounds float, ptr %33, i64 8
  %36 = load <8 x float>, ptr %35, align 4, !tbaa !165, !alias.scope !222, !noalias !225
  %37 = getelementptr inbounds float, ptr %33, i64 16
  %38 = load <8 x float>, ptr %37, align 4, !tbaa !165, !alias.scope !222, !noalias !225
  %39 = getelementptr inbounds float, ptr %33, i64 24
  %40 = load <8 x float>, ptr %39, align 4, !tbaa !165, !alias.scope !222, !noalias !225
  %41 = getelementptr inbounds float, ptr %11, i64 %32
  %42 = load <8 x float>, ptr %41, align 4, !tbaa !165, !alias.scope !225
  %43 = getelementptr inbounds float, ptr %41, i64 8
  %44 = load <8 x float>, ptr %43, align 4, !tbaa !165, !alias.scope !225
  %45 = getelementptr inbounds float, ptr %41, i64 16
  %46 = load <8 x float>, ptr %45, align 4, !tbaa !165, !alias.scope !225
  %47 = getelementptr inbounds float, ptr %41, i64 24
  %48 = load <8 x float>, ptr %47, align 4, !tbaa !165, !alias.scope !225
  %49 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %24, <8 x float> %34, <8 x float> %42)
  %50 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %26, <8 x float> %36, <8 x float> %44)
  %51 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %28, <8 x float> %38, <8 x float> %46)
  %52 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %30, <8 x float> %40, <8 x float> %48)
  store <8 x float> %49, ptr %33, align 4, !tbaa !165, !alias.scope !222, !noalias !225
  store <8 x float> %50, ptr %35, align 4, !tbaa !165, !alias.scope !222, !noalias !225
  store <8 x float> %51, ptr %37, align 4, !tbaa !165, !alias.scope !222, !noalias !225
  store <8 x float> %52, ptr %39, align 4, !tbaa !165, !alias.scope !222, !noalias !225
  %53 = add nuw i64 %32, 32
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %55, label %31, !llvm.loop !227

55:                                               ; preds = %31
  %56 = icmp eq i64 %22, %12
  br i1 %56, label %73, label %57

57:                                               ; preds = %14, %7, %55
  %58 = phi i64 [ 0, %14 ], [ 0, %7 ], [ %22, %55 ]
  %59 = xor i64 %58, -1
  %60 = and i64 %12, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds float, ptr %9, i64 %58
  %64 = load float, ptr %63, align 4, !tbaa !165
  %65 = getelementptr inbounds float, ptr %11, i64 %58
  %66 = load float, ptr %65, align 4, !tbaa !165
  %67 = tail call float @llvm.fmuladd.f32(float %1, float %64, float %66)
  store float %67, ptr %63, align 4, !tbaa !165
  %68 = or i64 %58, 1
  br label %69

69:                                               ; preds = %62, %57
  %70 = phi i64 [ %58, %57 ], [ %68, %62 ]
  %71 = sub nsw i64 0, %12
  %72 = icmp eq i64 %59, %71
  br i1 %72, label %73, label %74

73:                                               ; preds = %69, %74, %55, %3
  ret void

74:                                               ; preds = %69, %74
  %75 = phi i64 [ %87, %74 ], [ %70, %69 ]
  %76 = getelementptr inbounds float, ptr %9, i64 %75
  %77 = load float, ptr %76, align 4, !tbaa !165
  %78 = getelementptr inbounds float, ptr %11, i64 %75
  %79 = load float, ptr %78, align 4, !tbaa !165
  %80 = tail call float @llvm.fmuladd.f32(float %1, float %77, float %79)
  store float %80, ptr %76, align 4, !tbaa !165
  %81 = add nuw nsw i64 %75, 1
  %82 = getelementptr inbounds float, ptr %9, i64 %81
  %83 = load float, ptr %82, align 4, !tbaa !165
  %84 = getelementptr inbounds float, ptr %11, i64 %81
  %85 = load float, ptr %84, align 4, !tbaa !165
  %86 = tail call float @llvm.fmuladd.f32(float %1, float %83, float %85)
  store float %86, ptr %82, align 4, !tbaa !165
  %87 = add nuw nsw i64 %75, 2
  %88 = icmp eq i64 %87, %12
  br i1 %88, label %73, label %74, !llvm.loop !228
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE4saddEffRKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1, float noundef %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #3 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !164
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !161
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds float, ptr %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %93, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.dealii::Vector.8", ptr %3, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !164
  %15 = add nuw nsw i64 %9, 4611686018427387903
  %16 = and i64 %15, 4611686018427387903
  %17 = add nuw nsw i64 %16, 1
  %18 = icmp ult i64 %16, 31
  br i1 %18, label %80, label %19

19:                                               ; preds = %12
  %20 = shl nuw nsw i64 %9, 2
  %21 = getelementptr i8, ptr %6, i64 %20
  %22 = getelementptr i8, ptr %14, i64 %20
  %23 = icmp ult ptr %6, %22
  %24 = icmp ult ptr %14, %21
  %25 = and i1 %23, %24
  br i1 %25, label %80, label %26

26:                                               ; preds = %19
  %27 = and i64 %17, 9223372036854775776
  %28 = shl i64 %27, 2
  %29 = getelementptr i8, ptr %14, i64 %28
  %30 = shl i64 %27, 2
  %31 = getelementptr i8, ptr %6, i64 %30
  %32 = insertelement <8 x float> poison, float %2, i64 0
  %33 = shufflevector <8 x float> %32, <8 x float> poison, <8 x i32> zeroinitializer
  %34 = insertelement <8 x float> poison, float %2, i64 0
  %35 = shufflevector <8 x float> %34, <8 x float> poison, <8 x i32> zeroinitializer
  %36 = insertelement <8 x float> poison, float %2, i64 0
  %37 = shufflevector <8 x float> %36, <8 x float> poison, <8 x i32> zeroinitializer
  %38 = insertelement <8 x float> poison, float %2, i64 0
  %39 = shufflevector <8 x float> %38, <8 x float> poison, <8 x i32> zeroinitializer
  %40 = insertelement <8 x float> poison, float %1, i64 0
  %41 = shufflevector <8 x float> %40, <8 x float> poison, <8 x i32> zeroinitializer
  %42 = insertelement <8 x float> poison, float %1, i64 0
  %43 = shufflevector <8 x float> %42, <8 x float> poison, <8 x i32> zeroinitializer
  %44 = insertelement <8 x float> poison, float %1, i64 0
  %45 = shufflevector <8 x float> %44, <8 x float> poison, <8 x i32> zeroinitializer
  %46 = insertelement <8 x float> poison, float %1, i64 0
  %47 = shufflevector <8 x float> %46, <8 x float> poison, <8 x i32> zeroinitializer
  br label %48

48:                                               ; preds = %48, %26
  %49 = phi i64 [ 0, %26 ], [ %76, %48 ]
  %50 = shl i64 %49, 2
  %51 = getelementptr i8, ptr %14, i64 %50
  %52 = shl i64 %49, 2
  %53 = getelementptr i8, ptr %6, i64 %52
  %54 = load <8 x float>, ptr %53, align 4, !tbaa !165, !alias.scope !229, !noalias !232
  %55 = getelementptr float, ptr %53, i64 8
  %56 = load <8 x float>, ptr %55, align 4, !tbaa !165, !alias.scope !229, !noalias !232
  %57 = getelementptr float, ptr %53, i64 16
  %58 = load <8 x float>, ptr %57, align 4, !tbaa !165, !alias.scope !229, !noalias !232
  %59 = getelementptr float, ptr %53, i64 24
  %60 = load <8 x float>, ptr %59, align 4, !tbaa !165, !alias.scope !229, !noalias !232
  %61 = load <8 x float>, ptr %51, align 4, !tbaa !165, !alias.scope !232
  %62 = getelementptr float, ptr %51, i64 8
  %63 = load <8 x float>, ptr %62, align 4, !tbaa !165, !alias.scope !232
  %64 = getelementptr float, ptr %51, i64 16
  %65 = load <8 x float>, ptr %64, align 4, !tbaa !165, !alias.scope !232
  %66 = getelementptr float, ptr %51, i64 24
  %67 = load <8 x float>, ptr %66, align 4, !tbaa !165, !alias.scope !232
  %68 = fmul <8 x float> %61, %33
  %69 = fmul <8 x float> %63, %35
  %70 = fmul <8 x float> %65, %37
  %71 = fmul <8 x float> %67, %39
  %72 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %41, <8 x float> %54, <8 x float> %68)
  %73 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %43, <8 x float> %56, <8 x float> %69)
  %74 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %45, <8 x float> %58, <8 x float> %70)
  %75 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %47, <8 x float> %60, <8 x float> %71)
  store <8 x float> %72, ptr %53, align 4, !tbaa !165, !alias.scope !229, !noalias !232
  store <8 x float> %73, ptr %55, align 4, !tbaa !165, !alias.scope !229, !noalias !232
  store <8 x float> %74, ptr %57, align 4, !tbaa !165, !alias.scope !229, !noalias !232
  store <8 x float> %75, ptr %59, align 4, !tbaa !165, !alias.scope !229, !noalias !232
  %76 = add nuw i64 %49, 32
  %77 = icmp eq i64 %76, %27
  br i1 %77, label %78, label %48, !llvm.loop !234

78:                                               ; preds = %48
  %79 = icmp eq i64 %17, %27
  br i1 %79, label %93, label %80

80:                                               ; preds = %19, %12, %78
  %81 = phi ptr [ %14, %19 ], [ %14, %12 ], [ %29, %78 ]
  %82 = phi ptr [ %6, %19 ], [ %6, %12 ], [ %31, %78 ]
  br label %83

83:                                               ; preds = %80, %83
  %84 = phi ptr [ %87, %83 ], [ %81, %80 ]
  %85 = phi ptr [ %91, %83 ], [ %82, %80 ]
  %86 = load float, ptr %85, align 4, !tbaa !165
  %87 = getelementptr inbounds float, ptr %84, i64 1
  %88 = load float, ptr %84, align 4, !tbaa !165
  %89 = fmul float %88, %2
  %90 = tail call float @llvm.fmuladd.f32(float %1, float %86, float %89)
  store float %90, ptr %85, align 4, !tbaa !165
  %91 = getelementptr inbounds float, ptr %85, i64 1
  %92 = icmp eq ptr %91, %10
  br i1 %92, label %93, label %83, !llvm.loop !235

93:                                               ; preds = %83, %78, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE4saddEffRKS1_fS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1, float noundef %2, ptr noundef nonnull align 8 dereferenceable(88) %3, float noundef %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #9 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !161
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %119, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !164
  %13 = getelementptr inbounds %"class.dealii::Vector.8", ptr %3, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !164
  %15 = getelementptr inbounds %"class.dealii::Vector.8", ptr %5, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !164
  %17 = zext i32 %8 to i64
  %18 = icmp ult i32 %8, 32
  br i1 %18, label %99, label %19

19:                                               ; preds = %10
  %20 = shl nuw nsw i64 %17, 2
  %21 = getelementptr i8, ptr %12, i64 %20
  %22 = getelementptr i8, ptr %14, i64 %20
  %23 = getelementptr i8, ptr %16, i64 %20
  %24 = icmp ult ptr %12, %22
  %25 = icmp ult ptr %14, %21
  %26 = and i1 %24, %25
  %27 = icmp ult ptr %12, %23
  %28 = icmp ult ptr %16, %21
  %29 = and i1 %27, %28
  %30 = or i1 %26, %29
  br i1 %30, label %99, label %31

31:                                               ; preds = %19
  %32 = and i64 %17, 4294967264
  %33 = insertelement <8 x float> poison, float %2, i64 0
  %34 = shufflevector <8 x float> %33, <8 x float> poison, <8 x i32> zeroinitializer
  %35 = insertelement <8 x float> poison, float %2, i64 0
  %36 = shufflevector <8 x float> %35, <8 x float> poison, <8 x i32> zeroinitializer
  %37 = insertelement <8 x float> poison, float %2, i64 0
  %38 = shufflevector <8 x float> %37, <8 x float> poison, <8 x i32> zeroinitializer
  %39 = insertelement <8 x float> poison, float %2, i64 0
  %40 = shufflevector <8 x float> %39, <8 x float> poison, <8 x i32> zeroinitializer
  %41 = insertelement <8 x float> poison, float %1, i64 0
  %42 = shufflevector <8 x float> %41, <8 x float> poison, <8 x i32> zeroinitializer
  %43 = insertelement <8 x float> poison, float %1, i64 0
  %44 = shufflevector <8 x float> %43, <8 x float> poison, <8 x i32> zeroinitializer
  %45 = insertelement <8 x float> poison, float %1, i64 0
  %46 = shufflevector <8 x float> %45, <8 x float> poison, <8 x i32> zeroinitializer
  %47 = insertelement <8 x float> poison, float %1, i64 0
  %48 = shufflevector <8 x float> %47, <8 x float> poison, <8 x i32> zeroinitializer
  %49 = insertelement <8 x float> poison, float %4, i64 0
  %50 = shufflevector <8 x float> %49, <8 x float> poison, <8 x i32> zeroinitializer
  %51 = insertelement <8 x float> poison, float %4, i64 0
  %52 = shufflevector <8 x float> %51, <8 x float> poison, <8 x i32> zeroinitializer
  %53 = insertelement <8 x float> poison, float %4, i64 0
  %54 = shufflevector <8 x float> %53, <8 x float> poison, <8 x i32> zeroinitializer
  %55 = insertelement <8 x float> poison, float %4, i64 0
  %56 = shufflevector <8 x float> %55, <8 x float> poison, <8 x i32> zeroinitializer
  br label %57

57:                                               ; preds = %57, %31
  %58 = phi i64 [ 0, %31 ], [ %95, %57 ]
  %59 = getelementptr inbounds float, ptr %12, i64 %58
  %60 = load <8 x float>, ptr %59, align 4, !tbaa !165, !alias.scope !236, !noalias !239
  %61 = getelementptr inbounds float, ptr %59, i64 8
  %62 = load <8 x float>, ptr %61, align 4, !tbaa !165, !alias.scope !236, !noalias !239
  %63 = getelementptr inbounds float, ptr %59, i64 16
  %64 = load <8 x float>, ptr %63, align 4, !tbaa !165, !alias.scope !236, !noalias !239
  %65 = getelementptr inbounds float, ptr %59, i64 24
  %66 = load <8 x float>, ptr %65, align 4, !tbaa !165, !alias.scope !236, !noalias !239
  %67 = getelementptr inbounds float, ptr %14, i64 %58
  %68 = load <8 x float>, ptr %67, align 4, !tbaa !165, !alias.scope !242
  %69 = getelementptr inbounds float, ptr %67, i64 8
  %70 = load <8 x float>, ptr %69, align 4, !tbaa !165, !alias.scope !242
  %71 = getelementptr inbounds float, ptr %67, i64 16
  %72 = load <8 x float>, ptr %71, align 4, !tbaa !165, !alias.scope !242
  %73 = getelementptr inbounds float, ptr %67, i64 24
  %74 = load <8 x float>, ptr %73, align 4, !tbaa !165, !alias.scope !242
  %75 = fmul <8 x float> %68, %34
  %76 = fmul <8 x float> %70, %36
  %77 = fmul <8 x float> %72, %38
  %78 = fmul <8 x float> %74, %40
  %79 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %42, <8 x float> %60, <8 x float> %75)
  %80 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %44, <8 x float> %62, <8 x float> %76)
  %81 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %46, <8 x float> %64, <8 x float> %77)
  %82 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %48, <8 x float> %66, <8 x float> %78)
  %83 = getelementptr inbounds float, ptr %16, i64 %58
  %84 = load <8 x float>, ptr %83, align 4, !tbaa !165, !alias.scope !243
  %85 = getelementptr inbounds float, ptr %83, i64 8
  %86 = load <8 x float>, ptr %85, align 4, !tbaa !165, !alias.scope !243
  %87 = getelementptr inbounds float, ptr %83, i64 16
  %88 = load <8 x float>, ptr %87, align 4, !tbaa !165, !alias.scope !243
  %89 = getelementptr inbounds float, ptr %83, i64 24
  %90 = load <8 x float>, ptr %89, align 4, !tbaa !165, !alias.scope !243
  %91 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %50, <8 x float> %84, <8 x float> %79)
  %92 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %52, <8 x float> %86, <8 x float> %80)
  %93 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %54, <8 x float> %88, <8 x float> %81)
  %94 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %56, <8 x float> %90, <8 x float> %82)
  store <8 x float> %91, ptr %59, align 4, !tbaa !165, !alias.scope !236, !noalias !239
  store <8 x float> %92, ptr %61, align 4, !tbaa !165, !alias.scope !236, !noalias !239
  store <8 x float> %93, ptr %63, align 4, !tbaa !165, !alias.scope !236, !noalias !239
  store <8 x float> %94, ptr %65, align 4, !tbaa !165, !alias.scope !236, !noalias !239
  %95 = add nuw i64 %58, 32
  %96 = icmp eq i64 %95, %32
  br i1 %96, label %97, label %57, !llvm.loop !244

97:                                               ; preds = %57
  %98 = icmp eq i64 %32, %17
  br i1 %98, label %119, label %99

99:                                               ; preds = %19, %10, %97
  %100 = phi i64 [ 0, %19 ], [ 0, %10 ], [ %32, %97 ]
  %101 = xor i64 %100, -1
  %102 = and i64 %17, 1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %115, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds float, ptr %12, i64 %100
  %106 = load float, ptr %105, align 4, !tbaa !165
  %107 = getelementptr inbounds float, ptr %14, i64 %100
  %108 = load float, ptr %107, align 4, !tbaa !165
  %109 = fmul float %108, %2
  %110 = tail call float @llvm.fmuladd.f32(float %1, float %106, float %109)
  %111 = getelementptr inbounds float, ptr %16, i64 %100
  %112 = load float, ptr %111, align 4, !tbaa !165
  %113 = tail call float @llvm.fmuladd.f32(float %4, float %112, float %110)
  store float %113, ptr %105, align 4, !tbaa !165
  %114 = or i64 %100, 1
  br label %115

115:                                              ; preds = %104, %99
  %116 = phi i64 [ %100, %99 ], [ %114, %104 ]
  %117 = sub nsw i64 0, %17
  %118 = icmp eq i64 %101, %117
  br i1 %118, label %119, label %120

119:                                              ; preds = %115, %120, %97, %6
  ret void

120:                                              ; preds = %115, %120
  %121 = phi i64 [ %141, %120 ], [ %116, %115 ]
  %122 = getelementptr inbounds float, ptr %12, i64 %121
  %123 = load float, ptr %122, align 4, !tbaa !165
  %124 = getelementptr inbounds float, ptr %14, i64 %121
  %125 = load float, ptr %124, align 4, !tbaa !165
  %126 = fmul float %125, %2
  %127 = tail call float @llvm.fmuladd.f32(float %1, float %123, float %126)
  %128 = getelementptr inbounds float, ptr %16, i64 %121
  %129 = load float, ptr %128, align 4, !tbaa !165
  %130 = tail call float @llvm.fmuladd.f32(float %4, float %129, float %127)
  store float %130, ptr %122, align 4, !tbaa !165
  %131 = add nuw nsw i64 %121, 1
  %132 = getelementptr inbounds float, ptr %12, i64 %131
  %133 = load float, ptr %132, align 4, !tbaa !165
  %134 = getelementptr inbounds float, ptr %14, i64 %131
  %135 = load float, ptr %134, align 4, !tbaa !165
  %136 = fmul float %135, %2
  %137 = tail call float @llvm.fmuladd.f32(float %1, float %133, float %136)
  %138 = getelementptr inbounds float, ptr %16, i64 %131
  %139 = load float, ptr %138, align 4, !tbaa !165
  %140 = tail call float @llvm.fmuladd.f32(float %4, float %139, float %137)
  store float %140, ptr %132, align 4, !tbaa !165
  %141 = add nuw nsw i64 %121, 2
  %142 = icmp eq i64 %141, %17
  br i1 %142, label %119, label %120, !llvm.loop !245
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE4saddEffRKS1_fS3_fS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1, float noundef %2, ptr noundef nonnull align 8 dereferenceable(88) %3, float noundef %4, ptr noundef nonnull align 8 dereferenceable(88) %5, float noundef %6, ptr noundef nonnull align 8 dereferenceable(88) %7) local_unnamed_addr #9 comdat align 2 {
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !161
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %70, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !164
  %15 = getelementptr inbounds %"class.dealii::Vector.8", ptr %3, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !164
  %17 = getelementptr inbounds %"class.dealii::Vector.8", ptr %5, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !164
  %19 = getelementptr inbounds %"class.dealii::Vector.8", ptr %7, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !164
  %21 = zext i32 %10 to i64
  %22 = icmp ult i32 %10, 16
  br i1 %22, label %68, label %23

23:                                               ; preds = %12
  %24 = shl nuw nsw i64 %21, 2
  %25 = getelementptr i8, ptr %14, i64 %24
  %26 = getelementptr i8, ptr %16, i64 %24
  %27 = getelementptr i8, ptr %18, i64 %24
  %28 = getelementptr i8, ptr %20, i64 %24
  %29 = icmp ult ptr %14, %26
  %30 = icmp ult ptr %16, %25
  %31 = and i1 %29, %30
  %32 = icmp ult ptr %14, %27
  %33 = icmp ult ptr %18, %25
  %34 = and i1 %32, %33
  %35 = or i1 %31, %34
  %36 = icmp ult ptr %14, %28
  %37 = icmp ult ptr %20, %25
  %38 = and i1 %36, %37
  %39 = or i1 %35, %38
  br i1 %39, label %68, label %40

40:                                               ; preds = %23
  %41 = and i64 %21, 4294967288
  %42 = insertelement <8 x float> poison, float %2, i64 0
  %43 = shufflevector <8 x float> %42, <8 x float> poison, <8 x i32> zeroinitializer
  %44 = insertelement <8 x float> poison, float %1, i64 0
  %45 = shufflevector <8 x float> %44, <8 x float> poison, <8 x i32> zeroinitializer
  %46 = insertelement <8 x float> poison, float %4, i64 0
  %47 = shufflevector <8 x float> %46, <8 x float> poison, <8 x i32> zeroinitializer
  %48 = insertelement <8 x float> poison, float %6, i64 0
  %49 = shufflevector <8 x float> %48, <8 x float> poison, <8 x i32> zeroinitializer
  br label %50

50:                                               ; preds = %50, %40
  %51 = phi i64 [ 0, %40 ], [ %64, %50 ]
  %52 = getelementptr inbounds float, ptr %14, i64 %51
  %53 = load <8 x float>, ptr %52, align 4, !tbaa !165, !alias.scope !246, !noalias !249
  %54 = getelementptr inbounds float, ptr %16, i64 %51
  %55 = load <8 x float>, ptr %54, align 4, !tbaa !165, !alias.scope !253
  %56 = fmul <8 x float> %55, %43
  %57 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %45, <8 x float> %53, <8 x float> %56)
  %58 = getelementptr inbounds float, ptr %18, i64 %51
  %59 = load <8 x float>, ptr %58, align 4, !tbaa !165, !alias.scope !254
  %60 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %47, <8 x float> %59, <8 x float> %57)
  %61 = getelementptr inbounds float, ptr %20, i64 %51
  %62 = load <8 x float>, ptr %61, align 4, !tbaa !165, !alias.scope !255
  %63 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %49, <8 x float> %62, <8 x float> %60)
  store <8 x float> %63, ptr %52, align 4, !tbaa !165, !alias.scope !246, !noalias !249
  %64 = add nuw i64 %51, 8
  %65 = icmp eq i64 %64, %41
  br i1 %65, label %66, label %50, !llvm.loop !256

66:                                               ; preds = %50
  %67 = icmp eq i64 %41, %21
  br i1 %67, label %70, label %68

68:                                               ; preds = %23, %12, %66
  %69 = phi i64 [ 0, %23 ], [ 0, %12 ], [ %41, %66 ]
  br label %71

70:                                               ; preds = %71, %66, %8
  ret void

71:                                               ; preds = %68, %71
  %72 = phi i64 [ %85, %71 ], [ %69, %68 ]
  %73 = getelementptr inbounds float, ptr %14, i64 %72
  %74 = load float, ptr %73, align 4, !tbaa !165
  %75 = getelementptr inbounds float, ptr %16, i64 %72
  %76 = load float, ptr %75, align 4, !tbaa !165
  %77 = fmul float %76, %2
  %78 = tail call float @llvm.fmuladd.f32(float %1, float %74, float %77)
  %79 = getelementptr inbounds float, ptr %18, i64 %72
  %80 = load float, ptr %79, align 4, !tbaa !165
  %81 = tail call float @llvm.fmuladd.f32(float %4, float %80, float %78)
  %82 = getelementptr inbounds float, ptr %20, i64 %72
  %83 = load float, ptr %82, align 4, !tbaa !165
  %84 = tail call float @llvm.fmuladd.f32(float %6, float %83, float %81)
  store float %84, ptr %73, align 4, !tbaa !165
  %85 = add nuw nsw i64 %72, 1
  %86 = icmp eq i64 %85, %21
  br i1 %86, label %70, label %71, !llvm.loop !257
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE5scaleEf(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !164
  %5 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !161
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds float, ptr %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %2
  %11 = add nuw nsw i64 %7, 4611686018427387903
  %12 = and i64 %11, 4611686018427387903
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp ult i64 %12, 31
  br i1 %14, label %46, label %15

15:                                               ; preds = %10
  %16 = and i64 %13, 9223372036854775776
  %17 = shl i64 %16, 2
  %18 = getelementptr i8, ptr %4, i64 %17
  %19 = insertelement <8 x float> poison, float %1, i64 0
  %20 = shufflevector <8 x float> %19, <8 x float> poison, <8 x i32> zeroinitializer
  %21 = insertelement <8 x float> poison, float %1, i64 0
  %22 = shufflevector <8 x float> %21, <8 x float> poison, <8 x i32> zeroinitializer
  %23 = insertelement <8 x float> poison, float %1, i64 0
  %24 = shufflevector <8 x float> %23, <8 x float> poison, <8 x i32> zeroinitializer
  %25 = insertelement <8 x float> poison, float %1, i64 0
  %26 = shufflevector <8 x float> %25, <8 x float> poison, <8 x i32> zeroinitializer
  br label %27

27:                                               ; preds = %27, %15
  %28 = phi i64 [ 0, %15 ], [ %42, %27 ]
  %29 = shl i64 %28, 2
  %30 = getelementptr i8, ptr %4, i64 %29
  %31 = load <8 x float>, ptr %30, align 4, !tbaa !165
  %32 = getelementptr float, ptr %30, i64 8
  %33 = load <8 x float>, ptr %32, align 4, !tbaa !165
  %34 = getelementptr float, ptr %30, i64 16
  %35 = load <8 x float>, ptr %34, align 4, !tbaa !165
  %36 = getelementptr float, ptr %30, i64 24
  %37 = load <8 x float>, ptr %36, align 4, !tbaa !165
  %38 = fmul <8 x float> %31, %20
  %39 = fmul <8 x float> %33, %22
  %40 = fmul <8 x float> %35, %24
  %41 = fmul <8 x float> %37, %26
  store <8 x float> %38, ptr %30, align 4, !tbaa !165
  store <8 x float> %39, ptr %32, align 4, !tbaa !165
  store <8 x float> %40, ptr %34, align 4, !tbaa !165
  store <8 x float> %41, ptr %36, align 4, !tbaa !165
  %42 = add nuw i64 %28, 32
  %43 = icmp eq i64 %42, %16
  br i1 %43, label %44, label %27, !llvm.loop !258

44:                                               ; preds = %27
  %45 = icmp eq i64 %13, %16
  br i1 %45, label %54, label %46

46:                                               ; preds = %10, %44
  %47 = phi ptr [ %4, %10 ], [ %18, %44 ]
  br label %48

48:                                               ; preds = %46, %48
  %49 = phi ptr [ %50, %48 ], [ %47, %46 ]
  %50 = getelementptr inbounds float, ptr %49, i64 1
  %51 = load float, ptr %49, align 4, !tbaa !165
  %52 = fmul float %51, %1
  store float %52, ptr %49, align 4, !tbaa !165
  %53 = icmp eq ptr %50, %8
  br i1 %53, label %54, label %48, !llvm.loop !259

54:                                               ; preds = %48, %44, %2
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEmLEf(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !164
  %5 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !161
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds float, ptr %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %2
  %11 = add nuw nsw i64 %7, 4611686018427387903
  %12 = and i64 %11, 4611686018427387903
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp ult i64 %12, 31
  br i1 %14, label %46, label %15

15:                                               ; preds = %10
  %16 = and i64 %13, 9223372036854775776
  %17 = shl i64 %16, 2
  %18 = getelementptr i8, ptr %4, i64 %17
  %19 = insertelement <8 x float> poison, float %1, i64 0
  %20 = shufflevector <8 x float> %19, <8 x float> poison, <8 x i32> zeroinitializer
  %21 = insertelement <8 x float> poison, float %1, i64 0
  %22 = shufflevector <8 x float> %21, <8 x float> poison, <8 x i32> zeroinitializer
  %23 = insertelement <8 x float> poison, float %1, i64 0
  %24 = shufflevector <8 x float> %23, <8 x float> poison, <8 x i32> zeroinitializer
  %25 = insertelement <8 x float> poison, float %1, i64 0
  %26 = shufflevector <8 x float> %25, <8 x float> poison, <8 x i32> zeroinitializer
  br label %27

27:                                               ; preds = %27, %15
  %28 = phi i64 [ 0, %15 ], [ %42, %27 ]
  %29 = shl i64 %28, 2
  %30 = getelementptr i8, ptr %4, i64 %29
  %31 = load <8 x float>, ptr %30, align 4, !tbaa !165
  %32 = getelementptr float, ptr %30, i64 8
  %33 = load <8 x float>, ptr %32, align 4, !tbaa !165
  %34 = getelementptr float, ptr %30, i64 16
  %35 = load <8 x float>, ptr %34, align 4, !tbaa !165
  %36 = getelementptr float, ptr %30, i64 24
  %37 = load <8 x float>, ptr %36, align 4, !tbaa !165
  %38 = fmul <8 x float> %31, %20
  %39 = fmul <8 x float> %33, %22
  %40 = fmul <8 x float> %35, %24
  %41 = fmul <8 x float> %37, %26
  store <8 x float> %38, ptr %30, align 4, !tbaa !165
  store <8 x float> %39, ptr %32, align 4, !tbaa !165
  store <8 x float> %40, ptr %34, align 4, !tbaa !165
  store <8 x float> %41, ptr %36, align 4, !tbaa !165
  %42 = add nuw i64 %28, 32
  %43 = icmp eq i64 %42, %16
  br i1 %43, label %44, label %27, !llvm.loop !260

44:                                               ; preds = %27
  %45 = icmp eq i64 %13, %16
  br i1 %45, label %54, label %46

46:                                               ; preds = %10, %44
  %47 = phi ptr [ %4, %10 ], [ %18, %44 ]
  br label %48

48:                                               ; preds = %46, %48
  %49 = phi ptr [ %50, %48 ], [ %47, %46 ]
  %50 = getelementptr inbounds float, ptr %49, i64 1
  %51 = load float, ptr %49, align 4, !tbaa !165
  %52 = fmul float %51, %1
  store float %52, ptr %49, align 4, !tbaa !165
  %53 = icmp eq ptr %50, %8
  br i1 %53, label %54, label %48, !llvm.loop !261

54:                                               ; preds = %48, %44, %2
  ret ptr %0
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEdVEf(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = fdiv float 1.000000e+00, %1
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !164
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !161
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds float, ptr %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %2
  %12 = add nuw nsw i64 %8, 4611686018427387903
  %13 = and i64 %12, 4611686018427387903
  %14 = add nuw nsw i64 %13, 1
  %15 = icmp ult i64 %13, 31
  br i1 %15, label %47, label %16

16:                                               ; preds = %11
  %17 = and i64 %14, 9223372036854775776
  %18 = shl i64 %17, 2
  %19 = getelementptr i8, ptr %5, i64 %18
  %20 = insertelement <8 x float> poison, float %3, i64 0
  %21 = shufflevector <8 x float> %20, <8 x float> poison, <8 x i32> zeroinitializer
  %22 = insertelement <8 x float> poison, float %3, i64 0
  %23 = shufflevector <8 x float> %22, <8 x float> poison, <8 x i32> zeroinitializer
  %24 = insertelement <8 x float> poison, float %3, i64 0
  %25 = shufflevector <8 x float> %24, <8 x float> poison, <8 x i32> zeroinitializer
  %26 = insertelement <8 x float> poison, float %3, i64 0
  %27 = shufflevector <8 x float> %26, <8 x float> poison, <8 x i32> zeroinitializer
  br label %28

28:                                               ; preds = %28, %16
  %29 = phi i64 [ 0, %16 ], [ %43, %28 ]
  %30 = shl i64 %29, 2
  %31 = getelementptr i8, ptr %5, i64 %30
  %32 = load <8 x float>, ptr %31, align 4, !tbaa !165
  %33 = getelementptr float, ptr %31, i64 8
  %34 = load <8 x float>, ptr %33, align 4, !tbaa !165
  %35 = getelementptr float, ptr %31, i64 16
  %36 = load <8 x float>, ptr %35, align 4, !tbaa !165
  %37 = getelementptr float, ptr %31, i64 24
  %38 = load <8 x float>, ptr %37, align 4, !tbaa !165
  %39 = fmul <8 x float> %21, %32
  %40 = fmul <8 x float> %23, %34
  %41 = fmul <8 x float> %25, %36
  %42 = fmul <8 x float> %27, %38
  store <8 x float> %39, ptr %31, align 4, !tbaa !165
  store <8 x float> %40, ptr %33, align 4, !tbaa !165
  store <8 x float> %41, ptr %35, align 4, !tbaa !165
  store <8 x float> %42, ptr %37, align 4, !tbaa !165
  %43 = add nuw i64 %29, 32
  %44 = icmp eq i64 %43, %17
  br i1 %44, label %45, label %28, !llvm.loop !262

45:                                               ; preds = %28
  %46 = icmp eq i64 %14, %17
  br i1 %46, label %55, label %47

47:                                               ; preds = %11, %45
  %48 = phi ptr [ %5, %11 ], [ %19, %45 ]
  br label %49

49:                                               ; preds = %47, %49
  %50 = phi ptr [ %51, %49 ], [ %48, %47 ]
  %51 = getelementptr inbounds float, ptr %50, i64 1
  %52 = load float, ptr %50, align 4, !tbaa !165
  %53 = fmul float %3, %52
  store float %53, ptr %50, align 4, !tbaa !165
  %54 = icmp eq ptr %51, %9
  br i1 %54, label %55, label %49, !llvm.loop !263

55:                                               ; preds = %49, %45, %2
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE3equEfRKS1_fS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #9 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !161
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %97, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.8", ptr %2, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !164
  %12 = getelementptr inbounds %"class.dealii::Vector.8", ptr %4, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !164
  %14 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !164
  %16 = zext i32 %7 to i64
  %17 = icmp ult i32 %7, 32
  br i1 %17, label %79, label %18

18:                                               ; preds = %9
  %19 = ptrtoint ptr %15 to i64
  %20 = ptrtoint ptr %13 to i64
  %21 = ptrtoint ptr %11 to i64
  %22 = sub i64 %19, %21
  %23 = icmp ult i64 %22, 128
  %24 = sub i64 %19, %20
  %25 = icmp ult i64 %24, 128
  %26 = or i1 %23, %25
  br i1 %26, label %79, label %27

27:                                               ; preds = %18
  %28 = and i64 %16, 4294967264
  %29 = insertelement <8 x float> poison, float %3, i64 0
  %30 = shufflevector <8 x float> %29, <8 x float> poison, <8 x i32> zeroinitializer
  %31 = insertelement <8 x float> poison, float %3, i64 0
  %32 = shufflevector <8 x float> %31, <8 x float> poison, <8 x i32> zeroinitializer
  %33 = insertelement <8 x float> poison, float %3, i64 0
  %34 = shufflevector <8 x float> %33, <8 x float> poison, <8 x i32> zeroinitializer
  %35 = insertelement <8 x float> poison, float %3, i64 0
  %36 = shufflevector <8 x float> %35, <8 x float> poison, <8 x i32> zeroinitializer
  %37 = insertelement <8 x float> poison, float %1, i64 0
  %38 = shufflevector <8 x float> %37, <8 x float> poison, <8 x i32> zeroinitializer
  %39 = insertelement <8 x float> poison, float %1, i64 0
  %40 = shufflevector <8 x float> %39, <8 x float> poison, <8 x i32> zeroinitializer
  %41 = insertelement <8 x float> poison, float %1, i64 0
  %42 = shufflevector <8 x float> %41, <8 x float> poison, <8 x i32> zeroinitializer
  %43 = insertelement <8 x float> poison, float %1, i64 0
  %44 = shufflevector <8 x float> %43, <8 x float> poison, <8 x i32> zeroinitializer
  br label %45

45:                                               ; preds = %45, %27
  %46 = phi i64 [ 0, %27 ], [ %75, %45 ]
  %47 = getelementptr inbounds float, ptr %11, i64 %46
  %48 = load <8 x float>, ptr %47, align 4, !tbaa !165
  %49 = getelementptr inbounds float, ptr %47, i64 8
  %50 = load <8 x float>, ptr %49, align 4, !tbaa !165
  %51 = getelementptr inbounds float, ptr %47, i64 16
  %52 = load <8 x float>, ptr %51, align 4, !tbaa !165
  %53 = getelementptr inbounds float, ptr %47, i64 24
  %54 = load <8 x float>, ptr %53, align 4, !tbaa !165
  %55 = getelementptr inbounds float, ptr %13, i64 %46
  %56 = load <8 x float>, ptr %55, align 4, !tbaa !165
  %57 = getelementptr inbounds float, ptr %55, i64 8
  %58 = load <8 x float>, ptr %57, align 4, !tbaa !165
  %59 = getelementptr inbounds float, ptr %55, i64 16
  %60 = load <8 x float>, ptr %59, align 4, !tbaa !165
  %61 = getelementptr inbounds float, ptr %55, i64 24
  %62 = load <8 x float>, ptr %61, align 4, !tbaa !165
  %63 = fmul <8 x float> %56, %30
  %64 = fmul <8 x float> %58, %32
  %65 = fmul <8 x float> %60, %34
  %66 = fmul <8 x float> %62, %36
  %67 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %38, <8 x float> %48, <8 x float> %63)
  %68 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %40, <8 x float> %50, <8 x float> %64)
  %69 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %42, <8 x float> %52, <8 x float> %65)
  %70 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %44, <8 x float> %54, <8 x float> %66)
  %71 = getelementptr inbounds float, ptr %15, i64 %46
  store <8 x float> %67, ptr %71, align 4, !tbaa !165
  %72 = getelementptr inbounds float, ptr %71, i64 8
  store <8 x float> %68, ptr %72, align 4, !tbaa !165
  %73 = getelementptr inbounds float, ptr %71, i64 16
  store <8 x float> %69, ptr %73, align 4, !tbaa !165
  %74 = getelementptr inbounds float, ptr %71, i64 24
  store <8 x float> %70, ptr %74, align 4, !tbaa !165
  %75 = add nuw i64 %46, 32
  %76 = icmp eq i64 %75, %28
  br i1 %76, label %77, label %45, !llvm.loop !264

77:                                               ; preds = %45
  %78 = icmp eq i64 %28, %16
  br i1 %78, label %97, label %79

79:                                               ; preds = %18, %9, %77
  %80 = phi i64 [ 0, %18 ], [ 0, %9 ], [ %28, %77 ]
  %81 = xor i64 %80, -1
  %82 = and i64 %16, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %93, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds float, ptr %11, i64 %80
  %86 = load float, ptr %85, align 4, !tbaa !165
  %87 = getelementptr inbounds float, ptr %13, i64 %80
  %88 = load float, ptr %87, align 4, !tbaa !165
  %89 = fmul float %88, %3
  %90 = tail call float @llvm.fmuladd.f32(float %1, float %86, float %89)
  %91 = getelementptr inbounds float, ptr %15, i64 %80
  store float %90, ptr %91, align 4, !tbaa !165
  %92 = or i64 %80, 1
  br label %93

93:                                               ; preds = %84, %79
  %94 = phi i64 [ %80, %79 ], [ %92, %84 ]
  %95 = sub nsw i64 0, %16
  %96 = icmp eq i64 %81, %95
  br i1 %96, label %97, label %98

97:                                               ; preds = %93, %98, %77, %5
  ret void

98:                                               ; preds = %93, %98
  %99 = phi i64 [ %115, %98 ], [ %94, %93 ]
  %100 = getelementptr inbounds float, ptr %11, i64 %99
  %101 = load float, ptr %100, align 4, !tbaa !165
  %102 = getelementptr inbounds float, ptr %13, i64 %99
  %103 = load float, ptr %102, align 4, !tbaa !165
  %104 = fmul float %103, %3
  %105 = tail call float @llvm.fmuladd.f32(float %1, float %101, float %104)
  %106 = getelementptr inbounds float, ptr %15, i64 %99
  store float %105, ptr %106, align 4, !tbaa !165
  %107 = add nuw nsw i64 %99, 1
  %108 = getelementptr inbounds float, ptr %11, i64 %107
  %109 = load float, ptr %108, align 4, !tbaa !165
  %110 = getelementptr inbounds float, ptr %13, i64 %107
  %111 = load float, ptr %110, align 4, !tbaa !165
  %112 = fmul float %111, %3
  %113 = tail call float @llvm.fmuladd.f32(float %1, float %109, float %112)
  %114 = getelementptr inbounds float, ptr %15, i64 %107
  store float %113, ptr %114, align 4, !tbaa !165
  %115 = add nuw nsw i64 %99, 2
  %116 = icmp eq i64 %115, %16
  br i1 %116, label %97, label %98, !llvm.loop !265
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE3equEfRKS1_fS3_fS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3, ptr noundef nonnull align 8 dereferenceable(88) %4, float noundef %5, ptr noundef nonnull align 8 dereferenceable(88) %6) local_unnamed_addr #9 comdat align 2 {
  %8 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !161
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %128, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.dealii::Vector.8", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !164
  %14 = getelementptr inbounds %"class.dealii::Vector.8", ptr %4, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !164
  %16 = getelementptr inbounds %"class.dealii::Vector.8", ptr %6, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !164
  %18 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !164
  %20 = zext i32 %9 to i64
  %21 = icmp ult i32 %9, 32
  br i1 %21, label %107, label %22

22:                                               ; preds = %11
  %23 = ptrtoint ptr %19 to i64
  %24 = ptrtoint ptr %17 to i64
  %25 = ptrtoint ptr %15 to i64
  %26 = ptrtoint ptr %13 to i64
  %27 = sub i64 %23, %26
  %28 = icmp ult i64 %27, 128
  %29 = sub i64 %23, %25
  %30 = icmp ult i64 %29, 128
  %31 = or i1 %28, %30
  %32 = sub i64 %23, %24
  %33 = icmp ult i64 %32, 128
  %34 = or i1 %31, %33
  br i1 %34, label %107, label %35

35:                                               ; preds = %22
  %36 = and i64 %20, 4294967264
  %37 = insertelement <8 x float> poison, float %3, i64 0
  %38 = shufflevector <8 x float> %37, <8 x float> poison, <8 x i32> zeroinitializer
  %39 = insertelement <8 x float> poison, float %3, i64 0
  %40 = shufflevector <8 x float> %39, <8 x float> poison, <8 x i32> zeroinitializer
  %41 = insertelement <8 x float> poison, float %3, i64 0
  %42 = shufflevector <8 x float> %41, <8 x float> poison, <8 x i32> zeroinitializer
  %43 = insertelement <8 x float> poison, float %3, i64 0
  %44 = shufflevector <8 x float> %43, <8 x float> poison, <8 x i32> zeroinitializer
  %45 = insertelement <8 x float> poison, float %1, i64 0
  %46 = shufflevector <8 x float> %45, <8 x float> poison, <8 x i32> zeroinitializer
  %47 = insertelement <8 x float> poison, float %1, i64 0
  %48 = shufflevector <8 x float> %47, <8 x float> poison, <8 x i32> zeroinitializer
  %49 = insertelement <8 x float> poison, float %1, i64 0
  %50 = shufflevector <8 x float> %49, <8 x float> poison, <8 x i32> zeroinitializer
  %51 = insertelement <8 x float> poison, float %1, i64 0
  %52 = shufflevector <8 x float> %51, <8 x float> poison, <8 x i32> zeroinitializer
  %53 = insertelement <8 x float> poison, float %5, i64 0
  %54 = shufflevector <8 x float> %53, <8 x float> poison, <8 x i32> zeroinitializer
  %55 = insertelement <8 x float> poison, float %5, i64 0
  %56 = shufflevector <8 x float> %55, <8 x float> poison, <8 x i32> zeroinitializer
  %57 = insertelement <8 x float> poison, float %5, i64 0
  %58 = shufflevector <8 x float> %57, <8 x float> poison, <8 x i32> zeroinitializer
  %59 = insertelement <8 x float> poison, float %5, i64 0
  %60 = shufflevector <8 x float> %59, <8 x float> poison, <8 x i32> zeroinitializer
  br label %61

61:                                               ; preds = %61, %35
  %62 = phi i64 [ 0, %35 ], [ %103, %61 ]
  %63 = getelementptr inbounds float, ptr %13, i64 %62
  %64 = load <8 x float>, ptr %63, align 4, !tbaa !165
  %65 = getelementptr inbounds float, ptr %63, i64 8
  %66 = load <8 x float>, ptr %65, align 4, !tbaa !165
  %67 = getelementptr inbounds float, ptr %63, i64 16
  %68 = load <8 x float>, ptr %67, align 4, !tbaa !165
  %69 = getelementptr inbounds float, ptr %63, i64 24
  %70 = load <8 x float>, ptr %69, align 4, !tbaa !165
  %71 = getelementptr inbounds float, ptr %15, i64 %62
  %72 = load <8 x float>, ptr %71, align 4, !tbaa !165
  %73 = getelementptr inbounds float, ptr %71, i64 8
  %74 = load <8 x float>, ptr %73, align 4, !tbaa !165
  %75 = getelementptr inbounds float, ptr %71, i64 16
  %76 = load <8 x float>, ptr %75, align 4, !tbaa !165
  %77 = getelementptr inbounds float, ptr %71, i64 24
  %78 = load <8 x float>, ptr %77, align 4, !tbaa !165
  %79 = fmul <8 x float> %72, %38
  %80 = fmul <8 x float> %74, %40
  %81 = fmul <8 x float> %76, %42
  %82 = fmul <8 x float> %78, %44
  %83 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %46, <8 x float> %64, <8 x float> %79)
  %84 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %48, <8 x float> %66, <8 x float> %80)
  %85 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %50, <8 x float> %68, <8 x float> %81)
  %86 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %52, <8 x float> %70, <8 x float> %82)
  %87 = getelementptr inbounds float, ptr %17, i64 %62
  %88 = load <8 x float>, ptr %87, align 4, !tbaa !165
  %89 = getelementptr inbounds float, ptr %87, i64 8
  %90 = load <8 x float>, ptr %89, align 4, !tbaa !165
  %91 = getelementptr inbounds float, ptr %87, i64 16
  %92 = load <8 x float>, ptr %91, align 4, !tbaa !165
  %93 = getelementptr inbounds float, ptr %87, i64 24
  %94 = load <8 x float>, ptr %93, align 4, !tbaa !165
  %95 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %54, <8 x float> %88, <8 x float> %83)
  %96 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %56, <8 x float> %90, <8 x float> %84)
  %97 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %58, <8 x float> %92, <8 x float> %85)
  %98 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %60, <8 x float> %94, <8 x float> %86)
  %99 = getelementptr inbounds float, ptr %19, i64 %62
  store <8 x float> %95, ptr %99, align 4, !tbaa !165
  %100 = getelementptr inbounds float, ptr %99, i64 8
  store <8 x float> %96, ptr %100, align 4, !tbaa !165
  %101 = getelementptr inbounds float, ptr %99, i64 16
  store <8 x float> %97, ptr %101, align 4, !tbaa !165
  %102 = getelementptr inbounds float, ptr %99, i64 24
  store <8 x float> %98, ptr %102, align 4, !tbaa !165
  %103 = add nuw i64 %62, 32
  %104 = icmp eq i64 %103, %36
  br i1 %104, label %105, label %61, !llvm.loop !266

105:                                              ; preds = %61
  %106 = icmp eq i64 %36, %20
  br i1 %106, label %128, label %107

107:                                              ; preds = %22, %11, %105
  %108 = phi i64 [ 0, %22 ], [ 0, %11 ], [ %36, %105 ]
  %109 = xor i64 %108, -1
  %110 = and i64 %20, 1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %124, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds float, ptr %13, i64 %108
  %114 = load float, ptr %113, align 4, !tbaa !165
  %115 = getelementptr inbounds float, ptr %15, i64 %108
  %116 = load float, ptr %115, align 4, !tbaa !165
  %117 = fmul float %116, %3
  %118 = tail call float @llvm.fmuladd.f32(float %1, float %114, float %117)
  %119 = getelementptr inbounds float, ptr %17, i64 %108
  %120 = load float, ptr %119, align 4, !tbaa !165
  %121 = tail call float @llvm.fmuladd.f32(float %5, float %120, float %118)
  %122 = getelementptr inbounds float, ptr %19, i64 %108
  store float %121, ptr %122, align 4, !tbaa !165
  %123 = or i64 %108, 1
  br label %124

124:                                              ; preds = %112, %107
  %125 = phi i64 [ %108, %107 ], [ %123, %112 ]
  %126 = sub nsw i64 0, %20
  %127 = icmp eq i64 %109, %126
  br i1 %127, label %128, label %129

128:                                              ; preds = %124, %129, %105, %7
  ret void

129:                                              ; preds = %124, %129
  %130 = phi i64 [ %152, %129 ], [ %125, %124 ]
  %131 = getelementptr inbounds float, ptr %13, i64 %130
  %132 = load float, ptr %131, align 4, !tbaa !165
  %133 = getelementptr inbounds float, ptr %15, i64 %130
  %134 = load float, ptr %133, align 4, !tbaa !165
  %135 = fmul float %134, %3
  %136 = tail call float @llvm.fmuladd.f32(float %1, float %132, float %135)
  %137 = getelementptr inbounds float, ptr %17, i64 %130
  %138 = load float, ptr %137, align 4, !tbaa !165
  %139 = tail call float @llvm.fmuladd.f32(float %5, float %138, float %136)
  %140 = getelementptr inbounds float, ptr %19, i64 %130
  store float %139, ptr %140, align 4, !tbaa !165
  %141 = add nuw nsw i64 %130, 1
  %142 = getelementptr inbounds float, ptr %13, i64 %141
  %143 = load float, ptr %142, align 4, !tbaa !165
  %144 = getelementptr inbounds float, ptr %15, i64 %141
  %145 = load float, ptr %144, align 4, !tbaa !165
  %146 = fmul float %145, %3
  %147 = tail call float @llvm.fmuladd.f32(float %1, float %143, float %146)
  %148 = getelementptr inbounds float, ptr %17, i64 %141
  %149 = load float, ptr %148, align 4, !tbaa !165
  %150 = tail call float @llvm.fmuladd.f32(float %5, float %149, float %147)
  %151 = getelementptr inbounds float, ptr %19, i64 %141
  store float %150, ptr %151, align 4, !tbaa !165
  %152 = add nuw nsw i64 %130, 2
  %153 = icmp eq i64 %152, %20
  br i1 %153, label %128, label %129, !llvm.loop !267
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE5ratioERKS1_S3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext true)
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !161
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %65, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !164
  %15 = getelementptr inbounds %"class.dealii::Vector.8", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !164
  %17 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !164
  %19 = zext i32 %10 to i64
  %20 = icmp ult i32 %10, 8
  br i1 %20, label %44, label %21

21:                                               ; preds = %12
  %22 = ptrtoint ptr %18 to i64
  %23 = ptrtoint ptr %16 to i64
  %24 = ptrtoint ptr %14 to i64
  %25 = sub i64 %22, %24
  %26 = icmp ult i64 %25, 32
  %27 = sub i64 %22, %23
  %28 = icmp ult i64 %27, 32
  %29 = or i1 %26, %28
  br i1 %29, label %44, label %30

30:                                               ; preds = %21
  %31 = and i64 %19, 4294967288
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %40, %32 ]
  %34 = getelementptr inbounds float, ptr %14, i64 %33
  %35 = load <8 x float>, ptr %34, align 4, !tbaa !165
  %36 = getelementptr inbounds float, ptr %16, i64 %33
  %37 = load <8 x float>, ptr %36, align 4, !tbaa !165
  %38 = fdiv <8 x float> %35, %37
  %39 = getelementptr inbounds float, ptr %18, i64 %33
  store <8 x float> %38, ptr %39, align 4, !tbaa !165
  %40 = add nuw i64 %33, 8
  %41 = icmp eq i64 %40, %31
  br i1 %41, label %42, label %32, !llvm.loop !268

42:                                               ; preds = %32
  %43 = icmp eq i64 %31, %19
  br i1 %43, label %65, label %44

44:                                               ; preds = %21, %12, %42
  %45 = phi i64 [ 0, %21 ], [ 0, %12 ], [ %31, %42 ]
  %46 = xor i64 %45, -1
  %47 = add nsw i64 %46, %19
  %48 = and i64 %19, 3
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %62, label %50

50:                                               ; preds = %44, %50
  %51 = phi i64 [ %59, %50 ], [ %45, %44 ]
  %52 = phi i64 [ %60, %50 ], [ 0, %44 ]
  %53 = getelementptr inbounds float, ptr %14, i64 %51
  %54 = load float, ptr %53, align 4, !tbaa !165
  %55 = getelementptr inbounds float, ptr %16, i64 %51
  %56 = load float, ptr %55, align 4, !tbaa !165
  %57 = fdiv float %54, %56
  %58 = getelementptr inbounds float, ptr %18, i64 %51
  store float %57, ptr %58, align 4, !tbaa !165
  %59 = add nuw nsw i64 %51, 1
  %60 = add i64 %52, 1
  %61 = icmp eq i64 %60, %48
  br i1 %61, label %62, label %50, !llvm.loop !269

62:                                               ; preds = %50, %44
  %63 = phi i64 [ %45, %44 ], [ %59, %50 ]
  %64 = icmp ult i64 %47, 3
  br i1 %64, label %65, label %66

65:                                               ; preds = %62, %66, %42, %3
  ret void

66:                                               ; preds = %62, %66
  %67 = phi i64 [ %95, %66 ], [ %63, %62 ]
  %68 = getelementptr inbounds float, ptr %14, i64 %67
  %69 = load float, ptr %68, align 4, !tbaa !165
  %70 = getelementptr inbounds float, ptr %16, i64 %67
  %71 = load float, ptr %70, align 4, !tbaa !165
  %72 = fdiv float %69, %71
  %73 = getelementptr inbounds float, ptr %18, i64 %67
  store float %72, ptr %73, align 4, !tbaa !165
  %74 = add nuw nsw i64 %67, 1
  %75 = getelementptr inbounds float, ptr %14, i64 %74
  %76 = load float, ptr %75, align 4, !tbaa !165
  %77 = getelementptr inbounds float, ptr %16, i64 %74
  %78 = load float, ptr %77, align 4, !tbaa !165
  %79 = fdiv float %76, %78
  %80 = getelementptr inbounds float, ptr %18, i64 %74
  store float %79, ptr %80, align 4, !tbaa !165
  %81 = add nuw nsw i64 %67, 2
  %82 = getelementptr inbounds float, ptr %14, i64 %81
  %83 = load float, ptr %82, align 4, !tbaa !165
  %84 = getelementptr inbounds float, ptr %16, i64 %81
  %85 = load float, ptr %84, align 4, !tbaa !165
  %86 = fdiv float %83, %85
  %87 = getelementptr inbounds float, ptr %18, i64 %81
  store float %86, ptr %87, align 4, !tbaa !165
  %88 = add nuw nsw i64 %67, 3
  %89 = getelementptr inbounds float, ptr %14, i64 %88
  %90 = load float, ptr %89, align 4, !tbaa !165
  %91 = getelementptr inbounds float, ptr %16, i64 %88
  %92 = load float, ptr %91, align 4, !tbaa !165
  %93 = fdiv float %90, %92
  %94 = getelementptr inbounds float, ptr %18, i64 %88
  store float %93, ptr %94, align 4, !tbaa !165
  %95 = add nuw nsw i64 %67, 4
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %65, label %66, !llvm.loop !270
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorIfE5printEPKc(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %8 = icmp eq ptr %1, null
  %9 = select i1 %8, ptr @.str.10, ptr %1
  br label %12

10:                                               ; preds = %12, %2
  %11 = tail call i32 @putchar(i32 10)
  ret void

12:                                               ; preds = %6, %12
  %13 = phi i64 [ 0, %6 ], [ %19, %12 ]
  %14 = load ptr, ptr %7, align 8, !tbaa !164
  %15 = getelementptr inbounds float, ptr %14, i64 %13
  %16 = load float, ptr %15, align 4, !tbaa !165
  %17 = fpext float %16 to double
  %18 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) %9, double noundef %17)
  %19 = add nuw nsw i64 %13, 1
  %20 = load i32, ptr %3, align 8, !tbaa !161
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %12, label %10
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorIfE5printERSojbb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = getelementptr i8, ptr %9, i64 -24
  %11 = load i64, ptr %10, align 8
  %12 = getelementptr inbounds i8, ptr %1, i64 %11
  %13 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 5
  %14 = load i32, ptr %13, align 8, !tbaa !144
  %15 = and i32 %14, 5
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.1, i32 noundef 784, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %18 unwind label %24

18:                                               ; preds = %17
  %19 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %19, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %20 unwind label %22

20:                                               ; preds = %18
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %21 unwind label %24

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %19) #24
  br label %157

24:                                               ; preds = %20, %17
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %157

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 3
  %28 = load i32, ptr %27, align 8, !tbaa !150
  %29 = zext i32 %2 to i64
  %30 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 1
  %31 = load i64, ptr %30, align 8, !tbaa !151
  store i64 %29, ptr %30, align 8, !tbaa !151
  %32 = load i64, ptr %10, align 8
  %33 = getelementptr inbounds i8, ptr %1, i64 %32
  %34 = getelementptr inbounds %"class.std::ios_base", ptr %33, i64 0, i32 1
  store i64 %29, ptr %34, align 8, !tbaa !151
  %35 = load i64, ptr %10, align 8
  %36 = getelementptr inbounds i8, ptr %1, i64 %35
  %37 = getelementptr inbounds %"class.std::ios_base", ptr %36, i64 0, i32 3
  %38 = load i32, ptr %37, align 8, !tbaa !152
  %39 = and i32 %38, -261
  %40 = select i1 %3, i32 256, i32 4
  %41 = or i32 %39, %40
  store i32 %41, ptr %37, align 8, !tbaa !152
  %42 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %43 = load i32, ptr %42, align 8, !tbaa !161
  %44 = icmp eq i32 %43, 0
  br i1 %4, label %48, label %45

45:                                               ; preds = %26
  br i1 %44, label %109, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  br label %74

48:                                               ; preds = %26
  br i1 %44, label %109, label %49

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  br label %51

51:                                               ; preds = %49, %69
  %52 = phi i64 [ 0, %49 ], [ %70, %69 ]
  %53 = load ptr, ptr %50, align 8, !tbaa !164
  %54 = getelementptr inbounds float, ptr %53, i64 %52
  %55 = load float, ptr %54, align 4, !tbaa !165
  %56 = fpext float %55 to double
  %57 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, double noundef %56)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6)
  store i8 32, ptr %6, align 1, !tbaa !153
  %58 = load ptr, ptr %57, align 8, !tbaa !5
  %59 = getelementptr i8, ptr %58, i64 -24
  %60 = load i64, ptr %59, align 8
  %61 = getelementptr inbounds i8, ptr %57, i64 %60
  %62 = getelementptr inbounds %"class.std::ios_base", ptr %61, i64 0, i32 2
  %63 = load i64, ptr %62, align 8, !tbaa !154
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %51
  %66 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %57, ptr noundef nonnull %6, i64 noundef 1)
  br label %69

67:                                               ; preds = %51
  %68 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %57, i8 noundef signext 32)
  br label %69

69:                                               ; preds = %65, %67
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6)
  %70 = add nuw nsw i64 %52, 1
  %71 = load i32, ptr %42, align 8, !tbaa !161
  %72 = zext i32 %71 to i64
  %73 = icmp ult i64 %70, %72
  br i1 %73, label %51, label %109

74:                                               ; preds = %46, %101
  %75 = phi i64 [ 0, %46 ], [ %105, %101 ]
  %76 = load ptr, ptr %47, align 8, !tbaa !164
  %77 = getelementptr inbounds float, ptr %76, i64 %75
  %78 = load float, ptr %77, align 4, !tbaa !165
  %79 = fpext float %78 to double
  %80 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, double noundef %79)
  %81 = load ptr, ptr %80, align 8, !tbaa !5
  %82 = getelementptr i8, ptr %81, i64 -24
  %83 = load i64, ptr %82, align 8
  %84 = getelementptr inbounds i8, ptr %80, i64 %83
  %85 = getelementptr inbounds %"class.std::basic_ios", ptr %84, i64 0, i32 5
  %86 = load ptr, ptr %85, align 8, !tbaa !155
  %87 = icmp eq ptr %86, null
  br i1 %87, label %88, label %89

88:                                               ; preds = %74
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

89:                                               ; preds = %74
  %90 = getelementptr inbounds %"class.std::ctype", ptr %86, i64 0, i32 8
  %91 = load i8, ptr %90, align 8, !tbaa !158
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.std::ctype", ptr %86, i64 0, i32 9, i64 10
  %95 = load i8, ptr %94, align 1, !tbaa !153
  br label %101

96:                                               ; preds = %89
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %86)
  %97 = load ptr, ptr %86, align 8, !tbaa !5
  %98 = getelementptr inbounds ptr, ptr %97, i64 6
  %99 = load ptr, ptr %98, align 8
  %100 = tail call noundef signext i8 %99(ptr noundef nonnull align 8 dereferenceable(570) %86, i8 noundef signext 10)
  br label %101

101:                                              ; preds = %93, %96
  %102 = phi i8 [ %95, %93 ], [ %100, %96 ]
  %103 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %80, i8 noundef signext %102)
  %104 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %103)
  %105 = add nuw nsw i64 %75, 1
  %106 = load i32, ptr %42, align 8, !tbaa !161
  %107 = zext i32 %106 to i64
  %108 = icmp ult i64 %105, %107
  br i1 %108, label %74, label %109

109:                                              ; preds = %101, %69, %45, %48
  %110 = load ptr, ptr %1, align 8, !tbaa !5
  %111 = getelementptr i8, ptr %110, i64 -24
  %112 = load i64, ptr %111, align 8
  %113 = getelementptr inbounds i8, ptr %1, i64 %112
  %114 = getelementptr inbounds %"class.std::basic_ios", ptr %113, i64 0, i32 5
  %115 = load ptr, ptr %114, align 8, !tbaa !155
  %116 = icmp eq ptr %115, null
  br i1 %116, label %117, label %118

117:                                              ; preds = %109
  call void @_ZSt16__throw_bad_castv() #26
  unreachable

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"class.std::ctype", ptr %115, i64 0, i32 8
  %120 = load i8, ptr %119, align 8, !tbaa !158
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.std::ctype", ptr %115, i64 0, i32 9, i64 10
  %124 = load i8, ptr %123, align 1, !tbaa !153
  br label %130

125:                                              ; preds = %118
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %115)
  %126 = load ptr, ptr %115, align 8, !tbaa !5
  %127 = getelementptr inbounds ptr, ptr %126, i64 6
  %128 = load ptr, ptr %127, align 8
  %129 = call noundef signext i8 %128(ptr noundef nonnull align 8 dereferenceable(570) %115, i8 noundef signext 10)
  br label %130

130:                                              ; preds = %122, %125
  %131 = phi i8 [ %124, %122 ], [ %129, %125 ]
  %132 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %131)
  %133 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %132)
  %134 = load ptr, ptr %1, align 8, !tbaa !5
  %135 = getelementptr i8, ptr %134, i64 -24
  %136 = load i64, ptr %135, align 8
  %137 = getelementptr inbounds i8, ptr %1, i64 %136
  %138 = getelementptr inbounds %"class.std::ios_base", ptr %137, i64 0, i32 5
  %139 = load i32, ptr %138, align 8, !tbaa !144
  %140 = and i32 %139, 5
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %151, label %142

142:                                              ; preds = %130
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %8, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %8)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %8, ptr noundef nonnull @.str.1, i32 noundef 803, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %143 unwind label %149

143:                                              ; preds = %142
  %144 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %144, ptr noundef nonnull align 8 dereferenceable(60) %8)
          to label %145 unwind label %147

145:                                              ; preds = %143
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %144, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %144, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %146 unwind label %149

146:                                              ; preds = %145
  unreachable

147:                                              ; preds = %143
  %148 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %144) #24
  br label %157

149:                                              ; preds = %145, %142
  %150 = landingpad { ptr, i32 }
          cleanup
  br label %157

151:                                              ; preds = %130
  %152 = getelementptr inbounds %"class.std::ios_base", ptr %137, i64 0, i32 3
  store i32 %28, ptr %152, align 8, !tbaa !150
  %153 = load i64, ptr %135, align 8
  %154 = getelementptr inbounds i8, ptr %1, i64 %153
  %155 = and i64 %31, 4294967295
  %156 = getelementptr inbounds %"class.std::ios_base", ptr %154, i64 0, i32 1
  store i64 %155, ptr %156, align 8, !tbaa !151
  ret void

157:                                              ; preds = %149, %147, %24, %22
  %158 = phi ptr [ %7, %22 ], [ %7, %24 ], [ %8, %147 ], [ %8, %149 ]
  %159 = phi { ptr, i32 } [ %23, %22 ], [ %25, %24 ], [ %148, %147 ], [ %150, %149 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %158) #24
  resume { ptr, i32 } %159
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorIfE11block_writeERSo(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = load ptr, ptr %1, align 8, !tbaa !5
  %8 = getelementptr i8, ptr %7, i64 -24
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = getelementptr inbounds %"class.std::ios_base", ptr %10, i64 0, i32 5
  %12 = load i32, ptr %11, align 8, !tbaa !144
  %13 = and i32 %12, 5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.1, i32 noundef 814, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %16 unwind label %22

16:                                               ; preds = %15
  %17 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %17, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %18 unwind label %20

18:                                               ; preds = %16
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %17, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %19 unwind label %22

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %16
  %21 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %17) #24
  br label %24

22:                                               ; preds = %18, %15
  %23 = landingpad { ptr, i32 }
          cleanup
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi { ptr, i32 } [ %23, %22 ], [ %21, %20 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  br label %61

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %28 = load i32, ptr %27, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #24
  %29 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) @.str.5, i32 noundef %28) #24
  %30 = call i64 @strlen(ptr nonnull dereferenceable(1) %4)
  %31 = getelementptr inbounds i8, ptr %4, i64 %30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(3) %31, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %32 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %4) #27
  %33 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %4, i64 noundef %32)
  %34 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !164
  %36 = load i32, ptr %27, align 8, !tbaa !161
  %37 = zext i32 %36 to i64
  %38 = shl nuw nsw i64 %37, 2
  %39 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef %35, i64 noundef %38)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #24
  store i8 93, ptr %5, align 1, !tbaa !153
  %40 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %5, i64 noundef 1)
  %41 = load ptr, ptr %1, align 8, !tbaa !5
  %42 = getelementptr i8, ptr %41, i64 -24
  %43 = load i64, ptr %42, align 8
  %44 = getelementptr inbounds i8, ptr %1, i64 %43
  %45 = getelementptr inbounds %"class.std::ios_base", ptr %44, i64 0, i32 5
  %46 = load i32, ptr %45, align 8, !tbaa !144
  %47 = and i32 %46, 5
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %26
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.1, i32 noundef 837, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %50 unwind label %56

50:                                               ; preds = %49
  %51 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %51, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %52 unwind label %54

52:                                               ; preds = %50
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %51, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %51, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %53 unwind label %56

53:                                               ; preds = %52
  unreachable

54:                                               ; preds = %50
  %55 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %51) #24
  br label %58

56:                                               ; preds = %52, %49
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi { ptr, i32 } [ %57, %56 ], [ %55, %54 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  br label %61

60:                                               ; preds = %26
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  ret void

61:                                               ; preds = %58, %24
  %62 = phi { ptr, i32 } [ %59, %58 ], [ %25, %24 ]
  resume { ptr, i32 } %62
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE10block_readERSi(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = load ptr, ptr %1, align 8, !tbaa !5
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 %10
  %12 = getelementptr inbounds %"class.std::ios_base", ptr %11, i64 0, i32 5
  %13 = load i32, ptr %12, align 8, !tbaa !144
  %14 = and i32 %13, 5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.1, i32 noundef 845, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.4)
          to label %17 unwind label %23

17:                                               ; preds = %16
  %18 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %18, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %19 unwind label %21

19:                                               ; preds = %17
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %18, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %18, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %20 unwind label %23

20:                                               ; preds = %19
  unreachable

21:                                               ; preds = %17
  %22 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %18) #24
  br label %25

23:                                               ; preds = %19, %16
  %24 = landingpad { ptr, i32 }
          cleanup
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi { ptr, i32 } [ %24, %23 ], [ %22, %21 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  br label %70

27:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #24
  %28 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi7getlineEPclc(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %4, i64 noundef 16, i8 noundef signext 10)
  %29 = call i64 @__isoc23_strtol(ptr noundef nonnull %4, ptr noundef null, i32 noundef 10) #24
  %30 = trunc i64 %29 to i32
  %31 = load ptr, ptr %0, align 8, !tbaa !5
  %32 = getelementptr inbounds ptr, ptr %31, i64 2
  %33 = load ptr, ptr %32, align 8
  call void %33(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %30, i1 noundef zeroext true)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #24
  %34 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %5, i64 noundef 1)
  %35 = load i8, ptr %5, align 1, !tbaa !153
  %36 = icmp eq i8 %35, 91
  br i1 %36, label %46, label %37

37:                                               ; preds = %27
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.1, i32 noundef 862, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.4)
          to label %38 unwind label %44

38:                                               ; preds = %37
  %39 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %39, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %40 unwind label %42

40:                                               ; preds = %38
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %39, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %39, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %41 unwind label %44

41:                                               ; preds = %40
  unreachable

42:                                               ; preds = %38
  %43 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %39) #24
  br label %67

44:                                               ; preds = %40, %37
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %67

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !164
  %49 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %50 = load i32, ptr %49, align 8, !tbaa !161
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 2
  %53 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef %48, i64 noundef %52)
  %54 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %5, i64 noundef 1)
  %55 = load i8, ptr %5, align 1, !tbaa !153
  %56 = icmp eq i8 %55, 93
  br i1 %56, label %66, label %57

57:                                               ; preds = %46
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.1, i32 noundef 870, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.4)
          to label %58 unwind label %64

58:                                               ; preds = %57
  %59 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %59, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %60 unwind label %62

60:                                               ; preds = %58
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %59, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %59, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %61 unwind label %64

61:                                               ; preds = %60
  unreachable

62:                                               ; preds = %58
  %63 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %59) #24
  br label %67

64:                                               ; preds = %60, %57
  %65 = landingpad { ptr, i32 }
          cleanup
  br label %67

66:                                               ; preds = %46
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  ret void

67:                                               ; preds = %64, %62, %44, %42
  %68 = phi ptr [ %6, %42 ], [ %6, %44 ], [ %7, %62 ], [ %7, %64 ]
  %69 = phi { ptr, i32 } [ %43, %42 ], [ %45, %44 ], [ %63, %62 ], [ %65, %64 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %68) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  br label %70

70:                                               ; preds = %67, %25
  %71 = phi { ptr, i32 } [ %69, %67 ], [ %26, %25 ]
  resume { ptr, i32 } %71
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii6VectorIfE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !163
  %4 = shl i32 %3, 2
  %5 = add i32 %4, 88
  ret i32 %5
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeEC2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorIeEC5Ev) align 2 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIeEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorIeEC5ERKS1_) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIeEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  store i32 %5, ptr %3, align 8, !tbaa !271
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 2
  %7 = load i32, ptr %4, align 8, !tbaa !271
  store i32 %7, ptr %6, align 4, !tbaa !273
  %8 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  store ptr null, ptr %8, align 8, !tbaa !274
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %2
  %11 = zext i32 %7 to i64
  %12 = shl nuw nsw i64 %11, 4
  %13 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %12) #22
          to label %14 unwind label %23

14:                                               ; preds = %10
  store ptr %13, ptr %8, align 8, !tbaa !274
  %15 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !274
  %17 = icmp ugt i32 %7, 1
  br i1 %17, label %18, label %19, !prof !25

18:                                               ; preds = %14
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 16 %13, ptr align 16 %16, i64 %12, i1 false)
  br label %25

19:                                               ; preds = %14
  %20 = icmp eq i32 %7, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %19
  %22 = load x86_fp80, ptr %16, align 16, !tbaa !275
  store x86_fp80 %22, ptr %13, align 16, !tbaa !275
  br label %25

23:                                               ; preds = %10
  %24 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %26 unwind label %27

25:                                               ; preds = %21, %19, %18, %2
  ret void

26:                                               ; preds = %23
  resume { ptr, i32 } %24

27:                                               ; preds = %23
  %28 = landingpad { ptr, i32 }
          catch ptr null
  %29 = extractvalue { ptr, i32 } %28, 0
  tail call void @__clang_call_terminate(ptr %29) #23
  unreachable
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii6VectorIeE4sizeEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !271
  ret i32 %3
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii6VectorIeE5beginEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !274
  ret ptr %3
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii6VectorIeE3endEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !274
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds x86_fp80, ptr %3, i64 %6
  ret ptr %7
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZN6dealii6VectorIeE5beginEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !274
  ret ptr %3
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeEC2Ej(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) unnamed_addr #0 comdat($_ZN6dealii6VectorIeEC5Ej) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIeEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %2
  %6 = zext i32 %1 to i64
  %7 = shl nuw nsw i64 %6, 4
  %8 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %7) #22
          to label %9 unwind label %18

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 2
  store ptr %8, ptr %10, align 8, !tbaa !274
  store i32 %1, ptr %11, align 4, !tbaa !273
  store i32 %1, ptr %3, align 8, !tbaa !271
  %12 = getelementptr inbounds x86_fp80, ptr %8, i64 %6
  br label %13

13:                                               ; preds = %13, %9
  %14 = phi ptr [ %15, %13 ], [ %8, %9 ]
  store x86_fp80 0xK00000000000000000000, ptr %14, align 16, !tbaa !275
  %15 = getelementptr inbounds x86_fp80, ptr %14, i64 1
  %16 = icmp eq ptr %15, %12
  br i1 %16, label %17, label %13

17:                                               ; preds = %13, %2
  ret void

18:                                               ; preds = %5
  %19 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %20 unwind label %21

20:                                               ; preds = %18
  resume { ptr, i32 } %19

21:                                               ; preds = %18
  %22 = landingpad { ptr, i32 }
          catch ptr null
  %23 = extractvalue { ptr, i32 } %22, 0
  tail call void @__clang_call_terminate(ptr %23) #23
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorIeED5Ev) align 2 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIeEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !274
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #25
  store ptr null, ptr %2, align 8, !tbaa !274
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorIeED5Ev) align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIeEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !274
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #25
  store ptr null, ptr %2, align 8, !tbaa !274
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  resume { ptr, i32 } %9
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorIeE8compressEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE6reinitEjb(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !274
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(ptr noundef nonnull %7) #25
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  br label %36

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !273
  %15 = icmp ult i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !274
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %18) #25
  br label %21

21:                                               ; preds = %20, %16
  %22 = zext i32 %1 to i64
  %23 = shl nuw nsw i64 %22, 4
  %24 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %23) #22
  store ptr %24, ptr %17, align 8, !tbaa !274
  store i32 %1, ptr %13, align 4, !tbaa !273
  br label %25

25:                                               ; preds = %21, %12
  %26 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  store i32 %1, ptr %26, align 8, !tbaa !271
  br i1 %2, label %36, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !274
  %30 = zext i32 %1 to i64
  %31 = getelementptr inbounds x86_fp80, ptr %29, i64 %30
  br label %32

32:                                               ; preds = %32, %27
  %33 = phi ptr [ %34, %32 ], [ %29, %27 ]
  store x86_fp80 0xK00000000000000000000, ptr %33, align 16, !tbaa !275
  %34 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  %35 = icmp eq ptr %34, %31
  br i1 %35, label %36, label %32

36:                                               ; preds = %32, %10, %25
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEaSEe(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds x86_fp80, ptr %8, i64 %9
  br label %11

11:                                               ; preds = %6, %11
  %12 = phi ptr [ %13, %11 ], [ %8, %6 ]
  store x86_fp80 %1, ptr %12, align 16, !tbaa !275
  %13 = getelementptr inbounds x86_fp80, ptr %12, i64 1
  %14 = icmp eq ptr %13, %10
  br i1 %14, label %15, label %11

15:                                               ; preds = %11, %2
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE4swapERS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !32
  %6 = load i32, ptr %4, align 8, !tbaa !32
  store i32 %6, ptr %3, align 8, !tbaa !32
  store i32 %5, ptr %4, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 2
  %9 = load i32, ptr %7, align 4, !tbaa !32
  %10 = load i32, ptr %8, align 4, !tbaa !32
  store i32 %10, ptr %7, align 4, !tbaa !32
  store i32 %9, ptr %8, align 4, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %11, align 8, !tbaa !33
  %14 = load ptr, ptr %12, align 8, !tbaa !33
  store ptr %14, ptr %11, align 8, !tbaa !33
  store ptr %13, ptr %12, align 8, !tbaa !33
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZN6dealii6VectorIeE3endEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !274
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds x86_fp80, ptr %3, i64 %6
  ret ptr %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !271
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !271
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !274
  %19 = load i32, ptr %3, align 8, !tbaa !271
  %20 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !274
  %22 = icmp ugt i32 %19, 1
  br i1 %22, label %23, label %26, !prof !25

23:                                               ; preds = %16
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 4
  tail call void @llvm.memmove.p0.p0.i64(ptr align 16 %21, ptr align 16 %18, i64 %25, i1 false)
  br label %30

26:                                               ; preds = %16
  %27 = icmp eq i32 %19, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = load x86_fp80, ptr %18, align 16, !tbaa !275
  store x86_fp80 %29, ptr %21, align 16, !tbaa !275
  br label %30

30:                                               ; preds = %28, %26, %23, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEaSERKNS_11BlockVectorIeEE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::BlockVectorBase.18", ptr %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.18", ptr %1, i64 0, i32 2, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !34
  %6 = zext i32 %5 to i64
  %7 = load ptr, ptr %4, align 8, !tbaa !40
  %8 = getelementptr inbounds i32, ptr %7, i64 %6
  %9 = load i32, ptr %8, align 4, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !271
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = load ptr, ptr %0, align 8, !tbaa !5
  %15 = getelementptr inbounds ptr, ptr %14, i64 2
  %16 = load ptr, ptr %15, align 8
  tail call void %16(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %9, i1 noundef zeroext true)
  %17 = load i32, ptr %3, align 8, !tbaa !34
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi i32 [ %17, %13 ], [ %5, %2 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %41, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.dealii::BlockVectorBase.18", ptr %1, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !277
  %24 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = zext i32 %19 to i64
  br label %27

27:                                               ; preds = %21, %53
  %28 = phi i64 [ 0, %21 ], [ %55, %53 ]
  %29 = phi i32 [ 0, %21 ], [ %54, %53 ]
  %30 = getelementptr inbounds %"class.dealii::Vector.16", ptr %23, i64 %28, i32 1
  %31 = load i32, ptr %30, align 8, !tbaa !271
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %53, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.dealii::Vector.16", ptr %23, i64 %28, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !274
  %36 = zext i32 %31 to i64
  %37 = and i64 %36, 1
  %38 = icmp eq i32 %31, 1
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = and i64 %36, 4294967294
  br label %57

41:                                               ; preds = %53, %18
  ret ptr %0

42:                                               ; preds = %57, %33
  %43 = phi i32 [ undef, %33 ], [ %72, %57 ]
  %44 = phi i64 [ 0, %33 ], [ %71, %57 ]
  %45 = phi i32 [ %29, %33 ], [ %72, %57 ]
  %46 = icmp eq i64 %37, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds x86_fp80, ptr %35, i64 %44
  %49 = load x86_fp80, ptr %48, align 16, !tbaa !275
  %50 = zext i32 %45 to i64
  %51 = getelementptr inbounds x86_fp80, ptr %25, i64 %50
  store x86_fp80 %49, ptr %51, align 16, !tbaa !275
  %52 = add i32 %45, 1
  br label %53

53:                                               ; preds = %47, %42, %27
  %54 = phi i32 [ %29, %27 ], [ %43, %42 ], [ %52, %47 ]
  %55 = add nuw nsw i64 %28, 1
  %56 = icmp eq i64 %55, %26
  br i1 %56, label %41, label %27

57:                                               ; preds = %57, %39
  %58 = phi i64 [ 0, %39 ], [ %71, %57 ]
  %59 = phi i32 [ %29, %39 ], [ %72, %57 ]
  %60 = phi i64 [ 0, %39 ], [ %73, %57 ]
  %61 = getelementptr inbounds x86_fp80, ptr %35, i64 %58
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !275
  %63 = zext i32 %59 to i64
  %64 = getelementptr inbounds x86_fp80, ptr %25, i64 %63
  store x86_fp80 %62, ptr %64, align 16, !tbaa !275
  %65 = or i64 %58, 1
  %66 = add i32 %59, 1
  %67 = getelementptr inbounds x86_fp80, ptr %35, i64 %65
  %68 = load x86_fp80, ptr %67, align 16, !tbaa !275
  %69 = zext i32 %66 to i64
  %70 = getelementptr inbounds x86_fp80, ptr %25, i64 %69
  store x86_fp80 %68, ptr %70, align 16, !tbaa !275
  %71 = add nuw nsw i64 %58, 2
  %72 = add i32 %59, 2
  %73 = add i64 %60, 2
  %74 = icmp eq i64 %73, %40
  br i1 %74, label %42, label %57
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorIeEclEj(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !274
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds x86_fp80, ptr %4, i64 %5
  %7 = load x86_fp80, ptr %6, align 16, !tbaa !275
  ret x86_fp80 %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorIeE8norm_sqrEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !271
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !274
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %31

13:                                               ; preds = %31, %5
  %14 = phi x86_fp80 [ undef, %5 ], [ %53, %31 ]
  %15 = phi i64 [ 0, %5 ], [ %54, %31 ]
  %16 = phi x86_fp80 [ 0xK00000000000000000000, %5 ], [ %53, %31 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %26, %18 ], [ %15, %13 ]
  %20 = phi x86_fp80 [ %25, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %27, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds x86_fp80, ptr %7, i64 %19
  %23 = load x86_fp80, ptr %22, align 16, !tbaa !275
  %24 = fmul x86_fp80 %23, %23
  %25 = fadd x86_fp80 %20, %24
  %26 = add nuw nsw i64 %19, 1
  %27 = add i64 %21, 1
  %28 = icmp eq i64 %27, %9
  br i1 %28, label %29, label %18, !llvm.loop !279

29:                                               ; preds = %13, %18, %1
  %30 = phi x86_fp80 [ 0xK00000000000000000000, %1 ], [ %14, %13 ], [ %25, %18 ]
  ret x86_fp80 %30

31:                                               ; preds = %31, %11
  %32 = phi i64 [ 0, %11 ], [ %54, %31 ]
  %33 = phi x86_fp80 [ 0xK00000000000000000000, %11 ], [ %53, %31 ]
  %34 = phi i64 [ 0, %11 ], [ %55, %31 ]
  %35 = getelementptr inbounds x86_fp80, ptr %7, i64 %32
  %36 = load x86_fp80, ptr %35, align 16, !tbaa !275
  %37 = fmul x86_fp80 %36, %36
  %38 = fadd x86_fp80 %33, %37
  %39 = or i64 %32, 1
  %40 = getelementptr inbounds x86_fp80, ptr %7, i64 %39
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !275
  %42 = fmul x86_fp80 %41, %41
  %43 = fadd x86_fp80 %38, %42
  %44 = or i64 %32, 2
  %45 = getelementptr inbounds x86_fp80, ptr %7, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !275
  %47 = fmul x86_fp80 %46, %46
  %48 = fadd x86_fp80 %43, %47
  %49 = or i64 %32, 3
  %50 = getelementptr inbounds x86_fp80, ptr %7, i64 %49
  %51 = load x86_fp80, ptr %50, align 16, !tbaa !275
  %52 = fmul x86_fp80 %51, %51
  %53 = fadd x86_fp80 %48, %52
  %54 = add nuw nsw i64 %32, 4
  %55 = add i64 %34, 4
  %56 = icmp eq i64 %55, %12
  br i1 %56, label %13, label %31
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorIeE10mean_valueEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !271
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !274
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %32

13:                                               ; preds = %32, %5
  %14 = phi x86_fp80 [ undef, %5 ], [ %50, %32 ]
  %15 = phi i64 [ 0, %5 ], [ %51, %32 ]
  %16 = phi x86_fp80 [ 0xK00000000000000000000, %5 ], [ %50, %32 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %25, %18 ], [ %15, %13 ]
  %20 = phi x86_fp80 [ %24, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %26, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds x86_fp80, ptr %7, i64 %19
  %23 = load x86_fp80, ptr %22, align 16, !tbaa !275
  %24 = fadd x86_fp80 %20, %23
  %25 = add nuw nsw i64 %19, 1
  %26 = add i64 %21, 1
  %27 = icmp eq i64 %26, %9
  br i1 %27, label %28, label %18, !llvm.loop !280

28:                                               ; preds = %13, %18, %1
  %29 = phi x86_fp80 [ 0xK00000000000000000000, %1 ], [ %14, %13 ], [ %24, %18 ]
  %30 = uitofp i32 %3 to x86_fp80
  %31 = fdiv x86_fp80 %29, %30
  ret x86_fp80 %31

32:                                               ; preds = %32, %11
  %33 = phi i64 [ 0, %11 ], [ %51, %32 ]
  %34 = phi x86_fp80 [ 0xK00000000000000000000, %11 ], [ %50, %32 ]
  %35 = phi i64 [ 0, %11 ], [ %52, %32 ]
  %36 = getelementptr inbounds x86_fp80, ptr %7, i64 %33
  %37 = load x86_fp80, ptr %36, align 16, !tbaa !275
  %38 = fadd x86_fp80 %34, %37
  %39 = or i64 %33, 1
  %40 = getelementptr inbounds x86_fp80, ptr %7, i64 %39
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !275
  %42 = fadd x86_fp80 %38, %41
  %43 = or i64 %33, 2
  %44 = getelementptr inbounds x86_fp80, ptr %7, i64 %43
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !275
  %46 = fadd x86_fp80 %42, %45
  %47 = or i64 %33, 3
  %48 = getelementptr inbounds x86_fp80, ptr %7, i64 %47
  %49 = load x86_fp80, ptr %48, align 16, !tbaa !275
  %50 = fadd x86_fp80 %46, %49
  %51 = add nuw nsw i64 %33, 4
  %52 = add i64 %35, 4
  %53 = icmp eq i64 %52, %12
  br i1 %53, label %13, label %32
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorIeE7l1_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !271
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !274
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %31

13:                                               ; preds = %31, %5
  %14 = phi x86_fp80 [ undef, %5 ], [ %53, %31 ]
  %15 = phi i64 [ 0, %5 ], [ %54, %31 ]
  %16 = phi x86_fp80 [ 0xK00000000000000000000, %5 ], [ %53, %31 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %26, %18 ], [ %15, %13 ]
  %20 = phi x86_fp80 [ %25, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %27, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds x86_fp80, ptr %7, i64 %19
  %23 = load x86_fp80, ptr %22, align 16, !tbaa !275
  %24 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %23)
  %25 = fadd x86_fp80 %20, %24
  %26 = add nuw nsw i64 %19, 1
  %27 = add i64 %21, 1
  %28 = icmp eq i64 %27, %9
  br i1 %28, label %29, label %18, !llvm.loop !281

29:                                               ; preds = %13, %18, %1
  %30 = phi x86_fp80 [ 0xK00000000000000000000, %1 ], [ %14, %13 ], [ %25, %18 ]
  ret x86_fp80 %30

31:                                               ; preds = %31, %11
  %32 = phi i64 [ 0, %11 ], [ %54, %31 ]
  %33 = phi x86_fp80 [ 0xK00000000000000000000, %11 ], [ %53, %31 ]
  %34 = phi i64 [ 0, %11 ], [ %55, %31 ]
  %35 = getelementptr inbounds x86_fp80, ptr %7, i64 %32
  %36 = load x86_fp80, ptr %35, align 16, !tbaa !275
  %37 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %36)
  %38 = fadd x86_fp80 %33, %37
  %39 = or i64 %32, 1
  %40 = getelementptr inbounds x86_fp80, ptr %7, i64 %39
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !275
  %42 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %41)
  %43 = fadd x86_fp80 %38, %42
  %44 = or i64 %32, 2
  %45 = getelementptr inbounds x86_fp80, ptr %7, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !275
  %47 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %46)
  %48 = fadd x86_fp80 %43, %47
  %49 = or i64 %32, 3
  %50 = getelementptr inbounds x86_fp80, ptr %7, i64 %49
  %51 = load x86_fp80, ptr %50, align 16, !tbaa !275
  %52 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %51)
  %53 = fadd x86_fp80 %48, %52
  %54 = add nuw nsw i64 %32, 4
  %55 = add i64 %34, 4
  %56 = icmp eq i64 %55, %12
  br i1 %56, label %13, label %31
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorIeE7l2_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !271
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !274
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %39, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64 [ 0, %11 ], [ %36, %13 ]
  %15 = phi x86_fp80 [ 0xK00000000000000000000, %11 ], [ %35, %13 ]
  %16 = phi i64 [ 0, %11 ], [ %37, %13 ]
  %17 = getelementptr inbounds x86_fp80, ptr %7, i64 %14
  %18 = load x86_fp80, ptr %17, align 16, !tbaa !275
  %19 = fmul x86_fp80 %18, %18
  %20 = fadd x86_fp80 %15, %19
  %21 = or i64 %14, 1
  %22 = getelementptr inbounds x86_fp80, ptr %7, i64 %21
  %23 = load x86_fp80, ptr %22, align 16, !tbaa !275
  %24 = fmul x86_fp80 %23, %23
  %25 = fadd x86_fp80 %20, %24
  %26 = or i64 %14, 2
  %27 = getelementptr inbounds x86_fp80, ptr %7, i64 %26
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !275
  %29 = fmul x86_fp80 %28, %28
  %30 = fadd x86_fp80 %25, %29
  %31 = or i64 %14, 3
  %32 = getelementptr inbounds x86_fp80, ptr %7, i64 %31
  %33 = load x86_fp80, ptr %32, align 16, !tbaa !275
  %34 = fmul x86_fp80 %33, %33
  %35 = fadd x86_fp80 %30, %34
  %36 = add nuw nsw i64 %14, 4
  %37 = add i64 %16, 4
  %38 = icmp eq i64 %37, %12
  br i1 %38, label %39, label %13

39:                                               ; preds = %13, %5
  %40 = phi x86_fp80 [ undef, %5 ], [ %35, %13 ]
  %41 = phi i64 [ 0, %5 ], [ %36, %13 ]
  %42 = phi x86_fp80 [ 0xK00000000000000000000, %5 ], [ %35, %13 ]
  %43 = icmp eq i64 %9, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %39, %44
  %45 = phi i64 [ %52, %44 ], [ %41, %39 ]
  %46 = phi x86_fp80 [ %51, %44 ], [ %42, %39 ]
  %47 = phi i64 [ %53, %44 ], [ 0, %39 ]
  %48 = getelementptr inbounds x86_fp80, ptr %7, i64 %45
  %49 = load x86_fp80, ptr %48, align 16, !tbaa !275
  %50 = fmul x86_fp80 %49, %49
  %51 = fadd x86_fp80 %46, %50
  %52 = add nuw nsw i64 %45, 1
  %53 = add i64 %47, 1
  %54 = icmp eq i64 %53, %9
  br i1 %54, label %55, label %44, !llvm.loop !282

55:                                               ; preds = %39, %44, %1
  %56 = phi x86_fp80 [ 0xK00000000000000000000, %1 ], [ %40, %39 ], [ %51, %44 ]
  %57 = tail call x86_fp80 @sqrtl(x86_fp80 noundef %56) #24
  ret x86_fp80 %57
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorIeE7lp_normEe(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  br label %12

8:                                                ; preds = %12, %2
  %9 = phi x86_fp80 [ 0xK00000000000000000000, %2 ], [ %20, %12 ]
  %10 = fdiv x86_fp80 0xK3FFF8000000000000000, %1
  %11 = tail call x86_fp80 @powl(x86_fp80 noundef %9, x86_fp80 noundef %10) #24
  ret x86_fp80 %11

12:                                               ; preds = %6, %12
  %13 = phi i64 [ 0, %6 ], [ %21, %12 ]
  %14 = phi x86_fp80 [ 0xK00000000000000000000, %6 ], [ %20, %12 ]
  %15 = load ptr, ptr %7, align 8, !tbaa !274
  %16 = getelementptr inbounds x86_fp80, ptr %15, i64 %13
  %17 = load x86_fp80, ptr %16, align 16, !tbaa !275
  %18 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %17)
  %19 = tail call x86_fp80 @powl(x86_fp80 noundef %18, x86_fp80 noundef %1) #24
  %20 = fadd x86_fp80 %14, %19
  %21 = add nuw nsw i64 %13, 1
  %22 = load i32, ptr %3, align 8, !tbaa !271
  %23 = zext i32 %22 to i64
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %12, label %8
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorIeE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !271
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !274
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %32

13:                                               ; preds = %32, %5
  %14 = phi x86_fp80 [ undef, %5 ], [ %58, %32 ]
  %15 = phi i64 [ 0, %5 ], [ %59, %32 ]
  %16 = phi x86_fp80 [ 0xK00000000000000000000, %5 ], [ %58, %32 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %27, %18 ], [ %15, %13 ]
  %20 = phi x86_fp80 [ %26, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %28, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds x86_fp80, ptr %7, i64 %19
  %23 = load x86_fp80, ptr %22, align 16, !tbaa !275
  %24 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %23)
  %25 = fcmp olt x86_fp80 %24, %20
  %26 = select i1 %25, x86_fp80 %20, x86_fp80 %24
  %27 = add nuw nsw i64 %19, 1
  %28 = add i64 %21, 1
  %29 = icmp eq i64 %28, %9
  br i1 %29, label %30, label %18, !llvm.loop !283

30:                                               ; preds = %13, %18, %1
  %31 = phi x86_fp80 [ 0xK00000000000000000000, %1 ], [ %14, %13 ], [ %26, %18 ]
  ret x86_fp80 %31

32:                                               ; preds = %32, %11
  %33 = phi i64 [ 0, %11 ], [ %59, %32 ]
  %34 = phi x86_fp80 [ 0xK00000000000000000000, %11 ], [ %58, %32 ]
  %35 = phi i64 [ 0, %11 ], [ %60, %32 ]
  %36 = getelementptr inbounds x86_fp80, ptr %7, i64 %33
  %37 = load x86_fp80, ptr %36, align 16, !tbaa !275
  %38 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %37)
  %39 = fcmp olt x86_fp80 %38, %34
  %40 = select i1 %39, x86_fp80 %34, x86_fp80 %38
  %41 = or i64 %33, 1
  %42 = getelementptr inbounds x86_fp80, ptr %7, i64 %41
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !275
  %44 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %43)
  %45 = fcmp olt x86_fp80 %44, %40
  %46 = select i1 %45, x86_fp80 %40, x86_fp80 %44
  %47 = or i64 %33, 2
  %48 = getelementptr inbounds x86_fp80, ptr %7, i64 %47
  %49 = load x86_fp80, ptr %48, align 16, !tbaa !275
  %50 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %49)
  %51 = fcmp olt x86_fp80 %50, %46
  %52 = select i1 %51, x86_fp80 %46, x86_fp80 %50
  %53 = or i64 %33, 3
  %54 = getelementptr inbounds x86_fp80, ptr %7, i64 %53
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !275
  %56 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %55)
  %57 = fcmp olt x86_fp80 %56, %52
  %58 = select i1 %57, x86_fp80 %52, x86_fp80 %56
  %59 = add nuw nsw i64 %33, 4
  %60 = add i64 %35, 4
  %61 = icmp eq i64 %60, %12
  br i1 %61, label %13, label %32
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIeE8all_zeroEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !271
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !274
  %8 = zext i32 %3 to i64
  %9 = load x86_fp80, ptr %7, align 16, !tbaa !275
  %10 = fcmp une x86_fp80 %9, 0xK00000000000000000000
  br i1 %10, label %21, label %11

11:                                               ; preds = %5, %15
  %12 = phi i64 [ %13, %15 ], [ 0, %5 ]
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp eq i64 %13, %8
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds x86_fp80, ptr %7, i64 %13
  %17 = load x86_fp80, ptr %16, align 16, !tbaa !275
  %18 = fcmp une x86_fp80 %17, 0xK00000000000000000000
  br i1 %18, label %19, label %11

19:                                               ; preds = %11, %15
  %20 = icmp uge i64 %13, %8
  br label %21

21:                                               ; preds = %19, %5, %1
  %22 = phi i1 [ true, %1 ], [ false, %5 ], [ %20, %19 ]
  ret i1 %22
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIeE15is_non_negativeEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !271
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !274
  %8 = zext i32 %3 to i64
  %9 = load x86_fp80, ptr %7, align 16, !tbaa !275
  %10 = fcmp ult x86_fp80 %9, 0xK00000000000000000000
  br i1 %10, label %21, label %11

11:                                               ; preds = %5, %15
  %12 = phi i64 [ %13, %15 ], [ 0, %5 ]
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp eq i64 %13, %8
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds x86_fp80, ptr %7, i64 %13
  %17 = load x86_fp80, ptr %16, align 16, !tbaa !275
  %18 = fcmp ult x86_fp80 %17, 0xK00000000000000000000
  br i1 %18, label %19, label %11

19:                                               ; preds = %11, %15
  %20 = icmp uge i64 %13, %8
  br label %21

21:                                               ; preds = %19, %5, %1
  %22 = phi i1 [ true, %1 ], [ false, %5 ], [ %20, %19 ]
  ret i1 %22
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 16 dereferenceable(16) ptr @_ZN6dealii6VectorIeEclEj(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !274
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds x86_fp80, ptr %4, i64 %5
  ret ptr %6
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEpLERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = zext i32 %4 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %4, 1
  br i1 %13, label %33, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, 4294967294
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %30, %16 ]
  %18 = phi i64 [ 0, %14 ], [ %31, %16 ]
  %19 = getelementptr inbounds x86_fp80, ptr %8, i64 %17
  %20 = load x86_fp80, ptr %19, align 16, !tbaa !275
  %21 = getelementptr inbounds x86_fp80, ptr %10, i64 %17
  %22 = load x86_fp80, ptr %21, align 16, !tbaa !275
  %23 = fadd x86_fp80 %20, %22
  store x86_fp80 %23, ptr %21, align 16, !tbaa !275
  %24 = or i64 %17, 1
  %25 = getelementptr inbounds x86_fp80, ptr %8, i64 %24
  %26 = load x86_fp80, ptr %25, align 16, !tbaa !275
  %27 = getelementptr inbounds x86_fp80, ptr %10, i64 %24
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !275
  %29 = fadd x86_fp80 %26, %28
  store x86_fp80 %29, ptr %27, align 16, !tbaa !275
  %30 = add nuw nsw i64 %17, 2
  %31 = add i64 %18, 2
  %32 = icmp eq i64 %31, %15
  br i1 %32, label %33, label %16

33:                                               ; preds = %16, %6
  %34 = phi i64 [ 0, %6 ], [ %30, %16 ]
  %35 = icmp eq i64 %12, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds x86_fp80, ptr %8, i64 %34
  %38 = load x86_fp80, ptr %37, align 16, !tbaa !275
  %39 = getelementptr inbounds x86_fp80, ptr %10, i64 %34
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !275
  %41 = fadd x86_fp80 %38, %40
  store x86_fp80 %41, ptr %39, align 16, !tbaa !275
  br label %42

42:                                               ; preds = %36, %33, %2
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE3addERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = zext i32 %4 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %4, 1
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, 4294967294
  br label %26

16:                                               ; preds = %26, %6
  %17 = phi i64 [ 0, %6 ], [ %40, %26 ]
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds x86_fp80, ptr %8, i64 %17
  %21 = load x86_fp80, ptr %20, align 16, !tbaa !275
  %22 = getelementptr inbounds x86_fp80, ptr %10, i64 %17
  %23 = load x86_fp80, ptr %22, align 16, !tbaa !275
  %24 = fadd x86_fp80 %21, %23
  store x86_fp80 %24, ptr %22, align 16, !tbaa !275
  br label %25

25:                                               ; preds = %19, %16, %2
  ret void

26:                                               ; preds = %26, %14
  %27 = phi i64 [ 0, %14 ], [ %40, %26 ]
  %28 = phi i64 [ 0, %14 ], [ %41, %26 ]
  %29 = getelementptr inbounds x86_fp80, ptr %8, i64 %27
  %30 = load x86_fp80, ptr %29, align 16, !tbaa !275
  %31 = getelementptr inbounds x86_fp80, ptr %10, i64 %27
  %32 = load x86_fp80, ptr %31, align 16, !tbaa !275
  %33 = fadd x86_fp80 %30, %32
  store x86_fp80 %33, ptr %31, align 16, !tbaa !275
  %34 = or i64 %27, 1
  %35 = getelementptr inbounds x86_fp80, ptr %8, i64 %34
  %36 = load x86_fp80, ptr %35, align 16, !tbaa !275
  %37 = getelementptr inbounds x86_fp80, ptr %10, i64 %34
  %38 = load x86_fp80, ptr %37, align 16, !tbaa !275
  %39 = fadd x86_fp80 %36, %38
  store x86_fp80 %39, ptr %37, align 16, !tbaa !275
  %40 = add nuw nsw i64 %27, 2
  %41 = add i64 %28, 2
  %42 = icmp eq i64 %41, %15
  br i1 %42, label %16, label %26
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEmIERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = zext i32 %4 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %4, 1
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, 4294967294
  br label %26

16:                                               ; preds = %26, %6
  %17 = phi i64 [ 0, %6 ], [ %40, %26 ]
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds x86_fp80, ptr %8, i64 %17
  %21 = load x86_fp80, ptr %20, align 16, !tbaa !275
  %22 = getelementptr inbounds x86_fp80, ptr %10, i64 %17
  %23 = load x86_fp80, ptr %22, align 16, !tbaa !275
  %24 = fsub x86_fp80 %23, %21
  store x86_fp80 %24, ptr %22, align 16, !tbaa !275
  br label %25

25:                                               ; preds = %19, %16, %2
  ret ptr %0

26:                                               ; preds = %26, %14
  %27 = phi i64 [ 0, %14 ], [ %40, %26 ]
  %28 = phi i64 [ 0, %14 ], [ %41, %26 ]
  %29 = getelementptr inbounds x86_fp80, ptr %8, i64 %27
  %30 = load x86_fp80, ptr %29, align 16, !tbaa !275
  %31 = getelementptr inbounds x86_fp80, ptr %10, i64 %27
  %32 = load x86_fp80, ptr %31, align 16, !tbaa !275
  %33 = fsub x86_fp80 %32, %30
  store x86_fp80 %33, ptr %31, align 16, !tbaa !275
  %34 = or i64 %27, 1
  %35 = getelementptr inbounds x86_fp80, ptr %8, i64 %34
  %36 = load x86_fp80, ptr %35, align 16, !tbaa !275
  %37 = getelementptr inbounds x86_fp80, ptr %10, i64 %34
  %38 = load x86_fp80, ptr %37, align 16, !tbaa !275
  %39 = fsub x86_fp80 %38, %36
  store x86_fp80 %39, ptr %37, align 16, !tbaa !275
  %40 = add nuw nsw i64 %27, 2
  %41 = add i64 %28, 2
  %42 = icmp eq i64 %41, %15
  br i1 %42, label %16, label %26
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE3addEe(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = zext i32 %4 to i64
  %10 = and i64 %9, 3
  %11 = icmp ult i32 %4, 4
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  %13 = and i64 %9, 4294967292
  br label %27

14:                                               ; preds = %27, %6
  %15 = phi i64 [ 0, %6 ], [ %45, %27 ]
  %16 = icmp eq i64 %10, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %14, %17
  %18 = phi i64 [ %23, %17 ], [ %15, %14 ]
  %19 = phi i64 [ %24, %17 ], [ 0, %14 ]
  %20 = getelementptr inbounds x86_fp80, ptr %8, i64 %18
  %21 = load x86_fp80, ptr %20, align 16, !tbaa !275
  %22 = fadd x86_fp80 %21, %1
  store x86_fp80 %22, ptr %20, align 16, !tbaa !275
  %23 = add nuw nsw i64 %18, 1
  %24 = add i64 %19, 1
  %25 = icmp eq i64 %24, %10
  br i1 %25, label %26, label %17, !llvm.loop !284

26:                                               ; preds = %14, %17, %2
  ret void

27:                                               ; preds = %27, %12
  %28 = phi i64 [ 0, %12 ], [ %45, %27 ]
  %29 = phi i64 [ 0, %12 ], [ %46, %27 ]
  %30 = getelementptr inbounds x86_fp80, ptr %8, i64 %28
  %31 = load x86_fp80, ptr %30, align 16, !tbaa !275
  %32 = fadd x86_fp80 %31, %1
  store x86_fp80 %32, ptr %30, align 16, !tbaa !275
  %33 = or i64 %28, 1
  %34 = getelementptr inbounds x86_fp80, ptr %8, i64 %33
  %35 = load x86_fp80, ptr %34, align 16, !tbaa !275
  %36 = fadd x86_fp80 %35, %1
  store x86_fp80 %36, ptr %34, align 16, !tbaa !275
  %37 = or i64 %28, 2
  %38 = getelementptr inbounds x86_fp80, ptr %8, i64 %37
  %39 = load x86_fp80, ptr %38, align 16, !tbaa !275
  %40 = fadd x86_fp80 %39, %1
  store x86_fp80 %40, ptr %38, align 16, !tbaa !275
  %41 = or i64 %28, 3
  %42 = getelementptr inbounds x86_fp80, ptr %8, i64 %41
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !275
  %44 = fadd x86_fp80 %43, %1
  store x86_fp80 %44, ptr %42, align 16, !tbaa !275
  %45 = add nuw nsw i64 %28, 4
  %46 = add i64 %29, 4
  %47 = icmp eq i64 %46, %13
  br i1 %47, label %14, label %27
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE3addEeRKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !274
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !271
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds x86_fp80, ptr %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.dealii::Vector.16", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !274
  br label %14

14:                                               ; preds = %11, %14
  %15 = phi ptr [ %17, %14 ], [ %13, %11 ]
  %16 = phi ptr [ %19, %14 ], [ %5, %11 ]
  %17 = getelementptr inbounds x86_fp80, ptr %15, i64 1
  %18 = load x86_fp80, ptr %15, align 16, !tbaa !275
  %19 = getelementptr inbounds x86_fp80, ptr %16, i64 1
  %20 = load x86_fp80, ptr %16, align 16, !tbaa !275
  %21 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %18, x86_fp80 %20)
  store x86_fp80 %21, ptr %16, align 16, !tbaa !275
  %22 = icmp eq ptr %19, %9
  br i1 %22, label %23, label %14

23:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare x86_fp80 @llvm.fmuladd.f80(x86_fp80, x86_fp80, x86_fp80) #10

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE3addEeRKS1_eS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #9 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !271
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %34, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.16", ptr %2, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !274
  %12 = getelementptr inbounds %"class.dealii::Vector.16", ptr %4, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !274
  %14 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !274
  %16 = zext i32 %7 to i64
  %17 = and i64 %16, 1
  %18 = icmp eq i32 %7, 1
  br i1 %18, label %21, label %19

19:                                               ; preds = %9
  %20 = and i64 %16, 4294967294
  br label %35

21:                                               ; preds = %35, %9
  %22 = phi i64 [ 0, %9 ], [ %57, %35 ]
  %23 = icmp eq i64 %17, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds x86_fp80, ptr %11, i64 %22
  %26 = load x86_fp80, ptr %25, align 16, !tbaa !275
  %27 = getelementptr inbounds x86_fp80, ptr %13, i64 %22
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !275
  %29 = fmul x86_fp80 %28, %3
  %30 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %26, x86_fp80 %29)
  %31 = getelementptr inbounds x86_fp80, ptr %15, i64 %22
  %32 = load x86_fp80, ptr %31, align 16, !tbaa !275
  %33 = fadd x86_fp80 %32, %30
  store x86_fp80 %33, ptr %31, align 16, !tbaa !275
  br label %34

34:                                               ; preds = %24, %21, %5
  ret void

35:                                               ; preds = %35, %19
  %36 = phi i64 [ 0, %19 ], [ %57, %35 ]
  %37 = phi i64 [ 0, %19 ], [ %58, %35 ]
  %38 = getelementptr inbounds x86_fp80, ptr %11, i64 %36
  %39 = load x86_fp80, ptr %38, align 16, !tbaa !275
  %40 = getelementptr inbounds x86_fp80, ptr %13, i64 %36
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !275
  %42 = fmul x86_fp80 %41, %3
  %43 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %39, x86_fp80 %42)
  %44 = getelementptr inbounds x86_fp80, ptr %15, i64 %36
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !275
  %46 = fadd x86_fp80 %45, %43
  store x86_fp80 %46, ptr %44, align 16, !tbaa !275
  %47 = or i64 %36, 1
  %48 = getelementptr inbounds x86_fp80, ptr %11, i64 %47
  %49 = load x86_fp80, ptr %48, align 16, !tbaa !275
  %50 = getelementptr inbounds x86_fp80, ptr %13, i64 %47
  %51 = load x86_fp80, ptr %50, align 16, !tbaa !275
  %52 = fmul x86_fp80 %51, %3
  %53 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %49, x86_fp80 %52)
  %54 = getelementptr inbounds x86_fp80, ptr %15, i64 %47
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !275
  %56 = fadd x86_fp80 %55, %53
  store x86_fp80 %56, ptr %54, align 16, !tbaa !275
  %57 = add nuw nsw i64 %36, 2
  %58 = add i64 %37, 2
  %59 = icmp eq i64 %58, %20
  br i1 %59, label %21, label %35
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE4saddEeRKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !274
  %10 = getelementptr inbounds %"class.dealii::Vector.16", ptr %2, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !274
  %12 = zext i32 %5 to i64
  %13 = and i64 %12, 1
  %14 = icmp eq i32 %5, 1
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = and i64 %12, 4294967294
  br label %27

17:                                               ; preds = %27, %7
  %18 = phi i64 [ 0, %7 ], [ %41, %27 ]
  %19 = icmp eq i64 %13, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %22 = load x86_fp80, ptr %21, align 16, !tbaa !275
  %23 = getelementptr inbounds x86_fp80, ptr %11, i64 %18
  %24 = load x86_fp80, ptr %23, align 16, !tbaa !275
  %25 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %22, x86_fp80 %24)
  store x86_fp80 %25, ptr %21, align 16, !tbaa !275
  br label %26

26:                                               ; preds = %20, %17, %3
  ret void

27:                                               ; preds = %27, %15
  %28 = phi i64 [ 0, %15 ], [ %41, %27 ]
  %29 = phi i64 [ 0, %15 ], [ %42, %27 ]
  %30 = getelementptr inbounds x86_fp80, ptr %9, i64 %28
  %31 = load x86_fp80, ptr %30, align 16, !tbaa !275
  %32 = getelementptr inbounds x86_fp80, ptr %11, i64 %28
  %33 = load x86_fp80, ptr %32, align 16, !tbaa !275
  %34 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %31, x86_fp80 %33)
  store x86_fp80 %34, ptr %30, align 16, !tbaa !275
  %35 = or i64 %28, 1
  %36 = getelementptr inbounds x86_fp80, ptr %9, i64 %35
  %37 = load x86_fp80, ptr %36, align 16, !tbaa !275
  %38 = getelementptr inbounds x86_fp80, ptr %11, i64 %35
  %39 = load x86_fp80, ptr %38, align 16, !tbaa !275
  %40 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %37, x86_fp80 %39)
  store x86_fp80 %40, ptr %36, align 16, !tbaa !275
  %41 = add nuw nsw i64 %28, 2
  %42 = add i64 %29, 2
  %43 = icmp eq i64 %42, %16
  br i1 %43, label %17, label %27
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE4saddEeeRKS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1, x86_fp80 noundef %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #3 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !274
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !271
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds x86_fp80, ptr %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %25, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.dealii::Vector.16", ptr %3, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !274
  br label %15

15:                                               ; preds = %12, %15
  %16 = phi ptr [ %19, %15 ], [ %14, %12 ]
  %17 = phi ptr [ %23, %15 ], [ %6, %12 ]
  %18 = load x86_fp80, ptr %17, align 16, !tbaa !275
  %19 = getelementptr inbounds x86_fp80, ptr %16, i64 1
  %20 = load x86_fp80, ptr %16, align 16, !tbaa !275
  %21 = fmul x86_fp80 %20, %2
  %22 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %18, x86_fp80 %21)
  store x86_fp80 %22, ptr %17, align 16, !tbaa !275
  %23 = getelementptr inbounds x86_fp80, ptr %17, i64 1
  %24 = icmp eq ptr %23, %10
  br i1 %24, label %25, label %15

25:                                               ; preds = %15, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE4saddEeeRKS1_eS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1, x86_fp80 noundef %2, ptr noundef nonnull align 8 dereferenceable(88) %3, x86_fp80 noundef %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #9 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !271
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !274
  %13 = getelementptr inbounds %"class.dealii::Vector.16", ptr %3, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !274
  %15 = getelementptr inbounds %"class.dealii::Vector.16", ptr %5, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !274
  %17 = zext i32 %8 to i64
  br label %19

18:                                               ; preds = %19, %6
  ret void

19:                                               ; preds = %10, %19
  %20 = phi i64 [ 0, %10 ], [ %30, %19 ]
  %21 = getelementptr inbounds x86_fp80, ptr %12, i64 %20
  %22 = load x86_fp80, ptr %21, align 16, !tbaa !275
  %23 = getelementptr inbounds x86_fp80, ptr %14, i64 %20
  %24 = load x86_fp80, ptr %23, align 16, !tbaa !275
  %25 = fmul x86_fp80 %24, %2
  %26 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %22, x86_fp80 %25)
  %27 = getelementptr inbounds x86_fp80, ptr %16, i64 %20
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !275
  %29 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %4, x86_fp80 %28, x86_fp80 %26)
  store x86_fp80 %29, ptr %21, align 16, !tbaa !275
  %30 = add nuw nsw i64 %20, 1
  %31 = icmp eq i64 %30, %17
  br i1 %31, label %18, label %19
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE4saddEeeRKS1_eS3_eS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1, x86_fp80 noundef %2, ptr noundef nonnull align 8 dereferenceable(88) %3, x86_fp80 noundef %4, ptr noundef nonnull align 8 dereferenceable(88) %5, x86_fp80 noundef %6, ptr noundef nonnull align 8 dereferenceable(88) %7) local_unnamed_addr #9 comdat align 2 {
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !271
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !274
  %15 = getelementptr inbounds %"class.dealii::Vector.16", ptr %3, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !274
  %17 = getelementptr inbounds %"class.dealii::Vector.16", ptr %5, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !274
  %19 = getelementptr inbounds %"class.dealii::Vector.16", ptr %7, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !274
  %21 = zext i32 %10 to i64
  br label %23

22:                                               ; preds = %23, %8
  ret void

23:                                               ; preds = %12, %23
  %24 = phi i64 [ 0, %12 ], [ %37, %23 ]
  %25 = getelementptr inbounds x86_fp80, ptr %14, i64 %24
  %26 = load x86_fp80, ptr %25, align 16, !tbaa !275
  %27 = getelementptr inbounds x86_fp80, ptr %16, i64 %24
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !275
  %29 = fmul x86_fp80 %28, %2
  %30 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %26, x86_fp80 %29)
  %31 = getelementptr inbounds x86_fp80, ptr %18, i64 %24
  %32 = load x86_fp80, ptr %31, align 16, !tbaa !275
  %33 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %4, x86_fp80 %32, x86_fp80 %30)
  %34 = getelementptr inbounds x86_fp80, ptr %20, i64 %24
  %35 = load x86_fp80, ptr %34, align 16, !tbaa !275
  %36 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %6, x86_fp80 %35, x86_fp80 %33)
  store x86_fp80 %36, ptr %25, align 16, !tbaa !275
  %37 = add nuw nsw i64 %24, 1
  %38 = icmp eq i64 %37, %21
  br i1 %38, label %22, label %23
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE5scaleEe(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !274
  %5 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !271
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds x86_fp80, ptr %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %2, %10
  %11 = phi ptr [ %12, %10 ], [ %4, %2 ]
  %12 = getelementptr inbounds x86_fp80, ptr %11, i64 1
  %13 = load x86_fp80, ptr %11, align 16, !tbaa !275
  %14 = fmul x86_fp80 %13, %1
  store x86_fp80 %14, ptr %11, align 16, !tbaa !275
  %15 = icmp eq ptr %12, %8
  br i1 %15, label %16, label %10

16:                                               ; preds = %10, %2
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEmLEe(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !274
  %5 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !271
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds x86_fp80, ptr %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %2, %10
  %11 = phi ptr [ %12, %10 ], [ %4, %2 ]
  %12 = getelementptr inbounds x86_fp80, ptr %11, i64 1
  %13 = load x86_fp80, ptr %11, align 16, !tbaa !275
  %14 = fmul x86_fp80 %13, %1
  store x86_fp80 %14, ptr %11, align 16, !tbaa !275
  %15 = icmp eq ptr %12, %8
  br i1 %15, label %16, label %10

16:                                               ; preds = %10, %2
  ret ptr %0
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEdVEe(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = fdiv x86_fp80 0xK3FFF8000000000000000, %1
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !274
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !271
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds x86_fp80, ptr %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2, %11
  %12 = phi ptr [ %13, %11 ], [ %5, %2 ]
  %13 = getelementptr inbounds x86_fp80, ptr %12, i64 1
  %14 = load x86_fp80, ptr %12, align 16, !tbaa !275
  %15 = fmul x86_fp80 %3, %14
  store x86_fp80 %15, ptr %12, align 16, !tbaa !275
  %16 = icmp eq ptr %13, %9
  br i1 %16, label %17, label %11

17:                                               ; preds = %11, %2
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE3equEeRKS1_eS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #9 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !271
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %32, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.16", ptr %2, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !274
  %12 = getelementptr inbounds %"class.dealii::Vector.16", ptr %4, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !274
  %14 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !274
  %16 = zext i32 %7 to i64
  %17 = and i64 %16, 1
  %18 = icmp eq i32 %7, 1
  br i1 %18, label %21, label %19

19:                                               ; preds = %9
  %20 = and i64 %16, 4294967294
  br label %33

21:                                               ; preds = %33, %9
  %22 = phi i64 [ 0, %9 ], [ %51, %33 ]
  %23 = icmp eq i64 %17, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds x86_fp80, ptr %11, i64 %22
  %26 = load x86_fp80, ptr %25, align 16, !tbaa !275
  %27 = getelementptr inbounds x86_fp80, ptr %13, i64 %22
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !275
  %29 = fmul x86_fp80 %28, %3
  %30 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %26, x86_fp80 %29)
  %31 = getelementptr inbounds x86_fp80, ptr %15, i64 %22
  store x86_fp80 %30, ptr %31, align 16, !tbaa !275
  br label %32

32:                                               ; preds = %24, %21, %5
  ret void

33:                                               ; preds = %33, %19
  %34 = phi i64 [ 0, %19 ], [ %51, %33 ]
  %35 = phi i64 [ 0, %19 ], [ %52, %33 ]
  %36 = getelementptr inbounds x86_fp80, ptr %11, i64 %34
  %37 = load x86_fp80, ptr %36, align 16, !tbaa !275
  %38 = getelementptr inbounds x86_fp80, ptr %13, i64 %34
  %39 = load x86_fp80, ptr %38, align 16, !tbaa !275
  %40 = fmul x86_fp80 %39, %3
  %41 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %37, x86_fp80 %40)
  %42 = getelementptr inbounds x86_fp80, ptr %15, i64 %34
  store x86_fp80 %41, ptr %42, align 16, !tbaa !275
  %43 = or i64 %34, 1
  %44 = getelementptr inbounds x86_fp80, ptr %11, i64 %43
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !275
  %46 = getelementptr inbounds x86_fp80, ptr %13, i64 %43
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !275
  %48 = fmul x86_fp80 %47, %3
  %49 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %45, x86_fp80 %48)
  %50 = getelementptr inbounds x86_fp80, ptr %15, i64 %43
  store x86_fp80 %49, ptr %50, align 16, !tbaa !275
  %51 = add nuw nsw i64 %34, 2
  %52 = add i64 %35, 2
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %21, label %33
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE3equEeRKS1_eS3_eS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3, ptr noundef nonnull align 8 dereferenceable(88) %4, x86_fp80 noundef %5, ptr noundef nonnull align 8 dereferenceable(88) %6) local_unnamed_addr #9 comdat align 2 {
  %8 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !271
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.dealii::Vector.16", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !274
  %14 = getelementptr inbounds %"class.dealii::Vector.16", ptr %4, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !274
  %16 = getelementptr inbounds %"class.dealii::Vector.16", ptr %6, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !274
  %18 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !274
  %20 = zext i32 %9 to i64
  br label %22

21:                                               ; preds = %22, %7
  ret void

22:                                               ; preds = %11, %22
  %23 = phi i64 [ 0, %11 ], [ %34, %22 ]
  %24 = getelementptr inbounds x86_fp80, ptr %13, i64 %23
  %25 = load x86_fp80, ptr %24, align 16, !tbaa !275
  %26 = getelementptr inbounds x86_fp80, ptr %15, i64 %23
  %27 = load x86_fp80, ptr %26, align 16, !tbaa !275
  %28 = fmul x86_fp80 %27, %3
  %29 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %25, x86_fp80 %28)
  %30 = getelementptr inbounds x86_fp80, ptr %17, i64 %23
  %31 = load x86_fp80, ptr %30, align 16, !tbaa !275
  %32 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %5, x86_fp80 %31, x86_fp80 %29)
  %33 = getelementptr inbounds x86_fp80, ptr %19, i64 %23
  store x86_fp80 %32, ptr %33, align 16, !tbaa !275
  %34 = add nuw nsw i64 %23, 1
  %35 = icmp eq i64 %34, %20
  br i1 %35, label %21, label %22
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE5ratioERKS1_S3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext true)
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !271
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !274
  %15 = getelementptr inbounds %"class.dealii::Vector.16", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !274
  %17 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !274
  %19 = zext i32 %10 to i64
  %20 = and i64 %19, 1
  %21 = icmp eq i32 %10, 1
  br i1 %21, label %24, label %22

22:                                               ; preds = %12
  %23 = and i64 %19, 4294967294
  br label %35

24:                                               ; preds = %35, %12
  %25 = phi i64 [ 0, %12 ], [ %51, %35 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds x86_fp80, ptr %14, i64 %25
  %29 = load x86_fp80, ptr %28, align 16, !tbaa !275
  %30 = getelementptr inbounds x86_fp80, ptr %16, i64 %25
  %31 = load x86_fp80, ptr %30, align 16, !tbaa !275
  %32 = fdiv x86_fp80 %29, %31
  %33 = getelementptr inbounds x86_fp80, ptr %18, i64 %25
  store x86_fp80 %32, ptr %33, align 16, !tbaa !275
  br label %34

34:                                               ; preds = %27, %24, %3
  ret void

35:                                               ; preds = %35, %22
  %36 = phi i64 [ 0, %22 ], [ %51, %35 ]
  %37 = phi i64 [ 0, %22 ], [ %52, %35 ]
  %38 = getelementptr inbounds x86_fp80, ptr %14, i64 %36
  %39 = load x86_fp80, ptr %38, align 16, !tbaa !275
  %40 = getelementptr inbounds x86_fp80, ptr %16, i64 %36
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !275
  %42 = fdiv x86_fp80 %39, %41
  %43 = getelementptr inbounds x86_fp80, ptr %18, i64 %36
  store x86_fp80 %42, ptr %43, align 16, !tbaa !275
  %44 = or i64 %36, 1
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !275
  %47 = getelementptr inbounds x86_fp80, ptr %16, i64 %44
  %48 = load x86_fp80, ptr %47, align 16, !tbaa !275
  %49 = fdiv x86_fp80 %46, %48
  %50 = getelementptr inbounds x86_fp80, ptr %18, i64 %44
  store x86_fp80 %49, ptr %50, align 16, !tbaa !275
  %51 = add nuw nsw i64 %36, 2
  %52 = add i64 %37, 2
  %53 = icmp eq i64 %52, %23
  br i1 %53, label %24, label %35
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorIeE5printEPKc(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %8 = icmp eq ptr %1, null
  br i1 %8, label %9, label %22

9:                                                ; preds = %6, %9
  %10 = phi i64 [ %16, %9 ], [ 0, %6 ]
  %11 = load ptr, ptr %7, align 8, !tbaa !274
  %12 = getelementptr inbounds x86_fp80, ptr %11, i64 %10
  %13 = load x86_fp80, ptr %12, align 16, !tbaa !275
  %14 = fptrunc x86_fp80 %13 to double
  %15 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10, double noundef %14)
  %16 = add nuw nsw i64 %10, 1
  %17 = load i32, ptr %3, align 8, !tbaa !271
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %9, label %20

20:                                               ; preds = %22, %9, %2
  %21 = tail call i32 @putchar(i32 10)
  ret void

22:                                               ; preds = %6, %22
  %23 = phi i64 [ %28, %22 ], [ 0, %6 ]
  %24 = load ptr, ptr %7, align 8, !tbaa !274
  %25 = getelementptr inbounds x86_fp80, ptr %24, i64 %23
  %26 = load x86_fp80, ptr %25, align 16, !tbaa !275
  %27 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) %1, x86_fp80 noundef %26)
  %28 = add nuw nsw i64 %23, 1
  %29 = load i32, ptr %3, align 8, !tbaa !271
  %30 = zext i32 %29 to i64
  %31 = icmp ult i64 %28, %30
  br i1 %31, label %22, label %20
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorIeE5printERSojbb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = getelementptr i8, ptr %9, i64 -24
  %11 = load i64, ptr %10, align 8
  %12 = getelementptr inbounds i8, ptr %1, i64 %11
  %13 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 5
  %14 = load i32, ptr %13, align 8, !tbaa !144
  %15 = and i32 %14, 5
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.1, i32 noundef 784, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %18 unwind label %24

18:                                               ; preds = %17
  %19 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %19, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %20 unwind label %22

20:                                               ; preds = %18
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %21 unwind label %24

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %19) #24
  br label %155

24:                                               ; preds = %20, %17
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %155

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 3
  %28 = load i32, ptr %27, align 8, !tbaa !150
  %29 = zext i32 %2 to i64
  %30 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 1
  %31 = load i64, ptr %30, align 8, !tbaa !151
  store i64 %29, ptr %30, align 8, !tbaa !151
  %32 = load i64, ptr %10, align 8
  %33 = getelementptr inbounds i8, ptr %1, i64 %32
  %34 = getelementptr inbounds %"class.std::ios_base", ptr %33, i64 0, i32 1
  store i64 %29, ptr %34, align 8, !tbaa !151
  %35 = load i64, ptr %10, align 8
  %36 = getelementptr inbounds i8, ptr %1, i64 %35
  %37 = getelementptr inbounds %"class.std::ios_base", ptr %36, i64 0, i32 3
  %38 = load i32, ptr %37, align 8, !tbaa !152
  %39 = and i32 %38, -261
  %40 = select i1 %3, i32 256, i32 4
  %41 = or i32 %39, %40
  store i32 %41, ptr %37, align 8, !tbaa !152
  %42 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %43 = load i32, ptr %42, align 8, !tbaa !271
  %44 = icmp eq i32 %43, 0
  br i1 %4, label %48, label %45

45:                                               ; preds = %26
  br i1 %44, label %107, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  br label %73

48:                                               ; preds = %26
  br i1 %44, label %107, label %49

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  br label %51

51:                                               ; preds = %49, %68
  %52 = phi i64 [ 0, %49 ], [ %69, %68 ]
  %53 = load ptr, ptr %50, align 8, !tbaa !274
  %54 = getelementptr inbounds x86_fp80, ptr %53, i64 %52
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !275
  %56 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIeEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, x86_fp80 noundef %55)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6)
  store i8 32, ptr %6, align 1, !tbaa !153
  %57 = load ptr, ptr %56, align 8, !tbaa !5
  %58 = getelementptr i8, ptr %57, i64 -24
  %59 = load i64, ptr %58, align 8
  %60 = getelementptr inbounds i8, ptr %56, i64 %59
  %61 = getelementptr inbounds %"class.std::ios_base", ptr %60, i64 0, i32 2
  %62 = load i64, ptr %61, align 8, !tbaa !154
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %51
  %65 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %56, ptr noundef nonnull %6, i64 noundef 1)
  br label %68

66:                                               ; preds = %51
  %67 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %56, i8 noundef signext 32)
  br label %68

68:                                               ; preds = %64, %66
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6)
  %69 = add nuw nsw i64 %52, 1
  %70 = load i32, ptr %42, align 8, !tbaa !271
  %71 = zext i32 %70 to i64
  %72 = icmp ult i64 %69, %71
  br i1 %72, label %51, label %107

73:                                               ; preds = %46, %99
  %74 = phi i64 [ 0, %46 ], [ %103, %99 ]
  %75 = load ptr, ptr %47, align 8, !tbaa !274
  %76 = getelementptr inbounds x86_fp80, ptr %75, i64 %74
  %77 = load x86_fp80, ptr %76, align 16, !tbaa !275
  %78 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIeEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, x86_fp80 noundef %77)
  %79 = load ptr, ptr %78, align 8, !tbaa !5
  %80 = getelementptr i8, ptr %79, i64 -24
  %81 = load i64, ptr %80, align 8
  %82 = getelementptr inbounds i8, ptr %78, i64 %81
  %83 = getelementptr inbounds %"class.std::basic_ios", ptr %82, i64 0, i32 5
  %84 = load ptr, ptr %83, align 8, !tbaa !155
  %85 = icmp eq ptr %84, null
  br i1 %85, label %86, label %87

86:                                               ; preds = %73
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

87:                                               ; preds = %73
  %88 = getelementptr inbounds %"class.std::ctype", ptr %84, i64 0, i32 8
  %89 = load i8, ptr %88, align 8, !tbaa !158
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::ctype", ptr %84, i64 0, i32 9, i64 10
  %93 = load i8, ptr %92, align 1, !tbaa !153
  br label %99

94:                                               ; preds = %87
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %84)
  %95 = load ptr, ptr %84, align 8, !tbaa !5
  %96 = getelementptr inbounds ptr, ptr %95, i64 6
  %97 = load ptr, ptr %96, align 8
  %98 = tail call noundef signext i8 %97(ptr noundef nonnull align 8 dereferenceable(570) %84, i8 noundef signext 10)
  br label %99

99:                                               ; preds = %91, %94
  %100 = phi i8 [ %93, %91 ], [ %98, %94 ]
  %101 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %78, i8 noundef signext %100)
  %102 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %101)
  %103 = add nuw nsw i64 %74, 1
  %104 = load i32, ptr %42, align 8, !tbaa !271
  %105 = zext i32 %104 to i64
  %106 = icmp ult i64 %103, %105
  br i1 %106, label %73, label %107

107:                                              ; preds = %99, %68, %45, %48
  %108 = load ptr, ptr %1, align 8, !tbaa !5
  %109 = getelementptr i8, ptr %108, i64 -24
  %110 = load i64, ptr %109, align 8
  %111 = getelementptr inbounds i8, ptr %1, i64 %110
  %112 = getelementptr inbounds %"class.std::basic_ios", ptr %111, i64 0, i32 5
  %113 = load ptr, ptr %112, align 8, !tbaa !155
  %114 = icmp eq ptr %113, null
  br i1 %114, label %115, label %116

115:                                              ; preds = %107
  call void @_ZSt16__throw_bad_castv() #26
  unreachable

116:                                              ; preds = %107
  %117 = getelementptr inbounds %"class.std::ctype", ptr %113, i64 0, i32 8
  %118 = load i8, ptr %117, align 8, !tbaa !158
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.std::ctype", ptr %113, i64 0, i32 9, i64 10
  %122 = load i8, ptr %121, align 1, !tbaa !153
  br label %128

123:                                              ; preds = %116
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %113)
  %124 = load ptr, ptr %113, align 8, !tbaa !5
  %125 = getelementptr inbounds ptr, ptr %124, i64 6
  %126 = load ptr, ptr %125, align 8
  %127 = call noundef signext i8 %126(ptr noundef nonnull align 8 dereferenceable(570) %113, i8 noundef signext 10)
  br label %128

128:                                              ; preds = %120, %123
  %129 = phi i8 [ %122, %120 ], [ %127, %123 ]
  %130 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %129)
  %131 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %130)
  %132 = load ptr, ptr %1, align 8, !tbaa !5
  %133 = getelementptr i8, ptr %132, i64 -24
  %134 = load i64, ptr %133, align 8
  %135 = getelementptr inbounds i8, ptr %1, i64 %134
  %136 = getelementptr inbounds %"class.std::ios_base", ptr %135, i64 0, i32 5
  %137 = load i32, ptr %136, align 8, !tbaa !144
  %138 = and i32 %137, 5
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %149, label %140

140:                                              ; preds = %128
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %8, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %8)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %8, ptr noundef nonnull @.str.1, i32 noundef 803, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %141 unwind label %147

141:                                              ; preds = %140
  %142 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %142, ptr noundef nonnull align 8 dereferenceable(60) %8)
          to label %143 unwind label %145

143:                                              ; preds = %141
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %142, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %142, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %144 unwind label %147

144:                                              ; preds = %143
  unreachable

145:                                              ; preds = %141
  %146 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %142) #24
  br label %155

147:                                              ; preds = %143, %140
  %148 = landingpad { ptr, i32 }
          cleanup
  br label %155

149:                                              ; preds = %128
  %150 = getelementptr inbounds %"class.std::ios_base", ptr %135, i64 0, i32 3
  store i32 %28, ptr %150, align 8, !tbaa !150
  %151 = load i64, ptr %133, align 8
  %152 = getelementptr inbounds i8, ptr %1, i64 %151
  %153 = and i64 %31, 4294967295
  %154 = getelementptr inbounds %"class.std::ios_base", ptr %152, i64 0, i32 1
  store i64 %153, ptr %154, align 8, !tbaa !151
  ret void

155:                                              ; preds = %147, %145, %24, %22
  %156 = phi ptr [ %7, %22 ], [ %7, %24 ], [ %8, %145 ], [ %8, %147 ]
  %157 = phi { ptr, i32 } [ %23, %22 ], [ %25, %24 ], [ %146, %145 ], [ %148, %147 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %156) #24
  resume { ptr, i32 } %157
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorIeE11block_writeERSo(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = load ptr, ptr %1, align 8, !tbaa !5
  %8 = getelementptr i8, ptr %7, i64 -24
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = getelementptr inbounds %"class.std::ios_base", ptr %10, i64 0, i32 5
  %12 = load i32, ptr %11, align 8, !tbaa !144
  %13 = and i32 %12, 5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.1, i32 noundef 814, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %16 unwind label %22

16:                                               ; preds = %15
  %17 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %17, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %18 unwind label %20

18:                                               ; preds = %16
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %17, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %19 unwind label %22

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %16
  %21 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %17) #24
  br label %24

22:                                               ; preds = %18, %15
  %23 = landingpad { ptr, i32 }
          cleanup
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi { ptr, i32 } [ %23, %22 ], [ %21, %20 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  br label %61

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %28 = load i32, ptr %27, align 8, !tbaa !271
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #24
  %29 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) @.str.5, i32 noundef %28) #24
  %30 = call i64 @strlen(ptr nonnull dereferenceable(1) %4)
  %31 = getelementptr inbounds i8, ptr %4, i64 %30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(3) %31, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %32 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %4) #27
  %33 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %4, i64 noundef %32)
  %34 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !274
  %36 = load i32, ptr %27, align 8, !tbaa !271
  %37 = zext i32 %36 to i64
  %38 = shl nuw nsw i64 %37, 4
  %39 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef %35, i64 noundef %38)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #24
  store i8 93, ptr %5, align 1, !tbaa !153
  %40 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %5, i64 noundef 1)
  %41 = load ptr, ptr %1, align 8, !tbaa !5
  %42 = getelementptr i8, ptr %41, i64 -24
  %43 = load i64, ptr %42, align 8
  %44 = getelementptr inbounds i8, ptr %1, i64 %43
  %45 = getelementptr inbounds %"class.std::ios_base", ptr %44, i64 0, i32 5
  %46 = load i32, ptr %45, align 8, !tbaa !144
  %47 = and i32 %46, 5
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %26
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.1, i32 noundef 837, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %50 unwind label %56

50:                                               ; preds = %49
  %51 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %51, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %52 unwind label %54

52:                                               ; preds = %50
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %51, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %51, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %53 unwind label %56

53:                                               ; preds = %52
  unreachable

54:                                               ; preds = %50
  %55 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %51) #24
  br label %58

56:                                               ; preds = %52, %49
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi { ptr, i32 } [ %57, %56 ], [ %55, %54 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  br label %61

60:                                               ; preds = %26
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  ret void

61:                                               ; preds = %58, %24
  %62 = phi { ptr, i32 } [ %59, %58 ], [ %25, %24 ]
  resume { ptr, i32 } %62
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE10block_readERSi(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = load ptr, ptr %1, align 8, !tbaa !5
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 %10
  %12 = getelementptr inbounds %"class.std::ios_base", ptr %11, i64 0, i32 5
  %13 = load i32, ptr %12, align 8, !tbaa !144
  %14 = and i32 %13, 5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.1, i32 noundef 845, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.4)
          to label %17 unwind label %23

17:                                               ; preds = %16
  %18 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %18, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %19 unwind label %21

19:                                               ; preds = %17
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %18, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %18, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %20 unwind label %23

20:                                               ; preds = %19
  unreachable

21:                                               ; preds = %17
  %22 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %18) #24
  br label %25

23:                                               ; preds = %19, %16
  %24 = landingpad { ptr, i32 }
          cleanup
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi { ptr, i32 } [ %24, %23 ], [ %22, %21 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  br label %70

27:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #24
  %28 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi7getlineEPclc(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %4, i64 noundef 16, i8 noundef signext 10)
  %29 = call i64 @__isoc23_strtol(ptr noundef nonnull %4, ptr noundef null, i32 noundef 10) #24
  %30 = trunc i64 %29 to i32
  %31 = load ptr, ptr %0, align 8, !tbaa !5
  %32 = getelementptr inbounds ptr, ptr %31, i64 2
  %33 = load ptr, ptr %32, align 8
  call void %33(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %30, i1 noundef zeroext true)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #24
  %34 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %5, i64 noundef 1)
  %35 = load i8, ptr %5, align 1, !tbaa !153
  %36 = icmp eq i8 %35, 91
  br i1 %36, label %46, label %37

37:                                               ; preds = %27
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.1, i32 noundef 862, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.4)
          to label %38 unwind label %44

38:                                               ; preds = %37
  %39 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %39, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %40 unwind label %42

40:                                               ; preds = %38
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %39, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %39, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %41 unwind label %44

41:                                               ; preds = %40
  unreachable

42:                                               ; preds = %38
  %43 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %39) #24
  br label %67

44:                                               ; preds = %40, %37
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %67

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !274
  %49 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %50 = load i32, ptr %49, align 8, !tbaa !271
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 4
  %53 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef %48, i64 noundef %52)
  %54 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %5, i64 noundef 1)
  %55 = load i8, ptr %5, align 1, !tbaa !153
  %56 = icmp eq i8 %55, 93
  br i1 %56, label %66, label %57

57:                                               ; preds = %46
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.1, i32 noundef 870, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.4)
          to label %58 unwind label %64

58:                                               ; preds = %57
  %59 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %59, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %60 unwind label %62

60:                                               ; preds = %58
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %59, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %59, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %61 unwind label %64

61:                                               ; preds = %60
  unreachable

62:                                               ; preds = %58
  %63 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %59) #24
  br label %67

64:                                               ; preds = %60, %57
  %65 = landingpad { ptr, i32 }
          cleanup
  br label %67

66:                                               ; preds = %46
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  ret void

67:                                               ; preds = %64, %62, %44, %42
  %68 = phi ptr [ %6, %42 ], [ %6, %44 ], [ %7, %62 ], [ %7, %64 ]
  %69 = phi { ptr, i32 } [ %43, %42 ], [ %45, %44 ], [ %63, %62 ], [ %65, %64 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %68) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  br label %70

70:                                               ; preds = %67, %25
  %71 = phi { ptr, i32 } [ %69, %67 ], [ %26, %25 ]
  resume { ptr, i32 } %71
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii6VectorIeE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !273
  %4 = shl i32 %3, 4
  %5 = add i32 %4, 88
  ret i32 %5
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIdEeqIdEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = zext i32 %4 to i64
  %12 = load double, ptr %8, align 8, !tbaa !26
  %13 = load double, ptr %10, align 8, !tbaa !26
  %14 = fcmp une double %12, %13
  br i1 %14, label %27, label %15

15:                                               ; preds = %6, %19
  %16 = phi i64 [ %17, %19 ], [ 0, %6 ]
  %17 = add nuw nsw i64 %16, 1
  %18 = icmp eq i64 %17, %11
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds double, ptr %8, i64 %17
  %21 = load double, ptr %20, align 8, !tbaa !26
  %22 = getelementptr inbounds double, ptr %10, i64 %17
  %23 = load double, ptr %22, align 8, !tbaa !26
  %24 = fcmp une double %21, %23
  br i1 %24, label %25, label %15

25:                                               ; preds = %15, %19
  %26 = icmp uge i64 %17, %11
  br label %27

27:                                               ; preds = %25, %6, %2
  %28 = phi i1 [ true, %2 ], [ false, %6 ], [ %26, %25 ]
  ret i1 %28
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorIdEmlIdEEdRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq ptr %0, %1
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  %6 = icmp eq i32 %5, 0
  br i1 %3, label %18, label %7

7:                                                ; preds = %2
  br i1 %6, label %116, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !24
  %13 = zext i32 %5 to i64
  %14 = and i64 %13, 3
  %15 = icmp ult i32 %5, 4
  br i1 %15, label %99, label %16

16:                                               ; preds = %8
  %17 = and i64 %13, 4294967292
  br label %53

18:                                               ; preds = %2
  br i1 %6, label %116, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !24
  %22 = zext i32 %5 to i64
  %23 = and i64 %22, 3
  %24 = icmp ult i32 %5, 4
  br i1 %24, label %83, label %25

25:                                               ; preds = %19
  %26 = and i64 %22, 4294967292
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ 0, %25 ], [ %50, %27 ]
  %29 = phi double [ 0.000000e+00, %25 ], [ %49, %27 ]
  %30 = phi i64 [ 0, %25 ], [ %51, %27 ]
  %31 = getelementptr inbounds double, ptr %21, i64 %28
  %32 = load double, ptr %31, align 8, !tbaa !26
  %33 = fmul double %32, %32
  %34 = fadd double %29, %33
  %35 = or i64 %28, 1
  %36 = getelementptr inbounds double, ptr %21, i64 %35
  %37 = load double, ptr %36, align 8, !tbaa !26
  %38 = fmul double %37, %37
  %39 = fadd double %34, %38
  %40 = or i64 %28, 2
  %41 = getelementptr inbounds double, ptr %21, i64 %40
  %42 = load double, ptr %41, align 8, !tbaa !26
  %43 = fmul double %42, %42
  %44 = fadd double %39, %43
  %45 = or i64 %28, 3
  %46 = getelementptr inbounds double, ptr %21, i64 %45
  %47 = load double, ptr %46, align 8, !tbaa !26
  %48 = fmul double %47, %47
  %49 = fadd double %44, %48
  %50 = add nuw nsw i64 %28, 4
  %51 = add i64 %30, 4
  %52 = icmp eq i64 %51, %26
  br i1 %52, label %83, label %27

53:                                               ; preds = %53, %16
  %54 = phi i64 [ 0, %16 ], [ %80, %53 ]
  %55 = phi double [ 0.000000e+00, %16 ], [ %79, %53 ]
  %56 = phi i64 [ 0, %16 ], [ %81, %53 ]
  %57 = getelementptr inbounds double, ptr %10, i64 %54
  %58 = load double, ptr %57, align 8, !tbaa !26
  %59 = getelementptr inbounds double, ptr %12, i64 %54
  %60 = load double, ptr %59, align 8, !tbaa !26
  %61 = tail call double @llvm.fmuladd.f64(double %58, double %60, double %55)
  %62 = or i64 %54, 1
  %63 = getelementptr inbounds double, ptr %10, i64 %62
  %64 = load double, ptr %63, align 8, !tbaa !26
  %65 = getelementptr inbounds double, ptr %12, i64 %62
  %66 = load double, ptr %65, align 8, !tbaa !26
  %67 = tail call double @llvm.fmuladd.f64(double %64, double %66, double %61)
  %68 = or i64 %54, 2
  %69 = getelementptr inbounds double, ptr %10, i64 %68
  %70 = load double, ptr %69, align 8, !tbaa !26
  %71 = getelementptr inbounds double, ptr %12, i64 %68
  %72 = load double, ptr %71, align 8, !tbaa !26
  %73 = tail call double @llvm.fmuladd.f64(double %70, double %72, double %67)
  %74 = or i64 %54, 3
  %75 = getelementptr inbounds double, ptr %10, i64 %74
  %76 = load double, ptr %75, align 8, !tbaa !26
  %77 = getelementptr inbounds double, ptr %12, i64 %74
  %78 = load double, ptr %77, align 8, !tbaa !26
  %79 = tail call double @llvm.fmuladd.f64(double %76, double %78, double %73)
  %80 = add nuw nsw i64 %54, 4
  %81 = add i64 %56, 4
  %82 = icmp eq i64 %81, %17
  br i1 %82, label %99, label %53

83:                                               ; preds = %27, %19
  %84 = phi double [ undef, %19 ], [ %49, %27 ]
  %85 = phi i64 [ 0, %19 ], [ %50, %27 ]
  %86 = phi double [ 0.000000e+00, %19 ], [ %49, %27 ]
  %87 = icmp eq i64 %23, 0
  br i1 %87, label %116, label %88

88:                                               ; preds = %83, %88
  %89 = phi i64 [ %96, %88 ], [ %85, %83 ]
  %90 = phi double [ %95, %88 ], [ %86, %83 ]
  %91 = phi i64 [ %97, %88 ], [ 0, %83 ]
  %92 = getelementptr inbounds double, ptr %21, i64 %89
  %93 = load double, ptr %92, align 8, !tbaa !26
  %94 = fmul double %93, %93
  %95 = fadd double %90, %94
  %96 = add nuw nsw i64 %89, 1
  %97 = add i64 %91, 1
  %98 = icmp eq i64 %97, %23
  br i1 %98, label %116, label %88, !llvm.loop !285

99:                                               ; preds = %53, %8
  %100 = phi double [ undef, %8 ], [ %79, %53 ]
  %101 = phi i64 [ 0, %8 ], [ %80, %53 ]
  %102 = phi double [ 0.000000e+00, %8 ], [ %79, %53 ]
  %103 = icmp eq i64 %14, 0
  br i1 %103, label %116, label %104

104:                                              ; preds = %99, %104
  %105 = phi i64 [ %113, %104 ], [ %101, %99 ]
  %106 = phi double [ %112, %104 ], [ %102, %99 ]
  %107 = phi i64 [ %114, %104 ], [ 0, %99 ]
  %108 = getelementptr inbounds double, ptr %10, i64 %105
  %109 = load double, ptr %108, align 8, !tbaa !26
  %110 = getelementptr inbounds double, ptr %12, i64 %105
  %111 = load double, ptr %110, align 8, !tbaa !26
  %112 = tail call double @llvm.fmuladd.f64(double %109, double %111, double %106)
  %113 = add nuw nsw i64 %105, 1
  %114 = add i64 %107, 1
  %115 = icmp eq i64 %114, %14
  br i1 %115, label %116, label %104, !llvm.loop !286

116:                                              ; preds = %99, %104, %83, %88, %7, %18
  %117 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %7 ], [ %84, %83 ], [ %95, %88 ], [ %100, %99 ], [ %112, %104 ]
  ret double %117
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE6reinitIdEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE3equIdEEvdRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %70, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !24
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !24
  %12 = zext i32 %5 to i64
  %13 = icmp ult i32 %5, 16
  %14 = ptrtoint ptr %11 to i64
  %15 = ptrtoint ptr %9 to i64
  %16 = sub i64 %14, %15
  %17 = icmp ult i64 %16, 128
  %18 = select i1 %13, i1 true, i1 %17
  br i1 %18, label %51, label %19

19:                                               ; preds = %7
  %20 = and i64 %12, 4294967280
  %21 = insertelement <4 x double> poison, double %1, i64 0
  %22 = shufflevector <4 x double> %21, <4 x double> poison, <4 x i32> zeroinitializer
  %23 = insertelement <4 x double> poison, double %1, i64 0
  %24 = shufflevector <4 x double> %23, <4 x double> poison, <4 x i32> zeroinitializer
  %25 = insertelement <4 x double> poison, double %1, i64 0
  %26 = shufflevector <4 x double> %25, <4 x double> poison, <4 x i32> zeroinitializer
  %27 = insertelement <4 x double> poison, double %1, i64 0
  %28 = shufflevector <4 x double> %27, <4 x double> poison, <4 x i32> zeroinitializer
  br label %29

29:                                               ; preds = %29, %19
  %30 = phi i64 [ 0, %19 ], [ %47, %29 ]
  %31 = getelementptr inbounds double, ptr %9, i64 %30
  %32 = load <4 x double>, ptr %31, align 8, !tbaa !26
  %33 = getelementptr inbounds double, ptr %31, i64 4
  %34 = load <4 x double>, ptr %33, align 8, !tbaa !26
  %35 = getelementptr inbounds double, ptr %31, i64 8
  %36 = load <4 x double>, ptr %35, align 8, !tbaa !26
  %37 = getelementptr inbounds double, ptr %31, i64 12
  %38 = load <4 x double>, ptr %37, align 8, !tbaa !26
  %39 = fmul <4 x double> %32, %22
  %40 = fmul <4 x double> %34, %24
  %41 = fmul <4 x double> %36, %26
  %42 = fmul <4 x double> %38, %28
  %43 = getelementptr inbounds double, ptr %11, i64 %30
  store <4 x double> %39, ptr %43, align 8, !tbaa !26
  %44 = getelementptr inbounds double, ptr %43, i64 4
  store <4 x double> %40, ptr %44, align 8, !tbaa !26
  %45 = getelementptr inbounds double, ptr %43, i64 8
  store <4 x double> %41, ptr %45, align 8, !tbaa !26
  %46 = getelementptr inbounds double, ptr %43, i64 12
  store <4 x double> %42, ptr %46, align 8, !tbaa !26
  %47 = add nuw i64 %30, 16
  %48 = icmp eq i64 %47, %20
  br i1 %48, label %49, label %29, !llvm.loop !287

49:                                               ; preds = %29
  %50 = icmp eq i64 %20, %12
  br i1 %50, label %70, label %51

51:                                               ; preds = %7, %49
  %52 = phi i64 [ 0, %7 ], [ %20, %49 ]
  %53 = xor i64 %52, -1
  %54 = add nsw i64 %53, %12
  %55 = and i64 %12, 3
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %51, %57
  %58 = phi i64 [ %64, %57 ], [ %52, %51 ]
  %59 = phi i64 [ %65, %57 ], [ 0, %51 ]
  %60 = getelementptr inbounds double, ptr %9, i64 %58
  %61 = load double, ptr %60, align 8, !tbaa !26
  %62 = fmul double %61, %1
  %63 = getelementptr inbounds double, ptr %11, i64 %58
  store double %62, ptr %63, align 8, !tbaa !26
  %64 = add nuw nsw i64 %58, 1
  %65 = add i64 %59, 1
  %66 = icmp eq i64 %65, %55
  br i1 %66, label %67, label %57, !llvm.loop !288

67:                                               ; preds = %57, %51
  %68 = phi i64 [ %52, %51 ], [ %64, %57 ]
  %69 = icmp ult i64 %54, 3
  br i1 %69, label %70, label %71

70:                                               ; preds = %67, %71, %49, %3
  ret void

71:                                               ; preds = %67, %71
  %72 = phi i64 [ %92, %71 ], [ %68, %67 ]
  %73 = getelementptr inbounds double, ptr %9, i64 %72
  %74 = load double, ptr %73, align 8, !tbaa !26
  %75 = fmul double %74, %1
  %76 = getelementptr inbounds double, ptr %11, i64 %72
  store double %75, ptr %76, align 8, !tbaa !26
  %77 = add nuw nsw i64 %72, 1
  %78 = getelementptr inbounds double, ptr %9, i64 %77
  %79 = load double, ptr %78, align 8, !tbaa !26
  %80 = fmul double %79, %1
  %81 = getelementptr inbounds double, ptr %11, i64 %77
  store double %80, ptr %81, align 8, !tbaa !26
  %82 = add nuw nsw i64 %72, 2
  %83 = getelementptr inbounds double, ptr %9, i64 %82
  %84 = load double, ptr %83, align 8, !tbaa !26
  %85 = fmul double %84, %1
  %86 = getelementptr inbounds double, ptr %11, i64 %82
  store double %85, ptr %86, align 8, !tbaa !26
  %87 = add nuw nsw i64 %72, 3
  %88 = getelementptr inbounds double, ptr %9, i64 %87
  %89 = load double, ptr %88, align 8, !tbaa !26
  %90 = fmul double %89, %1
  %91 = getelementptr inbounds double, ptr %11, i64 %87
  store double %90, ptr %91, align 8, !tbaa !26
  %92 = add nuw nsw i64 %72, 4
  %93 = icmp eq i64 %92, %12
  br i1 %93, label %70, label %71, !llvm.loop !289
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE5scaleIdEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = zext i32 %4 to i64
  %12 = icmp ult i32 %4, 16
  br i1 %12, label %48, label %13

13:                                               ; preds = %6
  %14 = shl nuw nsw i64 %11, 3
  %15 = getelementptr i8, ptr %10, i64 %14
  %16 = getelementptr i8, ptr %8, i64 %14
  %17 = icmp ult ptr %10, %16
  %18 = icmp ult ptr %8, %15
  %19 = and i1 %17, %18
  br i1 %19, label %48, label %20

20:                                               ; preds = %13
  %21 = and i64 %11, 4294967280
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %44, %22 ]
  %24 = getelementptr inbounds double, ptr %8, i64 %23
  %25 = load <4 x double>, ptr %24, align 8, !tbaa !26, !alias.scope !290
  %26 = getelementptr inbounds double, ptr %24, i64 4
  %27 = load <4 x double>, ptr %26, align 8, !tbaa !26, !alias.scope !290
  %28 = getelementptr inbounds double, ptr %24, i64 8
  %29 = load <4 x double>, ptr %28, align 8, !tbaa !26, !alias.scope !290
  %30 = getelementptr inbounds double, ptr %24, i64 12
  %31 = load <4 x double>, ptr %30, align 8, !tbaa !26, !alias.scope !290
  %32 = getelementptr inbounds double, ptr %10, i64 %23
  %33 = load <4 x double>, ptr %32, align 8, !tbaa !26, !alias.scope !293, !noalias !290
  %34 = getelementptr inbounds double, ptr %32, i64 4
  %35 = load <4 x double>, ptr %34, align 8, !tbaa !26, !alias.scope !293, !noalias !290
  %36 = getelementptr inbounds double, ptr %32, i64 8
  %37 = load <4 x double>, ptr %36, align 8, !tbaa !26, !alias.scope !293, !noalias !290
  %38 = getelementptr inbounds double, ptr %32, i64 12
  %39 = load <4 x double>, ptr %38, align 8, !tbaa !26, !alias.scope !293, !noalias !290
  %40 = fmul <4 x double> %25, %33
  %41 = fmul <4 x double> %27, %35
  %42 = fmul <4 x double> %29, %37
  %43 = fmul <4 x double> %31, %39
  store <4 x double> %40, ptr %32, align 8, !tbaa !26, !alias.scope !293, !noalias !290
  store <4 x double> %41, ptr %34, align 8, !tbaa !26, !alias.scope !293, !noalias !290
  store <4 x double> %42, ptr %36, align 8, !tbaa !26, !alias.scope !293, !noalias !290
  store <4 x double> %43, ptr %38, align 8, !tbaa !26, !alias.scope !293, !noalias !290
  %44 = add nuw i64 %23, 16
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %22, !llvm.loop !295

46:                                               ; preds = %22
  %47 = icmp eq i64 %21, %11
  br i1 %47, label %68, label %48

48:                                               ; preds = %13, %6, %46
  %49 = phi i64 [ 0, %13 ], [ 0, %6 ], [ %21, %46 ]
  %50 = xor i64 %49, -1
  %51 = add nsw i64 %50, %11
  %52 = and i64 %11, 3
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %48, %54
  %55 = phi i64 [ %62, %54 ], [ %49, %48 ]
  %56 = phi i64 [ %63, %54 ], [ 0, %48 ]
  %57 = getelementptr inbounds double, ptr %8, i64 %55
  %58 = load double, ptr %57, align 8, !tbaa !26
  %59 = getelementptr inbounds double, ptr %10, i64 %55
  %60 = load double, ptr %59, align 8, !tbaa !26
  %61 = fmul double %58, %60
  store double %61, ptr %59, align 8, !tbaa !26
  %62 = add nuw nsw i64 %55, 1
  %63 = add i64 %56, 1
  %64 = icmp eq i64 %63, %52
  br i1 %64, label %65, label %54, !llvm.loop !296

65:                                               ; preds = %54, %48
  %66 = phi i64 [ %49, %48 ], [ %62, %54 ]
  %67 = icmp ult i64 %51, 3
  br i1 %67, label %68, label %69

68:                                               ; preds = %65, %69, %46, %2
  ret void

69:                                               ; preds = %65, %69
  %70 = phi i64 [ %94, %69 ], [ %66, %65 ]
  %71 = getelementptr inbounds double, ptr %8, i64 %70
  %72 = load double, ptr %71, align 8, !tbaa !26
  %73 = getelementptr inbounds double, ptr %10, i64 %70
  %74 = load double, ptr %73, align 8, !tbaa !26
  %75 = fmul double %72, %74
  store double %75, ptr %73, align 8, !tbaa !26
  %76 = add nuw nsw i64 %70, 1
  %77 = getelementptr inbounds double, ptr %8, i64 %76
  %78 = load double, ptr %77, align 8, !tbaa !26
  %79 = getelementptr inbounds double, ptr %10, i64 %76
  %80 = load double, ptr %79, align 8, !tbaa !26
  %81 = fmul double %78, %80
  store double %81, ptr %79, align 8, !tbaa !26
  %82 = add nuw nsw i64 %70, 2
  %83 = getelementptr inbounds double, ptr %8, i64 %82
  %84 = load double, ptr %83, align 8, !tbaa !26
  %85 = getelementptr inbounds double, ptr %10, i64 %82
  %86 = load double, ptr %85, align 8, !tbaa !26
  %87 = fmul double %84, %86
  store double %87, ptr %85, align 8, !tbaa !26
  %88 = add nuw nsw i64 %70, 3
  %89 = getelementptr inbounds double, ptr %8, i64 %88
  %90 = load double, ptr %89, align 8, !tbaa !26
  %91 = getelementptr inbounds double, ptr %10, i64 %88
  %92 = load double, ptr %91, align 8, !tbaa !26
  %93 = fmul double %90, %92
  store double %93, ptr %91, align 8, !tbaa !26
  %94 = add nuw nsw i64 %70, 4
  %95 = icmp eq i64 %94, %11
  br i1 %95, label %68, label %69, !llvm.loop !297
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIdEeqIfEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %11 = zext i32 %4 to i64
  %12 = load double, ptr %8, align 8, !tbaa !26
  %13 = load float, ptr %10, align 4, !tbaa !165
  %14 = fpext float %13 to double
  %15 = fcmp une double %12, %14
  br i1 %15, label %29, label %16

16:                                               ; preds = %6, %20
  %17 = phi i64 [ %18, %20 ], [ 0, %6 ]
  %18 = add nuw nsw i64 %17, 1
  %19 = icmp eq i64 %18, %11
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds double, ptr %8, i64 %18
  %22 = load double, ptr %21, align 8, !tbaa !26
  %23 = getelementptr inbounds float, ptr %10, i64 %18
  %24 = load float, ptr %23, align 4, !tbaa !165
  %25 = fpext float %24 to double
  %26 = fcmp une double %22, %25
  br i1 %26, label %27, label %16

27:                                               ; preds = %16, %20
  %28 = icmp uge i64 %18, %11
  br label %29

29:                                               ; preds = %27, %6, %2
  %30 = phi i1 [ true, %2 ], [ false, %6 ], [ %28, %27 ]
  ret i1 %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorIdEmlIfEEdRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %11 = zext i32 %4 to i64
  %12 = and i64 %11, 3
  %13 = icmp ult i32 %4, 4
  br i1 %13, label %50, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, 4294967292
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %47, %16 ]
  %18 = phi double [ 0.000000e+00, %14 ], [ %46, %16 ]
  %19 = phi i64 [ 0, %14 ], [ %48, %16 ]
  %20 = getelementptr inbounds double, ptr %8, i64 %17
  %21 = load double, ptr %20, align 8, !tbaa !26
  %22 = getelementptr inbounds float, ptr %10, i64 %17
  %23 = load float, ptr %22, align 4, !tbaa !165
  %24 = fpext float %23 to double
  %25 = tail call double @llvm.fmuladd.f64(double %21, double %24, double %18)
  %26 = or i64 %17, 1
  %27 = getelementptr inbounds double, ptr %8, i64 %26
  %28 = load double, ptr %27, align 8, !tbaa !26
  %29 = getelementptr inbounds float, ptr %10, i64 %26
  %30 = load float, ptr %29, align 4, !tbaa !165
  %31 = fpext float %30 to double
  %32 = tail call double @llvm.fmuladd.f64(double %28, double %31, double %25)
  %33 = or i64 %17, 2
  %34 = getelementptr inbounds double, ptr %8, i64 %33
  %35 = load double, ptr %34, align 8, !tbaa !26
  %36 = getelementptr inbounds float, ptr %10, i64 %33
  %37 = load float, ptr %36, align 4, !tbaa !165
  %38 = fpext float %37 to double
  %39 = tail call double @llvm.fmuladd.f64(double %35, double %38, double %32)
  %40 = or i64 %17, 3
  %41 = getelementptr inbounds double, ptr %8, i64 %40
  %42 = load double, ptr %41, align 8, !tbaa !26
  %43 = getelementptr inbounds float, ptr %10, i64 %40
  %44 = load float, ptr %43, align 4, !tbaa !165
  %45 = fpext float %44 to double
  %46 = tail call double @llvm.fmuladd.f64(double %42, double %45, double %39)
  %47 = add nuw nsw i64 %17, 4
  %48 = add i64 %19, 4
  %49 = icmp eq i64 %48, %15
  br i1 %49, label %50, label %16

50:                                               ; preds = %16, %6
  %51 = phi double [ undef, %6 ], [ %46, %16 ]
  %52 = phi i64 [ 0, %6 ], [ %47, %16 ]
  %53 = phi double [ 0.000000e+00, %6 ], [ %46, %16 ]
  %54 = icmp eq i64 %12, 0
  br i1 %54, label %68, label %55

55:                                               ; preds = %50, %55
  %56 = phi i64 [ %65, %55 ], [ %52, %50 ]
  %57 = phi double [ %64, %55 ], [ %53, %50 ]
  %58 = phi i64 [ %66, %55 ], [ 0, %50 ]
  %59 = getelementptr inbounds double, ptr %8, i64 %56
  %60 = load double, ptr %59, align 8, !tbaa !26
  %61 = getelementptr inbounds float, ptr %10, i64 %56
  %62 = load float, ptr %61, align 4, !tbaa !165
  %63 = fpext float %62 to double
  %64 = tail call double @llvm.fmuladd.f64(double %60, double %63, double %57)
  %65 = add nuw nsw i64 %56, 1
  %66 = add i64 %58, 1
  %67 = icmp eq i64 %66, %12
  br i1 %67, label %68, label %55, !llvm.loop !298

68:                                               ; preds = %50, %55, %2
  %69 = phi double [ 0.000000e+00, %2 ], [ %51, %50 ], [ %64, %55 ]
  ret double %69
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE6reinitIfEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE3equIfEEvdRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.8", ptr %2, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !164
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !24
  %12 = zext i32 %5 to i64
  %13 = icmp ult i32 %5, 16
  br i1 %13, label %50, label %14

14:                                               ; preds = %7
  %15 = and i64 %12, 4294967280
  %16 = insertelement <4 x double> poison, double %1, i64 0
  %17 = shufflevector <4 x double> %16, <4 x double> poison, <4 x i32> zeroinitializer
  %18 = insertelement <4 x double> poison, double %1, i64 0
  %19 = shufflevector <4 x double> %18, <4 x double> poison, <4 x i32> zeroinitializer
  %20 = insertelement <4 x double> poison, double %1, i64 0
  %21 = shufflevector <4 x double> %20, <4 x double> poison, <4 x i32> zeroinitializer
  %22 = insertelement <4 x double> poison, double %1, i64 0
  %23 = shufflevector <4 x double> %22, <4 x double> poison, <4 x i32> zeroinitializer
  br label %24

24:                                               ; preds = %24, %14
  %25 = phi i64 [ 0, %14 ], [ %46, %24 ]
  %26 = getelementptr inbounds float, ptr %9, i64 %25
  %27 = load <4 x float>, ptr %26, align 4, !tbaa !165
  %28 = getelementptr inbounds float, ptr %26, i64 4
  %29 = load <4 x float>, ptr %28, align 4, !tbaa !165
  %30 = getelementptr inbounds float, ptr %26, i64 8
  %31 = load <4 x float>, ptr %30, align 4, !tbaa !165
  %32 = getelementptr inbounds float, ptr %26, i64 12
  %33 = load <4 x float>, ptr %32, align 4, !tbaa !165
  %34 = fpext <4 x float> %27 to <4 x double>
  %35 = fpext <4 x float> %29 to <4 x double>
  %36 = fpext <4 x float> %31 to <4 x double>
  %37 = fpext <4 x float> %33 to <4 x double>
  %38 = fmul <4 x double> %17, %34
  %39 = fmul <4 x double> %19, %35
  %40 = fmul <4 x double> %21, %36
  %41 = fmul <4 x double> %23, %37
  %42 = getelementptr inbounds double, ptr %11, i64 %25
  store <4 x double> %38, ptr %42, align 8, !tbaa !26
  %43 = getelementptr inbounds double, ptr %42, i64 4
  store <4 x double> %39, ptr %43, align 8, !tbaa !26
  %44 = getelementptr inbounds double, ptr %42, i64 8
  store <4 x double> %40, ptr %44, align 8, !tbaa !26
  %45 = getelementptr inbounds double, ptr %42, i64 12
  store <4 x double> %41, ptr %45, align 8, !tbaa !26
  %46 = add nuw i64 %25, 16
  %47 = icmp eq i64 %46, %15
  br i1 %47, label %48, label %24, !llvm.loop !299

48:                                               ; preds = %24
  %49 = icmp eq i64 %15, %12
  br i1 %49, label %52, label %50

50:                                               ; preds = %7, %48
  %51 = phi i64 [ 0, %7 ], [ %15, %48 ]
  br label %53

52:                                               ; preds = %53, %48, %3
  ret void

53:                                               ; preds = %50, %53
  %54 = phi i64 [ %60, %53 ], [ %51, %50 ]
  %55 = getelementptr inbounds float, ptr %9, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !165
  %57 = fpext float %56 to double
  %58 = fmul double %57, %1
  %59 = getelementptr inbounds double, ptr %11, i64 %54
  store double %58, ptr %59, align 8, !tbaa !26
  %60 = add nuw nsw i64 %54, 1
  %61 = icmp eq i64 %60, %12
  br i1 %61, label %52, label %53, !llvm.loop !300
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE5scaleIfEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %47, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = zext i32 %4 to i64
  %12 = icmp ult i32 %4, 16
  br i1 %12, label %45, label %13

13:                                               ; preds = %6
  %14 = and i64 %11, 4294967280
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %41, %15 ]
  %17 = getelementptr inbounds float, ptr %8, i64 %16
  %18 = load <4 x float>, ptr %17, align 4, !tbaa !165
  %19 = getelementptr inbounds float, ptr %17, i64 4
  %20 = load <4 x float>, ptr %19, align 4, !tbaa !165
  %21 = getelementptr inbounds float, ptr %17, i64 8
  %22 = load <4 x float>, ptr %21, align 4, !tbaa !165
  %23 = getelementptr inbounds float, ptr %17, i64 12
  %24 = load <4 x float>, ptr %23, align 4, !tbaa !165
  %25 = fpext <4 x float> %18 to <4 x double>
  %26 = fpext <4 x float> %20 to <4 x double>
  %27 = fpext <4 x float> %22 to <4 x double>
  %28 = fpext <4 x float> %24 to <4 x double>
  %29 = getelementptr inbounds double, ptr %10, i64 %16
  %30 = load <4 x double>, ptr %29, align 8, !tbaa !26
  %31 = getelementptr inbounds double, ptr %29, i64 4
  %32 = load <4 x double>, ptr %31, align 8, !tbaa !26
  %33 = getelementptr inbounds double, ptr %29, i64 8
  %34 = load <4 x double>, ptr %33, align 8, !tbaa !26
  %35 = getelementptr inbounds double, ptr %29, i64 12
  %36 = load <4 x double>, ptr %35, align 8, !tbaa !26
  %37 = fmul <4 x double> %30, %25
  %38 = fmul <4 x double> %32, %26
  %39 = fmul <4 x double> %34, %27
  %40 = fmul <4 x double> %36, %28
  store <4 x double> %37, ptr %29, align 8, !tbaa !26
  store <4 x double> %38, ptr %31, align 8, !tbaa !26
  store <4 x double> %39, ptr %33, align 8, !tbaa !26
  store <4 x double> %40, ptr %35, align 8, !tbaa !26
  %41 = add nuw i64 %16, 16
  %42 = icmp eq i64 %41, %14
  br i1 %42, label %43, label %15, !llvm.loop !301

43:                                               ; preds = %15
  %44 = icmp eq i64 %14, %11
  br i1 %44, label %47, label %45

45:                                               ; preds = %6, %43
  %46 = phi i64 [ 0, %6 ], [ %14, %43 ]
  br label %48

47:                                               ; preds = %48, %43, %2
  ret void

48:                                               ; preds = %45, %48
  %49 = phi i64 [ %56, %48 ], [ %46, %45 ]
  %50 = getelementptr inbounds float, ptr %8, i64 %49
  %51 = load float, ptr %50, align 4, !tbaa !165
  %52 = fpext float %51 to double
  %53 = getelementptr inbounds double, ptr %10, i64 %49
  %54 = load double, ptr %53, align 8, !tbaa !26
  %55 = fmul double %54, %52
  store double %55, ptr %53, align 8, !tbaa !26
  %56 = add nuw nsw i64 %49, 1
  %57 = icmp eq i64 %56, %11
  br i1 %57, label %47, label %48, !llvm.loop !302
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIdEeqIeEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = zext i32 %4 to i64
  %12 = load double, ptr %8, align 8, !tbaa !26
  %13 = load x86_fp80, ptr %10, align 16, !tbaa !275
  %14 = fptrunc x86_fp80 %13 to double
  %15 = fcmp une double %12, %14
  br i1 %15, label %29, label %16

16:                                               ; preds = %6, %20
  %17 = phi i64 [ %18, %20 ], [ 0, %6 ]
  %18 = add nuw nsw i64 %17, 1
  %19 = icmp eq i64 %18, %11
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds double, ptr %8, i64 %18
  %22 = load double, ptr %21, align 8, !tbaa !26
  %23 = getelementptr inbounds x86_fp80, ptr %10, i64 %18
  %24 = load x86_fp80, ptr %23, align 16, !tbaa !275
  %25 = fptrunc x86_fp80 %24 to double
  %26 = fcmp une double %22, %25
  br i1 %26, label %27, label %16

27:                                               ; preds = %16, %20
  %28 = icmp uge i64 %18, %11
  br label %29

29:                                               ; preds = %27, %6, %2
  %30 = phi i1 [ true, %2 ], [ false, %6 ], [ %28, %27 ]
  ret i1 %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorIdEmlIeEEdRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %48, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = zext i32 %4 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %4, 1
  br i1 %13, label %36, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, 4294967294
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %33, %16 ]
  %18 = phi double [ 0.000000e+00, %14 ], [ %32, %16 ]
  %19 = phi i64 [ 0, %14 ], [ %34, %16 ]
  %20 = getelementptr inbounds double, ptr %8, i64 %17
  %21 = load double, ptr %20, align 8, !tbaa !26
  %22 = getelementptr inbounds x86_fp80, ptr %10, i64 %17
  %23 = load x86_fp80, ptr %22, align 16, !tbaa !275
  %24 = fptrunc x86_fp80 %23 to double
  %25 = tail call double @llvm.fmuladd.f64(double %21, double %24, double %18)
  %26 = or i64 %17, 1
  %27 = getelementptr inbounds double, ptr %8, i64 %26
  %28 = load double, ptr %27, align 8, !tbaa !26
  %29 = getelementptr inbounds x86_fp80, ptr %10, i64 %26
  %30 = load x86_fp80, ptr %29, align 16, !tbaa !275
  %31 = fptrunc x86_fp80 %30 to double
  %32 = tail call double @llvm.fmuladd.f64(double %28, double %31, double %25)
  %33 = add nuw nsw i64 %17, 2
  %34 = add i64 %19, 2
  %35 = icmp eq i64 %34, %15
  br i1 %35, label %36, label %16

36:                                               ; preds = %16, %6
  %37 = phi double [ undef, %6 ], [ %32, %16 ]
  %38 = phi i64 [ 0, %6 ], [ %33, %16 ]
  %39 = phi double [ 0.000000e+00, %6 ], [ %32, %16 ]
  %40 = icmp eq i64 %12, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds double, ptr %8, i64 %38
  %43 = load double, ptr %42, align 8, !tbaa !26
  %44 = getelementptr inbounds x86_fp80, ptr %10, i64 %38
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !275
  %46 = fptrunc x86_fp80 %45 to double
  %47 = tail call double @llvm.fmuladd.f64(double %43, double %46, double %39)
  br label %48

48:                                               ; preds = %41, %36, %2
  %49 = phi double [ 0.000000e+00, %2 ], [ %37, %36 ], [ %47, %41 ]
  ret double %49
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE6reinitIeEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE3equIeEEvdRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %75, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.16", ptr %2, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !274
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !24
  %12 = zext i32 %5 to i64
  %13 = icmp ult i32 %5, 8
  br i1 %13, label %73, label %14

14:                                               ; preds = %7
  %15 = and i64 %12, 4294967288
  %16 = insertelement <2 x double> poison, double %1, i64 0
  %17 = shufflevector <2 x double> %16, <2 x double> poison, <2 x i32> zeroinitializer
  %18 = insertelement <2 x double> poison, double %1, i64 0
  %19 = shufflevector <2 x double> %18, <2 x double> poison, <2 x i32> zeroinitializer
  %20 = insertelement <2 x double> poison, double %1, i64 0
  %21 = shufflevector <2 x double> %20, <2 x double> poison, <2 x i32> zeroinitializer
  %22 = insertelement <2 x double> poison, double %1, i64 0
  %23 = shufflevector <2 x double> %22, <2 x double> poison, <2 x i32> zeroinitializer
  br label %24

24:                                               ; preds = %24, %14
  %25 = phi i64 [ 0, %14 ], [ %69, %24 ]
  %26 = or i64 %25, 1
  %27 = or i64 %25, 2
  %28 = or i64 %25, 3
  %29 = or i64 %25, 4
  %30 = or i64 %25, 5
  %31 = or i64 %25, 6
  %32 = or i64 %25, 7
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %25
  %34 = getelementptr inbounds x86_fp80, ptr %9, i64 %26
  %35 = getelementptr inbounds x86_fp80, ptr %9, i64 %27
  %36 = getelementptr inbounds x86_fp80, ptr %9, i64 %28
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %29
  %38 = getelementptr inbounds x86_fp80, ptr %9, i64 %30
  %39 = getelementptr inbounds x86_fp80, ptr %9, i64 %31
  %40 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %41 = load x86_fp80, ptr %33, align 16, !tbaa !275
  %42 = load x86_fp80, ptr %34, align 16, !tbaa !275
  %43 = insertelement <2 x x86_fp80> poison, x86_fp80 %41, i64 0
  %44 = insertelement <2 x x86_fp80> %43, x86_fp80 %42, i64 1
  %45 = load x86_fp80, ptr %35, align 16, !tbaa !275
  %46 = load x86_fp80, ptr %36, align 16, !tbaa !275
  %47 = insertelement <2 x x86_fp80> poison, x86_fp80 %45, i64 0
  %48 = insertelement <2 x x86_fp80> %47, x86_fp80 %46, i64 1
  %49 = load x86_fp80, ptr %37, align 16, !tbaa !275
  %50 = load x86_fp80, ptr %38, align 16, !tbaa !275
  %51 = insertelement <2 x x86_fp80> poison, x86_fp80 %49, i64 0
  %52 = insertelement <2 x x86_fp80> %51, x86_fp80 %50, i64 1
  %53 = load x86_fp80, ptr %39, align 16, !tbaa !275
  %54 = load x86_fp80, ptr %40, align 16, !tbaa !275
  %55 = insertelement <2 x x86_fp80> poison, x86_fp80 %53, i64 0
  %56 = insertelement <2 x x86_fp80> %55, x86_fp80 %54, i64 1
  %57 = fptrunc <2 x x86_fp80> %44 to <2 x double>
  %58 = fptrunc <2 x x86_fp80> %48 to <2 x double>
  %59 = fptrunc <2 x x86_fp80> %52 to <2 x double>
  %60 = fptrunc <2 x x86_fp80> %56 to <2 x double>
  %61 = fmul <2 x double> %17, %57
  %62 = fmul <2 x double> %19, %58
  %63 = fmul <2 x double> %21, %59
  %64 = fmul <2 x double> %23, %60
  %65 = getelementptr inbounds double, ptr %11, i64 %25
  store <2 x double> %61, ptr %65, align 8, !tbaa !26
  %66 = getelementptr inbounds double, ptr %65, i64 2
  store <2 x double> %62, ptr %66, align 8, !tbaa !26
  %67 = getelementptr inbounds double, ptr %65, i64 4
  store <2 x double> %63, ptr %67, align 8, !tbaa !26
  %68 = getelementptr inbounds double, ptr %65, i64 6
  store <2 x double> %64, ptr %68, align 8, !tbaa !26
  %69 = add nuw i64 %25, 8
  %70 = icmp eq i64 %69, %15
  br i1 %70, label %71, label %24, !llvm.loop !303

71:                                               ; preds = %24
  %72 = icmp eq i64 %15, %12
  br i1 %72, label %75, label %73

73:                                               ; preds = %7, %71
  %74 = phi i64 [ 0, %7 ], [ %15, %71 ]
  br label %76

75:                                               ; preds = %76, %71, %3
  ret void

76:                                               ; preds = %73, %76
  %77 = phi i64 [ %83, %76 ], [ %74, %73 ]
  %78 = getelementptr inbounds x86_fp80, ptr %9, i64 %77
  %79 = load x86_fp80, ptr %78, align 16, !tbaa !275
  %80 = fptrunc x86_fp80 %79 to double
  %81 = fmul double %80, %1
  %82 = getelementptr inbounds double, ptr %11, i64 %77
  store double %81, ptr %82, align 8, !tbaa !26
  %83 = add nuw nsw i64 %77, 1
  %84 = icmp eq i64 %83, %12
  br i1 %84, label %75, label %76, !llvm.loop !304
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdE5scaleIeEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %74, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = zext i32 %4 to i64
  %12 = icmp ult i32 %4, 8
  br i1 %12, label %72, label %13

13:                                               ; preds = %6
  %14 = and i64 %11, 4294967288
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %68, %15 ]
  %17 = or i64 %16, 1
  %18 = or i64 %16, 2
  %19 = or i64 %16, 3
  %20 = or i64 %16, 4
  %21 = or i64 %16, 5
  %22 = or i64 %16, 6
  %23 = or i64 %16, 7
  %24 = getelementptr inbounds x86_fp80, ptr %8, i64 %16
  %25 = getelementptr inbounds x86_fp80, ptr %8, i64 %17
  %26 = getelementptr inbounds x86_fp80, ptr %8, i64 %18
  %27 = getelementptr inbounds x86_fp80, ptr %8, i64 %19
  %28 = getelementptr inbounds x86_fp80, ptr %8, i64 %20
  %29 = getelementptr inbounds x86_fp80, ptr %8, i64 %21
  %30 = getelementptr inbounds x86_fp80, ptr %8, i64 %22
  %31 = getelementptr inbounds x86_fp80, ptr %8, i64 %23
  %32 = load x86_fp80, ptr %24, align 16, !tbaa !275
  %33 = load x86_fp80, ptr %25, align 16, !tbaa !275
  %34 = insertelement <2 x x86_fp80> poison, x86_fp80 %32, i64 0
  %35 = insertelement <2 x x86_fp80> %34, x86_fp80 %33, i64 1
  %36 = load x86_fp80, ptr %26, align 16, !tbaa !275
  %37 = load x86_fp80, ptr %27, align 16, !tbaa !275
  %38 = insertelement <2 x x86_fp80> poison, x86_fp80 %36, i64 0
  %39 = insertelement <2 x x86_fp80> %38, x86_fp80 %37, i64 1
  %40 = load x86_fp80, ptr %28, align 16, !tbaa !275
  %41 = load x86_fp80, ptr %29, align 16, !tbaa !275
  %42 = insertelement <2 x x86_fp80> poison, x86_fp80 %40, i64 0
  %43 = insertelement <2 x x86_fp80> %42, x86_fp80 %41, i64 1
  %44 = load x86_fp80, ptr %30, align 16, !tbaa !275
  %45 = load x86_fp80, ptr %31, align 16, !tbaa !275
  %46 = insertelement <2 x x86_fp80> poison, x86_fp80 %44, i64 0
  %47 = insertelement <2 x x86_fp80> %46, x86_fp80 %45, i64 1
  %48 = getelementptr inbounds double, ptr %10, i64 %16
  %49 = load <2 x double>, ptr %48, align 8, !tbaa !26
  %50 = getelementptr inbounds double, ptr %48, i64 2
  %51 = load <2 x double>, ptr %50, align 8, !tbaa !26
  %52 = getelementptr inbounds double, ptr %48, i64 4
  %53 = load <2 x double>, ptr %52, align 8, !tbaa !26
  %54 = getelementptr inbounds double, ptr %48, i64 6
  %55 = load <2 x double>, ptr %54, align 8, !tbaa !26
  %56 = fpext <2 x double> %49 to <2 x x86_fp80>
  %57 = fpext <2 x double> %51 to <2 x x86_fp80>
  %58 = fpext <2 x double> %53 to <2 x x86_fp80>
  %59 = fpext <2 x double> %55 to <2 x x86_fp80>
  %60 = fmul <2 x x86_fp80> %35, %56
  %61 = fmul <2 x x86_fp80> %39, %57
  %62 = fmul <2 x x86_fp80> %43, %58
  %63 = fmul <2 x x86_fp80> %47, %59
  %64 = fptrunc <2 x x86_fp80> %60 to <2 x double>
  %65 = fptrunc <2 x x86_fp80> %61 to <2 x double>
  %66 = fptrunc <2 x x86_fp80> %62 to <2 x double>
  %67 = fptrunc <2 x x86_fp80> %63 to <2 x double>
  store <2 x double> %64, ptr %48, align 8, !tbaa !26
  store <2 x double> %65, ptr %50, align 8, !tbaa !26
  store <2 x double> %66, ptr %52, align 8, !tbaa !26
  store <2 x double> %67, ptr %54, align 8, !tbaa !26
  %68 = add nuw i64 %16, 8
  %69 = icmp eq i64 %68, %14
  br i1 %69, label %70, label %15, !llvm.loop !305

70:                                               ; preds = %15
  %71 = icmp eq i64 %14, %11
  br i1 %71, label %74, label %72

72:                                               ; preds = %6, %70
  %73 = phi i64 [ 0, %6 ], [ %14, %70 ]
  br label %75

74:                                               ; preds = %75, %70, %2
  ret void

75:                                               ; preds = %72, %75
  %76 = phi i64 [ %84, %75 ], [ %73, %72 ]
  %77 = getelementptr inbounds x86_fp80, ptr %8, i64 %76
  %78 = load x86_fp80, ptr %77, align 16, !tbaa !275
  %79 = getelementptr inbounds double, ptr %10, i64 %76
  %80 = load double, ptr %79, align 8, !tbaa !26
  %81 = fpext double %80 to x86_fp80
  %82 = fmul x86_fp80 %78, %81
  %83 = fptrunc x86_fp80 %82 to double
  store double %83, ptr %79, align 8, !tbaa !26
  %84 = add nuw nsw i64 %76, 1
  %85 = icmp eq i64 %84, %11
  br i1 %85, label %74, label %75, !llvm.loop !306
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIfEeqIdEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = zext i32 %4 to i64
  %12 = load float, ptr %8, align 4, !tbaa !165
  %13 = load double, ptr %10, align 8, !tbaa !26
  %14 = fptrunc double %13 to float
  %15 = fcmp une float %12, %14
  br i1 %15, label %29, label %16

16:                                               ; preds = %6, %20
  %17 = phi i64 [ %18, %20 ], [ 0, %6 ]
  %18 = add nuw nsw i64 %17, 1
  %19 = icmp eq i64 %18, %11
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds float, ptr %8, i64 %18
  %22 = load float, ptr %21, align 4, !tbaa !165
  %23 = getelementptr inbounds double, ptr %10, i64 %18
  %24 = load double, ptr %23, align 8, !tbaa !26
  %25 = fptrunc double %24 to float
  %26 = fcmp une float %22, %25
  br i1 %26, label %27, label %16

27:                                               ; preds = %16, %20
  %28 = icmp uge i64 %18, %11
  br label %29

29:                                               ; preds = %27, %6, %2
  %30 = phi i1 [ true, %2 ], [ false, %6 ], [ %28, %27 ]
  ret i1 %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorIfEmlIdEEfRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = zext i32 %4 to i64
  %12 = and i64 %11, 3
  %13 = icmp ult i32 %4, 4
  br i1 %13, label %50, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, 4294967292
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %47, %16 ]
  %18 = phi float [ 0.000000e+00, %14 ], [ %46, %16 ]
  %19 = phi i64 [ 0, %14 ], [ %48, %16 ]
  %20 = getelementptr inbounds float, ptr %8, i64 %17
  %21 = load float, ptr %20, align 4, !tbaa !165
  %22 = getelementptr inbounds double, ptr %10, i64 %17
  %23 = load double, ptr %22, align 8, !tbaa !26
  %24 = fptrunc double %23 to float
  %25 = tail call float @llvm.fmuladd.f32(float %21, float %24, float %18)
  %26 = or i64 %17, 1
  %27 = getelementptr inbounds float, ptr %8, i64 %26
  %28 = load float, ptr %27, align 4, !tbaa !165
  %29 = getelementptr inbounds double, ptr %10, i64 %26
  %30 = load double, ptr %29, align 8, !tbaa !26
  %31 = fptrunc double %30 to float
  %32 = tail call float @llvm.fmuladd.f32(float %28, float %31, float %25)
  %33 = or i64 %17, 2
  %34 = getelementptr inbounds float, ptr %8, i64 %33
  %35 = load float, ptr %34, align 4, !tbaa !165
  %36 = getelementptr inbounds double, ptr %10, i64 %33
  %37 = load double, ptr %36, align 8, !tbaa !26
  %38 = fptrunc double %37 to float
  %39 = tail call float @llvm.fmuladd.f32(float %35, float %38, float %32)
  %40 = or i64 %17, 3
  %41 = getelementptr inbounds float, ptr %8, i64 %40
  %42 = load float, ptr %41, align 4, !tbaa !165
  %43 = getelementptr inbounds double, ptr %10, i64 %40
  %44 = load double, ptr %43, align 8, !tbaa !26
  %45 = fptrunc double %44 to float
  %46 = tail call float @llvm.fmuladd.f32(float %42, float %45, float %39)
  %47 = add nuw nsw i64 %17, 4
  %48 = add i64 %19, 4
  %49 = icmp eq i64 %48, %15
  br i1 %49, label %50, label %16

50:                                               ; preds = %16, %6
  %51 = phi float [ undef, %6 ], [ %46, %16 ]
  %52 = phi i64 [ 0, %6 ], [ %47, %16 ]
  %53 = phi float [ 0.000000e+00, %6 ], [ %46, %16 ]
  %54 = icmp eq i64 %12, 0
  br i1 %54, label %68, label %55

55:                                               ; preds = %50, %55
  %56 = phi i64 [ %65, %55 ], [ %52, %50 ]
  %57 = phi float [ %64, %55 ], [ %53, %50 ]
  %58 = phi i64 [ %66, %55 ], [ 0, %50 ]
  %59 = getelementptr inbounds float, ptr %8, i64 %56
  %60 = load float, ptr %59, align 4, !tbaa !165
  %61 = getelementptr inbounds double, ptr %10, i64 %56
  %62 = load double, ptr %61, align 8, !tbaa !26
  %63 = fptrunc double %62 to float
  %64 = tail call float @llvm.fmuladd.f32(float %60, float %63, float %57)
  %65 = add nuw nsw i64 %56, 1
  %66 = add i64 %58, 1
  %67 = icmp eq i64 %66, %12
  br i1 %67, label %68, label %55, !llvm.loop !307

68:                                               ; preds = %50, %55, %2
  %69 = phi float [ 0.000000e+00, %2 ], [ %51, %50 ], [ %64, %55 ]
  ret float %69
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE6reinitIdEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE3equIdEEvfRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !24
  %10 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !164
  %12 = zext i32 %5 to i64
  %13 = icmp ult i32 %5, 16
  br i1 %13, label %50, label %14

14:                                               ; preds = %7
  %15 = and i64 %12, 4294967280
  %16 = insertelement <4 x float> poison, float %1, i64 0
  %17 = shufflevector <4 x float> %16, <4 x float> poison, <4 x i32> zeroinitializer
  %18 = insertelement <4 x float> poison, float %1, i64 0
  %19 = shufflevector <4 x float> %18, <4 x float> poison, <4 x i32> zeroinitializer
  %20 = insertelement <4 x float> poison, float %1, i64 0
  %21 = shufflevector <4 x float> %20, <4 x float> poison, <4 x i32> zeroinitializer
  %22 = insertelement <4 x float> poison, float %1, i64 0
  %23 = shufflevector <4 x float> %22, <4 x float> poison, <4 x i32> zeroinitializer
  br label %24

24:                                               ; preds = %24, %14
  %25 = phi i64 [ 0, %14 ], [ %46, %24 ]
  %26 = getelementptr inbounds double, ptr %9, i64 %25
  %27 = load <4 x double>, ptr %26, align 8, !tbaa !26
  %28 = getelementptr inbounds double, ptr %26, i64 4
  %29 = load <4 x double>, ptr %28, align 8, !tbaa !26
  %30 = getelementptr inbounds double, ptr %26, i64 8
  %31 = load <4 x double>, ptr %30, align 8, !tbaa !26
  %32 = getelementptr inbounds double, ptr %26, i64 12
  %33 = load <4 x double>, ptr %32, align 8, !tbaa !26
  %34 = fptrunc <4 x double> %27 to <4 x float>
  %35 = fptrunc <4 x double> %29 to <4 x float>
  %36 = fptrunc <4 x double> %31 to <4 x float>
  %37 = fptrunc <4 x double> %33 to <4 x float>
  %38 = fmul <4 x float> %17, %34
  %39 = fmul <4 x float> %19, %35
  %40 = fmul <4 x float> %21, %36
  %41 = fmul <4 x float> %23, %37
  %42 = getelementptr inbounds float, ptr %11, i64 %25
  store <4 x float> %38, ptr %42, align 4, !tbaa !165
  %43 = getelementptr inbounds float, ptr %42, i64 4
  store <4 x float> %39, ptr %43, align 4, !tbaa !165
  %44 = getelementptr inbounds float, ptr %42, i64 8
  store <4 x float> %40, ptr %44, align 4, !tbaa !165
  %45 = getelementptr inbounds float, ptr %42, i64 12
  store <4 x float> %41, ptr %45, align 4, !tbaa !165
  %46 = add nuw i64 %25, 16
  %47 = icmp eq i64 %46, %15
  br i1 %47, label %48, label %24, !llvm.loop !308

48:                                               ; preds = %24
  %49 = icmp eq i64 %15, %12
  br i1 %49, label %52, label %50

50:                                               ; preds = %7, %48
  %51 = phi i64 [ 0, %7 ], [ %15, %48 ]
  br label %53

52:                                               ; preds = %53, %48, %3
  ret void

53:                                               ; preds = %50, %53
  %54 = phi i64 [ %60, %53 ], [ %51, %50 ]
  %55 = getelementptr inbounds double, ptr %9, i64 %54
  %56 = load double, ptr %55, align 8, !tbaa !26
  %57 = fptrunc double %56 to float
  %58 = fmul float %57, %1
  %59 = getelementptr inbounds float, ptr %11, i64 %54
  store float %58, ptr %59, align 4, !tbaa !165
  %60 = add nuw nsw i64 %54, 1
  %61 = icmp eq i64 %60, %12
  br i1 %61, label %52, label %53, !llvm.loop !309
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE5scaleIdEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %51, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %11 = zext i32 %4 to i64
  %12 = icmp ult i32 %4, 16
  br i1 %12, label %49, label %13

13:                                               ; preds = %6
  %14 = and i64 %11, 4294967280
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %15 ]
  %17 = getelementptr inbounds double, ptr %8, i64 %16
  %18 = load <4 x double>, ptr %17, align 8, !tbaa !26
  %19 = getelementptr inbounds double, ptr %17, i64 4
  %20 = load <4 x double>, ptr %19, align 8, !tbaa !26
  %21 = getelementptr inbounds double, ptr %17, i64 8
  %22 = load <4 x double>, ptr %21, align 8, !tbaa !26
  %23 = getelementptr inbounds double, ptr %17, i64 12
  %24 = load <4 x double>, ptr %23, align 8, !tbaa !26
  %25 = getelementptr inbounds float, ptr %10, i64 %16
  %26 = load <4 x float>, ptr %25, align 4, !tbaa !165
  %27 = getelementptr inbounds float, ptr %25, i64 4
  %28 = load <4 x float>, ptr %27, align 4, !tbaa !165
  %29 = getelementptr inbounds float, ptr %25, i64 8
  %30 = load <4 x float>, ptr %29, align 4, !tbaa !165
  %31 = getelementptr inbounds float, ptr %25, i64 12
  %32 = load <4 x float>, ptr %31, align 4, !tbaa !165
  %33 = fpext <4 x float> %26 to <4 x double>
  %34 = fpext <4 x float> %28 to <4 x double>
  %35 = fpext <4 x float> %30 to <4 x double>
  %36 = fpext <4 x float> %32 to <4 x double>
  %37 = fmul <4 x double> %18, %33
  %38 = fmul <4 x double> %20, %34
  %39 = fmul <4 x double> %22, %35
  %40 = fmul <4 x double> %24, %36
  %41 = fptrunc <4 x double> %37 to <4 x float>
  %42 = fptrunc <4 x double> %38 to <4 x float>
  %43 = fptrunc <4 x double> %39 to <4 x float>
  %44 = fptrunc <4 x double> %40 to <4 x float>
  store <4 x float> %41, ptr %25, align 4, !tbaa !165
  store <4 x float> %42, ptr %27, align 4, !tbaa !165
  store <4 x float> %43, ptr %29, align 4, !tbaa !165
  store <4 x float> %44, ptr %31, align 4, !tbaa !165
  %45 = add nuw i64 %16, 16
  %46 = icmp eq i64 %45, %14
  br i1 %46, label %47, label %15, !llvm.loop !310

47:                                               ; preds = %15
  %48 = icmp eq i64 %14, %11
  br i1 %48, label %51, label %49

49:                                               ; preds = %6, %47
  %50 = phi i64 [ 0, %6 ], [ %14, %47 ]
  br label %52

51:                                               ; preds = %52, %47, %2
  ret void

52:                                               ; preds = %49, %52
  %53 = phi i64 [ %61, %52 ], [ %50, %49 ]
  %54 = getelementptr inbounds double, ptr %8, i64 %53
  %55 = load double, ptr %54, align 8, !tbaa !26
  %56 = getelementptr inbounds float, ptr %10, i64 %53
  %57 = load float, ptr %56, align 4, !tbaa !165
  %58 = fpext float %57 to double
  %59 = fmul double %55, %58
  %60 = fptrunc double %59 to float
  store float %60, ptr %56, align 4, !tbaa !165
  %61 = add nuw nsw i64 %53, 1
  %62 = icmp eq i64 %61, %11
  br i1 %62, label %51, label %52, !llvm.loop !311
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIfEeqIfEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %11 = zext i32 %4 to i64
  %12 = load float, ptr %8, align 4, !tbaa !165
  %13 = load float, ptr %10, align 4, !tbaa !165
  %14 = fcmp une float %12, %13
  br i1 %14, label %27, label %15

15:                                               ; preds = %6, %19
  %16 = phi i64 [ %17, %19 ], [ 0, %6 ]
  %17 = add nuw nsw i64 %16, 1
  %18 = icmp eq i64 %17, %11
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds float, ptr %8, i64 %17
  %21 = load float, ptr %20, align 4, !tbaa !165
  %22 = getelementptr inbounds float, ptr %10, i64 %17
  %23 = load float, ptr %22, align 4, !tbaa !165
  %24 = fcmp une float %21, %23
  br i1 %24, label %25, label %15

25:                                               ; preds = %15, %19
  %26 = icmp uge i64 %17, %11
  br label %27

27:                                               ; preds = %25, %6, %2
  %28 = phi i1 [ true, %2 ], [ false, %6 ], [ %26, %25 ]
  ret i1 %28
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorIfEmlIfEEfRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq ptr %0, %1
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  %6 = icmp eq i32 %5, 0
  br i1 %3, label %18, label %7

7:                                                ; preds = %2
  br i1 %6, label %116, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %11 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !164
  %13 = zext i32 %5 to i64
  %14 = and i64 %13, 3
  %15 = icmp ult i32 %5, 4
  br i1 %15, label %99, label %16

16:                                               ; preds = %8
  %17 = and i64 %13, 4294967292
  br label %53

18:                                               ; preds = %2
  br i1 %6, label %116, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !164
  %22 = zext i32 %5 to i64
  %23 = and i64 %22, 3
  %24 = icmp ult i32 %5, 4
  br i1 %24, label %83, label %25

25:                                               ; preds = %19
  %26 = and i64 %22, 4294967292
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ 0, %25 ], [ %50, %27 ]
  %29 = phi float [ 0.000000e+00, %25 ], [ %49, %27 ]
  %30 = phi i64 [ 0, %25 ], [ %51, %27 ]
  %31 = getelementptr inbounds float, ptr %21, i64 %28
  %32 = load float, ptr %31, align 4, !tbaa !165
  %33 = fmul float %32, %32
  %34 = fadd float %29, %33
  %35 = or i64 %28, 1
  %36 = getelementptr inbounds float, ptr %21, i64 %35
  %37 = load float, ptr %36, align 4, !tbaa !165
  %38 = fmul float %37, %37
  %39 = fadd float %34, %38
  %40 = or i64 %28, 2
  %41 = getelementptr inbounds float, ptr %21, i64 %40
  %42 = load float, ptr %41, align 4, !tbaa !165
  %43 = fmul float %42, %42
  %44 = fadd float %39, %43
  %45 = or i64 %28, 3
  %46 = getelementptr inbounds float, ptr %21, i64 %45
  %47 = load float, ptr %46, align 4, !tbaa !165
  %48 = fmul float %47, %47
  %49 = fadd float %44, %48
  %50 = add nuw nsw i64 %28, 4
  %51 = add i64 %30, 4
  %52 = icmp eq i64 %51, %26
  br i1 %52, label %83, label %27

53:                                               ; preds = %53, %16
  %54 = phi i64 [ 0, %16 ], [ %80, %53 ]
  %55 = phi float [ 0.000000e+00, %16 ], [ %79, %53 ]
  %56 = phi i64 [ 0, %16 ], [ %81, %53 ]
  %57 = getelementptr inbounds float, ptr %10, i64 %54
  %58 = load float, ptr %57, align 4, !tbaa !165
  %59 = getelementptr inbounds float, ptr %12, i64 %54
  %60 = load float, ptr %59, align 4, !tbaa !165
  %61 = tail call float @llvm.fmuladd.f32(float %58, float %60, float %55)
  %62 = or i64 %54, 1
  %63 = getelementptr inbounds float, ptr %10, i64 %62
  %64 = load float, ptr %63, align 4, !tbaa !165
  %65 = getelementptr inbounds float, ptr %12, i64 %62
  %66 = load float, ptr %65, align 4, !tbaa !165
  %67 = tail call float @llvm.fmuladd.f32(float %64, float %66, float %61)
  %68 = or i64 %54, 2
  %69 = getelementptr inbounds float, ptr %10, i64 %68
  %70 = load float, ptr %69, align 4, !tbaa !165
  %71 = getelementptr inbounds float, ptr %12, i64 %68
  %72 = load float, ptr %71, align 4, !tbaa !165
  %73 = tail call float @llvm.fmuladd.f32(float %70, float %72, float %67)
  %74 = or i64 %54, 3
  %75 = getelementptr inbounds float, ptr %10, i64 %74
  %76 = load float, ptr %75, align 4, !tbaa !165
  %77 = getelementptr inbounds float, ptr %12, i64 %74
  %78 = load float, ptr %77, align 4, !tbaa !165
  %79 = tail call float @llvm.fmuladd.f32(float %76, float %78, float %73)
  %80 = add nuw nsw i64 %54, 4
  %81 = add i64 %56, 4
  %82 = icmp eq i64 %81, %17
  br i1 %82, label %99, label %53

83:                                               ; preds = %27, %19
  %84 = phi float [ undef, %19 ], [ %49, %27 ]
  %85 = phi i64 [ 0, %19 ], [ %50, %27 ]
  %86 = phi float [ 0.000000e+00, %19 ], [ %49, %27 ]
  %87 = icmp eq i64 %23, 0
  br i1 %87, label %116, label %88

88:                                               ; preds = %83, %88
  %89 = phi i64 [ %96, %88 ], [ %85, %83 ]
  %90 = phi float [ %95, %88 ], [ %86, %83 ]
  %91 = phi i64 [ %97, %88 ], [ 0, %83 ]
  %92 = getelementptr inbounds float, ptr %21, i64 %89
  %93 = load float, ptr %92, align 4, !tbaa !165
  %94 = fmul float %93, %93
  %95 = fadd float %90, %94
  %96 = add nuw nsw i64 %89, 1
  %97 = add i64 %91, 1
  %98 = icmp eq i64 %97, %23
  br i1 %98, label %116, label %88, !llvm.loop !312

99:                                               ; preds = %53, %8
  %100 = phi float [ undef, %8 ], [ %79, %53 ]
  %101 = phi i64 [ 0, %8 ], [ %80, %53 ]
  %102 = phi float [ 0.000000e+00, %8 ], [ %79, %53 ]
  %103 = icmp eq i64 %14, 0
  br i1 %103, label %116, label %104

104:                                              ; preds = %99, %104
  %105 = phi i64 [ %113, %104 ], [ %101, %99 ]
  %106 = phi float [ %112, %104 ], [ %102, %99 ]
  %107 = phi i64 [ %114, %104 ], [ 0, %99 ]
  %108 = getelementptr inbounds float, ptr %10, i64 %105
  %109 = load float, ptr %108, align 4, !tbaa !165
  %110 = getelementptr inbounds float, ptr %12, i64 %105
  %111 = load float, ptr %110, align 4, !tbaa !165
  %112 = tail call float @llvm.fmuladd.f32(float %109, float %111, float %106)
  %113 = add nuw nsw i64 %105, 1
  %114 = add i64 %107, 1
  %115 = icmp eq i64 %114, %14
  br i1 %115, label %116, label %104, !llvm.loop !313

116:                                              ; preds = %99, %104, %83, %88, %7, %18
  %117 = phi float [ 0.000000e+00, %18 ], [ 0.000000e+00, %7 ], [ %84, %83 ], [ %95, %88 ], [ %100, %99 ], [ %112, %104 ]
  ret float %117
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE6reinitIfEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE3equIfEEvfRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %70, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.8", ptr %2, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !164
  %10 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !164
  %12 = zext i32 %5 to i64
  %13 = icmp ult i32 %5, 32
  %14 = ptrtoint ptr %11 to i64
  %15 = ptrtoint ptr %9 to i64
  %16 = sub i64 %14, %15
  %17 = icmp ult i64 %16, 128
  %18 = select i1 %13, i1 true, i1 %17
  br i1 %18, label %51, label %19

19:                                               ; preds = %7
  %20 = and i64 %12, 4294967264
  %21 = insertelement <8 x float> poison, float %1, i64 0
  %22 = shufflevector <8 x float> %21, <8 x float> poison, <8 x i32> zeroinitializer
  %23 = insertelement <8 x float> poison, float %1, i64 0
  %24 = shufflevector <8 x float> %23, <8 x float> poison, <8 x i32> zeroinitializer
  %25 = insertelement <8 x float> poison, float %1, i64 0
  %26 = shufflevector <8 x float> %25, <8 x float> poison, <8 x i32> zeroinitializer
  %27 = insertelement <8 x float> poison, float %1, i64 0
  %28 = shufflevector <8 x float> %27, <8 x float> poison, <8 x i32> zeroinitializer
  br label %29

29:                                               ; preds = %29, %19
  %30 = phi i64 [ 0, %19 ], [ %47, %29 ]
  %31 = getelementptr inbounds float, ptr %9, i64 %30
  %32 = load <8 x float>, ptr %31, align 4, !tbaa !165
  %33 = getelementptr inbounds float, ptr %31, i64 8
  %34 = load <8 x float>, ptr %33, align 4, !tbaa !165
  %35 = getelementptr inbounds float, ptr %31, i64 16
  %36 = load <8 x float>, ptr %35, align 4, !tbaa !165
  %37 = getelementptr inbounds float, ptr %31, i64 24
  %38 = load <8 x float>, ptr %37, align 4, !tbaa !165
  %39 = fmul <8 x float> %32, %22
  %40 = fmul <8 x float> %34, %24
  %41 = fmul <8 x float> %36, %26
  %42 = fmul <8 x float> %38, %28
  %43 = getelementptr inbounds float, ptr %11, i64 %30
  store <8 x float> %39, ptr %43, align 4, !tbaa !165
  %44 = getelementptr inbounds float, ptr %43, i64 8
  store <8 x float> %40, ptr %44, align 4, !tbaa !165
  %45 = getelementptr inbounds float, ptr %43, i64 16
  store <8 x float> %41, ptr %45, align 4, !tbaa !165
  %46 = getelementptr inbounds float, ptr %43, i64 24
  store <8 x float> %42, ptr %46, align 4, !tbaa !165
  %47 = add nuw i64 %30, 32
  %48 = icmp eq i64 %47, %20
  br i1 %48, label %49, label %29, !llvm.loop !314

49:                                               ; preds = %29
  %50 = icmp eq i64 %20, %12
  br i1 %50, label %70, label %51

51:                                               ; preds = %7, %49
  %52 = phi i64 [ 0, %7 ], [ %20, %49 ]
  %53 = xor i64 %52, -1
  %54 = add nsw i64 %53, %12
  %55 = and i64 %12, 3
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %51, %57
  %58 = phi i64 [ %64, %57 ], [ %52, %51 ]
  %59 = phi i64 [ %65, %57 ], [ 0, %51 ]
  %60 = getelementptr inbounds float, ptr %9, i64 %58
  %61 = load float, ptr %60, align 4, !tbaa !165
  %62 = fmul float %61, %1
  %63 = getelementptr inbounds float, ptr %11, i64 %58
  store float %62, ptr %63, align 4, !tbaa !165
  %64 = add nuw nsw i64 %58, 1
  %65 = add i64 %59, 1
  %66 = icmp eq i64 %65, %55
  br i1 %66, label %67, label %57, !llvm.loop !315

67:                                               ; preds = %57, %51
  %68 = phi i64 [ %52, %51 ], [ %64, %57 ]
  %69 = icmp ult i64 %54, 3
  br i1 %69, label %70, label %71

70:                                               ; preds = %67, %71, %49, %3
  ret void

71:                                               ; preds = %67, %71
  %72 = phi i64 [ %92, %71 ], [ %68, %67 ]
  %73 = getelementptr inbounds float, ptr %9, i64 %72
  %74 = load float, ptr %73, align 4, !tbaa !165
  %75 = fmul float %74, %1
  %76 = getelementptr inbounds float, ptr %11, i64 %72
  store float %75, ptr %76, align 4, !tbaa !165
  %77 = add nuw nsw i64 %72, 1
  %78 = getelementptr inbounds float, ptr %9, i64 %77
  %79 = load float, ptr %78, align 4, !tbaa !165
  %80 = fmul float %79, %1
  %81 = getelementptr inbounds float, ptr %11, i64 %77
  store float %80, ptr %81, align 4, !tbaa !165
  %82 = add nuw nsw i64 %72, 2
  %83 = getelementptr inbounds float, ptr %9, i64 %82
  %84 = load float, ptr %83, align 4, !tbaa !165
  %85 = fmul float %84, %1
  %86 = getelementptr inbounds float, ptr %11, i64 %82
  store float %85, ptr %86, align 4, !tbaa !165
  %87 = add nuw nsw i64 %72, 3
  %88 = getelementptr inbounds float, ptr %9, i64 %87
  %89 = load float, ptr %88, align 4, !tbaa !165
  %90 = fmul float %89, %1
  %91 = getelementptr inbounds float, ptr %11, i64 %87
  store float %90, ptr %91, align 4, !tbaa !165
  %92 = add nuw nsw i64 %72, 4
  %93 = icmp eq i64 %92, %12
  br i1 %93, label %70, label %71, !llvm.loop !316
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE5scaleIfEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %11 = zext i32 %4 to i64
  %12 = icmp ult i32 %4, 32
  br i1 %12, label %48, label %13

13:                                               ; preds = %6
  %14 = shl nuw nsw i64 %11, 2
  %15 = getelementptr i8, ptr %10, i64 %14
  %16 = getelementptr i8, ptr %8, i64 %14
  %17 = icmp ult ptr %10, %16
  %18 = icmp ult ptr %8, %15
  %19 = and i1 %17, %18
  br i1 %19, label %48, label %20

20:                                               ; preds = %13
  %21 = and i64 %11, 4294967264
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %44, %22 ]
  %24 = getelementptr inbounds float, ptr %8, i64 %23
  %25 = load <8 x float>, ptr %24, align 4, !tbaa !165, !alias.scope !317
  %26 = getelementptr inbounds float, ptr %24, i64 8
  %27 = load <8 x float>, ptr %26, align 4, !tbaa !165, !alias.scope !317
  %28 = getelementptr inbounds float, ptr %24, i64 16
  %29 = load <8 x float>, ptr %28, align 4, !tbaa !165, !alias.scope !317
  %30 = getelementptr inbounds float, ptr %24, i64 24
  %31 = load <8 x float>, ptr %30, align 4, !tbaa !165, !alias.scope !317
  %32 = getelementptr inbounds float, ptr %10, i64 %23
  %33 = load <8 x float>, ptr %32, align 4, !tbaa !165, !alias.scope !320, !noalias !317
  %34 = getelementptr inbounds float, ptr %32, i64 8
  %35 = load <8 x float>, ptr %34, align 4, !tbaa !165, !alias.scope !320, !noalias !317
  %36 = getelementptr inbounds float, ptr %32, i64 16
  %37 = load <8 x float>, ptr %36, align 4, !tbaa !165, !alias.scope !320, !noalias !317
  %38 = getelementptr inbounds float, ptr %32, i64 24
  %39 = load <8 x float>, ptr %38, align 4, !tbaa !165, !alias.scope !320, !noalias !317
  %40 = fmul <8 x float> %25, %33
  %41 = fmul <8 x float> %27, %35
  %42 = fmul <8 x float> %29, %37
  %43 = fmul <8 x float> %31, %39
  store <8 x float> %40, ptr %32, align 4, !tbaa !165, !alias.scope !320, !noalias !317
  store <8 x float> %41, ptr %34, align 4, !tbaa !165, !alias.scope !320, !noalias !317
  store <8 x float> %42, ptr %36, align 4, !tbaa !165, !alias.scope !320, !noalias !317
  store <8 x float> %43, ptr %38, align 4, !tbaa !165, !alias.scope !320, !noalias !317
  %44 = add nuw i64 %23, 32
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %22, !llvm.loop !322

46:                                               ; preds = %22
  %47 = icmp eq i64 %21, %11
  br i1 %47, label %68, label %48

48:                                               ; preds = %13, %6, %46
  %49 = phi i64 [ 0, %13 ], [ 0, %6 ], [ %21, %46 ]
  %50 = xor i64 %49, -1
  %51 = add nsw i64 %50, %11
  %52 = and i64 %11, 3
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %48, %54
  %55 = phi i64 [ %62, %54 ], [ %49, %48 ]
  %56 = phi i64 [ %63, %54 ], [ 0, %48 ]
  %57 = getelementptr inbounds float, ptr %8, i64 %55
  %58 = load float, ptr %57, align 4, !tbaa !165
  %59 = getelementptr inbounds float, ptr %10, i64 %55
  %60 = load float, ptr %59, align 4, !tbaa !165
  %61 = fmul float %58, %60
  store float %61, ptr %59, align 4, !tbaa !165
  %62 = add nuw nsw i64 %55, 1
  %63 = add i64 %56, 1
  %64 = icmp eq i64 %63, %52
  br i1 %64, label %65, label %54, !llvm.loop !323

65:                                               ; preds = %54, %48
  %66 = phi i64 [ %49, %48 ], [ %62, %54 ]
  %67 = icmp ult i64 %51, 3
  br i1 %67, label %68, label %69

68:                                               ; preds = %65, %69, %46, %2
  ret void

69:                                               ; preds = %65, %69
  %70 = phi i64 [ %94, %69 ], [ %66, %65 ]
  %71 = getelementptr inbounds float, ptr %8, i64 %70
  %72 = load float, ptr %71, align 4, !tbaa !165
  %73 = getelementptr inbounds float, ptr %10, i64 %70
  %74 = load float, ptr %73, align 4, !tbaa !165
  %75 = fmul float %72, %74
  store float %75, ptr %73, align 4, !tbaa !165
  %76 = add nuw nsw i64 %70, 1
  %77 = getelementptr inbounds float, ptr %8, i64 %76
  %78 = load float, ptr %77, align 4, !tbaa !165
  %79 = getelementptr inbounds float, ptr %10, i64 %76
  %80 = load float, ptr %79, align 4, !tbaa !165
  %81 = fmul float %78, %80
  store float %81, ptr %79, align 4, !tbaa !165
  %82 = add nuw nsw i64 %70, 2
  %83 = getelementptr inbounds float, ptr %8, i64 %82
  %84 = load float, ptr %83, align 4, !tbaa !165
  %85 = getelementptr inbounds float, ptr %10, i64 %82
  %86 = load float, ptr %85, align 4, !tbaa !165
  %87 = fmul float %84, %86
  store float %87, ptr %85, align 4, !tbaa !165
  %88 = add nuw nsw i64 %70, 3
  %89 = getelementptr inbounds float, ptr %8, i64 %88
  %90 = load float, ptr %89, align 4, !tbaa !165
  %91 = getelementptr inbounds float, ptr %10, i64 %88
  %92 = load float, ptr %91, align 4, !tbaa !165
  %93 = fmul float %90, %92
  store float %93, ptr %91, align 4, !tbaa !165
  %94 = add nuw nsw i64 %70, 4
  %95 = icmp eq i64 %94, %11
  br i1 %95, label %68, label %69, !llvm.loop !324
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIfEeqIeEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = zext i32 %4 to i64
  %12 = load float, ptr %8, align 4, !tbaa !165
  %13 = load x86_fp80, ptr %10, align 16, !tbaa !275
  %14 = fptrunc x86_fp80 %13 to float
  %15 = fcmp une float %12, %14
  br i1 %15, label %29, label %16

16:                                               ; preds = %6, %20
  %17 = phi i64 [ %18, %20 ], [ 0, %6 ]
  %18 = add nuw nsw i64 %17, 1
  %19 = icmp eq i64 %18, %11
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds float, ptr %8, i64 %18
  %22 = load float, ptr %21, align 4, !tbaa !165
  %23 = getelementptr inbounds x86_fp80, ptr %10, i64 %18
  %24 = load x86_fp80, ptr %23, align 16, !tbaa !275
  %25 = fptrunc x86_fp80 %24 to float
  %26 = fcmp une float %22, %25
  br i1 %26, label %27, label %16

27:                                               ; preds = %16, %20
  %28 = icmp uge i64 %18, %11
  br label %29

29:                                               ; preds = %27, %6, %2
  %30 = phi i1 [ true, %2 ], [ false, %6 ], [ %28, %27 ]
  ret i1 %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorIfEmlIeEEfRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %48, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = zext i32 %4 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %4, 1
  br i1 %13, label %36, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, 4294967294
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %33, %16 ]
  %18 = phi float [ 0.000000e+00, %14 ], [ %32, %16 ]
  %19 = phi i64 [ 0, %14 ], [ %34, %16 ]
  %20 = getelementptr inbounds float, ptr %8, i64 %17
  %21 = load float, ptr %20, align 4, !tbaa !165
  %22 = getelementptr inbounds x86_fp80, ptr %10, i64 %17
  %23 = load x86_fp80, ptr %22, align 16, !tbaa !275
  %24 = fptrunc x86_fp80 %23 to float
  %25 = tail call float @llvm.fmuladd.f32(float %21, float %24, float %18)
  %26 = or i64 %17, 1
  %27 = getelementptr inbounds float, ptr %8, i64 %26
  %28 = load float, ptr %27, align 4, !tbaa !165
  %29 = getelementptr inbounds x86_fp80, ptr %10, i64 %26
  %30 = load x86_fp80, ptr %29, align 16, !tbaa !275
  %31 = fptrunc x86_fp80 %30 to float
  %32 = tail call float @llvm.fmuladd.f32(float %28, float %31, float %25)
  %33 = add nuw nsw i64 %17, 2
  %34 = add i64 %19, 2
  %35 = icmp eq i64 %34, %15
  br i1 %35, label %36, label %16

36:                                               ; preds = %16, %6
  %37 = phi float [ undef, %6 ], [ %32, %16 ]
  %38 = phi i64 [ 0, %6 ], [ %33, %16 ]
  %39 = phi float [ 0.000000e+00, %6 ], [ %32, %16 ]
  %40 = icmp eq i64 %12, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds float, ptr %8, i64 %38
  %43 = load float, ptr %42, align 4, !tbaa !165
  %44 = getelementptr inbounds x86_fp80, ptr %10, i64 %38
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !275
  %46 = fptrunc x86_fp80 %45 to float
  %47 = tail call float @llvm.fmuladd.f32(float %43, float %46, float %39)
  br label %48

48:                                               ; preds = %41, %36, %2
  %49 = phi float [ 0.000000e+00, %2 ], [ %37, %36 ], [ %47, %41 ]
  ret float %49
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE6reinitIeEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE3equIeEEvfRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %75, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.16", ptr %2, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !274
  %10 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !164
  %12 = zext i32 %5 to i64
  %13 = icmp ult i32 %5, 8
  br i1 %13, label %73, label %14

14:                                               ; preds = %7
  %15 = and i64 %12, 4294967288
  %16 = insertelement <2 x float> poison, float %1, i64 0
  %17 = shufflevector <2 x float> %16, <2 x float> poison, <2 x i32> zeroinitializer
  %18 = insertelement <2 x float> poison, float %1, i64 0
  %19 = shufflevector <2 x float> %18, <2 x float> poison, <2 x i32> zeroinitializer
  %20 = insertelement <2 x float> poison, float %1, i64 0
  %21 = shufflevector <2 x float> %20, <2 x float> poison, <2 x i32> zeroinitializer
  %22 = insertelement <2 x float> poison, float %1, i64 0
  %23 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> zeroinitializer
  br label %24

24:                                               ; preds = %24, %14
  %25 = phi i64 [ 0, %14 ], [ %69, %24 ]
  %26 = or i64 %25, 1
  %27 = or i64 %25, 2
  %28 = or i64 %25, 3
  %29 = or i64 %25, 4
  %30 = or i64 %25, 5
  %31 = or i64 %25, 6
  %32 = or i64 %25, 7
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %25
  %34 = getelementptr inbounds x86_fp80, ptr %9, i64 %26
  %35 = getelementptr inbounds x86_fp80, ptr %9, i64 %27
  %36 = getelementptr inbounds x86_fp80, ptr %9, i64 %28
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %29
  %38 = getelementptr inbounds x86_fp80, ptr %9, i64 %30
  %39 = getelementptr inbounds x86_fp80, ptr %9, i64 %31
  %40 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %41 = load x86_fp80, ptr %33, align 16, !tbaa !275
  %42 = load x86_fp80, ptr %34, align 16, !tbaa !275
  %43 = insertelement <2 x x86_fp80> poison, x86_fp80 %41, i64 0
  %44 = insertelement <2 x x86_fp80> %43, x86_fp80 %42, i64 1
  %45 = load x86_fp80, ptr %35, align 16, !tbaa !275
  %46 = load x86_fp80, ptr %36, align 16, !tbaa !275
  %47 = insertelement <2 x x86_fp80> poison, x86_fp80 %45, i64 0
  %48 = insertelement <2 x x86_fp80> %47, x86_fp80 %46, i64 1
  %49 = load x86_fp80, ptr %37, align 16, !tbaa !275
  %50 = load x86_fp80, ptr %38, align 16, !tbaa !275
  %51 = insertelement <2 x x86_fp80> poison, x86_fp80 %49, i64 0
  %52 = insertelement <2 x x86_fp80> %51, x86_fp80 %50, i64 1
  %53 = load x86_fp80, ptr %39, align 16, !tbaa !275
  %54 = load x86_fp80, ptr %40, align 16, !tbaa !275
  %55 = insertelement <2 x x86_fp80> poison, x86_fp80 %53, i64 0
  %56 = insertelement <2 x x86_fp80> %55, x86_fp80 %54, i64 1
  %57 = fptrunc <2 x x86_fp80> %44 to <2 x float>
  %58 = fptrunc <2 x x86_fp80> %48 to <2 x float>
  %59 = fptrunc <2 x x86_fp80> %52 to <2 x float>
  %60 = fptrunc <2 x x86_fp80> %56 to <2 x float>
  %61 = fmul <2 x float> %17, %57
  %62 = fmul <2 x float> %19, %58
  %63 = fmul <2 x float> %21, %59
  %64 = fmul <2 x float> %23, %60
  %65 = getelementptr inbounds float, ptr %11, i64 %25
  store <2 x float> %61, ptr %65, align 4, !tbaa !165
  %66 = getelementptr inbounds float, ptr %65, i64 2
  store <2 x float> %62, ptr %66, align 4, !tbaa !165
  %67 = getelementptr inbounds float, ptr %65, i64 4
  store <2 x float> %63, ptr %67, align 4, !tbaa !165
  %68 = getelementptr inbounds float, ptr %65, i64 6
  store <2 x float> %64, ptr %68, align 4, !tbaa !165
  %69 = add nuw i64 %25, 8
  %70 = icmp eq i64 %69, %15
  br i1 %70, label %71, label %24, !llvm.loop !325

71:                                               ; preds = %24
  %72 = icmp eq i64 %15, %12
  br i1 %72, label %75, label %73

73:                                               ; preds = %7, %71
  %74 = phi i64 [ 0, %7 ], [ %15, %71 ]
  br label %76

75:                                               ; preds = %76, %71, %3
  ret void

76:                                               ; preds = %73, %76
  %77 = phi i64 [ %83, %76 ], [ %74, %73 ]
  %78 = getelementptr inbounds x86_fp80, ptr %9, i64 %77
  %79 = load x86_fp80, ptr %78, align 16, !tbaa !275
  %80 = fptrunc x86_fp80 %79 to float
  %81 = fmul float %80, %1
  %82 = getelementptr inbounds float, ptr %11, i64 %77
  store float %81, ptr %82, align 4, !tbaa !165
  %83 = add nuw nsw i64 %77, 1
  %84 = icmp eq i64 %83, %12
  br i1 %84, label %75, label %76, !llvm.loop !326
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfE5scaleIeEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %74, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %11 = zext i32 %4 to i64
  %12 = icmp ult i32 %4, 8
  br i1 %12, label %72, label %13

13:                                               ; preds = %6
  %14 = and i64 %11, 4294967288
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %68, %15 ]
  %17 = or i64 %16, 1
  %18 = or i64 %16, 2
  %19 = or i64 %16, 3
  %20 = or i64 %16, 4
  %21 = or i64 %16, 5
  %22 = or i64 %16, 6
  %23 = or i64 %16, 7
  %24 = getelementptr inbounds x86_fp80, ptr %8, i64 %16
  %25 = getelementptr inbounds x86_fp80, ptr %8, i64 %17
  %26 = getelementptr inbounds x86_fp80, ptr %8, i64 %18
  %27 = getelementptr inbounds x86_fp80, ptr %8, i64 %19
  %28 = getelementptr inbounds x86_fp80, ptr %8, i64 %20
  %29 = getelementptr inbounds x86_fp80, ptr %8, i64 %21
  %30 = getelementptr inbounds x86_fp80, ptr %8, i64 %22
  %31 = getelementptr inbounds x86_fp80, ptr %8, i64 %23
  %32 = load x86_fp80, ptr %24, align 16, !tbaa !275
  %33 = load x86_fp80, ptr %25, align 16, !tbaa !275
  %34 = insertelement <2 x x86_fp80> poison, x86_fp80 %32, i64 0
  %35 = insertelement <2 x x86_fp80> %34, x86_fp80 %33, i64 1
  %36 = load x86_fp80, ptr %26, align 16, !tbaa !275
  %37 = load x86_fp80, ptr %27, align 16, !tbaa !275
  %38 = insertelement <2 x x86_fp80> poison, x86_fp80 %36, i64 0
  %39 = insertelement <2 x x86_fp80> %38, x86_fp80 %37, i64 1
  %40 = load x86_fp80, ptr %28, align 16, !tbaa !275
  %41 = load x86_fp80, ptr %29, align 16, !tbaa !275
  %42 = insertelement <2 x x86_fp80> poison, x86_fp80 %40, i64 0
  %43 = insertelement <2 x x86_fp80> %42, x86_fp80 %41, i64 1
  %44 = load x86_fp80, ptr %30, align 16, !tbaa !275
  %45 = load x86_fp80, ptr %31, align 16, !tbaa !275
  %46 = insertelement <2 x x86_fp80> poison, x86_fp80 %44, i64 0
  %47 = insertelement <2 x x86_fp80> %46, x86_fp80 %45, i64 1
  %48 = getelementptr inbounds float, ptr %10, i64 %16
  %49 = load <2 x float>, ptr %48, align 4, !tbaa !165
  %50 = getelementptr inbounds float, ptr %48, i64 2
  %51 = load <2 x float>, ptr %50, align 4, !tbaa !165
  %52 = getelementptr inbounds float, ptr %48, i64 4
  %53 = load <2 x float>, ptr %52, align 4, !tbaa !165
  %54 = getelementptr inbounds float, ptr %48, i64 6
  %55 = load <2 x float>, ptr %54, align 4, !tbaa !165
  %56 = fpext <2 x float> %49 to <2 x x86_fp80>
  %57 = fpext <2 x float> %51 to <2 x x86_fp80>
  %58 = fpext <2 x float> %53 to <2 x x86_fp80>
  %59 = fpext <2 x float> %55 to <2 x x86_fp80>
  %60 = fmul <2 x x86_fp80> %35, %56
  %61 = fmul <2 x x86_fp80> %39, %57
  %62 = fmul <2 x x86_fp80> %43, %58
  %63 = fmul <2 x x86_fp80> %47, %59
  %64 = fptrunc <2 x x86_fp80> %60 to <2 x float>
  %65 = fptrunc <2 x x86_fp80> %61 to <2 x float>
  %66 = fptrunc <2 x x86_fp80> %62 to <2 x float>
  %67 = fptrunc <2 x x86_fp80> %63 to <2 x float>
  store <2 x float> %64, ptr %48, align 4, !tbaa !165
  store <2 x float> %65, ptr %50, align 4, !tbaa !165
  store <2 x float> %66, ptr %52, align 4, !tbaa !165
  store <2 x float> %67, ptr %54, align 4, !tbaa !165
  %68 = add nuw i64 %16, 8
  %69 = icmp eq i64 %68, %14
  br i1 %69, label %70, label %15, !llvm.loop !327

70:                                               ; preds = %15
  %71 = icmp eq i64 %14, %11
  br i1 %71, label %74, label %72

72:                                               ; preds = %6, %70
  %73 = phi i64 [ 0, %6 ], [ %14, %70 ]
  br label %75

74:                                               ; preds = %75, %70, %2
  ret void

75:                                               ; preds = %72, %75
  %76 = phi i64 [ %84, %75 ], [ %73, %72 ]
  %77 = getelementptr inbounds x86_fp80, ptr %8, i64 %76
  %78 = load x86_fp80, ptr %77, align 16, !tbaa !275
  %79 = getelementptr inbounds float, ptr %10, i64 %76
  %80 = load float, ptr %79, align 4, !tbaa !165
  %81 = fpext float %80 to x86_fp80
  %82 = fmul x86_fp80 %78, %81
  %83 = fptrunc x86_fp80 %82 to float
  store float %83, ptr %79, align 4, !tbaa !165
  %84 = add nuw nsw i64 %76, 1
  %85 = icmp eq i64 %84, %11
  br i1 %85, label %74, label %75, !llvm.loop !328
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIeEeqIdEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = zext i32 %4 to i64
  %12 = load x86_fp80, ptr %8, align 16, !tbaa !275
  %13 = load double, ptr %10, align 8, !tbaa !26
  %14 = fpext double %13 to x86_fp80
  %15 = fcmp une x86_fp80 %12, %14
  br i1 %15, label %29, label %16

16:                                               ; preds = %6, %20
  %17 = phi i64 [ %18, %20 ], [ 0, %6 ]
  %18 = add nuw nsw i64 %17, 1
  %19 = icmp eq i64 %18, %11
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds x86_fp80, ptr %8, i64 %18
  %22 = load x86_fp80, ptr %21, align 16, !tbaa !275
  %23 = getelementptr inbounds double, ptr %10, i64 %18
  %24 = load double, ptr %23, align 8, !tbaa !26
  %25 = fpext double %24 to x86_fp80
  %26 = fcmp une x86_fp80 %22, %25
  br i1 %26, label %27, label %16

27:                                               ; preds = %16, %20
  %28 = icmp uge i64 %18, %11
  br label %29

29:                                               ; preds = %27, %6, %2
  %30 = phi i1 [ true, %2 ], [ false, %6 ], [ %28, %27 ]
  ret i1 %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorIeEmlIdEEeRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %48, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = zext i32 %4 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %4, 1
  br i1 %13, label %36, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, 4294967294
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %33, %16 ]
  %18 = phi x86_fp80 [ 0xK00000000000000000000, %14 ], [ %32, %16 ]
  %19 = phi i64 [ 0, %14 ], [ %34, %16 ]
  %20 = getelementptr inbounds x86_fp80, ptr %8, i64 %17
  %21 = load x86_fp80, ptr %20, align 16, !tbaa !275
  %22 = getelementptr inbounds double, ptr %10, i64 %17
  %23 = load double, ptr %22, align 8, !tbaa !26
  %24 = fpext double %23 to x86_fp80
  %25 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %21, x86_fp80 %24, x86_fp80 %18)
  %26 = or i64 %17, 1
  %27 = getelementptr inbounds x86_fp80, ptr %8, i64 %26
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !275
  %29 = getelementptr inbounds double, ptr %10, i64 %26
  %30 = load double, ptr %29, align 8, !tbaa !26
  %31 = fpext double %30 to x86_fp80
  %32 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %28, x86_fp80 %31, x86_fp80 %25)
  %33 = add nuw nsw i64 %17, 2
  %34 = add i64 %19, 2
  %35 = icmp eq i64 %34, %15
  br i1 %35, label %36, label %16

36:                                               ; preds = %16, %6
  %37 = phi x86_fp80 [ undef, %6 ], [ %32, %16 ]
  %38 = phi i64 [ 0, %6 ], [ %33, %16 ]
  %39 = phi x86_fp80 [ 0xK00000000000000000000, %6 ], [ %32, %16 ]
  %40 = icmp eq i64 %12, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds x86_fp80, ptr %8, i64 %38
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !275
  %44 = getelementptr inbounds double, ptr %10, i64 %38
  %45 = load double, ptr %44, align 8, !tbaa !26
  %46 = fpext double %45 to x86_fp80
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %46, x86_fp80 %39)
  br label %48

48:                                               ; preds = %41, %36, %2
  %49 = phi x86_fp80 [ 0xK00000000000000000000, %2 ], [ %37, %36 ], [ %47, %41 ]
  ret x86_fp80 %49
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE6reinitIdEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE3equIdEEveRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !24
  %10 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !274
  %12 = zext i32 %5 to i64
  %13 = and i64 %12, 1
  %14 = icmp eq i32 %5, 1
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = and i64 %12, 4294967294
  br label %27

17:                                               ; preds = %27, %7
  %18 = phi i64 [ 0, %7 ], [ %41, %27 ]
  %19 = icmp eq i64 %13, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds double, ptr %9, i64 %18
  %22 = load double, ptr %21, align 8, !tbaa !26
  %23 = fpext double %22 to x86_fp80
  %24 = fmul x86_fp80 %23, %1
  %25 = getelementptr inbounds x86_fp80, ptr %11, i64 %18
  store x86_fp80 %24, ptr %25, align 16, !tbaa !275
  br label %26

26:                                               ; preds = %20, %17, %3
  ret void

27:                                               ; preds = %27, %15
  %28 = phi i64 [ 0, %15 ], [ %41, %27 ]
  %29 = phi i64 [ 0, %15 ], [ %42, %27 ]
  %30 = getelementptr inbounds double, ptr %9, i64 %28
  %31 = load double, ptr %30, align 8, !tbaa !26
  %32 = fpext double %31 to x86_fp80
  %33 = fmul x86_fp80 %32, %1
  %34 = getelementptr inbounds x86_fp80, ptr %11, i64 %28
  store x86_fp80 %33, ptr %34, align 16, !tbaa !275
  %35 = or i64 %28, 1
  %36 = getelementptr inbounds double, ptr %9, i64 %35
  %37 = load double, ptr %36, align 8, !tbaa !26
  %38 = fpext double %37 to x86_fp80
  %39 = fmul x86_fp80 %38, %1
  %40 = getelementptr inbounds x86_fp80, ptr %11, i64 %35
  store x86_fp80 %39, ptr %40, align 16, !tbaa !275
  %41 = add nuw nsw i64 %28, 2
  %42 = add i64 %29, 2
  %43 = icmp eq i64 %42, %16
  br i1 %43, label %17, label %27
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE5scaleIdEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !24
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = zext i32 %4 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %4, 1
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, 4294967294
  br label %27

16:                                               ; preds = %27, %6
  %17 = phi i64 [ 0, %6 ], [ %43, %27 ]
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds double, ptr %8, i64 %17
  %21 = load double, ptr %20, align 8, !tbaa !26
  %22 = fpext double %21 to x86_fp80
  %23 = getelementptr inbounds x86_fp80, ptr %10, i64 %17
  %24 = load x86_fp80, ptr %23, align 16, !tbaa !275
  %25 = fmul x86_fp80 %24, %22
  store x86_fp80 %25, ptr %23, align 16, !tbaa !275
  br label %26

26:                                               ; preds = %19, %16, %2
  ret void

27:                                               ; preds = %27, %14
  %28 = phi i64 [ 0, %14 ], [ %43, %27 ]
  %29 = phi i64 [ 0, %14 ], [ %44, %27 ]
  %30 = getelementptr inbounds double, ptr %8, i64 %28
  %31 = load double, ptr %30, align 8, !tbaa !26
  %32 = fpext double %31 to x86_fp80
  %33 = getelementptr inbounds x86_fp80, ptr %10, i64 %28
  %34 = load x86_fp80, ptr %33, align 16, !tbaa !275
  %35 = fmul x86_fp80 %34, %32
  store x86_fp80 %35, ptr %33, align 16, !tbaa !275
  %36 = or i64 %28, 1
  %37 = getelementptr inbounds double, ptr %8, i64 %36
  %38 = load double, ptr %37, align 8, !tbaa !26
  %39 = fpext double %38 to x86_fp80
  %40 = getelementptr inbounds x86_fp80, ptr %10, i64 %36
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !275
  %42 = fmul x86_fp80 %41, %39
  store x86_fp80 %42, ptr %40, align 16, !tbaa !275
  %43 = add nuw nsw i64 %28, 2
  %44 = add i64 %29, 2
  %45 = icmp eq i64 %44, %15
  br i1 %45, label %16, label %27
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIeEeqIfEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %11 = zext i32 %4 to i64
  %12 = load x86_fp80, ptr %8, align 16, !tbaa !275
  %13 = load float, ptr %10, align 4, !tbaa !165
  %14 = fpext float %13 to x86_fp80
  %15 = fcmp une x86_fp80 %12, %14
  br i1 %15, label %29, label %16

16:                                               ; preds = %6, %20
  %17 = phi i64 [ %18, %20 ], [ 0, %6 ]
  %18 = add nuw nsw i64 %17, 1
  %19 = icmp eq i64 %18, %11
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds x86_fp80, ptr %8, i64 %18
  %22 = load x86_fp80, ptr %21, align 16, !tbaa !275
  %23 = getelementptr inbounds float, ptr %10, i64 %18
  %24 = load float, ptr %23, align 4, !tbaa !165
  %25 = fpext float %24 to x86_fp80
  %26 = fcmp une x86_fp80 %22, %25
  br i1 %26, label %27, label %16

27:                                               ; preds = %16, %20
  %28 = icmp uge i64 %18, %11
  br label %29

29:                                               ; preds = %27, %6, %2
  %30 = phi i1 [ true, %2 ], [ false, %6 ], [ %28, %27 ]
  ret i1 %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorIeEmlIfEEeRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %48, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %11 = zext i32 %4 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %4, 1
  br i1 %13, label %36, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, 4294967294
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %33, %16 ]
  %18 = phi x86_fp80 [ 0xK00000000000000000000, %14 ], [ %32, %16 ]
  %19 = phi i64 [ 0, %14 ], [ %34, %16 ]
  %20 = getelementptr inbounds x86_fp80, ptr %8, i64 %17
  %21 = load x86_fp80, ptr %20, align 16, !tbaa !275
  %22 = getelementptr inbounds float, ptr %10, i64 %17
  %23 = load float, ptr %22, align 4, !tbaa !165
  %24 = fpext float %23 to x86_fp80
  %25 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %21, x86_fp80 %24, x86_fp80 %18)
  %26 = or i64 %17, 1
  %27 = getelementptr inbounds x86_fp80, ptr %8, i64 %26
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !275
  %29 = getelementptr inbounds float, ptr %10, i64 %26
  %30 = load float, ptr %29, align 4, !tbaa !165
  %31 = fpext float %30 to x86_fp80
  %32 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %28, x86_fp80 %31, x86_fp80 %25)
  %33 = add nuw nsw i64 %17, 2
  %34 = add i64 %19, 2
  %35 = icmp eq i64 %34, %15
  br i1 %35, label %36, label %16

36:                                               ; preds = %16, %6
  %37 = phi x86_fp80 [ undef, %6 ], [ %32, %16 ]
  %38 = phi i64 [ 0, %6 ], [ %33, %16 ]
  %39 = phi x86_fp80 [ 0xK00000000000000000000, %6 ], [ %32, %16 ]
  %40 = icmp eq i64 %12, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds x86_fp80, ptr %8, i64 %38
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !275
  %44 = getelementptr inbounds float, ptr %10, i64 %38
  %45 = load float, ptr %44, align 4, !tbaa !165
  %46 = fpext float %45 to x86_fp80
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %46, x86_fp80 %39)
  br label %48

48:                                               ; preds = %41, %36, %2
  %49 = phi x86_fp80 [ 0xK00000000000000000000, %2 ], [ %37, %36 ], [ %47, %41 ]
  ret x86_fp80 %49
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE6reinitIfEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE3equIfEEveRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.8", ptr %2, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !164
  %10 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !274
  %12 = zext i32 %5 to i64
  %13 = and i64 %12, 1
  %14 = icmp eq i32 %5, 1
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = and i64 %12, 4294967294
  br label %27

17:                                               ; preds = %27, %7
  %18 = phi i64 [ 0, %7 ], [ %41, %27 ]
  %19 = icmp eq i64 %13, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds float, ptr %9, i64 %18
  %22 = load float, ptr %21, align 4, !tbaa !165
  %23 = fpext float %22 to x86_fp80
  %24 = fmul x86_fp80 %23, %1
  %25 = getelementptr inbounds x86_fp80, ptr %11, i64 %18
  store x86_fp80 %24, ptr %25, align 16, !tbaa !275
  br label %26

26:                                               ; preds = %20, %17, %3
  ret void

27:                                               ; preds = %27, %15
  %28 = phi i64 [ 0, %15 ], [ %41, %27 ]
  %29 = phi i64 [ 0, %15 ], [ %42, %27 ]
  %30 = getelementptr inbounds float, ptr %9, i64 %28
  %31 = load float, ptr %30, align 4, !tbaa !165
  %32 = fpext float %31 to x86_fp80
  %33 = fmul x86_fp80 %32, %1
  %34 = getelementptr inbounds x86_fp80, ptr %11, i64 %28
  store x86_fp80 %33, ptr %34, align 16, !tbaa !275
  %35 = or i64 %28, 1
  %36 = getelementptr inbounds float, ptr %9, i64 %35
  %37 = load float, ptr %36, align 4, !tbaa !165
  %38 = fpext float %37 to x86_fp80
  %39 = fmul x86_fp80 %38, %1
  %40 = getelementptr inbounds x86_fp80, ptr %11, i64 %35
  store x86_fp80 %39, ptr %40, align 16, !tbaa !275
  %41 = add nuw nsw i64 %28, 2
  %42 = add i64 %29, 2
  %43 = icmp eq i64 %42, %16
  br i1 %43, label %17, label %27
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE5scaleIfEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !164
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = zext i32 %4 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %4, 1
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, 4294967294
  br label %27

16:                                               ; preds = %27, %6
  %17 = phi i64 [ 0, %6 ], [ %43, %27 ]
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds float, ptr %8, i64 %17
  %21 = load float, ptr %20, align 4, !tbaa !165
  %22 = fpext float %21 to x86_fp80
  %23 = getelementptr inbounds x86_fp80, ptr %10, i64 %17
  %24 = load x86_fp80, ptr %23, align 16, !tbaa !275
  %25 = fmul x86_fp80 %24, %22
  store x86_fp80 %25, ptr %23, align 16, !tbaa !275
  br label %26

26:                                               ; preds = %19, %16, %2
  ret void

27:                                               ; preds = %27, %14
  %28 = phi i64 [ 0, %14 ], [ %43, %27 ]
  %29 = phi i64 [ 0, %14 ], [ %44, %27 ]
  %30 = getelementptr inbounds float, ptr %8, i64 %28
  %31 = load float, ptr %30, align 4, !tbaa !165
  %32 = fpext float %31 to x86_fp80
  %33 = getelementptr inbounds x86_fp80, ptr %10, i64 %28
  %34 = load x86_fp80, ptr %33, align 16, !tbaa !275
  %35 = fmul x86_fp80 %34, %32
  store x86_fp80 %35, ptr %33, align 16, !tbaa !275
  %36 = or i64 %28, 1
  %37 = getelementptr inbounds float, ptr %8, i64 %36
  %38 = load float, ptr %37, align 4, !tbaa !165
  %39 = fpext float %38 to x86_fp80
  %40 = getelementptr inbounds x86_fp80, ptr %10, i64 %36
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !275
  %42 = fmul x86_fp80 %41, %39
  store x86_fp80 %42, ptr %40, align 16, !tbaa !275
  %43 = add nuw nsw i64 %28, 2
  %44 = add i64 %29, 2
  %45 = icmp eq i64 %44, %15
  br i1 %45, label %16, label %27
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorIeEeqIeEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = zext i32 %4 to i64
  %12 = load x86_fp80, ptr %8, align 16, !tbaa !275
  %13 = load x86_fp80, ptr %10, align 16, !tbaa !275
  %14 = fcmp une x86_fp80 %12, %13
  br i1 %14, label %27, label %15

15:                                               ; preds = %6, %19
  %16 = phi i64 [ %17, %19 ], [ 0, %6 ]
  %17 = add nuw nsw i64 %16, 1
  %18 = icmp eq i64 %17, %11
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds x86_fp80, ptr %8, i64 %17
  %21 = load x86_fp80, ptr %20, align 16, !tbaa !275
  %22 = getelementptr inbounds x86_fp80, ptr %10, i64 %17
  %23 = load x86_fp80, ptr %22, align 16, !tbaa !275
  %24 = fcmp une x86_fp80 %21, %23
  br i1 %24, label %25, label %15

25:                                               ; preds = %15, %19
  %26 = icmp uge i64 %17, %11
  br label %27

27:                                               ; preds = %25, %6, %2
  %28 = phi i1 [ true, %2 ], [ false, %6 ], [ %26, %25 ]
  ret i1 %28
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorIeEmlIeEEeRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq ptr %0, %1
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  %6 = icmp eq i32 %5, 0
  br i1 %3, label %18, label %7

7:                                                ; preds = %2
  br i1 %6, label %98, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !274
  %13 = zext i32 %5 to i64
  %14 = and i64 %13, 1
  %15 = icmp eq i32 %5, 1
  br i1 %15, label %87, label %16

16:                                               ; preds = %8
  %17 = and i64 %13, 4294967294
  br label %53

18:                                               ; preds = %2
  br i1 %6, label %98, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !274
  %22 = zext i32 %5 to i64
  %23 = and i64 %22, 3
  %24 = icmp ult i32 %5, 4
  br i1 %24, label %71, label %25

25:                                               ; preds = %19
  %26 = and i64 %22, 4294967292
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ 0, %25 ], [ %50, %27 ]
  %29 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %49, %27 ]
  %30 = phi i64 [ 0, %25 ], [ %51, %27 ]
  %31 = getelementptr inbounds x86_fp80, ptr %21, i64 %28
  %32 = load x86_fp80, ptr %31, align 16, !tbaa !275
  %33 = fmul x86_fp80 %32, %32
  %34 = fadd x86_fp80 %29, %33
  %35 = or i64 %28, 1
  %36 = getelementptr inbounds x86_fp80, ptr %21, i64 %35
  %37 = load x86_fp80, ptr %36, align 16, !tbaa !275
  %38 = fmul x86_fp80 %37, %37
  %39 = fadd x86_fp80 %34, %38
  %40 = or i64 %28, 2
  %41 = getelementptr inbounds x86_fp80, ptr %21, i64 %40
  %42 = load x86_fp80, ptr %41, align 16, !tbaa !275
  %43 = fmul x86_fp80 %42, %42
  %44 = fadd x86_fp80 %39, %43
  %45 = or i64 %28, 3
  %46 = getelementptr inbounds x86_fp80, ptr %21, i64 %45
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !275
  %48 = fmul x86_fp80 %47, %47
  %49 = fadd x86_fp80 %44, %48
  %50 = add nuw nsw i64 %28, 4
  %51 = add i64 %30, 4
  %52 = icmp eq i64 %51, %26
  br i1 %52, label %71, label %27

53:                                               ; preds = %53, %16
  %54 = phi i64 [ 0, %16 ], [ %68, %53 ]
  %55 = phi x86_fp80 [ 0xK00000000000000000000, %16 ], [ %67, %53 ]
  %56 = phi i64 [ 0, %16 ], [ %69, %53 ]
  %57 = getelementptr inbounds x86_fp80, ptr %10, i64 %54
  %58 = load x86_fp80, ptr %57, align 16, !tbaa !275
  %59 = getelementptr inbounds x86_fp80, ptr %12, i64 %54
  %60 = load x86_fp80, ptr %59, align 16, !tbaa !275
  %61 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %58, x86_fp80 %60, x86_fp80 %55)
  %62 = or i64 %54, 1
  %63 = getelementptr inbounds x86_fp80, ptr %10, i64 %62
  %64 = load x86_fp80, ptr %63, align 16, !tbaa !275
  %65 = getelementptr inbounds x86_fp80, ptr %12, i64 %62
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !275
  %67 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %64, x86_fp80 %66, x86_fp80 %61)
  %68 = add nuw nsw i64 %54, 2
  %69 = add i64 %56, 2
  %70 = icmp eq i64 %69, %17
  br i1 %70, label %87, label %53

71:                                               ; preds = %27, %19
  %72 = phi x86_fp80 [ undef, %19 ], [ %49, %27 ]
  %73 = phi i64 [ 0, %19 ], [ %50, %27 ]
  %74 = phi x86_fp80 [ 0xK00000000000000000000, %19 ], [ %49, %27 ]
  %75 = icmp eq i64 %23, 0
  br i1 %75, label %98, label %76

76:                                               ; preds = %71, %76
  %77 = phi i64 [ %84, %76 ], [ %73, %71 ]
  %78 = phi x86_fp80 [ %83, %76 ], [ %74, %71 ]
  %79 = phi i64 [ %85, %76 ], [ 0, %71 ]
  %80 = getelementptr inbounds x86_fp80, ptr %21, i64 %77
  %81 = load x86_fp80, ptr %80, align 16, !tbaa !275
  %82 = fmul x86_fp80 %81, %81
  %83 = fadd x86_fp80 %78, %82
  %84 = add nuw nsw i64 %77, 1
  %85 = add i64 %79, 1
  %86 = icmp eq i64 %85, %23
  br i1 %86, label %98, label %76, !llvm.loop !329

87:                                               ; preds = %53, %8
  %88 = phi x86_fp80 [ undef, %8 ], [ %67, %53 ]
  %89 = phi i64 [ 0, %8 ], [ %68, %53 ]
  %90 = phi x86_fp80 [ 0xK00000000000000000000, %8 ], [ %67, %53 ]
  %91 = icmp eq i64 %14, 0
  br i1 %91, label %98, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds x86_fp80, ptr %10, i64 %89
  %94 = load x86_fp80, ptr %93, align 16, !tbaa !275
  %95 = getelementptr inbounds x86_fp80, ptr %12, i64 %89
  %96 = load x86_fp80, ptr %95, align 16, !tbaa !275
  %97 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %94, x86_fp80 %96, x86_fp80 %90)
  br label %98

98:                                               ; preds = %92, %87, %71, %76, %7, %18
  %99 = phi x86_fp80 [ 0xK00000000000000000000, %18 ], [ 0xK00000000000000000000, %7 ], [ %72, %71 ], [ %83, %76 ], [ %88, %87 ], [ %97, %92 ]
  ret x86_fp80 %99
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE6reinitIeEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE3equIeEEveRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.16", ptr %2, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !274
  %10 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !274
  %12 = zext i32 %5 to i64
  %13 = and i64 %12, 1
  %14 = icmp eq i32 %5, 1
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = and i64 %12, 4294967294
  br label %26

17:                                               ; preds = %26, %7
  %18 = phi i64 [ 0, %7 ], [ %38, %26 ]
  %19 = icmp eq i64 %13, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %22 = load x86_fp80, ptr %21, align 16, !tbaa !275
  %23 = fmul x86_fp80 %22, %1
  %24 = getelementptr inbounds x86_fp80, ptr %11, i64 %18
  store x86_fp80 %23, ptr %24, align 16, !tbaa !275
  br label %25

25:                                               ; preds = %20, %17, %3
  ret void

26:                                               ; preds = %26, %15
  %27 = phi i64 [ 0, %15 ], [ %38, %26 ]
  %28 = phi i64 [ 0, %15 ], [ %39, %26 ]
  %29 = getelementptr inbounds x86_fp80, ptr %9, i64 %27
  %30 = load x86_fp80, ptr %29, align 16, !tbaa !275
  %31 = fmul x86_fp80 %30, %1
  %32 = getelementptr inbounds x86_fp80, ptr %11, i64 %27
  store x86_fp80 %31, ptr %32, align 16, !tbaa !275
  %33 = or i64 %27, 1
  %34 = getelementptr inbounds x86_fp80, ptr %9, i64 %33
  %35 = load x86_fp80, ptr %34, align 16, !tbaa !275
  %36 = fmul x86_fp80 %35, %1
  %37 = getelementptr inbounds x86_fp80, ptr %11, i64 %33
  store x86_fp80 %36, ptr %37, align 16, !tbaa !275
  %38 = add nuw nsw i64 %27, 2
  %39 = add i64 %28, 2
  %40 = icmp eq i64 %39, %16
  br i1 %40, label %17, label %26
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeE5scaleIeEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !274
  %9 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !274
  %11 = zext i32 %4 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %4, 1
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = and i64 %11, 4294967294
  br label %26

16:                                               ; preds = %26, %6
  %17 = phi i64 [ 0, %6 ], [ %40, %26 ]
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds x86_fp80, ptr %8, i64 %17
  %21 = load x86_fp80, ptr %20, align 16, !tbaa !275
  %22 = getelementptr inbounds x86_fp80, ptr %10, i64 %17
  %23 = load x86_fp80, ptr %22, align 16, !tbaa !275
  %24 = fmul x86_fp80 %21, %23
  store x86_fp80 %24, ptr %22, align 16, !tbaa !275
  br label %25

25:                                               ; preds = %19, %16, %2
  ret void

26:                                               ; preds = %26, %14
  %27 = phi i64 [ 0, %14 ], [ %40, %26 ]
  %28 = phi i64 [ 0, %14 ], [ %41, %26 ]
  %29 = getelementptr inbounds x86_fp80, ptr %8, i64 %27
  %30 = load x86_fp80, ptr %29, align 16, !tbaa !275
  %31 = getelementptr inbounds x86_fp80, ptr %10, i64 %27
  %32 = load x86_fp80, ptr %31, align 16, !tbaa !275
  %33 = fmul x86_fp80 %30, %32
  store x86_fp80 %33, ptr %31, align 16, !tbaa !275
  %34 = or i64 %27, 1
  %35 = getelementptr inbounds x86_fp80, ptr %8, i64 %34
  %36 = load x86_fp80, ptr %35, align 16, !tbaa !275
  %37 = getelementptr inbounds x86_fp80, ptr %10, i64 %34
  %38 = load x86_fp80, ptr %37, align 16, !tbaa !275
  %39 = fmul x86_fp80 %36, %38
  store x86_fp80 %39, ptr %37, align 16, !tbaa !275
  %40 = add nuw nsw i64 %27, 2
  %41 = add i64 %28, 2
  %42 = icmp eq i64 %41, %15
  br i1 %42, label %16, label %26
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEEC2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorISt7complexIdEEC5Ev) align 2 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIdEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorISt7complexIdEEC5ERKS3_) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIdEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !330
  store i32 %5, ptr %3, align 8, !tbaa !330
  %6 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 2
  %7 = load i32, ptr %4, align 8, !tbaa !330
  store i32 %7, ptr %6, align 4, !tbaa !332
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  store ptr null, ptr %8, align 8, !tbaa !333
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %2
  %11 = zext i32 %7 to i64
  %12 = shl nuw nsw i64 %11, 4
  %13 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %12) #22
          to label %14 unwind label %23

14:                                               ; preds = %10
  %15 = icmp eq i32 %7, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %14
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %13, i8 0, i64 %12, i1 false), !tbaa !26
  store ptr %13, ptr %8, align 8, !tbaa !333
  %17 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !333
  %19 = icmp eq i32 %7, 1
  br i1 %19, label %22, label %20, !prof !334

20:                                               ; preds = %16
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %13, ptr align 8 %18, i64 %12, i1 false)
  br label %25

21:                                               ; preds = %14
  store ptr %13, ptr %8, align 8, !tbaa !333
  br label %25

22:                                               ; preds = %16
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false), !tbaa.struct !335
  br label %25

23:                                               ; preds = %10
  %24 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %26 unwind label %27

25:                                               ; preds = %21, %22, %20, %2
  ret void

26:                                               ; preds = %23
  resume { ptr, i32 } %24

27:                                               ; preds = %23
  %28 = landingpad { ptr, i32 }
          catch ptr null
  %29 = extractvalue { ptr, i32 } %28, 0
  tail call void @__clang_call_terminate(ptr %29) #23
  unreachable
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii6VectorISt7complexIdEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !330
  ret i32 %3
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii6VectorISt7complexIdEE5beginEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !333
  ret ptr %3
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii6VectorISt7complexIdEE3endEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !333
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !330
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::complex", ptr %3, i64 %6
  ret ptr %7
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZN6dealii6VectorISt7complexIdEE5beginEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !333
  ret ptr %3
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEEC2Ej(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) unnamed_addr #0 comdat($_ZN6dealii6VectorISt7complexIdEEC5Ej) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIdEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = zext i32 %1 to i64
  %7 = shl nuw nsw i64 %6, 4
  %8 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %7) #22
          to label %9 unwind label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 2
  store ptr %8, ptr %10, align 8, !tbaa !333
  store i32 %1, ptr %11, align 4, !tbaa !332
  store i32 %1, ptr %3, align 8, !tbaa !330
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %8, i8 0, i64 %7, i1 false)
  br label %12

12:                                               ; preds = %2, %9
  ret void

13:                                               ; preds = %5
  %14 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %15 unwind label %16

15:                                               ; preds = %13
  resume { ptr, i32 } %14

16:                                               ; preds = %13
  %17 = landingpad { ptr, i32 }
          catch ptr null
  %18 = extractvalue { ptr, i32 } %17, 0
  tail call void @__clang_call_terminate(ptr %18) #23
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorISt7complexIdEED5Ev) align 2 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIdEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !333
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #25
  store ptr null, ptr %2, align 8, !tbaa !333
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorISt7complexIdEED5Ev) align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIdEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !333
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #25
  store ptr null, ptr %2, align 8, !tbaa !333
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  resume { ptr, i32 } %9
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIdEE8compressEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE6reinitEjb(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !333
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(ptr noundef nonnull %7) #25
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  br label %32

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !332
  %15 = icmp ult i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !333
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %18) #25
  br label %21

21:                                               ; preds = %20, %16
  %22 = zext i32 %1 to i64
  %23 = shl nuw nsw i64 %22, 4
  %24 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %23) #22
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %24, i8 0, i64 %23, i1 false), !tbaa !26
  store ptr %24, ptr %17, align 8, !tbaa !333
  store i32 %1, ptr %13, align 4, !tbaa !332
  br label %25

25:                                               ; preds = %21, %12
  %26 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  store i32 %1, ptr %26, align 8, !tbaa !330
  br i1 %2, label %32, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !333
  %30 = zext i32 %1 to i64
  %31 = shl nuw nsw i64 %30, 4
  tail call void @llvm.memset.p0.i64(ptr align 8 %29, i8 0, i64 %31, i1 false)
  br label %32

32:                                               ; preds = %27, %10, %25
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIdEEaSES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !330
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !333
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds %"class.std::complex", ptr %9, i64 %10
  br label %12

12:                                               ; preds = %7, %12
  %13 = phi ptr [ %15, %12 ], [ %9, %7 ]
  store double %1, ptr %13, align 8, !tbaa.struct !335
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store double %2, ptr %14, align 8, !tbaa.struct !336
  %15 = getelementptr inbounds %"class.std::complex", ptr %13, i64 1
  %16 = icmp eq ptr %15, %11
  br i1 %16, label %17, label %12

17:                                               ; preds = %12, %3
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE4swapERS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !32
  %6 = load i32, ptr %4, align 8, !tbaa !32
  store i32 %6, ptr %3, align 8, !tbaa !32
  store i32 %5, ptr %4, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 2
  %9 = load i32, ptr %7, align 4, !tbaa !32
  %10 = load i32, ptr %8, align 4, !tbaa !32
  store i32 %10, ptr %7, align 4, !tbaa !32
  store i32 %9, ptr %8, align 4, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %11, align 8, !tbaa !33
  %14 = load ptr, ptr %12, align 8, !tbaa !33
  store ptr %14, ptr %11, align 8, !tbaa !33
  store ptr %13, ptr %12, align 8, !tbaa !33
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZN6dealii6VectorISt7complexIdEE3endEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !333
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !330
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::complex", ptr %3, i64 %6
  ret ptr %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIdEEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !330
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !330
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !333
  %19 = load i32, ptr %3, align 8, !tbaa !330
  %20 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !333
  %22 = icmp ugt i32 %19, 1
  br i1 %22, label %23, label %26, !prof !25

23:                                               ; preds = %16
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 4
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %21, ptr align 8 %18, i64 %25, i1 false)
  br label %29

26:                                               ; preds = %16
  %27 = icmp eq i32 %19, 1
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %21, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false), !tbaa.struct !335
  br label %29

29:                                               ; preds = %28, %26, %23, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIdEEaSERKNS_11BlockVectorIS2_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::BlockVectorBase.26", ptr %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.26", ptr %1, i64 0, i32 2, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !34
  %6 = zext i32 %5 to i64
  %7 = load ptr, ptr %4, align 8, !tbaa !40
  %8 = getelementptr inbounds i32, ptr %7, i64 %6
  %9 = load i32, ptr %8, align 4, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !330
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = load ptr, ptr %0, align 8, !tbaa !5
  %15 = getelementptr inbounds ptr, ptr %14, i64 2
  %16 = load ptr, ptr %15, align 8
  tail call void %16(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %9, i1 noundef zeroext true)
  %17 = load i32, ptr %3, align 8, !tbaa !34
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi i32 [ %17, %13 ], [ %5, %2 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.dealii::BlockVectorBase.26", ptr %1, i64 0, i32 1
  %23 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %22, align 8, !tbaa !337
  br label %25

25:                                               ; preds = %21, %36
  %26 = phi i32 [ %19, %21 ], [ %37, %36 ]
  %27 = phi ptr [ %24, %21 ], [ %38, %36 ]
  %28 = phi i64 [ 0, %21 ], [ %40, %36 ]
  %29 = phi i32 [ 0, %21 ], [ %39, %36 ]
  %30 = getelementptr inbounds %"class.dealii::Vector.24", ptr %27, i64 %28, i32 1
  %31 = load i32, ptr %30, align 8, !tbaa !330
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %43

33:                                               ; preds = %36, %18
  ret ptr %0

34:                                               ; preds = %43
  %35 = load i32, ptr %3, align 8, !tbaa !34
  br label %36

36:                                               ; preds = %34, %25
  %37 = phi i32 [ %26, %25 ], [ %35, %34 ]
  %38 = phi ptr [ %27, %25 ], [ %56, %34 ]
  %39 = phi i32 [ %29, %25 ], [ %55, %34 ]
  %40 = add nuw nsw i64 %28, 1
  %41 = zext i32 %37 to i64
  %42 = icmp ult i64 %40, %41
  br i1 %42, label %25, label %33

43:                                               ; preds = %25, %43
  %44 = phi i64 [ %54, %43 ], [ 0, %25 ]
  %45 = phi ptr [ %56, %43 ], [ %27, %25 ]
  %46 = phi i32 [ %55, %43 ], [ %29, %25 ]
  %47 = getelementptr inbounds %"class.dealii::Vector.24", ptr %45, i64 %28, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !333
  %49 = getelementptr inbounds %"class.std::complex", ptr %48, i64 %44
  %50 = load ptr, ptr %23, align 8, !tbaa !333
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds %"class.std::complex", ptr %50, i64 %51
  %53 = load <2 x double>, ptr %49, align 8
  store <2 x double> %53, ptr %52, align 8
  %54 = add nuw nsw i64 %44, 1
  %55 = add i32 %46, 1
  %56 = load ptr, ptr %22, align 8, !tbaa !337
  %57 = getelementptr inbounds %"class.dealii::Vector.24", ptr %56, i64 %28, i32 1
  %58 = load i32, ptr %57, align 8, !tbaa !330
  %59 = zext i32 %58 to i64
  %60 = icmp ult i64 %54, %59
  br i1 %60, label %43, label %34
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local { double, double } @_ZNK6dealii6VectorISt7complexIdEEclEj(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !333
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.std::complex", ptr %4, i64 %5
  %7 = load double, ptr %6, align 8, !tbaa.struct !335
  %8 = getelementptr inbounds i8, ptr %6, i64 8
  %9 = load double, ptr %8, align 8, !tbaa.struct !336
  %10 = insertvalue { double, double } poison, double %7, 0
  %11 = insertvalue { double, double } %10, double %9, 1
  ret { double, double } %11
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #15

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorISt7complexIdEE8norm_sqrEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !330
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !333
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 1
  %10 = icmp eq i32 %3, 1
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967294
  br label %28

13:                                               ; preds = %28, %5
  %14 = phi double [ undef, %5 ], [ %46, %28 ]
  %15 = phi i64 [ 0, %5 ], [ %47, %28 ]
  %16 = phi double [ 0.000000e+00, %5 ], [ %46, %28 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::complex", ptr %7, i64 %15
  %20 = load double, ptr %19, align 8, !tbaa !26
  %21 = getelementptr inbounds { double, double }, ptr %19, i64 0, i32 1
  %22 = load double, ptr %21, align 8, !tbaa !26
  %23 = fmul double %22, %22
  %24 = tail call double @llvm.fmuladd.f64(double %20, double %20, double %23)
  %25 = fadd double %16, %24
  br label %26

26:                                               ; preds = %18, %13, %1
  %27 = phi double [ 0.000000e+00, %1 ], [ %14, %13 ], [ %25, %18 ]
  ret double %27

28:                                               ; preds = %28, %11
  %29 = phi i64 [ 0, %11 ], [ %47, %28 ]
  %30 = phi double [ 0.000000e+00, %11 ], [ %46, %28 ]
  %31 = phi i64 [ 0, %11 ], [ %48, %28 ]
  %32 = getelementptr inbounds %"class.std::complex", ptr %7, i64 %29
  %33 = load double, ptr %32, align 8, !tbaa !26
  %34 = getelementptr inbounds { double, double }, ptr %32, i64 0, i32 1
  %35 = load double, ptr %34, align 8, !tbaa !26
  %36 = fmul double %35, %35
  %37 = tail call double @llvm.fmuladd.f64(double %33, double %33, double %36)
  %38 = fadd double %30, %37
  %39 = or i64 %29, 1
  %40 = getelementptr inbounds %"class.std::complex", ptr %7, i64 %39
  %41 = load double, ptr %40, align 8, !tbaa !26
  %42 = getelementptr inbounds { double, double }, ptr %40, i64 0, i32 1
  %43 = load double, ptr %42, align 8, !tbaa !26
  %44 = fmul double %43, %43
  %45 = tail call double @llvm.fmuladd.f64(double %41, double %41, double %44)
  %46 = fadd double %38, %45
  %47 = add nuw nsw i64 %29, 2
  %48 = add i64 %31, 2
  %49 = icmp eq i64 %48, %12
  br i1 %49, label %13, label %28
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local { double, double } @_ZNK6dealii6VectorISt7complexIdEE10mean_valueEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !330
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !333
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 3
  %10 = icmp ult i32 %3, 4
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967292
  br label %38

13:                                               ; preds = %38, %5
  %14 = phi <2 x double> [ undef, %5 ], [ %56, %38 ]
  %15 = phi i64 [ 0, %5 ], [ %57, %38 ]
  %16 = phi <2 x double> [ zeroinitializer, %5 ], [ %56, %38 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %25, %18 ], [ %15, %13 ]
  %20 = phi <2 x double> [ %24, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %26, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds %"class.std::complex", ptr %7, i64 %19
  %23 = load <2 x double>, ptr %22, align 8
  %24 = fadd <2 x double> %20, %23
  %25 = add nuw nsw i64 %19, 1
  %26 = add i64 %21, 1
  %27 = icmp eq i64 %26, %9
  br i1 %27, label %28, label %18, !llvm.loop !339

28:                                               ; preds = %13, %18, %1
  %29 = phi <2 x double> [ zeroinitializer, %1 ], [ %14, %13 ], [ %24, %18 ]
  %30 = uitofp i32 %3 to double
  %31 = insertelement <2 x double> poison, double %30, i64 0
  %32 = shufflevector <2 x double> %31, <2 x double> poison, <2 x i32> zeroinitializer
  %33 = fdiv <2 x double> %29, %32
  %34 = extractelement <2 x double> %33, i64 0
  %35 = insertvalue { double, double } poison, double %34, 0
  %36 = extractelement <2 x double> %33, i64 1
  %37 = insertvalue { double, double } %35, double %36, 1
  ret { double, double } %37

38:                                               ; preds = %38, %11
  %39 = phi i64 [ 0, %11 ], [ %57, %38 ]
  %40 = phi <2 x double> [ zeroinitializer, %11 ], [ %56, %38 ]
  %41 = phi i64 [ 0, %11 ], [ %58, %38 ]
  %42 = getelementptr inbounds %"class.std::complex", ptr %7, i64 %39
  %43 = load <2 x double>, ptr %42, align 8
  %44 = fadd <2 x double> %40, %43
  %45 = or i64 %39, 1
  %46 = getelementptr inbounds %"class.std::complex", ptr %7, i64 %45
  %47 = load <2 x double>, ptr %46, align 8
  %48 = fadd <2 x double> %44, %47
  %49 = or i64 %39, 2
  %50 = getelementptr inbounds %"class.std::complex", ptr %7, i64 %49
  %51 = load <2 x double>, ptr %50, align 8
  %52 = fadd <2 x double> %48, %51
  %53 = or i64 %39, 3
  %54 = getelementptr inbounds %"class.std::complex", ptr %7, i64 %53
  %55 = load <2 x double>, ptr %54, align 8
  %56 = fadd <2 x double> %52, %55
  %57 = add nuw nsw i64 %39, 4
  %58 = add i64 %41, 4
  %59 = icmp eq i64 %58, %12
  br i1 %59, label %13, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorISt7complexIdEE7l1_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !330
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %9

7:                                                ; preds = %9, %1
  %8 = phi double [ 0.000000e+00, %1 ], [ %18, %9 ]
  ret double %8

9:                                                ; preds = %5, %9
  %10 = phi i64 [ 0, %5 ], [ %19, %9 ]
  %11 = phi double [ 0.000000e+00, %5 ], [ %18, %9 ]
  %12 = load ptr, ptr %6, align 8, !tbaa !333
  %13 = getelementptr inbounds %"class.std::complex", ptr %12, i64 %10
  %14 = load double, ptr %13, align 8
  %15 = getelementptr inbounds { double, double }, ptr %13, i64 0, i32 1
  %16 = load double, ptr %15, align 8
  %17 = tail call double @cabs(double noundef %14, double noundef %16) #24
  %18 = fadd double %11, %17
  %19 = add nuw nsw i64 %10, 1
  %20 = load i32, ptr %2, align 8, !tbaa !330
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %9, label %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorISt7complexIdEE7l2_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !330
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %48, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !333
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 1
  %10 = icmp eq i32 %3, 1
  br i1 %10, label %35, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967294
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64 [ 0, %11 ], [ %32, %13 ]
  %15 = phi double [ 0.000000e+00, %11 ], [ %31, %13 ]
  %16 = phi i64 [ 0, %11 ], [ %33, %13 ]
  %17 = getelementptr inbounds %"class.std::complex", ptr %7, i64 %14
  %18 = load double, ptr %17, align 8, !tbaa !26
  %19 = getelementptr inbounds { double, double }, ptr %17, i64 0, i32 1
  %20 = load double, ptr %19, align 8, !tbaa !26
  %21 = fmul double %20, %20
  %22 = tail call double @llvm.fmuladd.f64(double %18, double %18, double %21)
  %23 = fadd double %15, %22
  %24 = or i64 %14, 1
  %25 = getelementptr inbounds %"class.std::complex", ptr %7, i64 %24
  %26 = load double, ptr %25, align 8, !tbaa !26
  %27 = getelementptr inbounds { double, double }, ptr %25, i64 0, i32 1
  %28 = load double, ptr %27, align 8, !tbaa !26
  %29 = fmul double %28, %28
  %30 = tail call double @llvm.fmuladd.f64(double %26, double %26, double %29)
  %31 = fadd double %23, %30
  %32 = add nuw nsw i64 %14, 2
  %33 = add i64 %16, 2
  %34 = icmp eq i64 %33, %12
  br i1 %34, label %35, label %13

35:                                               ; preds = %13, %5
  %36 = phi double [ undef, %5 ], [ %31, %13 ]
  %37 = phi i64 [ 0, %5 ], [ %32, %13 ]
  %38 = phi double [ 0.000000e+00, %5 ], [ %31, %13 ]
  %39 = icmp eq i64 %9, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.std::complex", ptr %7, i64 %37
  %42 = load double, ptr %41, align 8, !tbaa !26
  %43 = getelementptr inbounds { double, double }, ptr %41, i64 0, i32 1
  %44 = load double, ptr %43, align 8, !tbaa !26
  %45 = fmul double %44, %44
  %46 = tail call double @llvm.fmuladd.f64(double %42, double %42, double %45)
  %47 = fadd double %38, %46
  br label %48

48:                                               ; preds = %40, %35, %1
  %49 = phi double [ 0.000000e+00, %1 ], [ %36, %35 ], [ %47, %40 ]
  %50 = tail call double @sqrt(double noundef %49) #24
  ret double %50
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorISt7complexIdEE7lp_normEd(ptr noundef nonnull align 8 dereferenceable(88) %0, double noundef %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %12

8:                                                ; preds = %12, %2
  %9 = phi double [ 0.000000e+00, %2 ], [ %22, %12 ]
  %10 = fdiv double 1.000000e+00, %1
  %11 = tail call double @pow(double noundef %9, double noundef %10) #24
  ret double %11

12:                                               ; preds = %6, %12
  %13 = phi i64 [ 0, %6 ], [ %23, %12 ]
  %14 = phi double [ 0.000000e+00, %6 ], [ %22, %12 ]
  %15 = load ptr, ptr %7, align 8, !tbaa !333
  %16 = getelementptr inbounds %"class.std::complex", ptr %15, i64 %13
  %17 = load double, ptr %16, align 8
  %18 = getelementptr inbounds { double, double }, ptr %16, i64 0, i32 1
  %19 = load double, ptr %18, align 8
  %20 = tail call double @cabs(double noundef %17, double noundef %19) #24
  %21 = tail call double @pow(double noundef %20, double noundef %1) #24
  %22 = fadd double %14, %21
  %23 = add nuw nsw i64 %13, 1
  %24 = load i32, ptr %3, align 8, !tbaa !330
  %25 = zext i32 %24 to i64
  %26 = icmp ult i64 %23, %25
  br i1 %26, label %12, label %8
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii6VectorISt7complexIdEE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !330
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %9

7:                                                ; preds = %9, %1
  %8 = phi double [ 0.000000e+00, %1 ], [ %19, %9 ]
  ret double %8

9:                                                ; preds = %5, %9
  %10 = phi i64 [ 0, %5 ], [ %20, %9 ]
  %11 = phi double [ 0.000000e+00, %5 ], [ %19, %9 ]
  %12 = load ptr, ptr %6, align 8, !tbaa !333
  %13 = getelementptr inbounds %"class.std::complex", ptr %12, i64 %10
  %14 = load double, ptr %13, align 8
  %15 = getelementptr inbounds { double, double }, ptr %13, i64 0, i32 1
  %16 = load double, ptr %15, align 8
  %17 = tail call double @cabs(double noundef %14, double noundef %16) #24
  %18 = fcmp olt double %17, %11
  %19 = select i1 %18, double %11, double %17
  %20 = add nuw nsw i64 %10, 1
  %21 = load i32, ptr %2, align 8, !tbaa !330
  %22 = zext i32 %21 to i64
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %9, label %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIdEE8all_zeroEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !330
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !333
  %8 = zext i32 %3 to i64
  %9 = load double, ptr %7, align 8, !tbaa !26
  %10 = fcmp une double %9, 0.000000e+00
  %11 = getelementptr inbounds { double, double }, ptr %7, i64 0, i32 1
  %12 = load double, ptr %11, align 8
  %13 = fcmp une double %12, 0.000000e+00
  %14 = select i1 %10, i1 true, i1 %13
  br i1 %14, label %29, label %15

15:                                               ; preds = %5, %19
  %16 = phi i64 [ %17, %19 ], [ 0, %5 ]
  %17 = add nuw nsw i64 %16, 1
  %18 = icmp eq i64 %17, %8
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::complex", ptr %7, i64 %17
  %21 = load double, ptr %20, align 8, !tbaa !26
  %22 = fcmp une double %21, 0.000000e+00
  %23 = getelementptr inbounds { double, double }, ptr %20, i64 0, i32 1
  %24 = load double, ptr %23, align 8
  %25 = fcmp une double %24, 0.000000e+00
  %26 = select i1 %22, i1 true, i1 %25
  br i1 %26, label %27, label %15

27:                                               ; preds = %15, %19
  %28 = icmp uge i64 %17, %8
  br label %29

29:                                               ; preds = %27, %5, %1
  %30 = phi i1 [ true, %1 ], [ false, %5 ], [ %28, %27 ]
  ret i1 %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIdEE15is_non_negativeEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !330
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(16) ptr @_ZN6dealii6VectorISt7complexIdEEclEj(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !333
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.std::complex", ptr %4, i64 %5
  ret ptr %6
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIdEEpLERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %9

9:                                                ; preds = %9, %6
  %10 = phi i64 [ 0, %6 ], [ %18, %9 ]
  %11 = load ptr, ptr %7, align 8, !tbaa !333
  %12 = getelementptr inbounds %"class.std::complex", ptr %11, i64 %10
  %13 = load ptr, ptr %8, align 8, !tbaa !333
  %14 = getelementptr inbounds %"class.std::complex", ptr %13, i64 %10
  %15 = load <2 x double>, ptr %12, align 8
  %16 = load <2 x double>, ptr %14, align 8
  %17 = fadd <2 x double> %15, %16
  store <2 x double> %17, ptr %14, align 8
  %18 = add nuw nsw i64 %10, 1
  %19 = load i32, ptr %3, align 8, !tbaa !330
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 %18, %20
  br i1 %21, label %9, label %22

22:                                               ; preds = %9, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE3addERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %10, %2
  ret void

10:                                               ; preds = %6, %10
  %11 = phi i64 [ 0, %6 ], [ %19, %10 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !333
  %13 = getelementptr inbounds %"class.std::complex", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !333
  %15 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %11
  %16 = load <2 x double>, ptr %13, align 8
  %17 = load <2 x double>, ptr %15, align 8
  %18 = fadd <2 x double> %16, %17
  store <2 x double> %18, ptr %15, align 8
  %19 = add nuw nsw i64 %11, 1
  %20 = load i32, ptr %3, align 8, !tbaa !330
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIdEEmIERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %10, %2
  ret ptr %0

10:                                               ; preds = %6, %10
  %11 = phi i64 [ 0, %6 ], [ %19, %10 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !333
  %13 = getelementptr inbounds %"class.std::complex", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !333
  %15 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %11
  %16 = load <2 x double>, ptr %13, align 8
  %17 = load <2 x double>, ptr %15, align 8
  %18 = fsub <2 x double> %17, %16
  store <2 x double> %18, ptr %15, align 8
  %19 = add nuw nsw i64 %11, 1
  %20 = load i32, ptr %3, align 8, !tbaa !330
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE3addES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !330
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %9 = insertelement <2 x double> poison, double %1, i64 0
  %10 = insertelement <2 x double> %9, double %2, i64 1
  br label %12

11:                                               ; preds = %12, %3
  ret void

12:                                               ; preds = %7, %12
  %13 = phi i64 [ 0, %7 ], [ %18, %12 ]
  %14 = load ptr, ptr %8, align 8, !tbaa !333
  %15 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %13
  %16 = load <2 x double>, ptr %15, align 8
  %17 = fadd <2 x double> %16, %10
  store <2 x double> %17, ptr %15, align 8
  %18 = add nuw nsw i64 %13, 1
  %19 = load i32, ptr %4, align 8, !tbaa !330
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 %18, %20
  br i1 %21, label %12, label %11
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE3addES2_RKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !333
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !330
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.std::complex", ptr %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %49, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.dealii::Vector.24", ptr %3, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !333
  %15 = insertelement <2 x double> poison, double %1, i64 0
  %16 = shufflevector <2 x double> %15, <2 x double> poison, <2 x i32> zeroinitializer
  %17 = insertelement <2 x double> poison, double %2, i64 0
  %18 = shufflevector <2 x double> %17, <2 x double> poison, <2 x i32> zeroinitializer
  br label %19

19:                                               ; preds = %12, %43
  %20 = phi ptr [ %22, %43 ], [ %14, %12 ]
  %21 = phi ptr [ %45, %43 ], [ %6, %12 ]
  %22 = getelementptr inbounds %"class.std::complex", ptr %20, i64 1
  %23 = load <2 x double>, ptr %20, align 8
  %24 = fmul <2 x double> %23, %16
  %25 = fmul <2 x double> %23, %18
  %26 = shufflevector <2 x double> %25, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %27 = fsub <2 x double> %24, %26
  %28 = fadd <2 x double> %24, %26
  %29 = shufflevector <2 x double> %27, <2 x double> %28, <2 x i32> <i32 0, i32 3>
  %30 = extractelement <2 x double> %27, i64 0
  %31 = fcmp uno double %30, 0.000000e+00
  br i1 %31, label %32, label %43, !prof !340

32:                                               ; preds = %19
  %33 = extractelement <2 x double> %28, i64 1
  %34 = fcmp uno double %33, 0.000000e+00
  br i1 %34, label %35, label %43, !prof !340

35:                                               ; preds = %32
  %36 = extractelement <2 x double> %23, i64 0
  %37 = extractelement <2 x double> %23, i64 1
  %38 = tail call noundef { double, double } @__muldc3(double noundef %1, double noundef %2, double noundef %36, double noundef %37) #24
  %39 = extractvalue { double, double } %38, 0
  %40 = extractvalue { double, double } %38, 1
  %41 = insertelement <2 x double> poison, double %39, i64 0
  %42 = insertelement <2 x double> %41, double %40, i64 1
  br label %43

43:                                               ; preds = %19, %32, %35
  %44 = phi <2 x double> [ %29, %19 ], [ %29, %32 ], [ %42, %35 ]
  %45 = getelementptr inbounds %"class.std::complex", ptr %21, i64 1
  %46 = load <2 x double>, ptr %21, align 8
  %47 = fadd <2 x double> %44, %46
  store <2 x double> %47, ptr %21, align 8
  %48 = icmp eq ptr %45, %10
  br i1 %48, label %49, label %19

49:                                               ; preds = %43, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE3addES2_RKS3_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2, ptr noundef nonnull align 8 dereferenceable(88) %3, double %4, double %5, ptr noundef nonnull align 8 dereferenceable(88) %6) local_unnamed_addr #2 comdat align 2 {
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !330
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.dealii::Vector.24", ptr %3, i64 0, i32 3
  %13 = getelementptr inbounds %"class.dealii::Vector.24", ptr %6, i64 0, i32 3
  %14 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %16

15:                                               ; preds = %57, %7
  ret void

16:                                               ; preds = %11, %57
  %17 = phi i64 [ 0, %11 ], [ %69, %57 ]
  %18 = load ptr, ptr %12, align 8, !tbaa !333
  %19 = getelementptr inbounds %"class.std::complex", ptr %18, i64 %17
  %20 = load double, ptr %19, align 8
  %21 = getelementptr inbounds { double, double }, ptr %19, i64 0, i32 1
  %22 = load double, ptr %21, align 8
  %23 = fmul double %20, %1
  %24 = fmul double %22, %2
  %25 = fmul double %22, %1
  %26 = fmul double %20, %2
  %27 = fsub double %23, %24
  %28 = fadd double %26, %25
  %29 = fcmp uno double %27, 0.000000e+00
  br i1 %29, label %30, label %36, !prof !340

30:                                               ; preds = %16
  %31 = fcmp uno double %28, 0.000000e+00
  br i1 %31, label %32, label %36, !prof !340

32:                                               ; preds = %30
  %33 = tail call noundef { double, double } @__muldc3(double noundef %1, double noundef %2, double noundef %20, double noundef %22) #24
  %34 = extractvalue { double, double } %33, 0
  %35 = extractvalue { double, double } %33, 1
  br label %36

36:                                               ; preds = %16, %30, %32
  %37 = phi double [ %27, %16 ], [ %27, %30 ], [ %34, %32 ]
  %38 = phi double [ %28, %16 ], [ %28, %30 ], [ %35, %32 ]
  %39 = load ptr, ptr %13, align 8, !tbaa !333
  %40 = getelementptr inbounds %"class.std::complex", ptr %39, i64 %17
  %41 = load double, ptr %40, align 8
  %42 = getelementptr inbounds { double, double }, ptr %40, i64 0, i32 1
  %43 = load double, ptr %42, align 8
  %44 = fmul double %41, %4
  %45 = fmul double %43, %5
  %46 = fmul double %43, %4
  %47 = fmul double %41, %5
  %48 = fsub double %44, %45
  %49 = fadd double %47, %46
  %50 = fcmp uno double %48, 0.000000e+00
  br i1 %50, label %51, label %57, !prof !340

51:                                               ; preds = %36
  %52 = fcmp uno double %49, 0.000000e+00
  br i1 %52, label %53, label %57, !prof !340

53:                                               ; preds = %51
  %54 = tail call noundef { double, double } @__muldc3(double noundef %4, double noundef %5, double noundef %41, double noundef %43) #24
  %55 = extractvalue { double, double } %54, 0
  %56 = extractvalue { double, double } %54, 1
  br label %57

57:                                               ; preds = %36, %51, %53
  %58 = phi double [ %48, %36 ], [ %48, %51 ], [ %55, %53 ]
  %59 = phi double [ %49, %36 ], [ %49, %51 ], [ %56, %53 ]
  %60 = fadd double %37, %58
  %61 = fadd double %38, %59
  %62 = load ptr, ptr %14, align 8, !tbaa !333
  %63 = getelementptr inbounds %"class.std::complex", ptr %62, i64 %17
  %64 = load double, ptr %63, align 8
  %65 = getelementptr inbounds { double, double }, ptr %63, i64 0, i32 1
  %66 = load double, ptr %65, align 8
  %67 = fadd double %60, %64
  %68 = fadd double %61, %66
  store double %67, ptr %63, align 8
  store double %68, ptr %65, align 8
  %69 = add nuw nsw i64 %17, 1
  %70 = load i32, ptr %8, align 8, !tbaa !330
  %71 = zext i32 %70 to i64
  %72 = icmp ult i64 %69, %71
  br i1 %72, label %16, label %15
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE4saddES2_RKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !330
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.dealii::Vector.24", ptr %3, i64 0, i32 3
  %11 = insertelement <2 x double> poison, double %1, i64 0
  %12 = shufflevector <2 x double> %11, <2 x double> poison, <2 x i32> zeroinitializer
  %13 = insertelement <2 x double> poison, double %2, i64 0
  %14 = shufflevector <2 x double> %13, <2 x double> poison, <2 x i32> zeroinitializer
  br label %16

15:                                               ; preds = %41, %4
  ret void

16:                                               ; preds = %8, %41
  %17 = phi i64 [ 0, %8 ], [ %49, %41 ]
  %18 = load ptr, ptr %9, align 8, !tbaa !333
  %19 = getelementptr inbounds %"class.std::complex", ptr %18, i64 %17
  %20 = load <2 x double>, ptr %19, align 8
  %21 = fmul <2 x double> %20, %12
  %22 = fmul <2 x double> %20, %14
  %23 = shufflevector <2 x double> %22, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %24 = fsub <2 x double> %21, %23
  %25 = fadd <2 x double> %21, %23
  %26 = shufflevector <2 x double> %24, <2 x double> %25, <2 x i32> <i32 0, i32 3>
  %27 = extractelement <2 x double> %24, i64 0
  %28 = fcmp uno double %27, 0.000000e+00
  br i1 %28, label %29, label %41, !prof !340

29:                                               ; preds = %16
  %30 = extractelement <2 x double> %25, i64 1
  %31 = fcmp uno double %30, 0.000000e+00
  br i1 %31, label %32, label %41, !prof !340

32:                                               ; preds = %29
  %33 = extractelement <2 x double> %20, i64 0
  %34 = extractelement <2 x double> %20, i64 1
  %35 = tail call noundef { double, double } @__muldc3(double noundef %1, double noundef %2, double noundef %33, double noundef %34) #24
  %36 = extractvalue { double, double } %35, 0
  %37 = extractvalue { double, double } %35, 1
  %38 = load ptr, ptr %9, align 8, !tbaa !333
  %39 = insertelement <2 x double> poison, double %36, i64 0
  %40 = insertelement <2 x double> %39, double %37, i64 1
  br label %41

41:                                               ; preds = %16, %29, %32
  %42 = phi ptr [ %18, %16 ], [ %18, %29 ], [ %38, %32 ]
  %43 = phi <2 x double> [ %26, %16 ], [ %26, %29 ], [ %40, %32 ]
  %44 = load ptr, ptr %10, align 8, !tbaa !333
  %45 = getelementptr inbounds %"class.std::complex", ptr %44, i64 %17
  %46 = getelementptr inbounds %"class.std::complex", ptr %42, i64 %17
  %47 = load <2 x double>, ptr %45, align 8
  %48 = fadd <2 x double> %43, %47
  store <2 x double> %48, ptr %46, align 8
  %49 = add nuw nsw i64 %17, 1
  %50 = load i32, ptr %5, align 8, !tbaa !330
  %51 = zext i32 %50 to i64
  %52 = icmp ult i64 %49, %51
  br i1 %52, label %16, label %15
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE4saddES2_S2_RKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2, double %3, double %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !333
  %9 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !330
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::complex", ptr %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %63, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.dealii::Vector.24", ptr %5, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !333
  br label %17

17:                                               ; preds = %14, %56
  %18 = phi ptr [ %61, %56 ], [ %8, %14 ]
  %19 = phi ptr [ %39, %56 ], [ %16, %14 ]
  %20 = load double, ptr %18, align 8
  %21 = getelementptr inbounds { double, double }, ptr %18, i64 0, i32 1
  %22 = load double, ptr %21, align 8
  %23 = fmul double %20, %1
  %24 = fmul double %22, %2
  %25 = fmul double %22, %1
  %26 = fmul double %20, %2
  %27 = fsub double %23, %24
  %28 = fadd double %26, %25
  %29 = fcmp uno double %27, 0.000000e+00
  br i1 %29, label %30, label %36, !prof !340

30:                                               ; preds = %17
  %31 = fcmp uno double %28, 0.000000e+00
  br i1 %31, label %32, label %36, !prof !340

32:                                               ; preds = %30
  %33 = tail call noundef { double, double } @__muldc3(double noundef %1, double noundef %2, double noundef %20, double noundef %22) #24
  %34 = extractvalue { double, double } %33, 0
  %35 = extractvalue { double, double } %33, 1
  br label %36

36:                                               ; preds = %17, %30, %32
  %37 = phi double [ %27, %17 ], [ %27, %30 ], [ %34, %32 ]
  %38 = phi double [ %28, %17 ], [ %28, %30 ], [ %35, %32 ]
  %39 = getelementptr inbounds %"class.std::complex", ptr %19, i64 1
  %40 = load double, ptr %19, align 8
  %41 = getelementptr inbounds { double, double }, ptr %19, i64 0, i32 1
  %42 = load double, ptr %41, align 8
  %43 = fmul double %40, %3
  %44 = fmul double %42, %4
  %45 = fmul double %42, %3
  %46 = fmul double %40, %4
  %47 = fsub double %43, %44
  %48 = fadd double %46, %45
  %49 = fcmp uno double %47, 0.000000e+00
  br i1 %49, label %50, label %56, !prof !340

50:                                               ; preds = %36
  %51 = fcmp uno double %48, 0.000000e+00
  br i1 %51, label %52, label %56, !prof !340

52:                                               ; preds = %50
  %53 = tail call noundef { double, double } @__muldc3(double noundef %3, double noundef %4, double noundef %40, double noundef %42) #24
  %54 = extractvalue { double, double } %53, 0
  %55 = extractvalue { double, double } %53, 1
  br label %56

56:                                               ; preds = %36, %50, %52
  %57 = phi double [ %47, %36 ], [ %47, %50 ], [ %54, %52 ]
  %58 = phi double [ %48, %36 ], [ %48, %50 ], [ %55, %52 ]
  %59 = fadd double %37, %57
  %60 = fadd double %38, %58
  store double %59, ptr %18, align 8, !tbaa.struct !335
  store double %60, ptr %21, align 8, !tbaa.struct !336
  %61 = getelementptr inbounds %"class.std::complex", ptr %18, i64 1
  %62 = icmp eq ptr %61, %12
  br i1 %62, label %63, label %17

63:                                               ; preds = %56, %6
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE4saddES2_S2_RKS3_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2, double %3, double %4, ptr noundef nonnull align 8 dereferenceable(88) %5, double %6, double %7, ptr noundef nonnull align 8 dereferenceable(88) %8) local_unnamed_addr #2 comdat align 2 {
  %10 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !330
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Vector.24", ptr %5, i64 0, i32 3
  %16 = getelementptr inbounds %"class.dealii::Vector.24", ptr %8, i64 0, i32 3
  br label %18

17:                                               ; preds = %82, %9
  ret void

18:                                               ; preds = %13, %82
  %19 = phi i64 [ 0, %13 ], [ %90, %82 ]
  %20 = load ptr, ptr %14, align 8, !tbaa !333
  %21 = getelementptr inbounds %"class.std::complex", ptr %20, i64 %19
  %22 = load double, ptr %21, align 8
  %23 = getelementptr inbounds { double, double }, ptr %21, i64 0, i32 1
  %24 = load double, ptr %23, align 8
  %25 = fmul double %22, %1
  %26 = fmul double %24, %2
  %27 = fmul double %24, %1
  %28 = fmul double %22, %2
  %29 = fsub double %25, %26
  %30 = fadd double %28, %27
  %31 = fcmp uno double %29, 0.000000e+00
  br i1 %31, label %32, label %38, !prof !340

32:                                               ; preds = %18
  %33 = fcmp uno double %30, 0.000000e+00
  br i1 %33, label %34, label %38, !prof !340

34:                                               ; preds = %32
  %35 = tail call noundef { double, double } @__muldc3(double noundef %1, double noundef %2, double noundef %22, double noundef %24) #24
  %36 = extractvalue { double, double } %35, 0
  %37 = extractvalue { double, double } %35, 1
  br label %38

38:                                               ; preds = %18, %32, %34
  %39 = phi double [ %29, %18 ], [ %29, %32 ], [ %36, %34 ]
  %40 = phi double [ %30, %18 ], [ %30, %32 ], [ %37, %34 ]
  %41 = load ptr, ptr %15, align 8, !tbaa !333
  %42 = getelementptr inbounds %"class.std::complex", ptr %41, i64 %19
  %43 = load double, ptr %42, align 8
  %44 = getelementptr inbounds { double, double }, ptr %42, i64 0, i32 1
  %45 = load double, ptr %44, align 8
  %46 = fmul double %43, %3
  %47 = fmul double %45, %4
  %48 = fmul double %45, %3
  %49 = fmul double %43, %4
  %50 = fsub double %46, %47
  %51 = fadd double %49, %48
  %52 = fcmp uno double %50, 0.000000e+00
  br i1 %52, label %53, label %59, !prof !340

53:                                               ; preds = %38
  %54 = fcmp uno double %51, 0.000000e+00
  br i1 %54, label %55, label %59, !prof !340

55:                                               ; preds = %53
  %56 = tail call noundef { double, double } @__muldc3(double noundef %3, double noundef %4, double noundef %43, double noundef %45) #24
  %57 = extractvalue { double, double } %56, 0
  %58 = extractvalue { double, double } %56, 1
  br label %59

59:                                               ; preds = %38, %53, %55
  %60 = phi double [ %50, %38 ], [ %50, %53 ], [ %57, %55 ]
  %61 = phi double [ %51, %38 ], [ %51, %53 ], [ %58, %55 ]
  %62 = fadd double %39, %60
  %63 = fadd double %40, %61
  %64 = load ptr, ptr %16, align 8, !tbaa !333
  %65 = getelementptr inbounds %"class.std::complex", ptr %64, i64 %19
  %66 = load double, ptr %65, align 8
  %67 = getelementptr inbounds { double, double }, ptr %65, i64 0, i32 1
  %68 = load double, ptr %67, align 8
  %69 = fmul double %66, %6
  %70 = fmul double %68, %7
  %71 = fmul double %68, %6
  %72 = fmul double %66, %7
  %73 = fsub double %69, %70
  %74 = fadd double %72, %71
  %75 = fcmp uno double %73, 0.000000e+00
  br i1 %75, label %76, label %82, !prof !340

76:                                               ; preds = %59
  %77 = fcmp uno double %74, 0.000000e+00
  br i1 %77, label %78, label %82, !prof !340

78:                                               ; preds = %76
  %79 = tail call noundef { double, double } @__muldc3(double noundef %6, double noundef %7, double noundef %66, double noundef %68) #24
  %80 = extractvalue { double, double } %79, 0
  %81 = extractvalue { double, double } %79, 1
  br label %82

82:                                               ; preds = %59, %76, %78
  %83 = phi double [ %73, %59 ], [ %73, %76 ], [ %80, %78 ]
  %84 = phi double [ %74, %59 ], [ %74, %76 ], [ %81, %78 ]
  %85 = fadd double %62, %83
  %86 = fadd double %63, %84
  %87 = load ptr, ptr %14, align 8, !tbaa !333
  %88 = getelementptr inbounds %"class.std::complex", ptr %87, i64 %19
  store double %85, ptr %88, align 8, !tbaa.struct !335
  %89 = getelementptr inbounds i8, ptr %88, i64 8
  store double %86, ptr %89, align 8, !tbaa.struct !336
  %90 = add nuw nsw i64 %19, 1
  %91 = load i32, ptr %10, align 8, !tbaa !330
  %92 = zext i32 %91 to i64
  %93 = icmp ult i64 %90, %92
  br i1 %93, label %18, label %17
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE4saddES2_S2_RKS3_S2_S5_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2, double %3, double %4, ptr noundef nonnull align 8 dereferenceable(88) %5, double %6, double %7, ptr noundef nonnull align 8 dereferenceable(88) %8, double %9, double %10, ptr noundef nonnull align 8 dereferenceable(88) %11) local_unnamed_addr #2 comdat align 2 {
  %13 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %14 = load i32, ptr %13, align 8, !tbaa !330
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.dealii::Vector.24", ptr %5, i64 0, i32 3
  %19 = getelementptr inbounds %"class.dealii::Vector.24", ptr %8, i64 0, i32 3
  %20 = getelementptr inbounds %"class.dealii::Vector.24", ptr %11, i64 0, i32 3
  br label %22

21:                                               ; preds = %109, %12
  ret void

22:                                               ; preds = %16, %109
  %23 = phi i64 [ 0, %16 ], [ %117, %109 ]
  %24 = load ptr, ptr %17, align 8, !tbaa !333
  %25 = getelementptr inbounds %"class.std::complex", ptr %24, i64 %23
  %26 = load double, ptr %25, align 8
  %27 = getelementptr inbounds { double, double }, ptr %25, i64 0, i32 1
  %28 = load double, ptr %27, align 8
  %29 = fmul double %26, %1
  %30 = fmul double %28, %2
  %31 = fmul double %28, %1
  %32 = fmul double %26, %2
  %33 = fsub double %29, %30
  %34 = fadd double %32, %31
  %35 = fcmp uno double %33, 0.000000e+00
  br i1 %35, label %36, label %42, !prof !340

36:                                               ; preds = %22
  %37 = fcmp uno double %34, 0.000000e+00
  br i1 %37, label %38, label %42, !prof !340

38:                                               ; preds = %36
  %39 = tail call noundef { double, double } @__muldc3(double noundef %1, double noundef %2, double noundef %26, double noundef %28) #24
  %40 = extractvalue { double, double } %39, 0
  %41 = extractvalue { double, double } %39, 1
  br label %42

42:                                               ; preds = %22, %36, %38
  %43 = phi double [ %33, %22 ], [ %33, %36 ], [ %40, %38 ]
  %44 = phi double [ %34, %22 ], [ %34, %36 ], [ %41, %38 ]
  %45 = load ptr, ptr %18, align 8, !tbaa !333
  %46 = getelementptr inbounds %"class.std::complex", ptr %45, i64 %23
  %47 = load double, ptr %46, align 8
  %48 = getelementptr inbounds { double, double }, ptr %46, i64 0, i32 1
  %49 = load double, ptr %48, align 8
  %50 = fmul double %47, %3
  %51 = fmul double %49, %4
  %52 = fmul double %49, %3
  %53 = fmul double %47, %4
  %54 = fsub double %50, %51
  %55 = fadd double %53, %52
  %56 = fcmp uno double %54, 0.000000e+00
  br i1 %56, label %57, label %63, !prof !340

57:                                               ; preds = %42
  %58 = fcmp uno double %55, 0.000000e+00
  br i1 %58, label %59, label %63, !prof !340

59:                                               ; preds = %57
  %60 = tail call noundef { double, double } @__muldc3(double noundef %3, double noundef %4, double noundef %47, double noundef %49) #24
  %61 = extractvalue { double, double } %60, 0
  %62 = extractvalue { double, double } %60, 1
  br label %63

63:                                               ; preds = %42, %57, %59
  %64 = phi double [ %54, %42 ], [ %54, %57 ], [ %61, %59 ]
  %65 = phi double [ %55, %42 ], [ %55, %57 ], [ %62, %59 ]
  %66 = fadd double %43, %64
  %67 = fadd double %44, %65
  %68 = load ptr, ptr %19, align 8, !tbaa !333
  %69 = getelementptr inbounds %"class.std::complex", ptr %68, i64 %23
  %70 = load double, ptr %69, align 8
  %71 = getelementptr inbounds { double, double }, ptr %69, i64 0, i32 1
  %72 = load double, ptr %71, align 8
  %73 = fmul double %70, %6
  %74 = fmul double %72, %7
  %75 = fmul double %72, %6
  %76 = fmul double %70, %7
  %77 = fsub double %73, %74
  %78 = fadd double %76, %75
  %79 = fcmp uno double %77, 0.000000e+00
  br i1 %79, label %80, label %86, !prof !340

80:                                               ; preds = %63
  %81 = fcmp uno double %78, 0.000000e+00
  br i1 %81, label %82, label %86, !prof !340

82:                                               ; preds = %80
  %83 = tail call noundef { double, double } @__muldc3(double noundef %6, double noundef %7, double noundef %70, double noundef %72) #24
  %84 = extractvalue { double, double } %83, 0
  %85 = extractvalue { double, double } %83, 1
  br label %86

86:                                               ; preds = %63, %80, %82
  %87 = phi double [ %77, %63 ], [ %77, %80 ], [ %84, %82 ]
  %88 = phi double [ %78, %63 ], [ %78, %80 ], [ %85, %82 ]
  %89 = fadd double %66, %87
  %90 = fadd double %67, %88
  %91 = load ptr, ptr %20, align 8, !tbaa !333
  %92 = getelementptr inbounds %"class.std::complex", ptr %91, i64 %23
  %93 = load double, ptr %92, align 8
  %94 = getelementptr inbounds { double, double }, ptr %92, i64 0, i32 1
  %95 = load double, ptr %94, align 8
  %96 = fmul double %93, %9
  %97 = fmul double %95, %10
  %98 = fmul double %95, %9
  %99 = fmul double %93, %10
  %100 = fsub double %96, %97
  %101 = fadd double %99, %98
  %102 = fcmp uno double %100, 0.000000e+00
  br i1 %102, label %103, label %109, !prof !340

103:                                              ; preds = %86
  %104 = fcmp uno double %101, 0.000000e+00
  br i1 %104, label %105, label %109, !prof !340

105:                                              ; preds = %103
  %106 = tail call noundef { double, double } @__muldc3(double noundef %9, double noundef %10, double noundef %93, double noundef %95) #24
  %107 = extractvalue { double, double } %106, 0
  %108 = extractvalue { double, double } %106, 1
  br label %109

109:                                              ; preds = %86, %103, %105
  %110 = phi double [ %100, %86 ], [ %100, %103 ], [ %107, %105 ]
  %111 = phi double [ %101, %86 ], [ %101, %103 ], [ %108, %105 ]
  %112 = fadd double %89, %110
  %113 = fadd double %90, %111
  %114 = load ptr, ptr %17, align 8, !tbaa !333
  %115 = getelementptr inbounds %"class.std::complex", ptr %114, i64 %23
  store double %112, ptr %115, align 8, !tbaa.struct !335
  %116 = getelementptr inbounds i8, ptr %115, i64 8
  store double %113, ptr %116, align 8, !tbaa.struct !336
  %117 = add nuw nsw i64 %23, 1
  %118 = load i32, ptr %13, align 8, !tbaa !330
  %119 = zext i32 %118 to i64
  %120 = icmp ult i64 %117, %119
  br i1 %120, label %22, label %21
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE5scaleES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !333
  %6 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !330
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.std::complex", ptr %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %34, label %11

11:                                               ; preds = %3, %30
  %12 = phi ptr [ %13, %30 ], [ %5, %3 ]
  %13 = getelementptr inbounds %"class.std::complex", ptr %12, i64 1
  %14 = load double, ptr %12, align 8
  %15 = getelementptr inbounds { double, double }, ptr %12, i64 0, i32 1
  %16 = load double, ptr %15, align 8
  %17 = fmul double %14, %1
  %18 = fmul double %16, %2
  %19 = fmul double %14, %2
  %20 = fmul double %16, %1
  %21 = fsub double %17, %18
  %22 = fadd double %19, %20
  %23 = fcmp uno double %21, 0.000000e+00
  br i1 %23, label %24, label %30, !prof !340

24:                                               ; preds = %11
  %25 = fcmp uno double %22, 0.000000e+00
  br i1 %25, label %26, label %30, !prof !340

26:                                               ; preds = %24
  %27 = tail call noundef { double, double } @__muldc3(double noundef %14, double noundef %16, double noundef %1, double noundef %2) #24
  %28 = extractvalue { double, double } %27, 0
  %29 = extractvalue { double, double } %27, 1
  br label %30

30:                                               ; preds = %11, %24, %26
  %31 = phi double [ %21, %11 ], [ %21, %24 ], [ %28, %26 ]
  %32 = phi double [ %22, %11 ], [ %22, %24 ], [ %29, %26 ]
  store double %31, ptr %12, align 8
  store double %32, ptr %15, align 8
  %33 = icmp eq ptr %13, %9
  br i1 %33, label %34, label %11

34:                                               ; preds = %30, %3
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIdEEmLES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !333
  %6 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !330
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.std::complex", ptr %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %34, label %11

11:                                               ; preds = %3, %30
  %12 = phi ptr [ %13, %30 ], [ %5, %3 ]
  %13 = getelementptr inbounds %"class.std::complex", ptr %12, i64 1
  %14 = load double, ptr %12, align 8
  %15 = getelementptr inbounds { double, double }, ptr %12, i64 0, i32 1
  %16 = load double, ptr %15, align 8
  %17 = fmul double %14, %1
  %18 = fmul double %16, %2
  %19 = fmul double %14, %2
  %20 = fmul double %16, %1
  %21 = fsub double %17, %18
  %22 = fadd double %19, %20
  %23 = fcmp uno double %21, 0.000000e+00
  br i1 %23, label %24, label %30, !prof !340

24:                                               ; preds = %11
  %25 = fcmp uno double %22, 0.000000e+00
  br i1 %25, label %26, label %30, !prof !340

26:                                               ; preds = %24
  %27 = tail call noundef { double, double } @__muldc3(double noundef %14, double noundef %16, double noundef %1, double noundef %2) #24
  %28 = extractvalue { double, double } %27, 0
  %29 = extractvalue { double, double } %27, 1
  br label %30

30:                                               ; preds = %26, %24, %11
  %31 = phi double [ %21, %11 ], [ %21, %24 ], [ %28, %26 ]
  %32 = phi double [ %22, %11 ], [ %22, %24 ], [ %29, %26 ]
  store double %31, ptr %12, align 8
  store double %32, ptr %15, align 8
  %33 = icmp eq ptr %13, %9
  br i1 %33, label %34, label %11

34:                                               ; preds = %30, %3
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIdEEdVES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call noundef { double, double } @__divdc3(double noundef 1.000000e+00, double noundef 0.000000e+00, double noundef %1, double noundef %2) #24
  %5 = extractvalue { double, double } %4, 0
  %6 = extractvalue { double, double } %4, 1
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !333
  %9 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !330
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::complex", ptr %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %37, label %14

14:                                               ; preds = %3, %33
  %15 = phi ptr [ %16, %33 ], [ %8, %3 ]
  %16 = getelementptr inbounds %"class.std::complex", ptr %15, i64 1
  %17 = load double, ptr %15, align 8
  %18 = getelementptr inbounds { double, double }, ptr %15, i64 0, i32 1
  %19 = load double, ptr %18, align 8
  %20 = fmul double %5, %17
  %21 = fmul double %6, %19
  %22 = fmul double %6, %17
  %23 = fmul double %5, %19
  %24 = fsub double %20, %21
  %25 = fadd double %22, %23
  %26 = fcmp uno double %24, 0.000000e+00
  br i1 %26, label %27, label %33, !prof !340

27:                                               ; preds = %14
  %28 = fcmp uno double %25, 0.000000e+00
  br i1 %28, label %29, label %33, !prof !340

29:                                               ; preds = %27
  %30 = tail call noundef { double, double } @__muldc3(double noundef %17, double noundef %19, double noundef %5, double noundef %6) #24
  %31 = extractvalue { double, double } %30, 0
  %32 = extractvalue { double, double } %30, 1
  br label %33

33:                                               ; preds = %29, %27, %14
  %34 = phi double [ %24, %14 ], [ %24, %27 ], [ %31, %29 ]
  %35 = phi double [ %25, %14 ], [ %25, %27 ], [ %32, %29 ]
  store double %34, ptr %15, align 8
  store double %35, ptr %18, align 8
  %36 = icmp eq ptr %16, %12
  br i1 %36, label %37, label %14

37:                                               ; preds = %33, %3
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE3equES2_RKS3_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2, ptr noundef nonnull align 8 dereferenceable(88) %3, double %4, double %5, ptr noundef nonnull align 8 dereferenceable(88) %6) local_unnamed_addr #2 comdat align 2 {
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !330
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.dealii::Vector.24", ptr %3, i64 0, i32 3
  %13 = getelementptr inbounds %"class.dealii::Vector.24", ptr %6, i64 0, i32 3
  %14 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %16

15:                                               ; preds = %57, %7
  ret void

16:                                               ; preds = %11, %57
  %17 = phi i64 [ 0, %11 ], [ %65, %57 ]
  %18 = load ptr, ptr %12, align 8, !tbaa !333
  %19 = getelementptr inbounds %"class.std::complex", ptr %18, i64 %17
  %20 = load double, ptr %19, align 8
  %21 = getelementptr inbounds { double, double }, ptr %19, i64 0, i32 1
  %22 = load double, ptr %21, align 8
  %23 = fmul double %20, %1
  %24 = fmul double %22, %2
  %25 = fmul double %22, %1
  %26 = fmul double %20, %2
  %27 = fsub double %23, %24
  %28 = fadd double %26, %25
  %29 = fcmp uno double %27, 0.000000e+00
  br i1 %29, label %30, label %36, !prof !340

30:                                               ; preds = %16
  %31 = fcmp uno double %28, 0.000000e+00
  br i1 %31, label %32, label %36, !prof !340

32:                                               ; preds = %30
  %33 = tail call noundef { double, double } @__muldc3(double noundef %1, double noundef %2, double noundef %20, double noundef %22) #24
  %34 = extractvalue { double, double } %33, 0
  %35 = extractvalue { double, double } %33, 1
  br label %36

36:                                               ; preds = %16, %30, %32
  %37 = phi double [ %27, %16 ], [ %27, %30 ], [ %34, %32 ]
  %38 = phi double [ %28, %16 ], [ %28, %30 ], [ %35, %32 ]
  %39 = load ptr, ptr %13, align 8, !tbaa !333
  %40 = getelementptr inbounds %"class.std::complex", ptr %39, i64 %17
  %41 = load double, ptr %40, align 8
  %42 = getelementptr inbounds { double, double }, ptr %40, i64 0, i32 1
  %43 = load double, ptr %42, align 8
  %44 = fmul double %41, %4
  %45 = fmul double %43, %5
  %46 = fmul double %43, %4
  %47 = fmul double %41, %5
  %48 = fsub double %44, %45
  %49 = fadd double %47, %46
  %50 = fcmp uno double %48, 0.000000e+00
  br i1 %50, label %51, label %57, !prof !340

51:                                               ; preds = %36
  %52 = fcmp uno double %49, 0.000000e+00
  br i1 %52, label %53, label %57, !prof !340

53:                                               ; preds = %51
  %54 = tail call noundef { double, double } @__muldc3(double noundef %4, double noundef %5, double noundef %41, double noundef %43) #24
  %55 = extractvalue { double, double } %54, 0
  %56 = extractvalue { double, double } %54, 1
  br label %57

57:                                               ; preds = %36, %51, %53
  %58 = phi double [ %48, %36 ], [ %48, %51 ], [ %55, %53 ]
  %59 = phi double [ %49, %36 ], [ %49, %51 ], [ %56, %53 ]
  %60 = fadd double %37, %58
  %61 = fadd double %38, %59
  %62 = load ptr, ptr %14, align 8, !tbaa !333
  %63 = getelementptr inbounds %"class.std::complex", ptr %62, i64 %17
  store double %60, ptr %63, align 8, !tbaa.struct !335
  %64 = getelementptr inbounds i8, ptr %63, i64 8
  store double %61, ptr %64, align 8, !tbaa.struct !336
  %65 = add nuw nsw i64 %17, 1
  %66 = load i32, ptr %8, align 8, !tbaa !330
  %67 = zext i32 %66 to i64
  %68 = icmp ult i64 %65, %67
  br i1 %68, label %16, label %15
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE3equES2_RKS3_S2_S5_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2, ptr noundef nonnull align 8 dereferenceable(88) %3, double %4, double %5, ptr noundef nonnull align 8 dereferenceable(88) %6, double %7, double %8, ptr noundef nonnull align 8 dereferenceable(88) %9) local_unnamed_addr #2 comdat align 2 {
  %11 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !330
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.dealii::Vector.24", ptr %3, i64 0, i32 3
  %16 = getelementptr inbounds %"class.dealii::Vector.24", ptr %6, i64 0, i32 3
  %17 = getelementptr inbounds %"class.dealii::Vector.24", ptr %9, i64 0, i32 3
  %18 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %20

19:                                               ; preds = %84, %10
  ret void

20:                                               ; preds = %14, %84
  %21 = phi i64 [ 0, %14 ], [ %92, %84 ]
  %22 = load ptr, ptr %15, align 8, !tbaa !333
  %23 = getelementptr inbounds %"class.std::complex", ptr %22, i64 %21
  %24 = load double, ptr %23, align 8
  %25 = getelementptr inbounds { double, double }, ptr %23, i64 0, i32 1
  %26 = load double, ptr %25, align 8
  %27 = fmul double %24, %1
  %28 = fmul double %26, %2
  %29 = fmul double %26, %1
  %30 = fmul double %24, %2
  %31 = fsub double %27, %28
  %32 = fadd double %30, %29
  %33 = fcmp uno double %31, 0.000000e+00
  br i1 %33, label %34, label %40, !prof !340

34:                                               ; preds = %20
  %35 = fcmp uno double %32, 0.000000e+00
  br i1 %35, label %36, label %40, !prof !340

36:                                               ; preds = %34
  %37 = tail call noundef { double, double } @__muldc3(double noundef %1, double noundef %2, double noundef %24, double noundef %26) #24
  %38 = extractvalue { double, double } %37, 0
  %39 = extractvalue { double, double } %37, 1
  br label %40

40:                                               ; preds = %20, %34, %36
  %41 = phi double [ %31, %20 ], [ %31, %34 ], [ %38, %36 ]
  %42 = phi double [ %32, %20 ], [ %32, %34 ], [ %39, %36 ]
  %43 = load ptr, ptr %16, align 8, !tbaa !333
  %44 = getelementptr inbounds %"class.std::complex", ptr %43, i64 %21
  %45 = load double, ptr %44, align 8
  %46 = getelementptr inbounds { double, double }, ptr %44, i64 0, i32 1
  %47 = load double, ptr %46, align 8
  %48 = fmul double %45, %4
  %49 = fmul double %47, %5
  %50 = fmul double %47, %4
  %51 = fmul double %45, %5
  %52 = fsub double %48, %49
  %53 = fadd double %51, %50
  %54 = fcmp uno double %52, 0.000000e+00
  br i1 %54, label %55, label %61, !prof !340

55:                                               ; preds = %40
  %56 = fcmp uno double %53, 0.000000e+00
  br i1 %56, label %57, label %61, !prof !340

57:                                               ; preds = %55
  %58 = tail call noundef { double, double } @__muldc3(double noundef %4, double noundef %5, double noundef %45, double noundef %47) #24
  %59 = extractvalue { double, double } %58, 0
  %60 = extractvalue { double, double } %58, 1
  br label %61

61:                                               ; preds = %40, %55, %57
  %62 = phi double [ %52, %40 ], [ %52, %55 ], [ %59, %57 ]
  %63 = phi double [ %53, %40 ], [ %53, %55 ], [ %60, %57 ]
  %64 = fadd double %41, %62
  %65 = fadd double %42, %63
  %66 = load ptr, ptr %17, align 8, !tbaa !333
  %67 = getelementptr inbounds %"class.std::complex", ptr %66, i64 %21
  %68 = load double, ptr %67, align 8
  %69 = getelementptr inbounds { double, double }, ptr %67, i64 0, i32 1
  %70 = load double, ptr %69, align 8
  %71 = fmul double %68, %7
  %72 = fmul double %70, %8
  %73 = fmul double %70, %7
  %74 = fmul double %68, %8
  %75 = fsub double %71, %72
  %76 = fadd double %74, %73
  %77 = fcmp uno double %75, 0.000000e+00
  br i1 %77, label %78, label %84, !prof !340

78:                                               ; preds = %61
  %79 = fcmp uno double %76, 0.000000e+00
  br i1 %79, label %80, label %84, !prof !340

80:                                               ; preds = %78
  %81 = tail call noundef { double, double } @__muldc3(double noundef %7, double noundef %8, double noundef %68, double noundef %70) #24
  %82 = extractvalue { double, double } %81, 0
  %83 = extractvalue { double, double } %81, 1
  br label %84

84:                                               ; preds = %61, %78, %80
  %85 = phi double [ %75, %61 ], [ %75, %78 ], [ %82, %80 ]
  %86 = phi double [ %76, %61 ], [ %76, %78 ], [ %83, %80 ]
  %87 = fadd double %64, %85
  %88 = fadd double %65, %86
  %89 = load ptr, ptr %18, align 8, !tbaa !333
  %90 = getelementptr inbounds %"class.std::complex", ptr %89, i64 %21
  store double %87, ptr %90, align 8, !tbaa.struct !335
  %91 = getelementptr inbounds i8, ptr %90, i64 8
  store double %88, ptr %91, align 8, !tbaa.struct !336
  %92 = add nuw nsw i64 %21, 1
  %93 = load i32, ptr %11, align 8, !tbaa !330
  %94 = zext i32 %93 to i64
  %95 = icmp ult i64 %92, %94
  br i1 %95, label %20, label %19
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE5ratioERKS3_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !330
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext true)
  %9 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !330
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %14 = getelementptr inbounds %"class.dealii::Vector.24", ptr %2, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %17

16:                                               ; preds = %17, %3
  ret void

17:                                               ; preds = %12, %17
  %18 = phi i64 [ 0, %12 ], [ %35, %17 ]
  %19 = load ptr, ptr %13, align 8, !tbaa !333
  %20 = getelementptr inbounds %"class.std::complex", ptr %19, i64 %18
  %21 = load ptr, ptr %14, align 8, !tbaa !333
  %22 = getelementptr inbounds %"class.std::complex", ptr %21, i64 %18
  %23 = load double, ptr %20, align 8, !tbaa.struct !335
  %24 = getelementptr inbounds i8, ptr %20, i64 8
  %25 = load double, ptr %24, align 8, !tbaa.struct !336
  %26 = load double, ptr %22, align 8
  %27 = getelementptr inbounds { double, double }, ptr %22, i64 0, i32 1
  %28 = load double, ptr %27, align 8
  %29 = tail call noundef { double, double } @__divdc3(double noundef %23, double noundef %25, double noundef %26, double noundef %28) #24
  %30 = extractvalue { double, double } %29, 0
  %31 = extractvalue { double, double } %29, 1
  %32 = load ptr, ptr %15, align 8, !tbaa !333
  %33 = getelementptr inbounds %"class.std::complex", ptr %32, i64 %18
  store double %30, ptr %33, align 8, !tbaa.struct !335
  %34 = getelementptr inbounds i8, ptr %33, i64 8
  store double %31, ptr %34, align 8, !tbaa.struct !336
  %35 = add nuw nsw i64 %18, 1
  %36 = load i32, ptr %9, align 8, !tbaa !330
  %37 = zext i32 %36 to i64
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %17, label %16
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIdEE5printEPKc(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %8 = icmp eq ptr %1, null
  %9 = select i1 %8, ptr @.str.11, ptr %1
  br label %12

10:                                               ; preds = %12, %2
  %11 = tail call i32 @putchar(i32 10)
  ret void

12:                                               ; preds = %6, %12
  %13 = phi i64 [ 0, %6 ], [ %20, %12 ]
  %14 = load ptr, ptr %7, align 8, !tbaa !333
  %15 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %13
  %16 = load double, ptr %15, align 8, !tbaa !26
  %17 = getelementptr inbounds { double, double }, ptr %15, i64 0, i32 1
  %18 = load double, ptr %17, align 8, !tbaa !26
  %19 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) %9, double noundef %16, double noundef %18)
  %20 = add nuw nsw i64 %13, 1
  %21 = load i32, ptr %3, align 8, !tbaa !330
  %22 = zext i32 %21 to i64
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %12, label %10
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIdEE5printERSojbb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = getelementptr i8, ptr %9, i64 -24
  %11 = load i64, ptr %10, align 8
  %12 = getelementptr inbounds i8, ptr %1, i64 %11
  %13 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 5
  %14 = load i32, ptr %13, align 8, !tbaa !144
  %15 = and i32 %14, 5
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.1, i32 noundef 784, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %18 unwind label %24

18:                                               ; preds = %17
  %19 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %19, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %20 unwind label %22

20:                                               ; preds = %18
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %21 unwind label %24

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %19) #24
  br label %153

24:                                               ; preds = %20, %17
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %153

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 3
  %28 = load i32, ptr %27, align 8, !tbaa !150
  %29 = zext i32 %2 to i64
  %30 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 1
  %31 = load i64, ptr %30, align 8, !tbaa !151
  store i64 %29, ptr %30, align 8, !tbaa !151
  %32 = load i64, ptr %10, align 8
  %33 = getelementptr inbounds i8, ptr %1, i64 %32
  %34 = getelementptr inbounds %"class.std::ios_base", ptr %33, i64 0, i32 1
  store i64 %29, ptr %34, align 8, !tbaa !151
  %35 = load i64, ptr %10, align 8
  %36 = getelementptr inbounds i8, ptr %1, i64 %35
  %37 = getelementptr inbounds %"class.std::ios_base", ptr %36, i64 0, i32 3
  %38 = load i32, ptr %37, align 8, !tbaa !152
  %39 = and i32 %38, -261
  %40 = select i1 %3, i32 256, i32 4
  %41 = or i32 %39, %40
  store i32 %41, ptr %37, align 8, !tbaa !152
  %42 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %43 = load i32, ptr %42, align 8, !tbaa !330
  %44 = icmp eq i32 %43, 0
  br i1 %4, label %48, label %45

45:                                               ; preds = %26
  br i1 %44, label %105, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %72

48:                                               ; preds = %26
  br i1 %44, label %105, label %49

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %51

51:                                               ; preds = %49, %67
  %52 = phi i64 [ 0, %49 ], [ %68, %67 ]
  %53 = load ptr, ptr %50, align 8, !tbaa !333
  %54 = getelementptr inbounds %"class.std::complex", ptr %53, i64 %52
  %55 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsIdcSt11char_traitsIcEERSt13basic_ostreamIT0_T1_ES6_RKSt7complexIT_E(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull align 8 dereferenceable(16) %54)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6)
  store i8 32, ptr %6, align 1, !tbaa !153
  %56 = load ptr, ptr %55, align 8, !tbaa !5
  %57 = getelementptr i8, ptr %56, i64 -24
  %58 = load i64, ptr %57, align 8
  %59 = getelementptr inbounds i8, ptr %55, i64 %58
  %60 = getelementptr inbounds %"class.std::ios_base", ptr %59, i64 0, i32 2
  %61 = load i64, ptr %60, align 8, !tbaa !154
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %51
  %64 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %55, ptr noundef nonnull %6, i64 noundef 1)
  br label %67

65:                                               ; preds = %51
  %66 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %55, i8 noundef signext 32)
  br label %67

67:                                               ; preds = %63, %65
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6)
  %68 = add nuw nsw i64 %52, 1
  %69 = load i32, ptr %42, align 8, !tbaa !330
  %70 = zext i32 %69 to i64
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %51, label %105

72:                                               ; preds = %46, %97
  %73 = phi i64 [ 0, %46 ], [ %101, %97 ]
  %74 = load ptr, ptr %47, align 8, !tbaa !333
  %75 = getelementptr inbounds %"class.std::complex", ptr %74, i64 %73
  %76 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsIdcSt11char_traitsIcEERSt13basic_ostreamIT0_T1_ES6_RKSt7complexIT_E(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull align 8 dereferenceable(16) %75)
  %77 = load ptr, ptr %76, align 8, !tbaa !5
  %78 = getelementptr i8, ptr %77, i64 -24
  %79 = load i64, ptr %78, align 8
  %80 = getelementptr inbounds i8, ptr %76, i64 %79
  %81 = getelementptr inbounds %"class.std::basic_ios", ptr %80, i64 0, i32 5
  %82 = load ptr, ptr %81, align 8, !tbaa !155
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %72
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

85:                                               ; preds = %72
  %86 = getelementptr inbounds %"class.std::ctype", ptr %82, i64 0, i32 8
  %87 = load i8, ptr %86, align 8, !tbaa !158
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.std::ctype", ptr %82, i64 0, i32 9, i64 10
  %91 = load i8, ptr %90, align 1, !tbaa !153
  br label %97

92:                                               ; preds = %85
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %82)
  %93 = load ptr, ptr %82, align 8, !tbaa !5
  %94 = getelementptr inbounds ptr, ptr %93, i64 6
  %95 = load ptr, ptr %94, align 8
  %96 = tail call noundef signext i8 %95(ptr noundef nonnull align 8 dereferenceable(570) %82, i8 noundef signext 10)
  br label %97

97:                                               ; preds = %89, %92
  %98 = phi i8 [ %91, %89 ], [ %96, %92 ]
  %99 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %76, i8 noundef signext %98)
  %100 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %99)
  %101 = add nuw nsw i64 %73, 1
  %102 = load i32, ptr %42, align 8, !tbaa !330
  %103 = zext i32 %102 to i64
  %104 = icmp ult i64 %101, %103
  br i1 %104, label %72, label %105

105:                                              ; preds = %97, %67, %45, %48
  %106 = load ptr, ptr %1, align 8, !tbaa !5
  %107 = getelementptr i8, ptr %106, i64 -24
  %108 = load i64, ptr %107, align 8
  %109 = getelementptr inbounds i8, ptr %1, i64 %108
  %110 = getelementptr inbounds %"class.std::basic_ios", ptr %109, i64 0, i32 5
  %111 = load ptr, ptr %110, align 8, !tbaa !155
  %112 = icmp eq ptr %111, null
  br i1 %112, label %113, label %114

113:                                              ; preds = %105
  call void @_ZSt16__throw_bad_castv() #26
  unreachable

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"class.std::ctype", ptr %111, i64 0, i32 8
  %116 = load i8, ptr %115, align 8, !tbaa !158
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.std::ctype", ptr %111, i64 0, i32 9, i64 10
  %120 = load i8, ptr %119, align 1, !tbaa !153
  br label %126

121:                                              ; preds = %114
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %111)
  %122 = load ptr, ptr %111, align 8, !tbaa !5
  %123 = getelementptr inbounds ptr, ptr %122, i64 6
  %124 = load ptr, ptr %123, align 8
  %125 = call noundef signext i8 %124(ptr noundef nonnull align 8 dereferenceable(570) %111, i8 noundef signext 10)
  br label %126

126:                                              ; preds = %118, %121
  %127 = phi i8 [ %120, %118 ], [ %125, %121 ]
  %128 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %127)
  %129 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %128)
  %130 = load ptr, ptr %1, align 8, !tbaa !5
  %131 = getelementptr i8, ptr %130, i64 -24
  %132 = load i64, ptr %131, align 8
  %133 = getelementptr inbounds i8, ptr %1, i64 %132
  %134 = getelementptr inbounds %"class.std::ios_base", ptr %133, i64 0, i32 5
  %135 = load i32, ptr %134, align 8, !tbaa !144
  %136 = and i32 %135, 5
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %147, label %138

138:                                              ; preds = %126
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %8, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %8)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %8, ptr noundef nonnull @.str.1, i32 noundef 803, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %139 unwind label %145

139:                                              ; preds = %138
  %140 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %140, ptr noundef nonnull align 8 dereferenceable(60) %8)
          to label %141 unwind label %143

141:                                              ; preds = %139
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %140, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %140, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %142 unwind label %145

142:                                              ; preds = %141
  unreachable

143:                                              ; preds = %139
  %144 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %140) #24
  br label %153

145:                                              ; preds = %141, %138
  %146 = landingpad { ptr, i32 }
          cleanup
  br label %153

147:                                              ; preds = %126
  %148 = getelementptr inbounds %"class.std::ios_base", ptr %133, i64 0, i32 3
  store i32 %28, ptr %148, align 8, !tbaa !150
  %149 = load i64, ptr %131, align 8
  %150 = getelementptr inbounds i8, ptr %1, i64 %149
  %151 = and i64 %31, 4294967295
  %152 = getelementptr inbounds %"class.std::ios_base", ptr %150, i64 0, i32 1
  store i64 %151, ptr %152, align 8, !tbaa !151
  ret void

153:                                              ; preds = %145, %143, %24, %22
  %154 = phi ptr [ %7, %22 ], [ %7, %24 ], [ %8, %143 ], [ %8, %145 ]
  %155 = phi { ptr, i32 } [ %23, %22 ], [ %25, %24 ], [ %144, %143 ], [ %146, %145 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %154) #24
  resume { ptr, i32 } %155
}

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsIdcSt11char_traitsIcEERSt13basic_ostreamIT0_T1_ES6_RKSt7complexIT_E(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef nonnull align 8 dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIdEE11block_writeERSo(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = load ptr, ptr %1, align 8, !tbaa !5
  %8 = getelementptr i8, ptr %7, i64 -24
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = getelementptr inbounds %"class.std::ios_base", ptr %10, i64 0, i32 5
  %12 = load i32, ptr %11, align 8, !tbaa !144
  %13 = and i32 %12, 5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.1, i32 noundef 814, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %16 unwind label %22

16:                                               ; preds = %15
  %17 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %17, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %18 unwind label %20

18:                                               ; preds = %16
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %17, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %19 unwind label %22

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %16
  %21 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %17) #24
  br label %24

22:                                               ; preds = %18, %15
  %23 = landingpad { ptr, i32 }
          cleanup
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi { ptr, i32 } [ %23, %22 ], [ %21, %20 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  br label %61

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %28 = load i32, ptr %27, align 8, !tbaa !330
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #24
  %29 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) @.str.5, i32 noundef %28) #24
  %30 = call i64 @strlen(ptr nonnull dereferenceable(1) %4)
  %31 = getelementptr inbounds i8, ptr %4, i64 %30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(3) %31, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %32 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %4) #27
  %33 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %4, i64 noundef %32)
  %34 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !333
  %36 = load i32, ptr %27, align 8, !tbaa !330
  %37 = zext i32 %36 to i64
  %38 = shl nuw nsw i64 %37, 4
  %39 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef %35, i64 noundef %38)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #24
  store i8 93, ptr %5, align 1, !tbaa !153
  %40 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %5, i64 noundef 1)
  %41 = load ptr, ptr %1, align 8, !tbaa !5
  %42 = getelementptr i8, ptr %41, i64 -24
  %43 = load i64, ptr %42, align 8
  %44 = getelementptr inbounds i8, ptr %1, i64 %43
  %45 = getelementptr inbounds %"class.std::ios_base", ptr %44, i64 0, i32 5
  %46 = load i32, ptr %45, align 8, !tbaa !144
  %47 = and i32 %46, 5
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %26
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.1, i32 noundef 837, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %50 unwind label %56

50:                                               ; preds = %49
  %51 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %51, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %52 unwind label %54

52:                                               ; preds = %50
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %51, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %51, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %53 unwind label %56

53:                                               ; preds = %52
  unreachable

54:                                               ; preds = %50
  %55 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %51) #24
  br label %58

56:                                               ; preds = %52, %49
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi { ptr, i32 } [ %57, %56 ], [ %55, %54 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  br label %61

60:                                               ; preds = %26
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  ret void

61:                                               ; preds = %58, %24
  %62 = phi { ptr, i32 } [ %59, %58 ], [ %25, %24 ]
  resume { ptr, i32 } %62
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE10block_readERSi(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = load ptr, ptr %1, align 8, !tbaa !5
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 %10
  %12 = getelementptr inbounds %"class.std::ios_base", ptr %11, i64 0, i32 5
  %13 = load i32, ptr %12, align 8, !tbaa !144
  %14 = and i32 %13, 5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.1, i32 noundef 845, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.4)
          to label %17 unwind label %23

17:                                               ; preds = %16
  %18 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %18, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %19 unwind label %21

19:                                               ; preds = %17
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %18, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %18, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %20 unwind label %23

20:                                               ; preds = %19
  unreachable

21:                                               ; preds = %17
  %22 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %18) #24
  br label %25

23:                                               ; preds = %19, %16
  %24 = landingpad { ptr, i32 }
          cleanup
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi { ptr, i32 } [ %24, %23 ], [ %22, %21 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  br label %70

27:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #24
  %28 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi7getlineEPclc(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %4, i64 noundef 16, i8 noundef signext 10)
  %29 = call i64 @__isoc23_strtol(ptr noundef nonnull %4, ptr noundef null, i32 noundef 10) #24
  %30 = trunc i64 %29 to i32
  %31 = load ptr, ptr %0, align 8, !tbaa !5
  %32 = getelementptr inbounds ptr, ptr %31, i64 2
  %33 = load ptr, ptr %32, align 8
  call void %33(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %30, i1 noundef zeroext true)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #24
  %34 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %5, i64 noundef 1)
  %35 = load i8, ptr %5, align 1, !tbaa !153
  %36 = icmp eq i8 %35, 91
  br i1 %36, label %46, label %37

37:                                               ; preds = %27
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.1, i32 noundef 862, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.4)
          to label %38 unwind label %44

38:                                               ; preds = %37
  %39 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %39, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %40 unwind label %42

40:                                               ; preds = %38
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %39, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %39, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %41 unwind label %44

41:                                               ; preds = %40
  unreachable

42:                                               ; preds = %38
  %43 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %39) #24
  br label %67

44:                                               ; preds = %40, %37
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %67

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !333
  %49 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %50 = load i32, ptr %49, align 8, !tbaa !330
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 4
  %53 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef %48, i64 noundef %52)
  %54 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %5, i64 noundef 1)
  %55 = load i8, ptr %5, align 1, !tbaa !153
  %56 = icmp eq i8 %55, 93
  br i1 %56, label %66, label %57

57:                                               ; preds = %46
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.1, i32 noundef 870, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.4)
          to label %58 unwind label %64

58:                                               ; preds = %57
  %59 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %59, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %60 unwind label %62

60:                                               ; preds = %58
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %59, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %59, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %61 unwind label %64

61:                                               ; preds = %60
  unreachable

62:                                               ; preds = %58
  %63 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %59) #24
  br label %67

64:                                               ; preds = %60, %57
  %65 = landingpad { ptr, i32 }
          cleanup
  br label %67

66:                                               ; preds = %46
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  ret void

67:                                               ; preds = %64, %62, %44, %42
  %68 = phi ptr [ %6, %42 ], [ %6, %44 ], [ %7, %62 ], [ %7, %64 ]
  %69 = phi { ptr, i32 } [ %43, %42 ], [ %45, %44 ], [ %63, %62 ], [ %65, %64 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %68) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  br label %70

70:                                               ; preds = %67, %25
  %71 = phi { ptr, i32 } [ %69, %67 ], [ %26, %25 ]
  resume { ptr, i32 } %71
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii6VectorISt7complexIdEE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !332
  %4 = shl i32 %3, 4
  %5 = add i32 %4, 88
  ret i32 %5
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEEC2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorISt7complexIfEEC5Ev) align 2 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIfEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorISt7complexIfEEC5ERKS3_) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIfEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !341
  store i32 %5, ptr %3, align 8, !tbaa !341
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 2
  %7 = load i32, ptr %4, align 8, !tbaa !341
  store i32 %7, ptr %6, align 4, !tbaa !343
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  store ptr null, ptr %8, align 8, !tbaa !344
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %2
  %11 = zext i32 %7 to i64
  %12 = shl nuw nsw i64 %11, 3
  %13 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %12) #22
          to label %14 unwind label %24

14:                                               ; preds = %10
  %15 = icmp eq i32 %7, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %14
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %13, i8 0, i64 %12, i1 false), !tbaa !165
  store ptr %13, ptr %8, align 8, !tbaa !344
  %17 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !344
  %19 = icmp eq i32 %7, 1
  br i1 %19, label %22, label %20, !prof !334

20:                                               ; preds = %16
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %13, ptr align 4 %18, i64 %12, i1 false)
  br label %26

21:                                               ; preds = %14
  store ptr %13, ptr %8, align 8, !tbaa !344
  br label %26

22:                                               ; preds = %16
  %23 = load i64, ptr %18, align 4, !tbaa !153
  store i64 %23, ptr %13, align 4, !tbaa !153
  br label %26

24:                                               ; preds = %10
  %25 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %27 unwind label %28

26:                                               ; preds = %21, %22, %20, %2
  ret void

27:                                               ; preds = %24
  resume { ptr, i32 } %25

28:                                               ; preds = %24
  %29 = landingpad { ptr, i32 }
          catch ptr null
  %30 = extractvalue { ptr, i32 } %29, 0
  tail call void @__clang_call_terminate(ptr %30) #23
  unreachable
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii6VectorISt7complexIfEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !341
  ret i32 %3
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii6VectorISt7complexIfEE5beginEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !344
  ret ptr %3
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii6VectorISt7complexIfEE3endEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !344
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !341
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::complex.33", ptr %3, i64 %6
  ret ptr %7
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZN6dealii6VectorISt7complexIfEE5beginEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !344
  ret ptr %3
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEEC2Ej(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) unnamed_addr #16 comdat($_ZN6dealii6VectorISt7complexIfEEC5Ej) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIfEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = zext i32 %1 to i64
  %7 = shl nuw nsw i64 %6, 3
  %8 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %7) #22
          to label %9 unwind label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 2
  store ptr %8, ptr %10, align 8, !tbaa !344
  store i32 %1, ptr %11, align 4, !tbaa !343
  store i32 %1, ptr %3, align 8, !tbaa !341
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %8, i8 0, i64 %7, i1 false), !tbaa !153
  br label %12

12:                                               ; preds = %2, %9
  ret void

13:                                               ; preds = %5
  %14 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %15 unwind label %16

15:                                               ; preds = %13
  resume { ptr, i32 } %14

16:                                               ; preds = %13
  %17 = landingpad { ptr, i32 }
          catch ptr null
  %18 = extractvalue { ptr, i32 } %17, 0
  tail call void @__clang_call_terminate(ptr %18) #23
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorISt7complexIfEED5Ev) align 2 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIfEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !344
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #25
  store ptr null, ptr %2, align 8, !tbaa !344
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorISt7complexIfEED5Ev) align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIfEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !344
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #25
  store ptr null, ptr %2, align 8, !tbaa !344
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  resume { ptr, i32 } %9
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIfEE8compressEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE6reinitEjb(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #16 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !344
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(ptr noundef nonnull %7) #25
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  br label %32

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !343
  %15 = icmp ult i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !344
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %18) #25
  br label %21

21:                                               ; preds = %20, %16
  %22 = zext i32 %1 to i64
  %23 = shl nuw nsw i64 %22, 3
  %24 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %23) #22
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %24, i8 0, i64 %23, i1 false), !tbaa !165
  store ptr %24, ptr %17, align 8, !tbaa !344
  store i32 %1, ptr %13, align 4, !tbaa !343
  br label %25

25:                                               ; preds = %21, %12
  %26 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  store i32 %1, ptr %26, align 8, !tbaa !341
  br i1 %2, label %32, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !344
  %30 = zext i32 %1 to i64
  %31 = shl nuw nsw i64 %30, 3
  tail call void @llvm.memset.p0.i64(ptr align 4 %29, i8 0, i64 %31, i1 false), !tbaa !153
  br label %32

32:                                               ; preds = %27, %10, %25
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIfEEaSES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !344
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.std::complex.33", ptr %8, i64 %9
  br label %11

11:                                               ; preds = %6, %11
  %12 = phi ptr [ %13, %11 ], [ %8, %6 ]
  store <2 x float> %1, ptr %12, align 4, !tbaa !153
  %13 = getelementptr inbounds %"class.std::complex.33", ptr %12, i64 1
  %14 = icmp eq ptr %13, %10
  br i1 %14, label %15, label %11

15:                                               ; preds = %11, %2
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE4swapERS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !32
  %6 = load i32, ptr %4, align 8, !tbaa !32
  store i32 %6, ptr %3, align 8, !tbaa !32
  store i32 %5, ptr %4, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 2
  %9 = load i32, ptr %7, align 4, !tbaa !32
  %10 = load i32, ptr %8, align 4, !tbaa !32
  store i32 %10, ptr %7, align 4, !tbaa !32
  store i32 %9, ptr %8, align 4, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %11, align 8, !tbaa !33
  %14 = load ptr, ptr %12, align 8, !tbaa !33
  store ptr %14, ptr %11, align 8, !tbaa !33
  store ptr %13, ptr %12, align 8, !tbaa !33
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZN6dealii6VectorISt7complexIfEE3endEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !344
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !341
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::complex.33", ptr %3, i64 %6
  ret ptr %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIfEEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !341
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !341
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !344
  %19 = load i32, ptr %3, align 8, !tbaa !341
  %20 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !344
  %22 = icmp ugt i32 %19, 1
  br i1 %22, label %23, label %26, !prof !25

23:                                               ; preds = %16
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %21, ptr align 4 %18, i64 %25, i1 false)
  br label %30

26:                                               ; preds = %16
  %27 = icmp eq i32 %19, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = load i64, ptr %18, align 4, !tbaa !153
  store i64 %29, ptr %21, align 4, !tbaa !153
  br label %30

30:                                               ; preds = %28, %26, %23, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIfEEaSERKNS_11BlockVectorIS2_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::BlockVectorBase.35", ptr %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.35", ptr %1, i64 0, i32 2, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !34
  %6 = zext i32 %5 to i64
  %7 = load ptr, ptr %4, align 8, !tbaa !40
  %8 = getelementptr inbounds i32, ptr %7, i64 %6
  %9 = load i32, ptr %8, align 4, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !341
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = load ptr, ptr %0, align 8, !tbaa !5
  %15 = getelementptr inbounds ptr, ptr %14, i64 2
  %16 = load ptr, ptr %15, align 8
  tail call void %16(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %9, i1 noundef zeroext true)
  %17 = load i32, ptr %3, align 8, !tbaa !34
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi i32 [ %17, %13 ], [ %5, %2 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.dealii::BlockVectorBase.35", ptr %1, i64 0, i32 1
  %23 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %22, align 8, !tbaa !345
  br label %25

25:                                               ; preds = %21, %36
  %26 = phi i32 [ %19, %21 ], [ %37, %36 ]
  %27 = phi ptr [ %24, %21 ], [ %38, %36 ]
  %28 = phi i64 [ 0, %21 ], [ %40, %36 ]
  %29 = phi i32 [ 0, %21 ], [ %39, %36 ]
  %30 = getelementptr inbounds %"class.dealii::Vector.32", ptr %27, i64 %28, i32 1
  %31 = load i32, ptr %30, align 8, !tbaa !341
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %43

33:                                               ; preds = %36, %18
  ret ptr %0

34:                                               ; preds = %43
  %35 = load i32, ptr %3, align 8, !tbaa !34
  br label %36

36:                                               ; preds = %34, %25
  %37 = phi i32 [ %26, %25 ], [ %35, %34 ]
  %38 = phi ptr [ %27, %25 ], [ %56, %34 ]
  %39 = phi i32 [ %29, %25 ], [ %55, %34 ]
  %40 = add nuw nsw i64 %28, 1
  %41 = zext i32 %37 to i64
  %42 = icmp ult i64 %40, %41
  br i1 %42, label %25, label %33

43:                                               ; preds = %25, %43
  %44 = phi i64 [ %54, %43 ], [ 0, %25 ]
  %45 = phi ptr [ %56, %43 ], [ %27, %25 ]
  %46 = phi i32 [ %55, %43 ], [ %29, %25 ]
  %47 = getelementptr inbounds %"class.dealii::Vector.32", ptr %45, i64 %28, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !344
  %49 = getelementptr inbounds %"class.std::complex.33", ptr %48, i64 %44
  %50 = load <2 x float>, ptr %49, align 4, !tbaa.struct !336
  %51 = load ptr, ptr %23, align 8, !tbaa !344
  %52 = zext i32 %46 to i64
  %53 = getelementptr inbounds %"class.std::complex.33", ptr %51, i64 %52
  store <2 x float> %50, ptr %53, align 4, !tbaa.struct !336
  %54 = add nuw nsw i64 %44, 1
  %55 = add i32 %46, 1
  %56 = load ptr, ptr %22, align 8, !tbaa !345
  %57 = getelementptr inbounds %"class.dealii::Vector.32", ptr %56, i64 %28, i32 1
  %58 = load i32, ptr %57, align 8, !tbaa !341
  %59 = zext i32 %58 to i64
  %60 = icmp ult i64 %54, %59
  br i1 %60, label %43, label %34
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local <2 x float> @_ZNK6dealii6VectorISt7complexIfEEclEj(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #18 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !344
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.std::complex.33", ptr %4, i64 %5
  %7 = load <2 x float>, ptr %6, align 4, !tbaa.struct !336
  ret <2 x float> %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorISt7complexIfEE8norm_sqrEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !341
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !344
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 1
  %10 = icmp eq i32 %3, 1
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967294
  br label %28

13:                                               ; preds = %28, %5
  %14 = phi float [ undef, %5 ], [ %46, %28 ]
  %15 = phi i64 [ 0, %5 ], [ %47, %28 ]
  %16 = phi float [ 0.000000e+00, %5 ], [ %46, %28 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %15
  %20 = load float, ptr %19, align 4, !tbaa !165
  %21 = getelementptr inbounds { float, float }, ptr %19, i64 0, i32 1
  %22 = load float, ptr %21, align 4, !tbaa !165
  %23 = fmul float %22, %22
  %24 = tail call float @llvm.fmuladd.f32(float %20, float %20, float %23)
  %25 = fadd float %16, %24
  br label %26

26:                                               ; preds = %18, %13, %1
  %27 = phi float [ 0.000000e+00, %1 ], [ %14, %13 ], [ %25, %18 ]
  ret float %27

28:                                               ; preds = %28, %11
  %29 = phi i64 [ 0, %11 ], [ %47, %28 ]
  %30 = phi float [ 0.000000e+00, %11 ], [ %46, %28 ]
  %31 = phi i64 [ 0, %11 ], [ %48, %28 ]
  %32 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %29
  %33 = load float, ptr %32, align 4, !tbaa !165
  %34 = getelementptr inbounds { float, float }, ptr %32, i64 0, i32 1
  %35 = load float, ptr %34, align 4, !tbaa !165
  %36 = fmul float %35, %35
  %37 = tail call float @llvm.fmuladd.f32(float %33, float %33, float %36)
  %38 = fadd float %30, %37
  %39 = or i64 %29, 1
  %40 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %39
  %41 = load float, ptr %40, align 4, !tbaa !165
  %42 = getelementptr inbounds { float, float }, ptr %40, i64 0, i32 1
  %43 = load float, ptr %42, align 4, !tbaa !165
  %44 = fmul float %43, %43
  %45 = tail call float @llvm.fmuladd.f32(float %41, float %41, float %44)
  %46 = fadd float %38, %45
  %47 = add nuw nsw i64 %29, 2
  %48 = add i64 %31, 2
  %49 = icmp eq i64 %48, %12
  br i1 %49, label %13, label %28
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local <2 x float> @_ZNK6dealii6VectorISt7complexIfEE10mean_valueEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #17 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !341
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !344
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 7
  %10 = icmp ult i32 %3, 8
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967288
  br label %34

13:                                               ; preds = %34, %5
  %14 = phi <2 x float> [ undef, %5 ], [ %68, %34 ]
  %15 = phi i64 [ 0, %5 ], [ %69, %34 ]
  %16 = phi <2 x float> [ zeroinitializer, %5 ], [ %68, %34 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %25, %18 ], [ %15, %13 ]
  %20 = phi <2 x float> [ %24, %18 ], [ %16, %13 ]
  %21 = phi i64 [ %26, %18 ], [ 0, %13 ]
  %22 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %19
  %23 = load <2 x float>, ptr %22, align 4
  %24 = fadd <2 x float> %20, %23
  %25 = add nuw nsw i64 %19, 1
  %26 = add i64 %21, 1
  %27 = icmp eq i64 %26, %9
  br i1 %27, label %28, label %18, !llvm.loop !347

28:                                               ; preds = %13, %18, %1
  %29 = phi <2 x float> [ zeroinitializer, %1 ], [ %14, %13 ], [ %24, %18 ]
  %30 = uitofp i32 %3 to float
  %31 = insertelement <2 x float> poison, float %30, i64 0
  %32 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> zeroinitializer
  %33 = fdiv <2 x float> %29, %32
  ret <2 x float> %33

34:                                               ; preds = %34, %11
  %35 = phi i64 [ 0, %11 ], [ %69, %34 ]
  %36 = phi <2 x float> [ zeroinitializer, %11 ], [ %68, %34 ]
  %37 = phi i64 [ 0, %11 ], [ %70, %34 ]
  %38 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %35
  %39 = load <2 x float>, ptr %38, align 4
  %40 = fadd <2 x float> %36, %39
  %41 = or i64 %35, 1
  %42 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %41
  %43 = load <2 x float>, ptr %42, align 4
  %44 = fadd <2 x float> %40, %43
  %45 = or i64 %35, 2
  %46 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %45
  %47 = load <2 x float>, ptr %46, align 4
  %48 = fadd <2 x float> %44, %47
  %49 = or i64 %35, 3
  %50 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %49
  %51 = load <2 x float>, ptr %50, align 4
  %52 = fadd <2 x float> %48, %51
  %53 = or i64 %35, 4
  %54 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %53
  %55 = load <2 x float>, ptr %54, align 4
  %56 = fadd <2 x float> %52, %55
  %57 = or i64 %35, 5
  %58 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %57
  %59 = load <2 x float>, ptr %58, align 4
  %60 = fadd <2 x float> %56, %59
  %61 = or i64 %35, 6
  %62 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %61
  %63 = load <2 x float>, ptr %62, align 4
  %64 = fadd <2 x float> %60, %63
  %65 = or i64 %35, 7
  %66 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %65
  %67 = load <2 x float>, ptr %66, align 4
  %68 = fadd <2 x float> %64, %67
  %69 = add nuw nsw i64 %35, 8
  %70 = add i64 %37, 8
  %71 = icmp eq i64 %70, %12
  br i1 %71, label %13, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorISt7complexIfEE7l1_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #17 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !341
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %9

7:                                                ; preds = %9, %1
  %8 = phi float [ 0.000000e+00, %1 ], [ %16, %9 ]
  ret float %8

9:                                                ; preds = %5, %9
  %10 = phi i64 [ 0, %5 ], [ %17, %9 ]
  %11 = phi float [ 0.000000e+00, %5 ], [ %16, %9 ]
  %12 = load ptr, ptr %6, align 8, !tbaa !344
  %13 = getelementptr inbounds %"class.std::complex.33", ptr %12, i64 %10
  %14 = load <2 x float>, ptr %13, align 4
  %15 = tail call float @cabsf(<2 x float> noundef %14) #24
  %16 = fadd float %11, %15
  %17 = add nuw nsw i64 %10, 1
  %18 = load i32, ptr %2, align 8, !tbaa !341
  %19 = zext i32 %18 to i64
  %20 = icmp ult i64 %17, %19
  br i1 %20, label %9, label %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorISt7complexIfEE7l2_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !341
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %48, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !344
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 1
  %10 = icmp eq i32 %3, 1
  br i1 %10, label %35, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967294
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64 [ 0, %11 ], [ %32, %13 ]
  %15 = phi float [ 0.000000e+00, %11 ], [ %31, %13 ]
  %16 = phi i64 [ 0, %11 ], [ %33, %13 ]
  %17 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %14
  %18 = load float, ptr %17, align 4, !tbaa !165
  %19 = getelementptr inbounds { float, float }, ptr %17, i64 0, i32 1
  %20 = load float, ptr %19, align 4, !tbaa !165
  %21 = fmul float %20, %20
  %22 = tail call float @llvm.fmuladd.f32(float %18, float %18, float %21)
  %23 = fadd float %15, %22
  %24 = or i64 %14, 1
  %25 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %24
  %26 = load float, ptr %25, align 4, !tbaa !165
  %27 = getelementptr inbounds { float, float }, ptr %25, i64 0, i32 1
  %28 = load float, ptr %27, align 4, !tbaa !165
  %29 = fmul float %28, %28
  %30 = tail call float @llvm.fmuladd.f32(float %26, float %26, float %29)
  %31 = fadd float %23, %30
  %32 = add nuw nsw i64 %14, 2
  %33 = add i64 %16, 2
  %34 = icmp eq i64 %33, %12
  br i1 %34, label %35, label %13

35:                                               ; preds = %13, %5
  %36 = phi float [ undef, %5 ], [ %31, %13 ]
  %37 = phi i64 [ 0, %5 ], [ %32, %13 ]
  %38 = phi float [ 0.000000e+00, %5 ], [ %31, %13 ]
  %39 = icmp eq i64 %9, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %37
  %42 = load float, ptr %41, align 4, !tbaa !165
  %43 = getelementptr inbounds { float, float }, ptr %41, i64 0, i32 1
  %44 = load float, ptr %43, align 4, !tbaa !165
  %45 = fmul float %44, %44
  %46 = tail call float @llvm.fmuladd.f32(float %42, float %42, float %45)
  %47 = fadd float %38, %46
  br label %48

48:                                               ; preds = %40, %35, %1
  %49 = phi float [ 0.000000e+00, %1 ], [ %36, %35 ], [ %47, %40 ]
  %50 = tail call float @sqrtf(float noundef %49) #24
  ret float %50
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorISt7complexIfEE7lp_normEf(ptr noundef nonnull align 8 dereferenceable(88) %0, float noundef %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %12

8:                                                ; preds = %12, %2
  %9 = phi float [ 0.000000e+00, %2 ], [ %20, %12 ]
  %10 = fdiv float 1.000000e+00, %1
  %11 = tail call float @powf(float noundef %9, float noundef %10) #24
  ret float %11

12:                                               ; preds = %6, %12
  %13 = phi i64 [ 0, %6 ], [ %21, %12 ]
  %14 = phi float [ 0.000000e+00, %6 ], [ %20, %12 ]
  %15 = load ptr, ptr %7, align 8, !tbaa !344
  %16 = getelementptr inbounds %"class.std::complex.33", ptr %15, i64 %13
  %17 = load <2 x float>, ptr %16, align 4
  %18 = tail call float @cabsf(<2 x float> noundef %17) #24
  %19 = tail call float @powf(float noundef %18, float noundef %1) #24
  %20 = fadd float %14, %19
  %21 = add nuw nsw i64 %13, 1
  %22 = load i32, ptr %3, align 8, !tbaa !341
  %23 = zext i32 %22 to i64
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %12, label %8
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii6VectorISt7complexIfEE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #17 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !341
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %9

7:                                                ; preds = %9, %1
  %8 = phi float [ 0.000000e+00, %1 ], [ %17, %9 ]
  ret float %8

9:                                                ; preds = %5, %9
  %10 = phi i64 [ 0, %5 ], [ %18, %9 ]
  %11 = phi float [ 0.000000e+00, %5 ], [ %17, %9 ]
  %12 = load ptr, ptr %6, align 8, !tbaa !344
  %13 = getelementptr inbounds %"class.std::complex.33", ptr %12, i64 %10
  %14 = load <2 x float>, ptr %13, align 4
  %15 = tail call float @cabsf(<2 x float> noundef %14) #24
  %16 = fcmp olt float %15, %11
  %17 = select i1 %16, float %11, float %15
  %18 = add nuw nsw i64 %10, 1
  %19 = load i32, ptr %2, align 8, !tbaa !341
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 %18, %20
  br i1 %21, label %9, label %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIfEE8all_zeroEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !341
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !344
  %8 = zext i32 %3 to i64
  %9 = load float, ptr %7, align 4, !tbaa !165
  %10 = fcmp une float %9, 0.000000e+00
  %11 = getelementptr inbounds { float, float }, ptr %7, i64 0, i32 1
  %12 = load float, ptr %11, align 4
  %13 = fcmp une float %12, 0.000000e+00
  %14 = select i1 %10, i1 true, i1 %13
  br i1 %14, label %29, label %15

15:                                               ; preds = %5, %19
  %16 = phi i64 [ %17, %19 ], [ 0, %5 ]
  %17 = add nuw nsw i64 %16, 1
  %18 = icmp eq i64 %17, %8
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %17
  %21 = load float, ptr %20, align 4, !tbaa !165
  %22 = fcmp une float %21, 0.000000e+00
  %23 = getelementptr inbounds { float, float }, ptr %20, i64 0, i32 1
  %24 = load float, ptr %23, align 4
  %25 = fcmp une float %24, 0.000000e+00
  %26 = select i1 %22, i1 true, i1 %25
  br i1 %26, label %27, label %15

27:                                               ; preds = %15, %19
  %28 = icmp uge i64 %17, %8
  br label %29

29:                                               ; preds = %27, %5, %1
  %30 = phi i1 [ true, %1 ], [ false, %5 ], [ %28, %27 ]
  ret i1 %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIfEE15is_non_negativeEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !341
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 4 dereferenceable(8) ptr @_ZN6dealii6VectorISt7complexIfEEclEj(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !344
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.std::complex.33", ptr %4, i64 %5
  ret ptr %6
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIfEEpLERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %9

9:                                                ; preds = %9, %6
  %10 = phi i64 [ 0, %6 ], [ %18, %9 ]
  %11 = load ptr, ptr %7, align 8, !tbaa !344
  %12 = getelementptr inbounds %"class.std::complex.33", ptr %11, i64 %10
  %13 = load ptr, ptr %8, align 8, !tbaa !344
  %14 = getelementptr inbounds %"class.std::complex.33", ptr %13, i64 %10
  %15 = load <2 x float>, ptr %12, align 4
  %16 = load <2 x float>, ptr %14, align 4
  %17 = fadd <2 x float> %15, %16
  store <2 x float> %17, ptr %14, align 4
  %18 = add nuw nsw i64 %10, 1
  %19 = load i32, ptr %3, align 8, !tbaa !341
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 %18, %20
  br i1 %21, label %9, label %22

22:                                               ; preds = %9, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE3addERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %10, %2
  ret void

10:                                               ; preds = %6, %10
  %11 = phi i64 [ 0, %6 ], [ %19, %10 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !344
  %13 = getelementptr inbounds %"class.std::complex.33", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !344
  %15 = getelementptr inbounds %"class.std::complex.33", ptr %14, i64 %11
  %16 = load <2 x float>, ptr %13, align 4
  %17 = load <2 x float>, ptr %15, align 4
  %18 = fadd <2 x float> %16, %17
  store <2 x float> %18, ptr %15, align 4
  %19 = add nuw nsw i64 %11, 1
  %20 = load i32, ptr %3, align 8, !tbaa !341
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIfEEmIERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %10, %2
  ret ptr %0

10:                                               ; preds = %6, %10
  %11 = phi i64 [ 0, %6 ], [ %19, %10 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !344
  %13 = getelementptr inbounds %"class.std::complex.33", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !344
  %15 = getelementptr inbounds %"class.std::complex.33", ptr %14, i64 %11
  %16 = load <2 x float>, ptr %13, align 4
  %17 = load <2 x float>, ptr %15, align 4
  %18 = fsub <2 x float> %17, %16
  store <2 x float> %18, ptr %15, align 4
  %19 = add nuw nsw i64 %11, 1
  %20 = load i32, ptr %3, align 8, !tbaa !341
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE3addES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %9

8:                                                ; preds = %9, %2
  ret void

9:                                                ; preds = %6, %9
  %10 = phi i64 [ 0, %6 ], [ %15, %9 ]
  %11 = load ptr, ptr %7, align 8, !tbaa !344
  %12 = getelementptr inbounds %"class.std::complex.33", ptr %11, i64 %10
  %13 = load <2 x float>, ptr %12, align 4
  %14 = fadd <2 x float> %13, %1
  store <2 x float> %14, ptr %12, align 4
  %15 = add nuw nsw i64 %10, 1
  %16 = load i32, ptr %3, align 8, !tbaa !341
  %17 = zext i32 %16 to i64
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %9, label %8
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE3addES2_RKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #16 comdat align 2 {
  %4 = extractelement <2 x float> %1, i64 1
  %5 = extractelement <2 x float> %1, i64 0
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !344
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !341
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %46, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.32", ptr %2, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !344
  br label %16

16:                                               ; preds = %13, %40
  %17 = phi ptr [ %15, %13 ], [ %19, %40 ]
  %18 = phi ptr [ %7, %13 ], [ %42, %40 ]
  %19 = getelementptr inbounds %"class.std::complex.33", ptr %17, i64 1
  %20 = load float, ptr %17, align 4
  %21 = getelementptr inbounds { float, float }, ptr %17, i64 0, i32 1
  %22 = load float, ptr %21, align 4
  %23 = insertelement <2 x float> poison, float %22, i64 0
  %24 = shufflevector <2 x float> %23, <2 x float> poison, <2 x i32> zeroinitializer
  %25 = fmul <2 x float> %24, %1
  %26 = shufflevector <2 x float> %25, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %27 = insertelement <2 x float> poison, float %20, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = fmul <2 x float> %28, %1
  %30 = fsub <2 x float> %29, %26
  %31 = fadd <2 x float> %29, %26
  %32 = shufflevector <2 x float> %30, <2 x float> %31, <2 x i32> <i32 0, i32 3>
  %33 = extractelement <2 x float> %30, i64 0
  %34 = fcmp uno float %33, 0.000000e+00
  br i1 %34, label %35, label %40, !prof !340

35:                                               ; preds = %16
  %36 = extractelement <2 x float> %31, i64 1
  %37 = fcmp uno float %36, 0.000000e+00
  br i1 %37, label %38, label %40, !prof !340

38:                                               ; preds = %35
  %39 = tail call noundef <2 x float> @__mulsc3(float noundef %5, float noundef %4, float noundef %20, float noundef %22) #24
  br label %40

40:                                               ; preds = %16, %35, %38
  %41 = phi <2 x float> [ %32, %16 ], [ %32, %35 ], [ %39, %38 ]
  %42 = getelementptr inbounds %"class.std::complex.33", ptr %18, i64 1
  %43 = load <2 x float>, ptr %18, align 4
  %44 = fadd <2 x float> %41, %43
  store <2 x float> %44, ptr %18, align 4
  %45 = icmp eq ptr %42, %11
  br i1 %45, label %46, label %16

46:                                               ; preds = %40, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE3addES2_RKS3_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1, ptr noundef nonnull align 8 dereferenceable(88) %2, <2 x float> %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #17 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !341
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.32", ptr %2, i64 0, i32 3
  %11 = extractelement <2 x float> %1, i64 0
  %12 = extractelement <2 x float> %1, i64 1
  %13 = getelementptr inbounds %"class.dealii::Vector.32", ptr %4, i64 0, i32 3
  %14 = extractelement <2 x float> %3, i64 0
  %15 = extractelement <2 x float> %3, i64 1
  %16 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %18

17:                                               ; preds = %59, %5
  ret void

18:                                               ; preds = %9, %59
  %19 = phi i64 [ 0, %9 ], [ %71, %59 ]
  %20 = load ptr, ptr %10, align 8, !tbaa !344
  %21 = getelementptr inbounds %"class.std::complex.33", ptr %20, i64 %19
  %22 = load float, ptr %21, align 4
  %23 = getelementptr inbounds { float, float }, ptr %21, i64 0, i32 1
  %24 = load float, ptr %23, align 4
  %25 = fmul float %11, %22
  %26 = fmul float %12, %24
  %27 = fmul float %11, %24
  %28 = fmul float %12, %22
  %29 = fsub float %25, %26
  %30 = fadd float %28, %27
  %31 = fcmp uno float %29, 0.000000e+00
  br i1 %31, label %32, label %38, !prof !340

32:                                               ; preds = %18
  %33 = fcmp uno float %30, 0.000000e+00
  br i1 %33, label %34, label %38, !prof !340

34:                                               ; preds = %32
  %35 = tail call noundef <2 x float> @__mulsc3(float noundef %11, float noundef %12, float noundef %22, float noundef %24) #24
  %36 = extractelement <2 x float> %35, i64 0
  %37 = extractelement <2 x float> %35, i64 1
  br label %38

38:                                               ; preds = %18, %32, %34
  %39 = phi float [ %29, %18 ], [ %29, %32 ], [ %36, %34 ]
  %40 = phi float [ %30, %18 ], [ %30, %32 ], [ %37, %34 ]
  %41 = load ptr, ptr %13, align 8, !tbaa !344
  %42 = getelementptr inbounds %"class.std::complex.33", ptr %41, i64 %19
  %43 = load float, ptr %42, align 4
  %44 = getelementptr inbounds { float, float }, ptr %42, i64 0, i32 1
  %45 = load float, ptr %44, align 4
  %46 = fmul float %14, %43
  %47 = fmul float %15, %45
  %48 = fmul float %14, %45
  %49 = fmul float %15, %43
  %50 = fsub float %46, %47
  %51 = fadd float %49, %48
  %52 = fcmp uno float %50, 0.000000e+00
  br i1 %52, label %53, label %59, !prof !340

53:                                               ; preds = %38
  %54 = fcmp uno float %51, 0.000000e+00
  br i1 %54, label %55, label %59, !prof !340

55:                                               ; preds = %53
  %56 = tail call noundef <2 x float> @__mulsc3(float noundef %14, float noundef %15, float noundef %43, float noundef %45) #24
  %57 = extractelement <2 x float> %56, i64 0
  %58 = extractelement <2 x float> %56, i64 1
  br label %59

59:                                               ; preds = %38, %53, %55
  %60 = phi float [ %50, %38 ], [ %50, %53 ], [ %57, %55 ]
  %61 = phi float [ %51, %38 ], [ %51, %53 ], [ %58, %55 ]
  %62 = fadd float %39, %60
  %63 = fadd float %40, %61
  %64 = load ptr, ptr %16, align 8, !tbaa !344
  %65 = getelementptr inbounds %"class.std::complex.33", ptr %64, i64 %19
  %66 = load float, ptr %65, align 4
  %67 = getelementptr inbounds { float, float }, ptr %65, i64 0, i32 1
  %68 = load float, ptr %67, align 4
  %69 = fadd float %62, %66
  %70 = fadd float %63, %68
  store float %69, ptr %65, align 4
  store float %70, ptr %67, align 4
  %71 = add nuw nsw i64 %19, 1
  %72 = load i32, ptr %6, align 8, !tbaa !341
  %73 = zext i32 %72 to i64
  %74 = icmp ult i64 %71, %73
  br i1 %74, label %18, label %17
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE4saddES2_RKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #17 comdat align 2 {
  %4 = extractelement <2 x float> %1, i64 1
  %5 = extractelement <2 x float> %1, i64 0
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !341
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.dealii::Vector.32", ptr %2, i64 0, i32 3
  br label %13

12:                                               ; preds = %38, %3
  ret void

13:                                               ; preds = %9, %38
  %14 = phi i64 [ 0, %9 ], [ %46, %38 ]
  %15 = load ptr, ptr %10, align 8, !tbaa !344
  %16 = getelementptr inbounds %"class.std::complex.33", ptr %15, i64 %14
  %17 = load float, ptr %16, align 4
  %18 = getelementptr inbounds { float, float }, ptr %16, i64 0, i32 1
  %19 = load float, ptr %18, align 4
  %20 = insertelement <2 x float> poison, float %19, i64 0
  %21 = shufflevector <2 x float> %20, <2 x float> poison, <2 x i32> zeroinitializer
  %22 = fmul <2 x float> %21, %1
  %23 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %24 = insertelement <2 x float> poison, float %17, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = fmul <2 x float> %25, %1
  %27 = fsub <2 x float> %26, %23
  %28 = fadd <2 x float> %26, %23
  %29 = shufflevector <2 x float> %27, <2 x float> %28, <2 x i32> <i32 0, i32 3>
  %30 = extractelement <2 x float> %27, i64 0
  %31 = fcmp uno float %30, 0.000000e+00
  br i1 %31, label %32, label %38, !prof !340

32:                                               ; preds = %13
  %33 = extractelement <2 x float> %28, i64 1
  %34 = fcmp uno float %33, 0.000000e+00
  br i1 %34, label %35, label %38, !prof !340

35:                                               ; preds = %32
  %36 = tail call noundef <2 x float> @__mulsc3(float noundef %5, float noundef %4, float noundef %17, float noundef %19) #24
  %37 = load ptr, ptr %10, align 8, !tbaa !344
  br label %38

38:                                               ; preds = %13, %32, %35
  %39 = phi ptr [ %15, %13 ], [ %15, %32 ], [ %37, %35 ]
  %40 = phi <2 x float> [ %29, %13 ], [ %29, %32 ], [ %36, %35 ]
  %41 = load ptr, ptr %11, align 8, !tbaa !344
  %42 = getelementptr inbounds %"class.std::complex.33", ptr %41, i64 %14
  %43 = load <2 x float>, ptr %42, align 4
  %44 = fadd <2 x float> %40, %43
  %45 = getelementptr inbounds %"class.std::complex.33", ptr %39, i64 %14
  store <2 x float> %44, ptr %45, align 4, !tbaa.struct !336
  %46 = add nuw nsw i64 %14, 1
  %47 = load i32, ptr %6, align 8, !tbaa !341
  %48 = zext i32 %47 to i64
  %49 = icmp ult i64 %46, %48
  br i1 %49, label %13, label %12
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE4saddES2_S2_RKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1, <2 x float> %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #16 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !344
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !341
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.std::complex.33", ptr %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %67, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.dealii::Vector.32", ptr %3, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !344
  %15 = extractelement <2 x float> %1, i64 0
  %16 = extractelement <2 x float> %1, i64 1
  %17 = extractelement <2 x float> %2, i64 0
  %18 = extractelement <2 x float> %2, i64 1
  br label %19

19:                                               ; preds = %12, %58
  %20 = phi ptr [ %6, %12 ], [ %65, %58 ]
  %21 = phi ptr [ %14, %12 ], [ %41, %58 ]
  %22 = load float, ptr %20, align 4
  %23 = getelementptr inbounds { float, float }, ptr %20, i64 0, i32 1
  %24 = load float, ptr %23, align 4
  %25 = fmul float %15, %22
  %26 = fmul float %16, %24
  %27 = fmul float %15, %24
  %28 = fmul float %16, %22
  %29 = fsub float %25, %26
  %30 = fadd float %28, %27
  %31 = fcmp uno float %29, 0.000000e+00
  br i1 %31, label %32, label %38, !prof !340

32:                                               ; preds = %19
  %33 = fcmp uno float %30, 0.000000e+00
  br i1 %33, label %34, label %38, !prof !340

34:                                               ; preds = %32
  %35 = tail call noundef <2 x float> @__mulsc3(float noundef %15, float noundef %16, float noundef %22, float noundef %24) #24
  %36 = extractelement <2 x float> %35, i64 0
  %37 = extractelement <2 x float> %35, i64 1
  br label %38

38:                                               ; preds = %19, %32, %34
  %39 = phi float [ %29, %19 ], [ %29, %32 ], [ %36, %34 ]
  %40 = phi float [ %30, %19 ], [ %30, %32 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.std::complex.33", ptr %21, i64 1
  %42 = load float, ptr %21, align 4
  %43 = getelementptr inbounds { float, float }, ptr %21, i64 0, i32 1
  %44 = load float, ptr %43, align 4
  %45 = fmul float %17, %42
  %46 = fmul float %18, %44
  %47 = fmul float %17, %44
  %48 = fmul float %18, %42
  %49 = fsub float %45, %46
  %50 = fadd float %48, %47
  %51 = fcmp uno float %49, 0.000000e+00
  br i1 %51, label %52, label %58, !prof !340

52:                                               ; preds = %38
  %53 = fcmp uno float %50, 0.000000e+00
  br i1 %53, label %54, label %58, !prof !340

54:                                               ; preds = %52
  %55 = tail call noundef <2 x float> @__mulsc3(float noundef %17, float noundef %18, float noundef %42, float noundef %44) #24
  %56 = extractelement <2 x float> %55, i64 0
  %57 = extractelement <2 x float> %55, i64 1
  br label %58

58:                                               ; preds = %38, %52, %54
  %59 = phi float [ %49, %38 ], [ %49, %52 ], [ %56, %54 ]
  %60 = phi float [ %50, %38 ], [ %50, %52 ], [ %57, %54 ]
  %61 = fadd float %39, %59
  %62 = fadd float %40, %60
  %63 = insertelement <2 x float> poison, float %61, i64 0
  %64 = insertelement <2 x float> %63, float %62, i64 1
  store <2 x float> %64, ptr %20, align 4, !tbaa.struct !336
  %65 = getelementptr inbounds %"class.std::complex.33", ptr %20, i64 1
  %66 = icmp eq ptr %65, %10
  br i1 %66, label %67, label %19

67:                                               ; preds = %58, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE4saddES2_S2_RKS3_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1, <2 x float> %2, ptr noundef nonnull align 8 dereferenceable(88) %3, <2 x float> %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #17 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !341
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %12 = extractelement <2 x float> %1, i64 0
  %13 = extractelement <2 x float> %1, i64 1
  %14 = getelementptr inbounds %"class.dealii::Vector.32", ptr %3, i64 0, i32 3
  %15 = extractelement <2 x float> %2, i64 0
  %16 = extractelement <2 x float> %2, i64 1
  %17 = getelementptr inbounds %"class.dealii::Vector.32", ptr %5, i64 0, i32 3
  %18 = extractelement <2 x float> %4, i64 0
  %19 = extractelement <2 x float> %4, i64 1
  br label %21

20:                                               ; preds = %85, %6
  ret void

21:                                               ; preds = %10, %85
  %22 = phi i64 [ 0, %10 ], [ %94, %85 ]
  %23 = load ptr, ptr %11, align 8, !tbaa !344
  %24 = getelementptr inbounds %"class.std::complex.33", ptr %23, i64 %22
  %25 = load float, ptr %24, align 4
  %26 = getelementptr inbounds { float, float }, ptr %24, i64 0, i32 1
  %27 = load float, ptr %26, align 4
  %28 = fmul float %12, %25
  %29 = fmul float %13, %27
  %30 = fmul float %12, %27
  %31 = fmul float %13, %25
  %32 = fsub float %28, %29
  %33 = fadd float %31, %30
  %34 = fcmp uno float %32, 0.000000e+00
  br i1 %34, label %35, label %41, !prof !340

35:                                               ; preds = %21
  %36 = fcmp uno float %33, 0.000000e+00
  br i1 %36, label %37, label %41, !prof !340

37:                                               ; preds = %35
  %38 = tail call noundef <2 x float> @__mulsc3(float noundef %12, float noundef %13, float noundef %25, float noundef %27) #24
  %39 = extractelement <2 x float> %38, i64 0
  %40 = extractelement <2 x float> %38, i64 1
  br label %41

41:                                               ; preds = %21, %35, %37
  %42 = phi float [ %32, %21 ], [ %32, %35 ], [ %39, %37 ]
  %43 = phi float [ %33, %21 ], [ %33, %35 ], [ %40, %37 ]
  %44 = load ptr, ptr %14, align 8, !tbaa !344
  %45 = getelementptr inbounds %"class.std::complex.33", ptr %44, i64 %22
  %46 = load float, ptr %45, align 4
  %47 = getelementptr inbounds { float, float }, ptr %45, i64 0, i32 1
  %48 = load float, ptr %47, align 4
  %49 = fmul float %15, %46
  %50 = fmul float %16, %48
  %51 = fmul float %15, %48
  %52 = fmul float %16, %46
  %53 = fsub float %49, %50
  %54 = fadd float %52, %51
  %55 = fcmp uno float %53, 0.000000e+00
  br i1 %55, label %56, label %62, !prof !340

56:                                               ; preds = %41
  %57 = fcmp uno float %54, 0.000000e+00
  br i1 %57, label %58, label %62, !prof !340

58:                                               ; preds = %56
  %59 = tail call noundef <2 x float> @__mulsc3(float noundef %15, float noundef %16, float noundef %46, float noundef %48) #24
  %60 = extractelement <2 x float> %59, i64 0
  %61 = extractelement <2 x float> %59, i64 1
  br label %62

62:                                               ; preds = %41, %56, %58
  %63 = phi float [ %53, %41 ], [ %53, %56 ], [ %60, %58 ]
  %64 = phi float [ %54, %41 ], [ %54, %56 ], [ %61, %58 ]
  %65 = fadd float %42, %63
  %66 = fadd float %43, %64
  %67 = load ptr, ptr %17, align 8, !tbaa !344
  %68 = getelementptr inbounds %"class.std::complex.33", ptr %67, i64 %22
  %69 = load float, ptr %68, align 4
  %70 = getelementptr inbounds { float, float }, ptr %68, i64 0, i32 1
  %71 = load float, ptr %70, align 4
  %72 = fmul float %18, %69
  %73 = fmul float %19, %71
  %74 = fmul float %18, %71
  %75 = fmul float %19, %69
  %76 = fsub float %72, %73
  %77 = fadd float %75, %74
  %78 = fcmp uno float %76, 0.000000e+00
  br i1 %78, label %79, label %85, !prof !340

79:                                               ; preds = %62
  %80 = fcmp uno float %77, 0.000000e+00
  br i1 %80, label %81, label %85, !prof !340

81:                                               ; preds = %79
  %82 = tail call noundef <2 x float> @__mulsc3(float noundef %18, float noundef %19, float noundef %69, float noundef %71) #24
  %83 = extractelement <2 x float> %82, i64 0
  %84 = extractelement <2 x float> %82, i64 1
  br label %85

85:                                               ; preds = %62, %79, %81
  %86 = phi float [ %76, %62 ], [ %76, %79 ], [ %83, %81 ]
  %87 = phi float [ %77, %62 ], [ %77, %79 ], [ %84, %81 ]
  %88 = fadd float %65, %86
  %89 = fadd float %66, %87
  %90 = insertelement <2 x float> poison, float %88, i64 0
  %91 = insertelement <2 x float> %90, float %89, i64 1
  %92 = load ptr, ptr %11, align 8, !tbaa !344
  %93 = getelementptr inbounds %"class.std::complex.33", ptr %92, i64 %22
  store <2 x float> %91, ptr %93, align 4, !tbaa.struct !336
  %94 = add nuw nsw i64 %22, 1
  %95 = load i32, ptr %7, align 8, !tbaa !341
  %96 = zext i32 %95 to i64
  %97 = icmp ult i64 %94, %96
  br i1 %97, label %21, label %20
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE4saddES2_S2_RKS3_S2_S5_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1, <2 x float> %2, ptr noundef nonnull align 8 dereferenceable(88) %3, <2 x float> %4, ptr noundef nonnull align 8 dereferenceable(88) %5, <2 x float> %6, ptr noundef nonnull align 8 dereferenceable(88) %7) local_unnamed_addr #17 comdat align 2 {
  %9 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !341
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %14 = extractelement <2 x float> %1, i64 0
  %15 = extractelement <2 x float> %1, i64 1
  %16 = getelementptr inbounds %"class.dealii::Vector.32", ptr %3, i64 0, i32 3
  %17 = extractelement <2 x float> %2, i64 0
  %18 = extractelement <2 x float> %2, i64 1
  %19 = getelementptr inbounds %"class.dealii::Vector.32", ptr %5, i64 0, i32 3
  %20 = extractelement <2 x float> %4, i64 0
  %21 = extractelement <2 x float> %4, i64 1
  %22 = getelementptr inbounds %"class.dealii::Vector.32", ptr %7, i64 0, i32 3
  %23 = extractelement <2 x float> %6, i64 0
  %24 = extractelement <2 x float> %6, i64 1
  br label %26

25:                                               ; preds = %113, %8
  ret void

26:                                               ; preds = %12, %113
  %27 = phi i64 [ 0, %12 ], [ %122, %113 ]
  %28 = load ptr, ptr %13, align 8, !tbaa !344
  %29 = getelementptr inbounds %"class.std::complex.33", ptr %28, i64 %27
  %30 = load float, ptr %29, align 4
  %31 = getelementptr inbounds { float, float }, ptr %29, i64 0, i32 1
  %32 = load float, ptr %31, align 4
  %33 = fmul float %14, %30
  %34 = fmul float %15, %32
  %35 = fmul float %14, %32
  %36 = fmul float %15, %30
  %37 = fsub float %33, %34
  %38 = fadd float %36, %35
  %39 = fcmp uno float %37, 0.000000e+00
  br i1 %39, label %40, label %46, !prof !340

40:                                               ; preds = %26
  %41 = fcmp uno float %38, 0.000000e+00
  br i1 %41, label %42, label %46, !prof !340

42:                                               ; preds = %40
  %43 = tail call noundef <2 x float> @__mulsc3(float noundef %14, float noundef %15, float noundef %30, float noundef %32) #24
  %44 = extractelement <2 x float> %43, i64 0
  %45 = extractelement <2 x float> %43, i64 1
  br label %46

46:                                               ; preds = %26, %40, %42
  %47 = phi float [ %37, %26 ], [ %37, %40 ], [ %44, %42 ]
  %48 = phi float [ %38, %26 ], [ %38, %40 ], [ %45, %42 ]
  %49 = load ptr, ptr %16, align 8, !tbaa !344
  %50 = getelementptr inbounds %"class.std::complex.33", ptr %49, i64 %27
  %51 = load float, ptr %50, align 4
  %52 = getelementptr inbounds { float, float }, ptr %50, i64 0, i32 1
  %53 = load float, ptr %52, align 4
  %54 = fmul float %17, %51
  %55 = fmul float %18, %53
  %56 = fmul float %17, %53
  %57 = fmul float %18, %51
  %58 = fsub float %54, %55
  %59 = fadd float %57, %56
  %60 = fcmp uno float %58, 0.000000e+00
  br i1 %60, label %61, label %67, !prof !340

61:                                               ; preds = %46
  %62 = fcmp uno float %59, 0.000000e+00
  br i1 %62, label %63, label %67, !prof !340

63:                                               ; preds = %61
  %64 = tail call noundef <2 x float> @__mulsc3(float noundef %17, float noundef %18, float noundef %51, float noundef %53) #24
  %65 = extractelement <2 x float> %64, i64 0
  %66 = extractelement <2 x float> %64, i64 1
  br label %67

67:                                               ; preds = %46, %61, %63
  %68 = phi float [ %58, %46 ], [ %58, %61 ], [ %65, %63 ]
  %69 = phi float [ %59, %46 ], [ %59, %61 ], [ %66, %63 ]
  %70 = fadd float %47, %68
  %71 = fadd float %48, %69
  %72 = load ptr, ptr %19, align 8, !tbaa !344
  %73 = getelementptr inbounds %"class.std::complex.33", ptr %72, i64 %27
  %74 = load float, ptr %73, align 4
  %75 = getelementptr inbounds { float, float }, ptr %73, i64 0, i32 1
  %76 = load float, ptr %75, align 4
  %77 = fmul float %20, %74
  %78 = fmul float %21, %76
  %79 = fmul float %20, %76
  %80 = fmul float %21, %74
  %81 = fsub float %77, %78
  %82 = fadd float %80, %79
  %83 = fcmp uno float %81, 0.000000e+00
  br i1 %83, label %84, label %90, !prof !340

84:                                               ; preds = %67
  %85 = fcmp uno float %82, 0.000000e+00
  br i1 %85, label %86, label %90, !prof !340

86:                                               ; preds = %84
  %87 = tail call noundef <2 x float> @__mulsc3(float noundef %20, float noundef %21, float noundef %74, float noundef %76) #24
  %88 = extractelement <2 x float> %87, i64 0
  %89 = extractelement <2 x float> %87, i64 1
  br label %90

90:                                               ; preds = %67, %84, %86
  %91 = phi float [ %81, %67 ], [ %81, %84 ], [ %88, %86 ]
  %92 = phi float [ %82, %67 ], [ %82, %84 ], [ %89, %86 ]
  %93 = fadd float %70, %91
  %94 = fadd float %71, %92
  %95 = load ptr, ptr %22, align 8, !tbaa !344
  %96 = getelementptr inbounds %"class.std::complex.33", ptr %95, i64 %27
  %97 = load float, ptr %96, align 4
  %98 = getelementptr inbounds { float, float }, ptr %96, i64 0, i32 1
  %99 = load float, ptr %98, align 4
  %100 = fmul float %23, %97
  %101 = fmul float %24, %99
  %102 = fmul float %23, %99
  %103 = fmul float %24, %97
  %104 = fsub float %100, %101
  %105 = fadd float %103, %102
  %106 = fcmp uno float %104, 0.000000e+00
  br i1 %106, label %107, label %113, !prof !340

107:                                              ; preds = %90
  %108 = fcmp uno float %105, 0.000000e+00
  br i1 %108, label %109, label %113, !prof !340

109:                                              ; preds = %107
  %110 = tail call noundef <2 x float> @__mulsc3(float noundef %23, float noundef %24, float noundef %97, float noundef %99) #24
  %111 = extractelement <2 x float> %110, i64 0
  %112 = extractelement <2 x float> %110, i64 1
  br label %113

113:                                              ; preds = %90, %107, %109
  %114 = phi float [ %104, %90 ], [ %104, %107 ], [ %111, %109 ]
  %115 = phi float [ %105, %90 ], [ %105, %107 ], [ %112, %109 ]
  %116 = fadd float %93, %114
  %117 = fadd float %94, %115
  %118 = insertelement <2 x float> poison, float %116, i64 0
  %119 = insertelement <2 x float> %118, float %117, i64 1
  %120 = load ptr, ptr %13, align 8, !tbaa !344
  %121 = getelementptr inbounds %"class.std::complex.33", ptr %120, i64 %27
  store <2 x float> %119, ptr %121, align 4, !tbaa.struct !336
  %122 = add nuw nsw i64 %27, 1
  %123 = load i32, ptr %9, align 8, !tbaa !341
  %124 = zext i32 %123 to i64
  %125 = icmp ult i64 %122, %124
  br i1 %125, label %26, label %25
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE5scaleES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !344
  %5 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !341
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::complex.33", ptr %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %2
  %11 = extractelement <2 x float> %1, i64 0
  %12 = extractelement <2 x float> %1, i64 1
  br label %13

13:                                               ; preds = %10, %32
  %14 = phi ptr [ %4, %10 ], [ %15, %32 ]
  %15 = getelementptr inbounds %"class.std::complex.33", ptr %14, i64 1
  %16 = load float, ptr %14, align 4
  %17 = getelementptr inbounds { float, float }, ptr %14, i64 0, i32 1
  %18 = load float, ptr %17, align 4
  %19 = fmul float %11, %16
  %20 = fmul float %12, %18
  %21 = fmul float %12, %16
  %22 = fmul float %11, %18
  %23 = fsub float %19, %20
  %24 = fadd float %21, %22
  %25 = fcmp uno float %23, 0.000000e+00
  br i1 %25, label %26, label %32, !prof !340

26:                                               ; preds = %13
  %27 = fcmp uno float %24, 0.000000e+00
  br i1 %27, label %28, label %32, !prof !340

28:                                               ; preds = %26
  %29 = tail call noundef <2 x float> @__mulsc3(float noundef %16, float noundef %18, float noundef %11, float noundef %12) #24
  %30 = extractelement <2 x float> %29, i64 0
  %31 = extractelement <2 x float> %29, i64 1
  br label %32

32:                                               ; preds = %13, %26, %28
  %33 = phi float [ %23, %13 ], [ %23, %26 ], [ %30, %28 ]
  %34 = phi float [ %24, %13 ], [ %24, %26 ], [ %31, %28 ]
  store float %33, ptr %14, align 4
  store float %34, ptr %17, align 4
  %35 = icmp eq ptr %15, %8
  br i1 %35, label %36, label %13

36:                                               ; preds = %32, %2
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIfEEmLES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !344
  %5 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !341
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::complex.33", ptr %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %2
  %11 = extractelement <2 x float> %1, i64 0
  %12 = extractelement <2 x float> %1, i64 1
  br label %13

13:                                               ; preds = %32, %10
  %14 = phi ptr [ %4, %10 ], [ %15, %32 ]
  %15 = getelementptr inbounds %"class.std::complex.33", ptr %14, i64 1
  %16 = load float, ptr %14, align 4
  %17 = getelementptr inbounds { float, float }, ptr %14, i64 0, i32 1
  %18 = load float, ptr %17, align 4
  %19 = fmul float %11, %16
  %20 = fmul float %12, %18
  %21 = fmul float %12, %16
  %22 = fmul float %11, %18
  %23 = fsub float %19, %20
  %24 = fadd float %21, %22
  %25 = fcmp uno float %23, 0.000000e+00
  br i1 %25, label %26, label %32, !prof !340

26:                                               ; preds = %13
  %27 = fcmp uno float %24, 0.000000e+00
  br i1 %27, label %28, label %32, !prof !340

28:                                               ; preds = %26
  %29 = tail call noundef <2 x float> @__mulsc3(float noundef %16, float noundef %18, float noundef %11, float noundef %12) #24
  %30 = extractelement <2 x float> %29, i64 0
  %31 = extractelement <2 x float> %29, i64 1
  br label %32

32:                                               ; preds = %28, %26, %13
  %33 = phi float [ %23, %13 ], [ %23, %26 ], [ %30, %28 ]
  %34 = phi float [ %24, %13 ], [ %24, %26 ], [ %31, %28 ]
  store float %33, ptr %14, align 4
  store float %34, ptr %17, align 4
  %35 = icmp eq ptr %15, %8
  br i1 %35, label %36, label %13

36:                                               ; preds = %32, %2
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIfEEdVES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1) local_unnamed_addr #16 comdat align 2 {
  %3 = extractelement <2 x float> %1, i64 0
  %4 = extractelement <2 x float> %1, i64 1
  %5 = tail call noundef <2 x float> @__divsc3(float noundef 1.000000e+00, float noundef 0.000000e+00, float noundef %3, float noundef %4) #24
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !344
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !341
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.std::complex.33", ptr %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %39, label %13

13:                                               ; preds = %2
  %14 = extractelement <2 x float> %5, i64 0
  %15 = extractelement <2 x float> %5, i64 1
  br label %16

16:                                               ; preds = %35, %13
  %17 = phi ptr [ %7, %13 ], [ %18, %35 ]
  %18 = getelementptr inbounds %"class.std::complex.33", ptr %17, i64 1
  %19 = load float, ptr %17, align 4
  %20 = getelementptr inbounds { float, float }, ptr %17, i64 0, i32 1
  %21 = load float, ptr %20, align 4
  %22 = fmul float %14, %19
  %23 = fmul float %15, %21
  %24 = fmul float %15, %19
  %25 = fmul float %14, %21
  %26 = fsub float %22, %23
  %27 = fadd float %24, %25
  %28 = fcmp uno float %26, 0.000000e+00
  br i1 %28, label %29, label %35, !prof !340

29:                                               ; preds = %16
  %30 = fcmp uno float %27, 0.000000e+00
  br i1 %30, label %31, label %35, !prof !340

31:                                               ; preds = %29
  %32 = tail call noundef <2 x float> @__mulsc3(float noundef %19, float noundef %21, float noundef %14, float noundef %15) #24
  %33 = extractelement <2 x float> %32, i64 0
  %34 = extractelement <2 x float> %32, i64 1
  br label %35

35:                                               ; preds = %31, %29, %16
  %36 = phi float [ %26, %16 ], [ %26, %29 ], [ %33, %31 ]
  %37 = phi float [ %27, %16 ], [ %27, %29 ], [ %34, %31 ]
  store float %36, ptr %17, align 4
  store float %37, ptr %20, align 4
  %38 = icmp eq ptr %18, %11
  br i1 %38, label %39, label %16

39:                                               ; preds = %35, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE3equES2_RKS3_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1, ptr noundef nonnull align 8 dereferenceable(88) %2, <2 x float> %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #17 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !341
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.32", ptr %2, i64 0, i32 3
  %11 = extractelement <2 x float> %1, i64 0
  %12 = extractelement <2 x float> %1, i64 1
  %13 = getelementptr inbounds %"class.dealii::Vector.32", ptr %4, i64 0, i32 3
  %14 = extractelement <2 x float> %3, i64 0
  %15 = extractelement <2 x float> %3, i64 1
  %16 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %18

17:                                               ; preds = %59, %5
  ret void

18:                                               ; preds = %9, %59
  %19 = phi i64 [ 0, %9 ], [ %68, %59 ]
  %20 = load ptr, ptr %10, align 8, !tbaa !344
  %21 = getelementptr inbounds %"class.std::complex.33", ptr %20, i64 %19
  %22 = load float, ptr %21, align 4
  %23 = getelementptr inbounds { float, float }, ptr %21, i64 0, i32 1
  %24 = load float, ptr %23, align 4
  %25 = fmul float %11, %22
  %26 = fmul float %12, %24
  %27 = fmul float %11, %24
  %28 = fmul float %12, %22
  %29 = fsub float %25, %26
  %30 = fadd float %28, %27
  %31 = fcmp uno float %29, 0.000000e+00
  br i1 %31, label %32, label %38, !prof !340

32:                                               ; preds = %18
  %33 = fcmp uno float %30, 0.000000e+00
  br i1 %33, label %34, label %38, !prof !340

34:                                               ; preds = %32
  %35 = tail call noundef <2 x float> @__mulsc3(float noundef %11, float noundef %12, float noundef %22, float noundef %24) #24
  %36 = extractelement <2 x float> %35, i64 0
  %37 = extractelement <2 x float> %35, i64 1
  br label %38

38:                                               ; preds = %18, %32, %34
  %39 = phi float [ %29, %18 ], [ %29, %32 ], [ %36, %34 ]
  %40 = phi float [ %30, %18 ], [ %30, %32 ], [ %37, %34 ]
  %41 = load ptr, ptr %13, align 8, !tbaa !344
  %42 = getelementptr inbounds %"class.std::complex.33", ptr %41, i64 %19
  %43 = load float, ptr %42, align 4
  %44 = getelementptr inbounds { float, float }, ptr %42, i64 0, i32 1
  %45 = load float, ptr %44, align 4
  %46 = fmul float %14, %43
  %47 = fmul float %15, %45
  %48 = fmul float %14, %45
  %49 = fmul float %15, %43
  %50 = fsub float %46, %47
  %51 = fadd float %49, %48
  %52 = fcmp uno float %50, 0.000000e+00
  br i1 %52, label %53, label %59, !prof !340

53:                                               ; preds = %38
  %54 = fcmp uno float %51, 0.000000e+00
  br i1 %54, label %55, label %59, !prof !340

55:                                               ; preds = %53
  %56 = tail call noundef <2 x float> @__mulsc3(float noundef %14, float noundef %15, float noundef %43, float noundef %45) #24
  %57 = extractelement <2 x float> %56, i64 0
  %58 = extractelement <2 x float> %56, i64 1
  br label %59

59:                                               ; preds = %38, %53, %55
  %60 = phi float [ %50, %38 ], [ %50, %53 ], [ %57, %55 ]
  %61 = phi float [ %51, %38 ], [ %51, %53 ], [ %58, %55 ]
  %62 = fadd float %39, %60
  %63 = fadd float %40, %61
  %64 = insertelement <2 x float> poison, float %62, i64 0
  %65 = insertelement <2 x float> %64, float %63, i64 1
  %66 = load ptr, ptr %16, align 8, !tbaa !344
  %67 = getelementptr inbounds %"class.std::complex.33", ptr %66, i64 %19
  store <2 x float> %65, ptr %67, align 4, !tbaa.struct !336
  %68 = add nuw nsw i64 %19, 1
  %69 = load i32, ptr %6, align 8, !tbaa !341
  %70 = zext i32 %69 to i64
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %18, label %17
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE3equES2_RKS3_S2_S5_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1, ptr noundef nonnull align 8 dereferenceable(88) %2, <2 x float> %3, ptr noundef nonnull align 8 dereferenceable(88) %4, <2 x float> %5, ptr noundef nonnull align 8 dereferenceable(88) %6) local_unnamed_addr #17 comdat align 2 {
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !341
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.dealii::Vector.32", ptr %2, i64 0, i32 3
  %13 = extractelement <2 x float> %1, i64 0
  %14 = extractelement <2 x float> %1, i64 1
  %15 = getelementptr inbounds %"class.dealii::Vector.32", ptr %4, i64 0, i32 3
  %16 = extractelement <2 x float> %3, i64 0
  %17 = extractelement <2 x float> %3, i64 1
  %18 = getelementptr inbounds %"class.dealii::Vector.32", ptr %6, i64 0, i32 3
  %19 = extractelement <2 x float> %5, i64 0
  %20 = extractelement <2 x float> %5, i64 1
  %21 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %23

22:                                               ; preds = %87, %7
  ret void

23:                                               ; preds = %11, %87
  %24 = phi i64 [ 0, %11 ], [ %96, %87 ]
  %25 = load ptr, ptr %12, align 8, !tbaa !344
  %26 = getelementptr inbounds %"class.std::complex.33", ptr %25, i64 %24
  %27 = load float, ptr %26, align 4
  %28 = getelementptr inbounds { float, float }, ptr %26, i64 0, i32 1
  %29 = load float, ptr %28, align 4
  %30 = fmul float %13, %27
  %31 = fmul float %14, %29
  %32 = fmul float %13, %29
  %33 = fmul float %14, %27
  %34 = fsub float %30, %31
  %35 = fadd float %33, %32
  %36 = fcmp uno float %34, 0.000000e+00
  br i1 %36, label %37, label %43, !prof !340

37:                                               ; preds = %23
  %38 = fcmp uno float %35, 0.000000e+00
  br i1 %38, label %39, label %43, !prof !340

39:                                               ; preds = %37
  %40 = tail call noundef <2 x float> @__mulsc3(float noundef %13, float noundef %14, float noundef %27, float noundef %29) #24
  %41 = extractelement <2 x float> %40, i64 0
  %42 = extractelement <2 x float> %40, i64 1
  br label %43

43:                                               ; preds = %23, %37, %39
  %44 = phi float [ %34, %23 ], [ %34, %37 ], [ %41, %39 ]
  %45 = phi float [ %35, %23 ], [ %35, %37 ], [ %42, %39 ]
  %46 = load ptr, ptr %15, align 8, !tbaa !344
  %47 = getelementptr inbounds %"class.std::complex.33", ptr %46, i64 %24
  %48 = load float, ptr %47, align 4
  %49 = getelementptr inbounds { float, float }, ptr %47, i64 0, i32 1
  %50 = load float, ptr %49, align 4
  %51 = fmul float %16, %48
  %52 = fmul float %17, %50
  %53 = fmul float %16, %50
  %54 = fmul float %17, %48
  %55 = fsub float %51, %52
  %56 = fadd float %54, %53
  %57 = fcmp uno float %55, 0.000000e+00
  br i1 %57, label %58, label %64, !prof !340

58:                                               ; preds = %43
  %59 = fcmp uno float %56, 0.000000e+00
  br i1 %59, label %60, label %64, !prof !340

60:                                               ; preds = %58
  %61 = tail call noundef <2 x float> @__mulsc3(float noundef %16, float noundef %17, float noundef %48, float noundef %50) #24
  %62 = extractelement <2 x float> %61, i64 0
  %63 = extractelement <2 x float> %61, i64 1
  br label %64

64:                                               ; preds = %43, %58, %60
  %65 = phi float [ %55, %43 ], [ %55, %58 ], [ %62, %60 ]
  %66 = phi float [ %56, %43 ], [ %56, %58 ], [ %63, %60 ]
  %67 = fadd float %44, %65
  %68 = fadd float %45, %66
  %69 = load ptr, ptr %18, align 8, !tbaa !344
  %70 = getelementptr inbounds %"class.std::complex.33", ptr %69, i64 %24
  %71 = load float, ptr %70, align 4
  %72 = getelementptr inbounds { float, float }, ptr %70, i64 0, i32 1
  %73 = load float, ptr %72, align 4
  %74 = fmul float %19, %71
  %75 = fmul float %20, %73
  %76 = fmul float %19, %73
  %77 = fmul float %20, %71
  %78 = fsub float %74, %75
  %79 = fadd float %77, %76
  %80 = fcmp uno float %78, 0.000000e+00
  br i1 %80, label %81, label %87, !prof !340

81:                                               ; preds = %64
  %82 = fcmp uno float %79, 0.000000e+00
  br i1 %82, label %83, label %87, !prof !340

83:                                               ; preds = %81
  %84 = tail call noundef <2 x float> @__mulsc3(float noundef %19, float noundef %20, float noundef %71, float noundef %73) #24
  %85 = extractelement <2 x float> %84, i64 0
  %86 = extractelement <2 x float> %84, i64 1
  br label %87

87:                                               ; preds = %64, %81, %83
  %88 = phi float [ %78, %64 ], [ %78, %81 ], [ %85, %83 ]
  %89 = phi float [ %79, %64 ], [ %79, %81 ], [ %86, %83 ]
  %90 = fadd float %67, %88
  %91 = fadd float %68, %89
  %92 = insertelement <2 x float> poison, float %90, i64 0
  %93 = insertelement <2 x float> %92, float %91, i64 1
  %94 = load ptr, ptr %21, align 8, !tbaa !344
  %95 = getelementptr inbounds %"class.std::complex.33", ptr %94, i64 %24
  store <2 x float> %93, ptr %95, align 4, !tbaa.struct !336
  %96 = add nuw nsw i64 %24, 1
  %97 = load i32, ptr %8, align 8, !tbaa !341
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %96, %98
  br i1 %99, label %23, label %22
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE5ratioERKS3_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #17 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !341
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext true)
  %9 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !341
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %14 = getelementptr inbounds %"class.dealii::Vector.32", ptr %2, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %17

16:                                               ; preds = %17, %3
  ret void

17:                                               ; preds = %12, %17
  %18 = phi i64 [ 0, %12 ], [ %32, %17 ]
  %19 = load ptr, ptr %13, align 8, !tbaa !344
  %20 = getelementptr inbounds %"class.std::complex.33", ptr %19, i64 %18
  %21 = load ptr, ptr %14, align 8, !tbaa !344
  %22 = getelementptr inbounds %"class.std::complex.33", ptr %21, i64 %18
  %23 = load <2 x float>, ptr %20, align 4, !tbaa !153
  %24 = load float, ptr %22, align 4
  %25 = getelementptr inbounds { float, float }, ptr %22, i64 0, i32 1
  %26 = load float, ptr %25, align 4
  %27 = extractelement <2 x float> %23, i64 0
  %28 = extractelement <2 x float> %23, i64 1
  %29 = tail call noundef <2 x float> @__divsc3(float noundef %27, float noundef %28, float noundef %24, float noundef %26) #24
  %30 = load ptr, ptr %15, align 8, !tbaa !344
  %31 = getelementptr inbounds %"class.std::complex.33", ptr %30, i64 %18
  store <2 x float> %29, ptr %31, align 4, !tbaa.struct !336
  %32 = add nuw nsw i64 %18, 1
  %33 = load i32, ptr %9, align 8, !tbaa !341
  %34 = zext i32 %33 to i64
  %35 = icmp ult i64 %32, %34
  br i1 %35, label %17, label %16
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIfEE5printEPKc(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %8 = icmp eq ptr %1, null
  %9 = select i1 %8, ptr @.str.11, ptr %1
  br label %12

10:                                               ; preds = %12, %2
  %11 = tail call i32 @putchar(i32 10)
  ret void

12:                                               ; preds = %6, %12
  %13 = phi i64 [ 0, %6 ], [ %22, %12 ]
  %14 = load ptr, ptr %7, align 8, !tbaa !344
  %15 = getelementptr inbounds %"class.std::complex.33", ptr %14, i64 %13
  %16 = load float, ptr %15, align 4, !tbaa !165
  %17 = fpext float %16 to double
  %18 = getelementptr inbounds { float, float }, ptr %15, i64 0, i32 1
  %19 = load float, ptr %18, align 4, !tbaa !165
  %20 = fpext float %19 to double
  %21 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) %9, double noundef %17, double noundef %20)
  %22 = add nuw nsw i64 %13, 1
  %23 = load i32, ptr %3, align 8, !tbaa !341
  %24 = zext i32 %23 to i64
  %25 = icmp ult i64 %22, %24
  br i1 %25, label %12, label %10
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIfEE5printERSojbb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = getelementptr i8, ptr %9, i64 -24
  %11 = load i64, ptr %10, align 8
  %12 = getelementptr inbounds i8, ptr %1, i64 %11
  %13 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 5
  %14 = load i32, ptr %13, align 8, !tbaa !144
  %15 = and i32 %14, 5
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.1, i32 noundef 784, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %18 unwind label %24

18:                                               ; preds = %17
  %19 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %19, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %20 unwind label %22

20:                                               ; preds = %18
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %21 unwind label %24

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %19) #24
  br label %153

24:                                               ; preds = %20, %17
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %153

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 3
  %28 = load i32, ptr %27, align 8, !tbaa !150
  %29 = zext i32 %2 to i64
  %30 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 1
  %31 = load i64, ptr %30, align 8, !tbaa !151
  store i64 %29, ptr %30, align 8, !tbaa !151
  %32 = load i64, ptr %10, align 8
  %33 = getelementptr inbounds i8, ptr %1, i64 %32
  %34 = getelementptr inbounds %"class.std::ios_base", ptr %33, i64 0, i32 1
  store i64 %29, ptr %34, align 8, !tbaa !151
  %35 = load i64, ptr %10, align 8
  %36 = getelementptr inbounds i8, ptr %1, i64 %35
  %37 = getelementptr inbounds %"class.std::ios_base", ptr %36, i64 0, i32 3
  %38 = load i32, ptr %37, align 8, !tbaa !152
  %39 = and i32 %38, -261
  %40 = select i1 %3, i32 256, i32 4
  %41 = or i32 %39, %40
  store i32 %41, ptr %37, align 8, !tbaa !152
  %42 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %43 = load i32, ptr %42, align 8, !tbaa !341
  %44 = icmp eq i32 %43, 0
  br i1 %4, label %48, label %45

45:                                               ; preds = %26
  br i1 %44, label %105, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %72

48:                                               ; preds = %26
  br i1 %44, label %105, label %49

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %51

51:                                               ; preds = %49, %67
  %52 = phi i64 [ 0, %49 ], [ %68, %67 ]
  %53 = load ptr, ptr %50, align 8, !tbaa !344
  %54 = getelementptr inbounds %"class.std::complex.33", ptr %53, i64 %52
  %55 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsIfcSt11char_traitsIcEERSt13basic_ostreamIT0_T1_ES6_RKSt7complexIT_E(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull align 4 dereferenceable(8) %54)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6)
  store i8 32, ptr %6, align 1, !tbaa !153
  %56 = load ptr, ptr %55, align 8, !tbaa !5
  %57 = getelementptr i8, ptr %56, i64 -24
  %58 = load i64, ptr %57, align 8
  %59 = getelementptr inbounds i8, ptr %55, i64 %58
  %60 = getelementptr inbounds %"class.std::ios_base", ptr %59, i64 0, i32 2
  %61 = load i64, ptr %60, align 8, !tbaa !154
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %51
  %64 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %55, ptr noundef nonnull %6, i64 noundef 1)
  br label %67

65:                                               ; preds = %51
  %66 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %55, i8 noundef signext 32)
  br label %67

67:                                               ; preds = %63, %65
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6)
  %68 = add nuw nsw i64 %52, 1
  %69 = load i32, ptr %42, align 8, !tbaa !341
  %70 = zext i32 %69 to i64
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %51, label %105

72:                                               ; preds = %46, %97
  %73 = phi i64 [ 0, %46 ], [ %101, %97 ]
  %74 = load ptr, ptr %47, align 8, !tbaa !344
  %75 = getelementptr inbounds %"class.std::complex.33", ptr %74, i64 %73
  %76 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsIfcSt11char_traitsIcEERSt13basic_ostreamIT0_T1_ES6_RKSt7complexIT_E(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull align 4 dereferenceable(8) %75)
  %77 = load ptr, ptr %76, align 8, !tbaa !5
  %78 = getelementptr i8, ptr %77, i64 -24
  %79 = load i64, ptr %78, align 8
  %80 = getelementptr inbounds i8, ptr %76, i64 %79
  %81 = getelementptr inbounds %"class.std::basic_ios", ptr %80, i64 0, i32 5
  %82 = load ptr, ptr %81, align 8, !tbaa !155
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %72
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

85:                                               ; preds = %72
  %86 = getelementptr inbounds %"class.std::ctype", ptr %82, i64 0, i32 8
  %87 = load i8, ptr %86, align 8, !tbaa !158
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.std::ctype", ptr %82, i64 0, i32 9, i64 10
  %91 = load i8, ptr %90, align 1, !tbaa !153
  br label %97

92:                                               ; preds = %85
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %82)
  %93 = load ptr, ptr %82, align 8, !tbaa !5
  %94 = getelementptr inbounds ptr, ptr %93, i64 6
  %95 = load ptr, ptr %94, align 8
  %96 = tail call noundef signext i8 %95(ptr noundef nonnull align 8 dereferenceable(570) %82, i8 noundef signext 10)
  br label %97

97:                                               ; preds = %89, %92
  %98 = phi i8 [ %91, %89 ], [ %96, %92 ]
  %99 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %76, i8 noundef signext %98)
  %100 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %99)
  %101 = add nuw nsw i64 %73, 1
  %102 = load i32, ptr %42, align 8, !tbaa !341
  %103 = zext i32 %102 to i64
  %104 = icmp ult i64 %101, %103
  br i1 %104, label %72, label %105

105:                                              ; preds = %97, %67, %45, %48
  %106 = load ptr, ptr %1, align 8, !tbaa !5
  %107 = getelementptr i8, ptr %106, i64 -24
  %108 = load i64, ptr %107, align 8
  %109 = getelementptr inbounds i8, ptr %1, i64 %108
  %110 = getelementptr inbounds %"class.std::basic_ios", ptr %109, i64 0, i32 5
  %111 = load ptr, ptr %110, align 8, !tbaa !155
  %112 = icmp eq ptr %111, null
  br i1 %112, label %113, label %114

113:                                              ; preds = %105
  call void @_ZSt16__throw_bad_castv() #26
  unreachable

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"class.std::ctype", ptr %111, i64 0, i32 8
  %116 = load i8, ptr %115, align 8, !tbaa !158
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.std::ctype", ptr %111, i64 0, i32 9, i64 10
  %120 = load i8, ptr %119, align 1, !tbaa !153
  br label %126

121:                                              ; preds = %114
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %111)
  %122 = load ptr, ptr %111, align 8, !tbaa !5
  %123 = getelementptr inbounds ptr, ptr %122, i64 6
  %124 = load ptr, ptr %123, align 8
  %125 = call noundef signext i8 %124(ptr noundef nonnull align 8 dereferenceable(570) %111, i8 noundef signext 10)
  br label %126

126:                                              ; preds = %118, %121
  %127 = phi i8 [ %120, %118 ], [ %125, %121 ]
  %128 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %127)
  %129 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %128)
  %130 = load ptr, ptr %1, align 8, !tbaa !5
  %131 = getelementptr i8, ptr %130, i64 -24
  %132 = load i64, ptr %131, align 8
  %133 = getelementptr inbounds i8, ptr %1, i64 %132
  %134 = getelementptr inbounds %"class.std::ios_base", ptr %133, i64 0, i32 5
  %135 = load i32, ptr %134, align 8, !tbaa !144
  %136 = and i32 %135, 5
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %147, label %138

138:                                              ; preds = %126
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %8, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %8)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %8, ptr noundef nonnull @.str.1, i32 noundef 803, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %139 unwind label %145

139:                                              ; preds = %138
  %140 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %140, ptr noundef nonnull align 8 dereferenceable(60) %8)
          to label %141 unwind label %143

141:                                              ; preds = %139
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %140, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %140, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %142 unwind label %145

142:                                              ; preds = %141
  unreachable

143:                                              ; preds = %139
  %144 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %140) #24
  br label %153

145:                                              ; preds = %141, %138
  %146 = landingpad { ptr, i32 }
          cleanup
  br label %153

147:                                              ; preds = %126
  %148 = getelementptr inbounds %"class.std::ios_base", ptr %133, i64 0, i32 3
  store i32 %28, ptr %148, align 8, !tbaa !150
  %149 = load i64, ptr %131, align 8
  %150 = getelementptr inbounds i8, ptr %1, i64 %149
  %151 = and i64 %31, 4294967295
  %152 = getelementptr inbounds %"class.std::ios_base", ptr %150, i64 0, i32 1
  store i64 %151, ptr %152, align 8, !tbaa !151
  ret void

153:                                              ; preds = %145, %143, %24, %22
  %154 = phi ptr [ %7, %22 ], [ %7, %24 ], [ %8, %143 ], [ %8, %145 ]
  %155 = phi { ptr, i32 } [ %23, %22 ], [ %25, %24 ], [ %144, %143 ], [ %146, %145 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %154) #24
  resume { ptr, i32 } %155
}

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsIfcSt11char_traitsIcEERSt13basic_ostreamIT0_T1_ES6_RKSt7complexIT_E(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef nonnull align 4 dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIfEE11block_writeERSo(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = load ptr, ptr %1, align 8, !tbaa !5
  %8 = getelementptr i8, ptr %7, i64 -24
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = getelementptr inbounds %"class.std::ios_base", ptr %10, i64 0, i32 5
  %12 = load i32, ptr %11, align 8, !tbaa !144
  %13 = and i32 %12, 5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.1, i32 noundef 814, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %16 unwind label %22

16:                                               ; preds = %15
  %17 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %17, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %18 unwind label %20

18:                                               ; preds = %16
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %17, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %19 unwind label %22

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %16
  %21 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %17) #24
  br label %24

22:                                               ; preds = %18, %15
  %23 = landingpad { ptr, i32 }
          cleanup
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi { ptr, i32 } [ %23, %22 ], [ %21, %20 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  br label %61

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %28 = load i32, ptr %27, align 8, !tbaa !341
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #24
  %29 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) @.str.5, i32 noundef %28) #24
  %30 = call i64 @strlen(ptr nonnull dereferenceable(1) %4)
  %31 = getelementptr inbounds i8, ptr %4, i64 %30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(3) %31, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %32 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %4) #27
  %33 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %4, i64 noundef %32)
  %34 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !344
  %36 = load i32, ptr %27, align 8, !tbaa !341
  %37 = zext i32 %36 to i64
  %38 = shl nuw nsw i64 %37, 3
  %39 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef %35, i64 noundef %38)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #24
  store i8 93, ptr %5, align 1, !tbaa !153
  %40 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %5, i64 noundef 1)
  %41 = load ptr, ptr %1, align 8, !tbaa !5
  %42 = getelementptr i8, ptr %41, i64 -24
  %43 = load i64, ptr %42, align 8
  %44 = getelementptr inbounds i8, ptr %1, i64 %43
  %45 = getelementptr inbounds %"class.std::ios_base", ptr %44, i64 0, i32 5
  %46 = load i32, ptr %45, align 8, !tbaa !144
  %47 = and i32 %46, 5
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %26
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.1, i32 noundef 837, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %50 unwind label %56

50:                                               ; preds = %49
  %51 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %51, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %52 unwind label %54

52:                                               ; preds = %50
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %51, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %51, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %53 unwind label %56

53:                                               ; preds = %52
  unreachable

54:                                               ; preds = %50
  %55 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %51) #24
  br label %58

56:                                               ; preds = %52, %49
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi { ptr, i32 } [ %57, %56 ], [ %55, %54 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  br label %61

60:                                               ; preds = %26
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  ret void

61:                                               ; preds = %58, %24
  %62 = phi { ptr, i32 } [ %59, %58 ], [ %25, %24 ]
  resume { ptr, i32 } %62
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE10block_readERSi(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = load ptr, ptr %1, align 8, !tbaa !5
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 %10
  %12 = getelementptr inbounds %"class.std::ios_base", ptr %11, i64 0, i32 5
  %13 = load i32, ptr %12, align 8, !tbaa !144
  %14 = and i32 %13, 5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.1, i32 noundef 845, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.4)
          to label %17 unwind label %23

17:                                               ; preds = %16
  %18 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %18, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %19 unwind label %21

19:                                               ; preds = %17
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %18, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %18, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %20 unwind label %23

20:                                               ; preds = %19
  unreachable

21:                                               ; preds = %17
  %22 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %18) #24
  br label %25

23:                                               ; preds = %19, %16
  %24 = landingpad { ptr, i32 }
          cleanup
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi { ptr, i32 } [ %24, %23 ], [ %22, %21 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  br label %70

27:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #24
  %28 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi7getlineEPclc(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %4, i64 noundef 16, i8 noundef signext 10)
  %29 = call i64 @__isoc23_strtol(ptr noundef nonnull %4, ptr noundef null, i32 noundef 10) #24
  %30 = trunc i64 %29 to i32
  %31 = load ptr, ptr %0, align 8, !tbaa !5
  %32 = getelementptr inbounds ptr, ptr %31, i64 2
  %33 = load ptr, ptr %32, align 8
  call void %33(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %30, i1 noundef zeroext true)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #24
  %34 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %5, i64 noundef 1)
  %35 = load i8, ptr %5, align 1, !tbaa !153
  %36 = icmp eq i8 %35, 91
  br i1 %36, label %46, label %37

37:                                               ; preds = %27
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.1, i32 noundef 862, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.4)
          to label %38 unwind label %44

38:                                               ; preds = %37
  %39 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %39, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %40 unwind label %42

40:                                               ; preds = %38
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %39, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %39, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %41 unwind label %44

41:                                               ; preds = %40
  unreachable

42:                                               ; preds = %38
  %43 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %39) #24
  br label %67

44:                                               ; preds = %40, %37
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %67

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !344
  %49 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %50 = load i32, ptr %49, align 8, !tbaa !341
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 3
  %53 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef %48, i64 noundef %52)
  %54 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %5, i64 noundef 1)
  %55 = load i8, ptr %5, align 1, !tbaa !153
  %56 = icmp eq i8 %55, 93
  br i1 %56, label %66, label %57

57:                                               ; preds = %46
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.1, i32 noundef 870, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.4)
          to label %58 unwind label %64

58:                                               ; preds = %57
  %59 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %59, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %60 unwind label %62

60:                                               ; preds = %58
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %59, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %59, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %61 unwind label %64

61:                                               ; preds = %60
  unreachable

62:                                               ; preds = %58
  %63 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %59) #24
  br label %67

64:                                               ; preds = %60, %57
  %65 = landingpad { ptr, i32 }
          cleanup
  br label %67

66:                                               ; preds = %46
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  ret void

67:                                               ; preds = %64, %62, %44, %42
  %68 = phi ptr [ %6, %42 ], [ %6, %44 ], [ %7, %62 ], [ %7, %64 ]
  %69 = phi { ptr, i32 } [ %43, %42 ], [ %45, %44 ], [ %63, %62 ], [ %65, %64 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %68) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  br label %70

70:                                               ; preds = %67, %25
  %71 = phi { ptr, i32 } [ %69, %67 ], [ %26, %25 ]
  resume { ptr, i32 } %71
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii6VectorISt7complexIfEE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !343
  %4 = shl i32 %3, 3
  %5 = add i32 %4, 88
  ret i32 %5
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEEC2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorISt7complexIeEEC5Ev) align 2 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIeEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorISt7complexIeEEC5ERKS3_) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIeEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  store i32 %5, ptr %3, align 8, !tbaa !348
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 2
  %7 = load i32, ptr %4, align 8, !tbaa !348
  store i32 %7, ptr %6, align 4, !tbaa !350
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  store ptr null, ptr %8, align 8, !tbaa !351
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = zext i32 %7 to i64
  %12 = shl nuw nsw i64 %11, 5
  %13 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %12) #22
          to label %14 unwind label %32

14:                                               ; preds = %10
  %15 = icmp eq i32 %7, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  store ptr %13, ptr %8, align 8, !tbaa !351
  br label %34

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::complex.42", ptr %13, i64 %11
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi ptr [ %13, %17 ], [ %22, %19 ]
  store x86_fp80 0xK00000000000000000000, ptr %20, align 16, !tbaa !275
  %21 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %20, i64 0, i32 1
  store x86_fp80 0xK00000000000000000000, ptr %21, align 16, !tbaa !275
  %22 = getelementptr inbounds %"class.std::complex.42", ptr %20, i64 1
  %23 = icmp eq ptr %22, %18
  br i1 %23, label %24, label %19

24:                                               ; preds = %19
  store ptr %13, ptr %8, align 8, !tbaa !351
  %25 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !351
  %27 = icmp ugt i32 %7, 1
  br i1 %27, label %28, label %29, !prof !352

28:                                               ; preds = %24
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 16 %13, ptr align 16 %26, i64 %12, i1 false)
  br label %34

29:                                               ; preds = %24
  %30 = icmp eq i32 %7, 1
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %13, ptr noundef nonnull align 16 dereferenceable(32) %26, i64 32, i1 false), !tbaa.struct !353
  br label %34

32:                                               ; preds = %10
  %33 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %35 unwind label %36

34:                                               ; preds = %16, %31, %29, %28, %2
  ret void

35:                                               ; preds = %32
  resume { ptr, i32 } %33

36:                                               ; preds = %32
  %37 = landingpad { ptr, i32 }
          catch ptr null
  %38 = extractvalue { ptr, i32 } %37, 0
  tail call void @__clang_call_terminate(ptr %38) #23
  unreachable
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii6VectorISt7complexIeEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !348
  ret i32 %3
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii6VectorISt7complexIeEE5beginEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !351
  ret ptr %3
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii6VectorISt7complexIeEE3endEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !351
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::complex.42", ptr %3, i64 %6
  ret ptr %7
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZN6dealii6VectorISt7complexIeEE5beginEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !351
  ret ptr %3
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEEC2Ej(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) unnamed_addr #0 comdat($_ZN6dealii6VectorISt7complexIeEEC5Ej) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIeEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %8 = zext i32 %1 to i64
  %9 = shl nuw nsw i64 %8, 5
  %10 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %9) #22
          to label %11 unwind label %26

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::complex.42", ptr %10, i64 %8
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi ptr [ %10, %11 ], [ %16, %13 ]
  store x86_fp80 0xK00000000000000000000, ptr %14, align 16, !tbaa !275
  %15 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %14, i64 0, i32 1
  store x86_fp80 0xK00000000000000000000, ptr %15, align 16, !tbaa !275
  %16 = getelementptr inbounds %"class.std::complex.42", ptr %14, i64 1
  %17 = icmp eq ptr %16, %12
  br i1 %17, label %18, label %13

18:                                               ; preds = %13
  store ptr %10, ptr %7, align 8, !tbaa !351
  store i32 %1, ptr %6, align 4, !tbaa !350
  store i32 %1, ptr %3, align 8, !tbaa !348
  %19 = getelementptr inbounds %"class.std::complex.42", ptr %10, i64 %8
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi ptr [ %23, %20 ], [ %10, %18 ]
  store x86_fp80 0xK00000000000000000000, ptr %21, align 16, !tbaa.struct !353
  %22 = getelementptr inbounds i8, ptr %21, i64 16
  store x86_fp80 0xK00000000000000000000, ptr %22, align 16, !tbaa.struct !335
  %23 = getelementptr inbounds %"class.std::complex.42", ptr %21, i64 1
  %24 = icmp eq ptr %23, %19
  br i1 %24, label %25, label %20

25:                                               ; preds = %20, %2
  ret void

26:                                               ; preds = %5
  %27 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %28 unwind label %29

28:                                               ; preds = %26
  resume { ptr, i32 } %27

29:                                               ; preds = %26
  %30 = landingpad { ptr, i32 }
          catch ptr null
  %31 = extractvalue { ptr, i32 } %30, 0
  tail call void @__clang_call_terminate(ptr %31) #23
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorISt7complexIeEED5Ev) align 2 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIeEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !351
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #25
  store ptr null, ptr %2, align 8, !tbaa !351
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #0 comdat($_ZN6dealii6VectorISt7complexIeEED5Ev) align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIeEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !351
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #25
  store ptr null, ptr %2, align 8, !tbaa !351
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  resume { ptr, i32 } %9
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIeEE8compressEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE6reinitEjb(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !351
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(ptr noundef nonnull %7) #25
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  br label %44

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !350
  %15 = icmp ult i32 %14, %1
  br i1 %15, label %16, label %32

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !351
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %18) #25
  br label %21

21:                                               ; preds = %20, %16
  %22 = zext i32 %1 to i64
  %23 = shl nuw nsw i64 %22, 5
  %24 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %23) #22
  %25 = getelementptr inbounds %"class.std::complex.42", ptr %24, i64 %22
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %24, %21 ], [ %29, %26 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !275
  %28 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %27, i64 0, i32 1
  store x86_fp80 0xK00000000000000000000, ptr %28, align 16, !tbaa !275
  %29 = getelementptr inbounds %"class.std::complex.42", ptr %27, i64 1
  %30 = icmp eq ptr %29, %25
  br i1 %30, label %31, label %26

31:                                               ; preds = %26
  store ptr %24, ptr %17, align 8, !tbaa !351
  store i32 %1, ptr %13, align 4, !tbaa !350
  br label %32

32:                                               ; preds = %31, %12
  %33 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  store i32 %1, ptr %33, align 8, !tbaa !348
  br i1 %2, label %44, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !351
  %37 = zext i32 %1 to i64
  %38 = getelementptr inbounds %"class.std::complex.42", ptr %36, i64 %37
  br label %39

39:                                               ; preds = %39, %34
  %40 = phi ptr [ %42, %39 ], [ %36, %34 ]
  store x86_fp80 0xK00000000000000000000, ptr %40, align 16, !tbaa.struct !353
  %41 = getelementptr inbounds i8, ptr %40, i64 16
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa.struct !335
  %42 = getelementptr inbounds %"class.std::complex.42", ptr %40, i64 1
  %43 = icmp eq ptr %42, %38
  br i1 %43, label %44, label %39

44:                                               ; preds = %39, %10, %32
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIeEEaSES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !351
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.std::complex.42", ptr %8, i64 %9
  br label %11

11:                                               ; preds = %6, %11
  %12 = phi ptr [ %13, %11 ], [ %8, %6 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %12, ptr noundef nonnull align 16 dereferenceable(32) %1, i64 32, i1 false), !tbaa.struct !353
  %13 = getelementptr inbounds %"class.std::complex.42", ptr %12, i64 1
  %14 = icmp eq ptr %13, %10
  br i1 %14, label %15, label %11

15:                                               ; preds = %11, %2
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE4swapERS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !32
  %6 = load i32, ptr %4, align 8, !tbaa !32
  store i32 %6, ptr %3, align 8, !tbaa !32
  store i32 %5, ptr %4, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 2
  %9 = load i32, ptr %7, align 4, !tbaa !32
  %10 = load i32, ptr %8, align 4, !tbaa !32
  store i32 %10, ptr %7, align 4, !tbaa !32
  store i32 %9, ptr %8, align 4, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %11, align 8, !tbaa !33
  %14 = load ptr, ptr %12, align 8, !tbaa !33
  store ptr %14, ptr %11, align 8, !tbaa !33
  store ptr %13, ptr %12, align 8, !tbaa !33
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZN6dealii6VectorISt7complexIeEE3endEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !351
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::complex.42", ptr %3, i64 %6
  ret ptr %7
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIeEEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !348
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !348
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !351
  %19 = load i32, ptr %3, align 8, !tbaa !348
  %20 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !351
  %22 = icmp ugt i32 %19, 1
  br i1 %22, label %23, label %26, !prof !25

23:                                               ; preds = %16
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 5
  tail call void @llvm.memmove.p0.p0.i64(ptr align 16 %21, ptr align 16 %18, i64 %25, i1 false)
  br label %29

26:                                               ; preds = %16
  %27 = icmp eq i32 %19, 1
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %21, ptr noundef nonnull align 16 dereferenceable(32) %18, i64 32, i1 false), !tbaa.struct !353
  br label %29

29:                                               ; preds = %28, %26, %23, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIeEEaSERKNS_11BlockVectorIS2_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::BlockVectorBase.44", ptr %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.44", ptr %1, i64 0, i32 2, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !34
  %6 = zext i32 %5 to i64
  %7 = load ptr, ptr %4, align 8, !tbaa !40
  %8 = getelementptr inbounds i32, ptr %7, i64 %6
  %9 = load i32, ptr %8, align 4, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !348
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = load ptr, ptr %0, align 8, !tbaa !5
  %15 = getelementptr inbounds ptr, ptr %14, i64 2
  %16 = load ptr, ptr %15, align 8
  tail call void %16(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %9, i1 noundef zeroext true)
  %17 = load i32, ptr %3, align 8, !tbaa !34
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi i32 [ %17, %13 ], [ %5, %2 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.dealii::BlockVectorBase.44", ptr %1, i64 0, i32 1
  %23 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %22, align 8, !tbaa !354
  br label %25

25:                                               ; preds = %21, %36
  %26 = phi i32 [ %19, %21 ], [ %37, %36 ]
  %27 = phi ptr [ %24, %21 ], [ %38, %36 ]
  %28 = phi i64 [ 0, %21 ], [ %40, %36 ]
  %29 = phi i32 [ 0, %21 ], [ %39, %36 ]
  %30 = getelementptr inbounds %"class.dealii::Vector.41", ptr %27, i64 %28, i32 1
  %31 = load i32, ptr %30, align 8, !tbaa !348
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %43

33:                                               ; preds = %36, %18
  ret ptr %0

34:                                               ; preds = %43
  %35 = load i32, ptr %3, align 8, !tbaa !34
  br label %36

36:                                               ; preds = %34, %25
  %37 = phi i32 [ %26, %25 ], [ %35, %34 ]
  %38 = phi ptr [ %27, %25 ], [ %55, %34 ]
  %39 = phi i32 [ %29, %25 ], [ %54, %34 ]
  %40 = add nuw nsw i64 %28, 1
  %41 = zext i32 %37 to i64
  %42 = icmp ult i64 %40, %41
  br i1 %42, label %25, label %33

43:                                               ; preds = %25, %43
  %44 = phi i64 [ %53, %43 ], [ 0, %25 ]
  %45 = phi ptr [ %55, %43 ], [ %27, %25 ]
  %46 = phi i32 [ %54, %43 ], [ %29, %25 ]
  %47 = getelementptr inbounds %"class.dealii::Vector.41", ptr %45, i64 %28, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !351, !noalias !356
  %49 = getelementptr inbounds %"class.std::complex.42", ptr %48, i64 %44
  %50 = load ptr, ptr %23, align 8, !tbaa !351
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds %"class.std::complex.42", ptr %50, i64 %51
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %52, ptr noundef nonnull align 16 dereferenceable(32) %49, i64 32, i1 false)
  %53 = add nuw nsw i64 %44, 1
  %54 = add i32 %46, 1
  %55 = load ptr, ptr %22, align 8, !tbaa !354
  %56 = getelementptr inbounds %"class.dealii::Vector.41", ptr %55, i64 %28, i32 1
  %57 = load i32, ptr %56, align 8, !tbaa !348
  %58 = zext i32 %57 to i64
  %59 = icmp ult i64 %53, %58
  br i1 %59, label %43, label %34
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIeEEclEj(ptr noalias sret(%"class.std::complex.42") align 16 %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i32 noundef %2) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !351
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds %"class.std::complex.42", ptr %5, i64 %6
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %0, ptr noundef nonnull align 16 dereferenceable(32) %7, i64 32, i1 false), !tbaa.struct !353
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorISt7complexIeEE8norm_sqrEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !348
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !351
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 1
  %10 = icmp eq i32 %3, 1
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967294
  br label %28

13:                                               ; preds = %28, %5
  %14 = phi x86_fp80 [ undef, %5 ], [ %46, %28 ]
  %15 = phi i64 [ 0, %5 ], [ %47, %28 ]
  %16 = phi x86_fp80 [ 0xK00000000000000000000, %5 ], [ %46, %28 ]
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::complex.42", ptr %7, i64 %15
  %20 = load x86_fp80, ptr %19, align 16, !tbaa !275
  %21 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %19, i64 0, i32 1
  %22 = load x86_fp80, ptr %21, align 16, !tbaa !275
  %23 = fmul x86_fp80 %22, %22
  %24 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %20, x86_fp80 %20, x86_fp80 %23)
  %25 = fadd x86_fp80 %16, %24
  br label %26

26:                                               ; preds = %18, %13, %1
  %27 = phi x86_fp80 [ 0xK00000000000000000000, %1 ], [ %14, %13 ], [ %25, %18 ]
  ret x86_fp80 %27

28:                                               ; preds = %28, %11
  %29 = phi i64 [ 0, %11 ], [ %47, %28 ]
  %30 = phi x86_fp80 [ 0xK00000000000000000000, %11 ], [ %46, %28 ]
  %31 = phi i64 [ 0, %11 ], [ %48, %28 ]
  %32 = getelementptr inbounds %"class.std::complex.42", ptr %7, i64 %29
  %33 = load x86_fp80, ptr %32, align 16, !tbaa !275
  %34 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %32, i64 0, i32 1
  %35 = load x86_fp80, ptr %34, align 16, !tbaa !275
  %36 = fmul x86_fp80 %35, %35
  %37 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %33, x86_fp80 %33, x86_fp80 %36)
  %38 = fadd x86_fp80 %30, %37
  %39 = or i64 %29, 1
  %40 = getelementptr inbounds %"class.std::complex.42", ptr %7, i64 %39
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !275
  %42 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %40, i64 0, i32 1
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !275
  %44 = fmul x86_fp80 %43, %43
  %45 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %41, x86_fp80 %44)
  %46 = fadd x86_fp80 %38, %45
  %47 = add nuw nsw i64 %29, 2
  %48 = add i64 %31, 2
  %49 = icmp eq i64 %48, %12
  br i1 %49, label %13, label %28
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIeEE10mean_valueEv(ptr noalias sret(%"class.std::complex.42") align 16 %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %35, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !351
  %9 = zext i32 %4 to i64
  %10 = and i64 %9, 3
  %11 = icmp ult i32 %4, 4
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  %13 = and i64 %9, 4294967292
  br label %42

14:                                               ; preds = %42, %6
  %15 = phi x86_fp80 [ undef, %6 ], [ %72, %42 ]
  %16 = phi x86_fp80 [ undef, %6 ], [ %73, %42 ]
  %17 = phi i64 [ 0, %6 ], [ %74, %42 ]
  %18 = phi x86_fp80 [ 0xK00000000000000000000, %6 ], [ %73, %42 ]
  %19 = phi x86_fp80 [ 0xK00000000000000000000, %6 ], [ %72, %42 ]
  %20 = icmp eq i64 %10, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %14, %21
  %22 = phi i64 [ %32, %21 ], [ %17, %14 ]
  %23 = phi x86_fp80 [ %31, %21 ], [ %18, %14 ]
  %24 = phi x86_fp80 [ %30, %21 ], [ %19, %14 ]
  %25 = phi i64 [ %33, %21 ], [ 0, %14 ]
  %26 = getelementptr inbounds %"class.std::complex.42", ptr %8, i64 %22
  %27 = load x86_fp80, ptr %26, align 16
  %28 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %26, i64 0, i32 1
  %29 = load x86_fp80, ptr %28, align 16
  %30 = fadd x86_fp80 %24, %27
  %31 = fadd x86_fp80 %23, %29
  %32 = add nuw nsw i64 %22, 1
  %33 = add i64 %25, 1
  %34 = icmp eq i64 %33, %10
  br i1 %34, label %35, label %21, !llvm.loop !359

35:                                               ; preds = %14, %21, %2
  %36 = phi x86_fp80 [ 0xK00000000000000000000, %2 ], [ %15, %14 ], [ %30, %21 ]
  %37 = phi x86_fp80 [ 0xK00000000000000000000, %2 ], [ %16, %14 ], [ %31, %21 ]
  %38 = uitofp i32 %4 to x86_fp80
  %39 = getelementptr inbounds i8, ptr %0, i64 16
  %40 = fdiv x86_fp80 %36, %38
  %41 = fdiv x86_fp80 %37, %38
  store x86_fp80 %40, ptr %0, align 16, !alias.scope !360
  store x86_fp80 %41, ptr %39, align 16, !alias.scope !360
  ret void

42:                                               ; preds = %42, %12
  %43 = phi i64 [ 0, %12 ], [ %74, %42 ]
  %44 = phi x86_fp80 [ 0xK00000000000000000000, %12 ], [ %73, %42 ]
  %45 = phi x86_fp80 [ 0xK00000000000000000000, %12 ], [ %72, %42 ]
  %46 = phi i64 [ 0, %12 ], [ %75, %42 ]
  %47 = getelementptr inbounds %"class.std::complex.42", ptr %8, i64 %43
  %48 = load x86_fp80, ptr %47, align 16
  %49 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %47, i64 0, i32 1
  %50 = load x86_fp80, ptr %49, align 16
  %51 = fadd x86_fp80 %45, %48
  %52 = fadd x86_fp80 %44, %50
  %53 = or i64 %43, 1
  %54 = getelementptr inbounds %"class.std::complex.42", ptr %8, i64 %53
  %55 = load x86_fp80, ptr %54, align 16
  %56 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %54, i64 0, i32 1
  %57 = load x86_fp80, ptr %56, align 16
  %58 = fadd x86_fp80 %51, %55
  %59 = fadd x86_fp80 %52, %57
  %60 = or i64 %43, 2
  %61 = getelementptr inbounds %"class.std::complex.42", ptr %8, i64 %60
  %62 = load x86_fp80, ptr %61, align 16
  %63 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %61, i64 0, i32 1
  %64 = load x86_fp80, ptr %63, align 16
  %65 = fadd x86_fp80 %58, %62
  %66 = fadd x86_fp80 %59, %64
  %67 = or i64 %43, 3
  %68 = getelementptr inbounds %"class.std::complex.42", ptr %8, i64 %67
  %69 = load x86_fp80, ptr %68, align 16
  %70 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %68, i64 0, i32 1
  %71 = load x86_fp80, ptr %70, align 16
  %72 = fadd x86_fp80 %65, %69
  %73 = fadd x86_fp80 %66, %71
  %74 = add nuw nsw i64 %43, 4
  %75 = add i64 %46, 4
  %76 = icmp eq i64 %75, %13
  br i1 %76, label %14, label %42
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorISt7complexIeEE7l1_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca { x86_fp80, x86_fp80 }, align 16
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %8 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %2, i64 0, i32 1
  br label %11

9:                                                ; preds = %11, %1
  %10 = phi x86_fp80 [ 0xK00000000000000000000, %1 ], [ %20, %11 ]
  ret x86_fp80 %10

11:                                               ; preds = %6, %11
  %12 = phi i64 [ 0, %6 ], [ %21, %11 ]
  %13 = phi x86_fp80 [ 0xK00000000000000000000, %6 ], [ %20, %11 ]
  %14 = load ptr, ptr %7, align 8, !tbaa !351
  %15 = getelementptr inbounds %"class.std::complex.42", ptr %14, i64 %12
  %16 = load x86_fp80, ptr %15, align 16
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %15, i64 0, i32 1
  %18 = load x86_fp80, ptr %17, align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2)
  store x86_fp80 %16, ptr %2, align 16
  store x86_fp80 %18, ptr %8, align 16
  %19 = tail call x86_fp80 @cabsl(ptr noundef nonnull byval({ x86_fp80, x86_fp80 }) align 16 %2) #24
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2)
  %20 = fadd x86_fp80 %13, %19
  %21 = add nuw nsw i64 %12, 1
  %22 = load i32, ptr %3, align 8, !tbaa !348
  %23 = zext i32 %22 to i64
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %11, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorISt7complexIeEE7l2_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !348
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %48, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !351
  %8 = zext i32 %3 to i64
  %9 = and i64 %8, 1
  %10 = icmp eq i32 %3, 1
  br i1 %10, label %35, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, 4294967294
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64 [ 0, %11 ], [ %32, %13 ]
  %15 = phi x86_fp80 [ 0xK00000000000000000000, %11 ], [ %31, %13 ]
  %16 = phi i64 [ 0, %11 ], [ %33, %13 ]
  %17 = getelementptr inbounds %"class.std::complex.42", ptr %7, i64 %14
  %18 = load x86_fp80, ptr %17, align 16, !tbaa !275
  %19 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %17, i64 0, i32 1
  %20 = load x86_fp80, ptr %19, align 16, !tbaa !275
  %21 = fmul x86_fp80 %20, %20
  %22 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %18, x86_fp80 %18, x86_fp80 %21)
  %23 = fadd x86_fp80 %15, %22
  %24 = or i64 %14, 1
  %25 = getelementptr inbounds %"class.std::complex.42", ptr %7, i64 %24
  %26 = load x86_fp80, ptr %25, align 16, !tbaa !275
  %27 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %25, i64 0, i32 1
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !275
  %29 = fmul x86_fp80 %28, %28
  %30 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %26, x86_fp80 %26, x86_fp80 %29)
  %31 = fadd x86_fp80 %23, %30
  %32 = add nuw nsw i64 %14, 2
  %33 = add i64 %16, 2
  %34 = icmp eq i64 %33, %12
  br i1 %34, label %35, label %13

35:                                               ; preds = %13, %5
  %36 = phi x86_fp80 [ undef, %5 ], [ %31, %13 ]
  %37 = phi i64 [ 0, %5 ], [ %32, %13 ]
  %38 = phi x86_fp80 [ 0xK00000000000000000000, %5 ], [ %31, %13 ]
  %39 = icmp eq i64 %9, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.std::complex.42", ptr %7, i64 %37
  %42 = load x86_fp80, ptr %41, align 16, !tbaa !275
  %43 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %41, i64 0, i32 1
  %44 = load x86_fp80, ptr %43, align 16, !tbaa !275
  %45 = fmul x86_fp80 %44, %44
  %46 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %42, x86_fp80 %42, x86_fp80 %45)
  %47 = fadd x86_fp80 %38, %46
  br label %48

48:                                               ; preds = %40, %35, %1
  %49 = phi x86_fp80 [ 0xK00000000000000000000, %1 ], [ %36, %35 ], [ %47, %40 ]
  %50 = tail call x86_fp80 @sqrtl(x86_fp80 noundef %49) #24
  ret x86_fp80 %50
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorISt7complexIeEE7lp_normEe(ptr noundef nonnull align 8 dereferenceable(88) %0, x86_fp80 noundef %1) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca { x86_fp80, x86_fp80 }, align 16
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %9 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %3, i64 0, i32 1
  br label %14

10:                                               ; preds = %14, %2
  %11 = phi x86_fp80 [ 0xK00000000000000000000, %2 ], [ %24, %14 ]
  %12 = fdiv x86_fp80 0xK3FFF8000000000000000, %1
  %13 = tail call x86_fp80 @powl(x86_fp80 noundef %11, x86_fp80 noundef %12) #24
  ret x86_fp80 %13

14:                                               ; preds = %7, %14
  %15 = phi i64 [ 0, %7 ], [ %25, %14 ]
  %16 = phi x86_fp80 [ 0xK00000000000000000000, %7 ], [ %24, %14 ]
  %17 = load ptr, ptr %8, align 8, !tbaa !351
  %18 = getelementptr inbounds %"class.std::complex.42", ptr %17, i64 %15
  %19 = load x86_fp80, ptr %18, align 16
  %20 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %18, i64 0, i32 1
  %21 = load x86_fp80, ptr %20, align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3)
  store x86_fp80 %19, ptr %3, align 16
  store x86_fp80 %21, ptr %9, align 16
  %22 = tail call x86_fp80 @cabsl(ptr noundef nonnull byval({ x86_fp80, x86_fp80 }) align 16 %3) #24
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3)
  %23 = tail call x86_fp80 @powl(x86_fp80 noundef %22, x86_fp80 noundef %1) #24
  %24 = fadd x86_fp80 %16, %23
  %25 = add nuw nsw i64 %15, 1
  %26 = load i32, ptr %4, align 8, !tbaa !348
  %27 = zext i32 %26 to i64
  %28 = icmp ult i64 %25, %27
  br i1 %28, label %14, label %10
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii6VectorISt7complexIeEE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca { x86_fp80, x86_fp80 }, align 16
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %8 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %2, i64 0, i32 1
  br label %11

9:                                                ; preds = %11, %1
  %10 = phi x86_fp80 [ 0xK00000000000000000000, %1 ], [ %21, %11 ]
  ret x86_fp80 %10

11:                                               ; preds = %6, %11
  %12 = phi i64 [ 0, %6 ], [ %22, %11 ]
  %13 = phi x86_fp80 [ 0xK00000000000000000000, %6 ], [ %21, %11 ]
  %14 = load ptr, ptr %7, align 8, !tbaa !351
  %15 = getelementptr inbounds %"class.std::complex.42", ptr %14, i64 %12
  %16 = load x86_fp80, ptr %15, align 16
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %15, i64 0, i32 1
  %18 = load x86_fp80, ptr %17, align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2)
  store x86_fp80 %16, ptr %2, align 16
  store x86_fp80 %18, ptr %8, align 16
  %19 = tail call x86_fp80 @cabsl(ptr noundef nonnull byval({ x86_fp80, x86_fp80 }) align 16 %2) #24
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2)
  %20 = fcmp olt x86_fp80 %19, %13
  %21 = select i1 %20, x86_fp80 %13, x86_fp80 %19
  %22 = add nuw nsw i64 %12, 1
  %23 = load i32, ptr %3, align 8, !tbaa !348
  %24 = zext i32 %23 to i64
  %25 = icmp ult i64 %22, %24
  br i1 %25, label %11, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIeEE8all_zeroEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !348
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !351
  %8 = zext i32 %3 to i64
  %9 = load x86_fp80, ptr %7, align 16, !tbaa !275
  %10 = fcmp une x86_fp80 %9, 0xK00000000000000000000
  %11 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %7, i64 0, i32 1
  %12 = load x86_fp80, ptr %11, align 16
  %13 = fcmp une x86_fp80 %12, 0xK00000000000000000000
  %14 = select i1 %10, i1 true, i1 %13
  br i1 %14, label %29, label %15

15:                                               ; preds = %5, %19
  %16 = phi i64 [ %17, %19 ], [ 0, %5 ]
  %17 = add nuw nsw i64 %16, 1
  %18 = icmp eq i64 %17, %8
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::complex.42", ptr %7, i64 %17
  %21 = load x86_fp80, ptr %20, align 16, !tbaa !275
  %22 = fcmp une x86_fp80 %21, 0xK00000000000000000000
  %23 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %20, i64 0, i32 1
  %24 = load x86_fp80, ptr %23, align 16
  %25 = fcmp une x86_fp80 %24, 0xK00000000000000000000
  %26 = select i1 %22, i1 true, i1 %25
  br i1 %26, label %27, label %15

27:                                               ; preds = %15, %19
  %28 = icmp uge i64 %17, %8
  br label %29

29:                                               ; preds = %27, %5, %1
  %30 = phi i1 [ true, %1 ], [ false, %5 ], [ %28, %27 ]
  ret i1 %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIeEE15is_non_negativeEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !348
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 16 dereferenceable(32) ptr @_ZN6dealii6VectorISt7complexIeEEclEj(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !351
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.std::complex.42", ptr %4, i64 %5
  ret ptr %6
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIeEEpLERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %9

9:                                                ; preds = %9, %6
  %10 = phi i64 [ 0, %6 ], [ %23, %9 ]
  %11 = load ptr, ptr %7, align 8, !tbaa !351
  %12 = getelementptr inbounds %"class.std::complex.42", ptr %11, i64 %10
  %13 = load ptr, ptr %8, align 8, !tbaa !351
  %14 = getelementptr inbounds %"class.std::complex.42", ptr %13, i64 %10
  %15 = load x86_fp80, ptr %12, align 16
  %16 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %12, i64 0, i32 1
  %17 = load x86_fp80, ptr %16, align 16
  %18 = load x86_fp80, ptr %14, align 16
  %19 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %14, i64 0, i32 1
  %20 = load x86_fp80, ptr %19, align 16
  %21 = fadd x86_fp80 %15, %18
  %22 = fadd x86_fp80 %17, %20
  store x86_fp80 %21, ptr %14, align 16
  store x86_fp80 %22, ptr %19, align 16
  %23 = add nuw nsw i64 %10, 1
  %24 = load i32, ptr %3, align 8, !tbaa !348
  %25 = zext i32 %24 to i64
  %26 = icmp ult i64 %23, %25
  br i1 %26, label %9, label %27

27:                                               ; preds = %9, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE3addERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %10, %2
  ret void

10:                                               ; preds = %6, %10
  %11 = phi i64 [ 0, %6 ], [ %24, %10 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !351
  %13 = getelementptr inbounds %"class.std::complex.42", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !351
  %15 = getelementptr inbounds %"class.std::complex.42", ptr %14, i64 %11
  %16 = load x86_fp80, ptr %13, align 16
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %13, i64 0, i32 1
  %18 = load x86_fp80, ptr %17, align 16
  %19 = load x86_fp80, ptr %15, align 16
  %20 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %15, i64 0, i32 1
  %21 = load x86_fp80, ptr %20, align 16
  %22 = fadd x86_fp80 %16, %19
  %23 = fadd x86_fp80 %18, %21
  store x86_fp80 %22, ptr %15, align 16
  store x86_fp80 %23, ptr %20, align 16
  %24 = add nuw nsw i64 %11, 1
  %25 = load i32, ptr %3, align 8, !tbaa !348
  %26 = zext i32 %25 to i64
  %27 = icmp ult i64 %24, %26
  br i1 %27, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIeEEmIERKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %10, %2
  ret ptr %0

10:                                               ; preds = %6, %10
  %11 = phi i64 [ 0, %6 ], [ %24, %10 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !351
  %13 = getelementptr inbounds %"class.std::complex.42", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !351
  %15 = getelementptr inbounds %"class.std::complex.42", ptr %14, i64 %11
  %16 = load x86_fp80, ptr %13, align 16
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %13, i64 0, i32 1
  %18 = load x86_fp80, ptr %17, align 16
  %19 = load x86_fp80, ptr %15, align 16
  %20 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %15, i64 0, i32 1
  %21 = load x86_fp80, ptr %20, align 16
  %22 = fsub x86_fp80 %19, %16
  %23 = fsub x86_fp80 %21, %18
  store x86_fp80 %22, ptr %15, align 16
  store x86_fp80 %23, ptr %20, align 16
  %24 = add nuw nsw i64 %11, 1
  %25 = load i32, ptr %3, align 8, !tbaa !348
  %26 = zext i32 %25 to i64
  %27 = icmp ult i64 %24, %26
  br i1 %27, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE3addES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %8 = load x86_fp80, ptr %1, align 16
  %9 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %1, i64 0, i32 1
  %10 = load x86_fp80, ptr %9, align 16
  br label %12

11:                                               ; preds = %12, %2
  ret void

12:                                               ; preds = %6, %12
  %13 = phi i64 [ 0, %6 ], [ %21, %12 ]
  %14 = load ptr, ptr %7, align 8, !tbaa !351
  %15 = getelementptr inbounds %"class.std::complex.42", ptr %14, i64 %13
  %16 = load x86_fp80, ptr %15, align 16
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %15, i64 0, i32 1
  %18 = load x86_fp80, ptr %17, align 16
  %19 = fadd x86_fp80 %8, %16
  %20 = fadd x86_fp80 %10, %18
  store x86_fp80 %19, ptr %15, align 16
  store x86_fp80 %20, ptr %17, align 16
  %21 = add nuw nsw i64 %13, 1
  %22 = load i32, ptr %3, align 8, !tbaa !348
  %23 = zext i32 %22 to i64
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %12, label %11
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE3addES2_RKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !351
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !348
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.std::complex.42", ptr %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.dealii::Vector.41", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !351
  %14 = load x86_fp80, ptr %1, align 16, !tbaa.struct !353
  %15 = getelementptr inbounds i8, ptr %1, i64 16
  %16 = load x86_fp80, ptr %15, align 16, !tbaa.struct !335
  br label %17

17:                                               ; preds = %11, %37
  %18 = phi ptr [ %13, %11 ], [ %20, %37 ]
  %19 = phi ptr [ %5, %11 ], [ %40, %37 ]
  %20 = getelementptr inbounds %"class.std::complex.42", ptr %18, i64 1
  %21 = load x86_fp80, ptr %18, align 16, !noalias !363
  %22 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %18, i64 0, i32 1
  %23 = load x86_fp80, ptr %22, align 16, !noalias !363
  %24 = fmul x86_fp80 %14, %21
  %25 = fmul x86_fp80 %16, %23
  %26 = fmul x86_fp80 %14, %23
  %27 = fmul x86_fp80 %16, %21
  %28 = fsub x86_fp80 %24, %25
  %29 = fadd x86_fp80 %27, %26
  %30 = fcmp uno x86_fp80 %28, 0xK00000000000000000000
  br i1 %30, label %31, label %37, !prof !340

31:                                               ; preds = %17
  %32 = fcmp uno x86_fp80 %29, 0xK00000000000000000000
  br i1 %32, label %33, label %37, !prof !340

33:                                               ; preds = %31
  %34 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %14, x86_fp80 noundef %16, x86_fp80 noundef %21, x86_fp80 noundef %23) #24, !noalias !363
  %35 = extractvalue { x86_fp80, x86_fp80 } %34, 0
  %36 = extractvalue { x86_fp80, x86_fp80 } %34, 1
  br label %37

37:                                               ; preds = %17, %31, %33
  %38 = phi x86_fp80 [ %28, %17 ], [ %28, %31 ], [ %35, %33 ]
  %39 = phi x86_fp80 [ %29, %17 ], [ %29, %31 ], [ %36, %33 ]
  %40 = getelementptr inbounds %"class.std::complex.42", ptr %19, i64 1
  %41 = load x86_fp80, ptr %19, align 16
  %42 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %19, i64 0, i32 1
  %43 = load x86_fp80, ptr %42, align 16
  %44 = fadd x86_fp80 %38, %41
  %45 = fadd x86_fp80 %39, %43
  store x86_fp80 %44, ptr %19, align 16
  store x86_fp80 %45, ptr %42, align 16
  %46 = icmp eq ptr %40, %9
  br i1 %46, label %47, label %17

47:                                               ; preds = %37, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE3addES2_RKS3_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef byval(%"class.std::complex.42") align 16 %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #2 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !348
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.41", ptr %2, i64 0, i32 3
  %11 = load x86_fp80, ptr %1, align 16, !tbaa.struct !353
  %12 = getelementptr inbounds i8, ptr %1, i64 16
  %13 = load x86_fp80, ptr %12, align 16, !tbaa.struct !335
  %14 = getelementptr inbounds %"class.dealii::Vector.41", ptr %4, i64 0, i32 3
  %15 = load x86_fp80, ptr %3, align 16
  %16 = getelementptr inbounds i8, ptr %3, i64 16
  %17 = load x86_fp80, ptr %16, align 16
  %18 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %20

19:                                               ; preds = %61, %5
  ret void

20:                                               ; preds = %9, %61
  %21 = phi i64 [ 0, %9 ], [ %73, %61 ]
  %22 = load ptr, ptr %10, align 8, !tbaa !351
  %23 = getelementptr inbounds %"class.std::complex.42", ptr %22, i64 %21
  %24 = load x86_fp80, ptr %23, align 16, !noalias !366
  %25 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %23, i64 0, i32 1
  %26 = load x86_fp80, ptr %25, align 16, !noalias !366
  %27 = fmul x86_fp80 %11, %24
  %28 = fmul x86_fp80 %13, %26
  %29 = fmul x86_fp80 %11, %26
  %30 = fmul x86_fp80 %13, %24
  %31 = fsub x86_fp80 %27, %28
  %32 = fadd x86_fp80 %30, %29
  %33 = fcmp uno x86_fp80 %31, 0xK00000000000000000000
  br i1 %33, label %34, label %40, !prof !340

34:                                               ; preds = %20
  %35 = fcmp uno x86_fp80 %32, 0xK00000000000000000000
  br i1 %35, label %36, label %40, !prof !340

36:                                               ; preds = %34
  %37 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %11, x86_fp80 noundef %13, x86_fp80 noundef %24, x86_fp80 noundef %26) #24, !noalias !366
  %38 = extractvalue { x86_fp80, x86_fp80 } %37, 0
  %39 = extractvalue { x86_fp80, x86_fp80 } %37, 1
  br label %40

40:                                               ; preds = %20, %34, %36
  %41 = phi x86_fp80 [ %31, %20 ], [ %31, %34 ], [ %38, %36 ]
  %42 = phi x86_fp80 [ %32, %20 ], [ %32, %34 ], [ %39, %36 ]
  %43 = load ptr, ptr %14, align 8, !tbaa !351
  %44 = getelementptr inbounds %"class.std::complex.42", ptr %43, i64 %21
  %45 = load x86_fp80, ptr %44, align 16, !noalias !369
  %46 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %44, i64 0, i32 1
  %47 = load x86_fp80, ptr %46, align 16, !noalias !369
  %48 = fmul x86_fp80 %15, %45
  %49 = fmul x86_fp80 %17, %47
  %50 = fmul x86_fp80 %15, %47
  %51 = fmul x86_fp80 %17, %45
  %52 = fsub x86_fp80 %48, %49
  %53 = fadd x86_fp80 %51, %50
  %54 = fcmp uno x86_fp80 %52, 0xK00000000000000000000
  br i1 %54, label %55, label %61, !prof !340

55:                                               ; preds = %40
  %56 = fcmp uno x86_fp80 %53, 0xK00000000000000000000
  br i1 %56, label %57, label %61, !prof !340

57:                                               ; preds = %55
  %58 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %15, x86_fp80 noundef %17, x86_fp80 noundef %45, x86_fp80 noundef %47) #24, !noalias !369
  %59 = extractvalue { x86_fp80, x86_fp80 } %58, 0
  %60 = extractvalue { x86_fp80, x86_fp80 } %58, 1
  br label %61

61:                                               ; preds = %40, %55, %57
  %62 = phi x86_fp80 [ %52, %40 ], [ %52, %55 ], [ %59, %57 ]
  %63 = phi x86_fp80 [ %53, %40 ], [ %53, %55 ], [ %60, %57 ]
  %64 = fadd x86_fp80 %41, %62
  %65 = fadd x86_fp80 %42, %63
  %66 = load ptr, ptr %18, align 8, !tbaa !351
  %67 = getelementptr inbounds %"class.std::complex.42", ptr %66, i64 %21
  %68 = load x86_fp80, ptr %67, align 16
  %69 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %67, i64 0, i32 1
  %70 = load x86_fp80, ptr %69, align 16
  %71 = fadd x86_fp80 %64, %68
  %72 = fadd x86_fp80 %65, %70
  store x86_fp80 %71, ptr %67, align 16
  store x86_fp80 %72, ptr %69, align 16
  %73 = add nuw nsw i64 %21, 1
  %74 = load i32, ptr %6, align 8, !tbaa !348
  %75 = zext i32 %74 to i64
  %76 = icmp ult i64 %73, %75
  br i1 %76, label %20, label %19
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE4saddES2_RKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %9 = load x86_fp80, ptr %1, align 16, !tbaa.struct !353
  %10 = getelementptr inbounds i8, ptr %1, i64 10
  %11 = getelementptr inbounds i8, ptr %1, i64 16
  %12 = load x86_fp80, ptr %11, align 16, !tbaa.struct !335
  %13 = getelementptr inbounds i8, ptr %1, i64 26
  %14 = getelementptr inbounds %"class.dealii::Vector.41", ptr %2, i64 0, i32 3
  br label %16

15:                                               ; preds = %37, %3
  ret void

16:                                               ; preds = %7, %37
  %17 = phi i64 [ 0, %7 ], [ %52, %37 ]
  %18 = load ptr, ptr %8, align 8, !tbaa !351
  %19 = getelementptr inbounds %"class.std::complex.42", ptr %18, i64 %17
  %20 = load x86_fp80, ptr %19, align 16, !noalias !372
  %21 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %19, i64 0, i32 1
  %22 = load x86_fp80, ptr %21, align 16, !noalias !372
  %23 = fmul x86_fp80 %9, %20
  %24 = fmul x86_fp80 %12, %22
  %25 = fmul x86_fp80 %9, %22
  %26 = fmul x86_fp80 %12, %20
  %27 = fsub x86_fp80 %23, %24
  %28 = fadd x86_fp80 %26, %25
  %29 = fcmp uno x86_fp80 %27, 0xK00000000000000000000
  br i1 %29, label %30, label %37, !prof !340

30:                                               ; preds = %16
  %31 = fcmp uno x86_fp80 %28, 0xK00000000000000000000
  br i1 %31, label %32, label %37, !prof !340

32:                                               ; preds = %30
  %33 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %9, x86_fp80 noundef %12, x86_fp80 noundef %20, x86_fp80 noundef %22) #24, !noalias !372
  %34 = extractvalue { x86_fp80, x86_fp80 } %33, 0
  %35 = extractvalue { x86_fp80, x86_fp80 } %33, 1
  %36 = load ptr, ptr %8, align 8, !tbaa !351
  br label %37

37:                                               ; preds = %16, %30, %32
  %38 = phi ptr [ %18, %16 ], [ %18, %30 ], [ %36, %32 ]
  %39 = phi x86_fp80 [ %27, %16 ], [ %27, %30 ], [ %34, %32 ]
  %40 = phi x86_fp80 [ %28, %16 ], [ %28, %30 ], [ %35, %32 ]
  %41 = load ptr, ptr %14, align 8, !tbaa !351
  %42 = getelementptr inbounds %"class.std::complex.42", ptr %41, i64 %17
  %43 = load x86_fp80, ptr %42, align 16, !noalias !375
  %44 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %42, i64 0, i32 1
  %45 = load x86_fp80, ptr %44, align 16, !noalias !375
  %46 = fadd x86_fp80 %39, %43
  %47 = fadd x86_fp80 %40, %45
  %48 = getelementptr inbounds %"class.std::complex.42", ptr %38, i64 %17
  store x86_fp80 %46, ptr %48, align 16, !tbaa.struct !353
  %49 = getelementptr inbounds i8, ptr %48, i64 10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %49, ptr noundef nonnull align 2 dereferenceable(6) %10, i64 6, i1 false)
  %50 = getelementptr inbounds i8, ptr %48, i64 16
  store x86_fp80 %47, ptr %50, align 16, !tbaa.struct !335
  %51 = getelementptr inbounds i8, ptr %48, i64 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %51, ptr noundef nonnull align 2 dereferenceable(6) %13, i64 6, i1 false)
  %52 = add nuw nsw i64 %17, 1
  %53 = load i32, ptr %4, align 8, !tbaa !348
  %54 = zext i32 %53 to i64
  %55 = icmp ult i64 %52, %54
  br i1 %55, label %16, label %15
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE4saddES2_S2_RKS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1, ptr noundef byval(%"class.std::complex.42") align 16 %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !351
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !348
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.std::complex.42", ptr %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %71, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.dealii::Vector.41", ptr %3, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !351
  %15 = load x86_fp80, ptr %1, align 16, !tbaa.struct !353
  %16 = getelementptr inbounds i8, ptr %1, i64 10
  %17 = getelementptr inbounds i8, ptr %1, i64 16
  %18 = load x86_fp80, ptr %17, align 16, !tbaa.struct !335
  %19 = getelementptr inbounds i8, ptr %1, i64 26
  %20 = load x86_fp80, ptr %2, align 16
  %21 = getelementptr inbounds i8, ptr %2, i64 16
  %22 = load x86_fp80, ptr %21, align 16
  br label %23

23:                                               ; preds = %12, %62
  %24 = phi ptr [ %14, %12 ], [ %45, %62 ]
  %25 = phi ptr [ %6, %12 ], [ %69, %62 ]
  %26 = load x86_fp80, ptr %25, align 16, !noalias !378
  %27 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %25, i64 0, i32 1
  %28 = load x86_fp80, ptr %27, align 16, !noalias !378
  %29 = fmul x86_fp80 %15, %26
  %30 = fmul x86_fp80 %18, %28
  %31 = fmul x86_fp80 %15, %28
  %32 = fmul x86_fp80 %18, %26
  %33 = fsub x86_fp80 %29, %30
  %34 = fadd x86_fp80 %32, %31
  %35 = fcmp uno x86_fp80 %33, 0xK00000000000000000000
  br i1 %35, label %36, label %42, !prof !340

36:                                               ; preds = %23
  %37 = fcmp uno x86_fp80 %34, 0xK00000000000000000000
  br i1 %37, label %38, label %42, !prof !340

38:                                               ; preds = %36
  %39 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %15, x86_fp80 noundef %18, x86_fp80 noundef %26, x86_fp80 noundef %28) #24, !noalias !378
  %40 = extractvalue { x86_fp80, x86_fp80 } %39, 0
  %41 = extractvalue { x86_fp80, x86_fp80 } %39, 1
  br label %42

42:                                               ; preds = %23, %36, %38
  %43 = phi x86_fp80 [ %33, %23 ], [ %33, %36 ], [ %40, %38 ]
  %44 = phi x86_fp80 [ %34, %23 ], [ %34, %36 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.std::complex.42", ptr %24, i64 1
  %46 = load x86_fp80, ptr %24, align 16, !noalias !381
  %47 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %24, i64 0, i32 1
  %48 = load x86_fp80, ptr %47, align 16, !noalias !381
  %49 = fmul x86_fp80 %20, %46
  %50 = fmul x86_fp80 %22, %48
  %51 = fmul x86_fp80 %20, %48
  %52 = fmul x86_fp80 %22, %46
  %53 = fsub x86_fp80 %49, %50
  %54 = fadd x86_fp80 %52, %51
  %55 = fcmp uno x86_fp80 %53, 0xK00000000000000000000
  br i1 %55, label %56, label %62, !prof !340

56:                                               ; preds = %42
  %57 = fcmp uno x86_fp80 %54, 0xK00000000000000000000
  br i1 %57, label %58, label %62, !prof !340

58:                                               ; preds = %56
  %59 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %20, x86_fp80 noundef %22, x86_fp80 noundef %46, x86_fp80 noundef %48) #24, !noalias !381
  %60 = extractvalue { x86_fp80, x86_fp80 } %59, 0
  %61 = extractvalue { x86_fp80, x86_fp80 } %59, 1
  br label %62

62:                                               ; preds = %42, %56, %58
  %63 = phi x86_fp80 [ %53, %42 ], [ %53, %56 ], [ %60, %58 ]
  %64 = phi x86_fp80 [ %54, %42 ], [ %54, %56 ], [ %61, %58 ]
  %65 = fadd x86_fp80 %43, %63
  %66 = fadd x86_fp80 %44, %64
  store x86_fp80 %65, ptr %25, align 16, !tbaa.struct !353
  %67 = getelementptr inbounds i8, ptr %25, i64 10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %67, ptr noundef nonnull align 2 dereferenceable(6) %16, i64 6, i1 false)
  store x86_fp80 %66, ptr %27, align 16, !tbaa.struct !335
  %68 = getelementptr inbounds i8, ptr %25, i64 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %68, ptr noundef nonnull align 2 dereferenceable(6) %19, i64 6, i1 false)
  %69 = getelementptr inbounds %"class.std::complex.42", ptr %25, i64 1
  %70 = icmp eq ptr %69, %10
  br i1 %70, label %71, label %23

71:                                               ; preds = %62, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE4saddES2_S2_RKS3_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1, ptr noundef byval(%"class.std::complex.42") align 16 %2, ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef byval(%"class.std::complex.42") align 16 %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #2 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !348
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %12 = load x86_fp80, ptr %1, align 16, !tbaa.struct !353
  %13 = getelementptr inbounds i8, ptr %1, i64 10
  %14 = getelementptr inbounds i8, ptr %1, i64 16
  %15 = load x86_fp80, ptr %14, align 16, !tbaa.struct !335
  %16 = getelementptr inbounds i8, ptr %1, i64 26
  %17 = getelementptr inbounds %"class.dealii::Vector.41", ptr %3, i64 0, i32 3
  %18 = load x86_fp80, ptr %2, align 16
  %19 = getelementptr inbounds i8, ptr %2, i64 16
  %20 = load x86_fp80, ptr %19, align 16
  %21 = getelementptr inbounds %"class.dealii::Vector.41", ptr %5, i64 0, i32 3
  %22 = load x86_fp80, ptr %4, align 16
  %23 = getelementptr inbounds i8, ptr %4, i64 16
  %24 = load x86_fp80, ptr %23, align 16
  br label %26

25:                                               ; preds = %90, %6
  ret void

26:                                               ; preds = %10, %90
  %27 = phi i64 [ 0, %10 ], [ %100, %90 ]
  %28 = load ptr, ptr %11, align 8, !tbaa !351
  %29 = getelementptr inbounds %"class.std::complex.42", ptr %28, i64 %27
  %30 = load x86_fp80, ptr %29, align 16, !noalias !384
  %31 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %29, i64 0, i32 1
  %32 = load x86_fp80, ptr %31, align 16, !noalias !384
  %33 = fmul x86_fp80 %12, %30
  %34 = fmul x86_fp80 %15, %32
  %35 = fmul x86_fp80 %12, %32
  %36 = fmul x86_fp80 %15, %30
  %37 = fsub x86_fp80 %33, %34
  %38 = fadd x86_fp80 %36, %35
  %39 = fcmp uno x86_fp80 %37, 0xK00000000000000000000
  br i1 %39, label %40, label %46, !prof !340

40:                                               ; preds = %26
  %41 = fcmp uno x86_fp80 %38, 0xK00000000000000000000
  br i1 %41, label %42, label %46, !prof !340

42:                                               ; preds = %40
  %43 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %12, x86_fp80 noundef %15, x86_fp80 noundef %30, x86_fp80 noundef %32) #24, !noalias !384
  %44 = extractvalue { x86_fp80, x86_fp80 } %43, 0
  %45 = extractvalue { x86_fp80, x86_fp80 } %43, 1
  br label %46

46:                                               ; preds = %26, %40, %42
  %47 = phi x86_fp80 [ %37, %26 ], [ %37, %40 ], [ %44, %42 ]
  %48 = phi x86_fp80 [ %38, %26 ], [ %38, %40 ], [ %45, %42 ]
  %49 = load ptr, ptr %17, align 8, !tbaa !351
  %50 = getelementptr inbounds %"class.std::complex.42", ptr %49, i64 %27
  %51 = load x86_fp80, ptr %50, align 16, !noalias !387
  %52 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %50, i64 0, i32 1
  %53 = load x86_fp80, ptr %52, align 16, !noalias !387
  %54 = fmul x86_fp80 %18, %51
  %55 = fmul x86_fp80 %20, %53
  %56 = fmul x86_fp80 %18, %53
  %57 = fmul x86_fp80 %20, %51
  %58 = fsub x86_fp80 %54, %55
  %59 = fadd x86_fp80 %57, %56
  %60 = fcmp uno x86_fp80 %58, 0xK00000000000000000000
  br i1 %60, label %61, label %67, !prof !340

61:                                               ; preds = %46
  %62 = fcmp uno x86_fp80 %59, 0xK00000000000000000000
  br i1 %62, label %63, label %67, !prof !340

63:                                               ; preds = %61
  %64 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %18, x86_fp80 noundef %20, x86_fp80 noundef %51, x86_fp80 noundef %53) #24, !noalias !387
  %65 = extractvalue { x86_fp80, x86_fp80 } %64, 0
  %66 = extractvalue { x86_fp80, x86_fp80 } %64, 1
  br label %67

67:                                               ; preds = %46, %61, %63
  %68 = phi x86_fp80 [ %58, %46 ], [ %58, %61 ], [ %65, %63 ]
  %69 = phi x86_fp80 [ %59, %46 ], [ %59, %61 ], [ %66, %63 ]
  %70 = fadd x86_fp80 %47, %68
  %71 = fadd x86_fp80 %48, %69
  %72 = load ptr, ptr %21, align 8, !tbaa !351
  %73 = getelementptr inbounds %"class.std::complex.42", ptr %72, i64 %27
  %74 = load x86_fp80, ptr %73, align 16, !noalias !390
  %75 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %73, i64 0, i32 1
  %76 = load x86_fp80, ptr %75, align 16, !noalias !390
  %77 = fmul x86_fp80 %22, %74
  %78 = fmul x86_fp80 %24, %76
  %79 = fmul x86_fp80 %22, %76
  %80 = fmul x86_fp80 %24, %74
  %81 = fsub x86_fp80 %77, %78
  %82 = fadd x86_fp80 %80, %79
  %83 = fcmp uno x86_fp80 %81, 0xK00000000000000000000
  br i1 %83, label %84, label %90, !prof !340

84:                                               ; preds = %67
  %85 = fcmp uno x86_fp80 %82, 0xK00000000000000000000
  br i1 %85, label %86, label %90, !prof !340

86:                                               ; preds = %84
  %87 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %22, x86_fp80 noundef %24, x86_fp80 noundef %74, x86_fp80 noundef %76) #24, !noalias !390
  %88 = extractvalue { x86_fp80, x86_fp80 } %87, 0
  %89 = extractvalue { x86_fp80, x86_fp80 } %87, 1
  br label %90

90:                                               ; preds = %67, %84, %86
  %91 = phi x86_fp80 [ %81, %67 ], [ %81, %84 ], [ %88, %86 ]
  %92 = phi x86_fp80 [ %82, %67 ], [ %82, %84 ], [ %89, %86 ]
  %93 = fadd x86_fp80 %70, %91
  %94 = fadd x86_fp80 %71, %92
  %95 = load ptr, ptr %11, align 8, !tbaa !351
  %96 = getelementptr inbounds %"class.std::complex.42", ptr %95, i64 %27
  store x86_fp80 %93, ptr %96, align 16, !tbaa.struct !353
  %97 = getelementptr inbounds i8, ptr %96, i64 10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %97, ptr noundef nonnull align 2 dereferenceable(6) %13, i64 6, i1 false)
  %98 = getelementptr inbounds i8, ptr %96, i64 16
  store x86_fp80 %94, ptr %98, align 16, !tbaa.struct !335
  %99 = getelementptr inbounds i8, ptr %96, i64 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %99, ptr noundef nonnull align 2 dereferenceable(6) %16, i64 6, i1 false)
  %100 = add nuw nsw i64 %27, 1
  %101 = load i32, ptr %7, align 8, !tbaa !348
  %102 = zext i32 %101 to i64
  %103 = icmp ult i64 %100, %102
  br i1 %103, label %26, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE4saddES2_S2_RKS3_S2_S5_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1, ptr noundef byval(%"class.std::complex.42") align 16 %2, ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef byval(%"class.std::complex.42") align 16 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef byval(%"class.std::complex.42") align 16 %6, ptr noundef nonnull align 8 dereferenceable(88) %7) local_unnamed_addr #2 comdat align 2 {
  %9 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !348
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %14 = load x86_fp80, ptr %1, align 16, !tbaa.struct !353
  %15 = getelementptr inbounds i8, ptr %1, i64 10
  %16 = getelementptr inbounds i8, ptr %1, i64 16
  %17 = load x86_fp80, ptr %16, align 16, !tbaa.struct !335
  %18 = getelementptr inbounds i8, ptr %1, i64 26
  %19 = getelementptr inbounds %"class.dealii::Vector.41", ptr %3, i64 0, i32 3
  %20 = load x86_fp80, ptr %2, align 16
  %21 = getelementptr inbounds i8, ptr %2, i64 16
  %22 = load x86_fp80, ptr %21, align 16
  %23 = getelementptr inbounds %"class.dealii::Vector.41", ptr %5, i64 0, i32 3
  %24 = load x86_fp80, ptr %4, align 16
  %25 = getelementptr inbounds i8, ptr %4, i64 16
  %26 = load x86_fp80, ptr %25, align 16
  %27 = getelementptr inbounds %"class.dealii::Vector.41", ptr %7, i64 0, i32 3
  %28 = load x86_fp80, ptr %6, align 16
  %29 = getelementptr inbounds i8, ptr %6, i64 16
  %30 = load x86_fp80, ptr %29, align 16
  br label %32

31:                                               ; preds = %119, %8
  ret void

32:                                               ; preds = %12, %119
  %33 = phi i64 [ 0, %12 ], [ %129, %119 ]
  %34 = load ptr, ptr %13, align 8, !tbaa !351
  %35 = getelementptr inbounds %"class.std::complex.42", ptr %34, i64 %33
  %36 = load x86_fp80, ptr %35, align 16, !noalias !393
  %37 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %35, i64 0, i32 1
  %38 = load x86_fp80, ptr %37, align 16, !noalias !393
  %39 = fmul x86_fp80 %14, %36
  %40 = fmul x86_fp80 %17, %38
  %41 = fmul x86_fp80 %14, %38
  %42 = fmul x86_fp80 %17, %36
  %43 = fsub x86_fp80 %39, %40
  %44 = fadd x86_fp80 %42, %41
  %45 = fcmp uno x86_fp80 %43, 0xK00000000000000000000
  br i1 %45, label %46, label %52, !prof !340

46:                                               ; preds = %32
  %47 = fcmp uno x86_fp80 %44, 0xK00000000000000000000
  br i1 %47, label %48, label %52, !prof !340

48:                                               ; preds = %46
  %49 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %14, x86_fp80 noundef %17, x86_fp80 noundef %36, x86_fp80 noundef %38) #24, !noalias !393
  %50 = extractvalue { x86_fp80, x86_fp80 } %49, 0
  %51 = extractvalue { x86_fp80, x86_fp80 } %49, 1
  br label %52

52:                                               ; preds = %32, %46, %48
  %53 = phi x86_fp80 [ %43, %32 ], [ %43, %46 ], [ %50, %48 ]
  %54 = phi x86_fp80 [ %44, %32 ], [ %44, %46 ], [ %51, %48 ]
  %55 = load ptr, ptr %19, align 8, !tbaa !351
  %56 = getelementptr inbounds %"class.std::complex.42", ptr %55, i64 %33
  %57 = load x86_fp80, ptr %56, align 16, !noalias !396
  %58 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %56, i64 0, i32 1
  %59 = load x86_fp80, ptr %58, align 16, !noalias !396
  %60 = fmul x86_fp80 %20, %57
  %61 = fmul x86_fp80 %22, %59
  %62 = fmul x86_fp80 %20, %59
  %63 = fmul x86_fp80 %22, %57
  %64 = fsub x86_fp80 %60, %61
  %65 = fadd x86_fp80 %63, %62
  %66 = fcmp uno x86_fp80 %64, 0xK00000000000000000000
  br i1 %66, label %67, label %73, !prof !340

67:                                               ; preds = %52
  %68 = fcmp uno x86_fp80 %65, 0xK00000000000000000000
  br i1 %68, label %69, label %73, !prof !340

69:                                               ; preds = %67
  %70 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %20, x86_fp80 noundef %22, x86_fp80 noundef %57, x86_fp80 noundef %59) #24, !noalias !396
  %71 = extractvalue { x86_fp80, x86_fp80 } %70, 0
  %72 = extractvalue { x86_fp80, x86_fp80 } %70, 1
  br label %73

73:                                               ; preds = %52, %67, %69
  %74 = phi x86_fp80 [ %64, %52 ], [ %64, %67 ], [ %71, %69 ]
  %75 = phi x86_fp80 [ %65, %52 ], [ %65, %67 ], [ %72, %69 ]
  %76 = fadd x86_fp80 %53, %74
  %77 = fadd x86_fp80 %54, %75
  %78 = load ptr, ptr %23, align 8, !tbaa !351
  %79 = getelementptr inbounds %"class.std::complex.42", ptr %78, i64 %33
  %80 = load x86_fp80, ptr %79, align 16, !noalias !399
  %81 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %79, i64 0, i32 1
  %82 = load x86_fp80, ptr %81, align 16, !noalias !399
  %83 = fmul x86_fp80 %24, %80
  %84 = fmul x86_fp80 %26, %82
  %85 = fmul x86_fp80 %24, %82
  %86 = fmul x86_fp80 %26, %80
  %87 = fsub x86_fp80 %83, %84
  %88 = fadd x86_fp80 %86, %85
  %89 = fcmp uno x86_fp80 %87, 0xK00000000000000000000
  br i1 %89, label %90, label %96, !prof !340

90:                                               ; preds = %73
  %91 = fcmp uno x86_fp80 %88, 0xK00000000000000000000
  br i1 %91, label %92, label %96, !prof !340

92:                                               ; preds = %90
  %93 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %24, x86_fp80 noundef %26, x86_fp80 noundef %80, x86_fp80 noundef %82) #24, !noalias !399
  %94 = extractvalue { x86_fp80, x86_fp80 } %93, 0
  %95 = extractvalue { x86_fp80, x86_fp80 } %93, 1
  br label %96

96:                                               ; preds = %73, %90, %92
  %97 = phi x86_fp80 [ %87, %73 ], [ %87, %90 ], [ %94, %92 ]
  %98 = phi x86_fp80 [ %88, %73 ], [ %88, %90 ], [ %95, %92 ]
  %99 = fadd x86_fp80 %76, %97
  %100 = fadd x86_fp80 %77, %98
  %101 = load ptr, ptr %27, align 8, !tbaa !351
  %102 = getelementptr inbounds %"class.std::complex.42", ptr %101, i64 %33
  %103 = load x86_fp80, ptr %102, align 16, !noalias !402
  %104 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %102, i64 0, i32 1
  %105 = load x86_fp80, ptr %104, align 16, !noalias !402
  %106 = fmul x86_fp80 %28, %103
  %107 = fmul x86_fp80 %30, %105
  %108 = fmul x86_fp80 %28, %105
  %109 = fmul x86_fp80 %30, %103
  %110 = fsub x86_fp80 %106, %107
  %111 = fadd x86_fp80 %109, %108
  %112 = fcmp uno x86_fp80 %110, 0xK00000000000000000000
  br i1 %112, label %113, label %119, !prof !340

113:                                              ; preds = %96
  %114 = fcmp uno x86_fp80 %111, 0xK00000000000000000000
  br i1 %114, label %115, label %119, !prof !340

115:                                              ; preds = %113
  %116 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %28, x86_fp80 noundef %30, x86_fp80 noundef %103, x86_fp80 noundef %105) #24, !noalias !402
  %117 = extractvalue { x86_fp80, x86_fp80 } %116, 0
  %118 = extractvalue { x86_fp80, x86_fp80 } %116, 1
  br label %119

119:                                              ; preds = %96, %113, %115
  %120 = phi x86_fp80 [ %110, %96 ], [ %110, %113 ], [ %117, %115 ]
  %121 = phi x86_fp80 [ %111, %96 ], [ %111, %113 ], [ %118, %115 ]
  %122 = fadd x86_fp80 %99, %120
  %123 = fadd x86_fp80 %100, %121
  %124 = load ptr, ptr %13, align 8, !tbaa !351
  %125 = getelementptr inbounds %"class.std::complex.42", ptr %124, i64 %33
  store x86_fp80 %122, ptr %125, align 16, !tbaa.struct !353
  %126 = getelementptr inbounds i8, ptr %125, i64 10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %126, ptr noundef nonnull align 2 dereferenceable(6) %15, i64 6, i1 false)
  %127 = getelementptr inbounds i8, ptr %125, i64 16
  store x86_fp80 %123, ptr %127, align 16, !tbaa.struct !335
  %128 = getelementptr inbounds i8, ptr %125, i64 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %128, ptr noundef nonnull align 2 dereferenceable(6) %18, i64 6, i1 false)
  %129 = add nuw nsw i64 %33, 1
  %130 = load i32, ptr %9, align 8, !tbaa !348
  %131 = zext i32 %130 to i64
  %132 = icmp ult i64 %129, %131
  br i1 %132, label %32, label %31
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE5scaleES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !351
  %5 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !348
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::complex.42", ptr %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %2
  %11 = load x86_fp80, ptr %1, align 16
  %12 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %1, i64 0, i32 1
  %13 = load x86_fp80, ptr %12, align 16
  br label %14

14:                                               ; preds = %10, %33
  %15 = phi ptr [ %4, %10 ], [ %16, %33 ]
  %16 = getelementptr inbounds %"class.std::complex.42", ptr %15, i64 1
  %17 = load x86_fp80, ptr %15, align 16
  %18 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %15, i64 0, i32 1
  %19 = load x86_fp80, ptr %18, align 16
  %20 = fmul x86_fp80 %11, %17
  %21 = fmul x86_fp80 %13, %19
  %22 = fmul x86_fp80 %13, %17
  %23 = fmul x86_fp80 %11, %19
  %24 = fsub x86_fp80 %20, %21
  %25 = fadd x86_fp80 %22, %23
  %26 = fcmp uno x86_fp80 %24, 0xK00000000000000000000
  br i1 %26, label %27, label %33, !prof !340

27:                                               ; preds = %14
  %28 = fcmp uno x86_fp80 %25, 0xK00000000000000000000
  br i1 %28, label %29, label %33, !prof !340

29:                                               ; preds = %27
  %30 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %17, x86_fp80 noundef %19, x86_fp80 noundef %11, x86_fp80 noundef %13) #24
  %31 = extractvalue { x86_fp80, x86_fp80 } %30, 0
  %32 = extractvalue { x86_fp80, x86_fp80 } %30, 1
  br label %33

33:                                               ; preds = %14, %27, %29
  %34 = phi x86_fp80 [ %24, %14 ], [ %24, %27 ], [ %31, %29 ]
  %35 = phi x86_fp80 [ %25, %14 ], [ %25, %27 ], [ %32, %29 ]
  store x86_fp80 %34, ptr %15, align 16
  store x86_fp80 %35, ptr %18, align 16
  %36 = icmp eq ptr %16, %8
  br i1 %36, label %37, label %14

37:                                               ; preds = %33, %2
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIeEEmLES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1) local_unnamed_addr #0 comdat align 2 {
  %3 = load x86_fp80, ptr %1, align 16, !tbaa.struct !353
  %4 = getelementptr inbounds i8, ptr %1, i64 16
  %5 = load x86_fp80, ptr %4, align 16, !tbaa.struct !335
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !351
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !348
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.std::complex.42", ptr %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %36, label %13

13:                                               ; preds = %2, %32
  %14 = phi ptr [ %15, %32 ], [ %7, %2 ]
  %15 = getelementptr inbounds %"class.std::complex.42", ptr %14, i64 1
  %16 = load x86_fp80, ptr %14, align 16
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %14, i64 0, i32 1
  %18 = load x86_fp80, ptr %17, align 16
  %19 = fmul x86_fp80 %3, %16
  %20 = fmul x86_fp80 %5, %18
  %21 = fmul x86_fp80 %5, %16
  %22 = fmul x86_fp80 %3, %18
  %23 = fsub x86_fp80 %19, %20
  %24 = fadd x86_fp80 %21, %22
  %25 = fcmp uno x86_fp80 %23, 0xK00000000000000000000
  br i1 %25, label %26, label %32, !prof !340

26:                                               ; preds = %13
  %27 = fcmp uno x86_fp80 %24, 0xK00000000000000000000
  br i1 %27, label %28, label %32, !prof !340

28:                                               ; preds = %26
  %29 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %16, x86_fp80 noundef %18, x86_fp80 noundef %3, x86_fp80 noundef %5) #24
  %30 = extractvalue { x86_fp80, x86_fp80 } %29, 0
  %31 = extractvalue { x86_fp80, x86_fp80 } %29, 1
  br label %32

32:                                               ; preds = %28, %26, %13
  %33 = phi x86_fp80 [ %23, %13 ], [ %23, %26 ], [ %30, %28 ]
  %34 = phi x86_fp80 [ %24, %13 ], [ %24, %26 ], [ %31, %28 ]
  store x86_fp80 %33, ptr %14, align 16
  store x86_fp80 %34, ptr %17, align 16
  %35 = icmp eq ptr %15, %11
  br i1 %35, label %36, label %13

36:                                               ; preds = %32, %2
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIeEEdVES2_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1) local_unnamed_addr #0 comdat align 2 {
  %3 = load x86_fp80, ptr %1, align 16, !noalias !405
  %4 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %1, i64 0, i32 1
  %5 = load x86_fp80, ptr %4, align 16, !noalias !405
  %6 = tail call noundef { x86_fp80, x86_fp80 } @__divxc3(x86_fp80 noundef 0xK3FFF8000000000000000, x86_fp80 noundef 0xK00000000000000000000, x86_fp80 noundef %3, x86_fp80 noundef %5) #24, !noalias !405
  %7 = extractvalue { x86_fp80, x86_fp80 } %6, 0
  %8 = extractvalue { x86_fp80, x86_fp80 } %6, 1
  %9 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !351
  %11 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !348
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.std::complex.42", ptr %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %39, label %16

16:                                               ; preds = %2, %35
  %17 = phi ptr [ %18, %35 ], [ %10, %2 ]
  %18 = getelementptr inbounds %"class.std::complex.42", ptr %17, i64 1
  %19 = load x86_fp80, ptr %17, align 16
  %20 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %17, i64 0, i32 1
  %21 = load x86_fp80, ptr %20, align 16
  %22 = fmul x86_fp80 %7, %19
  %23 = fmul x86_fp80 %8, %21
  %24 = fmul x86_fp80 %8, %19
  %25 = fmul x86_fp80 %7, %21
  %26 = fsub x86_fp80 %22, %23
  %27 = fadd x86_fp80 %24, %25
  %28 = fcmp uno x86_fp80 %26, 0xK00000000000000000000
  br i1 %28, label %29, label %35, !prof !340

29:                                               ; preds = %16
  %30 = fcmp uno x86_fp80 %27, 0xK00000000000000000000
  br i1 %30, label %31, label %35, !prof !340

31:                                               ; preds = %29
  %32 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %19, x86_fp80 noundef %21, x86_fp80 noundef %7, x86_fp80 noundef %8) #24
  %33 = extractvalue { x86_fp80, x86_fp80 } %32, 0
  %34 = extractvalue { x86_fp80, x86_fp80 } %32, 1
  br label %35

35:                                               ; preds = %31, %29, %16
  %36 = phi x86_fp80 [ %26, %16 ], [ %26, %29 ], [ %33, %31 ]
  %37 = phi x86_fp80 [ %27, %16 ], [ %27, %29 ], [ %34, %31 ]
  store x86_fp80 %36, ptr %17, align 16
  store x86_fp80 %37, ptr %20, align 16
  %38 = icmp eq ptr %18, %14
  br i1 %38, label %39, label %16

39:                                               ; preds = %35, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE3equES2_RKS3_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef byval(%"class.std::complex.42") align 16 %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #2 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !348
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.41", ptr %2, i64 0, i32 3
  %11 = load x86_fp80, ptr %1, align 16, !tbaa.struct !353
  %12 = getelementptr inbounds i8, ptr %1, i64 10
  %13 = getelementptr inbounds i8, ptr %1, i64 16
  %14 = load x86_fp80, ptr %13, align 16, !tbaa.struct !335
  %15 = getelementptr inbounds i8, ptr %1, i64 26
  %16 = getelementptr inbounds %"class.dealii::Vector.41", ptr %4, i64 0, i32 3
  %17 = load x86_fp80, ptr %3, align 16
  %18 = getelementptr inbounds i8, ptr %3, i64 16
  %19 = load x86_fp80, ptr %18, align 16
  %20 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %22

21:                                               ; preds = %63, %5
  ret void

22:                                               ; preds = %9, %63
  %23 = phi i64 [ 0, %9 ], [ %73, %63 ]
  %24 = load ptr, ptr %10, align 8, !tbaa !351
  %25 = getelementptr inbounds %"class.std::complex.42", ptr %24, i64 %23
  %26 = load x86_fp80, ptr %25, align 16, !noalias !408
  %27 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %25, i64 0, i32 1
  %28 = load x86_fp80, ptr %27, align 16, !noalias !408
  %29 = fmul x86_fp80 %11, %26
  %30 = fmul x86_fp80 %14, %28
  %31 = fmul x86_fp80 %11, %28
  %32 = fmul x86_fp80 %14, %26
  %33 = fsub x86_fp80 %29, %30
  %34 = fadd x86_fp80 %32, %31
  %35 = fcmp uno x86_fp80 %33, 0xK00000000000000000000
  br i1 %35, label %36, label %42, !prof !340

36:                                               ; preds = %22
  %37 = fcmp uno x86_fp80 %34, 0xK00000000000000000000
  br i1 %37, label %38, label %42, !prof !340

38:                                               ; preds = %36
  %39 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %11, x86_fp80 noundef %14, x86_fp80 noundef %26, x86_fp80 noundef %28) #24, !noalias !408
  %40 = extractvalue { x86_fp80, x86_fp80 } %39, 0
  %41 = extractvalue { x86_fp80, x86_fp80 } %39, 1
  br label %42

42:                                               ; preds = %22, %36, %38
  %43 = phi x86_fp80 [ %33, %22 ], [ %33, %36 ], [ %40, %38 ]
  %44 = phi x86_fp80 [ %34, %22 ], [ %34, %36 ], [ %41, %38 ]
  %45 = load ptr, ptr %16, align 8, !tbaa !351
  %46 = getelementptr inbounds %"class.std::complex.42", ptr %45, i64 %23
  %47 = load x86_fp80, ptr %46, align 16, !noalias !411
  %48 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %46, i64 0, i32 1
  %49 = load x86_fp80, ptr %48, align 16, !noalias !411
  %50 = fmul x86_fp80 %17, %47
  %51 = fmul x86_fp80 %19, %49
  %52 = fmul x86_fp80 %17, %49
  %53 = fmul x86_fp80 %19, %47
  %54 = fsub x86_fp80 %50, %51
  %55 = fadd x86_fp80 %53, %52
  %56 = fcmp uno x86_fp80 %54, 0xK00000000000000000000
  br i1 %56, label %57, label %63, !prof !340

57:                                               ; preds = %42
  %58 = fcmp uno x86_fp80 %55, 0xK00000000000000000000
  br i1 %58, label %59, label %63, !prof !340

59:                                               ; preds = %57
  %60 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %17, x86_fp80 noundef %19, x86_fp80 noundef %47, x86_fp80 noundef %49) #24, !noalias !411
  %61 = extractvalue { x86_fp80, x86_fp80 } %60, 0
  %62 = extractvalue { x86_fp80, x86_fp80 } %60, 1
  br label %63

63:                                               ; preds = %42, %57, %59
  %64 = phi x86_fp80 [ %54, %42 ], [ %54, %57 ], [ %61, %59 ]
  %65 = phi x86_fp80 [ %55, %42 ], [ %55, %57 ], [ %62, %59 ]
  %66 = fadd x86_fp80 %43, %64
  %67 = fadd x86_fp80 %44, %65
  %68 = load ptr, ptr %20, align 8, !tbaa !351
  %69 = getelementptr inbounds %"class.std::complex.42", ptr %68, i64 %23
  store x86_fp80 %66, ptr %69, align 16, !tbaa.struct !353
  %70 = getelementptr inbounds i8, ptr %69, i64 10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %70, ptr noundef nonnull align 2 dereferenceable(6) %12, i64 6, i1 false)
  %71 = getelementptr inbounds i8, ptr %69, i64 16
  store x86_fp80 %67, ptr %71, align 16, !tbaa.struct !335
  %72 = getelementptr inbounds i8, ptr %69, i64 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %72, ptr noundef nonnull align 2 dereferenceable(6) %15, i64 6, i1 false)
  %73 = add nuw nsw i64 %23, 1
  %74 = load i32, ptr %6, align 8, !tbaa !348
  %75 = zext i32 %74 to i64
  %76 = icmp ult i64 %73, %75
  br i1 %76, label %22, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE3equES2_RKS3_S2_S5_S2_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef byval(%"class.std::complex.42") align 16 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef byval(%"class.std::complex.42") align 16 %5, ptr noundef nonnull align 8 dereferenceable(88) %6) local_unnamed_addr #2 comdat align 2 {
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !348
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.dealii::Vector.41", ptr %2, i64 0, i32 3
  %13 = load x86_fp80, ptr %1, align 16, !tbaa.struct !353
  %14 = getelementptr inbounds i8, ptr %1, i64 10
  %15 = getelementptr inbounds i8, ptr %1, i64 16
  %16 = load x86_fp80, ptr %15, align 16, !tbaa.struct !335
  %17 = getelementptr inbounds i8, ptr %1, i64 26
  %18 = getelementptr inbounds %"class.dealii::Vector.41", ptr %4, i64 0, i32 3
  %19 = load x86_fp80, ptr %3, align 16
  %20 = getelementptr inbounds i8, ptr %3, i64 16
  %21 = load x86_fp80, ptr %20, align 16
  %22 = getelementptr inbounds %"class.dealii::Vector.41", ptr %6, i64 0, i32 3
  %23 = load x86_fp80, ptr %5, align 16
  %24 = getelementptr inbounds i8, ptr %5, i64 16
  %25 = load x86_fp80, ptr %24, align 16
  %26 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %28

27:                                               ; preds = %92, %7
  ret void

28:                                               ; preds = %11, %92
  %29 = phi i64 [ 0, %11 ], [ %102, %92 ]
  %30 = load ptr, ptr %12, align 8, !tbaa !351
  %31 = getelementptr inbounds %"class.std::complex.42", ptr %30, i64 %29
  %32 = load x86_fp80, ptr %31, align 16, !noalias !414
  %33 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %31, i64 0, i32 1
  %34 = load x86_fp80, ptr %33, align 16, !noalias !414
  %35 = fmul x86_fp80 %13, %32
  %36 = fmul x86_fp80 %16, %34
  %37 = fmul x86_fp80 %13, %34
  %38 = fmul x86_fp80 %16, %32
  %39 = fsub x86_fp80 %35, %36
  %40 = fadd x86_fp80 %38, %37
  %41 = fcmp uno x86_fp80 %39, 0xK00000000000000000000
  br i1 %41, label %42, label %48, !prof !340

42:                                               ; preds = %28
  %43 = fcmp uno x86_fp80 %40, 0xK00000000000000000000
  br i1 %43, label %44, label %48, !prof !340

44:                                               ; preds = %42
  %45 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %13, x86_fp80 noundef %16, x86_fp80 noundef %32, x86_fp80 noundef %34) #24, !noalias !414
  %46 = extractvalue { x86_fp80, x86_fp80 } %45, 0
  %47 = extractvalue { x86_fp80, x86_fp80 } %45, 1
  br label %48

48:                                               ; preds = %28, %42, %44
  %49 = phi x86_fp80 [ %39, %28 ], [ %39, %42 ], [ %46, %44 ]
  %50 = phi x86_fp80 [ %40, %28 ], [ %40, %42 ], [ %47, %44 ]
  %51 = load ptr, ptr %18, align 8, !tbaa !351
  %52 = getelementptr inbounds %"class.std::complex.42", ptr %51, i64 %29
  %53 = load x86_fp80, ptr %52, align 16, !noalias !417
  %54 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %52, i64 0, i32 1
  %55 = load x86_fp80, ptr %54, align 16, !noalias !417
  %56 = fmul x86_fp80 %19, %53
  %57 = fmul x86_fp80 %21, %55
  %58 = fmul x86_fp80 %19, %55
  %59 = fmul x86_fp80 %21, %53
  %60 = fsub x86_fp80 %56, %57
  %61 = fadd x86_fp80 %59, %58
  %62 = fcmp uno x86_fp80 %60, 0xK00000000000000000000
  br i1 %62, label %63, label %69, !prof !340

63:                                               ; preds = %48
  %64 = fcmp uno x86_fp80 %61, 0xK00000000000000000000
  br i1 %64, label %65, label %69, !prof !340

65:                                               ; preds = %63
  %66 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %19, x86_fp80 noundef %21, x86_fp80 noundef %53, x86_fp80 noundef %55) #24, !noalias !417
  %67 = extractvalue { x86_fp80, x86_fp80 } %66, 0
  %68 = extractvalue { x86_fp80, x86_fp80 } %66, 1
  br label %69

69:                                               ; preds = %48, %63, %65
  %70 = phi x86_fp80 [ %60, %48 ], [ %60, %63 ], [ %67, %65 ]
  %71 = phi x86_fp80 [ %61, %48 ], [ %61, %63 ], [ %68, %65 ]
  %72 = fadd x86_fp80 %49, %70
  %73 = fadd x86_fp80 %50, %71
  %74 = load ptr, ptr %22, align 8, !tbaa !351
  %75 = getelementptr inbounds %"class.std::complex.42", ptr %74, i64 %29
  %76 = load x86_fp80, ptr %75, align 16, !noalias !420
  %77 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %75, i64 0, i32 1
  %78 = load x86_fp80, ptr %77, align 16, !noalias !420
  %79 = fmul x86_fp80 %23, %76
  %80 = fmul x86_fp80 %25, %78
  %81 = fmul x86_fp80 %23, %78
  %82 = fmul x86_fp80 %25, %76
  %83 = fsub x86_fp80 %79, %80
  %84 = fadd x86_fp80 %82, %81
  %85 = fcmp uno x86_fp80 %83, 0xK00000000000000000000
  br i1 %85, label %86, label %92, !prof !340

86:                                               ; preds = %69
  %87 = fcmp uno x86_fp80 %84, 0xK00000000000000000000
  br i1 %87, label %88, label %92, !prof !340

88:                                               ; preds = %86
  %89 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %23, x86_fp80 noundef %25, x86_fp80 noundef %76, x86_fp80 noundef %78) #24, !noalias !420
  %90 = extractvalue { x86_fp80, x86_fp80 } %89, 0
  %91 = extractvalue { x86_fp80, x86_fp80 } %89, 1
  br label %92

92:                                               ; preds = %69, %86, %88
  %93 = phi x86_fp80 [ %83, %69 ], [ %83, %86 ], [ %90, %88 ]
  %94 = phi x86_fp80 [ %84, %69 ], [ %84, %86 ], [ %91, %88 ]
  %95 = fadd x86_fp80 %72, %93
  %96 = fadd x86_fp80 %73, %94
  %97 = load ptr, ptr %26, align 8, !tbaa !351
  %98 = getelementptr inbounds %"class.std::complex.42", ptr %97, i64 %29
  store x86_fp80 %95, ptr %98, align 16, !tbaa.struct !353
  %99 = getelementptr inbounds i8, ptr %98, i64 10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %99, ptr noundef nonnull align 2 dereferenceable(6) %14, i64 6, i1 false)
  %100 = getelementptr inbounds i8, ptr %98, i64 16
  store x86_fp80 %96, ptr %100, align 16, !tbaa.struct !335
  %101 = getelementptr inbounds i8, ptr %98, i64 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %101, ptr noundef nonnull align 2 dereferenceable(6) %17, i64 6, i1 false)
  %102 = add nuw nsw i64 %29, 1
  %103 = load i32, ptr %8, align 8, !tbaa !348
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %102, %104
  br i1 %105, label %28, label %27
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE5ratioERKS3_S5_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca [6 x i8], align 2
  %5 = alloca [6 x i8], align 2
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !348
  %8 = load ptr, ptr %0, align 8, !tbaa !5
  %9 = getelementptr inbounds ptr, ptr %8, i64 2
  %10 = load ptr, ptr %9, align 8
  tail call void %10(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %7, i1 noundef zeroext true)
  %11 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !348
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %16 = getelementptr inbounds %"class.dealii::Vector.41", ptr %2, i64 0, i32 3
  %17 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %19

18:                                               ; preds = %19, %3
  ret void

19:                                               ; preds = %14, %19
  %20 = phi i64 [ 0, %14 ], [ %41, %19 ]
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %4)
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %5)
  %21 = load ptr, ptr %15, align 8, !tbaa !351
  %22 = getelementptr inbounds %"class.std::complex.42", ptr %21, i64 %20
  %23 = load ptr, ptr %16, align 8, !tbaa !351
  %24 = getelementptr inbounds %"class.std::complex.42", ptr %23, i64 %20
  %25 = load x86_fp80, ptr %22, align 16, !tbaa.struct !353
  %26 = getelementptr inbounds i8, ptr %22, i64 10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %4, ptr noundef nonnull align 2 dereferenceable(6) %26, i64 6, i1 false), !tbaa.struct !423
  %27 = getelementptr inbounds i8, ptr %22, i64 16
  %28 = load x86_fp80, ptr %27, align 16, !tbaa.struct !335
  %29 = getelementptr inbounds i8, ptr %22, i64 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %5, ptr noundef nonnull align 2 dereferenceable(6) %29, i64 6, i1 false), !tbaa.struct !424
  %30 = load x86_fp80, ptr %24, align 16, !noalias !425
  %31 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %24, i64 0, i32 1
  %32 = load x86_fp80, ptr %31, align 16, !noalias !425
  %33 = tail call noundef { x86_fp80, x86_fp80 } @__divxc3(x86_fp80 noundef %25, x86_fp80 noundef %28, x86_fp80 noundef %30, x86_fp80 noundef %32) #24, !noalias !425
  %34 = extractvalue { x86_fp80, x86_fp80 } %33, 0
  %35 = extractvalue { x86_fp80, x86_fp80 } %33, 1
  %36 = load ptr, ptr %17, align 8, !tbaa !351
  %37 = getelementptr inbounds %"class.std::complex.42", ptr %36, i64 %20
  store x86_fp80 %34, ptr %37, align 16, !tbaa.struct !353
  %38 = getelementptr inbounds i8, ptr %37, i64 10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %38, ptr noundef nonnull align 2 dereferenceable(6) %4, i64 6, i1 false), !tbaa.struct !423
  %39 = getelementptr inbounds i8, ptr %37, i64 16
  store x86_fp80 %35, ptr %39, align 16, !tbaa.struct !335
  %40 = getelementptr inbounds i8, ptr %37, i64 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %40, ptr noundef nonnull align 2 dereferenceable(6) %5, i64 6, i1 false), !tbaa.struct !424
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %5)
  %41 = add nuw nsw i64 %20, 1
  %42 = load i32, ptr %11, align 8, !tbaa !348
  %43 = zext i32 %42 to i64
  %44 = icmp ult i64 %41, %43
  br i1 %44, label %19, label %18
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIeEE5printEPKc(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %8 = icmp eq ptr %1, null
  br i1 %8, label %9, label %25

9:                                                ; preds = %6, %9
  %10 = phi i64 [ %19, %9 ], [ 0, %6 ]
  %11 = load ptr, ptr %7, align 8, !tbaa !351
  %12 = getelementptr inbounds %"class.std::complex.42", ptr %11, i64 %10
  %13 = load x86_fp80, ptr %12, align 16, !tbaa !275
  %14 = fptrunc x86_fp80 %13 to double
  %15 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %12, i64 0, i32 1
  %16 = load x86_fp80, ptr %15, align 16, !tbaa !275
  %17 = fptrunc x86_fp80 %16 to double
  %18 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.11, double noundef %14, double noundef %17)
  %19 = add nuw nsw i64 %10, 1
  %20 = load i32, ptr %3, align 8, !tbaa !348
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %9, label %23

23:                                               ; preds = %25, %9, %2
  %24 = tail call i32 @putchar(i32 10)
  ret void

25:                                               ; preds = %6, %25
  %26 = phi i64 [ %33, %25 ], [ 0, %6 ]
  %27 = load ptr, ptr %7, align 8, !tbaa !351
  %28 = getelementptr inbounds %"class.std::complex.42", ptr %27, i64 %26
  %29 = load x86_fp80, ptr %28, align 16, !tbaa !275
  %30 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %28, i64 0, i32 1
  %31 = load x86_fp80, ptr %30, align 16, !tbaa !275
  %32 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) %1, x86_fp80 noundef %29, x86_fp80 noundef %31)
  %33 = add nuw nsw i64 %26, 1
  %34 = load i32, ptr %3, align 8, !tbaa !348
  %35 = zext i32 %34 to i64
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %25, label %23
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIeEE5printERSojbb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = getelementptr i8, ptr %9, i64 -24
  %11 = load i64, ptr %10, align 8
  %12 = getelementptr inbounds i8, ptr %1, i64 %11
  %13 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 5
  %14 = load i32, ptr %13, align 8, !tbaa !144
  %15 = and i32 %14, 5
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.1, i32 noundef 784, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %18 unwind label %24

18:                                               ; preds = %17
  %19 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %19, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %20 unwind label %22

20:                                               ; preds = %18
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %21 unwind label %24

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %19) #24
  br label %153

24:                                               ; preds = %20, %17
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %153

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 3
  %28 = load i32, ptr %27, align 8, !tbaa !150
  %29 = zext i32 %2 to i64
  %30 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 1
  %31 = load i64, ptr %30, align 8, !tbaa !151
  store i64 %29, ptr %30, align 8, !tbaa !151
  %32 = load i64, ptr %10, align 8
  %33 = getelementptr inbounds i8, ptr %1, i64 %32
  %34 = getelementptr inbounds %"class.std::ios_base", ptr %33, i64 0, i32 1
  store i64 %29, ptr %34, align 8, !tbaa !151
  %35 = load i64, ptr %10, align 8
  %36 = getelementptr inbounds i8, ptr %1, i64 %35
  %37 = getelementptr inbounds %"class.std::ios_base", ptr %36, i64 0, i32 3
  %38 = load i32, ptr %37, align 8, !tbaa !152
  %39 = and i32 %38, -261
  %40 = select i1 %3, i32 256, i32 4
  %41 = or i32 %39, %40
  store i32 %41, ptr %37, align 8, !tbaa !152
  %42 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %43 = load i32, ptr %42, align 8, !tbaa !348
  %44 = icmp eq i32 %43, 0
  br i1 %4, label %48, label %45

45:                                               ; preds = %26
  br i1 %44, label %105, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %72

48:                                               ; preds = %26
  br i1 %44, label %105, label %49

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %51

51:                                               ; preds = %49, %67
  %52 = phi i64 [ 0, %49 ], [ %68, %67 ]
  %53 = load ptr, ptr %50, align 8, !tbaa !351
  %54 = getelementptr inbounds %"class.std::complex.42", ptr %53, i64 %52
  %55 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsIecSt11char_traitsIcEERSt13basic_ostreamIT0_T1_ES6_RKSt7complexIT_E(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull align 16 dereferenceable(32) %54)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6)
  store i8 32, ptr %6, align 1, !tbaa !153
  %56 = load ptr, ptr %55, align 8, !tbaa !5
  %57 = getelementptr i8, ptr %56, i64 -24
  %58 = load i64, ptr %57, align 8
  %59 = getelementptr inbounds i8, ptr %55, i64 %58
  %60 = getelementptr inbounds %"class.std::ios_base", ptr %59, i64 0, i32 2
  %61 = load i64, ptr %60, align 8, !tbaa !154
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %51
  %64 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %55, ptr noundef nonnull %6, i64 noundef 1)
  br label %67

65:                                               ; preds = %51
  %66 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %55, i8 noundef signext 32)
  br label %67

67:                                               ; preds = %63, %65
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6)
  %68 = add nuw nsw i64 %52, 1
  %69 = load i32, ptr %42, align 8, !tbaa !348
  %70 = zext i32 %69 to i64
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %51, label %105

72:                                               ; preds = %46, %97
  %73 = phi i64 [ 0, %46 ], [ %101, %97 ]
  %74 = load ptr, ptr %47, align 8, !tbaa !351
  %75 = getelementptr inbounds %"class.std::complex.42", ptr %74, i64 %73
  %76 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsIecSt11char_traitsIcEERSt13basic_ostreamIT0_T1_ES6_RKSt7complexIT_E(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull align 16 dereferenceable(32) %75)
  %77 = load ptr, ptr %76, align 8, !tbaa !5
  %78 = getelementptr i8, ptr %77, i64 -24
  %79 = load i64, ptr %78, align 8
  %80 = getelementptr inbounds i8, ptr %76, i64 %79
  %81 = getelementptr inbounds %"class.std::basic_ios", ptr %80, i64 0, i32 5
  %82 = load ptr, ptr %81, align 8, !tbaa !155
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %72
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

85:                                               ; preds = %72
  %86 = getelementptr inbounds %"class.std::ctype", ptr %82, i64 0, i32 8
  %87 = load i8, ptr %86, align 8, !tbaa !158
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.std::ctype", ptr %82, i64 0, i32 9, i64 10
  %91 = load i8, ptr %90, align 1, !tbaa !153
  br label %97

92:                                               ; preds = %85
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %82)
  %93 = load ptr, ptr %82, align 8, !tbaa !5
  %94 = getelementptr inbounds ptr, ptr %93, i64 6
  %95 = load ptr, ptr %94, align 8
  %96 = tail call noundef signext i8 %95(ptr noundef nonnull align 8 dereferenceable(570) %82, i8 noundef signext 10)
  br label %97

97:                                               ; preds = %89, %92
  %98 = phi i8 [ %91, %89 ], [ %96, %92 ]
  %99 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %76, i8 noundef signext %98)
  %100 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %99)
  %101 = add nuw nsw i64 %73, 1
  %102 = load i32, ptr %42, align 8, !tbaa !348
  %103 = zext i32 %102 to i64
  %104 = icmp ult i64 %101, %103
  br i1 %104, label %72, label %105

105:                                              ; preds = %97, %67, %45, %48
  %106 = load ptr, ptr %1, align 8, !tbaa !5
  %107 = getelementptr i8, ptr %106, i64 -24
  %108 = load i64, ptr %107, align 8
  %109 = getelementptr inbounds i8, ptr %1, i64 %108
  %110 = getelementptr inbounds %"class.std::basic_ios", ptr %109, i64 0, i32 5
  %111 = load ptr, ptr %110, align 8, !tbaa !155
  %112 = icmp eq ptr %111, null
  br i1 %112, label %113, label %114

113:                                              ; preds = %105
  call void @_ZSt16__throw_bad_castv() #26
  unreachable

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"class.std::ctype", ptr %111, i64 0, i32 8
  %116 = load i8, ptr %115, align 8, !tbaa !158
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.std::ctype", ptr %111, i64 0, i32 9, i64 10
  %120 = load i8, ptr %119, align 1, !tbaa !153
  br label %126

121:                                              ; preds = %114
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %111)
  %122 = load ptr, ptr %111, align 8, !tbaa !5
  %123 = getelementptr inbounds ptr, ptr %122, i64 6
  %124 = load ptr, ptr %123, align 8
  %125 = call noundef signext i8 %124(ptr noundef nonnull align 8 dereferenceable(570) %111, i8 noundef signext 10)
  br label %126

126:                                              ; preds = %118, %121
  %127 = phi i8 [ %120, %118 ], [ %125, %121 ]
  %128 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %127)
  %129 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %128)
  %130 = load ptr, ptr %1, align 8, !tbaa !5
  %131 = getelementptr i8, ptr %130, i64 -24
  %132 = load i64, ptr %131, align 8
  %133 = getelementptr inbounds i8, ptr %1, i64 %132
  %134 = getelementptr inbounds %"class.std::ios_base", ptr %133, i64 0, i32 5
  %135 = load i32, ptr %134, align 8, !tbaa !144
  %136 = and i32 %135, 5
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %147, label %138

138:                                              ; preds = %126
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %8, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %8)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %8, ptr noundef nonnull @.str.1, i32 noundef 803, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %139 unwind label %145

139:                                              ; preds = %138
  %140 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %140, ptr noundef nonnull align 8 dereferenceable(60) %8)
          to label %141 unwind label %143

141:                                              ; preds = %139
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %140, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %140, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %142 unwind label %145

142:                                              ; preds = %141
  unreachable

143:                                              ; preds = %139
  %144 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %140) #24
  br label %153

145:                                              ; preds = %141, %138
  %146 = landingpad { ptr, i32 }
          cleanup
  br label %153

147:                                              ; preds = %126
  %148 = getelementptr inbounds %"class.std::ios_base", ptr %133, i64 0, i32 3
  store i32 %28, ptr %148, align 8, !tbaa !150
  %149 = load i64, ptr %131, align 8
  %150 = getelementptr inbounds i8, ptr %1, i64 %149
  %151 = and i64 %31, 4294967295
  %152 = getelementptr inbounds %"class.std::ios_base", ptr %150, i64 0, i32 1
  store i64 %151, ptr %152, align 8, !tbaa !151
  ret void

153:                                              ; preds = %145, %143, %24, %22
  %154 = phi ptr [ %7, %22 ], [ %7, %24 ], [ %8, %143 ], [ %8, %145 ]
  %155 = phi { ptr, i32 } [ %23, %22 ], [ %25, %24 ], [ %144, %143 ], [ %146, %145 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %154) #24
  resume { ptr, i32 } %155
}

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsIecSt11char_traitsIcEERSt13basic_ostreamIT0_T1_ES6_RKSt7complexIT_E(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef nonnull align 16 dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIeEE11block_writeERSo(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = load ptr, ptr %1, align 8, !tbaa !5
  %8 = getelementptr i8, ptr %7, i64 -24
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = getelementptr inbounds %"class.std::ios_base", ptr %10, i64 0, i32 5
  %12 = load i32, ptr %11, align 8, !tbaa !144
  %13 = and i32 %12, 5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.1, i32 noundef 814, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %16 unwind label %22

16:                                               ; preds = %15
  %17 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %17, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %18 unwind label %20

18:                                               ; preds = %16
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %17, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %19 unwind label %22

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %16
  %21 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %17) #24
  br label %24

22:                                               ; preds = %18, %15
  %23 = landingpad { ptr, i32 }
          cleanup
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi { ptr, i32 } [ %23, %22 ], [ %21, %20 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  br label %61

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %28 = load i32, ptr %27, align 8, !tbaa !348
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #24
  %29 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) @.str.5, i32 noundef %28) #24
  %30 = call i64 @strlen(ptr nonnull dereferenceable(1) %4)
  %31 = getelementptr inbounds i8, ptr %4, i64 %30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(3) %31, ptr noundef nonnull align 1 dereferenceable(3) @.str.6, i64 3, i1 false)
  %32 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %4) #27
  %33 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %4, i64 noundef %32)
  %34 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !351
  %36 = load i32, ptr %27, align 8, !tbaa !348
  %37 = zext i32 %36 to i64
  %38 = shl nuw nsw i64 %37, 5
  %39 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef %35, i64 noundef %38)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #24
  store i8 93, ptr %5, align 1, !tbaa !153
  %40 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %5, i64 noundef 1)
  %41 = load ptr, ptr %1, align 8, !tbaa !5
  %42 = getelementptr i8, ptr %41, i64 -24
  %43 = load i64, ptr %42, align 8
  %44 = getelementptr inbounds i8, ptr %1, i64 %43
  %45 = getelementptr inbounds %"class.std::ios_base", ptr %44, i64 0, i32 5
  %46 = load i32, ptr %45, align 8, !tbaa !144
  %47 = and i32 %46, 5
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %26
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.1, i32 noundef 837, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4)
          to label %50 unwind label %56

50:                                               ; preds = %49
  %51 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %51, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %52 unwind label %54

52:                                               ; preds = %50
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %51, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %51, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %53 unwind label %56

53:                                               ; preds = %52
  unreachable

54:                                               ; preds = %50
  %55 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %51) #24
  br label %58

56:                                               ; preds = %52, %49
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi { ptr, i32 } [ %57, %56 ], [ %55, %54 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  br label %61

60:                                               ; preds = %26
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  ret void

61:                                               ; preds = %58, %24
  %62 = phi { ptr, i32 } [ %59, %58 ], [ %25, %24 ]
  resume { ptr, i32 } %62
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE10block_readERSi(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) local_unnamed_addr #2 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = load ptr, ptr %1, align 8, !tbaa !5
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 %10
  %12 = getelementptr inbounds %"class.std::ios_base", ptr %11, i64 0, i32 5
  %13 = load i32, ptr %12, align 8, !tbaa !144
  %14 = and i32 %13, 5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.1, i32 noundef 845, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.4)
          to label %17 unwind label %23

17:                                               ; preds = %16
  %18 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %18, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %19 unwind label %21

19:                                               ; preds = %17
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %18, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %18, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %20 unwind label %23

20:                                               ; preds = %19
  unreachable

21:                                               ; preds = %17
  %22 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %18) #24
  br label %25

23:                                               ; preds = %19, %16
  %24 = landingpad { ptr, i32 }
          cleanup
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi { ptr, i32 } [ %24, %23 ], [ %22, %21 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  br label %70

27:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #24
  %28 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi7getlineEPclc(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %4, i64 noundef 16, i8 noundef signext 10)
  %29 = call i64 @__isoc23_strtol(ptr noundef nonnull %4, ptr noundef null, i32 noundef 10) #24
  %30 = trunc i64 %29 to i32
  %31 = load ptr, ptr %0, align 8, !tbaa !5
  %32 = getelementptr inbounds ptr, ptr %31, i64 2
  %33 = load ptr, ptr %32, align 8
  call void %33(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %30, i1 noundef zeroext true)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #24
  %34 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %5, i64 noundef 1)
  %35 = load i8, ptr %5, align 1, !tbaa !153
  %36 = icmp eq i8 %35, 91
  br i1 %36, label %46, label %37

37:                                               ; preds = %27
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.1, i32 noundef 862, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.4)
          to label %38 unwind label %44

38:                                               ; preds = %37
  %39 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %39, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %40 unwind label %42

40:                                               ; preds = %38
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %39, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %39, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %41 unwind label %44

41:                                               ; preds = %40
  unreachable

42:                                               ; preds = %38
  %43 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %39) #24
  br label %67

44:                                               ; preds = %40, %37
  %45 = landingpad { ptr, i32 }
          cleanup
  br label %67

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !351
  %49 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %50 = load i32, ptr %49, align 8, !tbaa !348
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 5
  %53 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef %48, i64 noundef %52)
  %54 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %5, i64 noundef 1)
  %55 = load i8, ptr %5, align 1, !tbaa !153
  %56 = icmp eq i8 %55, 93
  br i1 %56, label %66, label %57

57:                                               ; preds = %46
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.1, i32 noundef 870, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.4)
          to label %58 unwind label %64

58:                                               ; preds = %57
  %59 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %59, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %60 unwind label %62

60:                                               ; preds = %58
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %59, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %59, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #26
          to label %61 unwind label %64

61:                                               ; preds = %60
  unreachable

62:                                               ; preds = %58
  %63 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %59) #24
  br label %67

64:                                               ; preds = %60, %57
  %65 = landingpad { ptr, i32 }
          cleanup
  br label %67

66:                                               ; preds = %46
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  ret void

67:                                               ; preds = %64, %62, %44, %42
  %68 = phi ptr [ %6, %42 ], [ %6, %44 ], [ %7, %62 ], [ %7, %64 ]
  %69 = phi { ptr, i32 } [ %43, %42 ], [ %45, %44 ], [ %63, %62 ], [ %65, %64 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %68) #24
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #24
  br label %70

70:                                               ; preds = %67, %25
  %71 = phi { ptr, i32 } [ %69, %67 ], [ %26, %25 ]
  resume { ptr, i32 } %71
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii6VectorISt7complexIeEE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(88) %0) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !350
  %4 = shl i32 %3, 5
  %5 = add i32 %4, 88
  ret i32 %5
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIdEEeqIS2_EEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !333
  %9 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !333
  %11 = zext i32 %4 to i64
  %12 = load <2 x double>, ptr %10, align 8
  %13 = load <2 x double>, ptr %8, align 8
  %14 = fcmp une <2 x double> %13, %12
  %15 = extractelement <2 x i1> %14, i64 0
  %16 = extractelement <2 x i1> %14, i64 1
  %17 = select i1 %15, i1 true, i1 %16
  br i1 %17, label %33, label %18

18:                                               ; preds = %6, %22
  %19 = phi i64 [ %20, %22 ], [ 0, %6 ]
  %20 = add nuw nsw i64 %19, 1
  %21 = icmp eq i64 %20, %11
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::complex", ptr %8, i64 %20
  %24 = getelementptr inbounds %"class.std::complex", ptr %10, i64 %20
  %25 = load <2 x double>, ptr %24, align 8
  %26 = load <2 x double>, ptr %23, align 8
  %27 = fcmp une <2 x double> %26, %25
  %28 = extractelement <2 x i1> %27, i64 0
  %29 = extractelement <2 x i1> %27, i64 1
  %30 = select i1 %28, i1 true, i1 %29
  br i1 %30, label %31, label %18

31:                                               ; preds = %18, %22
  %32 = icmp uge i64 %20, %11
  br label %33

33:                                               ; preds = %31, %6, %2
  %34 = phi i1 [ true, %2 ], [ false, %6 ], [ %32, %31 ]
  ret i1 %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local { double, double } @_ZNK6dealii6VectorISt7complexIdEEmlIS2_EES2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq ptr %0, %1
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !330
  %6 = icmp eq i32 %5, 0
  br i1 %3, label %11, label %7

7:                                                ; preds = %2
  br i1 %6, label %97, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  br label %42

11:                                               ; preds = %2
  br i1 %6, label %97, label %12

12:                                               ; preds = %11
  %13 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !333
  %15 = zext i32 %5 to i64
  %16 = and i64 %15, 1
  %17 = icmp eq i32 %5, 1
  br i1 %17, label %84, label %18

18:                                               ; preds = %12
  %19 = and i64 %15, 4294967294
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i64 [ 0, %18 ], [ %39, %20 ]
  %22 = phi double [ 0.000000e+00, %18 ], [ %38, %20 ]
  %23 = phi i64 [ 0, %18 ], [ %40, %20 ]
  %24 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %21
  %25 = load double, ptr %24, align 8, !tbaa !26
  %26 = getelementptr inbounds { double, double }, ptr %24, i64 0, i32 1
  %27 = load double, ptr %26, align 8, !tbaa !26
  %28 = fmul double %27, %27
  %29 = tail call double @llvm.fmuladd.f64(double %25, double %25, double %28)
  %30 = fadd double %22, %29
  %31 = or i64 %21, 1
  %32 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %31
  %33 = load double, ptr %32, align 8, !tbaa !26
  %34 = getelementptr inbounds { double, double }, ptr %32, i64 0, i32 1
  %35 = load double, ptr %34, align 8, !tbaa !26
  %36 = fmul double %35, %35
  %37 = tail call double @llvm.fmuladd.f64(double %33, double %33, double %36)
  %38 = fadd double %30, %37
  %39 = add nuw nsw i64 %21, 2
  %40 = add i64 %23, 2
  %41 = icmp eq i64 %40, %19
  br i1 %41, label %84, label %20

42:                                               ; preds = %8, %75
  %43 = phi i32 [ %5, %8 ], [ %76, %75 ]
  %44 = phi i64 [ 0, %8 ], [ %81, %75 ]
  %45 = phi double [ 0.000000e+00, %8 ], [ %80, %75 ]
  %46 = phi double [ 0.000000e+00, %8 ], [ %79, %75 ]
  %47 = load ptr, ptr %9, align 8, !tbaa !333
  %48 = getelementptr inbounds %"class.std::complex", ptr %47, i64 %44
  %49 = load ptr, ptr %10, align 8, !tbaa !333
  %50 = getelementptr inbounds %"class.std::complex", ptr %49, i64 %44
  %51 = load <2 x double>, ptr %50, align 8, !tbaa !26
  %52 = extractelement <2 x double> %51, i64 1
  %53 = fneg double %52
  %54 = load <2 x double>, ptr %48, align 8
  %55 = shufflevector <2 x double> %54, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %56 = fmul <2 x double> %51, %54
  %57 = shufflevector <2 x double> %56, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %58 = fadd <2 x double> %56, %57
  %59 = extractelement <2 x double> %58, i64 0
  %60 = fmul <2 x double> %51, %55
  %61 = shufflevector <2 x double> %60, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %62 = fsub <2 x double> %60, %61
  %63 = extractelement <2 x double> %62, i64 0
  %64 = fcmp uno double %59, 0.000000e+00
  br i1 %64, label %65, label %75, !prof !340

65:                                               ; preds = %42
  %66 = fcmp uno double %63, 0.000000e+00
  br i1 %66, label %67, label %75, !prof !340

67:                                               ; preds = %65
  %68 = extractelement <2 x double> %51, i64 0
  %69 = extractelement <2 x double> %54, i64 0
  %70 = extractelement <2 x double> %54, i64 1
  %71 = tail call noundef { double, double } @__muldc3(double noundef %69, double noundef %70, double noundef %68, double noundef %53) #24
  %72 = extractvalue { double, double } %71, 0
  %73 = extractvalue { double, double } %71, 1
  %74 = load i32, ptr %4, align 8, !tbaa !330
  br label %75

75:                                               ; preds = %42, %65, %67
  %76 = phi i32 [ %43, %42 ], [ %43, %65 ], [ %74, %67 ]
  %77 = phi double [ %59, %42 ], [ %59, %65 ], [ %72, %67 ]
  %78 = phi double [ %63, %42 ], [ %63, %65 ], [ %73, %67 ]
  %79 = fadd double %46, %77
  %80 = fadd double %45, %78
  %81 = add nuw nsw i64 %44, 1
  %82 = zext i32 %76 to i64
  %83 = icmp ult i64 %81, %82
  br i1 %83, label %42, label %97

84:                                               ; preds = %20, %12
  %85 = phi double [ undef, %12 ], [ %38, %20 ]
  %86 = phi i64 [ 0, %12 ], [ %39, %20 ]
  %87 = phi double [ 0.000000e+00, %12 ], [ %38, %20 ]
  %88 = icmp eq i64 %16, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %86
  %91 = load double, ptr %90, align 8, !tbaa !26
  %92 = getelementptr inbounds { double, double }, ptr %90, i64 0, i32 1
  %93 = load double, ptr %92, align 8, !tbaa !26
  %94 = fmul double %93, %93
  %95 = tail call double @llvm.fmuladd.f64(double %91, double %91, double %94)
  %96 = fadd double %87, %95
  br label %97

97:                                               ; preds = %75, %89, %84, %7, %11
  %98 = phi double [ 0.000000e+00, %11 ], [ 0.000000e+00, %7 ], [ %85, %84 ], [ %96, %89 ], [ %79, %75 ]
  %99 = phi double [ 0.000000e+00, %11 ], [ 0.000000e+00, %7 ], [ 0.000000e+00, %84 ], [ 0.000000e+00, %89 ], [ %80, %75 ]
  %100 = insertvalue { double, double } poison, double %98, 0
  %101 = insertvalue { double, double } %100, double %99, 1
  ret { double, double } %101
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE6reinitIS2_EEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !330
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE3equIS2_EEvS2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !330
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.dealii::Vector.24", ptr %3, i64 0, i32 3
  %10 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %12

11:                                               ; preds = %32, %4
  ret void

12:                                               ; preds = %8, %32
  %13 = phi i64 [ 0, %8 ], [ %38, %32 ]
  %14 = load ptr, ptr %9, align 8, !tbaa !333
  %15 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %13
  %16 = load double, ptr %15, align 8, !tbaa.struct !335
  %17 = getelementptr inbounds i8, ptr %15, i64 8
  %18 = load double, ptr %17, align 8, !tbaa.struct !336
  %19 = fmul double %16, %1
  %20 = fmul double %18, %2
  %21 = fmul double %18, %1
  %22 = fmul double %16, %2
  %23 = fsub double %19, %20
  %24 = fadd double %22, %21
  %25 = fcmp uno double %23, 0.000000e+00
  br i1 %25, label %26, label %32, !prof !340

26:                                               ; preds = %12
  %27 = fcmp uno double %24, 0.000000e+00
  br i1 %27, label %28, label %32, !prof !340

28:                                               ; preds = %26
  %29 = tail call noundef { double, double } @__muldc3(double noundef %1, double noundef %2, double noundef %16, double noundef %18) #24
  %30 = extractvalue { double, double } %29, 0
  %31 = extractvalue { double, double } %29, 1
  br label %32

32:                                               ; preds = %12, %26, %28
  %33 = phi double [ %23, %12 ], [ %23, %26 ], [ %30, %28 ]
  %34 = phi double [ %24, %12 ], [ %24, %26 ], [ %31, %28 ]
  %35 = load ptr, ptr %10, align 8, !tbaa !333
  %36 = getelementptr inbounds %"class.std::complex", ptr %35, i64 %13
  store double %33, ptr %36, align 8, !tbaa.struct !335
  %37 = getelementptr inbounds i8, ptr %36, i64 8
  store double %34, ptr %37, align 8, !tbaa.struct !336
  %38 = add nuw nsw i64 %13, 1
  %39 = load i32, ptr %5, align 8, !tbaa !330
  %40 = zext i32 %39 to i64
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %12, label %11
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE5scaleIS2_EEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %43, %2
  ret void

10:                                               ; preds = %6, %43
  %11 = phi i64 [ 0, %6 ], [ %45, %43 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !333
  %13 = getelementptr inbounds %"class.std::complex", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !333
  %15 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %11
  %16 = load double, ptr %15, align 8
  %17 = getelementptr inbounds { double, double }, ptr %15, i64 0, i32 1
  %18 = load double, ptr %17, align 8
  %19 = load <2 x double>, ptr %13, align 8
  %20 = insertelement <2 x double> poison, double %16, i64 0
  %21 = shufflevector <2 x double> %20, <2 x double> poison, <2 x i32> zeroinitializer
  %22 = fmul <2 x double> %19, %21
  %23 = insertelement <2 x double> poison, double %18, i64 0
  %24 = shufflevector <2 x double> %23, <2 x double> poison, <2 x i32> zeroinitializer
  %25 = fmul <2 x double> %19, %24
  %26 = shufflevector <2 x double> %25, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %27 = fsub <2 x double> %22, %26
  %28 = fadd <2 x double> %22, %26
  %29 = shufflevector <2 x double> %27, <2 x double> %28, <2 x i32> <i32 0, i32 3>
  %30 = extractelement <2 x double> %27, i64 0
  %31 = fcmp uno double %30, 0.000000e+00
  br i1 %31, label %32, label %43, !prof !340

32:                                               ; preds = %10
  %33 = extractelement <2 x double> %28, i64 1
  %34 = fcmp uno double %33, 0.000000e+00
  br i1 %34, label %35, label %43, !prof !340

35:                                               ; preds = %32
  %36 = extractelement <2 x double> %19, i64 0
  %37 = extractelement <2 x double> %19, i64 1
  %38 = tail call noundef { double, double } @__muldc3(double noundef %16, double noundef %18, double noundef %36, double noundef %37) #24
  %39 = extractvalue { double, double } %38, 0
  %40 = extractvalue { double, double } %38, 1
  %41 = insertelement <2 x double> poison, double %39, i64 0
  %42 = insertelement <2 x double> %41, double %40, i64 1
  br label %43

43:                                               ; preds = %10, %32, %35
  %44 = phi <2 x double> [ %29, %10 ], [ %29, %32 ], [ %42, %35 ]
  store <2 x double> %44, ptr %15, align 8
  %45 = add nuw nsw i64 %11, 1
  %46 = load i32, ptr %3, align 8, !tbaa !330
  %47 = zext i32 %46 to i64
  %48 = icmp ult i64 %45, %47
  br i1 %48, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIdEEeqIS1_IfEEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %35, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !333
  %9 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !344
  %11 = zext i32 %4 to i64
  %12 = load <2 x float>, ptr %10, align 4
  %13 = fpext <2 x float> %12 to <2 x double>
  %14 = load <2 x double>, ptr %8, align 8
  %15 = fcmp une <2 x double> %14, %13
  %16 = extractelement <2 x i1> %15, i64 0
  %17 = extractelement <2 x i1> %15, i64 1
  %18 = select i1 %16, i1 true, i1 %17
  br i1 %18, label %35, label %19

19:                                               ; preds = %6, %23
  %20 = phi i64 [ %21, %23 ], [ 0, %6 ]
  %21 = add nuw nsw i64 %20, 1
  %22 = icmp eq i64 %21, %11
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::complex", ptr %8, i64 %21
  %25 = getelementptr inbounds %"class.std::complex.33", ptr %10, i64 %21
  %26 = load <2 x float>, ptr %25, align 4
  %27 = fpext <2 x float> %26 to <2 x double>
  %28 = load <2 x double>, ptr %24, align 8
  %29 = fcmp une <2 x double> %28, %27
  %30 = extractelement <2 x i1> %29, i64 0
  %31 = extractelement <2 x i1> %29, i64 1
  %32 = select i1 %30, i1 true, i1 %31
  br i1 %32, label %33, label %19

33:                                               ; preds = %19, %23
  %34 = icmp uge i64 %21, %11
  br label %35

35:                                               ; preds = %33, %6, %2
  %36 = phi i1 [ true, %2 ], [ false, %6 ], [ %34, %33 ]
  ret i1 %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local { double, double } @_ZNK6dealii6VectorISt7complexIdEEmlIS1_IfEEES2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %50, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  br label %9

9:                                                ; preds = %6, %41
  %10 = phi i32 [ %4, %6 ], [ %42, %41 ]
  %11 = phi i64 [ 0, %6 ], [ %47, %41 ]
  %12 = phi double [ 0.000000e+00, %6 ], [ %46, %41 ]
  %13 = phi double [ 0.000000e+00, %6 ], [ %45, %41 ]
  %14 = load ptr, ptr %7, align 8, !tbaa !333
  %15 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %11
  %16 = load ptr, ptr %8, align 8, !tbaa !344
  %17 = getelementptr inbounds %"class.std::complex.33", ptr %16, i64 %11
  %18 = load float, ptr %17, align 4, !tbaa !165
  %19 = getelementptr inbounds { float, float }, ptr %17, i64 0, i32 1
  %20 = load float, ptr %19, align 4, !tbaa !165
  %21 = fneg float %20
  %22 = fpext float %18 to double
  %23 = fpext float %21 to double
  %24 = load double, ptr %15, align 8, !tbaa.struct !335
  %25 = getelementptr inbounds i8, ptr %15, i64 8
  %26 = load double, ptr %25, align 8, !tbaa.struct !336
  %27 = fmul double %24, %22
  %28 = fmul double %26, %23
  %29 = fmul double %24, %23
  %30 = fmul double %26, %22
  %31 = fsub double %27, %28
  %32 = fadd double %29, %30
  %33 = fcmp uno double %31, 0.000000e+00
  br i1 %33, label %34, label %41, !prof !340

34:                                               ; preds = %9
  %35 = fcmp uno double %32, 0.000000e+00
  br i1 %35, label %36, label %41, !prof !340

36:                                               ; preds = %34
  %37 = tail call noundef { double, double } @__muldc3(double noundef %24, double noundef %26, double noundef %22, double noundef %23) #24
  %38 = extractvalue { double, double } %37, 0
  %39 = extractvalue { double, double } %37, 1
  %40 = load i32, ptr %3, align 8, !tbaa !330
  br label %41

41:                                               ; preds = %9, %34, %36
  %42 = phi i32 [ %10, %9 ], [ %10, %34 ], [ %40, %36 ]
  %43 = phi double [ %31, %9 ], [ %31, %34 ], [ %38, %36 ]
  %44 = phi double [ %32, %9 ], [ %32, %34 ], [ %39, %36 ]
  %45 = fadd double %13, %43
  %46 = fadd double %12, %44
  %47 = add nuw nsw i64 %11, 1
  %48 = zext i32 %42 to i64
  %49 = icmp ult i64 %47, %48
  br i1 %49, label %9, label %50

50:                                               ; preds = %41, %2
  %51 = phi double [ 0.000000e+00, %2 ], [ %45, %41 ]
  %52 = phi double [ 0.000000e+00, %2 ], [ %46, %41 ]
  %53 = insertvalue { double, double } poison, double %51, 0
  %54 = insertvalue { double, double } %53, double %52, 1
  ret { double, double } %54
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE6reinitIS1_IfEEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !341
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE3equIS1_IfEEEvS2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #17 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !330
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.dealii::Vector.32", ptr %3, i64 0, i32 3
  %10 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %11 = insertelement <2 x double> poison, double %1, i64 0
  %12 = insertelement <2 x double> %11, double %2, i64 1
  %13 = insertelement <2 x double> poison, double %2, i64 0
  %14 = insertelement <2 x double> %13, double %1, i64 1
  br label %16

15:                                               ; preds = %39, %4
  ret void

16:                                               ; preds = %8, %39
  %17 = phi i64 [ 0, %8 ], [ %45, %39 ]
  %18 = load ptr, ptr %9, align 8, !tbaa !344
  %19 = getelementptr inbounds %"class.std::complex.33", ptr %18, i64 %17
  %20 = load <2 x float>, ptr %19, align 4
  %21 = fpext <2 x float> %20 to <2 x double>
  %22 = fmul <2 x double> %12, %21
  %23 = fmul <2 x double> %14, %21
  %24 = shufflevector <2 x double> %22, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %25 = fsub <2 x double> %22, %24
  %26 = extractelement <2 x double> %25, i64 0
  %27 = shufflevector <2 x double> %23, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %28 = fadd <2 x double> %23, %27
  %29 = extractelement <2 x double> %28, i64 0
  %30 = fcmp uno double %26, 0.000000e+00
  br i1 %30, label %31, label %39, !prof !340

31:                                               ; preds = %16
  %32 = fcmp uno double %29, 0.000000e+00
  br i1 %32, label %33, label %39, !prof !340

33:                                               ; preds = %31
  %34 = extractelement <2 x double> %21, i64 0
  %35 = extractelement <2 x double> %21, i64 1
  %36 = tail call noundef { double, double } @__muldc3(double noundef %1, double noundef %2, double noundef %34, double noundef %35) #24
  %37 = extractvalue { double, double } %36, 0
  %38 = extractvalue { double, double } %36, 1
  br label %39

39:                                               ; preds = %16, %31, %33
  %40 = phi double [ %26, %16 ], [ %26, %31 ], [ %37, %33 ]
  %41 = phi double [ %29, %16 ], [ %29, %31 ], [ %38, %33 ]
  %42 = load ptr, ptr %10, align 8, !tbaa !333
  %43 = getelementptr inbounds %"class.std::complex", ptr %42, i64 %17
  store double %40, ptr %43, align 8, !tbaa.struct !335
  %44 = getelementptr inbounds i8, ptr %43, i64 8
  store double %41, ptr %44, align 8, !tbaa.struct !336
  %45 = add nuw nsw i64 %17, 1
  %46 = load i32, ptr %5, align 8, !tbaa !330
  %47 = zext i32 %46 to i64
  %48 = icmp ult i64 %45, %47
  br i1 %48, label %16, label %15
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE5scaleIS1_IfEEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %40, %2
  ret void

10:                                               ; preds = %6, %40
  %11 = phi i64 [ 0, %6 ], [ %43, %40 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !344
  %13 = getelementptr inbounds %"class.std::complex.33", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !333
  %15 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %11
  %16 = getelementptr inbounds { double, double }, ptr %15, i64 0, i32 1
  %17 = load <2 x float>, ptr %13, align 4
  %18 = fpext <2 x float> %17 to <2 x double>
  %19 = load <2 x double>, ptr %15, align 8
  %20 = fmul <2 x double> %19, %18
  %21 = shufflevector <2 x double> %18, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %22 = fmul <2 x double> %19, %21
  %23 = shufflevector <2 x double> %20, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %24 = fsub <2 x double> %20, %23
  %25 = extractelement <2 x double> %24, i64 0
  %26 = shufflevector <2 x double> %22, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %27 = fadd <2 x double> %22, %26
  %28 = extractelement <2 x double> %27, i64 0
  %29 = fcmp uno double %25, 0.000000e+00
  br i1 %29, label %30, label %40, !prof !340

30:                                               ; preds = %10
  %31 = fcmp uno double %28, 0.000000e+00
  br i1 %31, label %32, label %40, !prof !340

32:                                               ; preds = %30
  %33 = extractelement <2 x double> %19, i64 0
  %34 = extractelement <2 x double> %19, i64 1
  %35 = extractelement <2 x double> %18, i64 0
  %36 = extractelement <2 x double> %18, i64 1
  %37 = tail call noundef { double, double } @__muldc3(double noundef %33, double noundef %34, double noundef %35, double noundef %36) #24
  %38 = extractvalue { double, double } %37, 0
  %39 = extractvalue { double, double } %37, 1
  br label %40

40:                                               ; preds = %10, %30, %32
  %41 = phi double [ %25, %10 ], [ %25, %30 ], [ %38, %32 ]
  %42 = phi double [ %28, %10 ], [ %28, %30 ], [ %39, %32 ]
  store double %41, ptr %15, align 8
  store double %42, ptr %16, align 8
  %43 = add nuw nsw i64 %11, 1
  %44 = load i32, ptr %3, align 8, !tbaa !330
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIdEEeqIS1_IeEEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %43, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !333
  %9 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !351
  %11 = zext i32 %4 to i64
  %12 = load x86_fp80, ptr %10, align 16
  %13 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %10, i64 0, i32 1
  %14 = load x86_fp80, ptr %13, align 16
  %15 = fptrunc x86_fp80 %12 to double
  %16 = fptrunc x86_fp80 %14 to double
  %17 = load double, ptr %8, align 8, !tbaa !26
  %18 = fcmp une double %17, %15
  %19 = getelementptr inbounds { double, double }, ptr %8, i64 0, i32 1
  %20 = load double, ptr %19, align 8
  %21 = fcmp une double %20, %16
  %22 = select i1 %18, i1 true, i1 %21
  br i1 %22, label %43, label %23

23:                                               ; preds = %6, %27
  %24 = phi i64 [ %25, %27 ], [ 0, %6 ]
  %25 = add nuw nsw i64 %24, 1
  %26 = icmp eq i64 %25, %11
  br i1 %26, label %41, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::complex", ptr %8, i64 %25
  %29 = getelementptr inbounds %"class.std::complex.42", ptr %10, i64 %25
  %30 = load x86_fp80, ptr %29, align 16
  %31 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %29, i64 0, i32 1
  %32 = load x86_fp80, ptr %31, align 16
  %33 = fptrunc x86_fp80 %30 to double
  %34 = fptrunc x86_fp80 %32 to double
  %35 = load double, ptr %28, align 8, !tbaa !26
  %36 = fcmp une double %35, %33
  %37 = getelementptr inbounds { double, double }, ptr %28, i64 0, i32 1
  %38 = load double, ptr %37, align 8
  %39 = fcmp une double %38, %34
  %40 = select i1 %36, i1 true, i1 %39
  br i1 %40, label %41, label %23

41:                                               ; preds = %23, %27
  %42 = icmp uge i64 %25, %11
  br label %43

43:                                               ; preds = %41, %6, %2
  %44 = phi i1 [ true, %2 ], [ false, %6 ], [ %42, %41 ]
  ret i1 %44
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local { double, double } @_ZNK6dealii6VectorISt7complexIdEEmlIS1_IeEEES2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %50, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  br label %9

9:                                                ; preds = %6, %41
  %10 = phi i32 [ %4, %6 ], [ %42, %41 ]
  %11 = phi i64 [ 0, %6 ], [ %47, %41 ]
  %12 = phi double [ 0.000000e+00, %6 ], [ %46, %41 ]
  %13 = phi double [ 0.000000e+00, %6 ], [ %45, %41 ]
  %14 = load ptr, ptr %7, align 8, !tbaa !333
  %15 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %11
  %16 = load ptr, ptr %8, align 8, !tbaa !351
  %17 = getelementptr inbounds %"class.std::complex.42", ptr %16, i64 %11
  %18 = load x86_fp80, ptr %17, align 16, !tbaa !275, !noalias !428
  %19 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %17, i64 0, i32 1
  %20 = load x86_fp80, ptr %19, align 16, !tbaa !275, !noalias !428
  %21 = fptrunc x86_fp80 %18 to double
  %22 = fptrunc x86_fp80 %20 to double
  %23 = fneg double %22
  %24 = load double, ptr %15, align 8, !tbaa.struct !335
  %25 = getelementptr inbounds i8, ptr %15, i64 8
  %26 = load double, ptr %25, align 8, !tbaa.struct !336
  %27 = fmul double %24, %21
  %28 = fmul double %26, %21
  %29 = fmul double %26, %22
  %30 = fadd double %27, %29
  %31 = fmul double %24, %22
  %32 = fsub double %28, %31
  %33 = fcmp uno double %30, 0.000000e+00
  br i1 %33, label %34, label %41, !prof !340

34:                                               ; preds = %9
  %35 = fcmp uno double %32, 0.000000e+00
  br i1 %35, label %36, label %41, !prof !340

36:                                               ; preds = %34
  %37 = tail call noundef { double, double } @__muldc3(double noundef %24, double noundef %26, double noundef %21, double noundef %23) #24
  %38 = extractvalue { double, double } %37, 0
  %39 = extractvalue { double, double } %37, 1
  %40 = load i32, ptr %3, align 8, !tbaa !330
  br label %41

41:                                               ; preds = %9, %34, %36
  %42 = phi i32 [ %10, %9 ], [ %10, %34 ], [ %40, %36 ]
  %43 = phi double [ %30, %9 ], [ %30, %34 ], [ %38, %36 ]
  %44 = phi double [ %32, %9 ], [ %32, %34 ], [ %39, %36 ]
  %45 = fadd double %13, %43
  %46 = fadd double %12, %44
  %47 = add nuw nsw i64 %11, 1
  %48 = zext i32 %42 to i64
  %49 = icmp ult i64 %47, %48
  br i1 %49, label %9, label %50

50:                                               ; preds = %41, %2
  %51 = phi double [ 0.000000e+00, %2 ], [ %45, %41 ]
  %52 = phi double [ 0.000000e+00, %2 ], [ %46, %41 ]
  %53 = insertvalue { double, double } poison, double %51, 0
  %54 = insertvalue { double, double } %53, double %52, 1
  ret { double, double } %54
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE6reinitIS1_IeEEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE3equIS1_IeEEEvS2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, double %1, double %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !330
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.dealii::Vector.41", ptr %3, i64 0, i32 3
  %10 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %12

11:                                               ; preds = %34, %4
  ret void

12:                                               ; preds = %8, %34
  %13 = phi i64 [ 0, %8 ], [ %40, %34 ]
  %14 = load ptr, ptr %9, align 8, !tbaa !351
  %15 = getelementptr inbounds %"class.std::complex.42", ptr %14, i64 %13
  %16 = load x86_fp80, ptr %15, align 16
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %15, i64 0, i32 1
  %18 = load x86_fp80, ptr %17, align 16
  %19 = fptrunc x86_fp80 %16 to double
  %20 = fptrunc x86_fp80 %18 to double
  %21 = fmul double %19, %1
  %22 = fmul double %20, %2
  %23 = fmul double %20, %1
  %24 = fmul double %19, %2
  %25 = fsub double %21, %22
  %26 = fadd double %24, %23
  %27 = fcmp uno double %25, 0.000000e+00
  br i1 %27, label %28, label %34, !prof !340

28:                                               ; preds = %12
  %29 = fcmp uno double %26, 0.000000e+00
  br i1 %29, label %30, label %34, !prof !340

30:                                               ; preds = %28
  %31 = tail call noundef { double, double } @__muldc3(double noundef %1, double noundef %2, double noundef %19, double noundef %20) #24
  %32 = extractvalue { double, double } %31, 0
  %33 = extractvalue { double, double } %31, 1
  br label %34

34:                                               ; preds = %12, %28, %30
  %35 = phi double [ %25, %12 ], [ %25, %28 ], [ %32, %30 ]
  %36 = phi double [ %26, %12 ], [ %26, %28 ], [ %33, %30 ]
  %37 = load ptr, ptr %10, align 8, !tbaa !333
  %38 = getelementptr inbounds %"class.std::complex", ptr %37, i64 %13
  store double %35, ptr %38, align 8, !tbaa.struct !335
  %39 = getelementptr inbounds i8, ptr %38, i64 8
  store double %36, ptr %39, align 8, !tbaa.struct !336
  %40 = add nuw nsw i64 %13, 1
  %41 = load i32, ptr %5, align 8, !tbaa !330
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %12, label %11
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEE5scaleIS1_IeEEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %37, %2
  ret void

10:                                               ; preds = %6, %37
  %11 = phi i64 [ 0, %6 ], [ %40, %37 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !351
  %13 = getelementptr inbounds %"class.std::complex.42", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !333
  %15 = getelementptr inbounds %"class.std::complex", ptr %14, i64 %11
  %16 = load x86_fp80, ptr %13, align 16
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %13, i64 0, i32 1
  %18 = load x86_fp80, ptr %17, align 16
  %19 = fptrunc x86_fp80 %16 to double
  %20 = fptrunc x86_fp80 %18 to double
  %21 = load double, ptr %15, align 8
  %22 = getelementptr inbounds { double, double }, ptr %15, i64 0, i32 1
  %23 = load double, ptr %22, align 8
  %24 = fmul double %21, %19
  %25 = fmul double %23, %20
  %26 = fmul double %21, %20
  %27 = fmul double %23, %19
  %28 = fsub double %24, %25
  %29 = fadd double %26, %27
  %30 = fcmp uno double %28, 0.000000e+00
  br i1 %30, label %31, label %37, !prof !340

31:                                               ; preds = %10
  %32 = fcmp uno double %29, 0.000000e+00
  br i1 %32, label %33, label %37, !prof !340

33:                                               ; preds = %31
  %34 = tail call noundef { double, double } @__muldc3(double noundef %21, double noundef %23, double noundef %19, double noundef %20) #24
  %35 = extractvalue { double, double } %34, 0
  %36 = extractvalue { double, double } %34, 1
  br label %37

37:                                               ; preds = %10, %31, %33
  %38 = phi double [ %28, %10 ], [ %28, %31 ], [ %35, %33 ]
  %39 = phi double [ %29, %10 ], [ %29, %31 ], [ %36, %33 ]
  store double %38, ptr %15, align 8
  store double %39, ptr %22, align 8
  %40 = add nuw nsw i64 %11, 1
  %41 = load i32, ptr %3, align 8, !tbaa !330
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIfEEeqIS1_IdEEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %35, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !344
  %9 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !333
  %11 = zext i32 %4 to i64
  %12 = load <2 x double>, ptr %10, align 8
  %13 = fptrunc <2 x double> %12 to <2 x float>
  %14 = load <2 x float>, ptr %8, align 4
  %15 = fcmp une <2 x float> %14, %13
  %16 = extractelement <2 x i1> %15, i64 0
  %17 = extractelement <2 x i1> %15, i64 1
  %18 = select i1 %16, i1 true, i1 %17
  br i1 %18, label %35, label %19

19:                                               ; preds = %6, %23
  %20 = phi i64 [ %21, %23 ], [ 0, %6 ]
  %21 = add nuw nsw i64 %20, 1
  %22 = icmp eq i64 %21, %11
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::complex.33", ptr %8, i64 %21
  %25 = getelementptr inbounds %"class.std::complex", ptr %10, i64 %21
  %26 = load <2 x double>, ptr %25, align 8
  %27 = fptrunc <2 x double> %26 to <2 x float>
  %28 = load <2 x float>, ptr %24, align 4
  %29 = fcmp une <2 x float> %28, %27
  %30 = extractelement <2 x i1> %29, i64 0
  %31 = extractelement <2 x i1> %29, i64 1
  %32 = select i1 %30, i1 true, i1 %31
  br i1 %32, label %33, label %19

33:                                               ; preds = %19, %23
  %34 = icmp uge i64 %21, %11
  br label %35

35:                                               ; preds = %33, %6, %2
  %36 = phi i1 [ true, %2 ], [ false, %6 ], [ %34, %33 ]
  ret i1 %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local <2 x float> @_ZNK6dealii6VectorISt7complexIfEEmlIS1_IdEEES2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %46, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  br label %9

9:                                                ; preds = %6, %39
  %10 = phi i32 [ %4, %6 ], [ %40, %39 ]
  %11 = phi i64 [ 0, %6 ], [ %43, %39 ]
  %12 = phi <2 x float> [ zeroinitializer, %6 ], [ %42, %39 ]
  %13 = load ptr, ptr %7, align 8, !tbaa !344
  %14 = getelementptr inbounds %"class.std::complex.33", ptr %13, i64 %11
  %15 = load ptr, ptr %8, align 8, !tbaa !333
  %16 = getelementptr inbounds %"class.std::complex", ptr %15, i64 %11
  %17 = load <2 x float>, ptr %14, align 4, !tbaa !153
  %18 = load <2 x double>, ptr %16, align 8, !tbaa !26
  %19 = fptrunc <2 x double> %18 to <2 x float>
  %20 = extractelement <2 x float> %19, i64 1
  %21 = fneg float %20
  %22 = extractelement <2 x float> %17, i64 1
  %23 = extractelement <2 x float> %19, i64 0
  %24 = fmul float %22, %23
  %25 = fmul <2 x float> %17, %19
  %26 = shufflevector <2 x float> %25, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %27 = fadd <2 x float> %25, %26
  %28 = extractelement <2 x float> %27, i64 0
  %29 = extractelement <2 x float> %17, i64 0
  %30 = fmul float %29, %20
  %31 = fsub float %24, %30
  %32 = fcmp uno float %28, 0.000000e+00
  %33 = insertelement <2 x float> %27, float %31, i64 1
  br i1 %32, label %34, label %39, !prof !340

34:                                               ; preds = %9
  %35 = fcmp uno float %31, 0.000000e+00
  br i1 %35, label %36, label %39, !prof !340

36:                                               ; preds = %34
  %37 = tail call noundef <2 x float> @__mulsc3(float noundef %29, float noundef %22, float noundef %23, float noundef %21) #24
  %38 = load i32, ptr %3, align 8, !tbaa !341
  br label %39

39:                                               ; preds = %9, %34, %36
  %40 = phi i32 [ %10, %9 ], [ %10, %34 ], [ %38, %36 ]
  %41 = phi <2 x float> [ %33, %9 ], [ %33, %34 ], [ %37, %36 ]
  %42 = fadd <2 x float> %12, %41
  %43 = add nuw nsw i64 %11, 1
  %44 = zext i32 %40 to i64
  %45 = icmp ult i64 %43, %44
  br i1 %45, label %9, label %46

46:                                               ; preds = %39, %2
  %47 = phi <2 x float> [ zeroinitializer, %2 ], [ %42, %39 ]
  ret <2 x float> %47
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE6reinitIS1_IdEEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !330
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE3equIS1_IdEEEvS2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #17 comdat align 2 {
  %4 = extractelement <2 x float> %1, i64 1
  %5 = extractelement <2 x float> %1, i64 0
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !341
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.24", ptr %2, i64 0, i32 3
  %11 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %13

12:                                               ; preds = %35, %3
  ret void

13:                                               ; preds = %9, %35
  %14 = phi i64 [ 0, %9 ], [ %42, %35 ]
  %15 = load ptr, ptr %10, align 8, !tbaa !333
  %16 = getelementptr inbounds %"class.std::complex", ptr %15, i64 %14
  %17 = load <2 x double>, ptr %16, align 8
  %18 = fptrunc <2 x double> %17 to <2 x float>
  %19 = fmul <2 x float> %18, %1
  %20 = extractelement <2 x float> %18, i64 1
  %21 = fmul float %5, %20
  %22 = extractelement <2 x float> %18, i64 0
  %23 = fmul float %4, %22
  %24 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %25 = fsub <2 x float> %19, %24
  %26 = extractelement <2 x float> %25, i64 0
  %27 = fadd float %23, %21
  %28 = fcmp uno float %26, 0.000000e+00
  br i1 %28, label %29, label %35, !prof !340

29:                                               ; preds = %13
  %30 = fcmp uno float %27, 0.000000e+00
  br i1 %30, label %31, label %35, !prof !340

31:                                               ; preds = %29
  %32 = tail call noundef <2 x float> @__mulsc3(float noundef %5, float noundef %4, float noundef %22, float noundef %20) #24
  %33 = extractelement <2 x float> %32, i64 0
  %34 = extractelement <2 x float> %32, i64 1
  br label %35

35:                                               ; preds = %13, %29, %31
  %36 = phi float [ %26, %13 ], [ %26, %29 ], [ %33, %31 ]
  %37 = phi float [ %27, %13 ], [ %27, %29 ], [ %34, %31 ]
  %38 = insertelement <2 x float> poison, float %36, i64 0
  %39 = insertelement <2 x float> %38, float %37, i64 1
  %40 = load ptr, ptr %11, align 8, !tbaa !344
  %41 = getelementptr inbounds %"class.std::complex.33", ptr %40, i64 %14
  store <2 x float> %39, ptr %41, align 4, !tbaa.struct !336
  %42 = add nuw nsw i64 %14, 1
  %43 = load i32, ptr %6, align 8, !tbaa !341
  %44 = zext i32 %43 to i64
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %13, label %12
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE5scaleIS1_IdEEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %40, %2
  ret void

10:                                               ; preds = %6, %40
  %11 = phi i64 [ 0, %6 ], [ %43, %40 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !333
  %13 = getelementptr inbounds %"class.std::complex", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !344
  %15 = getelementptr inbounds %"class.std::complex.33", ptr %14, i64 %11
  %16 = getelementptr inbounds { float, float }, ptr %15, i64 0, i32 1
  %17 = load <2 x double>, ptr %13, align 8
  %18 = fptrunc <2 x double> %17 to <2 x float>
  %19 = load <2 x float>, ptr %15, align 4
  %20 = fmul <2 x float> %19, %18
  %21 = shufflevector <2 x float> %18, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %22 = fmul <2 x float> %19, %21
  %23 = shufflevector <2 x float> %20, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %24 = fsub <2 x float> %20, %23
  %25 = extractelement <2 x float> %24, i64 0
  %26 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %27 = fadd <2 x float> %22, %26
  %28 = extractelement <2 x float> %27, i64 0
  %29 = fcmp uno float %25, 0.000000e+00
  br i1 %29, label %30, label %40, !prof !340

30:                                               ; preds = %10
  %31 = fcmp uno float %28, 0.000000e+00
  br i1 %31, label %32, label %40, !prof !340

32:                                               ; preds = %30
  %33 = extractelement <2 x float> %19, i64 0
  %34 = extractelement <2 x float> %19, i64 1
  %35 = extractelement <2 x float> %18, i64 0
  %36 = extractelement <2 x float> %18, i64 1
  %37 = tail call noundef <2 x float> @__mulsc3(float noundef %33, float noundef %34, float noundef %35, float noundef %36) #24
  %38 = extractelement <2 x float> %37, i64 0
  %39 = extractelement <2 x float> %37, i64 1
  br label %40

40:                                               ; preds = %10, %30, %32
  %41 = phi float [ %25, %10 ], [ %25, %30 ], [ %38, %32 ]
  %42 = phi float [ %28, %10 ], [ %28, %30 ], [ %39, %32 ]
  store float %41, ptr %15, align 4
  store float %42, ptr %16, align 4
  %43 = add nuw nsw i64 %11, 1
  %44 = load i32, ptr %3, align 8, !tbaa !341
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIfEEeqIS2_EEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !344
  %9 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !344
  %11 = zext i32 %4 to i64
  %12 = load <2 x float>, ptr %10, align 4
  %13 = load <2 x float>, ptr %8, align 4
  %14 = fcmp une <2 x float> %13, %12
  %15 = extractelement <2 x i1> %14, i64 0
  %16 = extractelement <2 x i1> %14, i64 1
  %17 = select i1 %15, i1 true, i1 %16
  br i1 %17, label %33, label %18

18:                                               ; preds = %6, %22
  %19 = phi i64 [ %20, %22 ], [ 0, %6 ]
  %20 = add nuw nsw i64 %19, 1
  %21 = icmp eq i64 %20, %11
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::complex.33", ptr %8, i64 %20
  %24 = getelementptr inbounds %"class.std::complex.33", ptr %10, i64 %20
  %25 = load <2 x float>, ptr %24, align 4
  %26 = load <2 x float>, ptr %23, align 4
  %27 = fcmp une <2 x float> %26, %25
  %28 = extractelement <2 x i1> %27, i64 0
  %29 = extractelement <2 x i1> %27, i64 1
  %30 = select i1 %28, i1 true, i1 %29
  br i1 %30, label %31, label %18

31:                                               ; preds = %18, %22
  %32 = icmp uge i64 %20, %11
  br label %33

33:                                               ; preds = %31, %6, %2
  %34 = phi i1 [ true, %2 ], [ false, %6 ], [ %32, %31 ]
  ret i1 %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local <2 x float> @_ZNK6dealii6VectorISt7complexIfEEmlIS2_EES2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = icmp eq ptr %0, %1
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !341
  %6 = icmp eq i32 %5, 0
  br i1 %3, label %11, label %7

7:                                                ; preds = %2
  br i1 %6, label %98, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  br label %58

11:                                               ; preds = %2
  br i1 %6, label %55, label %12

12:                                               ; preds = %11
  %13 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !344
  %15 = zext i32 %5 to i64
  %16 = and i64 %15, 1
  %17 = icmp eq i32 %5, 1
  br i1 %17, label %42, label %18

18:                                               ; preds = %12
  %19 = and i64 %15, 4294967294
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i64 [ 0, %18 ], [ %39, %20 ]
  %22 = phi float [ 0.000000e+00, %18 ], [ %38, %20 ]
  %23 = phi i64 [ 0, %18 ], [ %40, %20 ]
  %24 = getelementptr inbounds %"class.std::complex.33", ptr %14, i64 %21
  %25 = load float, ptr %24, align 4, !tbaa !165
  %26 = getelementptr inbounds { float, float }, ptr %24, i64 0, i32 1
  %27 = load float, ptr %26, align 4, !tbaa !165
  %28 = fmul float %27, %27
  %29 = tail call float @llvm.fmuladd.f32(float %25, float %25, float %28)
  %30 = fadd float %22, %29
  %31 = or i64 %21, 1
  %32 = getelementptr inbounds %"class.std::complex.33", ptr %14, i64 %31
  %33 = load float, ptr %32, align 4, !tbaa !165
  %34 = getelementptr inbounds { float, float }, ptr %32, i64 0, i32 1
  %35 = load float, ptr %34, align 4, !tbaa !165
  %36 = fmul float %35, %35
  %37 = tail call float @llvm.fmuladd.f32(float %33, float %33, float %36)
  %38 = fadd float %30, %37
  %39 = add nuw nsw i64 %21, 2
  %40 = add i64 %23, 2
  %41 = icmp eq i64 %40, %19
  br i1 %41, label %42, label %20

42:                                               ; preds = %20, %12
  %43 = phi float [ undef, %12 ], [ %38, %20 ]
  %44 = phi i64 [ 0, %12 ], [ %39, %20 ]
  %45 = phi float [ 0.000000e+00, %12 ], [ %38, %20 ]
  %46 = icmp eq i64 %16, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::complex.33", ptr %14, i64 %44
  %49 = load float, ptr %48, align 4, !tbaa !165
  %50 = getelementptr inbounds { float, float }, ptr %48, i64 0, i32 1
  %51 = load float, ptr %50, align 4, !tbaa !165
  %52 = fmul float %51, %51
  %53 = tail call float @llvm.fmuladd.f32(float %49, float %49, float %52)
  %54 = fadd float %45, %53
  br label %55

55:                                               ; preds = %47, %42, %11
  %56 = phi float [ 0.000000e+00, %11 ], [ %43, %42 ], [ %54, %47 ]
  %57 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %56, i64 0
  br label %98

58:                                               ; preds = %8, %91
  %59 = phi i32 [ %5, %8 ], [ %92, %91 ]
  %60 = phi i64 [ 0, %8 ], [ %95, %91 ]
  %61 = phi <2 x float> [ zeroinitializer, %8 ], [ %94, %91 ]
  %62 = load ptr, ptr %9, align 8, !tbaa !344
  %63 = getelementptr inbounds %"class.std::complex.33", ptr %62, i64 %60
  %64 = load ptr, ptr %10, align 8, !tbaa !344
  %65 = getelementptr inbounds %"class.std::complex.33", ptr %64, i64 %60
  %66 = load float, ptr %65, align 4, !tbaa !165
  %67 = getelementptr inbounds { float, float }, ptr %65, i64 0, i32 1
  %68 = load float, ptr %67, align 4, !tbaa !165
  %69 = fneg float %68
  %70 = load <2 x float>, ptr %63, align 4, !tbaa !153
  %71 = insertelement <2 x float> poison, float %66, i64 0
  %72 = shufflevector <2 x float> %71, <2 x float> poison, <2 x i32> zeroinitializer
  %73 = fmul <2 x float> %72, %70
  %74 = insertelement <2 x float> poison, float %68, i64 0
  %75 = shufflevector <2 x float> %74, <2 x float> poison, <2 x i32> zeroinitializer
  %76 = fmul <2 x float> %75, %70
  %77 = shufflevector <2 x float> %76, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %78 = fadd <2 x float> %73, %77
  %79 = fsub <2 x float> %73, %77
  %80 = shufflevector <2 x float> %78, <2 x float> %79, <2 x i32> <i32 0, i32 3>
  %81 = extractelement <2 x float> %78, i64 0
  %82 = fcmp uno float %81, 0.000000e+00
  br i1 %82, label %83, label %91, !prof !340

83:                                               ; preds = %58
  %84 = extractelement <2 x float> %79, i64 1
  %85 = fcmp uno float %84, 0.000000e+00
  br i1 %85, label %86, label %91, !prof !340

86:                                               ; preds = %83
  %87 = extractelement <2 x float> %70, i64 0
  %88 = extractelement <2 x float> %70, i64 1
  %89 = tail call noundef <2 x float> @__mulsc3(float noundef %87, float noundef %88, float noundef %66, float noundef %69) #24
  %90 = load i32, ptr %4, align 8, !tbaa !341
  br label %91

91:                                               ; preds = %58, %83, %86
  %92 = phi i32 [ %59, %58 ], [ %59, %83 ], [ %90, %86 ]
  %93 = phi <2 x float> [ %80, %58 ], [ %80, %83 ], [ %89, %86 ]
  %94 = fadd <2 x float> %61, %93
  %95 = add nuw nsw i64 %60, 1
  %96 = zext i32 %92 to i64
  %97 = icmp ult i64 %95, %96
  br i1 %97, label %58, label %98

98:                                               ; preds = %91, %7, %55
  %99 = phi <2 x float> [ %57, %55 ], [ zeroinitializer, %7 ], [ %94, %91 ]
  ret <2 x float> %99
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE6reinitIS2_EEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !341
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE3equIS2_EEvS2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #17 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !341
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %2, i64 0, i32 3
  %9 = extractelement <2 x float> %1, i64 0
  %10 = extractelement <2 x float> %1, i64 1
  %11 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %13

12:                                               ; preds = %33, %3
  ret void

13:                                               ; preds = %7, %33
  %14 = phi i64 [ 0, %7 ], [ %40, %33 ]
  %15 = load ptr, ptr %8, align 8, !tbaa !344
  %16 = getelementptr inbounds %"class.std::complex.33", ptr %15, i64 %14
  %17 = load float, ptr %16, align 4
  %18 = getelementptr inbounds i8, ptr %16, i64 4
  %19 = load float, ptr %18, align 4
  %20 = fmul float %9, %17
  %21 = fmul float %10, %19
  %22 = fmul float %9, %19
  %23 = fmul float %10, %17
  %24 = fsub float %20, %21
  %25 = fadd float %23, %22
  %26 = fcmp uno float %24, 0.000000e+00
  br i1 %26, label %27, label %33, !prof !340

27:                                               ; preds = %13
  %28 = fcmp uno float %25, 0.000000e+00
  br i1 %28, label %29, label %33, !prof !340

29:                                               ; preds = %27
  %30 = tail call noundef <2 x float> @__mulsc3(float noundef %9, float noundef %10, float noundef %17, float noundef %19) #24
  %31 = extractelement <2 x float> %30, i64 0
  %32 = extractelement <2 x float> %30, i64 1
  br label %33

33:                                               ; preds = %13, %27, %29
  %34 = phi float [ %24, %13 ], [ %24, %27 ], [ %31, %29 ]
  %35 = phi float [ %25, %13 ], [ %25, %27 ], [ %32, %29 ]
  %36 = insertelement <2 x float> poison, float %34, i64 0
  %37 = insertelement <2 x float> %36, float %35, i64 1
  %38 = load ptr, ptr %11, align 8, !tbaa !344
  %39 = getelementptr inbounds %"class.std::complex.33", ptr %38, i64 %14
  store <2 x float> %37, ptr %39, align 4, !tbaa.struct !336
  %40 = add nuw nsw i64 %14, 1
  %41 = load i32, ptr %4, align 8, !tbaa !341
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %13, label %12
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE5scaleIS2_EEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %35, %2
  ret void

10:                                               ; preds = %6, %35
  %11 = phi i64 [ 0, %6 ], [ %38, %35 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !344
  %13 = getelementptr inbounds %"class.std::complex.33", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !344
  %15 = getelementptr inbounds %"class.std::complex.33", ptr %14, i64 %11
  %16 = load float, ptr %13, align 4
  %17 = getelementptr inbounds { float, float }, ptr %13, i64 0, i32 1
  %18 = load float, ptr %17, align 4
  %19 = load float, ptr %15, align 4
  %20 = getelementptr inbounds { float, float }, ptr %15, i64 0, i32 1
  %21 = load float, ptr %20, align 4
  %22 = fmul float %16, %19
  %23 = fmul float %18, %21
  %24 = fmul float %18, %19
  %25 = fmul float %16, %21
  %26 = fsub float %22, %23
  %27 = fadd float %24, %25
  %28 = fcmp uno float %26, 0.000000e+00
  br i1 %28, label %29, label %35, !prof !340

29:                                               ; preds = %10
  %30 = fcmp uno float %27, 0.000000e+00
  br i1 %30, label %31, label %35, !prof !340

31:                                               ; preds = %29
  %32 = tail call noundef <2 x float> @__mulsc3(float noundef %19, float noundef %21, float noundef %16, float noundef %18) #24
  %33 = extractelement <2 x float> %32, i64 0
  %34 = extractelement <2 x float> %32, i64 1
  br label %35

35:                                               ; preds = %10, %29, %31
  %36 = phi float [ %26, %10 ], [ %26, %29 ], [ %33, %31 ]
  %37 = phi float [ %27, %10 ], [ %27, %29 ], [ %34, %31 ]
  store float %36, ptr %15, align 4
  store float %37, ptr %20, align 4
  %38 = add nuw nsw i64 %11, 1
  %39 = load i32, ptr %3, align 8, !tbaa !341
  %40 = zext i32 %39 to i64
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIfEEeqIS1_IeEEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %43, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !344
  %9 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !351
  %11 = zext i32 %4 to i64
  %12 = load x86_fp80, ptr %10, align 16
  %13 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %10, i64 0, i32 1
  %14 = load x86_fp80, ptr %13, align 16
  %15 = fptrunc x86_fp80 %12 to float
  %16 = fptrunc x86_fp80 %14 to float
  %17 = load float, ptr %8, align 4, !tbaa !165
  %18 = fcmp une float %17, %15
  %19 = getelementptr inbounds { float, float }, ptr %8, i64 0, i32 1
  %20 = load float, ptr %19, align 4
  %21 = fcmp une float %20, %16
  %22 = select i1 %18, i1 true, i1 %21
  br i1 %22, label %43, label %23

23:                                               ; preds = %6, %27
  %24 = phi i64 [ %25, %27 ], [ 0, %6 ]
  %25 = add nuw nsw i64 %24, 1
  %26 = icmp eq i64 %25, %11
  br i1 %26, label %41, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::complex.33", ptr %8, i64 %25
  %29 = getelementptr inbounds %"class.std::complex.42", ptr %10, i64 %25
  %30 = load x86_fp80, ptr %29, align 16
  %31 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %29, i64 0, i32 1
  %32 = load x86_fp80, ptr %31, align 16
  %33 = fptrunc x86_fp80 %30 to float
  %34 = fptrunc x86_fp80 %32 to float
  %35 = load float, ptr %28, align 4, !tbaa !165
  %36 = fcmp une float %35, %33
  %37 = getelementptr inbounds { float, float }, ptr %28, i64 0, i32 1
  %38 = load float, ptr %37, align 4
  %39 = fcmp une float %38, %34
  %40 = select i1 %36, i1 true, i1 %39
  br i1 %40, label %41, label %23

41:                                               ; preds = %23, %27
  %42 = icmp uge i64 %25, %11
  br label %43

43:                                               ; preds = %41, %6, %2
  %44 = phi i1 [ true, %2 ], [ false, %6 ], [ %42, %41 ]
  ret i1 %44
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local <2 x float> @_ZNK6dealii6VectorISt7complexIfEEmlIS1_IeEEES2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %51, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  br label %9

9:                                                ; preds = %6, %44
  %10 = phi i32 [ %4, %6 ], [ %45, %44 ]
  %11 = phi i64 [ 0, %6 ], [ %48, %44 ]
  %12 = phi <2 x float> [ zeroinitializer, %6 ], [ %47, %44 ]
  %13 = load ptr, ptr %7, align 8, !tbaa !344
  %14 = getelementptr inbounds %"class.std::complex.33", ptr %13, i64 %11
  %15 = load ptr, ptr %8, align 8, !tbaa !351
  %16 = getelementptr inbounds %"class.std::complex.42", ptr %15, i64 %11
  %17 = load x86_fp80, ptr %16, align 16, !tbaa !275, !noalias !433
  %18 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %16, i64 0, i32 1
  %19 = load x86_fp80, ptr %18, align 16, !tbaa !275, !noalias !433
  %20 = fptrunc x86_fp80 %17 to float
  %21 = fptrunc x86_fp80 %19 to float
  %22 = fneg float %21
  %23 = load <2 x float>, ptr %14, align 4, !tbaa !153
  %24 = insertelement <2 x float> poison, float %20, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = fmul <2 x float> %23, %25
  %27 = insertelement <2 x float> poison, float %21, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = fmul <2 x float> %23, %28
  %30 = shufflevector <2 x float> %29, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %31 = fadd <2 x float> %26, %30
  %32 = fsub <2 x float> %26, %30
  %33 = shufflevector <2 x float> %31, <2 x float> %32, <2 x i32> <i32 0, i32 3>
  %34 = extractelement <2 x float> %31, i64 0
  %35 = fcmp uno float %34, 0.000000e+00
  br i1 %35, label %36, label %44, !prof !340

36:                                               ; preds = %9
  %37 = extractelement <2 x float> %32, i64 1
  %38 = fcmp uno float %37, 0.000000e+00
  br i1 %38, label %39, label %44, !prof !340

39:                                               ; preds = %36
  %40 = extractelement <2 x float> %23, i64 0
  %41 = extractelement <2 x float> %23, i64 1
  %42 = tail call noundef <2 x float> @__mulsc3(float noundef %40, float noundef %41, float noundef %20, float noundef %22) #24
  %43 = load i32, ptr %3, align 8, !tbaa !341
  br label %44

44:                                               ; preds = %9, %36, %39
  %45 = phi i32 [ %10, %9 ], [ %10, %36 ], [ %43, %39 ]
  %46 = phi <2 x float> [ %33, %9 ], [ %33, %36 ], [ %42, %39 ]
  %47 = fadd <2 x float> %12, %46
  %48 = add nuw nsw i64 %11, 1
  %49 = zext i32 %45 to i64
  %50 = icmp ult i64 %48, %49
  br i1 %50, label %9, label %51

51:                                               ; preds = %44, %2
  %52 = phi <2 x float> [ zeroinitializer, %2 ], [ %47, %44 ]
  ret <2 x float> %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE6reinitIS1_IeEEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE3equIS1_IeEEEvS2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, <2 x float> %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #17 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !341
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %2, i64 0, i32 3
  %9 = extractelement <2 x float> %1, i64 0
  %10 = extractelement <2 x float> %1, i64 1
  %11 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %13

12:                                               ; preds = %35, %3
  ret void

13:                                               ; preds = %7, %35
  %14 = phi i64 [ 0, %7 ], [ %42, %35 ]
  %15 = load ptr, ptr %8, align 8, !tbaa !351
  %16 = getelementptr inbounds %"class.std::complex.42", ptr %15, i64 %14
  %17 = load x86_fp80, ptr %16, align 16
  %18 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %16, i64 0, i32 1
  %19 = load x86_fp80, ptr %18, align 16
  %20 = fptrunc x86_fp80 %17 to float
  %21 = fptrunc x86_fp80 %19 to float
  %22 = fmul float %9, %20
  %23 = fmul float %10, %21
  %24 = fmul float %9, %21
  %25 = fmul float %10, %20
  %26 = fsub float %22, %23
  %27 = fadd float %25, %24
  %28 = fcmp uno float %26, 0.000000e+00
  br i1 %28, label %29, label %35, !prof !340

29:                                               ; preds = %13
  %30 = fcmp uno float %27, 0.000000e+00
  br i1 %30, label %31, label %35, !prof !340

31:                                               ; preds = %29
  %32 = tail call noundef <2 x float> @__mulsc3(float noundef %9, float noundef %10, float noundef %20, float noundef %21) #24
  %33 = extractelement <2 x float> %32, i64 0
  %34 = extractelement <2 x float> %32, i64 1
  br label %35

35:                                               ; preds = %13, %29, %31
  %36 = phi float [ %26, %13 ], [ %26, %29 ], [ %33, %31 ]
  %37 = phi float [ %27, %13 ], [ %27, %29 ], [ %34, %31 ]
  %38 = insertelement <2 x float> poison, float %36, i64 0
  %39 = insertelement <2 x float> %38, float %37, i64 1
  %40 = load ptr, ptr %11, align 8, !tbaa !344
  %41 = getelementptr inbounds %"class.std::complex.33", ptr %40, i64 %14
  store <2 x float> %39, ptr %41, align 4, !tbaa.struct !336
  %42 = add nuw nsw i64 %14, 1
  %43 = load i32, ptr %4, align 8, !tbaa !341
  %44 = zext i32 %43 to i64
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %13, label %12
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEE5scaleIS1_IeEEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %37, %2
  ret void

10:                                               ; preds = %6, %37
  %11 = phi i64 [ 0, %6 ], [ %40, %37 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !351
  %13 = getelementptr inbounds %"class.std::complex.42", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !344
  %15 = getelementptr inbounds %"class.std::complex.33", ptr %14, i64 %11
  %16 = load x86_fp80, ptr %13, align 16
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %13, i64 0, i32 1
  %18 = load x86_fp80, ptr %17, align 16
  %19 = fptrunc x86_fp80 %16 to float
  %20 = fptrunc x86_fp80 %18 to float
  %21 = load float, ptr %15, align 4
  %22 = getelementptr inbounds { float, float }, ptr %15, i64 0, i32 1
  %23 = load float, ptr %22, align 4
  %24 = fmul float %21, %19
  %25 = fmul float %23, %20
  %26 = fmul float %21, %20
  %27 = fmul float %23, %19
  %28 = fsub float %24, %25
  %29 = fadd float %26, %27
  %30 = fcmp uno float %28, 0.000000e+00
  br i1 %30, label %31, label %37, !prof !340

31:                                               ; preds = %10
  %32 = fcmp uno float %29, 0.000000e+00
  br i1 %32, label %33, label %37, !prof !340

33:                                               ; preds = %31
  %34 = tail call noundef <2 x float> @__mulsc3(float noundef %21, float noundef %23, float noundef %19, float noundef %20) #24
  %35 = extractelement <2 x float> %34, i64 0
  %36 = extractelement <2 x float> %34, i64 1
  br label %37

37:                                               ; preds = %10, %31, %33
  %38 = phi float [ %28, %10 ], [ %28, %31 ], [ %35, %33 ]
  %39 = phi float [ %29, %10 ], [ %29, %31 ], [ %36, %33 ]
  store float %38, ptr %15, align 4
  store float %39, ptr %22, align 4
  %40 = add nuw nsw i64 %11, 1
  %41 = load i32, ptr %3, align 8, !tbaa !341
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIeEEeqIS1_IdEEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %43, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !351
  %9 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !333
  %11 = zext i32 %4 to i64
  %12 = load double, ptr %10, align 8
  %13 = getelementptr inbounds { double, double }, ptr %10, i64 0, i32 1
  %14 = load double, ptr %13, align 8
  %15 = fpext double %12 to x86_fp80
  %16 = fpext double %14 to x86_fp80
  %17 = load x86_fp80, ptr %8, align 16, !tbaa !275
  %18 = fcmp une x86_fp80 %17, %15
  %19 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %8, i64 0, i32 1
  %20 = load x86_fp80, ptr %19, align 16
  %21 = fcmp une x86_fp80 %20, %16
  %22 = select i1 %18, i1 true, i1 %21
  br i1 %22, label %43, label %23

23:                                               ; preds = %6, %27
  %24 = phi i64 [ %25, %27 ], [ 0, %6 ]
  %25 = add nuw nsw i64 %24, 1
  %26 = icmp eq i64 %25, %11
  br i1 %26, label %41, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::complex.42", ptr %8, i64 %25
  %29 = getelementptr inbounds %"class.std::complex", ptr %10, i64 %25
  %30 = load double, ptr %29, align 8
  %31 = getelementptr inbounds { double, double }, ptr %29, i64 0, i32 1
  %32 = load double, ptr %31, align 8
  %33 = fpext double %30 to x86_fp80
  %34 = fpext double %32 to x86_fp80
  %35 = load x86_fp80, ptr %28, align 16, !tbaa !275
  %36 = fcmp une x86_fp80 %35, %33
  %37 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %28, i64 0, i32 1
  %38 = load x86_fp80, ptr %37, align 16
  %39 = fcmp une x86_fp80 %38, %34
  %40 = select i1 %36, i1 true, i1 %39
  br i1 %40, label %41, label %23

41:                                               ; preds = %23, %27
  %42 = icmp uge i64 %25, %11
  br label %43

43:                                               ; preds = %41, %6, %2
  %44 = phi i1 [ true, %2 ], [ false, %6 ], [ %42, %41 ]
  ret i1 %44
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIeEEmlIS1_IdEEES2_RKNS0_IT_EE(ptr noalias sret(%"class.std::complex.42") align 16 %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #2 comdat align 2 {
  store x86_fp80 0xK00000000000000000000, ptr %0, align 16, !tbaa !275
  %4 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %0, i64 0, i32 1
  store x86_fp80 0xK00000000000000000000, ptr %4, align 16, !tbaa !275
  %5 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !348
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %52, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %10 = getelementptr inbounds %"class.dealii::Vector.24", ptr %2, i64 0, i32 3
  br label %11

11:                                               ; preds = %8, %43
  %12 = phi i32 [ %6, %8 ], [ %44, %43 ]
  %13 = phi i64 [ 0, %8 ], [ %49, %43 ]
  %14 = phi x86_fp80 [ 0xK00000000000000000000, %8 ], [ %47, %43 ]
  %15 = phi x86_fp80 [ 0xK00000000000000000000, %8 ], [ %48, %43 ]
  %16 = load ptr, ptr %9, align 8, !tbaa !351
  %17 = getelementptr inbounds %"class.std::complex.42", ptr %16, i64 %13
  %18 = load ptr, ptr %10, align 8, !tbaa !333
  %19 = getelementptr inbounds %"class.std::complex", ptr %18, i64 %13
  %20 = load double, ptr %19, align 8, !tbaa !26
  %21 = getelementptr inbounds { double, double }, ptr %19, i64 0, i32 1
  %22 = load double, ptr %21, align 8, !tbaa !26
  %23 = fneg double %22
  %24 = fpext double %20 to x86_fp80
  %25 = fpext double %23 to x86_fp80
  %26 = load x86_fp80, ptr %17, align 16, !tbaa.struct !353
  %27 = getelementptr inbounds i8, ptr %17, i64 16
  %28 = load x86_fp80, ptr %27, align 16, !tbaa.struct !335
  %29 = fmul x86_fp80 %26, %24
  %30 = fmul x86_fp80 %28, %25
  %31 = fmul x86_fp80 %26, %25
  %32 = fmul x86_fp80 %28, %24
  %33 = fsub x86_fp80 %29, %30
  %34 = fadd x86_fp80 %31, %32
  %35 = fcmp uno x86_fp80 %33, 0xK00000000000000000000
  br i1 %35, label %36, label %43, !prof !340

36:                                               ; preds = %11
  %37 = fcmp uno x86_fp80 %34, 0xK00000000000000000000
  br i1 %37, label %38, label %43, !prof !340

38:                                               ; preds = %36
  %39 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %26, x86_fp80 noundef %28, x86_fp80 noundef %24, x86_fp80 noundef %25) #24, !noalias !438
  %40 = extractvalue { x86_fp80, x86_fp80 } %39, 0
  %41 = extractvalue { x86_fp80, x86_fp80 } %39, 1
  %42 = load i32, ptr %5, align 8, !tbaa !348
  br label %43

43:                                               ; preds = %11, %36, %38
  %44 = phi i32 [ %12, %11 ], [ %12, %36 ], [ %42, %38 ]
  %45 = phi x86_fp80 [ %33, %11 ], [ %33, %36 ], [ %40, %38 ]
  %46 = phi x86_fp80 [ %34, %11 ], [ %34, %36 ], [ %41, %38 ]
  %47 = fadd x86_fp80 %45, %14
  %48 = fadd x86_fp80 %46, %15
  store x86_fp80 %47, ptr %0, align 16
  store x86_fp80 %48, ptr %4, align 16
  %49 = add nuw nsw i64 %13, 1
  %50 = zext i32 %44 to i64
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %11, label %52

52:                                               ; preds = %43, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE6reinitIS1_IdEEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !330
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE3equIS1_IdEEEvS2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.24", ptr %2, i64 0, i32 3
  %9 = load x86_fp80, ptr %1, align 16, !tbaa.struct !353
  %10 = getelementptr inbounds i8, ptr %1, i64 10
  %11 = getelementptr inbounds i8, ptr %1, i64 16
  %12 = load x86_fp80, ptr %11, align 16, !tbaa.struct !335
  %13 = getelementptr inbounds i8, ptr %1, i64 26
  %14 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %16

15:                                               ; preds = %38, %3
  ret void

16:                                               ; preds = %7, %38
  %17 = phi i64 [ 0, %7 ], [ %46, %38 ]
  %18 = load ptr, ptr %8, align 8, !tbaa !333
  %19 = getelementptr inbounds %"class.std::complex", ptr %18, i64 %17
  %20 = load double, ptr %19, align 8
  %21 = getelementptr inbounds { double, double }, ptr %19, i64 0, i32 1
  %22 = load double, ptr %21, align 8
  %23 = fpext double %20 to x86_fp80
  %24 = fpext double %22 to x86_fp80
  %25 = fmul x86_fp80 %9, %23
  %26 = fmul x86_fp80 %12, %24
  %27 = fmul x86_fp80 %9, %24
  %28 = fmul x86_fp80 %12, %23
  %29 = fsub x86_fp80 %25, %26
  %30 = fadd x86_fp80 %27, %28
  %31 = fcmp uno x86_fp80 %29, 0xK00000000000000000000
  br i1 %31, label %32, label %38, !prof !340

32:                                               ; preds = %16
  %33 = fcmp uno x86_fp80 %30, 0xK00000000000000000000
  br i1 %33, label %34, label %38, !prof !340

34:                                               ; preds = %32
  %35 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %9, x86_fp80 noundef %12, x86_fp80 noundef %23, x86_fp80 noundef %24) #24, !noalias !441
  %36 = extractvalue { x86_fp80, x86_fp80 } %35, 0
  %37 = extractvalue { x86_fp80, x86_fp80 } %35, 1
  br label %38

38:                                               ; preds = %16, %32, %34
  %39 = phi x86_fp80 [ %29, %16 ], [ %29, %32 ], [ %36, %34 ]
  %40 = phi x86_fp80 [ %30, %16 ], [ %30, %32 ], [ %37, %34 ]
  %41 = load ptr, ptr %14, align 8, !tbaa !351
  %42 = getelementptr inbounds %"class.std::complex.42", ptr %41, i64 %17
  store x86_fp80 %39, ptr %42, align 16, !tbaa.struct !353
  %43 = getelementptr inbounds i8, ptr %42, i64 10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %43, ptr noundef nonnull align 2 dereferenceable(6) %10, i64 6, i1 false)
  %44 = getelementptr inbounds i8, ptr %42, i64 16
  store x86_fp80 %40, ptr %44, align 16, !tbaa.struct !335
  %45 = getelementptr inbounds i8, ptr %42, i64 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %45, ptr noundef nonnull align 2 dereferenceable(6) %13, i64 6, i1 false)
  %46 = add nuw nsw i64 %17, 1
  %47 = load i32, ptr %4, align 8, !tbaa !348
  %48 = zext i32 %47 to i64
  %49 = icmp ult i64 %46, %48
  br i1 %49, label %16, label %15
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE5scaleIS1_IdEEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %37, %2
  ret void

10:                                               ; preds = %6, %37
  %11 = phi i64 [ 0, %6 ], [ %40, %37 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !333
  %13 = getelementptr inbounds %"class.std::complex", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !351
  %15 = getelementptr inbounds %"class.std::complex.42", ptr %14, i64 %11
  %16 = load double, ptr %13, align 8
  %17 = getelementptr inbounds { double, double }, ptr %13, i64 0, i32 1
  %18 = load double, ptr %17, align 8
  %19 = fpext double %16 to x86_fp80
  %20 = fpext double %18 to x86_fp80
  %21 = load x86_fp80, ptr %15, align 16
  %22 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %15, i64 0, i32 1
  %23 = load x86_fp80, ptr %22, align 16
  %24 = fmul x86_fp80 %21, %19
  %25 = fmul x86_fp80 %23, %20
  %26 = fmul x86_fp80 %21, %20
  %27 = fmul x86_fp80 %23, %19
  %28 = fsub x86_fp80 %24, %25
  %29 = fadd x86_fp80 %26, %27
  %30 = fcmp uno x86_fp80 %28, 0xK00000000000000000000
  br i1 %30, label %31, label %37, !prof !340

31:                                               ; preds = %10
  %32 = fcmp uno x86_fp80 %29, 0xK00000000000000000000
  br i1 %32, label %33, label %37, !prof !340

33:                                               ; preds = %31
  %34 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %21, x86_fp80 noundef %23, x86_fp80 noundef %19, x86_fp80 noundef %20) #24
  %35 = extractvalue { x86_fp80, x86_fp80 } %34, 0
  %36 = extractvalue { x86_fp80, x86_fp80 } %34, 1
  br label %37

37:                                               ; preds = %10, %31, %33
  %38 = phi x86_fp80 [ %28, %10 ], [ %28, %31 ], [ %35, %33 ]
  %39 = phi x86_fp80 [ %29, %10 ], [ %29, %31 ], [ %36, %33 ]
  store x86_fp80 %38, ptr %15, align 16
  store x86_fp80 %39, ptr %22, align 16
  %40 = add nuw nsw i64 %11, 1
  %41 = load i32, ptr %3, align 8, !tbaa !348
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIeEEeqIS1_IfEEEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %43, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !351
  %9 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !344
  %11 = zext i32 %4 to i64
  %12 = load float, ptr %10, align 4
  %13 = getelementptr inbounds { float, float }, ptr %10, i64 0, i32 1
  %14 = load float, ptr %13, align 4
  %15 = fpext float %12 to x86_fp80
  %16 = fpext float %14 to x86_fp80
  %17 = load x86_fp80, ptr %8, align 16, !tbaa !275
  %18 = fcmp une x86_fp80 %17, %15
  %19 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %8, i64 0, i32 1
  %20 = load x86_fp80, ptr %19, align 16
  %21 = fcmp une x86_fp80 %20, %16
  %22 = select i1 %18, i1 true, i1 %21
  br i1 %22, label %43, label %23

23:                                               ; preds = %6, %27
  %24 = phi i64 [ %25, %27 ], [ 0, %6 ]
  %25 = add nuw nsw i64 %24, 1
  %26 = icmp eq i64 %25, %11
  br i1 %26, label %41, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::complex.42", ptr %8, i64 %25
  %29 = getelementptr inbounds %"class.std::complex.33", ptr %10, i64 %25
  %30 = load float, ptr %29, align 4
  %31 = getelementptr inbounds { float, float }, ptr %29, i64 0, i32 1
  %32 = load float, ptr %31, align 4
  %33 = fpext float %30 to x86_fp80
  %34 = fpext float %32 to x86_fp80
  %35 = load x86_fp80, ptr %28, align 16, !tbaa !275
  %36 = fcmp une x86_fp80 %35, %33
  %37 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %28, i64 0, i32 1
  %38 = load x86_fp80, ptr %37, align 16
  %39 = fcmp une x86_fp80 %38, %34
  %40 = select i1 %36, i1 true, i1 %39
  br i1 %40, label %41, label %23

41:                                               ; preds = %23, %27
  %42 = icmp uge i64 %25, %11
  br label %43

43:                                               ; preds = %41, %6, %2
  %44 = phi i1 [ true, %2 ], [ false, %6 ], [ %42, %41 ]
  ret i1 %44
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIeEEmlIS1_IfEEES2_RKNS0_IT_EE(ptr noalias sret(%"class.std::complex.42") align 16 %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #17 comdat align 2 {
  store x86_fp80 0xK00000000000000000000, ptr %0, align 16, !tbaa !275
  %4 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %0, i64 0, i32 1
  store x86_fp80 0xK00000000000000000000, ptr %4, align 16, !tbaa !275
  %5 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !348
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %52, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %10 = getelementptr inbounds %"class.dealii::Vector.32", ptr %2, i64 0, i32 3
  br label %11

11:                                               ; preds = %8, %43
  %12 = phi i32 [ %6, %8 ], [ %44, %43 ]
  %13 = phi i64 [ 0, %8 ], [ %49, %43 ]
  %14 = phi x86_fp80 [ 0xK00000000000000000000, %8 ], [ %47, %43 ]
  %15 = phi x86_fp80 [ 0xK00000000000000000000, %8 ], [ %48, %43 ]
  %16 = load ptr, ptr %9, align 8, !tbaa !351
  %17 = getelementptr inbounds %"class.std::complex.42", ptr %16, i64 %13
  %18 = load ptr, ptr %10, align 8, !tbaa !344
  %19 = getelementptr inbounds %"class.std::complex.33", ptr %18, i64 %13
  %20 = load float, ptr %19, align 4, !tbaa !165
  %21 = getelementptr inbounds { float, float }, ptr %19, i64 0, i32 1
  %22 = load float, ptr %21, align 4, !tbaa !165
  %23 = fneg float %22
  %24 = fpext float %20 to x86_fp80
  %25 = fpext float %23 to x86_fp80
  %26 = load x86_fp80, ptr %17, align 16, !tbaa.struct !353
  %27 = getelementptr inbounds i8, ptr %17, i64 16
  %28 = load x86_fp80, ptr %27, align 16, !tbaa.struct !335
  %29 = fmul x86_fp80 %26, %24
  %30 = fmul x86_fp80 %28, %25
  %31 = fmul x86_fp80 %26, %25
  %32 = fmul x86_fp80 %28, %24
  %33 = fsub x86_fp80 %29, %30
  %34 = fadd x86_fp80 %31, %32
  %35 = fcmp uno x86_fp80 %33, 0xK00000000000000000000
  br i1 %35, label %36, label %43, !prof !340

36:                                               ; preds = %11
  %37 = fcmp uno x86_fp80 %34, 0xK00000000000000000000
  br i1 %37, label %38, label %43, !prof !340

38:                                               ; preds = %36
  %39 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %26, x86_fp80 noundef %28, x86_fp80 noundef %24, x86_fp80 noundef %25) #24, !noalias !444
  %40 = extractvalue { x86_fp80, x86_fp80 } %39, 0
  %41 = extractvalue { x86_fp80, x86_fp80 } %39, 1
  %42 = load i32, ptr %5, align 8, !tbaa !348
  br label %43

43:                                               ; preds = %11, %36, %38
  %44 = phi i32 [ %12, %11 ], [ %12, %36 ], [ %42, %38 ]
  %45 = phi x86_fp80 [ %33, %11 ], [ %33, %36 ], [ %40, %38 ]
  %46 = phi x86_fp80 [ %34, %11 ], [ %34, %36 ], [ %41, %38 ]
  %47 = fadd x86_fp80 %45, %14
  %48 = fadd x86_fp80 %46, %15
  store x86_fp80 %47, ptr %0, align 16
  store x86_fp80 %48, ptr %4, align 16
  %49 = add nuw nsw i64 %13, 1
  %50 = zext i32 %44 to i64
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %11, label %52

52:                                               ; preds = %43, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE6reinitIS1_IfEEEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !341
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE3equIS1_IfEEEvS2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #17 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.32", ptr %2, i64 0, i32 3
  %9 = load x86_fp80, ptr %1, align 16, !tbaa.struct !353
  %10 = getelementptr inbounds i8, ptr %1, i64 10
  %11 = getelementptr inbounds i8, ptr %1, i64 16
  %12 = load x86_fp80, ptr %11, align 16, !tbaa.struct !335
  %13 = getelementptr inbounds i8, ptr %1, i64 26
  %14 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %16

15:                                               ; preds = %38, %3
  ret void

16:                                               ; preds = %7, %38
  %17 = phi i64 [ 0, %7 ], [ %46, %38 ]
  %18 = load ptr, ptr %8, align 8, !tbaa !344
  %19 = getelementptr inbounds %"class.std::complex.33", ptr %18, i64 %17
  %20 = load float, ptr %19, align 4
  %21 = getelementptr inbounds { float, float }, ptr %19, i64 0, i32 1
  %22 = load float, ptr %21, align 4
  %23 = fpext float %20 to x86_fp80
  %24 = fpext float %22 to x86_fp80
  %25 = fmul x86_fp80 %9, %23
  %26 = fmul x86_fp80 %12, %24
  %27 = fmul x86_fp80 %9, %24
  %28 = fmul x86_fp80 %12, %23
  %29 = fsub x86_fp80 %25, %26
  %30 = fadd x86_fp80 %27, %28
  %31 = fcmp uno x86_fp80 %29, 0xK00000000000000000000
  br i1 %31, label %32, label %38, !prof !340

32:                                               ; preds = %16
  %33 = fcmp uno x86_fp80 %30, 0xK00000000000000000000
  br i1 %33, label %34, label %38, !prof !340

34:                                               ; preds = %32
  %35 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %9, x86_fp80 noundef %12, x86_fp80 noundef %23, x86_fp80 noundef %24) #24, !noalias !447
  %36 = extractvalue { x86_fp80, x86_fp80 } %35, 0
  %37 = extractvalue { x86_fp80, x86_fp80 } %35, 1
  br label %38

38:                                               ; preds = %16, %32, %34
  %39 = phi x86_fp80 [ %29, %16 ], [ %29, %32 ], [ %36, %34 ]
  %40 = phi x86_fp80 [ %30, %16 ], [ %30, %32 ], [ %37, %34 ]
  %41 = load ptr, ptr %14, align 8, !tbaa !351
  %42 = getelementptr inbounds %"class.std::complex.42", ptr %41, i64 %17
  store x86_fp80 %39, ptr %42, align 16, !tbaa.struct !353
  %43 = getelementptr inbounds i8, ptr %42, i64 10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %43, ptr noundef nonnull align 2 dereferenceable(6) %10, i64 6, i1 false)
  %44 = getelementptr inbounds i8, ptr %42, i64 16
  store x86_fp80 %40, ptr %44, align 16, !tbaa.struct !335
  %45 = getelementptr inbounds i8, ptr %42, i64 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %45, ptr noundef nonnull align 2 dereferenceable(6) %13, i64 6, i1 false)
  %46 = add nuw nsw i64 %17, 1
  %47 = load i32, ptr %4, align 8, !tbaa !348
  %48 = zext i32 %47 to i64
  %49 = icmp ult i64 %46, %48
  br i1 %49, label %16, label %15
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE5scaleIS1_IfEEEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %37, %2
  ret void

10:                                               ; preds = %6, %37
  %11 = phi i64 [ 0, %6 ], [ %40, %37 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !344
  %13 = getelementptr inbounds %"class.std::complex.33", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !351
  %15 = getelementptr inbounds %"class.std::complex.42", ptr %14, i64 %11
  %16 = load float, ptr %13, align 4
  %17 = getelementptr inbounds { float, float }, ptr %13, i64 0, i32 1
  %18 = load float, ptr %17, align 4
  %19 = fpext float %16 to x86_fp80
  %20 = fpext float %18 to x86_fp80
  %21 = load x86_fp80, ptr %15, align 16
  %22 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %15, i64 0, i32 1
  %23 = load x86_fp80, ptr %22, align 16
  %24 = fmul x86_fp80 %21, %19
  %25 = fmul x86_fp80 %23, %20
  %26 = fmul x86_fp80 %21, %20
  %27 = fmul x86_fp80 %23, %19
  %28 = fsub x86_fp80 %24, %25
  %29 = fadd x86_fp80 %26, %27
  %30 = fcmp uno x86_fp80 %28, 0xK00000000000000000000
  br i1 %30, label %31, label %37, !prof !340

31:                                               ; preds = %10
  %32 = fcmp uno x86_fp80 %29, 0xK00000000000000000000
  br i1 %32, label %33, label %37, !prof !340

33:                                               ; preds = %31
  %34 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %21, x86_fp80 noundef %23, x86_fp80 noundef %19, x86_fp80 noundef %20) #24
  %35 = extractvalue { x86_fp80, x86_fp80 } %34, 0
  %36 = extractvalue { x86_fp80, x86_fp80 } %34, 1
  br label %37

37:                                               ; preds = %10, %31, %33
  %38 = phi x86_fp80 [ %28, %10 ], [ %28, %31 ], [ %35, %33 ]
  %39 = phi x86_fp80 [ %29, %10 ], [ %29, %31 ], [ %36, %33 ]
  store x86_fp80 %38, ptr %15, align 16
  store x86_fp80 %39, ptr %22, align 16
  %40 = add nuw nsw i64 %11, 1
  %41 = load i32, ptr %3, align 8, !tbaa !348
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii6VectorISt7complexIeEEeqIS2_EEbRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %39, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !351
  %9 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !351
  %11 = zext i32 %4 to i64
  %12 = load x86_fp80, ptr %10, align 16, !tbaa.struct !353
  %13 = getelementptr inbounds i8, ptr %10, i64 16
  %14 = load x86_fp80, ptr %13, align 16, !tbaa.struct !335
  %15 = load x86_fp80, ptr %8, align 16, !tbaa !275
  %16 = fcmp une x86_fp80 %15, %12
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %8, i64 0, i32 1
  %18 = load x86_fp80, ptr %17, align 16
  %19 = fcmp une x86_fp80 %18, %14
  %20 = select i1 %16, i1 true, i1 %19
  br i1 %20, label %39, label %21

21:                                               ; preds = %6, %25
  %22 = phi i64 [ %23, %25 ], [ 0, %6 ]
  %23 = add nuw nsw i64 %22, 1
  %24 = icmp eq i64 %23, %11
  br i1 %24, label %37, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::complex.42", ptr %8, i64 %23
  %27 = getelementptr inbounds %"class.std::complex.42", ptr %10, i64 %23
  %28 = load x86_fp80, ptr %27, align 16, !tbaa.struct !353
  %29 = getelementptr inbounds i8, ptr %27, i64 16
  %30 = load x86_fp80, ptr %29, align 16, !tbaa.struct !335
  %31 = load x86_fp80, ptr %26, align 16, !tbaa !275
  %32 = fcmp une x86_fp80 %31, %28
  %33 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %26, i64 0, i32 1
  %34 = load x86_fp80, ptr %33, align 16
  %35 = fcmp une x86_fp80 %34, %30
  %36 = select i1 %32, i1 true, i1 %35
  br i1 %36, label %37, label %21

37:                                               ; preds = %21, %25
  %38 = icmp uge i64 %23, %11
  br label %39

39:                                               ; preds = %37, %6, %2
  %40 = phi i1 [ true, %2 ], [ false, %6 ], [ %38, %37 ]
  ret i1 %40
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii6VectorISt7complexIeEEmlIS2_EES2_RKNS0_IT_EE(ptr noalias sret(%"class.std::complex.42") align 16 %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #2 comdat align 2 {
  %4 = icmp eq ptr %1, %2
  br i1 %4, label %5, label %55

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !348
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %52, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !351
  %12 = zext i32 %7 to i64
  %13 = and i64 %12, 1
  %14 = icmp eq i32 %7, 1
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = and i64 %12, 4294967294
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i64 [ 0, %15 ], [ %36, %17 ]
  %19 = phi x86_fp80 [ 0xK00000000000000000000, %15 ], [ %35, %17 ]
  %20 = phi i64 [ 0, %15 ], [ %37, %17 ]
  %21 = getelementptr inbounds %"class.std::complex.42", ptr %11, i64 %18
  %22 = load x86_fp80, ptr %21, align 16, !tbaa !275
  %23 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %21, i64 0, i32 1
  %24 = load x86_fp80, ptr %23, align 16, !tbaa !275
  %25 = fmul x86_fp80 %24, %24
  %26 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %22, x86_fp80 %22, x86_fp80 %25)
  %27 = fadd x86_fp80 %19, %26
  %28 = or i64 %18, 1
  %29 = getelementptr inbounds %"class.std::complex.42", ptr %11, i64 %28
  %30 = load x86_fp80, ptr %29, align 16, !tbaa !275
  %31 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %29, i64 0, i32 1
  %32 = load x86_fp80, ptr %31, align 16, !tbaa !275
  %33 = fmul x86_fp80 %32, %32
  %34 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %30, x86_fp80 %30, x86_fp80 %33)
  %35 = fadd x86_fp80 %27, %34
  %36 = add nuw nsw i64 %18, 2
  %37 = add i64 %20, 2
  %38 = icmp eq i64 %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %17, %9
  %40 = phi x86_fp80 [ undef, %9 ], [ %35, %17 ]
  %41 = phi i64 [ 0, %9 ], [ %36, %17 ]
  %42 = phi x86_fp80 [ 0xK00000000000000000000, %9 ], [ %35, %17 ]
  %43 = icmp eq i64 %13, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.std::complex.42", ptr %11, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !275
  %47 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %45, i64 0, i32 1
  %48 = load x86_fp80, ptr %47, align 16, !tbaa !275
  %49 = fmul x86_fp80 %48, %48
  %50 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %46, x86_fp80 %49)
  %51 = fadd x86_fp80 %42, %50
  br label %52

52:                                               ; preds = %44, %39, %5
  %53 = phi x86_fp80 [ 0xK00000000000000000000, %5 ], [ %40, %39 ], [ %51, %44 ]
  store x86_fp80 %53, ptr %0, align 16, !tbaa !275
  %54 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %0, i64 0, i32 1
  store x86_fp80 0xK00000000000000000000, ptr %54, align 16, !tbaa !275
  br label %102

55:                                               ; preds = %3
  store x86_fp80 0xK00000000000000000000, ptr %0, align 16, !tbaa !275
  %56 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %0, i64 0, i32 1
  store x86_fp80 0xK00000000000000000000, ptr %56, align 16, !tbaa !275
  %57 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %58 = load i32, ptr %57, align 8, !tbaa !348
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %102, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %62 = getelementptr inbounds %"class.dealii::Vector.41", ptr %2, i64 0, i32 3
  br label %63

63:                                               ; preds = %60, %93
  %64 = phi i32 [ %58, %60 ], [ %94, %93 ]
  %65 = phi i64 [ 0, %60 ], [ %99, %93 ]
  %66 = phi x86_fp80 [ 0xK00000000000000000000, %60 ], [ %97, %93 ]
  %67 = phi x86_fp80 [ 0xK00000000000000000000, %60 ], [ %98, %93 ]
  %68 = load ptr, ptr %61, align 8, !tbaa !351
  %69 = getelementptr inbounds %"class.std::complex.42", ptr %68, i64 %65
  %70 = load ptr, ptr %62, align 8, !tbaa !351
  %71 = getelementptr inbounds %"class.std::complex.42", ptr %70, i64 %65
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !275, !noalias !450
  %73 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %71, i64 0, i32 1
  %74 = load x86_fp80, ptr %73, align 16, !tbaa !275, !noalias !450
  %75 = fneg x86_fp80 %74
  %76 = load x86_fp80, ptr %69, align 16, !tbaa.struct !353
  %77 = getelementptr inbounds i8, ptr %69, i64 16
  %78 = load x86_fp80, ptr %77, align 16, !tbaa.struct !335
  %79 = fmul x86_fp80 %72, %76
  %80 = fmul x86_fp80 %72, %78
  %81 = fmul x86_fp80 %74, %78
  %82 = fadd x86_fp80 %79, %81
  %83 = fmul x86_fp80 %74, %76
  %84 = fsub x86_fp80 %80, %83
  %85 = fcmp uno x86_fp80 %82, 0xK00000000000000000000
  br i1 %85, label %86, label %93, !prof !340

86:                                               ; preds = %63
  %87 = fcmp uno x86_fp80 %84, 0xK00000000000000000000
  br i1 %87, label %88, label %93, !prof !340

88:                                               ; preds = %86
  %89 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %76, x86_fp80 noundef %78, x86_fp80 noundef %72, x86_fp80 noundef %75) #24, !noalias !455
  %90 = extractvalue { x86_fp80, x86_fp80 } %89, 0
  %91 = extractvalue { x86_fp80, x86_fp80 } %89, 1
  %92 = load i32, ptr %57, align 8, !tbaa !348
  br label %93

93:                                               ; preds = %63, %86, %88
  %94 = phi i32 [ %64, %63 ], [ %64, %86 ], [ %92, %88 ]
  %95 = phi x86_fp80 [ %82, %63 ], [ %82, %86 ], [ %90, %88 ]
  %96 = phi x86_fp80 [ %84, %63 ], [ %84, %86 ], [ %91, %88 ]
  %97 = fadd x86_fp80 %95, %66
  %98 = fadd x86_fp80 %96, %67
  store x86_fp80 %97, ptr %0, align 16
  store x86_fp80 %98, ptr %56, align 16
  %99 = add nuw nsw i64 %65, 1
  %100 = zext i32 %94 to i64
  %101 = icmp ult i64 %99, %100
  br i1 %101, label %63, label %102

102:                                              ; preds = %93, %55, %52
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE6reinitIS2_EEvRKNS0_IT_EEb(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, i1 noundef zeroext %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = getelementptr inbounds ptr, ptr %6, i64 2
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %5, i1 noundef zeroext %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE3equIS2_EEvS2_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef byval(%"class.std::complex.42") align 16 %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %2, i64 0, i32 3
  %9 = load x86_fp80, ptr %1, align 16, !tbaa.struct !353
  %10 = getelementptr inbounds i8, ptr %1, i64 10
  %11 = getelementptr inbounds i8, ptr %1, i64 16
  %12 = load x86_fp80, ptr %11, align 16, !tbaa.struct !335
  %13 = getelementptr inbounds i8, ptr %1, i64 26
  %14 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %16

15:                                               ; preds = %36, %3
  ret void

16:                                               ; preds = %7, %36
  %17 = phi i64 [ 0, %7 ], [ %44, %36 ]
  %18 = load ptr, ptr %8, align 8, !tbaa !351
  %19 = getelementptr inbounds %"class.std::complex.42", ptr %18, i64 %17
  %20 = load x86_fp80, ptr %19, align 16, !tbaa.struct !353
  %21 = getelementptr inbounds i8, ptr %19, i64 16
  %22 = load x86_fp80, ptr %21, align 16, !tbaa.struct !335
  %23 = fmul x86_fp80 %20, %9
  %24 = fmul x86_fp80 %22, %12
  %25 = fmul x86_fp80 %22, %9
  %26 = fmul x86_fp80 %20, %12
  %27 = fsub x86_fp80 %23, %24
  %28 = fadd x86_fp80 %25, %26
  %29 = fcmp uno x86_fp80 %27, 0xK00000000000000000000
  br i1 %29, label %30, label %36, !prof !340

30:                                               ; preds = %16
  %31 = fcmp uno x86_fp80 %28, 0xK00000000000000000000
  br i1 %31, label %32, label %36, !prof !340

32:                                               ; preds = %30
  %33 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %9, x86_fp80 noundef %12, x86_fp80 noundef %20, x86_fp80 noundef %22) #24, !noalias !458
  %34 = extractvalue { x86_fp80, x86_fp80 } %33, 0
  %35 = extractvalue { x86_fp80, x86_fp80 } %33, 1
  br label %36

36:                                               ; preds = %16, %30, %32
  %37 = phi x86_fp80 [ %27, %16 ], [ %27, %30 ], [ %34, %32 ]
  %38 = phi x86_fp80 [ %28, %16 ], [ %28, %30 ], [ %35, %32 ]
  %39 = load ptr, ptr %14, align 8, !tbaa !351
  %40 = getelementptr inbounds %"class.std::complex.42", ptr %39, i64 %17
  store x86_fp80 %37, ptr %40, align 16, !tbaa.struct !353
  %41 = getelementptr inbounds i8, ptr %40, i64 10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %41, ptr noundef nonnull align 2 dereferenceable(6) %10, i64 6, i1 false)
  %42 = getelementptr inbounds i8, ptr %40, i64 16
  store x86_fp80 %38, ptr %42, align 16, !tbaa.struct !335
  %43 = getelementptr inbounds i8, ptr %40, i64 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(6) %43, ptr noundef nonnull align 2 dereferenceable(6) %13, i64 6, i1 false)
  %44 = add nuw nsw i64 %17, 1
  %45 = load i32, ptr %4, align 8, !tbaa !348
  %46 = zext i32 %45 to i64
  %47 = icmp ult i64 %44, %46
  br i1 %47, label %16, label %15
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEE5scaleIS2_EEvRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  br label %10

9:                                                ; preds = %35, %2
  ret void

10:                                               ; preds = %6, %35
  %11 = phi i64 [ 0, %6 ], [ %38, %35 ]
  %12 = load ptr, ptr %7, align 8, !tbaa !351
  %13 = getelementptr inbounds %"class.std::complex.42", ptr %12, i64 %11
  %14 = load ptr, ptr %8, align 8, !tbaa !351
  %15 = getelementptr inbounds %"class.std::complex.42", ptr %14, i64 %11
  %16 = load x86_fp80, ptr %13, align 16
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %13, i64 0, i32 1
  %18 = load x86_fp80, ptr %17, align 16
  %19 = load x86_fp80, ptr %15, align 16
  %20 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %15, i64 0, i32 1
  %21 = load x86_fp80, ptr %20, align 16
  %22 = fmul x86_fp80 %16, %19
  %23 = fmul x86_fp80 %18, %21
  %24 = fmul x86_fp80 %18, %19
  %25 = fmul x86_fp80 %16, %21
  %26 = fsub x86_fp80 %22, %23
  %27 = fadd x86_fp80 %24, %25
  %28 = fcmp uno x86_fp80 %26, 0xK00000000000000000000
  br i1 %28, label %29, label %35, !prof !340

29:                                               ; preds = %10
  %30 = fcmp uno x86_fp80 %27, 0xK00000000000000000000
  br i1 %30, label %31, label %35, !prof !340

31:                                               ; preds = %29
  %32 = tail call noundef { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80 noundef %19, x86_fp80 noundef %21, x86_fp80 noundef %16, x86_fp80 noundef %18) #24
  %33 = extractvalue { x86_fp80, x86_fp80 } %32, 0
  %34 = extractvalue { x86_fp80, x86_fp80 } %32, 1
  br label %35

35:                                               ; preds = %10, %29, %31
  %36 = phi x86_fp80 [ %26, %10 ], [ %26, %29 ], [ %33, %31 ]
  %37 = phi x86_fp80 [ %27, %10 ], [ %27, %29 ], [ %34, %31 ]
  store x86_fp80 %36, ptr %15, align 16
  store x86_fp80 %37, ptr %20, align 16
  %38 = add nuw nsw i64 %11, 1
  %39 = load i32, ptr %3, align 8, !tbaa !348
  %40 = zext i32 %39 to i64
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %10, label %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdEC2IfEERKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorIdEC5IfEERKNS0_IT_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  store i32 %5, ptr %3, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  store i32 %5, ptr %6, align 4, !tbaa !23
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  store ptr null, ptr %7, align 8, !tbaa !24
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %64, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #22
          to label %13 unwind label %62

13:                                               ; preds = %9
  store ptr %12, ptr %7, align 8, !tbaa !24
  %14 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !164
  %16 = icmp ult i32 %5, 16
  br i1 %16, label %48, label %17

17:                                               ; preds = %13
  %18 = and i64 %10, 4294967280
  %19 = and i64 %10, 15
  %20 = shl nuw nsw i64 %18, 3
  %21 = getelementptr i8, ptr %12, i64 %20
  %22 = shl nuw nsw i64 %18, 2
  %23 = getelementptr i8, ptr %15, i64 %22
  br label %24

24:                                               ; preds = %24, %17
  %25 = phi i64 [ 0, %17 ], [ %44, %24 ]
  %26 = shl i64 %25, 3
  %27 = getelementptr i8, ptr %12, i64 %26
  %28 = shl i64 %25, 2
  %29 = getelementptr i8, ptr %15, i64 %28
  %30 = load <4 x float>, ptr %29, align 4, !tbaa !165
  %31 = getelementptr float, ptr %29, i64 4
  %32 = load <4 x float>, ptr %31, align 4, !tbaa !165
  %33 = getelementptr float, ptr %29, i64 8
  %34 = load <4 x float>, ptr %33, align 4, !tbaa !165
  %35 = getelementptr float, ptr %29, i64 12
  %36 = load <4 x float>, ptr %35, align 4, !tbaa !165
  %37 = fpext <4 x float> %30 to <4 x double>
  %38 = fpext <4 x float> %32 to <4 x double>
  %39 = fpext <4 x float> %34 to <4 x double>
  %40 = fpext <4 x float> %36 to <4 x double>
  store <4 x double> %37, ptr %27, align 8, !tbaa !26
  %41 = getelementptr double, ptr %27, i64 4
  store <4 x double> %38, ptr %41, align 8, !tbaa !26
  %42 = getelementptr double, ptr %27, i64 8
  store <4 x double> %39, ptr %42, align 8, !tbaa !26
  %43 = getelementptr double, ptr %27, i64 12
  store <4 x double> %40, ptr %43, align 8, !tbaa !26
  %44 = add nuw i64 %25, 16
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %46, label %24, !llvm.loop !461

46:                                               ; preds = %24
  %47 = icmp eq i64 %18, %10
  br i1 %47, label %64, label %48

48:                                               ; preds = %13, %46
  %49 = phi i64 [ %10, %13 ], [ %19, %46 ]
  %50 = phi ptr [ %12, %13 ], [ %21, %46 ]
  %51 = phi ptr [ %15, %13 ], [ %23, %46 ]
  br label %52

52:                                               ; preds = %48, %52
  %53 = phi i64 [ %60, %52 ], [ %49, %48 ]
  %54 = phi ptr [ %59, %52 ], [ %50, %48 ]
  %55 = phi ptr [ %58, %52 ], [ %51, %48 ]
  %56 = load float, ptr %55, align 4, !tbaa !165
  %57 = fpext float %56 to double
  store double %57, ptr %54, align 8, !tbaa !26
  %58 = getelementptr inbounds float, ptr %55, i64 1
  %59 = getelementptr inbounds double, ptr %54, i64 1
  %60 = add nsw i64 %53, -1
  %61 = icmp ugt i64 %53, 1
  br i1 %61, label %52, label %64, !llvm.loop !462

62:                                               ; preds = %9
  %63 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %65 unwind label %66

64:                                               ; preds = %52, %46, %2
  ret void

65:                                               ; preds = %62
  resume { ptr, i32 } %63

66:                                               ; preds = %62
  %67 = landingpad { ptr, i32 }
          catch ptr null
  %68 = extractvalue { ptr, i32 } %67, 0
  tail call void @__clang_call_terminate(ptr %68) #23
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfEC2IdEERKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorIfEC5IdEERKNS0_IT_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  store i32 %5, ptr %3, align 8, !tbaa !161
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 2
  store i32 %5, ptr %6, align 4, !tbaa !163
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  store ptr null, ptr %7, align 8, !tbaa !164
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %64, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #22
          to label %13 unwind label %62

13:                                               ; preds = %9
  store ptr %12, ptr %7, align 8, !tbaa !164
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !24
  %16 = icmp ult i32 %5, 16
  br i1 %16, label %48, label %17

17:                                               ; preds = %13
  %18 = and i64 %10, 4294967280
  %19 = and i64 %10, 15
  %20 = shl nuw nsw i64 %18, 2
  %21 = getelementptr i8, ptr %12, i64 %20
  %22 = shl nuw nsw i64 %18, 3
  %23 = getelementptr i8, ptr %15, i64 %22
  br label %24

24:                                               ; preds = %24, %17
  %25 = phi i64 [ 0, %17 ], [ %44, %24 ]
  %26 = shl i64 %25, 2
  %27 = getelementptr i8, ptr %12, i64 %26
  %28 = shl i64 %25, 3
  %29 = getelementptr i8, ptr %15, i64 %28
  %30 = load <4 x double>, ptr %29, align 8, !tbaa !26
  %31 = getelementptr double, ptr %29, i64 4
  %32 = load <4 x double>, ptr %31, align 8, !tbaa !26
  %33 = getelementptr double, ptr %29, i64 8
  %34 = load <4 x double>, ptr %33, align 8, !tbaa !26
  %35 = getelementptr double, ptr %29, i64 12
  %36 = load <4 x double>, ptr %35, align 8, !tbaa !26
  %37 = fptrunc <4 x double> %30 to <4 x float>
  %38 = fptrunc <4 x double> %32 to <4 x float>
  %39 = fptrunc <4 x double> %34 to <4 x float>
  %40 = fptrunc <4 x double> %36 to <4 x float>
  store <4 x float> %37, ptr %27, align 4, !tbaa !165
  %41 = getelementptr float, ptr %27, i64 4
  store <4 x float> %38, ptr %41, align 4, !tbaa !165
  %42 = getelementptr float, ptr %27, i64 8
  store <4 x float> %39, ptr %42, align 4, !tbaa !165
  %43 = getelementptr float, ptr %27, i64 12
  store <4 x float> %40, ptr %43, align 4, !tbaa !165
  %44 = add nuw i64 %25, 16
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %46, label %24, !llvm.loop !463

46:                                               ; preds = %24
  %47 = icmp eq i64 %18, %10
  br i1 %47, label %64, label %48

48:                                               ; preds = %13, %46
  %49 = phi i64 [ %10, %13 ], [ %19, %46 ]
  %50 = phi ptr [ %12, %13 ], [ %21, %46 ]
  %51 = phi ptr [ %15, %13 ], [ %23, %46 ]
  br label %52

52:                                               ; preds = %48, %52
  %53 = phi i64 [ %60, %52 ], [ %49, %48 ]
  %54 = phi ptr [ %59, %52 ], [ %50, %48 ]
  %55 = phi ptr [ %58, %52 ], [ %51, %48 ]
  %56 = load double, ptr %55, align 8, !tbaa !26
  %57 = fptrunc double %56 to float
  store float %57, ptr %54, align 4, !tbaa !165
  %58 = getelementptr inbounds double, ptr %55, i64 1
  %59 = getelementptr inbounds float, ptr %54, i64 1
  %60 = add nsw i64 %53, -1
  %61 = icmp ugt i64 %53, 1
  br i1 %61, label %52, label %64, !llvm.loop !464

62:                                               ; preds = %9
  %63 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %65 unwind label %66

64:                                               ; preds = %52, %46, %2
  ret void

65:                                               ; preds = %62
  resume { ptr, i32 } %63

66:                                               ; preds = %62
  %67 = landingpad { ptr, i32 }
          catch ptr null
  %68 = extractvalue { ptr, i32 } %67, 0
  tail call void @__clang_call_terminate(ptr %68) #23
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeEC2IdEERKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorIeEC5IdEERKNS0_IT_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIeEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !8
  store i32 %5, ptr %3, align 8, !tbaa !271
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 2
  store i32 %5, ptr %6, align 4, !tbaa !273
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  store ptr null, ptr %7, align 8, !tbaa !274
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %60, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 4
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #22
          to label %13 unwind label %58

13:                                               ; preds = %9
  store ptr %12, ptr %7, align 8, !tbaa !274
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !24
  %16 = and i64 %10, 3
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %27, %18 ], [ %10, %13 ]
  %20 = phi ptr [ %26, %18 ], [ %12, %13 ]
  %21 = phi ptr [ %25, %18 ], [ %15, %13 ]
  %22 = phi i64 [ %28, %18 ], [ 0, %13 ]
  %23 = load double, ptr %21, align 8, !tbaa !26
  %24 = fpext double %23 to x86_fp80
  store x86_fp80 %24, ptr %20, align 16, !tbaa !275
  %25 = getelementptr inbounds double, ptr %21, i64 1
  %26 = getelementptr inbounds x86_fp80, ptr %20, i64 1
  %27 = add nsw i64 %19, -1
  %28 = add i64 %22, 1
  %29 = icmp eq i64 %28, %16
  br i1 %29, label %30, label %18, !llvm.loop !465

30:                                               ; preds = %18, %13
  %31 = phi i64 [ %10, %13 ], [ %27, %18 ]
  %32 = phi ptr [ %12, %13 ], [ %26, %18 ]
  %33 = phi ptr [ %15, %13 ], [ %25, %18 ]
  %34 = icmp ult i32 %5, 4
  br i1 %34, label %60, label %35

35:                                               ; preds = %30, %35
  %36 = phi i64 [ %55, %35 ], [ %31, %30 ]
  %37 = phi ptr [ %54, %35 ], [ %32, %30 ]
  %38 = phi ptr [ %53, %35 ], [ %33, %30 ]
  %39 = load double, ptr %38, align 8, !tbaa !26
  %40 = fpext double %39 to x86_fp80
  store x86_fp80 %40, ptr %37, align 16, !tbaa !275
  %41 = getelementptr inbounds double, ptr %38, i64 1
  %42 = getelementptr inbounds x86_fp80, ptr %37, i64 1
  %43 = load double, ptr %41, align 8, !tbaa !26
  %44 = fpext double %43 to x86_fp80
  store x86_fp80 %44, ptr %42, align 16, !tbaa !275
  %45 = getelementptr inbounds double, ptr %38, i64 2
  %46 = getelementptr inbounds x86_fp80, ptr %37, i64 2
  %47 = load double, ptr %45, align 8, !tbaa !26
  %48 = fpext double %47 to x86_fp80
  store x86_fp80 %48, ptr %46, align 16, !tbaa !275
  %49 = getelementptr inbounds double, ptr %38, i64 3
  %50 = getelementptr inbounds x86_fp80, ptr %37, i64 3
  %51 = load double, ptr %49, align 8, !tbaa !26
  %52 = fpext double %51 to x86_fp80
  store x86_fp80 %52, ptr %50, align 16, !tbaa !275
  %53 = getelementptr inbounds double, ptr %38, i64 4
  %54 = getelementptr inbounds x86_fp80, ptr %37, i64 4
  %55 = add nsw i64 %36, -4
  %56 = add i64 %36, -5
  %57 = icmp ult i64 %56, -2
  br i1 %57, label %35, label %60

58:                                               ; preds = %9
  %59 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %61 unwind label %62

60:                                               ; preds = %30, %35, %2
  ret void

61:                                               ; preds = %58
  resume { ptr, i32 } %59

62:                                               ; preds = %58
  %63 = landingpad { ptr, i32 }
          catch ptr null
  %64 = extractvalue { ptr, i32 } %63, 0
  tail call void @__clang_call_terminate(ptr %64) #23
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIdEC2IeEERKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorIdEC5IeEERKNS0_IT_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  store i32 %5, ptr %3, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  store i32 %5, ptr %6, align 4, !tbaa !23
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  store ptr null, ptr %7, align 8, !tbaa !24
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %60, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #22
          to label %13 unwind label %58

13:                                               ; preds = %9
  store ptr %12, ptr %7, align 8, !tbaa !24
  %14 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !274
  %16 = and i64 %10, 3
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %27, %18 ], [ %10, %13 ]
  %20 = phi ptr [ %26, %18 ], [ %12, %13 ]
  %21 = phi ptr [ %25, %18 ], [ %15, %13 ]
  %22 = phi i64 [ %28, %18 ], [ 0, %13 ]
  %23 = load x86_fp80, ptr %21, align 16, !tbaa !275
  %24 = fptrunc x86_fp80 %23 to double
  store double %24, ptr %20, align 8, !tbaa !26
  %25 = getelementptr inbounds x86_fp80, ptr %21, i64 1
  %26 = getelementptr inbounds double, ptr %20, i64 1
  %27 = add nsw i64 %19, -1
  %28 = add i64 %22, 1
  %29 = icmp eq i64 %28, %16
  br i1 %29, label %30, label %18, !llvm.loop !466

30:                                               ; preds = %18, %13
  %31 = phi i64 [ %10, %13 ], [ %27, %18 ]
  %32 = phi ptr [ %12, %13 ], [ %26, %18 ]
  %33 = phi ptr [ %15, %13 ], [ %25, %18 ]
  %34 = icmp ult i32 %5, 4
  br i1 %34, label %60, label %35

35:                                               ; preds = %30, %35
  %36 = phi i64 [ %55, %35 ], [ %31, %30 ]
  %37 = phi ptr [ %54, %35 ], [ %32, %30 ]
  %38 = phi ptr [ %53, %35 ], [ %33, %30 ]
  %39 = load x86_fp80, ptr %38, align 16, !tbaa !275
  %40 = fptrunc x86_fp80 %39 to double
  store double %40, ptr %37, align 8, !tbaa !26
  %41 = getelementptr inbounds x86_fp80, ptr %38, i64 1
  %42 = getelementptr inbounds double, ptr %37, i64 1
  %43 = load x86_fp80, ptr %41, align 16, !tbaa !275
  %44 = fptrunc x86_fp80 %43 to double
  store double %44, ptr %42, align 8, !tbaa !26
  %45 = getelementptr inbounds x86_fp80, ptr %38, i64 2
  %46 = getelementptr inbounds double, ptr %37, i64 2
  %47 = load x86_fp80, ptr %45, align 16, !tbaa !275
  %48 = fptrunc x86_fp80 %47 to double
  store double %48, ptr %46, align 8, !tbaa !26
  %49 = getelementptr inbounds x86_fp80, ptr %38, i64 3
  %50 = getelementptr inbounds double, ptr %37, i64 3
  %51 = load x86_fp80, ptr %49, align 16, !tbaa !275
  %52 = fptrunc x86_fp80 %51 to double
  store double %52, ptr %50, align 8, !tbaa !26
  %53 = getelementptr inbounds x86_fp80, ptr %38, i64 4
  %54 = getelementptr inbounds double, ptr %37, i64 4
  %55 = add nsw i64 %36, -4
  %56 = add i64 %36, -5
  %57 = icmp ult i64 %56, -2
  br i1 %57, label %35, label %60

58:                                               ; preds = %9
  %59 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %61 unwind label %62

60:                                               ; preds = %30, %35, %2
  ret void

61:                                               ; preds = %58
  resume { ptr, i32 } %59

62:                                               ; preds = %58
  %63 = landingpad { ptr, i32 }
          catch ptr null
  %64 = extractvalue { ptr, i32 } %63, 0
  tail call void @__clang_call_terminate(ptr %64) #23
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIeEC2IfEERKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorIeEC5IfEERKNS0_IT_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIeEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !161
  store i32 %5, ptr %3, align 8, !tbaa !271
  %6 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 2
  store i32 %5, ptr %6, align 4, !tbaa !273
  %7 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  store ptr null, ptr %7, align 8, !tbaa !274
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %60, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 4
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #22
          to label %13 unwind label %58

13:                                               ; preds = %9
  store ptr %12, ptr %7, align 8, !tbaa !274
  %14 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !164
  %16 = and i64 %10, 3
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %27, %18 ], [ %10, %13 ]
  %20 = phi ptr [ %26, %18 ], [ %12, %13 ]
  %21 = phi ptr [ %25, %18 ], [ %15, %13 ]
  %22 = phi i64 [ %28, %18 ], [ 0, %13 ]
  %23 = load float, ptr %21, align 4, !tbaa !165
  %24 = fpext float %23 to x86_fp80
  store x86_fp80 %24, ptr %20, align 16, !tbaa !275
  %25 = getelementptr inbounds float, ptr %21, i64 1
  %26 = getelementptr inbounds x86_fp80, ptr %20, i64 1
  %27 = add nsw i64 %19, -1
  %28 = add i64 %22, 1
  %29 = icmp eq i64 %28, %16
  br i1 %29, label %30, label %18, !llvm.loop !467

30:                                               ; preds = %18, %13
  %31 = phi i64 [ %10, %13 ], [ %27, %18 ]
  %32 = phi ptr [ %12, %13 ], [ %26, %18 ]
  %33 = phi ptr [ %15, %13 ], [ %25, %18 ]
  %34 = icmp ult i32 %5, 4
  br i1 %34, label %60, label %35

35:                                               ; preds = %30, %35
  %36 = phi i64 [ %55, %35 ], [ %31, %30 ]
  %37 = phi ptr [ %54, %35 ], [ %32, %30 ]
  %38 = phi ptr [ %53, %35 ], [ %33, %30 ]
  %39 = load float, ptr %38, align 4, !tbaa !165
  %40 = fpext float %39 to x86_fp80
  store x86_fp80 %40, ptr %37, align 16, !tbaa !275
  %41 = getelementptr inbounds float, ptr %38, i64 1
  %42 = getelementptr inbounds x86_fp80, ptr %37, i64 1
  %43 = load float, ptr %41, align 4, !tbaa !165
  %44 = fpext float %43 to x86_fp80
  store x86_fp80 %44, ptr %42, align 16, !tbaa !275
  %45 = getelementptr inbounds float, ptr %38, i64 2
  %46 = getelementptr inbounds x86_fp80, ptr %37, i64 2
  %47 = load float, ptr %45, align 4, !tbaa !165
  %48 = fpext float %47 to x86_fp80
  store x86_fp80 %48, ptr %46, align 16, !tbaa !275
  %49 = getelementptr inbounds float, ptr %38, i64 3
  %50 = getelementptr inbounds x86_fp80, ptr %37, i64 3
  %51 = load float, ptr %49, align 4, !tbaa !165
  %52 = fpext float %51 to x86_fp80
  store x86_fp80 %52, ptr %50, align 16, !tbaa !275
  %53 = getelementptr inbounds float, ptr %38, i64 4
  %54 = getelementptr inbounds x86_fp80, ptr %37, i64 4
  %55 = add nsw i64 %36, -4
  %56 = add i64 %36, -5
  %57 = icmp ult i64 %56, -2
  br i1 %57, label %35, label %60

58:                                               ; preds = %9
  %59 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %61 unwind label %62

60:                                               ; preds = %30, %35, %2
  ret void

61:                                               ; preds = %58
  resume { ptr, i32 } %59

62:                                               ; preds = %58
  %63 = landingpad { ptr, i32 }
          catch ptr null
  %64 = extractvalue { ptr, i32 } %63, 0
  tail call void @__clang_call_terminate(ptr %64) #23
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorIfEC2IeEERKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorIfEC5IeEERKNS0_IT_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !271
  store i32 %5, ptr %3, align 8, !tbaa !161
  %6 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 2
  store i32 %5, ptr %6, align 4, !tbaa !163
  %7 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  store ptr null, ptr %7, align 8, !tbaa !164
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %60, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #22
          to label %13 unwind label %58

13:                                               ; preds = %9
  store ptr %12, ptr %7, align 8, !tbaa !164
  %14 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !274
  %16 = and i64 %10, 3
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64 [ %27, %18 ], [ %10, %13 ]
  %20 = phi ptr [ %26, %18 ], [ %12, %13 ]
  %21 = phi ptr [ %25, %18 ], [ %15, %13 ]
  %22 = phi i64 [ %28, %18 ], [ 0, %13 ]
  %23 = load x86_fp80, ptr %21, align 16, !tbaa !275
  %24 = fptrunc x86_fp80 %23 to float
  store float %24, ptr %20, align 4, !tbaa !165
  %25 = getelementptr inbounds x86_fp80, ptr %21, i64 1
  %26 = getelementptr inbounds float, ptr %20, i64 1
  %27 = add nsw i64 %19, -1
  %28 = add i64 %22, 1
  %29 = icmp eq i64 %28, %16
  br i1 %29, label %30, label %18, !llvm.loop !468

30:                                               ; preds = %18, %13
  %31 = phi i64 [ %10, %13 ], [ %27, %18 ]
  %32 = phi ptr [ %12, %13 ], [ %26, %18 ]
  %33 = phi ptr [ %15, %13 ], [ %25, %18 ]
  %34 = icmp ult i32 %5, 4
  br i1 %34, label %60, label %35

35:                                               ; preds = %30, %35
  %36 = phi i64 [ %55, %35 ], [ %31, %30 ]
  %37 = phi ptr [ %54, %35 ], [ %32, %30 ]
  %38 = phi ptr [ %53, %35 ], [ %33, %30 ]
  %39 = load x86_fp80, ptr %38, align 16, !tbaa !275
  %40 = fptrunc x86_fp80 %39 to float
  store float %40, ptr %37, align 4, !tbaa !165
  %41 = getelementptr inbounds x86_fp80, ptr %38, i64 1
  %42 = getelementptr inbounds float, ptr %37, i64 1
  %43 = load x86_fp80, ptr %41, align 16, !tbaa !275
  %44 = fptrunc x86_fp80 %43 to float
  store float %44, ptr %42, align 4, !tbaa !165
  %45 = getelementptr inbounds x86_fp80, ptr %38, i64 2
  %46 = getelementptr inbounds float, ptr %37, i64 2
  %47 = load x86_fp80, ptr %45, align 16, !tbaa !275
  %48 = fptrunc x86_fp80 %47 to float
  store float %48, ptr %46, align 4, !tbaa !165
  %49 = getelementptr inbounds x86_fp80, ptr %38, i64 3
  %50 = getelementptr inbounds float, ptr %37, i64 3
  %51 = load x86_fp80, ptr %49, align 16, !tbaa !275
  %52 = fptrunc x86_fp80 %51 to float
  store float %52, ptr %50, align 4, !tbaa !165
  %53 = getelementptr inbounds x86_fp80, ptr %38, i64 4
  %54 = getelementptr inbounds float, ptr %37, i64 4
  %55 = add nsw i64 %36, -4
  %56 = add i64 %36, -5
  %57 = icmp ult i64 %56, -2
  br i1 %57, label %35, label %60

58:                                               ; preds = %9
  %59 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %61 unwind label %62

60:                                               ; preds = %30, %35, %2
  ret void

61:                                               ; preds = %58
  resume { ptr, i32 } %59

62:                                               ; preds = %58
  %63 = landingpad { ptr, i32 }
          catch ptr null
  %64 = extractvalue { ptr, i32 } %63, 0
  tail call void @__clang_call_terminate(ptr %64) #23
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEEC2IS1_IfEEERKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #17 comdat($_ZN6dealii6VectorISt7complexIdEEC5IS1_IfEEERKNS0_IT_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIdEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !341
  store i32 %5, ptr %3, align 8, !tbaa !330
  %6 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 2
  store i32 %5, ptr %6, align 4, !tbaa !332
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  store ptr null, ptr %7, align 8, !tbaa !333
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %64, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 4
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #22
          to label %13 unwind label %62

13:                                               ; preds = %9
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %12, i8 0, i64 %11, i1 false), !tbaa !26
  store ptr %12, ptr %7, align 8, !tbaa !333
  %14 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !344
  %16 = icmp ult i32 %5, 8
  br i1 %16, label %48, label %17

17:                                               ; preds = %13
  %18 = shl nuw nsw i64 %10, 4
  %19 = getelementptr i8, ptr %12, i64 %18
  %20 = shl nuw nsw i64 %10, 3
  %21 = getelementptr i8, ptr %15, i64 %20
  %22 = icmp ult ptr %12, %21
  %23 = icmp ult ptr %15, %19
  %24 = and i1 %22, %23
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = and i64 %10, 4294967292
  %27 = and i64 %10, 3
  %28 = shl nuw nsw i64 %26, 4
  %29 = getelementptr i8, ptr %12, i64 %28
  %30 = shl nuw nsw i64 %26, 3
  %31 = getelementptr i8, ptr %15, i64 %30
  br label %32

32:                                               ; preds = %32, %25
  %33 = phi i64 [ 0, %25 ], [ %44, %32 ]
  %34 = shl i64 %33, 4
  %35 = getelementptr i8, ptr %12, i64 %34
  %36 = shl i64 %33, 3
  %37 = getelementptr i8, ptr %15, i64 %36
  %38 = load <8 x float>, ptr %37, align 4
  %39 = shufflevector <8 x float> %38, <8 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %40 = shufflevector <8 x float> %38, <8 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %41 = fpext <4 x float> %39 to <4 x double>
  %42 = fpext <4 x float> %40 to <4 x double>
  %43 = shufflevector <4 x double> %41, <4 x double> %42, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %43, ptr %35, align 8
  %44 = add nuw i64 %33, 4
  %45 = icmp eq i64 %44, %26
  br i1 %45, label %46, label %32, !llvm.loop !469

46:                                               ; preds = %32
  %47 = icmp eq i64 %26, %10
  br i1 %47, label %64, label %48

48:                                               ; preds = %17, %13, %46
  %49 = phi i64 [ %10, %17 ], [ %10, %13 ], [ %27, %46 ]
  %50 = phi ptr [ %12, %17 ], [ %12, %13 ], [ %29, %46 ]
  %51 = phi ptr [ %15, %17 ], [ %15, %13 ], [ %31, %46 ]
  br label %52

52:                                               ; preds = %48, %52
  %53 = phi i64 [ %60, %52 ], [ %49, %48 ]
  %54 = phi ptr [ %59, %52 ], [ %50, %48 ]
  %55 = phi ptr [ %58, %52 ], [ %51, %48 ]
  %56 = load <2 x float>, ptr %55, align 4
  %57 = fpext <2 x float> %56 to <2 x double>
  store <2 x double> %57, ptr %54, align 8
  %58 = getelementptr inbounds %"class.std::complex.33", ptr %55, i64 1
  %59 = getelementptr inbounds %"class.std::complex", ptr %54, i64 1
  %60 = add nsw i64 %53, -1
  %61 = icmp ugt i64 %53, 1
  br i1 %61, label %52, label %64, !llvm.loop !470

62:                                               ; preds = %9
  %63 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %65 unwind label %66

64:                                               ; preds = %52, %46, %2
  ret void

65:                                               ; preds = %62
  resume { ptr, i32 } %63

66:                                               ; preds = %62
  %67 = landingpad { ptr, i32 }
          catch ptr null
  %68 = extractvalue { ptr, i32 } %67, 0
  tail call void @__clang_call_terminate(ptr %68) #23
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEEC2IS1_IdEEERKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorISt7complexIfEEC5IS1_IdEEERKNS0_IT_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIfEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !330
  store i32 %5, ptr %3, align 8, !tbaa !341
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 2
  store i32 %5, ptr %6, align 4, !tbaa !343
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  store ptr null, ptr %7, align 8, !tbaa !344
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %68, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #22
          to label %13 unwind label %66

13:                                               ; preds = %9
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %12, i8 0, i64 %11, i1 false), !tbaa !165
  store ptr %12, ptr %7, align 8, !tbaa !344
  %14 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !333
  %16 = icmp ult i32 %5, 4
  br i1 %16, label %52, label %17

17:                                               ; preds = %13
  %18 = and i64 %10, 4294967292
  %19 = and i64 %10, 3
  %20 = shl nuw nsw i64 %18, 3
  %21 = getelementptr i8, ptr %12, i64 %20
  %22 = shl nuw nsw i64 %18, 4
  %23 = getelementptr i8, ptr %15, i64 %22
  br label %24

24:                                               ; preds = %24, %17
  %25 = phi i64 [ 0, %17 ], [ %48, %24 ]
  %26 = shl i64 %25, 3
  %27 = getelementptr i8, ptr %12, i64 %26
  %28 = shl i64 %25, 3
  %29 = or i64 %28, 16
  %30 = getelementptr i8, ptr %12, i64 %29
  %31 = shl i64 %25, 4
  %32 = getelementptr i8, ptr %15, i64 %31
  %33 = shl i64 %25, 4
  %34 = or i64 %33, 32
  %35 = getelementptr i8, ptr %15, i64 %34
  %36 = load <4 x double>, ptr %32, align 8, !tbaa !26
  %37 = load <4 x double>, ptr %35, align 8, !tbaa !26
  %38 = shufflevector <4 x double> %36, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %39 = shufflevector <4 x double> %37, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %40 = shufflevector <4 x double> %36, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %41 = shufflevector <4 x double> %37, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %42 = fptrunc <2 x double> %38 to <2 x float>
  %43 = fptrunc <2 x double> %39 to <2 x float>
  %44 = fptrunc <2 x double> %40 to <2 x float>
  %45 = fptrunc <2 x double> %41 to <2 x float>
  %46 = shufflevector <2 x float> %42, <2 x float> %44, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x float> %46, ptr %27, align 4, !tbaa !165
  %47 = shufflevector <2 x float> %43, <2 x float> %45, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x float> %47, ptr %30, align 4, !tbaa !165
  %48 = add nuw i64 %25, 4
  %49 = icmp eq i64 %48, %18
  br i1 %49, label %50, label %24, !llvm.loop !471

50:                                               ; preds = %24
  %51 = icmp eq i64 %18, %10
  br i1 %51, label %68, label %52

52:                                               ; preds = %13, %50
  %53 = phi i64 [ %10, %13 ], [ %19, %50 ]
  %54 = phi ptr [ %12, %13 ], [ %21, %50 ]
  %55 = phi ptr [ %15, %13 ], [ %23, %50 ]
  br label %56

56:                                               ; preds = %52, %56
  %57 = phi i64 [ %64, %56 ], [ %53, %52 ]
  %58 = phi ptr [ %63, %56 ], [ %54, %52 ]
  %59 = phi ptr [ %62, %56 ], [ %55, %52 ]
  %60 = load <2 x double>, ptr %59, align 8, !tbaa !26
  %61 = fptrunc <2 x double> %60 to <2 x float>
  store <2 x float> %61, ptr %58, align 4, !tbaa !165
  %62 = getelementptr inbounds %"class.std::complex", ptr %59, i64 1
  %63 = getelementptr inbounds %"class.std::complex.33", ptr %58, i64 1
  %64 = add nsw i64 %57, -1
  %65 = icmp ugt i64 %57, 1
  br i1 %65, label %56, label %68, !llvm.loop !472

66:                                               ; preds = %9
  %67 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %69 unwind label %70

68:                                               ; preds = %56, %50, %2
  ret void

69:                                               ; preds = %66
  resume { ptr, i32 } %67

70:                                               ; preds = %66
  %71 = landingpad { ptr, i32 }
          catch ptr null
  %72 = extractvalue { ptr, i32 } %71, 0
  tail call void @__clang_call_terminate(ptr %72) #23
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEEC2IS1_IdEEERKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorISt7complexIeEEC5IS1_IdEEERKNS0_IT_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIeEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !330
  store i32 %5, ptr %3, align 8, !tbaa !348
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 2
  store i32 %5, ptr %6, align 4, !tbaa !350
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  store ptr null, ptr %7, align 8, !tbaa !351
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 5
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #22
          to label %13 unwind label %63

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.std::complex.42", ptr %12, i64 %10
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi ptr [ %12, %13 ], [ %18, %15 ]
  store x86_fp80 0xK00000000000000000000, ptr %16, align 16, !tbaa !275
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %16, i64 0, i32 1
  store x86_fp80 0xK00000000000000000000, ptr %17, align 16, !tbaa !275
  %18 = getelementptr inbounds %"class.std::complex.42", ptr %16, i64 1
  %19 = icmp eq ptr %18, %14
  br i1 %19, label %20, label %15

20:                                               ; preds = %15
  store ptr %12, ptr %7, align 8, !tbaa !351
  %21 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !333
  %23 = and i64 %10, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %20
  %26 = load double, ptr %22, align 8
  %27 = getelementptr inbounds { double, double }, ptr %22, i64 0, i32 1
  %28 = load double, ptr %27, align 8
  %29 = fpext double %26 to x86_fp80
  %30 = fpext double %28 to x86_fp80
  %31 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %12, i64 0, i32 1
  store x86_fp80 %29, ptr %12, align 16
  store x86_fp80 %30, ptr %31, align 16
  %32 = getelementptr inbounds %"class.std::complex", ptr %22, i64 1
  %33 = getelementptr inbounds %"class.std::complex.42", ptr %12, i64 1
  %34 = add nsw i64 %10, -1
  br label %35

35:                                               ; preds = %25, %20
  %36 = phi i64 [ %10, %20 ], [ %34, %25 ]
  %37 = phi ptr [ %12, %20 ], [ %33, %25 ]
  %38 = phi ptr [ %22, %20 ], [ %32, %25 ]
  %39 = icmp eq i32 %5, 1
  br i1 %39, label %65, label %40

40:                                               ; preds = %35, %40
  %41 = phi i64 [ %60, %40 ], [ %36, %35 ]
  %42 = phi ptr [ %59, %40 ], [ %37, %35 ]
  %43 = phi ptr [ %58, %40 ], [ %38, %35 ]
  %44 = load double, ptr %43, align 8
  %45 = getelementptr inbounds { double, double }, ptr %43, i64 0, i32 1
  %46 = load double, ptr %45, align 8
  %47 = fpext double %44 to x86_fp80
  %48 = fpext double %46 to x86_fp80
  %49 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %42, i64 0, i32 1
  store x86_fp80 %47, ptr %42, align 16
  store x86_fp80 %48, ptr %49, align 16
  %50 = getelementptr inbounds %"class.std::complex", ptr %43, i64 1
  %51 = getelementptr inbounds %"class.std::complex.42", ptr %42, i64 1
  %52 = load double, ptr %50, align 8
  %53 = getelementptr inbounds %"class.std::complex", ptr %43, i64 1, i32 0, i32 1
  %54 = load double, ptr %53, align 8
  %55 = fpext double %52 to x86_fp80
  %56 = fpext double %54 to x86_fp80
  %57 = getelementptr inbounds %"class.std::complex.42", ptr %42, i64 1, i32 0, i32 1
  store x86_fp80 %55, ptr %51, align 16
  store x86_fp80 %56, ptr %57, align 16
  %58 = getelementptr inbounds %"class.std::complex", ptr %43, i64 2
  %59 = getelementptr inbounds %"class.std::complex.42", ptr %42, i64 2
  %60 = add nsw i64 %41, -2
  %61 = add i64 %41, -3
  %62 = icmp ult i64 %61, -2
  br i1 %62, label %40, label %65

63:                                               ; preds = %9
  %64 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %66 unwind label %67

65:                                               ; preds = %35, %40, %2
  ret void

66:                                               ; preds = %63
  resume { ptr, i32 } %64

67:                                               ; preds = %63
  %68 = landingpad { ptr, i32 }
          catch ptr null
  %69 = extractvalue { ptr, i32 } %68, 0
  tail call void @__clang_call_terminate(ptr %69) #23
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIdEEC2IS1_IeEEERKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorISt7complexIdEEC5IS1_IeEEERKNS0_IT_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIdEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  store i32 %5, ptr %3, align 8, !tbaa !330
  %6 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 2
  store i32 %5, ptr %6, align 4, !tbaa !332
  %7 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  store ptr null, ptr %7, align 8, !tbaa !333
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 4
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #22
          to label %13 unwind label %56

13:                                               ; preds = %9
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %12, i8 0, i64 %11, i1 false), !tbaa !26
  store ptr %12, ptr %7, align 8, !tbaa !333
  %14 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !351
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %13
  %19 = load x86_fp80, ptr %15, align 16
  %20 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %15, i64 0, i32 1
  %21 = load x86_fp80, ptr %20, align 16
  %22 = fptrunc x86_fp80 %19 to double
  %23 = fptrunc x86_fp80 %21 to double
  %24 = getelementptr inbounds { double, double }, ptr %12, i64 0, i32 1
  store double %22, ptr %12, align 8
  store double %23, ptr %24, align 8
  %25 = getelementptr inbounds %"class.std::complex.42", ptr %15, i64 1
  %26 = getelementptr inbounds %"class.std::complex", ptr %12, i64 1
  %27 = add nsw i64 %10, -1
  br label %28

28:                                               ; preds = %18, %13
  %29 = phi i64 [ %10, %13 ], [ %27, %18 ]
  %30 = phi ptr [ %12, %13 ], [ %26, %18 ]
  %31 = phi ptr [ %15, %13 ], [ %25, %18 ]
  %32 = icmp eq i32 %5, 1
  br i1 %32, label %58, label %33

33:                                               ; preds = %28, %33
  %34 = phi i64 [ %53, %33 ], [ %29, %28 ]
  %35 = phi ptr [ %52, %33 ], [ %30, %28 ]
  %36 = phi ptr [ %51, %33 ], [ %31, %28 ]
  %37 = load x86_fp80, ptr %36, align 16
  %38 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %36, i64 0, i32 1
  %39 = load x86_fp80, ptr %38, align 16
  %40 = fptrunc x86_fp80 %37 to double
  %41 = fptrunc x86_fp80 %39 to double
  %42 = getelementptr inbounds { double, double }, ptr %35, i64 0, i32 1
  store double %40, ptr %35, align 8
  store double %41, ptr %42, align 8
  %43 = getelementptr inbounds %"class.std::complex.42", ptr %36, i64 1
  %44 = getelementptr inbounds %"class.std::complex", ptr %35, i64 1
  %45 = load x86_fp80, ptr %43, align 16
  %46 = getelementptr inbounds %"class.std::complex.42", ptr %36, i64 1, i32 0, i32 1
  %47 = load x86_fp80, ptr %46, align 16
  %48 = fptrunc x86_fp80 %45 to double
  %49 = fptrunc x86_fp80 %47 to double
  %50 = getelementptr inbounds %"class.std::complex", ptr %35, i64 1, i32 0, i32 1
  store double %48, ptr %44, align 8
  store double %49, ptr %50, align 8
  %51 = getelementptr inbounds %"class.std::complex.42", ptr %36, i64 2
  %52 = getelementptr inbounds %"class.std::complex", ptr %35, i64 2
  %53 = add nsw i64 %34, -2
  %54 = add i64 %34, -3
  %55 = icmp ult i64 %54, -2
  br i1 %55, label %33, label %58

56:                                               ; preds = %9
  %57 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %59 unwind label %60

58:                                               ; preds = %28, %33, %2
  ret void

59:                                               ; preds = %56
  resume { ptr, i32 } %57

60:                                               ; preds = %56
  %61 = landingpad { ptr, i32 }
          catch ptr null
  %62 = extractvalue { ptr, i32 } %61, 0
  tail call void @__clang_call_terminate(ptr %62) #23
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIeEEC2IS1_IfEEERKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #17 comdat($_ZN6dealii6VectorISt7complexIeEEC5IS1_IfEEERKNS0_IT_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIeEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !341
  store i32 %5, ptr %3, align 8, !tbaa !348
  %6 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 2
  store i32 %5, ptr %6, align 4, !tbaa !350
  %7 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  store ptr null, ptr %7, align 8, !tbaa !351
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 5
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #22
          to label %13 unwind label %63

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.std::complex.42", ptr %12, i64 %10
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi ptr [ %12, %13 ], [ %18, %15 ]
  store x86_fp80 0xK00000000000000000000, ptr %16, align 16, !tbaa !275
  %17 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %16, i64 0, i32 1
  store x86_fp80 0xK00000000000000000000, ptr %17, align 16, !tbaa !275
  %18 = getelementptr inbounds %"class.std::complex.42", ptr %16, i64 1
  %19 = icmp eq ptr %18, %14
  br i1 %19, label %20, label %15

20:                                               ; preds = %15
  store ptr %12, ptr %7, align 8, !tbaa !351
  %21 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !344
  %23 = and i64 %10, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %20
  %26 = load float, ptr %22, align 4
  %27 = getelementptr inbounds { float, float }, ptr %22, i64 0, i32 1
  %28 = load float, ptr %27, align 4
  %29 = fpext float %26 to x86_fp80
  %30 = fpext float %28 to x86_fp80
  %31 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %12, i64 0, i32 1
  store x86_fp80 %29, ptr %12, align 16
  store x86_fp80 %30, ptr %31, align 16
  %32 = getelementptr inbounds %"class.std::complex.33", ptr %22, i64 1
  %33 = getelementptr inbounds %"class.std::complex.42", ptr %12, i64 1
  %34 = add nsw i64 %10, -1
  br label %35

35:                                               ; preds = %25, %20
  %36 = phi i64 [ %10, %20 ], [ %34, %25 ]
  %37 = phi ptr [ %12, %20 ], [ %33, %25 ]
  %38 = phi ptr [ %22, %20 ], [ %32, %25 ]
  %39 = icmp eq i32 %5, 1
  br i1 %39, label %65, label %40

40:                                               ; preds = %35, %40
  %41 = phi i64 [ %60, %40 ], [ %36, %35 ]
  %42 = phi ptr [ %59, %40 ], [ %37, %35 ]
  %43 = phi ptr [ %58, %40 ], [ %38, %35 ]
  %44 = load float, ptr %43, align 4
  %45 = getelementptr inbounds { float, float }, ptr %43, i64 0, i32 1
  %46 = load float, ptr %45, align 4
  %47 = fpext float %44 to x86_fp80
  %48 = fpext float %46 to x86_fp80
  %49 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %42, i64 0, i32 1
  store x86_fp80 %47, ptr %42, align 16
  store x86_fp80 %48, ptr %49, align 16
  %50 = getelementptr inbounds %"class.std::complex.33", ptr %43, i64 1
  %51 = getelementptr inbounds %"class.std::complex.42", ptr %42, i64 1
  %52 = load float, ptr %50, align 4
  %53 = getelementptr inbounds %"class.std::complex.33", ptr %43, i64 1, i32 0, i32 1
  %54 = load float, ptr %53, align 4
  %55 = fpext float %52 to x86_fp80
  %56 = fpext float %54 to x86_fp80
  %57 = getelementptr inbounds %"class.std::complex.42", ptr %42, i64 1, i32 0, i32 1
  store x86_fp80 %55, ptr %51, align 16
  store x86_fp80 %56, ptr %57, align 16
  %58 = getelementptr inbounds %"class.std::complex.33", ptr %43, i64 2
  %59 = getelementptr inbounds %"class.std::complex.42", ptr %42, i64 2
  %60 = add nsw i64 %41, -2
  %61 = add i64 %41, -3
  %62 = icmp ult i64 %61, -2
  br i1 %62, label %40, label %65

63:                                               ; preds = %9
  %64 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %66 unwind label %67

65:                                               ; preds = %35, %40, %2
  ret void

66:                                               ; preds = %63
  resume { ptr, i32 } %64

67:                                               ; preds = %63
  %68 = landingpad { ptr, i32 }
          catch ptr null
  %69 = extractvalue { ptr, i32 } %68, 0
  tail call void @__clang_call_terminate(ptr %69) #23
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii6VectorISt7complexIfEEC2IS1_IeEEERKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #2 comdat($_ZN6dealii6VectorISt7complexIfEEC5IS1_IeEEERKNS0_IT_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorISt7complexIfEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !348
  store i32 %5, ptr %3, align 8, !tbaa !341
  %6 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 2
  store i32 %5, ptr %6, align 4, !tbaa !343
  %7 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  store ptr null, ptr %7, align 8, !tbaa !344
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #22
          to label %13 unwind label %56

13:                                               ; preds = %9
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %12, i8 0, i64 %11, i1 false), !tbaa !165
  store ptr %12, ptr %7, align 8, !tbaa !344
  %14 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !351
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %13
  %19 = load x86_fp80, ptr %15, align 16, !tbaa !275
  %20 = fptrunc x86_fp80 %19 to float
  store float %20, ptr %12, align 4, !tbaa !165
  %21 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %15, i64 0, i32 1
  %22 = load x86_fp80, ptr %21, align 16, !tbaa !275
  %23 = fptrunc x86_fp80 %22 to float
  %24 = getelementptr inbounds { float, float }, ptr %12, i64 0, i32 1
  store float %23, ptr %24, align 4, !tbaa !165
  %25 = getelementptr inbounds %"class.std::complex.42", ptr %15, i64 1
  %26 = getelementptr inbounds %"class.std::complex.33", ptr %12, i64 1
  %27 = add nsw i64 %10, -1
  br label %28

28:                                               ; preds = %18, %13
  %29 = phi i64 [ %10, %13 ], [ %27, %18 ]
  %30 = phi ptr [ %12, %13 ], [ %26, %18 ]
  %31 = phi ptr [ %15, %13 ], [ %25, %18 ]
  %32 = icmp eq i32 %5, 1
  br i1 %32, label %58, label %33

33:                                               ; preds = %28, %33
  %34 = phi i64 [ %53, %33 ], [ %29, %28 ]
  %35 = phi ptr [ %52, %33 ], [ %30, %28 ]
  %36 = phi ptr [ %51, %33 ], [ %31, %28 ]
  %37 = load x86_fp80, ptr %36, align 16, !tbaa !275
  %38 = fptrunc x86_fp80 %37 to float
  store float %38, ptr %35, align 4, !tbaa !165
  %39 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %36, i64 0, i32 1
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !275
  %41 = fptrunc x86_fp80 %40 to float
  %42 = getelementptr inbounds { float, float }, ptr %35, i64 0, i32 1
  store float %41, ptr %42, align 4, !tbaa !165
  %43 = getelementptr inbounds %"class.std::complex.42", ptr %36, i64 1
  %44 = getelementptr inbounds %"class.std::complex.33", ptr %35, i64 1
  %45 = load x86_fp80, ptr %43, align 16, !tbaa !275
  %46 = fptrunc x86_fp80 %45 to float
  store float %46, ptr %44, align 4, !tbaa !165
  %47 = getelementptr inbounds %"class.std::complex.42", ptr %36, i64 1, i32 0, i32 1
  %48 = load x86_fp80, ptr %47, align 16, !tbaa !275
  %49 = fptrunc x86_fp80 %48 to float
  %50 = getelementptr inbounds %"class.std::complex.33", ptr %35, i64 1, i32 0, i32 1
  store float %49, ptr %50, align 4, !tbaa !165
  %51 = getelementptr inbounds %"class.std::complex.42", ptr %36, i64 2
  %52 = getelementptr inbounds %"class.std::complex.33", ptr %35, i64 2
  %53 = add nsw i64 %34, -2
  %54 = add i64 %34, -3
  %55 = icmp ult i64 %54, -2
  br i1 %55, label %33, label %58

56:                                               ; preds = %9
  %57 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %59 unwind label %60

58:                                               ; preds = %28, %33, %2
  ret void

59:                                               ; preds = %56
  resume { ptr, i32 } %57

60:                                               ; preds = %56
  %61 = landingpad { ptr, i32 }
          catch ptr null
  %62 = extractvalue { ptr, i32 } %61, 0
  tail call void @__clang_call_terminate(ptr %62) #23
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSIfEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !8
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %71, label %16

16:                                               ; preds = %13
  %17 = load i32, ptr %3, align 8, !tbaa !161
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %71, label %19

19:                                               ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !164
  %23 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !24
  %25 = icmp ult i32 %17, 16
  br i1 %25, label %57, label %26

26:                                               ; preds = %19
  %27 = and i64 %20, 4294967280
  %28 = and i64 %20, 15
  %29 = shl nuw nsw i64 %27, 3
  %30 = getelementptr i8, ptr %24, i64 %29
  %31 = shl nuw nsw i64 %27, 2
  %32 = getelementptr i8, ptr %22, i64 %31
  br label %33

33:                                               ; preds = %33, %26
  %34 = phi i64 [ 0, %26 ], [ %53, %33 ]
  %35 = shl i64 %34, 3
  %36 = getelementptr i8, ptr %24, i64 %35
  %37 = shl i64 %34, 2
  %38 = getelementptr i8, ptr %22, i64 %37
  %39 = load <4 x float>, ptr %38, align 4, !tbaa !165
  %40 = getelementptr float, ptr %38, i64 4
  %41 = load <4 x float>, ptr %40, align 4, !tbaa !165
  %42 = getelementptr float, ptr %38, i64 8
  %43 = load <4 x float>, ptr %42, align 4, !tbaa !165
  %44 = getelementptr float, ptr %38, i64 12
  %45 = load <4 x float>, ptr %44, align 4, !tbaa !165
  %46 = fpext <4 x float> %39 to <4 x double>
  %47 = fpext <4 x float> %41 to <4 x double>
  %48 = fpext <4 x float> %43 to <4 x double>
  %49 = fpext <4 x float> %45 to <4 x double>
  store <4 x double> %46, ptr %36, align 8, !tbaa !26
  %50 = getelementptr double, ptr %36, i64 4
  store <4 x double> %47, ptr %50, align 8, !tbaa !26
  %51 = getelementptr double, ptr %36, i64 8
  store <4 x double> %48, ptr %51, align 8, !tbaa !26
  %52 = getelementptr double, ptr %36, i64 12
  store <4 x double> %49, ptr %52, align 8, !tbaa !26
  %53 = add nuw i64 %34, 16
  %54 = icmp eq i64 %53, %27
  br i1 %54, label %55, label %33, !llvm.loop !473

55:                                               ; preds = %33
  %56 = icmp eq i64 %27, %20
  br i1 %56, label %71, label %57

57:                                               ; preds = %19, %55
  %58 = phi i64 [ %20, %19 ], [ %28, %55 ]
  %59 = phi ptr [ %24, %19 ], [ %30, %55 ]
  %60 = phi ptr [ %22, %19 ], [ %32, %55 ]
  br label %61

61:                                               ; preds = %57, %61
  %62 = phi i64 [ %69, %61 ], [ %58, %57 ]
  %63 = phi ptr [ %68, %61 ], [ %59, %57 ]
  %64 = phi ptr [ %67, %61 ], [ %60, %57 ]
  %65 = load float, ptr %64, align 4, !tbaa !165
  %66 = fpext float %65 to double
  store double %66, ptr %63, align 8, !tbaa !26
  %67 = getelementptr inbounds float, ptr %64, i64 1
  %68 = getelementptr inbounds double, ptr %63, i64 1
  %69 = add nsw i64 %62, -1
  %70 = icmp ugt i64 %62, 1
  br i1 %70, label %61, label %71, !llvm.loop !474

71:                                               ; preds = %61, %55, %16, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEaSIdEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !161
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !161
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %71, label %16

16:                                               ; preds = %13
  %17 = load i32, ptr %3, align 8, !tbaa !8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %71, label %19

19:                                               ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !24
  %23 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !164
  %25 = icmp ult i32 %17, 16
  br i1 %25, label %57, label %26

26:                                               ; preds = %19
  %27 = and i64 %20, 4294967280
  %28 = and i64 %20, 15
  %29 = shl nuw nsw i64 %27, 2
  %30 = getelementptr i8, ptr %24, i64 %29
  %31 = shl nuw nsw i64 %27, 3
  %32 = getelementptr i8, ptr %22, i64 %31
  br label %33

33:                                               ; preds = %33, %26
  %34 = phi i64 [ 0, %26 ], [ %53, %33 ]
  %35 = shl i64 %34, 2
  %36 = getelementptr i8, ptr %24, i64 %35
  %37 = shl i64 %34, 3
  %38 = getelementptr i8, ptr %22, i64 %37
  %39 = load <4 x double>, ptr %38, align 8, !tbaa !26
  %40 = getelementptr double, ptr %38, i64 4
  %41 = load <4 x double>, ptr %40, align 8, !tbaa !26
  %42 = getelementptr double, ptr %38, i64 8
  %43 = load <4 x double>, ptr %42, align 8, !tbaa !26
  %44 = getelementptr double, ptr %38, i64 12
  %45 = load <4 x double>, ptr %44, align 8, !tbaa !26
  %46 = fptrunc <4 x double> %39 to <4 x float>
  %47 = fptrunc <4 x double> %41 to <4 x float>
  %48 = fptrunc <4 x double> %43 to <4 x float>
  %49 = fptrunc <4 x double> %45 to <4 x float>
  store <4 x float> %46, ptr %36, align 4, !tbaa !165
  %50 = getelementptr float, ptr %36, i64 4
  store <4 x float> %47, ptr %50, align 4, !tbaa !165
  %51 = getelementptr float, ptr %36, i64 8
  store <4 x float> %48, ptr %51, align 4, !tbaa !165
  %52 = getelementptr float, ptr %36, i64 12
  store <4 x float> %49, ptr %52, align 4, !tbaa !165
  %53 = add nuw i64 %34, 16
  %54 = icmp eq i64 %53, %27
  br i1 %54, label %55, label %33, !llvm.loop !475

55:                                               ; preds = %33
  %56 = icmp eq i64 %27, %20
  br i1 %56, label %71, label %57

57:                                               ; preds = %19, %55
  %58 = phi i64 [ %20, %19 ], [ %28, %55 ]
  %59 = phi ptr [ %24, %19 ], [ %30, %55 ]
  %60 = phi ptr [ %22, %19 ], [ %32, %55 ]
  br label %61

61:                                               ; preds = %57, %61
  %62 = phi i64 [ %69, %61 ], [ %58, %57 ]
  %63 = phi ptr [ %68, %61 ], [ %59, %57 ]
  %64 = phi ptr [ %67, %61 ], [ %60, %57 ]
  %65 = load double, ptr %64, align 8, !tbaa !26
  %66 = fptrunc double %65 to float
  store float %66, ptr %63, align 4, !tbaa !165
  %67 = getelementptr inbounds double, ptr %64, i64 1
  %68 = getelementptr inbounds float, ptr %63, i64 1
  %69 = add nsw i64 %62, -1
  %70 = icmp ugt i64 %62, 1
  br i1 %70, label %61, label %71, !llvm.loop !476

71:                                               ; preds = %61, %55, %16, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEaSIdEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !271
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !271
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %67, label %16

16:                                               ; preds = %13
  %17 = load i32, ptr %3, align 8, !tbaa !8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %67, label %19

19:                                               ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !24
  %23 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !274
  %25 = and i64 %20, 3
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %19, %27
  %28 = phi i64 [ %36, %27 ], [ %20, %19 ]
  %29 = phi ptr [ %35, %27 ], [ %24, %19 ]
  %30 = phi ptr [ %34, %27 ], [ %22, %19 ]
  %31 = phi i64 [ %37, %27 ], [ 0, %19 ]
  %32 = load double, ptr %30, align 8, !tbaa !26
  %33 = fpext double %32 to x86_fp80
  store x86_fp80 %33, ptr %29, align 16, !tbaa !275
  %34 = getelementptr inbounds double, ptr %30, i64 1
  %35 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  %36 = add nsw i64 %28, -1
  %37 = add i64 %31, 1
  %38 = icmp eq i64 %37, %25
  br i1 %38, label %39, label %27, !llvm.loop !477

39:                                               ; preds = %27, %19
  %40 = phi i64 [ %20, %19 ], [ %36, %27 ]
  %41 = phi ptr [ %24, %19 ], [ %35, %27 ]
  %42 = phi ptr [ %22, %19 ], [ %34, %27 ]
  %43 = icmp ult i32 %17, 4
  br i1 %43, label %67, label %44

44:                                               ; preds = %39, %44
  %45 = phi i64 [ %64, %44 ], [ %40, %39 ]
  %46 = phi ptr [ %63, %44 ], [ %41, %39 ]
  %47 = phi ptr [ %62, %44 ], [ %42, %39 ]
  %48 = load double, ptr %47, align 8, !tbaa !26
  %49 = fpext double %48 to x86_fp80
  store x86_fp80 %49, ptr %46, align 16, !tbaa !275
  %50 = getelementptr inbounds double, ptr %47, i64 1
  %51 = getelementptr inbounds x86_fp80, ptr %46, i64 1
  %52 = load double, ptr %50, align 8, !tbaa !26
  %53 = fpext double %52 to x86_fp80
  store x86_fp80 %53, ptr %51, align 16, !tbaa !275
  %54 = getelementptr inbounds double, ptr %47, i64 2
  %55 = getelementptr inbounds x86_fp80, ptr %46, i64 2
  %56 = load double, ptr %54, align 8, !tbaa !26
  %57 = fpext double %56 to x86_fp80
  store x86_fp80 %57, ptr %55, align 16, !tbaa !275
  %58 = getelementptr inbounds double, ptr %47, i64 3
  %59 = getelementptr inbounds x86_fp80, ptr %46, i64 3
  %60 = load double, ptr %58, align 8, !tbaa !26
  %61 = fpext double %60 to x86_fp80
  store x86_fp80 %61, ptr %59, align 16, !tbaa !275
  %62 = getelementptr inbounds double, ptr %47, i64 4
  %63 = getelementptr inbounds x86_fp80, ptr %46, i64 4
  %64 = add nsw i64 %45, -4
  %65 = add i64 %45, -5
  %66 = icmp ult i64 %65, -2
  br i1 %66, label %44, label %67

67:                                               ; preds = %39, %44, %16, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSIeEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !8
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %67, label %16

16:                                               ; preds = %13
  %17 = load i32, ptr %3, align 8, !tbaa !271
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %67, label %19

19:                                               ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !274
  %23 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !24
  %25 = and i64 %20, 3
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %19, %27
  %28 = phi i64 [ %36, %27 ], [ %20, %19 ]
  %29 = phi ptr [ %35, %27 ], [ %24, %19 ]
  %30 = phi ptr [ %34, %27 ], [ %22, %19 ]
  %31 = phi i64 [ %37, %27 ], [ 0, %19 ]
  %32 = load x86_fp80, ptr %30, align 16, !tbaa !275
  %33 = fptrunc x86_fp80 %32 to double
  store double %33, ptr %29, align 8, !tbaa !26
  %34 = getelementptr inbounds x86_fp80, ptr %30, i64 1
  %35 = getelementptr inbounds double, ptr %29, i64 1
  %36 = add nsw i64 %28, -1
  %37 = add i64 %31, 1
  %38 = icmp eq i64 %37, %25
  br i1 %38, label %39, label %27, !llvm.loop !478

39:                                               ; preds = %27, %19
  %40 = phi i64 [ %20, %19 ], [ %36, %27 ]
  %41 = phi ptr [ %24, %19 ], [ %35, %27 ]
  %42 = phi ptr [ %22, %19 ], [ %34, %27 ]
  %43 = icmp ult i32 %17, 4
  br i1 %43, label %67, label %44

44:                                               ; preds = %39, %44
  %45 = phi i64 [ %64, %44 ], [ %40, %39 ]
  %46 = phi ptr [ %63, %44 ], [ %41, %39 ]
  %47 = phi ptr [ %62, %44 ], [ %42, %39 ]
  %48 = load x86_fp80, ptr %47, align 16, !tbaa !275
  %49 = fptrunc x86_fp80 %48 to double
  store double %49, ptr %46, align 8, !tbaa !26
  %50 = getelementptr inbounds x86_fp80, ptr %47, i64 1
  %51 = getelementptr inbounds double, ptr %46, i64 1
  %52 = load x86_fp80, ptr %50, align 16, !tbaa !275
  %53 = fptrunc x86_fp80 %52 to double
  store double %53, ptr %51, align 8, !tbaa !26
  %54 = getelementptr inbounds x86_fp80, ptr %47, i64 2
  %55 = getelementptr inbounds double, ptr %46, i64 2
  %56 = load x86_fp80, ptr %54, align 16, !tbaa !275
  %57 = fptrunc x86_fp80 %56 to double
  store double %57, ptr %55, align 8, !tbaa !26
  %58 = getelementptr inbounds x86_fp80, ptr %47, i64 3
  %59 = getelementptr inbounds double, ptr %46, i64 3
  %60 = load x86_fp80, ptr %58, align 16, !tbaa !275
  %61 = fptrunc x86_fp80 %60 to double
  store double %61, ptr %59, align 8, !tbaa !26
  %62 = getelementptr inbounds x86_fp80, ptr %47, i64 4
  %63 = getelementptr inbounds double, ptr %46, i64 4
  %64 = add nsw i64 %45, -4
  %65 = add i64 %45, -5
  %66 = icmp ult i64 %65, -2
  br i1 %66, label %44, label %67

67:                                               ; preds = %39, %44, %16, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEaSIfEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !161
  %5 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !271
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !271
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %67, label %16

16:                                               ; preds = %13
  %17 = load i32, ptr %3, align 8, !tbaa !161
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %67, label %19

19:                                               ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.dealii::Vector.8", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !164
  %23 = getelementptr inbounds %"class.dealii::Vector.16", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !274
  %25 = and i64 %20, 3
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %19, %27
  %28 = phi i64 [ %36, %27 ], [ %20, %19 ]
  %29 = phi ptr [ %35, %27 ], [ %24, %19 ]
  %30 = phi ptr [ %34, %27 ], [ %22, %19 ]
  %31 = phi i64 [ %37, %27 ], [ 0, %19 ]
  %32 = load float, ptr %30, align 4, !tbaa !165
  %33 = fpext float %32 to x86_fp80
  store x86_fp80 %33, ptr %29, align 16, !tbaa !275
  %34 = getelementptr inbounds float, ptr %30, i64 1
  %35 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  %36 = add nsw i64 %28, -1
  %37 = add i64 %31, 1
  %38 = icmp eq i64 %37, %25
  br i1 %38, label %39, label %27, !llvm.loop !479

39:                                               ; preds = %27, %19
  %40 = phi i64 [ %20, %19 ], [ %36, %27 ]
  %41 = phi ptr [ %24, %19 ], [ %35, %27 ]
  %42 = phi ptr [ %22, %19 ], [ %34, %27 ]
  %43 = icmp ult i32 %17, 4
  br i1 %43, label %67, label %44

44:                                               ; preds = %39, %44
  %45 = phi i64 [ %64, %44 ], [ %40, %39 ]
  %46 = phi ptr [ %63, %44 ], [ %41, %39 ]
  %47 = phi ptr [ %62, %44 ], [ %42, %39 ]
  %48 = load float, ptr %47, align 4, !tbaa !165
  %49 = fpext float %48 to x86_fp80
  store x86_fp80 %49, ptr %46, align 16, !tbaa !275
  %50 = getelementptr inbounds float, ptr %47, i64 1
  %51 = getelementptr inbounds x86_fp80, ptr %46, i64 1
  %52 = load float, ptr %50, align 4, !tbaa !165
  %53 = fpext float %52 to x86_fp80
  store x86_fp80 %53, ptr %51, align 16, !tbaa !275
  %54 = getelementptr inbounds float, ptr %47, i64 2
  %55 = getelementptr inbounds x86_fp80, ptr %46, i64 2
  %56 = load float, ptr %54, align 4, !tbaa !165
  %57 = fpext float %56 to x86_fp80
  store x86_fp80 %57, ptr %55, align 16, !tbaa !275
  %58 = getelementptr inbounds float, ptr %47, i64 3
  %59 = getelementptr inbounds x86_fp80, ptr %46, i64 3
  %60 = load float, ptr %58, align 4, !tbaa !165
  %61 = fpext float %60 to x86_fp80
  store x86_fp80 %61, ptr %59, align 16, !tbaa !275
  %62 = getelementptr inbounds float, ptr %47, i64 4
  %63 = getelementptr inbounds x86_fp80, ptr %46, i64 4
  %64 = add nsw i64 %45, -4
  %65 = add i64 %45, -5
  %66 = icmp ult i64 %65, -2
  br i1 %66, label %44, label %67

67:                                               ; preds = %39, %44, %16, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEaSIeEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !271
  %5 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !161
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !161
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %67, label %16

16:                                               ; preds = %13
  %17 = load i32, ptr %3, align 8, !tbaa !271
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %67, label %19

19:                                               ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.dealii::Vector.16", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !274
  %23 = getelementptr inbounds %"class.dealii::Vector.8", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !164
  %25 = and i64 %20, 3
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %19, %27
  %28 = phi i64 [ %36, %27 ], [ %20, %19 ]
  %29 = phi ptr [ %35, %27 ], [ %24, %19 ]
  %30 = phi ptr [ %34, %27 ], [ %22, %19 ]
  %31 = phi i64 [ %37, %27 ], [ 0, %19 ]
  %32 = load x86_fp80, ptr %30, align 16, !tbaa !275
  %33 = fptrunc x86_fp80 %32 to float
  store float %33, ptr %29, align 4, !tbaa !165
  %34 = getelementptr inbounds x86_fp80, ptr %30, i64 1
  %35 = getelementptr inbounds float, ptr %29, i64 1
  %36 = add nsw i64 %28, -1
  %37 = add i64 %31, 1
  %38 = icmp eq i64 %37, %25
  br i1 %38, label %39, label %27, !llvm.loop !480

39:                                               ; preds = %27, %19
  %40 = phi i64 [ %20, %19 ], [ %36, %27 ]
  %41 = phi ptr [ %24, %19 ], [ %35, %27 ]
  %42 = phi ptr [ %22, %19 ], [ %34, %27 ]
  %43 = icmp ult i32 %17, 4
  br i1 %43, label %67, label %44

44:                                               ; preds = %39, %44
  %45 = phi i64 [ %64, %44 ], [ %40, %39 ]
  %46 = phi ptr [ %63, %44 ], [ %41, %39 ]
  %47 = phi ptr [ %62, %44 ], [ %42, %39 ]
  %48 = load x86_fp80, ptr %47, align 16, !tbaa !275
  %49 = fptrunc x86_fp80 %48 to float
  store float %49, ptr %46, align 4, !tbaa !165
  %50 = getelementptr inbounds x86_fp80, ptr %47, i64 1
  %51 = getelementptr inbounds float, ptr %46, i64 1
  %52 = load x86_fp80, ptr %50, align 16, !tbaa !275
  %53 = fptrunc x86_fp80 %52 to float
  store float %53, ptr %51, align 4, !tbaa !165
  %54 = getelementptr inbounds x86_fp80, ptr %47, i64 2
  %55 = getelementptr inbounds float, ptr %46, i64 2
  %56 = load x86_fp80, ptr %54, align 16, !tbaa !275
  %57 = fptrunc x86_fp80 %56 to float
  store float %57, ptr %55, align 4, !tbaa !165
  %58 = getelementptr inbounds x86_fp80, ptr %47, i64 3
  %59 = getelementptr inbounds float, ptr %46, i64 3
  %60 = load x86_fp80, ptr %58, align 16, !tbaa !275
  %61 = fptrunc x86_fp80 %60 to float
  store float %61, ptr %59, align 4, !tbaa !165
  %62 = getelementptr inbounds x86_fp80, ptr %47, i64 4
  %63 = getelementptr inbounds float, ptr %46, i64 4
  %64 = add nsw i64 %45, -4
  %65 = add i64 %45, -5
  %66 = icmp ult i64 %65, -2
  br i1 %66, label %44, label %67

67:                                               ; preds = %39, %44, %16, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIdEEaSIS1_IfEEERS3_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !330
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !330
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %71, label %16

16:                                               ; preds = %13
  %17 = load i32, ptr %3, align 8, !tbaa !341
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %71, label %19

19:                                               ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !344
  %23 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !333
  %25 = icmp ult i32 %17, 8
  br i1 %25, label %57, label %26

26:                                               ; preds = %19
  %27 = shl nuw nsw i64 %20, 4
  %28 = getelementptr i8, ptr %24, i64 %27
  %29 = shl nuw nsw i64 %20, 3
  %30 = getelementptr i8, ptr %22, i64 %29
  %31 = icmp ult ptr %24, %30
  %32 = icmp ult ptr %22, %28
  %33 = and i1 %31, %32
  br i1 %33, label %57, label %34

34:                                               ; preds = %26
  %35 = and i64 %20, 4294967292
  %36 = and i64 %20, 3
  %37 = shl nuw nsw i64 %35, 4
  %38 = getelementptr i8, ptr %24, i64 %37
  %39 = shl nuw nsw i64 %35, 3
  %40 = getelementptr i8, ptr %22, i64 %39
  br label %41

41:                                               ; preds = %41, %34
  %42 = phi i64 [ 0, %34 ], [ %53, %41 ]
  %43 = shl i64 %42, 4
  %44 = getelementptr i8, ptr %24, i64 %43
  %45 = shl i64 %42, 3
  %46 = getelementptr i8, ptr %22, i64 %45
  %47 = load <8 x float>, ptr %46, align 4
  %48 = shufflevector <8 x float> %47, <8 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %49 = shufflevector <8 x float> %47, <8 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %50 = fpext <4 x float> %48 to <4 x double>
  %51 = fpext <4 x float> %49 to <4 x double>
  %52 = shufflevector <4 x double> %50, <4 x double> %51, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x double> %52, ptr %44, align 8
  %53 = add nuw i64 %42, 4
  %54 = icmp eq i64 %53, %35
  br i1 %54, label %55, label %41, !llvm.loop !481

55:                                               ; preds = %41
  %56 = icmp eq i64 %35, %20
  br i1 %56, label %71, label %57

57:                                               ; preds = %26, %19, %55
  %58 = phi i64 [ %20, %26 ], [ %20, %19 ], [ %36, %55 ]
  %59 = phi ptr [ %24, %26 ], [ %24, %19 ], [ %38, %55 ]
  %60 = phi ptr [ %22, %26 ], [ %22, %19 ], [ %40, %55 ]
  br label %61

61:                                               ; preds = %57, %61
  %62 = phi i64 [ %69, %61 ], [ %58, %57 ]
  %63 = phi ptr [ %68, %61 ], [ %59, %57 ]
  %64 = phi ptr [ %67, %61 ], [ %60, %57 ]
  %65 = load <2 x float>, ptr %64, align 4
  %66 = fpext <2 x float> %65 to <2 x double>
  store <2 x double> %66, ptr %63, align 8
  %67 = getelementptr inbounds %"class.std::complex.33", ptr %64, i64 1
  %68 = getelementptr inbounds %"class.std::complex", ptr %63, i64 1
  %69 = add nsw i64 %62, -1
  %70 = icmp ugt i64 %62, 1
  br i1 %70, label %61, label %71, !llvm.loop !482

71:                                               ; preds = %61, %55, %16, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIfEEaSIS1_IdEEERS3_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !341
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !341
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %75, label %16

16:                                               ; preds = %13
  %17 = load i32, ptr %3, align 8, !tbaa !330
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %75, label %19

19:                                               ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !333
  %23 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !344
  %25 = icmp ult i32 %17, 4
  br i1 %25, label %61, label %26

26:                                               ; preds = %19
  %27 = and i64 %20, 4294967292
  %28 = and i64 %20, 3
  %29 = shl nuw nsw i64 %27, 3
  %30 = getelementptr i8, ptr %24, i64 %29
  %31 = shl nuw nsw i64 %27, 4
  %32 = getelementptr i8, ptr %22, i64 %31
  br label %33

33:                                               ; preds = %33, %26
  %34 = phi i64 [ 0, %26 ], [ %57, %33 ]
  %35 = shl i64 %34, 3
  %36 = getelementptr i8, ptr %24, i64 %35
  %37 = shl i64 %34, 3
  %38 = or i64 %37, 16
  %39 = getelementptr i8, ptr %24, i64 %38
  %40 = shl i64 %34, 4
  %41 = getelementptr i8, ptr %22, i64 %40
  %42 = shl i64 %34, 4
  %43 = or i64 %42, 32
  %44 = getelementptr i8, ptr %22, i64 %43
  %45 = load <4 x double>, ptr %41, align 8, !tbaa !26
  %46 = load <4 x double>, ptr %44, align 8, !tbaa !26
  %47 = shufflevector <4 x double> %45, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %48 = shufflevector <4 x double> %46, <4 x double> poison, <2 x i32> <i32 0, i32 2>
  %49 = shufflevector <4 x double> %45, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %50 = shufflevector <4 x double> %46, <4 x double> poison, <2 x i32> <i32 1, i32 3>
  %51 = fptrunc <2 x double> %47 to <2 x float>
  %52 = fptrunc <2 x double> %48 to <2 x float>
  %53 = fptrunc <2 x double> %49 to <2 x float>
  %54 = fptrunc <2 x double> %50 to <2 x float>
  %55 = shufflevector <2 x float> %51, <2 x float> %53, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x float> %55, ptr %36, align 4, !tbaa !165
  %56 = shufflevector <2 x float> %52, <2 x float> %54, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x float> %56, ptr %39, align 4, !tbaa !165
  %57 = add nuw i64 %34, 4
  %58 = icmp eq i64 %57, %27
  br i1 %58, label %59, label %33, !llvm.loop !483

59:                                               ; preds = %33
  %60 = icmp eq i64 %27, %20
  br i1 %60, label %75, label %61

61:                                               ; preds = %19, %59
  %62 = phi i64 [ %20, %19 ], [ %28, %59 ]
  %63 = phi ptr [ %24, %19 ], [ %30, %59 ]
  %64 = phi ptr [ %22, %19 ], [ %32, %59 ]
  br label %65

65:                                               ; preds = %61, %65
  %66 = phi i64 [ %73, %65 ], [ %62, %61 ]
  %67 = phi ptr [ %72, %65 ], [ %63, %61 ]
  %68 = phi ptr [ %71, %65 ], [ %64, %61 ]
  %69 = load <2 x double>, ptr %68, align 8, !tbaa !26
  %70 = fptrunc <2 x double> %69 to <2 x float>
  store <2 x float> %70, ptr %67, align 4, !tbaa !165
  %71 = getelementptr inbounds %"class.std::complex", ptr %68, i64 1
  %72 = getelementptr inbounds %"class.std::complex.33", ptr %67, i64 1
  %73 = add nsw i64 %66, -1
  %74 = icmp ugt i64 %66, 1
  br i1 %74, label %65, label %75, !llvm.loop !484

75:                                               ; preds = %65, %59, %16, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIeEEaSIS1_IdEEERS3_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !330
  %5 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !348
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !348
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %13
  %17 = load i32, ptr %3, align 8, !tbaa !330
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %65, label %19

19:                                               ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.dealii::Vector.24", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !333
  %23 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !351
  %25 = and i64 %20, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %19
  %28 = load double, ptr %22, align 8
  %29 = getelementptr inbounds { double, double }, ptr %22, i64 0, i32 1
  %30 = load double, ptr %29, align 8
  %31 = fpext double %28 to x86_fp80
  %32 = fpext double %30 to x86_fp80
  %33 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %24, i64 0, i32 1
  store x86_fp80 %31, ptr %24, align 16
  store x86_fp80 %32, ptr %33, align 16
  %34 = getelementptr inbounds %"class.std::complex", ptr %22, i64 1
  %35 = getelementptr inbounds %"class.std::complex.42", ptr %24, i64 1
  %36 = add nsw i64 %20, -1
  br label %37

37:                                               ; preds = %27, %19
  %38 = phi i64 [ %20, %19 ], [ %36, %27 ]
  %39 = phi ptr [ %24, %19 ], [ %35, %27 ]
  %40 = phi ptr [ %22, %19 ], [ %34, %27 ]
  %41 = icmp eq i32 %17, 1
  br i1 %41, label %65, label %42

42:                                               ; preds = %37, %42
  %43 = phi i64 [ %62, %42 ], [ %38, %37 ]
  %44 = phi ptr [ %61, %42 ], [ %39, %37 ]
  %45 = phi ptr [ %60, %42 ], [ %40, %37 ]
  %46 = load double, ptr %45, align 8
  %47 = getelementptr inbounds { double, double }, ptr %45, i64 0, i32 1
  %48 = load double, ptr %47, align 8
  %49 = fpext double %46 to x86_fp80
  %50 = fpext double %48 to x86_fp80
  %51 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %44, i64 0, i32 1
  store x86_fp80 %49, ptr %44, align 16
  store x86_fp80 %50, ptr %51, align 16
  %52 = getelementptr inbounds %"class.std::complex", ptr %45, i64 1
  %53 = getelementptr inbounds %"class.std::complex.42", ptr %44, i64 1
  %54 = load double, ptr %52, align 8
  %55 = getelementptr inbounds %"class.std::complex", ptr %45, i64 1, i32 0, i32 1
  %56 = load double, ptr %55, align 8
  %57 = fpext double %54 to x86_fp80
  %58 = fpext double %56 to x86_fp80
  %59 = getelementptr inbounds %"class.std::complex.42", ptr %44, i64 1, i32 0, i32 1
  store x86_fp80 %57, ptr %53, align 16
  store x86_fp80 %58, ptr %59, align 16
  %60 = getelementptr inbounds %"class.std::complex", ptr %45, i64 2
  %61 = getelementptr inbounds %"class.std::complex.42", ptr %44, i64 2
  %62 = add nsw i64 %43, -2
  %63 = add i64 %43, -3
  %64 = icmp ult i64 %63, -2
  br i1 %64, label %42, label %65

65:                                               ; preds = %37, %42, %16, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIdEEaSIS1_IeEEERS3_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !330
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !330
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %13
  %17 = load i32, ptr %3, align 8, !tbaa !348
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %65, label %19

19:                                               ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !351
  %23 = getelementptr inbounds %"class.dealii::Vector.24", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !333
  %25 = and i64 %20, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %19
  %28 = load x86_fp80, ptr %22, align 16
  %29 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %22, i64 0, i32 1
  %30 = load x86_fp80, ptr %29, align 16
  %31 = fptrunc x86_fp80 %28 to double
  %32 = fptrunc x86_fp80 %30 to double
  %33 = getelementptr inbounds { double, double }, ptr %24, i64 0, i32 1
  store double %31, ptr %24, align 8
  store double %32, ptr %33, align 8
  %34 = getelementptr inbounds %"class.std::complex.42", ptr %22, i64 1
  %35 = getelementptr inbounds %"class.std::complex", ptr %24, i64 1
  %36 = add nsw i64 %20, -1
  br label %37

37:                                               ; preds = %27, %19
  %38 = phi i64 [ %20, %19 ], [ %36, %27 ]
  %39 = phi ptr [ %24, %19 ], [ %35, %27 ]
  %40 = phi ptr [ %22, %19 ], [ %34, %27 ]
  %41 = icmp eq i32 %17, 1
  br i1 %41, label %65, label %42

42:                                               ; preds = %37, %42
  %43 = phi i64 [ %62, %42 ], [ %38, %37 ]
  %44 = phi ptr [ %61, %42 ], [ %39, %37 ]
  %45 = phi ptr [ %60, %42 ], [ %40, %37 ]
  %46 = load x86_fp80, ptr %45, align 16
  %47 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %45, i64 0, i32 1
  %48 = load x86_fp80, ptr %47, align 16
  %49 = fptrunc x86_fp80 %46 to double
  %50 = fptrunc x86_fp80 %48 to double
  %51 = getelementptr inbounds { double, double }, ptr %44, i64 0, i32 1
  store double %49, ptr %44, align 8
  store double %50, ptr %51, align 8
  %52 = getelementptr inbounds %"class.std::complex.42", ptr %45, i64 1
  %53 = getelementptr inbounds %"class.std::complex", ptr %44, i64 1
  %54 = load x86_fp80, ptr %52, align 16
  %55 = getelementptr inbounds %"class.std::complex.42", ptr %45, i64 1, i32 0, i32 1
  %56 = load x86_fp80, ptr %55, align 16
  %57 = fptrunc x86_fp80 %54 to double
  %58 = fptrunc x86_fp80 %56 to double
  %59 = getelementptr inbounds %"class.std::complex", ptr %44, i64 1, i32 0, i32 1
  store double %57, ptr %53, align 8
  store double %58, ptr %59, align 8
  %60 = getelementptr inbounds %"class.std::complex.42", ptr %45, i64 2
  %61 = getelementptr inbounds %"class.std::complex", ptr %44, i64 2
  %62 = add nsw i64 %43, -2
  %63 = add i64 %43, -3
  %64 = icmp ult i64 %63, -2
  br i1 %64, label %42, label %65

65:                                               ; preds = %37, %42, %16, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIeEEaSIS1_IfEEERS3_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !341
  %5 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !348
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !348
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %13
  %17 = load i32, ptr %3, align 8, !tbaa !341
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %65, label %19

19:                                               ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.dealii::Vector.32", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !344
  %23 = getelementptr inbounds %"class.dealii::Vector.41", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !351
  %25 = and i64 %20, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %19
  %28 = load float, ptr %22, align 4
  %29 = getelementptr inbounds { float, float }, ptr %22, i64 0, i32 1
  %30 = load float, ptr %29, align 4
  %31 = fpext float %28 to x86_fp80
  %32 = fpext float %30 to x86_fp80
  %33 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %24, i64 0, i32 1
  store x86_fp80 %31, ptr %24, align 16
  store x86_fp80 %32, ptr %33, align 16
  %34 = getelementptr inbounds %"class.std::complex.33", ptr %22, i64 1
  %35 = getelementptr inbounds %"class.std::complex.42", ptr %24, i64 1
  %36 = add nsw i64 %20, -1
  br label %37

37:                                               ; preds = %27, %19
  %38 = phi i64 [ %20, %19 ], [ %36, %27 ]
  %39 = phi ptr [ %24, %19 ], [ %35, %27 ]
  %40 = phi ptr [ %22, %19 ], [ %34, %27 ]
  %41 = icmp eq i32 %17, 1
  br i1 %41, label %65, label %42

42:                                               ; preds = %37, %42
  %43 = phi i64 [ %62, %42 ], [ %38, %37 ]
  %44 = phi ptr [ %61, %42 ], [ %39, %37 ]
  %45 = phi ptr [ %60, %42 ], [ %40, %37 ]
  %46 = load float, ptr %45, align 4
  %47 = getelementptr inbounds { float, float }, ptr %45, i64 0, i32 1
  %48 = load float, ptr %47, align 4
  %49 = fpext float %46 to x86_fp80
  %50 = fpext float %48 to x86_fp80
  %51 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %44, i64 0, i32 1
  store x86_fp80 %49, ptr %44, align 16
  store x86_fp80 %50, ptr %51, align 16
  %52 = getelementptr inbounds %"class.std::complex.33", ptr %45, i64 1
  %53 = getelementptr inbounds %"class.std::complex.42", ptr %44, i64 1
  %54 = load float, ptr %52, align 4
  %55 = getelementptr inbounds %"class.std::complex.33", ptr %45, i64 1, i32 0, i32 1
  %56 = load float, ptr %55, align 4
  %57 = fpext float %54 to x86_fp80
  %58 = fpext float %56 to x86_fp80
  %59 = getelementptr inbounds %"class.std::complex.42", ptr %44, i64 1, i32 0, i32 1
  store x86_fp80 %57, ptr %53, align 16
  store x86_fp80 %58, ptr %59, align 16
  %60 = getelementptr inbounds %"class.std::complex.33", ptr %45, i64 2
  %61 = getelementptr inbounds %"class.std::complex.42", ptr %44, i64 2
  %62 = add nsw i64 %43, -2
  %63 = add i64 %43, -3
  %64 = icmp ult i64 %63, -2
  br i1 %64, label %42, label %65

65:                                               ; preds = %37, %42, %16, %13
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorISt7complexIfEEaSIS1_IeEEERS3_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !348
  %5 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !341
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  tail call void %11(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %4, i1 noundef zeroext true)
  %12 = load i32, ptr %5, align 8, !tbaa !341
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %13
  %17 = load i32, ptr %3, align 8, !tbaa !348
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %65, label %19

19:                                               ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.dealii::Vector.41", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !351
  %23 = getelementptr inbounds %"class.dealii::Vector.32", ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !344
  %25 = and i64 %20, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %19
  %28 = load x86_fp80, ptr %22, align 16, !tbaa !275
  %29 = fptrunc x86_fp80 %28 to float
  store float %29, ptr %24, align 4, !tbaa !165
  %30 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %22, i64 0, i32 1
  %31 = load x86_fp80, ptr %30, align 16, !tbaa !275
  %32 = fptrunc x86_fp80 %31 to float
  %33 = getelementptr inbounds { float, float }, ptr %24, i64 0, i32 1
  store float %32, ptr %33, align 4, !tbaa !165
  %34 = getelementptr inbounds %"class.std::complex.42", ptr %22, i64 1
  %35 = getelementptr inbounds %"class.std::complex.33", ptr %24, i64 1
  %36 = add nsw i64 %20, -1
  br label %37

37:                                               ; preds = %27, %19
  %38 = phi i64 [ %20, %19 ], [ %36, %27 ]
  %39 = phi ptr [ %24, %19 ], [ %35, %27 ]
  %40 = phi ptr [ %22, %19 ], [ %34, %27 ]
  %41 = icmp eq i32 %17, 1
  br i1 %41, label %65, label %42

42:                                               ; preds = %37, %42
  %43 = phi i64 [ %62, %42 ], [ %38, %37 ]
  %44 = phi ptr [ %61, %42 ], [ %39, %37 ]
  %45 = phi ptr [ %60, %42 ], [ %40, %37 ]
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !275
  %47 = fptrunc x86_fp80 %46 to float
  store float %47, ptr %44, align 4, !tbaa !165
  %48 = getelementptr inbounds { x86_fp80, x86_fp80 }, ptr %45, i64 0, i32 1
  %49 = load x86_fp80, ptr %48, align 16, !tbaa !275
  %50 = fptrunc x86_fp80 %49 to float
  %51 = getelementptr inbounds { float, float }, ptr %44, i64 0, i32 1
  store float %50, ptr %51, align 4, !tbaa !165
  %52 = getelementptr inbounds %"class.std::complex.42", ptr %45, i64 1
  %53 = getelementptr inbounds %"class.std::complex.33", ptr %44, i64 1
  %54 = load x86_fp80, ptr %52, align 16, !tbaa !275
  %55 = fptrunc x86_fp80 %54 to float
  store float %55, ptr %53, align 4, !tbaa !165
  %56 = getelementptr inbounds %"class.std::complex.42", ptr %45, i64 1, i32 0, i32 1
  %57 = load x86_fp80, ptr %56, align 16, !tbaa !275
  %58 = fptrunc x86_fp80 %57 to float
  %59 = getelementptr inbounds %"class.std::complex.33", ptr %44, i64 1, i32 0, i32 1
  store float %58, ptr %59, align 4, !tbaa !165
  %60 = getelementptr inbounds %"class.std::complex.42", ptr %45, i64 2
  %61 = getelementptr inbounds %"class.std::complex.33", ptr %44, i64 2
  %62 = add nsw i64 %43, -2
  %63 = add i64 %43, -3
  %64 = icmp ult i64 %63, -2
  br i1 %64, label %42, label %65

65:                                               ; preds = %37, %42, %16, %13
  ret ptr %0
}

declare void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #1

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii18StandardExceptions5ExcIOD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #3 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #24
  tail call void @_ZdlPv(ptr noundef nonnull %0) #25
  ret void
}

; Function Attrs: nounwind
declare noundef ptr @_ZNK6dealii13ExceptionBase4whatEv(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #13

declare void @_ZNK6dealii13ExceptionBase10print_infoERSo(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare i64 @__isoc23_strtol(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare float @sqrtf(float noundef) local_unnamed_addr #8

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare float @powf(float noundef, float noundef) local_unnamed_addr #8

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare x86_fp80 @sqrtl(x86_fp80 noundef) local_unnamed_addr #8

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare x86_fp80 @powl(x86_fp80 noundef, x86_fp80 noundef) local_unnamed_addr #8

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8), i8 noundef signext) local_unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZSt16__throw_bad_castv() local_unnamed_addr #19

declare void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570)) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #15

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #10

declare void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @__cxa_allocate_exception(i64) local_unnamed_addr

declare void @__cxa_free_exception(ptr) local_unnamed_addr

declare void @__cxa_throw(ptr, ptr, ptr) local_unnamed_addr

declare void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), double noundef) local_unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #10

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare x86_fp80 @llvm.fabs.f80(x86_fp80) #10

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIeEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), x86_fp80 noundef) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare double @cabs(double noundef, double noundef) local_unnamed_addr #11

declare { double, double } @__muldc3(double, double, double, double) local_unnamed_addr

declare { double, double } @__divdc3(double, double, double, double) local_unnamed_addr

; Function Attrs: nounwind
declare float @cabsf(<2 x float> noundef) local_unnamed_addr #13

declare <2 x float> @__mulsc3(float, float, float, float) local_unnamed_addr

declare <2 x float> @__divsc3(float, float, float, float) local_unnamed_addr

; Function Attrs: nounwind
declare x86_fp80 @cabsl(ptr noundef byval({ x86_fp80, x86_fp80 }) align 16) local_unnamed_addr #13

declare { x86_fp80, x86_fp80 } @__mulxc3(x86_fp80, x86_fp80, x86_fp80, x86_fp80) local_unnamed_addr

declare { x86_fp80, x86_fp80 } @__divxc3(x86_fp80, x86_fp80, x86_fp80, x86_fp80) local_unnamed_addr

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x double> @llvm.fmuladd.v4f64(<4 x double>, <4 x double>, <4 x double>) #21

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x float> @llvm.fmuladd.v8f32(<8 x float>, <8 x float>, <8 x float>) #21

attributes #0 = { inlinehint sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #2 = { sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #3 = { inlinehint nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #4 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #5 = { noinline noreturn nounwind sspstrong uwtable "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #6 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #7 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #8 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #9 = { nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #10 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #11 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #12 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #13 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #14 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #15 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #16 = { inlinehint sspstrong uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #17 = { sspstrong uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #18 = { inlinehint nounwind sspstrong uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #19 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #20 = { nofree nounwind }
attributes #21 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #22 = { builtin allocsize(0) }
attributes #23 = { noreturn nounwind }
attributes #24 = { nounwind }
attributes #25 = { builtin nounwind }
attributes #26 = { noreturn }
attributes #27 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"vtable pointer", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !11, i64 72}
!9 = !{!"_ZTSN6dealii6VectorIdEE", !10, i64 0, !11, i64 72, !11, i64 76, !21, i64 80}
!10 = !{!"_ZTSN6dealii11SubscriptorE", !11, i64 8, !13, i64 16, !21, i64 64}
!11 = !{!"int", !12, i64 0}
!12 = !{!"omnipotent char", !7, i64 0}
!13 = !{!"_ZTSSt3mapIPKcjSt4lessIS1_ESaISt4pairIKS1_jEEE", !14, i64 0}
!14 = !{!"_ZTSSt8_Rb_treeIPKcSt4pairIKS1_jESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE", !15, i64 0}
!15 = !{!"_ZTSNSt8_Rb_treeIPKcSt4pairIKS1_jESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb0EEE", !16, i64 0, !18, i64 8}
!16 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessIPKcEE", !17, i64 0}
!17 = !{!"_ZTSSt4lessIPKcE"}
!18 = !{!"_ZTSSt15_Rb_tree_header", !19, i64 0, !22, i64 32}
!19 = !{!"_ZTSSt18_Rb_tree_node_base", !20, i64 0, !21, i64 8, !21, i64 16, !21, i64 24}
!20 = !{!"_ZTSSt14_Rb_tree_color", !12, i64 0}
!21 = !{!"any pointer", !12, i64 0}
!22 = !{!"long", !12, i64 0}
!23 = !{!9, !11, i64 76}
!24 = !{!9, !21, i64 80}
!25 = !{!"branch_weights", i32 2000, i32 1}
!26 = !{!27, !27, i64 0}
!27 = !{!"double", !12, i64 0}
!28 = distinct !{!28, !29, !30}
!29 = !{!"llvm.loop.isvectorized", i32 1}
!30 = !{!"llvm.loop.unroll.runtime.disable"}
!31 = distinct !{!31, !30, !29}
!32 = !{!11, !11, i64 0}
!33 = !{!21, !21, i64 0}
!34 = !{!35, !11, i64 0}
!35 = !{!"_ZTSN6dealii12BlockIndicesE", !11, i64 0, !36, i64 8}
!36 = !{!"_ZTSSt6vectorIjSaIjEE", !37, i64 0}
!37 = !{!"_ZTSSt12_Vector_baseIjSaIjEE", !38, i64 0}
!38 = !{!"_ZTSNSt12_Vector_baseIjSaIjEE12_Vector_implE", !39, i64 0}
!39 = !{!"_ZTSNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataE", !21, i64 0, !21, i64 8, !21, i64 16}
!40 = !{!39, !21, i64 0}
!41 = !{!42, !21, i64 0}
!42 = !{!"_ZTSNSt12_Vector_baseIN6dealii6VectorIdEESaIS2_EE17_Vector_impl_dataE", !21, i64 0, !21, i64 8, !21, i64 16}
!43 = distinct !{!43, !29, !30}
!44 = distinct !{!44, !45}
!45 = !{!"llvm.loop.unroll.disable"}
!46 = distinct !{!46, !29}
!47 = distinct !{!47, !45}
!48 = distinct !{!48, !45}
!49 = distinct !{!49, !45}
!50 = distinct !{!50, !45}
!51 = distinct !{!51, !45}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !29, !30}
!58 = distinct !{!58, !45}
!59 = distinct !{!59, !29}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !29, !30}
!66 = distinct !{!66, !45}
!67 = distinct !{!67, !29}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !29, !30}
!74 = distinct !{!74, !45}
!75 = distinct !{!75, !29}
!76 = distinct !{!76, !29, !30}
!77 = distinct !{!77, !30, !29}
!78 = !{!79}
!79 = distinct !{!79, !80}
!80 = distinct !{!80, !"LVerDomain"}
!81 = !{!82}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !29, !30}
!84 = distinct !{!84, !29}
!85 = !{!86}
!86 = distinct !{!86, !87}
!87 = distinct !{!87, !"LVerDomain"}
!88 = !{!89}
!89 = distinct !{!89, !87}
!90 = !{!91}
!91 = distinct !{!91, !87}
!92 = !{!86, !89}
!93 = distinct !{!93, !29, !30}
!94 = distinct !{!94, !29}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = distinct !{!100, !29, !30}
!101 = distinct !{!101, !29}
!102 = !{!103}
!103 = distinct !{!103, !104}
!104 = distinct !{!104, !"LVerDomain"}
!105 = !{!106}
!106 = distinct !{!106, !104}
!107 = distinct !{!107, !29, !30}
!108 = distinct !{!108, !29}
!109 = !{!110}
!110 = distinct !{!110, !111}
!111 = distinct !{!111, !"LVerDomain"}
!112 = !{!113, !114}
!113 = distinct !{!113, !111}
!114 = distinct !{!114, !111}
!115 = !{!113}
!116 = !{!114}
!117 = distinct !{!117, !29, !30}
!118 = distinct !{!118, !29}
!119 = !{!120}
!120 = distinct !{!120, !121}
!121 = distinct !{!121, !"LVerDomain"}
!122 = !{!123, !124, !125}
!123 = distinct !{!123, !121}
!124 = distinct !{!124, !121}
!125 = distinct !{!125, !121}
!126 = !{!123}
!127 = !{!124}
!128 = !{!125}
!129 = distinct !{!129, !29, !30}
!130 = distinct !{!130, !29}
!131 = distinct !{!131, !29, !30}
!132 = distinct !{!132, !30, !29}
!133 = distinct !{!133, !29, !30}
!134 = distinct !{!134, !30, !29}
!135 = distinct !{!135, !29, !30}
!136 = distinct !{!136, !30, !29}
!137 = distinct !{!137, !29, !30}
!138 = distinct !{!138, !29}
!139 = distinct !{!139, !29, !30}
!140 = distinct !{!140, !29}
!141 = distinct !{!141, !29, !30}
!142 = distinct !{!142, !45}
!143 = distinct !{!143, !29}
!144 = !{!145, !147, i64 32}
!145 = !{!"_ZTSSt8ios_base", !22, i64 8, !22, i64 16, !146, i64 24, !147, i64 28, !147, i64 32, !21, i64 40, !148, i64 48, !12, i64 64, !11, i64 192, !21, i64 200, !149, i64 208}
!146 = !{!"_ZTSSt13_Ios_Fmtflags", !12, i64 0}
!147 = !{!"_ZTSSt12_Ios_Iostate", !12, i64 0}
!148 = !{!"_ZTSNSt8ios_base6_WordsE", !21, i64 0, !22, i64 8}
!149 = !{!"_ZTSSt6locale", !21, i64 0}
!150 = !{!145, !146, i64 24}
!151 = !{!145, !22, i64 8}
!152 = !{!146, !146, i64 0}
!153 = !{!12, !12, i64 0}
!154 = !{!145, !22, i64 16}
!155 = !{!156, !21, i64 240}
!156 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !145, i64 0, !21, i64 216, !12, i64 224, !157, i64 225, !21, i64 232, !21, i64 240, !21, i64 248, !21, i64 256}
!157 = !{!"bool", !12, i64 0}
!158 = !{!159, !12, i64 56}
!159 = !{!"_ZTSSt5ctypeIcE", !160, i64 0, !21, i64 16, !157, i64 24, !21, i64 32, !21, i64 40, !21, i64 48, !12, i64 56, !12, i64 57, !12, i64 313, !12, i64 569}
!160 = !{!"_ZTSNSt6locale5facetE", !11, i64 8}
!161 = !{!162, !11, i64 72}
!162 = !{!"_ZTSN6dealii6VectorIfEE", !10, i64 0, !11, i64 72, !11, i64 76, !21, i64 80}
!163 = !{!162, !11, i64 76}
!164 = !{!162, !21, i64 80}
!165 = !{!166, !166, i64 0}
!166 = !{!"float", !12, i64 0}
!167 = distinct !{!167, !29, !30}
!168 = distinct !{!168, !30, !29}
!169 = !{!170, !21, i64 0}
!170 = !{!"_ZTSNSt12_Vector_baseIN6dealii6VectorIfEESaIS2_EE17_Vector_impl_dataE", !21, i64 0, !21, i64 8, !21, i64 16}
!171 = distinct !{!171, !29, !30}
!172 = distinct !{!172, !45}
!173 = distinct !{!173, !29}
!174 = distinct !{!174, !45}
!175 = distinct !{!175, !45}
!176 = distinct !{!176, !45}
!177 = distinct !{!177, !45}
!178 = distinct !{!178, !45}
!179 = !{!180}
!180 = distinct !{!180, !181}
!181 = distinct !{!181, !"LVerDomain"}
!182 = !{!183}
!183 = distinct !{!183, !181}
!184 = distinct !{!184, !29, !30}
!185 = distinct !{!185, !45}
!186 = distinct !{!186, !29}
!187 = !{!188}
!188 = distinct !{!188, !189}
!189 = distinct !{!189, !"LVerDomain"}
!190 = !{!191}
!191 = distinct !{!191, !189}
!192 = distinct !{!192, !29, !30}
!193 = distinct !{!193, !45}
!194 = distinct !{!194, !29}
!195 = !{!196}
!196 = distinct !{!196, !197}
!197 = distinct !{!197, !"LVerDomain"}
!198 = !{!199}
!199 = distinct !{!199, !197}
!200 = distinct !{!200, !29, !30}
!201 = distinct !{!201, !45}
!202 = distinct !{!202, !29}
!203 = distinct !{!203, !29, !30}
!204 = distinct !{!204, !30, !29}
!205 = !{!206}
!206 = distinct !{!206, !207}
!207 = distinct !{!207, !"LVerDomain"}
!208 = !{!209}
!209 = distinct !{!209, !207}
!210 = distinct !{!210, !29, !30}
!211 = distinct !{!211, !29}
!212 = !{!213}
!213 = distinct !{!213, !214}
!214 = distinct !{!214, !"LVerDomain"}
!215 = !{!216}
!216 = distinct !{!216, !214}
!217 = !{!218}
!218 = distinct !{!218, !214}
!219 = !{!213, !216}
!220 = distinct !{!220, !29, !30}
!221 = distinct !{!221, !29}
!222 = !{!223}
!223 = distinct !{!223, !224}
!224 = distinct !{!224, !"LVerDomain"}
!225 = !{!226}
!226 = distinct !{!226, !224}
!227 = distinct !{!227, !29, !30}
!228 = distinct !{!228, !29}
!229 = !{!230}
!230 = distinct !{!230, !231}
!231 = distinct !{!231, !"LVerDomain"}
!232 = !{!233}
!233 = distinct !{!233, !231}
!234 = distinct !{!234, !29, !30}
!235 = distinct !{!235, !29}
!236 = !{!237}
!237 = distinct !{!237, !238}
!238 = distinct !{!238, !"LVerDomain"}
!239 = !{!240, !241}
!240 = distinct !{!240, !238}
!241 = distinct !{!241, !238}
!242 = !{!240}
!243 = !{!241}
!244 = distinct !{!244, !29, !30}
!245 = distinct !{!245, !29}
!246 = !{!247}
!247 = distinct !{!247, !248}
!248 = distinct !{!248, !"LVerDomain"}
!249 = !{!250, !251, !252}
!250 = distinct !{!250, !248}
!251 = distinct !{!251, !248}
!252 = distinct !{!252, !248}
!253 = !{!250}
!254 = !{!251}
!255 = !{!252}
!256 = distinct !{!256, !29, !30}
!257 = distinct !{!257, !29}
!258 = distinct !{!258, !29, !30}
!259 = distinct !{!259, !30, !29}
!260 = distinct !{!260, !29, !30}
!261 = distinct !{!261, !30, !29}
!262 = distinct !{!262, !29, !30}
!263 = distinct !{!263, !30, !29}
!264 = distinct !{!264, !29, !30}
!265 = distinct !{!265, !29}
!266 = distinct !{!266, !29, !30}
!267 = distinct !{!267, !29}
!268 = distinct !{!268, !29, !30}
!269 = distinct !{!269, !45}
!270 = distinct !{!270, !29}
!271 = !{!272, !11, i64 72}
!272 = !{!"_ZTSN6dealii6VectorIeEE", !10, i64 0, !11, i64 72, !11, i64 76, !21, i64 80}
!273 = !{!272, !11, i64 76}
!274 = !{!272, !21, i64 80}
!275 = !{!276, !276, i64 0}
!276 = !{!"long double", !12, i64 0}
!277 = !{!278, !21, i64 0}
!278 = !{!"_ZTSNSt12_Vector_baseIN6dealii6VectorIeEESaIS2_EE17_Vector_impl_dataE", !21, i64 0, !21, i64 8, !21, i64 16}
!279 = distinct !{!279, !45}
!280 = distinct !{!280, !45}
!281 = distinct !{!281, !45}
!282 = distinct !{!282, !45}
!283 = distinct !{!283, !45}
!284 = distinct !{!284, !45}
!285 = distinct !{!285, !45}
!286 = distinct !{!286, !45}
!287 = distinct !{!287, !29, !30}
!288 = distinct !{!288, !45}
!289 = distinct !{!289, !29}
!290 = !{!291}
!291 = distinct !{!291, !292}
!292 = distinct !{!292, !"LVerDomain"}
!293 = !{!294}
!294 = distinct !{!294, !292}
!295 = distinct !{!295, !29, !30}
!296 = distinct !{!296, !45}
!297 = distinct !{!297, !29}
!298 = distinct !{!298, !45}
!299 = distinct !{!299, !29, !30}
!300 = distinct !{!300, !30, !29}
!301 = distinct !{!301, !29, !30}
!302 = distinct !{!302, !30, !29}
!303 = distinct !{!303, !29, !30}
!304 = distinct !{!304, !30, !29}
!305 = distinct !{!305, !29, !30}
!306 = distinct !{!306, !30, !29}
!307 = distinct !{!307, !45}
!308 = distinct !{!308, !29, !30}
!309 = distinct !{!309, !30, !29}
!310 = distinct !{!310, !29, !30}
!311 = distinct !{!311, !30, !29}
!312 = distinct !{!312, !45}
!313 = distinct !{!313, !45}
!314 = distinct !{!314, !29, !30}
!315 = distinct !{!315, !45}
!316 = distinct !{!316, !29}
!317 = !{!318}
!318 = distinct !{!318, !319}
!319 = distinct !{!319, !"LVerDomain"}
!320 = !{!321}
!321 = distinct !{!321, !319}
!322 = distinct !{!322, !29, !30}
!323 = distinct !{!323, !45}
!324 = distinct !{!324, !29}
!325 = distinct !{!325, !29, !30}
!326 = distinct !{!326, !30, !29}
!327 = distinct !{!327, !29, !30}
!328 = distinct !{!328, !30, !29}
!329 = distinct !{!329, !45}
!330 = !{!331, !11, i64 72}
!331 = !{!"_ZTSN6dealii6VectorISt7complexIdEEE", !10, i64 0, !11, i64 72, !11, i64 76, !21, i64 80}
!332 = !{!331, !11, i64 76}
!333 = !{!331, !21, i64 80}
!334 = !{!"branch_weights", i32 0, i32 -2147483648}
!335 = !{i64 0, i64 16, !153}
!336 = !{i64 0, i64 8, !153}
!337 = !{!338, !21, i64 0}
!338 = !{!"_ZTSNSt12_Vector_baseIN6dealii6VectorISt7complexIdEEESaIS4_EE17_Vector_impl_dataE", !21, i64 0, !21, i64 8, !21, i64 16}
!339 = distinct !{!339, !45}
!340 = !{!"branch_weights", i32 1, i32 1048575}
!341 = !{!342, !11, i64 72}
!342 = !{!"_ZTSN6dealii6VectorISt7complexIfEEE", !10, i64 0, !11, i64 72, !11, i64 76, !21, i64 80}
!343 = !{!342, !11, i64 76}
!344 = !{!342, !21, i64 80}
!345 = !{!346, !21, i64 0}
!346 = !{!"_ZTSNSt12_Vector_baseIN6dealii6VectorISt7complexIfEEESaIS4_EE17_Vector_impl_dataE", !21, i64 0, !21, i64 8, !21, i64 16}
!347 = distinct !{!347, !45}
!348 = !{!349, !11, i64 72}
!349 = !{!"_ZTSN6dealii6VectorISt7complexIeEEE", !10, i64 0, !11, i64 72, !11, i64 76, !21, i64 80}
!350 = !{!349, !11, i64 76}
!351 = !{!349, !21, i64 80}
!352 = !{!"branch_weights", i32 -2147483648, i32 0}
!353 = !{i64 0, i64 32, !153}
!354 = !{!355, !21, i64 0}
!355 = !{!"_ZTSNSt12_Vector_baseIN6dealii6VectorISt7complexIeEEESaIS4_EE17_Vector_impl_dataE", !21, i64 0, !21, i64 8, !21, i64 16}
!356 = !{!357}
!357 = distinct !{!357, !358, !"_ZNK6dealii6VectorISt7complexIeEEclEj: argument 0"}
!358 = distinct !{!358, !"_ZNK6dealii6VectorISt7complexIeEEclEj"}
!359 = distinct !{!359, !45}
!360 = !{!361}
!361 = distinct !{!361, !362, !"_ZStdvIeESt7complexIT_ERKS2_RKS1_: argument 0"}
!362 = distinct !{!362, !"_ZStdvIeESt7complexIT_ERKS2_RKS1_"}
!363 = !{!364}
!364 = distinct !{!364, !365, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!365 = distinct !{!365, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!366 = !{!367}
!367 = distinct !{!367, !368, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!368 = distinct !{!368, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!369 = !{!370}
!370 = distinct !{!370, !371, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!371 = distinct !{!371, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!372 = !{!373}
!373 = distinct !{!373, !374, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!374 = distinct !{!374, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!375 = !{!376}
!376 = distinct !{!376, !377, !"_ZStplIeESt7complexIT_ERKS2_S4_: argument 0"}
!377 = distinct !{!377, !"_ZStplIeESt7complexIT_ERKS2_S4_"}
!378 = !{!379}
!379 = distinct !{!379, !380, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!380 = distinct !{!380, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!381 = !{!382}
!382 = distinct !{!382, !383, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!383 = distinct !{!383, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!384 = !{!385}
!385 = distinct !{!385, !386, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!386 = distinct !{!386, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!387 = !{!388}
!388 = distinct !{!388, !389, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!389 = distinct !{!389, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!390 = !{!391}
!391 = distinct !{!391, !392, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!392 = distinct !{!392, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!393 = !{!394}
!394 = distinct !{!394, !395, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!395 = distinct !{!395, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!396 = !{!397}
!397 = distinct !{!397, !398, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!398 = distinct !{!398, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!399 = !{!400}
!400 = distinct !{!400, !401, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!401 = distinct !{!401, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!402 = !{!403}
!403 = distinct !{!403, !404, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!404 = distinct !{!404, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!405 = !{!406}
!406 = distinct !{!406, !407, !"_ZStdvIeESt7complexIT_ERKS2_S4_: argument 0"}
!407 = distinct !{!407, !"_ZStdvIeESt7complexIT_ERKS2_S4_"}
!408 = !{!409}
!409 = distinct !{!409, !410, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!410 = distinct !{!410, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!411 = !{!412}
!412 = distinct !{!412, !413, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!413 = distinct !{!413, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!414 = !{!415}
!415 = distinct !{!415, !416, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!416 = distinct !{!416, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!417 = !{!418}
!418 = distinct !{!418, !419, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!419 = distinct !{!419, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!420 = !{!421}
!421 = distinct !{!421, !422, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!422 = distinct !{!422, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!423 = !{i64 0, i64 22, !153}
!424 = !{i64 0, i64 6, !153}
!425 = !{!426}
!426 = distinct !{!426, !427, !"_ZStdvIeESt7complexIT_ERKS2_S4_: argument 0"}
!427 = distinct !{!427, !"_ZStdvIeESt7complexIT_ERKS2_S4_"}
!428 = !{!429, !431}
!429 = distinct !{!429, !430, !"_ZSt4conjIeESt7complexIT_ERKS2_: argument 0"}
!430 = distinct !{!430, !"_ZSt4conjIeESt7complexIT_ERKS2_"}
!431 = distinct !{!431, !432, !"_ZN6dealii7numbers12NumberTraitsISt7complexIeEE9conjugateERKS3_: argument 0"}
!432 = distinct !{!432, !"_ZN6dealii7numbers12NumberTraitsISt7complexIeEE9conjugateERKS3_"}
!433 = !{!434, !436}
!434 = distinct !{!434, !435, !"_ZSt4conjIeESt7complexIT_ERKS2_: argument 0"}
!435 = distinct !{!435, !"_ZSt4conjIeESt7complexIT_ERKS2_"}
!436 = distinct !{!436, !437, !"_ZN6dealii7numbers12NumberTraitsISt7complexIeEE9conjugateERKS3_: argument 0"}
!437 = distinct !{!437, !"_ZN6dealii7numbers12NumberTraitsISt7complexIeEE9conjugateERKS3_"}
!438 = !{!439}
!439 = distinct !{!439, !440, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!440 = distinct !{!440, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!441 = !{!442}
!442 = distinct !{!442, !443, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!443 = distinct !{!443, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!444 = !{!445}
!445 = distinct !{!445, !446, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!446 = distinct !{!446, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!447 = !{!448}
!448 = distinct !{!448, !449, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!449 = distinct !{!449, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!450 = !{!451, !453}
!451 = distinct !{!451, !452, !"_ZSt4conjIeESt7complexIT_ERKS2_: argument 0"}
!452 = distinct !{!452, !"_ZSt4conjIeESt7complexIT_ERKS2_"}
!453 = distinct !{!453, !454, !"_ZN6dealii7numbers12NumberTraitsISt7complexIeEE9conjugateERKS3_: argument 0"}
!454 = distinct !{!454, !"_ZN6dealii7numbers12NumberTraitsISt7complexIeEE9conjugateERKS3_"}
!455 = !{!456}
!456 = distinct !{!456, !457, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!457 = distinct !{!457, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!458 = !{!459}
!459 = distinct !{!459, !460, !"_ZStmlIeESt7complexIT_ERKS2_S4_: argument 0"}
!460 = distinct !{!460, !"_ZStmlIeESt7complexIT_ERKS2_S4_"}
!461 = distinct !{!461, !29, !30}
!462 = distinct !{!462, !30, !29}
!463 = distinct !{!463, !29, !30}
!464 = distinct !{!464, !30, !29}
!465 = distinct !{!465, !45}
!466 = distinct !{!466, !45}
!467 = distinct !{!467, !45}
!468 = distinct !{!468, !45}
!469 = distinct !{!469, !29, !30}
!470 = distinct !{!470, !29}
!471 = distinct !{!471, !29, !30}
!472 = distinct !{!472, !30, !29}
!473 = distinct !{!473, !29, !30}
!474 = distinct !{!474, !30, !29}
!475 = distinct !{!475, !29, !30}
!476 = distinct !{!476, !30, !29}
!477 = distinct !{!477, !45}
!478 = distinct !{!478, !45}
!479 = distinct !{!479, !45}
!480 = distinct !{!480, !45}
!481 = distinct !{!481, !29, !30}
!482 = distinct !{!482, !29}
!483 = distinct !{!483, !29, !30}
!484 = distinct !{!484, !30, !29}
