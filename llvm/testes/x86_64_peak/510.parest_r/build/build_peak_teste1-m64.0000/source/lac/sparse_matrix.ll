; ModuleID = 'source/lac/sparse_matrix.cc'
source_filename = "source/lac/sparse_matrix.cc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

module asm ".globl _ZSt21ios_base_library_initv"

%"class.dealii::SparseMatrix" = type <{ ptr, %"class.dealii::SmartPointer", ptr, i32, [4 x i8], %"class.dealii::Subscriptor" }>
%"class.dealii::SmartPointer" = type { ptr, ptr }
%"class.dealii::Subscriptor" = type { ptr, i32, %"class.std::map", ptr }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<const char *, std::pair<const char *const, unsigned int>, std::_Select1st<std::pair<const char *const, unsigned int> >, std::less<const char *> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<const char *, std::pair<const char *const, unsigned int>, std::_Select1st<std::pair<const char *const, unsigned int> >, std::less<const char *> >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.dealii::SparsityPattern" = type <{ %"class.dealii::Subscriptor", i32, i32, i32, [4 x i8], i64, i32, [4 x i8], ptr, ptr, i8, i8, [6 x i8] }>
%"class.dealii::SparseMatrix<double>::ExcInvalidIndex" = type { %"class.dealii::ExceptionBase.base", i32, i32, [4 x i8] }
%"class.dealii::ExceptionBase.base" = type <{ %"class.std::exception", ptr, i32, [4 x i8], ptr, ptr, ptr, ptr, i32 }>
%"class.std::exception" = type { ptr }
%"class.dealii::Vector" = type { %"class.dealii::Subscriptor", i32, i32, ptr }
%"class.dealii::internals::SparseMatrixIterators::Iterator" = type { %"class.dealii::internals::SparseMatrixIterators::Accessor" }
%"class.dealii::internals::SparseMatrixIterators::Accessor" = type { %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr }
%"class.dealii::internals::SparsityPatternIterators::Accessor" = type { ptr, i32, i32 }
%"class.dealii::internals::SparseMatrixIterators::Iterator.16" = type { %"class.dealii::internals::SparseMatrixIterators::Accessor.17" }
%"class.dealii::internals::SparseMatrixIterators::Accessor.17" = type { %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr }
%"class.dealii::StandardExceptions::ExcIO" = type { %"class.dealii::ExceptionBase.base", [4 x i8] }
%"class.std::ios_base" = type { ptr, i64, i64, i32, i32, i32, ptr, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, ptr, %"class.std::locale" }
%"struct.std::ios_base::_Words" = type { ptr, i64 }
%"class.std::locale" = type { ptr }
%"class.std::basic_ios" = type { %"class.std::ios_base", ptr, i8, i8, ptr, ptr, ptr, ptr }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], ptr, i8, [7 x i8], ptr, ptr, ptr, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ ptr, i32 }>
%"class.dealii::SparseMatrix<double>::ExcInvalidIndex1" = type { %"class.dealii::ExceptionBase.base", i32 }
%"class.dealii::SparseMatrix<double>::ExcIteratorRange" = type { %"class.dealii::ExceptionBase.base", i32, i32, [4 x i8] }
%"class.dealii::SparseMatrix.18" = type <{ ptr, %"class.dealii::SmartPointer", ptr, i32, [4 x i8], %"class.dealii::Subscriptor" }>
%"class.dealii::SparseMatrix<float>::ExcInvalidIndex" = type { %"class.dealii::ExceptionBase.base", i32, i32, [4 x i8] }
%"class.dealii::Vector.20" = type { %"class.dealii::Subscriptor", i32, i32, ptr }
%"class.dealii::internals::SparseMatrixIterators::Iterator.21" = type { %"class.dealii::internals::SparseMatrixIterators::Accessor.22" }
%"class.dealii::internals::SparseMatrixIterators::Accessor.22" = type { %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr }
%"class.dealii::internals::SparseMatrixIterators::Iterator.23" = type { %"class.dealii::internals::SparseMatrixIterators::Accessor.24" }
%"class.dealii::internals::SparseMatrixIterators::Accessor.24" = type { %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr }
%"class.dealii::SparseMatrix<float>::ExcInvalidIndex1" = type { %"class.dealii::ExceptionBase.base", i32 }
%"class.dealii::SparseMatrix<float>::ExcIteratorRange" = type { %"class.dealii::ExceptionBase.base", i32, i32, [4 x i8] }
%"class.dealii::SparseMatrix.25" = type <{ ptr, %"class.dealii::SmartPointer", ptr, i32, [4 x i8], %"class.dealii::Subscriptor" }>
%"class.dealii::SparseMatrix<long double>::ExcInvalidIndex" = type { %"class.dealii::ExceptionBase.base", i32, i32, [4 x i8] }
%"class.dealii::Vector.27" = type { %"class.dealii::Subscriptor", i32, i32, ptr }
%"class.dealii::internals::SparseMatrixIterators::Iterator.28" = type { %"class.dealii::internals::SparseMatrixIterators::Accessor.29" }
%"class.dealii::internals::SparseMatrixIterators::Accessor.29" = type { %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr }
%"class.dealii::internals::SparseMatrixIterators::Iterator.30" = type { %"class.dealii::internals::SparseMatrixIterators::Accessor.31" }
%"class.dealii::internals::SparseMatrixIterators::Accessor.31" = type { %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr }
%"class.dealii::SparseMatrix<long double>::ExcInvalidIndex1" = type { %"class.dealii::ExceptionBase.base", i32 }
%"class.dealii::SparseMatrix<long double>::ExcIteratorRange" = type { %"class.dealii::ExceptionBase.base", i32, i32, [4 x i8] }
%"class.dealii::TableBase" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices", [4 x i8] }>
%"class.dealii::TableIndices" = type { %"class.dealii::TableIndicesBase" }
%"class.dealii::TableIndicesBase" = type { [2 x i32] }
%"class.dealii::TableBase.34" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices", [4 x i8] }>
%"class.dealii::TableBase.40" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices", [4 x i8] }>
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::BlockVectorBase" = type { %"class.dealii::Subscriptor", %"class.std::vector.47", %"class.dealii::BlockIndices" }
%"class.std::vector.47" = type { %"struct.std::_Vector_base.48" }
%"struct.std::_Vector_base.48" = type { %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::BlockIndices" = type { i32, %"class.std::vector" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"class.dealii::BlockVectorBase.53" = type { %"class.dealii::Subscriptor", %"class.std::vector.54", %"class.dealii::BlockIndices" }
%"class.std::vector.54" = type { %"struct.std::_Vector_base.55" }
%"struct.std::_Vector_base.55" = type { %"struct.std::_Vector_base<dealii::Vector<float>, std::allocator<dealii::Vector<float> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Vector<float>, std::allocator<dealii::Vector<float> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Vector<float>, std::allocator<dealii::Vector<float> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Vector<float>, std::allocator<dealii::Vector<float> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::BlockVectorBase.60" = type { %"class.dealii::Subscriptor", %"class.std::vector.61", %"class.dealii::BlockIndices" }
%"class.std::vector.61" = type { %"struct.std::_Vector_base.62" }
%"struct.std::_Vector_base.62" = type { %"struct.std::_Vector_base<dealii::Vector<long double>, std::allocator<dealii::Vector<long double> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Vector<long double>, std::allocator<dealii::Vector<long double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Vector<long double>, std::allocator<dealii::Vector<long double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Vector<long double>, std::allocator<dealii::Vector<long double> > >::_Vector_impl_data" = type { ptr, ptr, ptr }

$_ZN6dealii12SparseMatrixIdEC2Ev = comdat any

$_ZN6dealii12SparseMatrixIdEC1Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN6dealii12SparseMatrixIdEC2ERKS1_ = comdat any

$_ZN6dealii12SparseMatrixIdEC1ERKS1_ = comdat any

$_ZN6dealii12SparseMatrixIdEC2ERKNS_15SparsityPatternE = comdat any

$_ZN6dealii12SparseMatrixIdEC1ERKNS_15SparsityPatternE = comdat any

$_ZN6dealii12SparseMatrixIdEC2ERKNS_15SparsityPatternERKNS_14IdentityMatrixE = comdat any

$_ZNK6dealii12SparseMatrixIdE1nEv = comdat any

$_ZN6dealii12SparseMatrixIdE3setEjjd = comdat any

$_ZN6dealii12SparseMatrixIdEC1ERKNS_15SparsityPatternERKNS_14IdentityMatrixE = comdat any

$_ZN6dealii12SparseMatrixIdED2Ev = comdat any

$_ZN6dealii12SparseMatrixIdED1Ev = comdat any

$_ZTv0_n24_N6dealii12SparseMatrixIdED1Ev = comdat any

$_ZN6dealii12SparseMatrixIdED0Ev = comdat any

$_ZTv0_n24_N6dealii12SparseMatrixIdED0Ev = comdat any

$_ZN6dealii12SparseMatrixIdEaSERKS1_ = comdat any

$_ZN6dealii12SparseMatrixIdEaSERKNS_14IdentityMatrixE = comdat any

$_ZN6dealii12SparseMatrixIdEaSEd = comdat any

$_ZN6dealii12SparseMatrixIdE6reinitERKNS_15SparsityPatternE = comdat any

$_ZN6dealii12SparseMatrixIdE5clearEv = comdat any

$_ZNK6dealii12SparseMatrixIdE5emptyEv = comdat any

$_ZNK6dealii12SparseMatrixIdE1mEv = comdat any

$_ZNK6dealii12SparseMatrixIdE18n_nonzero_elementsEv = comdat any

$_ZNK6dealii12SparseMatrixIdE27n_actually_nonzero_elementsEd = comdat any

$_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv = comdat any

$_ZNK6dealii12SparseMatrixIdE18memory_consumptionEv = comdat any

$_ZN6dealii12SparseMatrixIdE3addEjjd = comdat any

$_ZN6dealii12SparseMatrixIdEmLEd = comdat any

$_ZN6dealii12SparseMatrixIdEdVEd = comdat any

$_ZN6dealii12SparseMatrixIdE10symmetrizeEv = comdat any

$_ZNK6dealii12SparseMatrixIdEclEjj = comdat any

$_ZNK6dealii12SparseMatrixIdE2elEjj = comdat any

$_ZNK6dealii12SparseMatrixIdE12diag_elementEj = comdat any

$_ZN6dealii12SparseMatrixIdE12diag_elementEj = comdat any

$_ZNK6dealii12SparseMatrixIdE9raw_entryEjj = comdat any

$_ZNK6dealii12SparseMatrixIdE12global_entryEj = comdat any

$_ZN6dealii12SparseMatrixIdE12global_entryEj = comdat any

$_ZNK6dealii12SparseMatrixIdE7l1_normEv = comdat any

$_ZN6dealii6VectorIdED2Ev = comdat any

$_ZNK6dealii12SparseMatrixIdE11linfty_normEv = comdat any

$_ZNK6dealii12SparseMatrixIdE14frobenius_normEv = comdat any

$_ZNK6dealii12SparseMatrixIdE5beginEv = comdat any

$_ZNK6dealii12SparseMatrixIdE3endEv = comdat any

$_ZN6dealii12SparseMatrixIdE5beginEv = comdat any

$_ZN6dealii12SparseMatrixIdE3endEv = comdat any

$_ZNK6dealii12SparseMatrixIdE5beginEj = comdat any

$_ZNK6dealii12SparseMatrixIdE3endEj = comdat any

$_ZN6dealii12SparseMatrixIdE5beginEj = comdat any

$_ZN6dealii12SparseMatrixIdE3endEj = comdat any

$_ZNK6dealii12SparseMatrixIdE5printERSo = comdat any

$_ZNK6dealii12SparseMatrixIdE15print_formattedERSojbjPKcd = comdat any

$_ZNK6dealii12SparseMatrixIdE13print_patternERSod = comdat any

$_ZNK6dealii12SparseMatrixIdE11block_writeERSo = comdat any

$_ZN6dealii12SparseMatrixIdE10block_readERSi = comdat any

$_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexC5Eii = comdat any

$_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexD5Ev = comdat any

$_ZNK6dealii12SparseMatrixIdE15ExcInvalidIndex10print_infoERSo = comdat any

$_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1C5Ei = comdat any

$_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1D5Ev = comdat any

$_ZNK6dealii12SparseMatrixIdE16ExcInvalidIndex110print_infoERSo = comdat any

$_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeC5Eii = comdat any

$_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeD5Ev = comdat any

$_ZNK6dealii12SparseMatrixIdE16ExcIteratorRange10print_infoERSo = comdat any

$_ZN6dealii12SparseMatrixIfEC2Ev = comdat any

$_ZN6dealii12SparseMatrixIfEC1Ev = comdat any

$_ZN6dealii12SparseMatrixIfEC2ERKS1_ = comdat any

$_ZN6dealii12SparseMatrixIfEC1ERKS1_ = comdat any

$_ZN6dealii12SparseMatrixIfEC2ERKNS_15SparsityPatternE = comdat any

$_ZN6dealii12SparseMatrixIfEC1ERKNS_15SparsityPatternE = comdat any

$_ZN6dealii12SparseMatrixIfEC2ERKNS_15SparsityPatternERKNS_14IdentityMatrixE = comdat any

$_ZNK6dealii12SparseMatrixIfE1nEv = comdat any

$_ZN6dealii12SparseMatrixIfE3setEjjf = comdat any

$_ZN6dealii12SparseMatrixIfEC1ERKNS_15SparsityPatternERKNS_14IdentityMatrixE = comdat any

$_ZN6dealii12SparseMatrixIfED2Ev = comdat any

$_ZN6dealii12SparseMatrixIfED1Ev = comdat any

$_ZTv0_n24_N6dealii12SparseMatrixIfED1Ev = comdat any

$_ZN6dealii12SparseMatrixIfED0Ev = comdat any

$_ZTv0_n24_N6dealii12SparseMatrixIfED0Ev = comdat any

$_ZN6dealii12SparseMatrixIfEaSERKS1_ = comdat any

$_ZN6dealii12SparseMatrixIfEaSERKNS_14IdentityMatrixE = comdat any

$_ZN6dealii12SparseMatrixIfEaSEd = comdat any

$_ZN6dealii12SparseMatrixIfE6reinitERKNS_15SparsityPatternE = comdat any

$_ZN6dealii12SparseMatrixIfE5clearEv = comdat any

$_ZNK6dealii12SparseMatrixIfE5emptyEv = comdat any

$_ZNK6dealii12SparseMatrixIfE1mEv = comdat any

$_ZNK6dealii12SparseMatrixIfE18n_nonzero_elementsEv = comdat any

$_ZNK6dealii12SparseMatrixIfE27n_actually_nonzero_elementsEd = comdat any

$_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv = comdat any

$_ZNK6dealii12SparseMatrixIfE18memory_consumptionEv = comdat any

$_ZN6dealii12SparseMatrixIfE3addEjjf = comdat any

$_ZN6dealii12SparseMatrixIfEmLEf = comdat any

$_ZN6dealii12SparseMatrixIfEdVEf = comdat any

$_ZN6dealii12SparseMatrixIfE10symmetrizeEv = comdat any

$_ZNK6dealii12SparseMatrixIfEclEjj = comdat any

$_ZNK6dealii12SparseMatrixIfE2elEjj = comdat any

$_ZNK6dealii12SparseMatrixIfE12diag_elementEj = comdat any

$_ZN6dealii12SparseMatrixIfE12diag_elementEj = comdat any

$_ZNK6dealii12SparseMatrixIfE9raw_entryEjj = comdat any

$_ZNK6dealii12SparseMatrixIfE12global_entryEj = comdat any

$_ZN6dealii12SparseMatrixIfE12global_entryEj = comdat any

$_ZNK6dealii12SparseMatrixIfE7l1_normEv = comdat any

$_ZN6dealii6VectorIfED2Ev = comdat any

$_ZNK6dealii12SparseMatrixIfE11linfty_normEv = comdat any

$_ZNK6dealii12SparseMatrixIfE14frobenius_normEv = comdat any

$_ZNK6dealii12SparseMatrixIfE5beginEv = comdat any

$_ZNK6dealii12SparseMatrixIfE3endEv = comdat any

$_ZN6dealii12SparseMatrixIfE5beginEv = comdat any

$_ZN6dealii12SparseMatrixIfE3endEv = comdat any

$_ZNK6dealii12SparseMatrixIfE5beginEj = comdat any

$_ZNK6dealii12SparseMatrixIfE3endEj = comdat any

$_ZN6dealii12SparseMatrixIfE5beginEj = comdat any

$_ZN6dealii12SparseMatrixIfE3endEj = comdat any

$_ZNK6dealii12SparseMatrixIfE5printERSo = comdat any

$_ZNK6dealii12SparseMatrixIfE15print_formattedERSojbjPKcd = comdat any

$_ZNK6dealii12SparseMatrixIfE13print_patternERSod = comdat any

$_ZNK6dealii12SparseMatrixIfE11block_writeERSo = comdat any

$_ZN6dealii12SparseMatrixIfE10block_readERSi = comdat any

$_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexC5Eii = comdat any

$_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexD5Ev = comdat any

$_ZNK6dealii12SparseMatrixIfE15ExcInvalidIndex10print_infoERSo = comdat any

$_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1C5Ei = comdat any

$_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1D5Ev = comdat any

$_ZNK6dealii12SparseMatrixIfE16ExcInvalidIndex110print_infoERSo = comdat any

$_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeC5Eii = comdat any

$_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeD5Ev = comdat any

$_ZNK6dealii12SparseMatrixIfE16ExcIteratorRange10print_infoERSo = comdat any

$_ZN6dealii12SparseMatrixIeEC2Ev = comdat any

$_ZN6dealii12SparseMatrixIeEC1Ev = comdat any

$_ZN6dealii12SparseMatrixIeEC2ERKS1_ = comdat any

$_ZN6dealii12SparseMatrixIeEC1ERKS1_ = comdat any

$_ZN6dealii12SparseMatrixIeEC2ERKNS_15SparsityPatternE = comdat any

$_ZN6dealii12SparseMatrixIeEC1ERKNS_15SparsityPatternE = comdat any

$_ZN6dealii12SparseMatrixIeEC2ERKNS_15SparsityPatternERKNS_14IdentityMatrixE = comdat any

$_ZNK6dealii12SparseMatrixIeE1nEv = comdat any

$_ZN6dealii12SparseMatrixIeE3setEjje = comdat any

$_ZN6dealii12SparseMatrixIeEC1ERKNS_15SparsityPatternERKNS_14IdentityMatrixE = comdat any

$_ZN6dealii12SparseMatrixIeED2Ev = comdat any

$_ZN6dealii12SparseMatrixIeED1Ev = comdat any

$_ZTv0_n24_N6dealii12SparseMatrixIeED1Ev = comdat any

$_ZN6dealii12SparseMatrixIeED0Ev = comdat any

$_ZTv0_n24_N6dealii12SparseMatrixIeED0Ev = comdat any

$_ZN6dealii12SparseMatrixIeEaSERKS1_ = comdat any

$_ZN6dealii12SparseMatrixIeEaSERKNS_14IdentityMatrixE = comdat any

$_ZN6dealii12SparseMatrixIeEaSEd = comdat any

$_ZN6dealii12SparseMatrixIeE6reinitERKNS_15SparsityPatternE = comdat any

$_ZN6dealii12SparseMatrixIeE5clearEv = comdat any

$_ZNK6dealii12SparseMatrixIeE5emptyEv = comdat any

$_ZNK6dealii12SparseMatrixIeE1mEv = comdat any

$_ZNK6dealii12SparseMatrixIeE18n_nonzero_elementsEv = comdat any

$_ZNK6dealii12SparseMatrixIeE27n_actually_nonzero_elementsEd = comdat any

$_ZNK6dealii12SparseMatrixIeE20get_sparsity_patternEv = comdat any

$_ZNK6dealii12SparseMatrixIeE18memory_consumptionEv = comdat any

$_ZN6dealii12SparseMatrixIeE3addEjje = comdat any

$_ZN6dealii12SparseMatrixIeEmLEe = comdat any

$_ZN6dealii12SparseMatrixIeEdVEe = comdat any

$_ZN6dealii12SparseMatrixIeE10symmetrizeEv = comdat any

$_ZNK6dealii12SparseMatrixIeEclEjj = comdat any

$_ZNK6dealii12SparseMatrixIeE2elEjj = comdat any

$_ZNK6dealii12SparseMatrixIeE12diag_elementEj = comdat any

$_ZN6dealii12SparseMatrixIeE12diag_elementEj = comdat any

$_ZNK6dealii12SparseMatrixIeE9raw_entryEjj = comdat any

$_ZNK6dealii12SparseMatrixIeE12global_entryEj = comdat any

$_ZN6dealii12SparseMatrixIeE12global_entryEj = comdat any

$_ZNK6dealii12SparseMatrixIeE7l1_normEv = comdat any

$_ZN6dealii6VectorIeED2Ev = comdat any

$_ZNK6dealii12SparseMatrixIeE11linfty_normEv = comdat any

$_ZNK6dealii12SparseMatrixIeE14frobenius_normEv = comdat any

$_ZNK6dealii12SparseMatrixIeE5beginEv = comdat any

$_ZNK6dealii12SparseMatrixIeE3endEv = comdat any

$_ZN6dealii12SparseMatrixIeE5beginEv = comdat any

$_ZN6dealii12SparseMatrixIeE3endEv = comdat any

$_ZNK6dealii12SparseMatrixIeE5beginEj = comdat any

$_ZNK6dealii12SparseMatrixIeE3endEj = comdat any

$_ZN6dealii12SparseMatrixIeE5beginEj = comdat any

$_ZN6dealii12SparseMatrixIeE3endEj = comdat any

$_ZNK6dealii12SparseMatrixIeE5printERSo = comdat any

$_ZNK6dealii12SparseMatrixIeE15print_formattedERSojbjPKcd = comdat any

$_ZNK6dealii12SparseMatrixIeE13print_patternERSod = comdat any

$_ZNK6dealii12SparseMatrixIeE11block_writeERSo = comdat any

$_ZN6dealii12SparseMatrixIeE10block_readERSi = comdat any

$_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexC5Eii = comdat any

$_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexD5Ev = comdat any

$_ZNK6dealii12SparseMatrixIeE15ExcInvalidIndex10print_infoERSo = comdat any

$_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1C5Ei = comdat any

$_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1D5Ev = comdat any

$_ZNK6dealii12SparseMatrixIeE16ExcInvalidIndex110print_infoERSo = comdat any

$_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeC5Eii = comdat any

$_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeD5Ev = comdat any

$_ZNK6dealii12SparseMatrixIeE16ExcIteratorRange10print_infoERSo = comdat any

$_ZN6dealii12SparseMatrixIdE9copy_fromIdEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIdE9copy_fromIdEEvRKNS_10FullMatrixIT_EE = comdat any

$_ZN6dealii12SparseMatrixIdE3addIdEEvdRKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIdE3addIdEEvjjPKjPKT_bb = comdat any

$_ZN6dealii12SparseMatrixIdE3setIdEEvjjPKjPKT_b = comdat any

$_ZN6dealii12SparseMatrixIdE9copy_fromIfEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIdE9copy_fromIfEEvRKNS_10FullMatrixIT_EE = comdat any

$_ZN6dealii12SparseMatrixIdE3addIfEEvdRKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIdE3addIfEEvjjPKjPKT_bb = comdat any

$_ZN6dealii12SparseMatrixIdE3setIfEEvjjPKjPKT_b = comdat any

$_ZN6dealii12SparseMatrixIdE9copy_fromIeEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIdE9copy_fromIeEEvRKNS_10FullMatrixIT_EE = comdat any

$_ZN6dealii12SparseMatrixIdE3addIeEEvdRKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIdE3addIeEEvjjPKjPKT_bb = comdat any

$_ZN6dealii12SparseMatrixIdE3setIeEEvjjPKjPKT_b = comdat any

$_ZN6dealii12SparseMatrixIfE9copy_fromIdEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIfE9copy_fromIdEEvRKNS_10FullMatrixIT_EE = comdat any

$_ZN6dealii12SparseMatrixIfE3addIdEEvfRKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIfE3addIdEEvjjPKjPKT_bb = comdat any

$_ZN6dealii12SparseMatrixIfE3setIdEEvjjPKjPKT_b = comdat any

$_ZN6dealii12SparseMatrixIfE9copy_fromIfEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIfE9copy_fromIfEEvRKNS_10FullMatrixIT_EE = comdat any

$_ZN6dealii12SparseMatrixIfE3addIfEEvfRKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIfE3addIfEEvjjPKjPKT_bb = comdat any

$_ZN6dealii12SparseMatrixIfE3setIfEEvjjPKjPKT_b = comdat any

$_ZN6dealii12SparseMatrixIfE9copy_fromIeEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIfE9copy_fromIeEEvRKNS_10FullMatrixIT_EE = comdat any

$_ZN6dealii12SparseMatrixIfE3addIeEEvfRKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIfE3addIeEEvjjPKjPKT_bb = comdat any

$_ZN6dealii12SparseMatrixIfE3setIeEEvjjPKjPKT_b = comdat any

$_ZN6dealii12SparseMatrixIeE9copy_fromIdEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIeE9copy_fromIdEEvRKNS_10FullMatrixIT_EE = comdat any

$_ZN6dealii12SparseMatrixIeE3addIdEEveRKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIeE3addIdEEvjjPKjPKT_bb = comdat any

$_ZN6dealii12SparseMatrixIeE3setIdEEvjjPKjPKT_b = comdat any

$_ZN6dealii12SparseMatrixIeE9copy_fromIfEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIeE9copy_fromIfEEvRKNS_10FullMatrixIT_EE = comdat any

$_ZN6dealii12SparseMatrixIeE3addIfEEveRKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIeE3addIfEEvjjPKjPKT_bb = comdat any

$_ZN6dealii12SparseMatrixIeE3setIfEEvjjPKjPKT_b = comdat any

$_ZN6dealii12SparseMatrixIeE9copy_fromIeEERS1_RKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIeE9copy_fromIeEEvRKNS_10FullMatrixIT_EE = comdat any

$_ZN6dealii12SparseMatrixIeE3addIeEEveRKNS0_IT_EE = comdat any

$_ZN6dealii12SparseMatrixIeE3addIeEEvjjPKjPKT_bb = comdat any

$_ZN6dealii12SparseMatrixIeE3setIeEEvjjPKjPKT_b = comdat any

$_ZNK6dealii12SparseMatrixIdE18matrix_norm_squareIdEET_RKNS_6VectorIS3_EE = comdat any

$_ZNK6dealii12SparseMatrixIdE21matrix_scalar_productIdEET_RKNS_6VectorIS3_EES7_ = comdat any

$_ZNK6dealii12SparseMatrixIdE8residualIdEET_RNS_6VectorIS3_EERKS5_S8_ = comdat any

$_ZNK6dealii12SparseMatrixIdE17precondition_SSORIdEEvRNS_6VectorIT_EERKS5_dRKSt6vectorIjSaIjEE = comdat any

$_ZNK6dealii12SparseMatrixIdE16precondition_SORIdEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE3SORIdEEvRNS_6VectorIT_EEd = comdat any

$_ZNK6dealii12SparseMatrixIdE17precondition_TSORIdEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE4TSORIdEEvRNS_6VectorIT_EEd = comdat any

$_ZNK6dealii12SparseMatrixIdE19precondition_JacobiIdEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE4SSORIdEEvRNS_6VectorIT_EEd = comdat any

$_ZNK6dealii12SparseMatrixIdE4PSORIdEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_d = comdat any

$_ZNK6dealii12SparseMatrixIdE5TPSORIdEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_d = comdat any

$_ZNK6dealii12SparseMatrixIdE8SOR_stepIdEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE9TSOR_stepIdEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE9SSOR_stepIdEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE18matrix_norm_squareIfEET_RKNS_6VectorIS3_EE = comdat any

$_ZNK6dealii12SparseMatrixIdE21matrix_scalar_productIfEET_RKNS_6VectorIS3_EES7_ = comdat any

$_ZNK6dealii12SparseMatrixIdE8residualIfEET_RNS_6VectorIS3_EERKS5_S8_ = comdat any

$_ZNK6dealii12SparseMatrixIdE17precondition_SSORIfEEvRNS_6VectorIT_EERKS5_dRKSt6vectorIjSaIjEE = comdat any

$_ZNK6dealii12SparseMatrixIdE16precondition_SORIfEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE3SORIfEEvRNS_6VectorIT_EEd = comdat any

$_ZNK6dealii12SparseMatrixIdE17precondition_TSORIfEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE4TSORIfEEvRNS_6VectorIT_EEd = comdat any

$_ZNK6dealii12SparseMatrixIdE19precondition_JacobiIfEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE4SSORIfEEvRNS_6VectorIT_EEd = comdat any

$_ZNK6dealii12SparseMatrixIdE4PSORIfEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_d = comdat any

$_ZNK6dealii12SparseMatrixIdE5TPSORIfEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_d = comdat any

$_ZNK6dealii12SparseMatrixIdE8SOR_stepIfEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE9TSOR_stepIfEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE9SSOR_stepIfEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE18matrix_norm_squareIeEET_RKNS_6VectorIS3_EE = comdat any

$_ZNK6dealii12SparseMatrixIdE21matrix_scalar_productIeEET_RKNS_6VectorIS3_EES7_ = comdat any

$_ZNK6dealii12SparseMatrixIdE8residualIeEET_RNS_6VectorIS3_EERKS5_S8_ = comdat any

$_ZNK6dealii12SparseMatrixIdE17precondition_SSORIeEEvRNS_6VectorIT_EERKS5_dRKSt6vectorIjSaIjEE = comdat any

$_ZNK6dealii12SparseMatrixIdE16precondition_SORIeEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE3SORIeEEvRNS_6VectorIT_EEd = comdat any

$_ZNK6dealii12SparseMatrixIdE17precondition_TSORIeEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE4TSORIeEEvRNS_6VectorIT_EEd = comdat any

$_ZNK6dealii12SparseMatrixIdE19precondition_JacobiIeEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE4SSORIeEEvRNS_6VectorIT_EEd = comdat any

$_ZNK6dealii12SparseMatrixIdE4PSORIeEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_d = comdat any

$_ZNK6dealii12SparseMatrixIdE5TPSORIeEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_d = comdat any

$_ZNK6dealii12SparseMatrixIdE8SOR_stepIeEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE9TSOR_stepIeEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIdE9SSOR_stepIeEEvRNS_6VectorIT_EERKS5_d = comdat any

$_ZNK6dealii12SparseMatrixIfE18matrix_norm_squareIdEET_RKNS_6VectorIS3_EE = comdat any

$_ZNK6dealii12SparseMatrixIfE21matrix_scalar_productIdEET_RKNS_6VectorIS3_EES7_ = comdat any

$_ZNK6dealii12SparseMatrixIfE8residualIdEET_RNS_6VectorIS3_EERKS5_S8_ = comdat any

$_ZNK6dealii12SparseMatrixIfE17precondition_SSORIdEEvRNS_6VectorIT_EERKS5_fRKSt6vectorIjSaIjEE = comdat any

$_ZNK6dealii12SparseMatrixIfE16precondition_SORIdEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE3SORIdEEvRNS_6VectorIT_EEf = comdat any

$_ZNK6dealii12SparseMatrixIfE17precondition_TSORIdEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE4TSORIdEEvRNS_6VectorIT_EEf = comdat any

$_ZNK6dealii12SparseMatrixIfE19precondition_JacobiIdEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE4SSORIdEEvRNS_6VectorIT_EEf = comdat any

$_ZNK6dealii12SparseMatrixIfE4PSORIdEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_f = comdat any

$_ZNK6dealii12SparseMatrixIfE5TPSORIdEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_f = comdat any

$_ZNK6dealii12SparseMatrixIfE8SOR_stepIdEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE9TSOR_stepIdEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE9SSOR_stepIdEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE18matrix_norm_squareIfEET_RKNS_6VectorIS3_EE = comdat any

$_ZNK6dealii12SparseMatrixIfE21matrix_scalar_productIfEET_RKNS_6VectorIS3_EES7_ = comdat any

$_ZNK6dealii12SparseMatrixIfE8residualIfEET_RNS_6VectorIS3_EERKS5_S8_ = comdat any

$_ZNK6dealii12SparseMatrixIfE17precondition_SSORIfEEvRNS_6VectorIT_EERKS5_fRKSt6vectorIjSaIjEE = comdat any

$_ZNK6dealii12SparseMatrixIfE16precondition_SORIfEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE3SORIfEEvRNS_6VectorIT_EEf = comdat any

$_ZNK6dealii12SparseMatrixIfE17precondition_TSORIfEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE4TSORIfEEvRNS_6VectorIT_EEf = comdat any

$_ZNK6dealii12SparseMatrixIfE19precondition_JacobiIfEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE4SSORIfEEvRNS_6VectorIT_EEf = comdat any

$_ZNK6dealii12SparseMatrixIfE4PSORIfEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_f = comdat any

$_ZNK6dealii12SparseMatrixIfE5TPSORIfEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_f = comdat any

$_ZNK6dealii12SparseMatrixIfE8SOR_stepIfEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE9TSOR_stepIfEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE9SSOR_stepIfEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE18matrix_norm_squareIeEET_RKNS_6VectorIS3_EE = comdat any

$_ZNK6dealii12SparseMatrixIfE21matrix_scalar_productIeEET_RKNS_6VectorIS3_EES7_ = comdat any

$_ZNK6dealii12SparseMatrixIfE8residualIeEET_RNS_6VectorIS3_EERKS5_S8_ = comdat any

$_ZNK6dealii12SparseMatrixIfE17precondition_SSORIeEEvRNS_6VectorIT_EERKS5_fRKSt6vectorIjSaIjEE = comdat any

$_ZNK6dealii12SparseMatrixIfE16precondition_SORIeEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE3SORIeEEvRNS_6VectorIT_EEf = comdat any

$_ZNK6dealii12SparseMatrixIfE17precondition_TSORIeEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE4TSORIeEEvRNS_6VectorIT_EEf = comdat any

$_ZNK6dealii12SparseMatrixIfE19precondition_JacobiIeEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE4SSORIeEEvRNS_6VectorIT_EEf = comdat any

$_ZNK6dealii12SparseMatrixIfE4PSORIeEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_f = comdat any

$_ZNK6dealii12SparseMatrixIfE5TPSORIeEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_f = comdat any

$_ZNK6dealii12SparseMatrixIfE8SOR_stepIeEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE9TSOR_stepIeEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIfE9SSOR_stepIeEEvRNS_6VectorIT_EERKS5_f = comdat any

$_ZNK6dealii12SparseMatrixIeE18matrix_norm_squareIdEET_RKNS_6VectorIS3_EE = comdat any

$_ZNK6dealii12SparseMatrixIeE21matrix_scalar_productIdEET_RKNS_6VectorIS3_EES7_ = comdat any

$_ZNK6dealii12SparseMatrixIeE8residualIdEET_RNS_6VectorIS3_EERKS5_S8_ = comdat any

$_ZNK6dealii12SparseMatrixIeE17precondition_SSORIdEEvRNS_6VectorIT_EERKS5_eRKSt6vectorIjSaIjEE = comdat any

$_ZNK6dealii12SparseMatrixIeE16precondition_SORIdEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE3SORIdEEvRNS_6VectorIT_EEe = comdat any

$_ZNK6dealii12SparseMatrixIeE17precondition_TSORIdEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE4TSORIdEEvRNS_6VectorIT_EEe = comdat any

$_ZNK6dealii12SparseMatrixIeE19precondition_JacobiIdEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE4SSORIdEEvRNS_6VectorIT_EEe = comdat any

$_ZNK6dealii12SparseMatrixIeE4PSORIdEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_e = comdat any

$_ZNK6dealii12SparseMatrixIeE5TPSORIdEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_e = comdat any

$_ZNK6dealii12SparseMatrixIeE8SOR_stepIdEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE9TSOR_stepIdEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE9SSOR_stepIdEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE18matrix_norm_squareIfEET_RKNS_6VectorIS3_EE = comdat any

$_ZNK6dealii12SparseMatrixIeE21matrix_scalar_productIfEET_RKNS_6VectorIS3_EES7_ = comdat any

$_ZNK6dealii12SparseMatrixIeE8residualIfEET_RNS_6VectorIS3_EERKS5_S8_ = comdat any

$_ZNK6dealii12SparseMatrixIeE17precondition_SSORIfEEvRNS_6VectorIT_EERKS5_eRKSt6vectorIjSaIjEE = comdat any

$_ZNK6dealii12SparseMatrixIeE16precondition_SORIfEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE3SORIfEEvRNS_6VectorIT_EEe = comdat any

$_ZNK6dealii12SparseMatrixIeE17precondition_TSORIfEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE4TSORIfEEvRNS_6VectorIT_EEe = comdat any

$_ZNK6dealii12SparseMatrixIeE19precondition_JacobiIfEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE4SSORIfEEvRNS_6VectorIT_EEe = comdat any

$_ZNK6dealii12SparseMatrixIeE4PSORIfEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_e = comdat any

$_ZNK6dealii12SparseMatrixIeE5TPSORIfEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_e = comdat any

$_ZNK6dealii12SparseMatrixIeE8SOR_stepIfEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE9TSOR_stepIfEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE9SSOR_stepIfEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE18matrix_norm_squareIeEET_RKNS_6VectorIS3_EE = comdat any

$_ZNK6dealii12SparseMatrixIeE21matrix_scalar_productIeEET_RKNS_6VectorIS3_EES7_ = comdat any

$_ZNK6dealii12SparseMatrixIeE8residualIeEET_RNS_6VectorIS3_EERKS5_S8_ = comdat any

$_ZNK6dealii12SparseMatrixIeE17precondition_SSORIeEEvRNS_6VectorIT_EERKS5_eRKSt6vectorIjSaIjEE = comdat any

$_ZNK6dealii12SparseMatrixIeE16precondition_SORIeEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE3SORIeEEvRNS_6VectorIT_EEe = comdat any

$_ZNK6dealii12SparseMatrixIeE17precondition_TSORIeEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE4TSORIeEEvRNS_6VectorIT_EEe = comdat any

$_ZNK6dealii12SparseMatrixIeE19precondition_JacobiIeEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE4SSORIeEEvRNS_6VectorIT_EEe = comdat any

$_ZNK6dealii12SparseMatrixIeE4PSORIeEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_e = comdat any

$_ZNK6dealii12SparseMatrixIeE5TPSORIeEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_e = comdat any

$_ZNK6dealii12SparseMatrixIeE8SOR_stepIeEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE9TSOR_stepIeEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIeE9SSOR_stepIeEEvRNS_6VectorIT_EERKS5_e = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIdEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIfEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIeEES4_EEvRT_RKT0_ = comdat any

$_ZN6dealii12SparseMatrixIdE28ExcDifferentSparsityPatternsD0Ev = comdat any

$_ZN6dealii12SparseMatrixIdE26ExcSourceEqualsDestinationD0Ev = comdat any

$_ZN6dealii12SparseMatrixIfE28ExcDifferentSparsityPatternsD0Ev = comdat any

$_ZN6dealii12SparseMatrixIfE26ExcSourceEqualsDestinationD0Ev = comdat any

$_ZN6dealii12SparseMatrixIeE28ExcDifferentSparsityPatternsD0Ev = comdat any

$_ZN6dealii12SparseMatrixIeE26ExcSourceEqualsDestinationD0Ev = comdat any

$_ZN6dealii18StandardExceptions5ExcIOD0Ev = comdat any

$_ZN6dealii6VectorIdED0Ev = comdat any

$_ZN6dealii6VectorIdE6reinitEjb = comdat any

$_ZN6dealii6VectorIdE4swapERS1_ = comdat any

$_ZN6dealii6VectorIfED0Ev = comdat any

$_ZN6dealii6VectorIfE6reinitEjb = comdat any

$_ZN6dealii6VectorIfE4swapERS1_ = comdat any

$_ZN6dealii6VectorIeED0Ev = comdat any

$_ZN6dealii6VectorIeE6reinitEjb = comdat any

$_ZN6dealii6VectorIeE4swapERS1_ = comdat any

$_ZTVN6dealii12SparseMatrixIdEE = comdat any

$_ZTTN6dealii12SparseMatrixIdEE = comdat any

$_ZTVN6dealii12SparseMatrixIdE15ExcInvalidIndexE = comdat any

$_ZTVN6dealii12SparseMatrixIdE16ExcInvalidIndex1E = comdat any

$_ZTVN6dealii12SparseMatrixIdE16ExcIteratorRangeE = comdat any

$_ZTVN6dealii12SparseMatrixIfEE = comdat any

$_ZTTN6dealii12SparseMatrixIfEE = comdat any

$_ZTVN6dealii12SparseMatrixIfE15ExcInvalidIndexE = comdat any

$_ZTVN6dealii12SparseMatrixIfE16ExcInvalidIndex1E = comdat any

$_ZTVN6dealii12SparseMatrixIfE16ExcIteratorRangeE = comdat any

$_ZTVN6dealii12SparseMatrixIeEE = comdat any

$_ZTTN6dealii12SparseMatrixIeEE = comdat any

$_ZTVN6dealii12SparseMatrixIeE15ExcInvalidIndexE = comdat any

$_ZTVN6dealii12SparseMatrixIeE16ExcInvalidIndex1E = comdat any

$_ZTVN6dealii12SparseMatrixIeE16ExcIteratorRangeE = comdat any

$_ZTSN6dealii12SparseMatrixIdEE = comdat any

$_ZTIN6dealii12SparseMatrixIdEE = comdat any

$_ZTSN6dealii12SparseMatrixIdE16ExcInvalidIndex1E = comdat any

$_ZTIN6dealii12SparseMatrixIdE16ExcInvalidIndex1E = comdat any

$_ZTVN6dealii12SparseMatrixIdE28ExcDifferentSparsityPatternsE = comdat any

$_ZTSN6dealii12SparseMatrixIdE28ExcDifferentSparsityPatternsE = comdat any

$_ZTIN6dealii12SparseMatrixIdE28ExcDifferentSparsityPatternsE = comdat any

$_ZTSN6dealii12SparseMatrixIdE16ExcIteratorRangeE = comdat any

$_ZTIN6dealii12SparseMatrixIdE16ExcIteratorRangeE = comdat any

$_ZTVN6dealii12SparseMatrixIdE26ExcSourceEqualsDestinationE = comdat any

$_ZTSN6dealii12SparseMatrixIdE26ExcSourceEqualsDestinationE = comdat any

$_ZTIN6dealii12SparseMatrixIdE26ExcSourceEqualsDestinationE = comdat any

$_ZTSN6dealii12SparseMatrixIfEE = comdat any

$_ZTIN6dealii12SparseMatrixIfEE = comdat any

$_ZTSN6dealii12SparseMatrixIfE16ExcInvalidIndex1E = comdat any

$_ZTIN6dealii12SparseMatrixIfE16ExcInvalidIndex1E = comdat any

$_ZTVN6dealii12SparseMatrixIfE28ExcDifferentSparsityPatternsE = comdat any

$_ZTSN6dealii12SparseMatrixIfE28ExcDifferentSparsityPatternsE = comdat any

$_ZTIN6dealii12SparseMatrixIfE28ExcDifferentSparsityPatternsE = comdat any

$_ZTSN6dealii12SparseMatrixIfE16ExcIteratorRangeE = comdat any

$_ZTIN6dealii12SparseMatrixIfE16ExcIteratorRangeE = comdat any

$_ZTVN6dealii12SparseMatrixIfE26ExcSourceEqualsDestinationE = comdat any

$_ZTSN6dealii12SparseMatrixIfE26ExcSourceEqualsDestinationE = comdat any

$_ZTIN6dealii12SparseMatrixIfE26ExcSourceEqualsDestinationE = comdat any

$_ZTSN6dealii12SparseMatrixIeEE = comdat any

$_ZTIN6dealii12SparseMatrixIeEE = comdat any

$_ZTSN6dealii12SparseMatrixIeE16ExcInvalidIndex1E = comdat any

$_ZTIN6dealii12SparseMatrixIeE16ExcInvalidIndex1E = comdat any

$_ZTVN6dealii12SparseMatrixIeE28ExcDifferentSparsityPatternsE = comdat any

$_ZTSN6dealii12SparseMatrixIeE28ExcDifferentSparsityPatternsE = comdat any

$_ZTIN6dealii12SparseMatrixIeE28ExcDifferentSparsityPatternsE = comdat any

$_ZTSN6dealii12SparseMatrixIeE16ExcIteratorRangeE = comdat any

$_ZTIN6dealii12SparseMatrixIeE16ExcIteratorRangeE = comdat any

$_ZTVN6dealii12SparseMatrixIeE26ExcSourceEqualsDestinationE = comdat any

$_ZTSN6dealii12SparseMatrixIeE26ExcSourceEqualsDestinationE = comdat any

$_ZTIN6dealii12SparseMatrixIeE26ExcSourceEqualsDestinationE = comdat any

$_ZTSN6dealii12SparseMatrixIdE15ExcInvalidIndexE = comdat any

$_ZTIN6dealii12SparseMatrixIdE15ExcInvalidIndexE = comdat any

$_ZTSN6dealii12SparseMatrixIfE15ExcInvalidIndexE = comdat any

$_ZTIN6dealii12SparseMatrixIfE15ExcInvalidIndexE = comdat any

$_ZTSN6dealii12SparseMatrixIeE15ExcInvalidIndexE = comdat any

$_ZTIN6dealii12SparseMatrixIeE15ExcInvalidIndexE = comdat any

$_ZTVN6dealii18StandardExceptions5ExcIOE = comdat any

$_ZTSN6dealii18StandardExceptions5ExcIOE = comdat any

$_ZTIN6dealii18StandardExceptions5ExcIOE = comdat any

$_ZTVN6dealii6VectorIdEE = comdat any

$_ZTSN6dealii6VectorIdEE = comdat any

$_ZTIN6dealii6VectorIdEE = comdat any

$_ZTVN6dealii6VectorIfEE = comdat any

$_ZTSN6dealii6VectorIfEE = comdat any

$_ZTIN6dealii6VectorIfEE = comdat any

$_ZTVN6dealii6VectorIeEE = comdat any

$_ZTSN6dealii6VectorIeEE = comdat any

$_ZTIN6dealii6VectorIeEE = comdat any

@.str = private unnamed_addr constant [13 x i8] c"SparseMatrix\00", align 1
@_ZTVN6dealii12SparseMatrixIdEE = weak_odr dso_local unnamed_addr constant { [7 x ptr], [5 x ptr] } { [7 x ptr] [ptr inttoptr (i64 40 to ptr), ptr null, ptr @_ZTIN6dealii12SparseMatrixIdEE, ptr @_ZN6dealii12SparseMatrixIdED1Ev, ptr @_ZN6dealii12SparseMatrixIdED0Ev, ptr @_ZN6dealii12SparseMatrixIdE6reinitERKNS_15SparsityPatternE, ptr @_ZN6dealii12SparseMatrixIdE5clearEv], [5 x ptr] [ptr inttoptr (i64 -40 to ptr), ptr inttoptr (i64 -40 to ptr), ptr @_ZTIN6dealii12SparseMatrixIdEE, ptr @_ZTv0_n24_N6dealii12SparseMatrixIdED1Ev, ptr @_ZTv0_n24_N6dealii12SparseMatrixIdED0Ev] }, comdat, align 8
@_ZTTN6dealii12SparseMatrixIdEE = weak_odr dso_local unnamed_addr constant [2 x ptr] [ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i32 0, inrange i32 0, i32 3), ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i32 0, inrange i32 1, i32 3)], comdat, align 8
@.str.9 = private unnamed_addr constant [28 x i8] c"include/lac/sparse_matrix.h\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [56 x i8] c"cols->operator()(i,j) != SparsityPattern::invalid_entry\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"ExcInvalidIndex(i,j)\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.16 = private unnamed_addr constant [38 x i8] c"include/lac/sparse_matrix.templates.h\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"ExcIO()\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"][\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"c == '['\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"c == ']'\00", align 1
@_ZTVN6dealii12SparseMatrixIdE15ExcInvalidIndexE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIdE15ExcInvalidIndexE, ptr @_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexD2Ev, ptr @_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii12SparseMatrixIdE15ExcInvalidIndex10print_infoERSo] }, comdat, align 8
@.str.23 = private unnamed_addr constant [23 x i8] c"The entry with index <\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"> does not exist.\00", align 1
@_ZTVN6dealii12SparseMatrixIdE16ExcInvalidIndex1E = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIdE16ExcInvalidIndex1E, ptr @_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1D2Ev, ptr @_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1D0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii12SparseMatrixIdE16ExcInvalidIndex110print_infoERSo] }, comdat, align 8
@.str.25 = private unnamed_addr constant [11 x i8] c"The index \00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c" is not in the allowed range.\00", align 1
@_ZTVN6dealii12SparseMatrixIdE16ExcIteratorRangeE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIdE16ExcIteratorRangeE, ptr @_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeD2Ev, ptr @_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii12SparseMatrixIdE16ExcIteratorRange10print_infoERSo] }, comdat, align 8
@.str.27 = private unnamed_addr constant [33 x i8] c"The iterators denote a range of \00", align 1
@.str.28 = private unnamed_addr constant [45 x i8] c" elements, but the given number of rows was \00", align 1
@_ZTVN6dealii12SparseMatrixIfEE = weak_odr dso_local unnamed_addr constant { [7 x ptr], [5 x ptr] } { [7 x ptr] [ptr inttoptr (i64 40 to ptr), ptr null, ptr @_ZTIN6dealii12SparseMatrixIfEE, ptr @_ZN6dealii12SparseMatrixIfED1Ev, ptr @_ZN6dealii12SparseMatrixIfED0Ev, ptr @_ZN6dealii12SparseMatrixIfE6reinitERKNS_15SparsityPatternE, ptr @_ZN6dealii12SparseMatrixIfE5clearEv], [5 x ptr] [ptr inttoptr (i64 -40 to ptr), ptr inttoptr (i64 -40 to ptr), ptr @_ZTIN6dealii12SparseMatrixIfEE, ptr @_ZTv0_n24_N6dealii12SparseMatrixIfED1Ev, ptr @_ZTv0_n24_N6dealii12SparseMatrixIfED0Ev] }, comdat, align 8
@_ZTTN6dealii12SparseMatrixIfEE = weak_odr dso_local unnamed_addr constant [2 x ptr] [ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i32 0, inrange i32 0, i32 3), ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i32 0, inrange i32 1, i32 3)], comdat, align 8
@_ZTVN6dealii12SparseMatrixIfE15ExcInvalidIndexE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIfE15ExcInvalidIndexE, ptr @_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexD2Ev, ptr @_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii12SparseMatrixIfE15ExcInvalidIndex10print_infoERSo] }, comdat, align 8
@_ZTVN6dealii12SparseMatrixIfE16ExcInvalidIndex1E = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIfE16ExcInvalidIndex1E, ptr @_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1D2Ev, ptr @_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1D0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii12SparseMatrixIfE16ExcInvalidIndex110print_infoERSo] }, comdat, align 8
@_ZTVN6dealii12SparseMatrixIfE16ExcIteratorRangeE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIfE16ExcIteratorRangeE, ptr @_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeD2Ev, ptr @_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii12SparseMatrixIfE16ExcIteratorRange10print_infoERSo] }, comdat, align 8
@_ZTVN6dealii12SparseMatrixIeEE = weak_odr dso_local unnamed_addr constant { [7 x ptr], [5 x ptr] } { [7 x ptr] [ptr inttoptr (i64 40 to ptr), ptr null, ptr @_ZTIN6dealii12SparseMatrixIeEE, ptr @_ZN6dealii12SparseMatrixIeED1Ev, ptr @_ZN6dealii12SparseMatrixIeED0Ev, ptr @_ZN6dealii12SparseMatrixIeE6reinitERKNS_15SparsityPatternE, ptr @_ZN6dealii12SparseMatrixIeE5clearEv], [5 x ptr] [ptr inttoptr (i64 -40 to ptr), ptr inttoptr (i64 -40 to ptr), ptr @_ZTIN6dealii12SparseMatrixIeEE, ptr @_ZTv0_n24_N6dealii12SparseMatrixIeED1Ev, ptr @_ZTv0_n24_N6dealii12SparseMatrixIeED0Ev] }, comdat, align 8
@_ZTTN6dealii12SparseMatrixIeEE = weak_odr dso_local unnamed_addr constant [2 x ptr] [ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i32 0, inrange i32 0, i32 3), ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i32 0, inrange i32 1, i32 3)], comdat, align 8
@_ZTVN6dealii12SparseMatrixIeE15ExcInvalidIndexE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIeE15ExcInvalidIndexE, ptr @_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexD2Ev, ptr @_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii12SparseMatrixIeE15ExcInvalidIndex10print_infoERSo] }, comdat, align 8
@_ZTVN6dealii12SparseMatrixIeE16ExcInvalidIndex1E = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIeE16ExcInvalidIndex1E, ptr @_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1D2Ev, ptr @_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1D0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii12SparseMatrixIeE16ExcInvalidIndex110print_infoERSo] }, comdat, align 8
@_ZTVN6dealii12SparseMatrixIeE16ExcIteratorRangeE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIeE16ExcIteratorRangeE, ptr @_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeD2Ev, ptr @_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii12SparseMatrixIeE16ExcIteratorRange10print_infoERSo] }, comdat, align 8
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external global ptr
@_ZTSN6dealii12SparseMatrixIdEE = weak_odr dso_local constant [27 x i8] c"N6dealii12SparseMatrixIdEE\00", comdat, align 1
@_ZTIN6dealii11SubscriptorE = external constant ptr
@_ZTIN6dealii12SparseMatrixIdEE = weak_odr dso_local constant { ptr, ptr, i32, i32, ptr, i64 } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIdEE, i32 0, i32 1, ptr @_ZTIN6dealii11SubscriptorE, i64 -6141 }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global ptr
@_ZTSN6dealii12SparseMatrixIdE16ExcInvalidIndex1E = weak_odr dso_local constant [45 x i8] c"N6dealii12SparseMatrixIdE16ExcInvalidIndex1E\00", comdat, align 1
@_ZTIN6dealii13ExceptionBaseE = external constant ptr
@_ZTIN6dealii12SparseMatrixIdE16ExcInvalidIndex1E = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIdE16ExcInvalidIndex1E, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTVN6dealii12SparseMatrixIdE28ExcDifferentSparsityPatternsE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIdE28ExcDifferentSparsityPatternsE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii12SparseMatrixIdE28ExcDifferentSparsityPatternsD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIdE28ExcDifferentSparsityPatternsE = weak_odr dso_local constant [57 x i8] c"N6dealii12SparseMatrixIdE28ExcDifferentSparsityPatternsE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIdE28ExcDifferentSparsityPatternsE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIdE28ExcDifferentSparsityPatternsE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIdE16ExcIteratorRangeE = weak_odr dso_local constant [45 x i8] c"N6dealii12SparseMatrixIdE16ExcIteratorRangeE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIdE16ExcIteratorRangeE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIdE16ExcIteratorRangeE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTVN6dealii12SparseMatrixIdE26ExcSourceEqualsDestinationE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIdE26ExcSourceEqualsDestinationE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii12SparseMatrixIdE26ExcSourceEqualsDestinationD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIdE26ExcSourceEqualsDestinationE = weak_odr dso_local constant [55 x i8] c"N6dealii12SparseMatrixIdE26ExcSourceEqualsDestinationE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIdE26ExcSourceEqualsDestinationE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIdE26ExcSourceEqualsDestinationE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIfEE = weak_odr dso_local constant [27 x i8] c"N6dealii12SparseMatrixIfEE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIfEE = weak_odr dso_local constant { ptr, ptr, i32, i32, ptr, i64 } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIfEE, i32 0, i32 1, ptr @_ZTIN6dealii11SubscriptorE, i64 -6141 }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIfE16ExcInvalidIndex1E = weak_odr dso_local constant [45 x i8] c"N6dealii12SparseMatrixIfE16ExcInvalidIndex1E\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIfE16ExcInvalidIndex1E = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIfE16ExcInvalidIndex1E, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTVN6dealii12SparseMatrixIfE28ExcDifferentSparsityPatternsE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIfE28ExcDifferentSparsityPatternsE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii12SparseMatrixIfE28ExcDifferentSparsityPatternsD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIfE28ExcDifferentSparsityPatternsE = weak_odr dso_local constant [57 x i8] c"N6dealii12SparseMatrixIfE28ExcDifferentSparsityPatternsE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIfE28ExcDifferentSparsityPatternsE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIfE28ExcDifferentSparsityPatternsE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIfE16ExcIteratorRangeE = weak_odr dso_local constant [45 x i8] c"N6dealii12SparseMatrixIfE16ExcIteratorRangeE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIfE16ExcIteratorRangeE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIfE16ExcIteratorRangeE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTVN6dealii12SparseMatrixIfE26ExcSourceEqualsDestinationE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIfE26ExcSourceEqualsDestinationE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii12SparseMatrixIfE26ExcSourceEqualsDestinationD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIfE26ExcSourceEqualsDestinationE = weak_odr dso_local constant [55 x i8] c"N6dealii12SparseMatrixIfE26ExcSourceEqualsDestinationE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIfE26ExcSourceEqualsDestinationE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIfE26ExcSourceEqualsDestinationE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIeEE = weak_odr dso_local constant [27 x i8] c"N6dealii12SparseMatrixIeEE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIeEE = weak_odr dso_local constant { ptr, ptr, i32, i32, ptr, i64 } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIeEE, i32 0, i32 1, ptr @_ZTIN6dealii11SubscriptorE, i64 -6141 }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIeE16ExcInvalidIndex1E = weak_odr dso_local constant [45 x i8] c"N6dealii12SparseMatrixIeE16ExcInvalidIndex1E\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIeE16ExcInvalidIndex1E = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIeE16ExcInvalidIndex1E, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTVN6dealii12SparseMatrixIeE28ExcDifferentSparsityPatternsE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIeE28ExcDifferentSparsityPatternsE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii12SparseMatrixIeE28ExcDifferentSparsityPatternsD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIeE28ExcDifferentSparsityPatternsE = weak_odr dso_local constant [57 x i8] c"N6dealii12SparseMatrixIeE28ExcDifferentSparsityPatternsE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIeE28ExcDifferentSparsityPatternsE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIeE28ExcDifferentSparsityPatternsE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIeE16ExcIteratorRangeE = weak_odr dso_local constant [45 x i8] c"N6dealii12SparseMatrixIeE16ExcIteratorRangeE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIeE16ExcIteratorRangeE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIeE16ExcIteratorRangeE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTVN6dealii12SparseMatrixIeE26ExcSourceEqualsDestinationE = weak_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii12SparseMatrixIeE26ExcSourceEqualsDestinationE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii12SparseMatrixIeE26ExcSourceEqualsDestinationD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIeE26ExcSourceEqualsDestinationE = weak_odr dso_local constant [55 x i8] c"N6dealii12SparseMatrixIeE26ExcSourceEqualsDestinationE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIeE26ExcSourceEqualsDestinationE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIeE26ExcSourceEqualsDestinationE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIdE15ExcInvalidIndexE = linkonce_odr dso_local constant [44 x i8] c"N6dealii12SparseMatrixIdE15ExcInvalidIndexE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIdE15ExcInvalidIndexE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIdE15ExcInvalidIndexE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIfE15ExcInvalidIndexE = linkonce_odr dso_local constant [44 x i8] c"N6dealii12SparseMatrixIfE15ExcInvalidIndexE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIfE15ExcInvalidIndexE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIfE15ExcInvalidIndexE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTSN6dealii12SparseMatrixIeE15ExcInvalidIndexE = linkonce_odr dso_local constant [44 x i8] c"N6dealii12SparseMatrixIeE15ExcInvalidIndexE\00", comdat, align 1
@_ZTIN6dealii12SparseMatrixIeE15ExcInvalidIndexE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii12SparseMatrixIeE15ExcInvalidIndexE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTVN6dealii18StandardExceptions5ExcIOE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii18StandardExceptions5ExcIOD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZTSN6dealii18StandardExceptions5ExcIOE = linkonce_odr dso_local constant [36 x i8] c"N6dealii18StandardExceptions5ExcIOE\00", comdat, align 1
@_ZTIN6dealii18StandardExceptions5ExcIOE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii18StandardExceptions5ExcIOE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTVN6dealii6VectorIdEE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii6VectorIdEE, ptr @_ZN6dealii6VectorIdED2Ev, ptr @_ZN6dealii6VectorIdED0Ev, ptr @_ZN6dealii6VectorIdE6reinitEjb, ptr @_ZN6dealii6VectorIdE4swapERS1_] }, comdat, align 8
@_ZTSN6dealii6VectorIdEE = linkonce_odr dso_local constant [20 x i8] c"N6dealii6VectorIdEE\00", comdat, align 1
@_ZTIN6dealii6VectorIdEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii6VectorIdEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTVN6dealii6VectorIfEE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii6VectorIfEE, ptr @_ZN6dealii6VectorIfED2Ev, ptr @_ZN6dealii6VectorIfED0Ev, ptr @_ZN6dealii6VectorIfE6reinitEjb, ptr @_ZN6dealii6VectorIfE4swapERS1_] }, comdat, align 8
@_ZTSN6dealii6VectorIfEE = linkonce_odr dso_local constant [20 x i8] c"N6dealii6VectorIfEE\00", comdat, align 1
@_ZTIN6dealii6VectorIfEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii6VectorIfEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTVN6dealii6VectorIeEE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii6VectorIeEE, ptr @_ZN6dealii6VectorIeED2Ev, ptr @_ZN6dealii6VectorIeED0Ev, ptr @_ZN6dealii6VectorIeE6reinitEjb, ptr @_ZN6dealii6VectorIeE4swapERS1_] }, comdat, align 8
@_ZTSN6dealii6VectorIeEE = linkonce_odr dso_local constant [20 x i8] c"N6dealii6VectorIeEE\00", comdat, align 1
@_ZTIN6dealii6VectorIeEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii6VectorIeEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@llvm.global_ctors = appending global [0 x { i32, ptr, ptr }] zeroinitializer

@_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexC1Eii = weak_odr dso_local unnamed_addr alias void (ptr, i32, i32), ptr @_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexC2Eii
@_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexD1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexD2Ev
@_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1C1Ei = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1C2Ei
@_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1D1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1D2Ev
@_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeC1Eii = weak_odr dso_local unnamed_addr alias void (ptr, i32, i32), ptr @_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeC2Eii
@_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeD1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeD2Ev
@_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexC1Eii = weak_odr dso_local unnamed_addr alias void (ptr, i32, i32), ptr @_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexC2Eii
@_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexD1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexD2Ev
@_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1C1Ei = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1C2Ei
@_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1D1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1D2Ev
@_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeC1Eii = weak_odr dso_local unnamed_addr alias void (ptr, i32, i32), ptr @_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeC2Eii
@_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeD1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeD2Ev
@_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexC1Eii = weak_odr dso_local unnamed_addr alias void (ptr, i32, i32), ptr @_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexC2Eii
@_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexD1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexD2Ev
@_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1C1Ei = weak_odr dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1C2Ei
@_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1D1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1D2Ev
@_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeC1Eii = weak_odr dso_local unnamed_addr alias void (ptr, i32, i32), ptr @_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeC2Eii
@_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeD1Ev = weak_odr dso_local unnamed_addr alias void (ptr), ptr @_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeD2Ev

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdEC2Ev(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1) unnamed_addr #0 comdat align 2 {
  %3 = load ptr, ptr %1, align 8
  store ptr %3, ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds ptr, ptr %1, i64 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr i8, ptr %3, i64 -24
  %7 = load i64, ptr %6, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 %7
  store ptr %5, ptr %8, align 8, !tbaa !5
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  store ptr null, ptr %9, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %10, align 8, !tbaa !12
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  store ptr null, ptr %11, align 8, !tbaa !13
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  store i32 0, ptr %12, align 8, !tbaa !16
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdEC1Ev(ptr noundef nonnull align 8 dereferenceable(36) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 40
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 1, i64 3), ptr %2, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  store ptr null, ptr %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %4, align 8, !tbaa !12
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  store ptr null, ptr %5, align 8, !tbaa !13
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  store i32 0, ptr %6, align 8, !tbaa !16
  ret void
}

declare void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72)) unnamed_addr #1

declare i32 @__gxx_personality_v0(...)

declare void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72)) unnamed_addr #1

; Function Attrs: noinline noreturn nounwind sspstrong uwtable
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #2 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #17
  tail call void @_ZSt9terminatev() #18
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(36) %2) unnamed_addr #0 comdat align 2 {
  %4 = load ptr, ptr %1, align 8
  store ptr %4, ptr %0, align 8, !tbaa !5
  %5 = getelementptr inbounds ptr, ptr %1, i64 1
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr i8, ptr %4, i64 -24
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 %8
  store ptr %6, ptr %9, align 8, !tbaa !5
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  store ptr null, ptr %10, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %11, align 8, !tbaa !12
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  store ptr null, ptr %12, align 8, !tbaa !13
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  store i32 0, ptr %13, align 8, !tbaa !16
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdEC1ERKS1_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 40
  %4 = load ptr, ptr %1, align 8, !tbaa !5
  %5 = getelementptr i8, ptr %4, i64 -24
  %6 = load i64, ptr %5, align 8
  %7 = getelementptr inbounds i8, ptr %1, i64 %6
  tail call void @_ZN6dealii11SubscriptorC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(72) %3, ptr noundef nonnull align 8 dereferenceable(72) %7)
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 1, i64 3), ptr %3, align 8, !tbaa !5
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  store ptr null, ptr %8, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %9, align 8, !tbaa !12
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  store ptr null, ptr %10, align 8, !tbaa !13
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  store i32 0, ptr %11, align 8, !tbaa !16
  ret void
}

declare void @_ZN6dealii11SubscriptorC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(72), ptr noundef nonnull align 8 dereferenceable(72)) unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdEC2ERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(122) %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = load ptr, ptr %1, align 8
  store ptr %4, ptr %0, align 8, !tbaa !5
  %5 = getelementptr inbounds ptr, ptr %1, i64 1
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr i8, ptr %4, i64 -24
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 %8
  store ptr %6, ptr %9, align 8, !tbaa !5
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  store ptr null, ptr %10, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %11, align 8, !tbaa !12
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  store ptr null, ptr %12, align 8, !tbaa !13
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  store i32 0, ptr %13, align 8, !tbaa !16
  %14 = load ptr, ptr %0, align 8, !tbaa !5
  %15 = getelementptr inbounds ptr, ptr %14, i64 2
  %16 = load ptr, ptr %15, align 8
  tail call void %16(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdEC1ERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 40
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 1, i64 3), ptr %3, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  store ptr null, ptr %4, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %5, align 8, !tbaa !12
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  store ptr null, ptr %6, align 8, !tbaa !13
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  store i32 0, ptr %7, align 8, !tbaa !16
  invoke void @_ZN6dealii12SparseMatrixIdE6reinitERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1)
          to label %8 unwind label %9

8:                                                ; preds = %2
  ret void

9:                                                ; preds = %2
  %10 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
          to label %11 unwind label %12

11:                                               ; preds = %9
  resume { ptr, i32 } %10

12:                                               ; preds = %9
  %13 = landingpad { ptr, i32 }
          catch ptr null
  %14 = extractvalue { ptr, i32 } %13, 0
  tail call void @__clang_call_terminate(ptr %14) #18
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdEC2ERKNS_15SparsityPatternERKNS_14IdentityMatrixE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(122) %2, ptr noundef nonnull align 4 dereferenceable(4) %3) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = load ptr, ptr %1, align 8
  store ptr %5, ptr %0, align 8, !tbaa !5
  %6 = getelementptr inbounds ptr, ptr %1, i64 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr i8, ptr %5, i64 -24
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 %9
  store ptr %7, ptr %10, align 8, !tbaa !5
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  store ptr null, ptr %11, align 8, !tbaa !8
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %12, align 8, !tbaa !12
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  store ptr null, ptr %13, align 8, !tbaa !13
  %14 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  store i32 0, ptr %14, align 8, !tbaa !16
  %15 = load ptr, ptr %0, align 8, !tbaa !5
  %16 = getelementptr inbounds ptr, ptr %15, i64 2
  %17 = load ptr, ptr %16, align 8
  tail call void %17(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %2)
  %18 = load ptr, ptr %11, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 3
  %20 = load i32, ptr %19, align 8, !tbaa !17
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %32, %4
  ret void

23:                                               ; preds = %4, %32
  %24 = phi ptr [ %34, %32 ], [ %18, %4 ]
  %25 = phi i32 [ %33, %32 ], [ 0, %4 ]
  %26 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %24, i32 noundef %25, i32 noundef %25)
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = load ptr, ptr %13, align 8, !tbaa !13
  %30 = zext i32 %26 to i64
  %31 = getelementptr inbounds double, ptr %29, i64 %30
  store double 1.000000e+00, ptr %31, align 8, !tbaa !30
  br label %32

32:                                               ; preds = %28, %23
  %33 = add nuw i32 %25, 1
  %34 = load ptr, ptr %11, align 8, !tbaa !8
  %35 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %34, i64 0, i32 3
  %36 = load i32, ptr %35, align 8, !tbaa !17
  %37 = icmp ult i32 %33, %36
  br i1 %37, label %23, label %22
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIdE1nEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 3
  %5 = load i32, ptr %4, align 8, !tbaa !17
  ret i32 %5
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3setEjjd(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, double noundef %3) local_unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %6, i32 noundef %1, i32 noundef %2)
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !13
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds double, ptr %11, i64 %12
  store double %3, ptr %13, align 8, !tbaa !30
  br label %14

14:                                               ; preds = %4, %9
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdEC1ERKNS_15SparsityPatternERKNS_14IdentityMatrixE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1, ptr noundef nonnull align 4 dereferenceable(4) %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds i8, ptr %0, i64 40
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 1, i64 3), ptr %4, align 8, !tbaa !5
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  store ptr null, ptr %5, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %6, align 8, !tbaa !12
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  store ptr null, ptr %7, align 8, !tbaa !13
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  store i32 0, ptr %8, align 8, !tbaa !16
  invoke void @_ZN6dealii12SparseMatrixIdE6reinitERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1)
          to label %9 unwind label %15

9:                                                ; preds = %3
  %10 = load ptr, ptr %5, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %10, i64 0, i32 3
  %12 = load i32, ptr %11, align 8, !tbaa !17
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %29, %9
  ret void

15:                                               ; preds = %3
  %16 = landingpad { ptr, i32 }
          cleanup
  br label %35

17:                                               ; preds = %19
  %18 = landingpad { ptr, i32 }
          cleanup
  br label %35

19:                                               ; preds = %9, %29
  %20 = phi ptr [ %31, %29 ], [ %10, %9 ]
  %21 = phi i32 [ %30, %29 ], [ 0, %9 ]
  %22 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %20, i32 noundef %21, i32 noundef %21)
          to label %23 unwind label %17

23:                                               ; preds = %19
  %24 = icmp eq i32 %22, -1
  br i1 %24, label %29, label %25

25:                                               ; preds = %23
  %26 = load ptr, ptr %7, align 8, !tbaa !13
  %27 = zext i32 %22 to i64
  %28 = getelementptr inbounds double, ptr %26, i64 %27
  store double 1.000000e+00, ptr %28, align 8, !tbaa !30
  br label %29

29:                                               ; preds = %25, %23
  %30 = add nuw i32 %21, 1
  %31 = load ptr, ptr %5, align 8, !tbaa !8
  %32 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %31, i64 0, i32 3
  %33 = load i32, ptr %32, align 8, !tbaa !17
  %34 = icmp ult i32 %30, %33
  br i1 %34, label %19, label %14

35:                                               ; preds = %15, %17
  %36 = phi { ptr, i32 } [ %18, %17 ], [ %16, %15 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
          to label %37 unwind label %38

37:                                               ; preds = %35
  resume { ptr, i32 } %36

38:                                               ; preds = %35
  %39 = landingpad { ptr, i32 }
          catch ptr null
  %40 = extractvalue { ptr, i32 } %39, 0
  tail call void @__clang_call_terminate(ptr %40) #18
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdED2Ev(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = load ptr, ptr %1, align 8
  store ptr %3, ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds ptr, ptr %1, i64 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr i8, ptr %3, i64 -24
  %7 = load i64, ptr %6, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 %7
  store ptr %5, ptr %8, align 8, !tbaa !5
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !8
  %11 = icmp eq ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  store ptr null, ptr %9, align 8, !tbaa !8
  br label %13

13:                                               ; preds = %2, %12
  %14 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !13
  %16 = icmp eq ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZdaPv(ptr noundef nonnull %15) #19
  br label %18

18:                                               ; preds = %17, %13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdED1Ev(ptr noundef nonnull align 8 dereferenceable(36) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds i8, ptr %0, i64 40
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 1, i64 3), ptr %2, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store ptr null, ptr %3, align 8, !tbaa !8
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdaPv(ptr noundef nonnull %9) #19
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZTv0_n24_N6dealii12SparseMatrixIdED1Ev(ptr noundef %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 -24
  %4 = load i64, ptr %3, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 %4
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 0, i64 3), ptr %5, align 8, !tbaa !5
  %6 = getelementptr inbounds i8, ptr %5, i64 40
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 1, i64 3), ptr %6, align 8, !tbaa !5
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %5, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  store ptr null, ptr %7, align 8, !tbaa !8
  br label %11

11:                                               ; preds = %10, %1
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %5, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !13
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdaPv(ptr noundef nonnull %13) #19
  br label %16

16:                                               ; preds = %11, %15
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %6)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdED0Ev(ptr noundef nonnull align 8 dereferenceable(36) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds i8, ptr %0, i64 40
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 1, i64 3), ptr %2, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store ptr null, ptr %3, align 8, !tbaa !8
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdaPv(ptr noundef nonnull %9) #19
  br label %12

12:                                               ; preds = %11, %7
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
          to label %13 unwind label %14

13:                                               ; preds = %12
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void

14:                                               ; preds = %12
  %15 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  resume { ptr, i32 } %15
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZTv0_n24_N6dealii12SparseMatrixIdED0Ev(ptr noundef %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 -24
  %4 = load i64, ptr %3, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 %4
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 0, i64 3), ptr %5, align 8, !tbaa !5
  %6 = getelementptr inbounds i8, ptr %5, i64 40
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdEE, i64 0, inrange i32 1, i64 3), ptr %6, align 8, !tbaa !5
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %5, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  store ptr null, ptr %7, align 8, !tbaa !8
  br label %11

11:                                               ; preds = %10, %1
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %5, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !13
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdaPv(ptr noundef nonnull %13) #19
  br label %16

16:                                               ; preds = %15, %11
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %6)
          to label %19 unwind label %17

17:                                               ; preds = %16
  %18 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %5) #19
  resume { ptr, i32 } %18

19:                                               ; preds = %16
  tail call void @_ZdlPv(ptr noundef nonnull %5) #19
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #6 comdat align 2 {
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIdEaSERKNS_14IdentityMatrixE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 4 dereferenceable(4) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = icmp eq ptr %4, null
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  br i1 %5, label %22, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %8
  %21 = shl nuw nsw i64 %18, 3
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %4, i8 0, i64 %21, i1 false), !tbaa !30
  br label %22

22:                                               ; preds = %2, %8, %20
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 3
  %25 = load i32, ptr %24, align 8, !tbaa !17
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %37, %22
  ret ptr %0

28:                                               ; preds = %22, %37
  %29 = phi ptr [ %39, %37 ], [ %7, %22 ]
  %30 = phi i32 [ %38, %37 ], [ 0, %22 ]
  %31 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %29, i32 noundef %30, i32 noundef %30)
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = load ptr, ptr %3, align 8, !tbaa !13
  %35 = zext i32 %31 to i64
  %36 = getelementptr inbounds double, ptr %34, i64 %35
  store double 1.000000e+00, ptr %36, align 8, !tbaa !30
  br label %37

37:                                               ; preds = %28, %33
  %38 = add nuw i32 %30, 1
  %39 = load ptr, ptr %23, align 8, !tbaa !8
  %40 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %39, i64 0, i32 3
  %41 = load i32, ptr %40, align 8, !tbaa !17
  %42 = icmp ult i32 %38, %41
  br i1 %42, label %28, label %27
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIdEaSEd(ptr noundef nonnull align 8 dereferenceable(36) %0, double noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = icmp eq ptr %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %6
  %21 = shl nuw nsw i64 %18, 3
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %4, i8 0, i64 %21, i1 false), !tbaa !30
  br label %22

22:                                               ; preds = %20, %6, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE6reinitERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store ptr %1, ptr %3, align 8, !tbaa !8
  br label %7

7:                                                ; preds = %2, %6
  %8 = tail call noundef zeroext i1 @_ZNK6dealii15SparsityPattern5emptyEv(ptr noundef nonnull align 8 dereferenceable(122) %1)
  br i1 %8, label %9, label %16

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !13
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZdaPv(ptr noundef nonnull %11) #19
  br label %14

14:                                               ; preds = %13, %9
  store ptr null, ptr %10, align 8, !tbaa !13
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  store i32 0, ptr %15, align 8, !tbaa !16
  br label %50

16:                                               ; preds = %7
  %17 = load ptr, ptr %3, align 8, !tbaa !8
  %18 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %17, i64 0, i32 8
  %19 = load ptr, ptr %18, align 8, !tbaa !32
  %20 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %17, i64 0, i32 2
  %21 = load i32, ptr %20, align 4, !tbaa !33
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i64, ptr %19, i64 %22
  %24 = load i64, ptr %23, align 8, !tbaa !34
  %25 = load i64, ptr %19, align 8, !tbaa !34
  %26 = sub i64 %24, %25
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  %29 = load i32, ptr %28, align 8, !tbaa !16
  %30 = icmp ult i32 %29, %27
  %31 = icmp eq i32 %29, 0
  %32 = or i1 %31, %30
  %33 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !13
  br i1 %32, label %35, label %42

35:                                               ; preds = %16
  %36 = icmp eq ptr %34, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %35
  tail call void @_ZdaPv(ptr noundef nonnull %34) #19
  br label %38

38:                                               ; preds = %37, %35
  %39 = shl i64 %26, 3
  %40 = and i64 %39, 34359738360
  %41 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %40) #20
  store ptr %41, ptr %33, align 8, !tbaa !13
  store i32 %27, ptr %28, align 8, !tbaa !16
  br label %42

42:                                               ; preds = %16, %38
  %43 = phi ptr [ %41, %38 ], [ %34, %16 ]
  %44 = icmp eq ptr %43, null
  %45 = icmp eq i32 %27, 0
  %46 = or i1 %45, %44
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = shl i64 %26, 3
  %49 = and i64 %48, 34359738360
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %43, i8 0, i64 %49, i1 false), !tbaa !30
  br label %50

50:                                               ; preds = %47, %42, %14
  ret void
}

declare noundef zeroext i1 @_ZNK6dealii15SparsityPattern5emptyEv(ptr noundef nonnull align 8 dereferenceable(122)) local_unnamed_addr #1

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #7

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE5clearEv(ptr noundef nonnull align 8 dereferenceable(36) %0) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store ptr null, ptr %2, align 8, !tbaa !8
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !13
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdaPv(ptr noundef nonnull %8) #19
  br label %11

11:                                               ; preds = %10, %6
  store ptr null, ptr %7, align 8, !tbaa !13
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  store i32 0, ptr %12, align 8, !tbaa !16
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii12SparseMatrixIdE5emptyEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call noundef zeroext i1 @_ZNK6dealii15SparsityPattern5emptyEv(ptr noundef nonnull align 8 dereferenceable(122) %3)
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ %6, %5 ], [ true, %1 ]
  ret i1 %8
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIdE1mEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !33
  ret i32 %5
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIdE18n_nonzero_elementsEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 8
  %5 = load ptr, ptr %4, align 8, !tbaa !32
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds i64, ptr %5, i64 %8
  %10 = load i64, ptr %9, align 8, !tbaa !34
  %11 = load i64, ptr %5, align 8, !tbaa !34
  %12 = sub i64 %10, %11
  %13 = trunc i64 %12 to i32
  ret i32 %13
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIdE27n_actually_nonzero_elementsEd(ptr noundef nonnull align 8 dereferenceable(36) %0, double noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %6 = load ptr, ptr %5, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %6, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = load i64, ptr %6, align 8, !tbaa !34
  %13 = sub i64 %11, %12
  %14 = and i64 %13, 4294967295
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %73, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  %19 = and i64 %13, 4294967295
  %20 = icmp ult i64 %19, 16
  br i1 %20, label %70, label %21

21:                                               ; preds = %16
  %22 = and i64 %13, 15
  %23 = sub nsw i64 %19, %22
  %24 = insertelement <4 x double> poison, double %1, i64 0
  %25 = shufflevector <4 x double> %24, <4 x double> poison, <4 x i32> zeroinitializer
  %26 = insertelement <4 x double> poison, double %1, i64 0
  %27 = shufflevector <4 x double> %26, <4 x double> poison, <4 x i32> zeroinitializer
  %28 = insertelement <4 x double> poison, double %1, i64 0
  %29 = shufflevector <4 x double> %28, <4 x double> poison, <4 x i32> zeroinitializer
  %30 = insertelement <4 x double> poison, double %1, i64 0
  %31 = shufflevector <4 x double> %30, <4 x double> poison, <4 x i32> zeroinitializer
  br label %32

32:                                               ; preds = %32, %21
  %33 = phi i64 [ 0, %21 ], [ %62, %32 ]
  %34 = phi <4 x i32> [ zeroinitializer, %21 ], [ %58, %32 ]
  %35 = phi <4 x i32> [ zeroinitializer, %21 ], [ %59, %32 ]
  %36 = phi <4 x i32> [ zeroinitializer, %21 ], [ %60, %32 ]
  %37 = phi <4 x i32> [ zeroinitializer, %21 ], [ %61, %32 ]
  %38 = getelementptr inbounds double, ptr %18, i64 %33
  %39 = load <4 x double>, ptr %38, align 8, !tbaa !30
  %40 = getelementptr inbounds double, ptr %38, i64 4
  %41 = load <4 x double>, ptr %40, align 8, !tbaa !30
  %42 = getelementptr inbounds double, ptr %38, i64 8
  %43 = load <4 x double>, ptr %42, align 8, !tbaa !30
  %44 = getelementptr inbounds double, ptr %38, i64 12
  %45 = load <4 x double>, ptr %44, align 8, !tbaa !30
  %46 = tail call <4 x double> @llvm.fabs.v4f64(<4 x double> %39)
  %47 = tail call <4 x double> @llvm.fabs.v4f64(<4 x double> %41)
  %48 = tail call <4 x double> @llvm.fabs.v4f64(<4 x double> %43)
  %49 = tail call <4 x double> @llvm.fabs.v4f64(<4 x double> %45)
  %50 = fcmp ogt <4 x double> %46, %25
  %51 = fcmp ogt <4 x double> %47, %27
  %52 = fcmp ogt <4 x double> %48, %29
  %53 = fcmp ogt <4 x double> %49, %31
  %54 = zext <4 x i1> %50 to <4 x i32>
  %55 = zext <4 x i1> %51 to <4 x i32>
  %56 = zext <4 x i1> %52 to <4 x i32>
  %57 = zext <4 x i1> %53 to <4 x i32>
  %58 = add <4 x i32> %34, %54
  %59 = add <4 x i32> %35, %55
  %60 = add <4 x i32> %36, %56
  %61 = add <4 x i32> %37, %57
  %62 = add nuw i64 %33, 16
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %64, label %32, !llvm.loop !35

64:                                               ; preds = %32
  %65 = add <4 x i32> %59, %58
  %66 = add <4 x i32> %60, %65
  %67 = add <4 x i32> %61, %66
  %68 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %67)
  %69 = icmp eq i64 %22, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %16, %64
  %71 = phi i64 [ 0, %16 ], [ %23, %64 ]
  %72 = phi i32 [ 0, %16 ], [ %68, %64 ]
  br label %75

73:                                               ; preds = %75, %64, %2
  %74 = phi i32 [ 0, %2 ], [ %68, %64 ], [ %83, %75 ]
  ret i32 %74

75:                                               ; preds = %70, %75
  %76 = phi i64 [ %84, %75 ], [ %71, %70 ]
  %77 = phi i32 [ %83, %75 ], [ %72, %70 ]
  %78 = getelementptr inbounds double, ptr %18, i64 %76
  %79 = load double, ptr %78, align 8, !tbaa !30
  %80 = tail call double @llvm.fabs.f64(double %79)
  %81 = fcmp ogt double %80, %1
  %82 = zext i1 %81 to i32
  %83 = add i32 %77, %82
  %84 = add nuw nsw i64 %76, 1
  %85 = icmp eq i64 %84, %19
  br i1 %85, label %73, label %75, !llvm.loop !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #8

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIdE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  %3 = load i32, ptr %2, align 8, !tbaa !16
  %4 = shl i32 %3, 3
  %5 = add i32 %4, 112
  ret i32 %5
}

declare noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122), i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3addEjjd(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, double noundef %3) local_unnamed_addr #4 comdat align 2 {
  %5 = fcmp oeq double %3, 0.000000e+00
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %8, i32 noundef %1, i32 noundef %2)
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !13
  %14 = zext i32 %9 to i64
  %15 = getelementptr inbounds double, ptr %13, i64 %14
  %16 = load double, ptr %15, align 8, !tbaa !30
  %17 = fadd double %16, %3
  store double %17, ptr %15, align 8, !tbaa !30
  br label %18

18:                                               ; preds = %11, %6, %4
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIdEmLEd(ptr noundef nonnull align 8 dereferenceable(36) %0, double noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !32
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !33
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i64, ptr %8, i64 %11
  %13 = load i64, ptr %12, align 8, !tbaa !34
  %14 = load i64, ptr %8, align 8, !tbaa !34
  %15 = sub i64 %13, %14
  %16 = and i64 %15, 4294967295
  %17 = getelementptr inbounds double, ptr %4, i64 %16
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %63, label %19

19:                                               ; preds = %2
  %20 = add nuw nsw i64 %16, 2305843009213693951
  %21 = and i64 %20, 2305843009213693951
  %22 = add nuw nsw i64 %21, 1
  %23 = icmp ult i64 %21, 15
  br i1 %23, label %55, label %24

24:                                               ; preds = %19
  %25 = and i64 %22, 4611686018427387888
  %26 = shl i64 %25, 3
  %27 = getelementptr i8, ptr %4, i64 %26
  %28 = insertelement <4 x double> poison, double %1, i64 0
  %29 = shufflevector <4 x double> %28, <4 x double> poison, <4 x i32> zeroinitializer
  %30 = insertelement <4 x double> poison, double %1, i64 0
  %31 = shufflevector <4 x double> %30, <4 x double> poison, <4 x i32> zeroinitializer
  %32 = insertelement <4 x double> poison, double %1, i64 0
  %33 = shufflevector <4 x double> %32, <4 x double> poison, <4 x i32> zeroinitializer
  %34 = insertelement <4 x double> poison, double %1, i64 0
  %35 = shufflevector <4 x double> %34, <4 x double> poison, <4 x i32> zeroinitializer
  br label %36

36:                                               ; preds = %36, %24
  %37 = phi i64 [ 0, %24 ], [ %51, %36 ]
  %38 = shl i64 %37, 3
  %39 = getelementptr i8, ptr %4, i64 %38
  %40 = load <4 x double>, ptr %39, align 8, !tbaa !30
  %41 = getelementptr double, ptr %39, i64 4
  %42 = load <4 x double>, ptr %41, align 8, !tbaa !30
  %43 = getelementptr double, ptr %39, i64 8
  %44 = load <4 x double>, ptr %43, align 8, !tbaa !30
  %45 = getelementptr double, ptr %39, i64 12
  %46 = load <4 x double>, ptr %45, align 8, !tbaa !30
  %47 = fmul <4 x double> %40, %29
  %48 = fmul <4 x double> %42, %31
  %49 = fmul <4 x double> %44, %33
  %50 = fmul <4 x double> %46, %35
  store <4 x double> %47, ptr %39, align 8, !tbaa !30
  store <4 x double> %48, ptr %41, align 8, !tbaa !30
  store <4 x double> %49, ptr %43, align 8, !tbaa !30
  store <4 x double> %50, ptr %45, align 8, !tbaa !30
  %51 = add nuw i64 %37, 16
  %52 = icmp eq i64 %51, %25
  br i1 %52, label %53, label %36, !llvm.loop !39

53:                                               ; preds = %36
  %54 = icmp eq i64 %22, %25
  br i1 %54, label %63, label %55

55:                                               ; preds = %19, %53
  %56 = phi ptr [ %4, %19 ], [ %27, %53 ]
  br label %57

57:                                               ; preds = %55, %57
  %58 = phi ptr [ %59, %57 ], [ %56, %55 ]
  %59 = getelementptr inbounds double, ptr %58, i64 1
  %60 = load double, ptr %58, align 8, !tbaa !30
  %61 = fmul double %60, %1
  store double %61, ptr %58, align 8, !tbaa !30
  %62 = icmp eq ptr %59, %17
  br i1 %62, label %63, label %57, !llvm.loop !40

63:                                               ; preds = %57, %53, %2
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIdEdVEd(ptr noundef nonnull align 8 dereferenceable(36) %0, double noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = fdiv double 1.000000e+00, %1
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !13
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, ptr %9, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = load i64, ptr %9, align 8, !tbaa !34
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds double, ptr %5, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %64, label %20

20:                                               ; preds = %2
  %21 = add nuw nsw i64 %17, 2305843009213693951
  %22 = and i64 %21, 2305843009213693951
  %23 = add nuw nsw i64 %22, 1
  %24 = icmp ult i64 %22, 15
  br i1 %24, label %56, label %25

25:                                               ; preds = %20
  %26 = and i64 %23, 4611686018427387888
  %27 = shl i64 %26, 3
  %28 = getelementptr i8, ptr %5, i64 %27
  %29 = insertelement <4 x double> poison, double %3, i64 0
  %30 = shufflevector <4 x double> %29, <4 x double> poison, <4 x i32> zeroinitializer
  %31 = insertelement <4 x double> poison, double %3, i64 0
  %32 = shufflevector <4 x double> %31, <4 x double> poison, <4 x i32> zeroinitializer
  %33 = insertelement <4 x double> poison, double %3, i64 0
  %34 = shufflevector <4 x double> %33, <4 x double> poison, <4 x i32> zeroinitializer
  %35 = insertelement <4 x double> poison, double %3, i64 0
  %36 = shufflevector <4 x double> %35, <4 x double> poison, <4 x i32> zeroinitializer
  br label %37

37:                                               ; preds = %37, %25
  %38 = phi i64 [ 0, %25 ], [ %52, %37 ]
  %39 = shl i64 %38, 3
  %40 = getelementptr i8, ptr %5, i64 %39
  %41 = load <4 x double>, ptr %40, align 8, !tbaa !30
  %42 = getelementptr double, ptr %40, i64 4
  %43 = load <4 x double>, ptr %42, align 8, !tbaa !30
  %44 = getelementptr double, ptr %40, i64 8
  %45 = load <4 x double>, ptr %44, align 8, !tbaa !30
  %46 = getelementptr double, ptr %40, i64 12
  %47 = load <4 x double>, ptr %46, align 8, !tbaa !30
  %48 = fmul <4 x double> %30, %41
  %49 = fmul <4 x double> %32, %43
  %50 = fmul <4 x double> %34, %45
  %51 = fmul <4 x double> %36, %47
  store <4 x double> %48, ptr %40, align 8, !tbaa !30
  store <4 x double> %49, ptr %42, align 8, !tbaa !30
  store <4 x double> %50, ptr %44, align 8, !tbaa !30
  store <4 x double> %51, ptr %46, align 8, !tbaa !30
  %52 = add nuw i64 %38, 16
  %53 = icmp eq i64 %52, %26
  br i1 %53, label %54, label %37, !llvm.loop !41

54:                                               ; preds = %37
  %55 = icmp eq i64 %23, %26
  br i1 %55, label %64, label %56

56:                                               ; preds = %20, %54
  %57 = phi ptr [ %5, %20 ], [ %28, %54 ]
  br label %58

58:                                               ; preds = %56, %58
  %59 = phi ptr [ %60, %58 ], [ %57, %56 ]
  %60 = getelementptr inbounds double, ptr %59, i64 1
  %61 = load double, ptr %59, align 8, !tbaa !30
  %62 = fmul double %3, %61
  store double %62, ptr %59, align 8, !tbaa !30
  %63 = icmp eq ptr %60, %18
  br i1 %63, label %64, label %58, !llvm.loop !42

64:                                               ; preds = %58, %54, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE10symmetrizeEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = zext i32 %5 to i64
  br label %11

10:                                               ; preds = %63, %1
  ret void

11:                                               ; preds = %7, %63
  %12 = phi i64 [ 0, %7 ], [ %24, %63 ]
  %13 = load ptr, ptr %8, align 8, !tbaa !13
  %14 = load ptr, ptr %2, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds i64, ptr %16, i64 %12
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = getelementptr inbounds double, ptr %13, i64 %18
  %20 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 11
  %21 = load i8, ptr %20, align 1, !tbaa !43, !range !44, !noundef !45
  %22 = zext i8 %21 to i64
  %23 = getelementptr inbounds double, ptr %19, i64 %22
  %24 = add nuw nsw i64 %12, 1
  %25 = getelementptr inbounds i64, ptr %16, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !34
  %27 = getelementptr inbounds double, ptr %13, i64 %26
  %28 = icmp eq ptr %23, %27
  br i1 %28, label %63, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %31 = load ptr, ptr %30, align 8, !tbaa !46
  %32 = add i64 %18, 1
  %33 = getelementptr inbounds i32, ptr %31, i64 %32
  %34 = trunc i64 %12 to i32
  br label %35

35:                                               ; preds = %29, %59
  %36 = phi ptr [ %60, %59 ], [ %23, %29 ]
  %37 = phi ptr [ %61, %59 ], [ %33, %29 ]
  %38 = load i32, ptr %37, align 4, !tbaa !47
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %12, %39
  br i1 %40, label %41, label %63

41:                                               ; preds = %35
  %42 = load double, ptr %36, align 8, !tbaa !30
  %43 = load ptr, ptr %8, align 8, !tbaa !13
  %44 = load ptr, ptr %2, align 8, !tbaa !8
  %45 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %44, i32 noundef %38, i32 noundef %34)
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds double, ptr %43, i64 %46
  %48 = load double, ptr %47, align 8, !tbaa !30
  %49 = fadd double %42, %48
  %50 = fmul double %49, 5.000000e-01
  store double %50, ptr %36, align 8, !tbaa !30
  %51 = load i32, ptr %37, align 4, !tbaa !47
  %52 = load ptr, ptr %2, align 8, !tbaa !8
  %53 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %52, i32 noundef %51, i32 noundef %34)
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %59, label %55

55:                                               ; preds = %41
  %56 = load ptr, ptr %8, align 8, !tbaa !13
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds double, ptr %56, i64 %57
  store double %50, ptr %58, align 8, !tbaa !30
  br label %59

59:                                               ; preds = %41, %55
  %60 = getelementptr inbounds double, ptr %36, i64 1
  %61 = getelementptr inbounds i32, ptr %37, i64 1
  %62 = icmp eq ptr %60, %27
  br i1 %62, label %63, label %35

63:                                               ; preds = %35, %59, %11
  %64 = icmp eq i64 %24, %9
  br i1 %64, label %10, label %11
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIdEclEjj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.dealii::SparseMatrix<double>::ExcInvalidIndex", align 8
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %6, i32 noundef %1, i32 noundef %2)
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %24

9:                                                ; preds = %3
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %4)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdE15ExcInvalidIndexE, i64 0, inrange i32 0, i64 2), ptr %4, align 8, !tbaa !5
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcInvalidIndex", ptr %4, i64 0, i32 1
  store i32 %1, ptr %10, align 4, !tbaa !48
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcInvalidIndex", ptr %4, i64 0, i32 2
  store i32 %2, ptr %11, align 8, !tbaa !52
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %4, ptr noundef nonnull @.str.9, i32 noundef 2270, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.11, ptr noundef nonnull @.str.12)
          to label %12 unwind label %20

12:                                               ; preds = %9
  %13 = call ptr @__cxa_allocate_exception(i64 72) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %13, ptr noundef nonnull align 8 dereferenceable(60) %4)
          to label %14 unwind label %18

14:                                               ; preds = %12
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdE15ExcInvalidIndexE, i64 0, inrange i32 0, i64 2), ptr %13, align 8, !tbaa !5
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcInvalidIndex", ptr %13, i64 0, i32 1
  %16 = load i64, ptr %10, align 4
  store i64 %16, ptr %15, align 4
  invoke void @__cxa_throw(ptr nonnull %13, ptr nonnull @_ZTIN6dealii12SparseMatrixIdE15ExcInvalidIndexE, ptr nonnull @_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexD2Ev) #21
          to label %17 unwind label %20

17:                                               ; preds = %14
  unreachable

18:                                               ; preds = %12
  %19 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %13) #17
  br label %22

20:                                               ; preds = %14, %9
  %21 = landingpad { ptr, i32 }
          cleanup
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi { ptr, i32 } [ %21, %20 ], [ %19, %18 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %4) #17
  resume { ptr, i32 } %23

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !13
  %27 = load ptr, ptr %5, align 8, !tbaa !8
  %28 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %27, i32 noundef %1, i32 noundef %2)
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds double, ptr %26, i64 %29
  %31 = load double, ptr %30, align 8, !tbaa !30
  ret double %31
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIdE2elEjj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %5, i32 noundef %1, i32 noundef %2)
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !13
  %11 = zext i32 %6 to i64
  %12 = getelementptr inbounds double, ptr %10, i64 %11
  %13 = load double, ptr %12, align 8, !tbaa !30
  br label %14

14:                                               ; preds = %3, %8
  %15 = phi double [ %13, %8 ], [ 0.000000e+00, %3 ]
  ret double %15
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIdE12diag_elementEj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !32
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds i64, ptr %8, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = getelementptr inbounds double, ptr %4, i64 %11
  %13 = load double, ptr %12, align 8, !tbaa !30
  ret double %13
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(8) ptr @_ZN6dealii12SparseMatrixIdE12diag_elementEj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !32
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds i64, ptr %8, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = getelementptr inbounds double, ptr %4, i64 %11
  ret ptr %12
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIdE9raw_entryEjj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !13
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds i64, ptr %9, i64 %10
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = zext i32 %2 to i64
  %14 = add i64 %12, %13
  %15 = getelementptr inbounds double, ptr %5, i64 %14
  %16 = load double, ptr %15, align 8, !tbaa !30
  ret double %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIdE12global_entryEj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds double, ptr %4, i64 %5
  %7 = load double, ptr %6, align 8, !tbaa !30
  ret double %7
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(8) ptr @_ZN6dealii12SparseMatrixIdE12global_entryEj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds double, ptr %4, i64 %5
  ret ptr %6
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIdE7l1_normEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.dealii::Vector", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %2) #17
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 3
  %6 = load i32, ptr %5, align 8, !tbaa !17
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !5
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %1
  %10 = zext i32 %6 to i64
  %11 = shl nuw nsw i64 %10, 3
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #20
          to label %13 unwind label %16

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 2
  store ptr %12, ptr %14, align 8, !tbaa !53
  store i32 %6, ptr %15, align 4, !tbaa !55
  store i32 %6, ptr %7, align 8, !tbaa !56
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %12, i8 0, i64 %11, i1 false), !tbaa !30
  br label %23

16:                                               ; preds = %9
  %17 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
          to label %18 unwind label %20

18:                                               ; preds = %16, %75
  %19 = phi { ptr, i32 } [ %42, %75 ], [ %17, %16 ]
  resume { ptr, i32 } %19

20:                                               ; preds = %16
  %21 = landingpad { ptr, i32 }
          catch ptr null
  %22 = extractvalue { ptr, i32 } %21, 0
  call void @__clang_call_terminate(ptr %22) #18
  unreachable

23:                                               ; preds = %1, %13
  %24 = phi ptr [ null, %1 ], [ %12, %13 ]
  %25 = load ptr, ptr %3, align 8, !tbaa !8
  %26 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !33
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 8
  %31 = load ptr, ptr %30, align 8, !tbaa !32
  %32 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 9
  %35 = zext i32 %27 to i64
  %36 = load i64, ptr %31, align 8, !tbaa !34
  br label %43

37:                                               ; preds = %54, %43
  %38 = icmp eq i64 %46, %35
  br i1 %38, label %39, label %43

39:                                               ; preds = %37, %23
  %40 = invoke noundef double @_ZNK6dealii6VectorIdE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(88) %2)
          to label %69 unwind label %41

41:                                               ; preds = %39
  %42 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %2)
          to label %75 unwind label %76

43:                                               ; preds = %29, %37
  %44 = phi i64 [ %36, %29 ], [ %48, %37 ]
  %45 = phi i64 [ 0, %29 ], [ %46, %37 ]
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr inbounds i64, ptr %31, i64 %46
  %48 = load i64, ptr %47, align 8, !tbaa !34
  %49 = and i64 %44, 4294967295
  %50 = icmp ugt i64 %48, %49
  br i1 %50, label %51, label %37

51:                                               ; preds = %43
  %52 = trunc i64 %44 to i32
  %53 = load ptr, ptr %34, align 8, !tbaa !46
  br label %54

54:                                               ; preds = %51, %54
  %55 = phi i64 [ %49, %51 ], [ %67, %54 ]
  %56 = phi i32 [ %52, %51 ], [ %66, %54 ]
  %57 = getelementptr inbounds double, ptr %33, i64 %55
  %58 = load double, ptr %57, align 8, !tbaa !30
  %59 = call double @llvm.fabs.f64(double %58)
  %60 = getelementptr inbounds i32, ptr %53, i64 %55
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds double, ptr %24, i64 %62
  %64 = load double, ptr %63, align 8, !tbaa !30
  %65 = fadd double %59, %64
  store double %65, ptr %63, align 8, !tbaa !30
  %66 = add i32 %56, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %48, %67
  br i1 %68, label %54, label %37

69:                                               ; preds = %39
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !5
  %70 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %71 = load ptr, ptr %70, align 8, !tbaa !53
  %72 = icmp eq ptr %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  call void @_ZdaPv(ptr noundef nonnull %71) #19
  store ptr null, ptr %70, align 8, !tbaa !53
  br label %74

74:                                               ; preds = %69, %73
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %2) #17
  ret double %40

75:                                               ; preds = %41
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %2) #17
  br label %18

76:                                               ; preds = %41
  %77 = landingpad { ptr, i32 }
          catch ptr null
  %78 = extractvalue { ptr, i32 } %77, 0
  call void @__clang_call_terminate(ptr %78) #18
  unreachable
}

declare noundef double @_ZNK6dealii6VectorIdE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #4 comdat align 2 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !53
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #19
  store ptr null, ptr %2, align 8, !tbaa !53
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIdE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !13
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !32
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %1
  %12 = load i64, ptr %7, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %3, i64 %12
  %14 = zext i32 %9 to i64
  br label %17

15:                                               ; preds = %34, %1
  %16 = phi double [ 0.000000e+00, %1 ], [ %38, %34 ]
  ret double %16

17:                                               ; preds = %11, %34
  %18 = phi i64 [ 0, %11 ], [ %21, %34 ]
  %19 = phi ptr [ %13, %11 ], [ %36, %34 ]
  %20 = phi double [ 0.000000e+00, %11 ], [ %38, %34 ]
  %21 = add nuw nsw i64 %18, 1
  %22 = getelementptr inbounds i64, ptr %7, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !34
  %24 = getelementptr inbounds double, ptr %3, i64 %23
  %25 = icmp eq ptr %19, %24
  br i1 %25, label %34, label %26

26:                                               ; preds = %17, %26
  %27 = phi ptr [ %29, %26 ], [ %19, %17 ]
  %28 = phi double [ %32, %26 ], [ 0.000000e+00, %17 ]
  %29 = getelementptr inbounds double, ptr %27, i64 1
  %30 = load double, ptr %27, align 8, !tbaa !30
  %31 = tail call double @llvm.fabs.f64(double %30)
  %32 = fadd double %28, %31
  %33 = icmp eq ptr %29, %24
  br i1 %33, label %34, label %26

34:                                               ; preds = %26, %17
  %35 = phi double [ 0.000000e+00, %17 ], [ %32, %26 ]
  %36 = phi ptr [ %19, %17 ], [ %24, %26 ]
  %37 = fcmp ogt double %35, %20
  %38 = select i1 %37, double %35, double %20
  %39 = icmp eq i64 %21, %14
  br i1 %39, label %15, label %17
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIdE14frobenius_normEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !33
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !13
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds i64, ptr %9, i64 %10
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %7, i64 %12
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %18, %1
  %16 = phi double [ 0.000000e+00, %1 ], [ %23, %18 ]
  %17 = tail call double @sqrt(double noundef %16) #17
  ret double %17

18:                                               ; preds = %1, %18
  %19 = phi ptr [ %24, %18 ], [ %7, %1 ]
  %20 = phi double [ %23, %18 ], [ 0.000000e+00, %1 ]
  %21 = load double, ptr %19, align 8, !tbaa !30
  %22 = fmul double %21, %21
  %23 = fadd double %20, %22
  %24 = getelementptr inbounds double, ptr %19, i64 1
  %25 = icmp eq ptr %24, %13
  br i1 %25, label %15, label %18
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @sqrt(double noundef) local_unnamed_addr #10

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5beginEv(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %8 = zext i32 %6 to i64
  br label %9

9:                                                ; preds = %12, %2
  %10 = phi i64 [ %14, %12 ], [ 0, %2 ]
  %11 = icmp eq i64 %10, %8
  br i1 %11, label %24, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr %7, align 8, !tbaa !32
  %14 = add nuw nsw i64 %10, 1
  %15 = getelementptr inbounds i64, ptr %13, i64 %14
  %16 = load i64, ptr %15, align 8, !tbaa !34
  %17 = getelementptr inbounds i64, ptr %13, i64 %10
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = sub i64 %16, %18
  %20 = and i64 %19, 4294967295
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %9, label %22

22:                                               ; preds = %12
  %23 = trunc i64 %10 to i32
  br label %24

24:                                               ; preds = %9, %22
  %25 = phi i32 [ %23, %22 ], [ %6, %9 ]
  store ptr %4, ptr %0, align 8, !tbaa !57
  %26 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %25, ptr %26, align 8, !tbaa !59
  %27 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %27, align 4, !tbaa !60
  %28 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor", ptr %0, i64 0, i32 1
  store ptr %1, ptr %28, align 8, !tbaa !61
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE3endEv(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  store ptr %4, ptr %0, align 8, !tbaa !57
  %5 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  store i32 %7, ptr %5, align 8, !tbaa !59
  %8 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %8, align 4, !tbaa !60
  %9 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor", ptr %0, i64 0, i32 1
  store ptr %1, ptr %9, align 8, !tbaa !61
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE5beginEv(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.16") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %8 = zext i32 %6 to i64
  br label %9

9:                                                ; preds = %12, %2
  %10 = phi i64 [ %14, %12 ], [ 0, %2 ]
  %11 = icmp eq i64 %10, %8
  br i1 %11, label %24, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr %7, align 8, !tbaa !32
  %14 = add nuw nsw i64 %10, 1
  %15 = getelementptr inbounds i64, ptr %13, i64 %14
  %16 = load i64, ptr %15, align 8, !tbaa !34
  %17 = getelementptr inbounds i64, ptr %13, i64 %10
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = sub i64 %16, %18
  %20 = and i64 %19, 4294967295
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %9, label %22

22:                                               ; preds = %12
  %23 = trunc i64 %10 to i32
  br label %24

24:                                               ; preds = %9, %22
  %25 = phi i32 [ %23, %22 ], [ %6, %9 ]
  store ptr %4, ptr %0, align 8, !tbaa !57
  %26 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %25, ptr %26, align 8, !tbaa !59
  %27 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %27, align 4, !tbaa !60
  %28 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.17", ptr %0, i64 0, i32 1
  store ptr %1, ptr %28, align 8, !tbaa !63
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3endEv(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.16") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  store ptr %4, ptr %0, align 8, !tbaa !57
  %7 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %6, ptr %7, align 8, !tbaa !59
  %8 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %8, align 4, !tbaa !60
  %9 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.17", ptr %0, i64 0, i32 1
  store ptr %1, ptr %9, align 8, !tbaa !63
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5beginEj(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !32
  %8 = add i32 %2, 1
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %7, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = zext i32 %2 to i64
  %13 = getelementptr inbounds i64, ptr %7, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = sub i64 %11, %14
  %16 = and i64 %15, 4294967295
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %34

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33, !noalias !65
  br label %21

21:                                               ; preds = %26, %18
  %22 = phi i64 [ %11, %18 ], [ %30, %26 ]
  %23 = phi i32 [ %2, %18 ], [ %24, %26 ]
  %24 = add i32 %23, 1
  %25 = icmp ult i32 %24, %20
  br i1 %25, label %26, label %34

26:                                               ; preds = %21
  %27 = add i32 %23, 2
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i64, ptr %7, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34, !noalias !65
  %31 = sub i64 %30, %22
  %32 = and i64 %31, 4294967295
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %21, label %34

34:                                               ; preds = %26, %21, %3
  %35 = phi i32 [ %2, %3 ], [ %24, %26 ], [ %20, %21 ]
  store ptr %5, ptr %0, align 8, !tbaa !57
  %36 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %35, ptr %36, align 8, !tbaa !59
  %37 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %37, align 4, !tbaa !60
  %38 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor", ptr %0, i64 0, i32 1
  store ptr %1, ptr %38, align 8, !tbaa !61
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE3endEj(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  br label %9

9:                                                ; preds = %13, %3
  %10 = phi i32 [ %2, %3 ], [ %11, %13 ]
  %11 = add i32 %10, 1
  %12 = icmp ult i32 %11, %7
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = load ptr, ptr %8, align 8, !tbaa !32
  %15 = add i32 %10, 2
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i64, ptr %14, i64 %16
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = zext i32 %11 to i64
  %20 = getelementptr inbounds i64, ptr %14, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !34
  %22 = sub i64 %18, %21
  %23 = and i64 %22, 4294967295
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %9, label %25

25:                                               ; preds = %9, %13
  %26 = phi i32 [ %11, %13 ], [ %7, %9 ]
  store ptr %5, ptr %0, align 8, !tbaa !57
  %27 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %26, ptr %27, align 8, !tbaa !59
  %28 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %28, align 4, !tbaa !60
  %29 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor", ptr %0, i64 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !61
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE5beginEj(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.16") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !32
  %8 = add i32 %2, 1
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %7, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = zext i32 %2 to i64
  %13 = getelementptr inbounds i64, ptr %7, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = sub i64 %11, %14
  %16 = and i64 %15, 4294967295
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %34

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33, !noalias !68
  br label %21

21:                                               ; preds = %26, %18
  %22 = phi i64 [ %11, %18 ], [ %30, %26 ]
  %23 = phi i32 [ %2, %18 ], [ %24, %26 ]
  %24 = add i32 %23, 1
  %25 = icmp ult i32 %24, %20
  br i1 %25, label %26, label %34

26:                                               ; preds = %21
  %27 = add i32 %23, 2
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i64, ptr %7, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34, !noalias !68
  %31 = sub i64 %30, %22
  %32 = and i64 %31, 4294967295
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %21, label %34

34:                                               ; preds = %26, %21, %3
  %35 = phi i32 [ %2, %3 ], [ %24, %26 ], [ %20, %21 ]
  store ptr %5, ptr %0, align 8, !tbaa !57
  %36 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %35, ptr %36, align 8, !tbaa !59
  %37 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %37, align 4, !tbaa !60
  %38 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.17", ptr %0, i64 0, i32 1
  store ptr %1, ptr %38, align 8, !tbaa !63
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3endEj(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.16") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  br label %9

9:                                                ; preds = %13, %3
  %10 = phi i32 [ %2, %3 ], [ %11, %13 ]
  %11 = add i32 %10, 1
  %12 = icmp ult i32 %11, %7
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = load ptr, ptr %8, align 8, !tbaa !32
  %15 = add i32 %10, 2
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i64, ptr %14, i64 %16
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = zext i32 %11 to i64
  %20 = getelementptr inbounds i64, ptr %14, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !34
  %22 = sub i64 %18, %21
  %23 = and i64 %22, 4294967295
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %9, label %25

25:                                               ; preds = %9, %13
  %26 = phi i32 [ %11, %13 ], [ %7, %9 ]
  store ptr %5, ptr %0, align 8, !tbaa !57
  %27 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %26, ptr %27, align 8, !tbaa !59
  %28 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %28, align 4, !tbaa !60
  %29 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.17", ptr %0, i64 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !63
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5printERSo(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  br label %26

11:                                               ; preds = %78, %26
  %12 = phi ptr [ %27, %26 ], [ %84, %78 ]
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %12, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !33
  %15 = zext i32 %14 to i64
  %16 = icmp ult i64 %33, %15
  br i1 %16, label %26, label %17

17:                                               ; preds = %11, %2
  %18 = load ptr, ptr %1, align 8, !tbaa !5
  %19 = getelementptr i8, ptr %18, i64 -24
  %20 = load i64, ptr %19, align 8
  %21 = getelementptr inbounds i8, ptr %1, i64 %20
  %22 = getelementptr inbounds %"class.std::ios_base", ptr %21, i64 0, i32 5
  %23 = load i32, ptr %22, align 8, !tbaa !71
  %24 = and i32 %23, 5
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %101, label %90

26:                                               ; preds = %9, %11
  %27 = phi ptr [ %5, %9 ], [ %12, %11 ]
  %28 = phi i64 [ 0, %9 ], [ %33, %11 ]
  %29 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %27, i64 0, i32 8
  %30 = load ptr, ptr %29, align 8, !tbaa !32
  %31 = getelementptr inbounds i64, ptr %30, i64 %28
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = add nuw nsw i64 %28, 1
  %34 = and i64 %32, 4294967295
  %35 = getelementptr inbounds i64, ptr %30, i64 %33
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = icmp ugt i64 %36, %34
  br i1 %37, label %38, label %11

38:                                               ; preds = %26
  %39 = trunc i64 %32 to i32
  br label %40

40:                                               ; preds = %38, %78
  %41 = phi i64 [ %83, %78 ], [ %34, %38 ]
  %42 = phi i32 [ %82, %78 ], [ %39, %38 ]
  %43 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.13, i64 noundef 1)
  %44 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, i64 noundef %28)
  %45 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %44, ptr noundef nonnull @.str.14, i64 noundef 1)
  %46 = load ptr, ptr %4, align 8, !tbaa !8
  %47 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %46, i64 0, i32 9
  %48 = load ptr, ptr %47, align 8, !tbaa !46
  %49 = getelementptr inbounds i32, ptr %48, i64 %41
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = zext i32 %50 to i64
  %52 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %44, i64 noundef %51)
  %53 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %52, ptr noundef nonnull @.str.15, i64 noundef 2)
  %54 = load ptr, ptr %10, align 8, !tbaa !13
  %55 = getelementptr inbounds double, ptr %54, i64 %41
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %52, double noundef %56)
  %58 = load ptr, ptr %57, align 8, !tbaa !5
  %59 = getelementptr i8, ptr %58, i64 -24
  %60 = load i64, ptr %59, align 8
  %61 = getelementptr inbounds i8, ptr %57, i64 %60
  %62 = getelementptr inbounds %"class.std::basic_ios", ptr %61, i64 0, i32 5
  %63 = load ptr, ptr %62, align 8, !tbaa !77
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %66

65:                                               ; preds = %40
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

66:                                               ; preds = %40
  %67 = getelementptr inbounds %"class.std::ctype", ptr %63, i64 0, i32 8
  %68 = load i8, ptr %67, align 8, !tbaa !79
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.std::ctype", ptr %63, i64 0, i32 9, i64 10
  %72 = load i8, ptr %71, align 1, !tbaa !82
  br label %78

73:                                               ; preds = %66
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %63)
  %74 = load ptr, ptr %63, align 8, !tbaa !5
  %75 = getelementptr inbounds ptr, ptr %74, i64 6
  %76 = load ptr, ptr %75, align 8
  %77 = tail call noundef signext i8 %76(ptr noundef nonnull align 8 dereferenceable(570) %63, i8 noundef signext 10)
  br label %78

78:                                               ; preds = %70, %73
  %79 = phi i8 [ %72, %70 ], [ %77, %73 ]
  %80 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %57, i8 noundef signext %79)
  %81 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %80)
  %82 = add i32 %42, 1
  %83 = zext i32 %82 to i64
  %84 = load ptr, ptr %4, align 8, !tbaa !8
  %85 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %84, i64 0, i32 8
  %86 = load ptr, ptr %85, align 8, !tbaa !32
  %87 = getelementptr inbounds i64, ptr %86, i64 %33
  %88 = load i64, ptr %87, align 8, !tbaa !34
  %89 = icmp ugt i64 %88, %83
  br i1 %89, label %40, label %11

90:                                               ; preds = %17
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.16, i32 noundef 1591, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %91 unwind label %97

91:                                               ; preds = %90
  %92 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %92, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %93 unwind label %95

93:                                               ; preds = %91
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %92, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %92, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %94 unwind label %97

94:                                               ; preds = %93
  unreachable

95:                                               ; preds = %91
  %96 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %92) #17
  br label %99

97:                                               ; preds = %93, %90
  %98 = landingpad { ptr, i32 }
          cleanup
  br label %99

99:                                               ; preds = %95, %97
  %100 = phi { ptr, i32 } [ %98, %97 ], [ %96, %95 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #17
  resume { ptr, i32 } %100

101:                                              ; preds = %17
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE15print_formattedERSojbjPKcd(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %2, i1 noundef zeroext %3, i32 noundef %4, ptr noundef %5, double noundef %6) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %11 = load ptr, ptr %1, align 8, !tbaa !5
  %12 = getelementptr i8, ptr %11, i64 -24
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds i8, ptr %1, i64 %13
  %15 = getelementptr inbounds %"class.std::ios_base", ptr %14, i64 0, i32 3
  %16 = load i32, ptr %15, align 8, !tbaa !83
  %17 = zext i32 %2 to i64
  %18 = getelementptr inbounds %"class.std::ios_base", ptr %14, i64 0, i32 1
  %19 = load i64, ptr %18, align 8, !tbaa !84
  store i64 %17, ptr %18, align 8, !tbaa !84
  %20 = load i64, ptr %12, align 8
  %21 = getelementptr inbounds i8, ptr %1, i64 %20
  %22 = getelementptr inbounds %"class.std::ios_base", ptr %21, i64 0, i32 3
  %23 = load i32, ptr %22, align 8, !tbaa !85
  %24 = and i32 %23, -261
  %25 = select i1 %3, i32 256, i32 4
  %26 = or i32 %24, %25
  store i32 %26, ptr %22, align 8, !tbaa !85
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %28 = getelementptr %"class.std::basic_ios", ptr %1, i64 0, i32 5
  %29 = load ptr, ptr %27, align 8, !tbaa !8
  %30 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %29, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !33
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %50, label %33

33:                                               ; preds = %7
  %34 = icmp eq i32 %4, 0
  %35 = select i1 %3, i32 7, i32 2
  %36 = add i32 %35, %2
  %37 = select i1 %34, i32 %36, i32 %4
  %38 = getelementptr %"class.std::ios_base", ptr %1, i64 0, i32 2
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %41 = icmp eq ptr %5, null
  br label %42

42:                                               ; preds = %33, %79
  %43 = phi ptr [ %29, %33 ], [ %84, %79 ]
  %44 = phi i32 [ 0, %33 ], [ %83, %79 ]
  %45 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %43, i64 0, i32 3
  %46 = load i32, ptr %45, align 8, !tbaa !17
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %59, label %88

48:                                               ; preds = %79
  %49 = load ptr, ptr %1, align 8, !tbaa !5
  br label %50

50:                                               ; preds = %48, %7
  %51 = phi ptr [ %49, %48 ], [ %11, %7 ]
  %52 = getelementptr i8, ptr %51, i64 -24
  %53 = load i64, ptr %52, align 8
  %54 = getelementptr inbounds i8, ptr %1, i64 %53
  %55 = getelementptr inbounds %"class.std::ios_base", ptr %54, i64 0, i32 5
  %56 = load i32, ptr %55, align 8, !tbaa !71
  %57 = and i32 %56, 5
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %157, label %146

59:                                               ; preds = %140, %42
  %60 = load ptr, ptr %1, align 8, !tbaa !5
  %61 = getelementptr i8, ptr %60, i64 -24
  %62 = load i64, ptr %61, align 8
  %63 = getelementptr i8, ptr %28, i64 %62
  %64 = load ptr, ptr %63, align 8, !tbaa !77
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %67

66:                                               ; preds = %59
  call void @_ZSt16__throw_bad_castv() #21
  unreachable

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.std::ctype", ptr %64, i64 0, i32 8
  %69 = load i8, ptr %68, align 8, !tbaa !79
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::ctype", ptr %64, i64 0, i32 9, i64 10
  %73 = load i8, ptr %72, align 1, !tbaa !82
  br label %79

74:                                               ; preds = %67
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %64)
  %75 = load ptr, ptr %64, align 8, !tbaa !5
  %76 = getelementptr inbounds ptr, ptr %75, i64 6
  %77 = load ptr, ptr %76, align 8
  %78 = call noundef signext i8 %77(ptr noundef nonnull align 8 dereferenceable(570) %64, i8 noundef signext 10)
  br label %79

79:                                               ; preds = %71, %74
  %80 = phi i8 [ %73, %71 ], [ %78, %74 ]
  %81 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %80)
  %82 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %81)
  %83 = add nuw i32 %44, 1
  %84 = load ptr, ptr %27, align 8, !tbaa !8
  %85 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %84, i64 0, i32 2
  %86 = load i32, ptr %85, align 4, !tbaa !33
  %87 = icmp ult i32 %83, %86
  br i1 %87, label %42, label %48

88:                                               ; preds = %42, %140
  %89 = phi ptr [ %142, %140 ], [ %43, %42 ]
  %90 = phi i32 [ %141, %140 ], [ 0, %42 ]
  %91 = call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %89, i32 noundef %44, i32 noundef %90)
  %92 = icmp eq i32 %91, -1
  %93 = load ptr, ptr %1, align 8, !tbaa !5
  %94 = getelementptr i8, ptr %93, i64 -24
  %95 = load i64, ptr %94, align 8
  %96 = getelementptr i8, ptr %38, i64 %95
  store i64 %39, ptr %96, align 8, !tbaa !86
  br i1 %92, label %118, label %97

97:                                               ; preds = %88
  %98 = load ptr, ptr %40, align 8, !tbaa !13
  %99 = load ptr, ptr %27, align 8, !tbaa !8
  %100 = call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %99, i32 noundef %44, i32 noundef %90)
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds double, ptr %98, i64 %101
  %103 = load double, ptr %102, align 8, !tbaa !30
  %104 = fmul double %103, %6
  %105 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, double noundef %104)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9)
  store i8 32, ptr %9, align 1, !tbaa !82
  %106 = load ptr, ptr %105, align 8, !tbaa !5
  %107 = getelementptr i8, ptr %106, i64 -24
  %108 = load i64, ptr %107, align 8
  %109 = getelementptr inbounds i8, ptr %105, i64 %108
  %110 = getelementptr inbounds %"class.std::ios_base", ptr %109, i64 0, i32 2
  %111 = load i64, ptr %110, align 8, !tbaa !86
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %97
  %114 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %105, ptr noundef nonnull %9, i64 noundef 1)
  br label %117

115:                                              ; preds = %97
  %116 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %105, i8 noundef signext 32)
  br label %117

117:                                              ; preds = %113, %115
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9)
  br label %140

118:                                              ; preds = %88
  br i1 %41, label %119, label %125

119:                                              ; preds = %118
  %120 = load i64, ptr %94, align 8
  %121 = getelementptr inbounds i8, ptr %1, i64 %120
  %122 = getelementptr inbounds %"class.std::ios_base", ptr %121, i64 0, i32 5
  %123 = load i32, ptr %122, align 8, !tbaa !71
  %124 = or i32 %123, 1
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(ptr noundef nonnull align 8 dereferenceable(264) %121, i32 noundef %124)
  br label %128

125:                                              ; preds = %118
  %126 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %5) #17
  %127 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %5, i64 noundef %126)
  br label %128

128:                                              ; preds = %119, %125
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8)
  store i8 32, ptr %8, align 1, !tbaa !82
  %129 = load ptr, ptr %1, align 8, !tbaa !5
  %130 = getelementptr i8, ptr %129, i64 -24
  %131 = load i64, ptr %130, align 8
  %132 = getelementptr i8, ptr %38, i64 %131
  %133 = load i64, ptr %132, align 8, !tbaa !86
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %128
  %136 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %8, i64 noundef 1)
  br label %139

137:                                              ; preds = %128
  %138 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 32)
  br label %139

139:                                              ; preds = %135, %137
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8)
  br label %140

140:                                              ; preds = %117, %139
  %141 = add nuw i32 %90, 1
  %142 = load ptr, ptr %27, align 8, !tbaa !8
  %143 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %142, i64 0, i32 3
  %144 = load i32, ptr %143, align 8, !tbaa !17
  %145 = icmp ult i32 %141, %144
  br i1 %145, label %88, label %59

146:                                              ; preds = %50
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %10, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %10)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %10, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %10, ptr noundef nonnull @.str.16, i32 noundef 1632, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %147 unwind label %153

147:                                              ; preds = %146
  %148 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %148, ptr noundef nonnull align 8 dereferenceable(60) %10)
          to label %149 unwind label %151

149:                                              ; preds = %147
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %148, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %148, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %150 unwind label %153

150:                                              ; preds = %149
  unreachable

151:                                              ; preds = %147
  %152 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %148) #17
  br label %155

153:                                              ; preds = %149, %146
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %155

155:                                              ; preds = %151, %153
  %156 = phi { ptr, i32 } [ %154, %153 ], [ %152, %151 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %10) #17
  resume { ptr, i32 } %156

157:                                              ; preds = %50
  %158 = and i64 %19, 4294967295
  %159 = getelementptr inbounds %"class.std::ios_base", ptr %54, i64 0, i32 1
  store i64 %158, ptr %159, align 8, !tbaa !84
  %160 = load i64, ptr %52, align 8
  %161 = getelementptr inbounds i8, ptr %1, i64 %160
  %162 = getelementptr inbounds %"class.std::ios_base", ptr %161, i64 0, i32 3
  store i32 %16, ptr %162, align 8, !tbaa !83
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE13print_patternERSod(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(8) %1, double noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %9 = getelementptr %"class.std::basic_ios", ptr %1, i64 0, i32 5
  %10 = load ptr, ptr %8, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %10, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %3
  %15 = getelementptr %"class.std::ios_base", ptr %1, i64 0, i32 2
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  br label %17

17:                                               ; preds = %14, %52
  %18 = phi ptr [ %10, %14 ], [ %57, %52 ]
  %19 = phi i32 [ 0, %14 ], [ %56, %52 ]
  %20 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 3
  %21 = load i32, ptr %20, align 8, !tbaa !17
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %32, label %61

23:                                               ; preds = %52, %3
  %24 = load ptr, ptr %1, align 8, !tbaa !5
  %25 = getelementptr i8, ptr %24, i64 -24
  %26 = load i64, ptr %25, align 8
  %27 = getelementptr inbounds i8, ptr %1, i64 %26
  %28 = getelementptr inbounds %"class.std::ios_base", ptr %27, i64 0, i32 5
  %29 = load i32, ptr %28, align 8, !tbaa !71
  %30 = and i32 %29, 5
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %128, label %117

32:                                               ; preds = %111, %17
  %33 = load ptr, ptr %1, align 8, !tbaa !5
  %34 = getelementptr i8, ptr %33, i64 -24
  %35 = load i64, ptr %34, align 8
  %36 = getelementptr i8, ptr %9, i64 %35
  %37 = load ptr, ptr %36, align 8, !tbaa !77
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %32
  call void @_ZSt16__throw_bad_castv() #21
  unreachable

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.std::ctype", ptr %37, i64 0, i32 8
  %42 = load i8, ptr %41, align 8, !tbaa !79
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::ctype", ptr %37, i64 0, i32 9, i64 10
  %46 = load i8, ptr %45, align 1, !tbaa !82
  br label %52

47:                                               ; preds = %40
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %37)
  %48 = load ptr, ptr %37, align 8, !tbaa !5
  %49 = getelementptr inbounds ptr, ptr %48, i64 6
  %50 = load ptr, ptr %49, align 8
  %51 = call noundef signext i8 %50(ptr noundef nonnull align 8 dereferenceable(570) %37, i8 noundef signext 10)
  br label %52

52:                                               ; preds = %44, %47
  %53 = phi i8 [ %46, %44 ], [ %51, %47 ]
  %54 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %53)
  %55 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %54)
  %56 = add nuw i32 %19, 1
  %57 = load ptr, ptr %8, align 8, !tbaa !8
  %58 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %57, i64 0, i32 2
  %59 = load i32, ptr %58, align 4, !tbaa !33
  %60 = icmp ult i32 %56, %59
  br i1 %60, label %17, label %23

61:                                               ; preds = %17, %111
  %62 = phi ptr [ %113, %111 ], [ %18, %17 ]
  %63 = phi i32 [ %112, %111 ], [ 0, %17 ]
  %64 = call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %62, i32 noundef %19, i32 noundef %63)
  %65 = icmp eq i32 %64, -1
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6)
  store i8 46, ptr %6, align 1, !tbaa !82
  %67 = load ptr, ptr %1, align 8, !tbaa !5
  %68 = getelementptr i8, ptr %67, i64 -24
  %69 = load i64, ptr %68, align 8
  %70 = getelementptr i8, ptr %15, i64 %69
  %71 = load i64, ptr %70, align 8, !tbaa !86
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %66
  %74 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %6, i64 noundef 1)
  br label %77

75:                                               ; preds = %66
  %76 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 46)
  br label %77

77:                                               ; preds = %73, %75
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6)
  br label %111

78:                                               ; preds = %61
  %79 = load ptr, ptr %16, align 8, !tbaa !13
  %80 = load ptr, ptr %8, align 8, !tbaa !8
  %81 = call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %80, i32 noundef %19, i32 noundef %63)
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds double, ptr %79, i64 %82
  %84 = load double, ptr %83, align 8, !tbaa !30
  %85 = call double @llvm.fabs.f64(double %84)
  %86 = fcmp ogt double %85, %2
  br i1 %86, label %87, label %99

87:                                               ; preds = %78
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5)
  store i8 42, ptr %5, align 1, !tbaa !82
  %88 = load ptr, ptr %1, align 8, !tbaa !5
  %89 = getelementptr i8, ptr %88, i64 -24
  %90 = load i64, ptr %89, align 8
  %91 = getelementptr i8, ptr %15, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !86
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %87
  %95 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %5, i64 noundef 1)
  br label %98

96:                                               ; preds = %87
  %97 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 42)
  br label %98

98:                                               ; preds = %94, %96
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5)
  br label %111

99:                                               ; preds = %78
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  store i8 58, ptr %4, align 1, !tbaa !82
  %100 = load ptr, ptr %1, align 8, !tbaa !5
  %101 = getelementptr i8, ptr %100, i64 -24
  %102 = load i64, ptr %101, align 8
  %103 = getelementptr i8, ptr %15, i64 %102
  %104 = load i64, ptr %103, align 8, !tbaa !86
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %99
  %107 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %4, i64 noundef 1)
  br label %110

108:                                              ; preds = %99
  %109 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 58)
  br label %110

110:                                              ; preds = %106, %108
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  br label %111

111:                                              ; preds = %77, %110, %98
  %112 = add nuw i32 %63, 1
  %113 = load ptr, ptr %8, align 8, !tbaa !8
  %114 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %113, i64 0, i32 3
  %115 = load i32, ptr %114, align 8, !tbaa !17
  %116 = icmp ult i32 %112, %115
  br i1 %116, label %61, label %32

117:                                              ; preds = %23
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.16, i32 noundef 1660, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %118 unwind label %124

118:                                              ; preds = %117
  %119 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %119, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %120 unwind label %122

120:                                              ; preds = %118
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %119, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %119, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %121 unwind label %124

121:                                              ; preds = %120
  unreachable

122:                                              ; preds = %118
  %123 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %119) #17
  br label %126

124:                                              ; preds = %120, %117
  %125 = landingpad { ptr, i32 }
          cleanup
  br label %126

126:                                              ; preds = %122, %124
  %127 = phi { ptr, i32 } [ %125, %124 ], [ %123, %122 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7) #17
  resume { ptr, i32 } %127

128:                                              ; preds = %23
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE11block_writeERSo(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = load ptr, ptr %1, align 8, !tbaa !5
  %8 = getelementptr i8, ptr %7, i64 -24
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = getelementptr inbounds %"class.std::ios_base", ptr %10, i64 0, i32 5
  %12 = load i32, ptr %11, align 8, !tbaa !71
  %13 = and i32 %12, 5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %5, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %5)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %5, ptr noundef nonnull @.str.16, i32 noundef 1669, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %16 unwind label %22

16:                                               ; preds = %15
  %17 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %17, ptr noundef nonnull align 8 dereferenceable(60) %5)
          to label %18 unwind label %20

18:                                               ; preds = %16
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %17, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %19 unwind label %22

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %16
  %21 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %17) #17
  br label %75

22:                                               ; preds = %18, %15
  %23 = landingpad { ptr, i32 }
          cleanup
  br label %75

24:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  store i8 91, ptr %4, align 1, !tbaa !82
  %25 = getelementptr inbounds %"class.std::ios_base", ptr %10, i64 0, i32 2
  %26 = load i64, ptr %25, align 8, !tbaa !86
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %4, i64 noundef 1)
  br label %32

30:                                               ; preds = %24
  %31 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 91)
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi ptr [ %29, %28 ], [ %1, %30 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  %35 = load i32, ptr %34, align 8, !tbaa !16
  %36 = zext i32 %35 to i64
  %37 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %33, i64 noundef %36)
  %38 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %37, ptr noundef nonnull @.str.19, i64 noundef 2)
  %39 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !13
  %41 = load i32, ptr %34, align 8, !tbaa !16
  %42 = zext i32 %41 to i64
  %43 = shl nuw nsw i64 %42, 3
  %44 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef %40, i64 noundef %43)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3)
  store i8 93, ptr %3, align 1, !tbaa !82
  %45 = load ptr, ptr %1, align 8, !tbaa !5
  %46 = getelementptr i8, ptr %45, i64 -24
  %47 = load i64, ptr %46, align 8
  %48 = getelementptr inbounds i8, ptr %1, i64 %47
  %49 = getelementptr inbounds %"class.std::ios_base", ptr %48, i64 0, i32 2
  %50 = load i64, ptr %49, align 8, !tbaa !86
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %32
  %53 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %3, i64 noundef 1)
  br label %56

54:                                               ; preds = %32
  %55 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 93)
  br label %56

56:                                               ; preds = %52, %54
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3)
  %57 = load ptr, ptr %1, align 8, !tbaa !5
  %58 = getelementptr i8, ptr %57, i64 -24
  %59 = load i64, ptr %58, align 8
  %60 = getelementptr inbounds i8, ptr %1, i64 %59
  %61 = getelementptr inbounds %"class.std::ios_base", ptr %60, i64 0, i32 5
  %62 = load i32, ptr %61, align 8, !tbaa !71
  %63 = and i32 %62, 5
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %74, label %65

65:                                               ; preds = %56
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.16, i32 noundef 1680, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %66 unwind label %72

66:                                               ; preds = %65
  %67 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %67, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %68 unwind label %70

68:                                               ; preds = %66
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %67, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %67, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %69 unwind label %72

69:                                               ; preds = %68
  unreachable

70:                                               ; preds = %66
  %71 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %67) #17
  br label %75

72:                                               ; preds = %68, %65
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %75

74:                                               ; preds = %56
  ret void

75:                                               ; preds = %72, %70, %22, %20
  %76 = phi ptr [ %5, %20 ], [ %5, %22 ], [ %6, %70 ], [ %6, %72 ]
  %77 = phi { ptr, i32 } [ %21, %20 ], [ %23, %22 ], [ %71, %70 ], [ %73, %72 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %76) #17
  resume { ptr, i32 } %77
}

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE10block_readERSi(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = getelementptr i8, ptr %9, i64 -24
  %11 = load i64, ptr %10, align 8
  %12 = getelementptr inbounds i8, ptr %1, i64 %11
  %13 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 5
  %14 = load i32, ptr %13, align 8, !tbaa !71
  %15 = and i32 %14, 5
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.16, i32 noundef 1689, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.20, ptr noundef nonnull @.str.18)
          to label %18 unwind label %24

18:                                               ; preds = %17
  %19 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %19, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %20 unwind label %22

20:                                               ; preds = %18
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %21 unwind label %24

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %19) #17
  br label %26

24:                                               ; preds = %20, %17
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi { ptr, i32 } [ %25, %24 ], [ %23, %22 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #17
  br label %96

28:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #17
  %29 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 1 dereferenceable(1) %4)
  %30 = load i8, ptr %4, align 1, !tbaa !82
  %31 = icmp eq i8 %30, 91
  br i1 %31, label %41, label %32

32:                                               ; preds = %28
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %5, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %5)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %5, ptr noundef nonnull @.str.16, i32 noundef 1695, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.18)
          to label %33 unwind label %39

33:                                               ; preds = %32
  %34 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %34, ptr noundef nonnull align 8 dereferenceable(60) %5)
          to label %35 unwind label %37

35:                                               ; preds = %33
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %34, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %34, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %36 unwind label %39

36:                                               ; preds = %35
  unreachable

37:                                               ; preds = %33
  %38 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %34) #17
  br label %93

39:                                               ; preds = %35, %32
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %93

41:                                               ; preds = %28
  %42 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 3
  %43 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi10_M_extractIjEERSiRT_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 4 dereferenceable(4) %42)
  %44 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 1 dereferenceable(1) %4)
  %45 = load i8, ptr %4, align 1, !tbaa !82
  %46 = icmp eq i8 %45, 93
  br i1 %46, label %56, label %47

47:                                               ; preds = %41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.16, i32 noundef 1699, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.18)
          to label %48 unwind label %54

48:                                               ; preds = %47
  %49 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %49, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %50 unwind label %52

50:                                               ; preds = %48
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %49, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %49, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %51 unwind label %54

51:                                               ; preds = %50
  unreachable

52:                                               ; preds = %48
  %53 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %49) #17
  br label %93

54:                                               ; preds = %50, %47
  %55 = landingpad { ptr, i32 }
          cleanup
  br label %93

56:                                               ; preds = %41
  %57 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 1 dereferenceable(1) %4)
  %58 = load i8, ptr %4, align 1, !tbaa !82
  %59 = icmp eq i8 %58, 91
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.16, i32 noundef 1701, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.18)
          to label %61 unwind label %67

61:                                               ; preds = %60
  %62 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %62, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %63 unwind label %65

63:                                               ; preds = %61
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %62, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %62, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %64 unwind label %67

64:                                               ; preds = %63
  unreachable

65:                                               ; preds = %61
  %66 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %62) #17
  br label %93

67:                                               ; preds = %63, %60
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %93

69:                                               ; preds = %56
  %70 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !13
  %72 = icmp eq ptr %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  call void @_ZdaPv(ptr noundef nonnull %71) #19
  br label %74

74:                                               ; preds = %73, %69
  %75 = load i32, ptr %42, align 8, !tbaa !16
  %76 = zext i32 %75 to i64
  %77 = shl nuw nsw i64 %76, 3
  %78 = call noalias noundef nonnull ptr @_Znam(i64 noundef %77) #20
  store ptr %78, ptr %70, align 8, !tbaa !13
  %79 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %78, i64 noundef %77)
  %80 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 1 dereferenceable(1) %4)
  %81 = load i8, ptr %4, align 1, !tbaa !82
  %82 = icmp eq i8 %81, 93
  br i1 %82, label %92, label %83

83:                                               ; preds = %74
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %8, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %8)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %8, ptr noundef nonnull @.str.16, i32 noundef 1712, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.18)
          to label %84 unwind label %90

84:                                               ; preds = %83
  %85 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %85, ptr noundef nonnull align 8 dereferenceable(60) %8)
          to label %86 unwind label %88

86:                                               ; preds = %84
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %85, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %85, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %87 unwind label %90

87:                                               ; preds = %86
  unreachable

88:                                               ; preds = %84
  %89 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %85) #17
  br label %93

90:                                               ; preds = %86, %83
  %91 = landingpad { ptr, i32 }
          cleanup
  br label %93

92:                                               ; preds = %74
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #17
  ret void

93:                                               ; preds = %90, %88, %67, %65, %54, %52, %39, %37
  %94 = phi ptr [ %5, %37 ], [ %5, %39 ], [ %6, %52 ], [ %6, %54 ], [ %7, %65 ], [ %7, %67 ], [ %8, %88 ], [ %8, %90 ]
  %95 = phi { ptr, i32 } [ %38, %37 ], [ %40, %39 ], [ %53, %52 ], [ %55, %54 ], [ %66, %65 ], [ %68, %67 ], [ %89, %88 ], [ %91, %90 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %94) #17
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #17
  br label %96

96:                                               ; preds = %93, %26
  %97 = phi { ptr, i32 } [ %95, %93 ], [ %27, %26 ]
  resume { ptr, i32 } %97
}

declare noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef nonnull align 1 dereferenceable(1)) local_unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexC2Eii(ptr noundef nonnull align 8 dereferenceable(68) %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 comdat($_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexC5Eii) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdE15ExcInvalidIndexE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcInvalidIndex", ptr %0, i64 0, i32 1
  store i32 %1, ptr %4, align 4, !tbaa !48
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcInvalidIndex", ptr %0, i64 0, i32 2
  store i32 %2, ptr %5, align 8, !tbaa !52
  ret void
}

declare void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexD2Ev(ptr noundef nonnull align 8 dereferenceable(68) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexD5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexD0Ev(ptr noundef nonnull align 8 dereferenceable(68) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIdE15ExcInvalidIndexD5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE15ExcInvalidIndex10print_infoERSo(ptr noundef nonnull align 8 dereferenceable(68) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.23, i64 noundef 22)
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcInvalidIndex", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !48
  %7 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %6)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3)
  store i8 44, ptr %3, align 1, !tbaa !82
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %7, i64 %10
  %12 = getelementptr inbounds %"class.std::ios_base", ptr %11, i64 0, i32 2
  %13 = load i64, ptr %12, align 8, !tbaa !86
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %7, ptr noundef nonnull %3, i64 noundef 1)
  br label %19

17:                                               ; preds = %2
  %18 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %7, i8 noundef signext 44)
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi ptr [ %16, %15 ], [ %7, %17 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3)
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcInvalidIndex", ptr %0, i64 0, i32 2
  %22 = load i32, ptr %21, align 8, !tbaa !52
  %23 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %20, i32 noundef %22)
  %24 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %23, ptr noundef nonnull @.str.24, i64 noundef 17)
  %25 = load ptr, ptr %23, align 8, !tbaa !5
  %26 = getelementptr i8, ptr %25, i64 -24
  %27 = load i64, ptr %26, align 8
  %28 = getelementptr inbounds i8, ptr %23, i64 %27
  %29 = getelementptr inbounds %"class.std::basic_ios", ptr %28, i64 0, i32 5
  %30 = load ptr, ptr %29, align 8, !tbaa !77
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %19
  call void @_ZSt16__throw_bad_castv() #21
  unreachable

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.std::ctype", ptr %30, i64 0, i32 8
  %35 = load i8, ptr %34, align 8, !tbaa !79
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::ctype", ptr %30, i64 0, i32 9, i64 10
  %39 = load i8, ptr %38, align 1, !tbaa !82
  br label %45

40:                                               ; preds = %33
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %30)
  %41 = load ptr, ptr %30, align 8, !tbaa !5
  %42 = getelementptr inbounds ptr, ptr %41, i64 6
  %43 = load ptr, ptr %42, align 8
  %44 = call noundef signext i8 %43(ptr noundef nonnull align 8 dereferenceable(570) %30, i8 noundef signext 10)
  br label %45

45:                                               ; preds = %37, %40
  %46 = phi i8 [ %39, %37 ], [ %44, %40 ]
  %47 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %23, i8 noundef signext %46)
  %48 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %47)
  ret void
}

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8), i32 noundef) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1C2Ei(ptr noundef nonnull align 8 dereferenceable(64) %0, i32 noundef %1) unnamed_addr #0 comdat($_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1C5Ei) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdE16ExcInvalidIndex1E, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcInvalidIndex1", ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !87
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1D2Ev(ptr noundef nonnull align 8 dereferenceable(64) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1D5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1D0Ev(ptr noundef nonnull align 8 dereferenceable(64) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIdE16ExcInvalidIndex1D5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE16ExcInvalidIndex110print_infoERSo(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) unnamed_addr #0 comdat align 2 {
  %3 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.25, i64 noundef 10)
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcInvalidIndex1", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !87
  %6 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %5)
  %7 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %6, ptr noundef nonnull @.str.26, i64 noundef 29)
  %8 = load ptr, ptr %6, align 8, !tbaa !5
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %6, i64 %10
  %12 = getelementptr inbounds %"class.std::basic_ios", ptr %11, i64 0, i32 5
  %13 = load ptr, ptr %12, align 8, !tbaa !77
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::ctype", ptr %13, i64 0, i32 8
  %18 = load i8, ptr %17, align 8, !tbaa !79
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::ctype", ptr %13, i64 0, i32 9, i64 10
  %22 = load i8, ptr %21, align 1, !tbaa !82
  br label %28

23:                                               ; preds = %16
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %13)
  %24 = load ptr, ptr %13, align 8, !tbaa !5
  %25 = getelementptr inbounds ptr, ptr %24, i64 6
  %26 = load ptr, ptr %25, align 8
  %27 = tail call noundef signext i8 %26(ptr noundef nonnull align 8 dereferenceable(570) %13, i8 noundef signext 10)
  br label %28

28:                                               ; preds = %20, %23
  %29 = phi i8 [ %22, %20 ], [ %27, %23 ]
  %30 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %6, i8 noundef signext %29)
  %31 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %30)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeC2Eii(ptr noundef nonnull align 8 dereferenceable(68) %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 comdat($_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeC5Eii) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIdE16ExcIteratorRangeE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcIteratorRange", ptr %0, i64 0, i32 1
  store i32 %1, ptr %4, align 4, !tbaa !89
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcIteratorRange", ptr %0, i64 0, i32 2
  store i32 %2, ptr %5, align 8, !tbaa !91
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeD2Ev(ptr noundef nonnull align 8 dereferenceable(68) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeD5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeD0Ev(ptr noundef nonnull align 8 dereferenceable(68) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIdE16ExcIteratorRangeD5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE16ExcIteratorRange10print_infoERSo(ptr noundef nonnull align 8 dereferenceable(68) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) unnamed_addr #0 comdat align 2 {
  %3 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.27, i64 noundef 32)
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcIteratorRange", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !89
  %6 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %5)
  %7 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %6, ptr noundef nonnull @.str.28, i64 noundef 44)
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix<double>::ExcIteratorRange", ptr %0, i64 0, i32 2
  %9 = load i32, ptr %8, align 8, !tbaa !91
  %10 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %6, i32 noundef %9)
  %11 = load ptr, ptr %10, align 8, !tbaa !5
  %12 = getelementptr i8, ptr %11, i64 -24
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds i8, ptr %10, i64 %13
  %15 = getelementptr inbounds %"class.std::basic_ios", ptr %14, i64 0, i32 5
  %16 = load ptr, ptr %15, align 8, !tbaa !77
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::ctype", ptr %16, i64 0, i32 8
  %21 = load i8, ptr %20, align 8, !tbaa !79
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::ctype", ptr %16, i64 0, i32 9, i64 10
  %25 = load i8, ptr %24, align 1, !tbaa !82
  br label %31

26:                                               ; preds = %19
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %16)
  %27 = load ptr, ptr %16, align 8, !tbaa !5
  %28 = getelementptr inbounds ptr, ptr %27, i64 6
  %29 = load ptr, ptr %28, align 8
  %30 = tail call noundef signext i8 %29(ptr noundef nonnull align 8 dereferenceable(570) %16, i8 noundef signext 10)
  br label %31

31:                                               ; preds = %23, %26
  %32 = phi i8 [ %25, %23 ], [ %30, %26 ]
  %33 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %10, i8 noundef signext %32)
  %34 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %33)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfEC2Ev(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1) unnamed_addr #0 comdat align 2 {
  %3 = load ptr, ptr %1, align 8
  store ptr %3, ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds ptr, ptr %1, i64 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr i8, ptr %3, i64 -24
  %7 = load i64, ptr %6, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 %7
  store ptr %5, ptr %8, align 8, !tbaa !5
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  store ptr null, ptr %9, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %10, align 8, !tbaa !12
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  store ptr null, ptr %11, align 8, !tbaa !92
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  store i32 0, ptr %12, align 8, !tbaa !94
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfEC1Ev(ptr noundef nonnull align 8 dereferenceable(36) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 40
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 1, i64 3), ptr %2, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  store ptr null, ptr %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %4, align 8, !tbaa !12
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  store ptr null, ptr %5, align 8, !tbaa !92
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  store i32 0, ptr %6, align 8, !tbaa !94
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(36) %2) unnamed_addr #0 comdat align 2 {
  %4 = load ptr, ptr %1, align 8
  store ptr %4, ptr %0, align 8, !tbaa !5
  %5 = getelementptr inbounds ptr, ptr %1, i64 1
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr i8, ptr %4, i64 -24
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 %8
  store ptr %6, ptr %9, align 8, !tbaa !5
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  store ptr null, ptr %10, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %11, align 8, !tbaa !12
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  store ptr null, ptr %12, align 8, !tbaa !92
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  store i32 0, ptr %13, align 8, !tbaa !94
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfEC1ERKS1_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 40
  %4 = load ptr, ptr %1, align 8, !tbaa !5
  %5 = getelementptr i8, ptr %4, i64 -24
  %6 = load i64, ptr %5, align 8
  %7 = getelementptr inbounds i8, ptr %1, i64 %6
  tail call void @_ZN6dealii11SubscriptorC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(72) %3, ptr noundef nonnull align 8 dereferenceable(72) %7)
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 1, i64 3), ptr %3, align 8, !tbaa !5
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  store ptr null, ptr %8, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %9, align 8, !tbaa !12
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  store ptr null, ptr %10, align 8, !tbaa !92
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  store i32 0, ptr %11, align 8, !tbaa !94
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfEC2ERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(122) %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = load ptr, ptr %1, align 8
  store ptr %4, ptr %0, align 8, !tbaa !5
  %5 = getelementptr inbounds ptr, ptr %1, i64 1
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr i8, ptr %4, i64 -24
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 %8
  store ptr %6, ptr %9, align 8, !tbaa !5
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  store ptr null, ptr %10, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %11, align 8, !tbaa !12
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  store ptr null, ptr %12, align 8, !tbaa !92
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  store i32 0, ptr %13, align 8, !tbaa !94
  %14 = load ptr, ptr %0, align 8, !tbaa !5
  %15 = getelementptr inbounds ptr, ptr %14, i64 2
  %16 = load ptr, ptr %15, align 8
  tail call void %16(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfEC1ERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 40
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 1, i64 3), ptr %3, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  store ptr null, ptr %4, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %5, align 8, !tbaa !12
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  store ptr null, ptr %6, align 8, !tbaa !92
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  store i32 0, ptr %7, align 8, !tbaa !94
  invoke void @_ZN6dealii12SparseMatrixIfE6reinitERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1)
          to label %8 unwind label %9

8:                                                ; preds = %2
  ret void

9:                                                ; preds = %2
  %10 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
          to label %11 unwind label %12

11:                                               ; preds = %9
  resume { ptr, i32 } %10

12:                                               ; preds = %9
  %13 = landingpad { ptr, i32 }
          catch ptr null
  %14 = extractvalue { ptr, i32 } %13, 0
  tail call void @__clang_call_terminate(ptr %14) #18
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfEC2ERKNS_15SparsityPatternERKNS_14IdentityMatrixE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(122) %2, ptr noundef nonnull align 4 dereferenceable(4) %3) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = load ptr, ptr %1, align 8
  store ptr %5, ptr %0, align 8, !tbaa !5
  %6 = getelementptr inbounds ptr, ptr %1, i64 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr i8, ptr %5, i64 -24
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 %9
  store ptr %7, ptr %10, align 8, !tbaa !5
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  store ptr null, ptr %11, align 8, !tbaa !8
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %12, align 8, !tbaa !12
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  store ptr null, ptr %13, align 8, !tbaa !92
  %14 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  store i32 0, ptr %14, align 8, !tbaa !94
  %15 = load ptr, ptr %0, align 8, !tbaa !5
  %16 = getelementptr inbounds ptr, ptr %15, i64 2
  %17 = load ptr, ptr %16, align 8
  tail call void %17(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %2)
  %18 = load ptr, ptr %11, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 3
  %20 = load i32, ptr %19, align 8, !tbaa !17
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %32, %4
  ret void

23:                                               ; preds = %4, %32
  %24 = phi ptr [ %34, %32 ], [ %18, %4 ]
  %25 = phi i32 [ %33, %32 ], [ 0, %4 ]
  %26 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %24, i32 noundef %25, i32 noundef %25)
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = load ptr, ptr %13, align 8, !tbaa !92
  %30 = zext i32 %26 to i64
  %31 = getelementptr inbounds float, ptr %29, i64 %30
  store float 1.000000e+00, ptr %31, align 4, !tbaa !95
  br label %32

32:                                               ; preds = %28, %23
  %33 = add nuw i32 %25, 1
  %34 = load ptr, ptr %11, align 8, !tbaa !8
  %35 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %34, i64 0, i32 3
  %36 = load i32, ptr %35, align 8, !tbaa !17
  %37 = icmp ult i32 %33, %36
  br i1 %37, label %23, label %22
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIfE1nEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 3
  %5 = load i32, ptr %4, align 8, !tbaa !17
  ret i32 %5
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3setEjjf(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, float noundef %3) local_unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %6, i32 noundef %1, i32 noundef %2)
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !92
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds float, ptr %11, i64 %12
  store float %3, ptr %13, align 4, !tbaa !95
  br label %14

14:                                               ; preds = %4, %9
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfEC1ERKNS_15SparsityPatternERKNS_14IdentityMatrixE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1, ptr noundef nonnull align 4 dereferenceable(4) %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds i8, ptr %0, i64 40
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 1, i64 3), ptr %4, align 8, !tbaa !5
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  store ptr null, ptr %5, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %6, align 8, !tbaa !12
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  store ptr null, ptr %7, align 8, !tbaa !92
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  store i32 0, ptr %8, align 8, !tbaa !94
  invoke void @_ZN6dealii12SparseMatrixIfE6reinitERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1)
          to label %9 unwind label %15

9:                                                ; preds = %3
  %10 = load ptr, ptr %5, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %10, i64 0, i32 3
  %12 = load i32, ptr %11, align 8, !tbaa !17
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %29, %9
  ret void

15:                                               ; preds = %3
  %16 = landingpad { ptr, i32 }
          cleanup
  br label %35

17:                                               ; preds = %19
  %18 = landingpad { ptr, i32 }
          cleanup
  br label %35

19:                                               ; preds = %9, %29
  %20 = phi ptr [ %31, %29 ], [ %10, %9 ]
  %21 = phi i32 [ %30, %29 ], [ 0, %9 ]
  %22 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %20, i32 noundef %21, i32 noundef %21)
          to label %23 unwind label %17

23:                                               ; preds = %19
  %24 = icmp eq i32 %22, -1
  br i1 %24, label %29, label %25

25:                                               ; preds = %23
  %26 = load ptr, ptr %7, align 8, !tbaa !92
  %27 = zext i32 %22 to i64
  %28 = getelementptr inbounds float, ptr %26, i64 %27
  store float 1.000000e+00, ptr %28, align 4, !tbaa !95
  br label %29

29:                                               ; preds = %25, %23
  %30 = add nuw i32 %21, 1
  %31 = load ptr, ptr %5, align 8, !tbaa !8
  %32 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %31, i64 0, i32 3
  %33 = load i32, ptr %32, align 8, !tbaa !17
  %34 = icmp ult i32 %30, %33
  br i1 %34, label %19, label %14

35:                                               ; preds = %15, %17
  %36 = phi { ptr, i32 } [ %18, %17 ], [ %16, %15 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
          to label %37 unwind label %38

37:                                               ; preds = %35
  resume { ptr, i32 } %36

38:                                               ; preds = %35
  %39 = landingpad { ptr, i32 }
          catch ptr null
  %40 = extractvalue { ptr, i32 } %39, 0
  tail call void @__clang_call_terminate(ptr %40) #18
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfED2Ev(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = load ptr, ptr %1, align 8
  store ptr %3, ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds ptr, ptr %1, i64 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr i8, ptr %3, i64 -24
  %7 = load i64, ptr %6, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 %7
  store ptr %5, ptr %8, align 8, !tbaa !5
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !8
  %11 = icmp eq ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  store ptr null, ptr %9, align 8, !tbaa !8
  br label %13

13:                                               ; preds = %2, %12
  %14 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !92
  %16 = icmp eq ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZdaPv(ptr noundef nonnull %15) #19
  br label %18

18:                                               ; preds = %17, %13
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfED1Ev(ptr noundef nonnull align 8 dereferenceable(36) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds i8, ptr %0, i64 40
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 1, i64 3), ptr %2, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store ptr null, ptr %3, align 8, !tbaa !8
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdaPv(ptr noundef nonnull %9) #19
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZTv0_n24_N6dealii12SparseMatrixIfED1Ev(ptr noundef %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 -24
  %4 = load i64, ptr %3, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 %4
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 0, i64 3), ptr %5, align 8, !tbaa !5
  %6 = getelementptr inbounds i8, ptr %5, i64 40
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 1, i64 3), ptr %6, align 8, !tbaa !5
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %5, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  store ptr null, ptr %7, align 8, !tbaa !8
  br label %11

11:                                               ; preds = %10, %1
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %5, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !92
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdaPv(ptr noundef nonnull %13) #19
  br label %16

16:                                               ; preds = %11, %15
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %6)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfED0Ev(ptr noundef nonnull align 8 dereferenceable(36) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds i8, ptr %0, i64 40
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 1, i64 3), ptr %2, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store ptr null, ptr %3, align 8, !tbaa !8
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdaPv(ptr noundef nonnull %9) #19
  br label %12

12:                                               ; preds = %11, %7
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
          to label %13 unwind label %14

13:                                               ; preds = %12
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void

14:                                               ; preds = %12
  %15 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  resume { ptr, i32 } %15
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZTv0_n24_N6dealii12SparseMatrixIfED0Ev(ptr noundef %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 -24
  %4 = load i64, ptr %3, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 %4
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 0, i64 3), ptr %5, align 8, !tbaa !5
  %6 = getelementptr inbounds i8, ptr %5, i64 40
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfEE, i64 0, inrange i32 1, i64 3), ptr %6, align 8, !tbaa !5
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %5, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  store ptr null, ptr %7, align 8, !tbaa !8
  br label %11

11:                                               ; preds = %10, %1
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %5, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !92
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdaPv(ptr noundef nonnull %13) #19
  br label %16

16:                                               ; preds = %15, %11
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %6)
          to label %19 unwind label %17

17:                                               ; preds = %16
  %18 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %5) #19
  resume { ptr, i32 } %18

19:                                               ; preds = %16
  tail call void @_ZdlPv(ptr noundef nonnull %5) #19
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIfEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #6 comdat align 2 {
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIfEaSERKNS_14IdentityMatrixE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 4 dereferenceable(4) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !92
  %5 = icmp eq ptr %4, null
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  br i1 %5, label %22, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %8
  %21 = shl nuw nsw i64 %18, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %4, i8 0, i64 %21, i1 false), !tbaa !95
  br label %22

22:                                               ; preds = %2, %8, %20
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 3
  %25 = load i32, ptr %24, align 8, !tbaa !17
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %37, %22
  ret ptr %0

28:                                               ; preds = %22, %37
  %29 = phi ptr [ %39, %37 ], [ %7, %22 ]
  %30 = phi i32 [ %38, %37 ], [ 0, %22 ]
  %31 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %29, i32 noundef %30, i32 noundef %30)
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = load ptr, ptr %3, align 8, !tbaa !92
  %35 = zext i32 %31 to i64
  %36 = getelementptr inbounds float, ptr %34, i64 %35
  store float 1.000000e+00, ptr %36, align 4, !tbaa !95
  br label %37

37:                                               ; preds = %28, %33
  %38 = add nuw i32 %30, 1
  %39 = load ptr, ptr %23, align 8, !tbaa !8
  %40 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %39, i64 0, i32 3
  %41 = load i32, ptr %40, align 8, !tbaa !17
  %42 = icmp ult i32 %38, %41
  br i1 %42, label %28, label %27
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIfEaSEd(ptr noundef nonnull align 8 dereferenceable(36) %0, double noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !92
  %5 = icmp eq ptr %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %6
  %21 = shl nuw nsw i64 %18, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %4, i8 0, i64 %21, i1 false), !tbaa !95
  br label %22

22:                                               ; preds = %20, %6, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE6reinitERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store ptr %1, ptr %3, align 8, !tbaa !8
  br label %7

7:                                                ; preds = %2, %6
  %8 = tail call noundef zeroext i1 @_ZNK6dealii15SparsityPattern5emptyEv(ptr noundef nonnull align 8 dereferenceable(122) %1)
  br i1 %8, label %9, label %16

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !92
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZdaPv(ptr noundef nonnull %11) #19
  br label %14

14:                                               ; preds = %13, %9
  store ptr null, ptr %10, align 8, !tbaa !92
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  store i32 0, ptr %15, align 8, !tbaa !94
  br label %50

16:                                               ; preds = %7
  %17 = load ptr, ptr %3, align 8, !tbaa !8
  %18 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %17, i64 0, i32 8
  %19 = load ptr, ptr %18, align 8, !tbaa !32
  %20 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %17, i64 0, i32 2
  %21 = load i32, ptr %20, align 4, !tbaa !33
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i64, ptr %19, i64 %22
  %24 = load i64, ptr %23, align 8, !tbaa !34
  %25 = load i64, ptr %19, align 8, !tbaa !34
  %26 = sub i64 %24, %25
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  %29 = load i32, ptr %28, align 8, !tbaa !94
  %30 = icmp ult i32 %29, %27
  %31 = icmp eq i32 %29, 0
  %32 = or i1 %31, %30
  %33 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !92
  br i1 %32, label %35, label %42

35:                                               ; preds = %16
  %36 = icmp eq ptr %34, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %35
  tail call void @_ZdaPv(ptr noundef nonnull %34) #19
  br label %38

38:                                               ; preds = %37, %35
  %39 = shl i64 %26, 2
  %40 = and i64 %39, 17179869180
  %41 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %40) #20
  store ptr %41, ptr %33, align 8, !tbaa !92
  store i32 %27, ptr %28, align 8, !tbaa !94
  br label %42

42:                                               ; preds = %16, %38
  %43 = phi ptr [ %41, %38 ], [ %34, %16 ]
  %44 = icmp eq ptr %43, null
  %45 = icmp eq i32 %27, 0
  %46 = or i1 %45, %44
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = shl i64 %26, 2
  %49 = and i64 %48, 17179869180
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %43, i8 0, i64 %49, i1 false), !tbaa !95
  br label %50

50:                                               ; preds = %47, %42, %14
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE5clearEv(ptr noundef nonnull align 8 dereferenceable(36) %0) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store ptr null, ptr %2, align 8, !tbaa !8
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !92
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdaPv(ptr noundef nonnull %8) #19
  br label %11

11:                                               ; preds = %10, %6
  store ptr null, ptr %7, align 8, !tbaa !92
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  store i32 0, ptr %12, align 8, !tbaa !94
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii12SparseMatrixIfE5emptyEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call noundef zeroext i1 @_ZNK6dealii15SparsityPattern5emptyEv(ptr noundef nonnull align 8 dereferenceable(122) %3)
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ %6, %5 ], [ true, %1 ]
  ret i1 %8
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIfE1mEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !33
  ret i32 %5
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIfE18n_nonzero_elementsEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 8
  %5 = load ptr, ptr %4, align 8, !tbaa !32
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds i64, ptr %5, i64 %8
  %10 = load i64, ptr %9, align 8, !tbaa !34
  %11 = load i64, ptr %5, align 8, !tbaa !34
  %12 = sub i64 %10, %11
  %13 = trunc i64 %12 to i32
  ret i32 %13
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIfE27n_actually_nonzero_elementsEd(ptr noundef nonnull align 8 dereferenceable(36) %0, double noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %6 = load ptr, ptr %5, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %6, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = load i64, ptr %6, align 8, !tbaa !34
  %13 = sub i64 %11, %12
  %14 = and i64 %13, 4294967295
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %77, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !92
  %19 = and i64 %13, 4294967295
  %20 = icmp ult i64 %19, 16
  br i1 %20, label %74, label %21

21:                                               ; preds = %16
  %22 = and i64 %13, 15
  %23 = sub nsw i64 %19, %22
  %24 = insertelement <4 x double> poison, double %1, i64 0
  %25 = shufflevector <4 x double> %24, <4 x double> poison, <4 x i32> zeroinitializer
  %26 = insertelement <4 x double> poison, double %1, i64 0
  %27 = shufflevector <4 x double> %26, <4 x double> poison, <4 x i32> zeroinitializer
  %28 = insertelement <4 x double> poison, double %1, i64 0
  %29 = shufflevector <4 x double> %28, <4 x double> poison, <4 x i32> zeroinitializer
  %30 = insertelement <4 x double> poison, double %1, i64 0
  %31 = shufflevector <4 x double> %30, <4 x double> poison, <4 x i32> zeroinitializer
  br label %32

32:                                               ; preds = %32, %21
  %33 = phi i64 [ 0, %21 ], [ %66, %32 ]
  %34 = phi <4 x i32> [ zeroinitializer, %21 ], [ %62, %32 ]
  %35 = phi <4 x i32> [ zeroinitializer, %21 ], [ %63, %32 ]
  %36 = phi <4 x i32> [ zeroinitializer, %21 ], [ %64, %32 ]
  %37 = phi <4 x i32> [ zeroinitializer, %21 ], [ %65, %32 ]
  %38 = getelementptr inbounds float, ptr %18, i64 %33
  %39 = load <4 x float>, ptr %38, align 4, !tbaa !95
  %40 = getelementptr inbounds float, ptr %38, i64 4
  %41 = load <4 x float>, ptr %40, align 4, !tbaa !95
  %42 = getelementptr inbounds float, ptr %38, i64 8
  %43 = load <4 x float>, ptr %42, align 4, !tbaa !95
  %44 = getelementptr inbounds float, ptr %38, i64 12
  %45 = load <4 x float>, ptr %44, align 4, !tbaa !95
  %46 = tail call <4 x float> @llvm.fabs.v4f32(<4 x float> %39)
  %47 = tail call <4 x float> @llvm.fabs.v4f32(<4 x float> %41)
  %48 = tail call <4 x float> @llvm.fabs.v4f32(<4 x float> %43)
  %49 = tail call <4 x float> @llvm.fabs.v4f32(<4 x float> %45)
  %50 = fpext <4 x float> %46 to <4 x double>
  %51 = fpext <4 x float> %47 to <4 x double>
  %52 = fpext <4 x float> %48 to <4 x double>
  %53 = fpext <4 x float> %49 to <4 x double>
  %54 = fcmp olt <4 x double> %25, %50
  %55 = fcmp olt <4 x double> %27, %51
  %56 = fcmp olt <4 x double> %29, %52
  %57 = fcmp olt <4 x double> %31, %53
  %58 = zext <4 x i1> %54 to <4 x i32>
  %59 = zext <4 x i1> %55 to <4 x i32>
  %60 = zext <4 x i1> %56 to <4 x i32>
  %61 = zext <4 x i1> %57 to <4 x i32>
  %62 = add <4 x i32> %34, %58
  %63 = add <4 x i32> %35, %59
  %64 = add <4 x i32> %36, %60
  %65 = add <4 x i32> %37, %61
  %66 = add nuw i64 %33, 16
  %67 = icmp eq i64 %66, %23
  br i1 %67, label %68, label %32, !llvm.loop !97

68:                                               ; preds = %32
  %69 = add <4 x i32> %63, %62
  %70 = add <4 x i32> %64, %69
  %71 = add <4 x i32> %65, %70
  %72 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %71)
  %73 = icmp eq i64 %22, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %16, %68
  %75 = phi i64 [ 0, %16 ], [ %23, %68 ]
  %76 = phi i32 [ 0, %16 ], [ %72, %68 ]
  br label %79

77:                                               ; preds = %79, %68, %2
  %78 = phi i32 [ 0, %2 ], [ %72, %68 ], [ %88, %79 ]
  ret i32 %78

79:                                               ; preds = %74, %79
  %80 = phi i64 [ %89, %79 ], [ %75, %74 ]
  %81 = phi i32 [ %88, %79 ], [ %76, %74 ]
  %82 = getelementptr inbounds float, ptr %18, i64 %80
  %83 = load float, ptr %82, align 4, !tbaa !95
  %84 = tail call float @llvm.fabs.f32(float %83)
  %85 = fpext float %84 to double
  %86 = fcmp ogt double %85, %1
  %87 = zext i1 %86 to i32
  %88 = add i32 %81, %87
  %89 = add nuw nsw i64 %80, 1
  %90 = icmp eq i64 %89, %19
  br i1 %90, label %77, label %79, !llvm.loop !98
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIfE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  %3 = load i32, ptr %2, align 8, !tbaa !94
  %4 = shl i32 %3, 2
  %5 = add i32 %4, 112
  ret i32 %5
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3addEjjf(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, float noundef %3) local_unnamed_addr #4 comdat align 2 {
  %5 = fcmp oeq float %3, 0.000000e+00
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %8, i32 noundef %1, i32 noundef %2)
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !92
  %14 = zext i32 %9 to i64
  %15 = getelementptr inbounds float, ptr %13, i64 %14
  %16 = load float, ptr %15, align 4, !tbaa !95
  %17 = fadd float %16, %3
  store float %17, ptr %15, align 4, !tbaa !95
  br label %18

18:                                               ; preds = %11, %6, %4
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIfEmLEf(ptr noundef nonnull align 8 dereferenceable(36) %0, float noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !92
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !32
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !33
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i64, ptr %8, i64 %11
  %13 = load i64, ptr %12, align 8, !tbaa !34
  %14 = load i64, ptr %8, align 8, !tbaa !34
  %15 = sub i64 %13, %14
  %16 = and i64 %15, 4294967295
  %17 = getelementptr inbounds float, ptr %4, i64 %16
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %63, label %19

19:                                               ; preds = %2
  %20 = add nuw nsw i64 %16, 4611686018427387903
  %21 = and i64 %20, 4611686018427387903
  %22 = add nuw nsw i64 %21, 1
  %23 = icmp ult i64 %21, 31
  br i1 %23, label %55, label %24

24:                                               ; preds = %19
  %25 = and i64 %22, 9223372036854775776
  %26 = shl i64 %25, 2
  %27 = getelementptr i8, ptr %4, i64 %26
  %28 = insertelement <8 x float> poison, float %1, i64 0
  %29 = shufflevector <8 x float> %28, <8 x float> poison, <8 x i32> zeroinitializer
  %30 = insertelement <8 x float> poison, float %1, i64 0
  %31 = shufflevector <8 x float> %30, <8 x float> poison, <8 x i32> zeroinitializer
  %32 = insertelement <8 x float> poison, float %1, i64 0
  %33 = shufflevector <8 x float> %32, <8 x float> poison, <8 x i32> zeroinitializer
  %34 = insertelement <8 x float> poison, float %1, i64 0
  %35 = shufflevector <8 x float> %34, <8 x float> poison, <8 x i32> zeroinitializer
  br label %36

36:                                               ; preds = %36, %24
  %37 = phi i64 [ 0, %24 ], [ %51, %36 ]
  %38 = shl i64 %37, 2
  %39 = getelementptr i8, ptr %4, i64 %38
  %40 = load <8 x float>, ptr %39, align 4, !tbaa !95
  %41 = getelementptr float, ptr %39, i64 8
  %42 = load <8 x float>, ptr %41, align 4, !tbaa !95
  %43 = getelementptr float, ptr %39, i64 16
  %44 = load <8 x float>, ptr %43, align 4, !tbaa !95
  %45 = getelementptr float, ptr %39, i64 24
  %46 = load <8 x float>, ptr %45, align 4, !tbaa !95
  %47 = fmul <8 x float> %40, %29
  %48 = fmul <8 x float> %42, %31
  %49 = fmul <8 x float> %44, %33
  %50 = fmul <8 x float> %46, %35
  store <8 x float> %47, ptr %39, align 4, !tbaa !95
  store <8 x float> %48, ptr %41, align 4, !tbaa !95
  store <8 x float> %49, ptr %43, align 4, !tbaa !95
  store <8 x float> %50, ptr %45, align 4, !tbaa !95
  %51 = add nuw i64 %37, 32
  %52 = icmp eq i64 %51, %25
  br i1 %52, label %53, label %36, !llvm.loop !99

53:                                               ; preds = %36
  %54 = icmp eq i64 %22, %25
  br i1 %54, label %63, label %55

55:                                               ; preds = %19, %53
  %56 = phi ptr [ %4, %19 ], [ %27, %53 ]
  br label %57

57:                                               ; preds = %55, %57
  %58 = phi ptr [ %59, %57 ], [ %56, %55 ]
  %59 = getelementptr inbounds float, ptr %58, i64 1
  %60 = load float, ptr %58, align 4, !tbaa !95
  %61 = fmul float %60, %1
  store float %61, ptr %58, align 4, !tbaa !95
  %62 = icmp eq ptr %59, %17
  br i1 %62, label %63, label %57, !llvm.loop !100

63:                                               ; preds = %57, %53, %2
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIfEdVEf(ptr noundef nonnull align 8 dereferenceable(36) %0, float noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = fdiv float 1.000000e+00, %1
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !92
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, ptr %9, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = load i64, ptr %9, align 8, !tbaa !34
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds float, ptr %5, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %64, label %20

20:                                               ; preds = %2
  %21 = add nuw nsw i64 %17, 4611686018427387903
  %22 = and i64 %21, 4611686018427387903
  %23 = add nuw nsw i64 %22, 1
  %24 = icmp ult i64 %22, 31
  br i1 %24, label %56, label %25

25:                                               ; preds = %20
  %26 = and i64 %23, 9223372036854775776
  %27 = shl i64 %26, 2
  %28 = getelementptr i8, ptr %5, i64 %27
  %29 = insertelement <8 x float> poison, float %3, i64 0
  %30 = shufflevector <8 x float> %29, <8 x float> poison, <8 x i32> zeroinitializer
  %31 = insertelement <8 x float> poison, float %3, i64 0
  %32 = shufflevector <8 x float> %31, <8 x float> poison, <8 x i32> zeroinitializer
  %33 = insertelement <8 x float> poison, float %3, i64 0
  %34 = shufflevector <8 x float> %33, <8 x float> poison, <8 x i32> zeroinitializer
  %35 = insertelement <8 x float> poison, float %3, i64 0
  %36 = shufflevector <8 x float> %35, <8 x float> poison, <8 x i32> zeroinitializer
  br label %37

37:                                               ; preds = %37, %25
  %38 = phi i64 [ 0, %25 ], [ %52, %37 ]
  %39 = shl i64 %38, 2
  %40 = getelementptr i8, ptr %5, i64 %39
  %41 = load <8 x float>, ptr %40, align 4, !tbaa !95
  %42 = getelementptr float, ptr %40, i64 8
  %43 = load <8 x float>, ptr %42, align 4, !tbaa !95
  %44 = getelementptr float, ptr %40, i64 16
  %45 = load <8 x float>, ptr %44, align 4, !tbaa !95
  %46 = getelementptr float, ptr %40, i64 24
  %47 = load <8 x float>, ptr %46, align 4, !tbaa !95
  %48 = fmul <8 x float> %30, %41
  %49 = fmul <8 x float> %32, %43
  %50 = fmul <8 x float> %34, %45
  %51 = fmul <8 x float> %36, %47
  store <8 x float> %48, ptr %40, align 4, !tbaa !95
  store <8 x float> %49, ptr %42, align 4, !tbaa !95
  store <8 x float> %50, ptr %44, align 4, !tbaa !95
  store <8 x float> %51, ptr %46, align 4, !tbaa !95
  %52 = add nuw i64 %38, 32
  %53 = icmp eq i64 %52, %26
  br i1 %53, label %54, label %37, !llvm.loop !101

54:                                               ; preds = %37
  %55 = icmp eq i64 %23, %26
  br i1 %55, label %64, label %56

56:                                               ; preds = %20, %54
  %57 = phi ptr [ %5, %20 ], [ %28, %54 ]
  br label %58

58:                                               ; preds = %56, %58
  %59 = phi ptr [ %60, %58 ], [ %57, %56 ]
  %60 = getelementptr inbounds float, ptr %59, i64 1
  %61 = load float, ptr %59, align 4, !tbaa !95
  %62 = fmul float %3, %61
  store float %62, ptr %59, align 4, !tbaa !95
  %63 = icmp eq ptr %60, %18
  br i1 %63, label %64, label %58, !llvm.loop !102

64:                                               ; preds = %58, %54, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE10symmetrizeEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = zext i32 %5 to i64
  br label %11

10:                                               ; preds = %63, %1
  ret void

11:                                               ; preds = %7, %63
  %12 = phi i64 [ 0, %7 ], [ %24, %63 ]
  %13 = load ptr, ptr %8, align 8, !tbaa !92
  %14 = load ptr, ptr %2, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds i64, ptr %16, i64 %12
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = getelementptr inbounds float, ptr %13, i64 %18
  %20 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 11
  %21 = load i8, ptr %20, align 1, !tbaa !43, !range !44, !noundef !45
  %22 = zext i8 %21 to i64
  %23 = getelementptr inbounds float, ptr %19, i64 %22
  %24 = add nuw nsw i64 %12, 1
  %25 = getelementptr inbounds i64, ptr %16, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !34
  %27 = getelementptr inbounds float, ptr %13, i64 %26
  %28 = icmp eq ptr %23, %27
  br i1 %28, label %63, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %31 = load ptr, ptr %30, align 8, !tbaa !46
  %32 = add i64 %18, 1
  %33 = getelementptr inbounds i32, ptr %31, i64 %32
  %34 = trunc i64 %12 to i32
  br label %35

35:                                               ; preds = %29, %59
  %36 = phi ptr [ %60, %59 ], [ %23, %29 ]
  %37 = phi ptr [ %61, %59 ], [ %33, %29 ]
  %38 = load i32, ptr %37, align 4, !tbaa !47
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %12, %39
  br i1 %40, label %41, label %63

41:                                               ; preds = %35
  %42 = load float, ptr %36, align 4, !tbaa !95
  %43 = load ptr, ptr %8, align 8, !tbaa !92
  %44 = load ptr, ptr %2, align 8, !tbaa !8
  %45 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %44, i32 noundef %38, i32 noundef %34)
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds float, ptr %43, i64 %46
  %48 = load float, ptr %47, align 4, !tbaa !95
  %49 = fadd float %42, %48
  %50 = fmul float %49, 5.000000e-01
  store float %50, ptr %36, align 4, !tbaa !95
  %51 = load i32, ptr %37, align 4, !tbaa !47
  %52 = load ptr, ptr %2, align 8, !tbaa !8
  %53 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %52, i32 noundef %51, i32 noundef %34)
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %59, label %55

55:                                               ; preds = %41
  %56 = load ptr, ptr %8, align 8, !tbaa !92
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds float, ptr %56, i64 %57
  store float %50, ptr %58, align 4, !tbaa !95
  br label %59

59:                                               ; preds = %41, %55
  %60 = getelementptr inbounds float, ptr %36, i64 1
  %61 = getelementptr inbounds i32, ptr %37, i64 1
  %62 = icmp eq ptr %60, %27
  br i1 %62, label %63, label %35

63:                                               ; preds = %35, %59, %11
  %64 = icmp eq i64 %24, %9
  br i1 %64, label %10, label %11
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIfEclEjj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.dealii::SparseMatrix<float>::ExcInvalidIndex", align 8
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %6, i32 noundef %1, i32 noundef %2)
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %24

9:                                                ; preds = %3
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %4)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfE15ExcInvalidIndexE, i64 0, inrange i32 0, i64 2), ptr %4, align 8, !tbaa !5
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcInvalidIndex", ptr %4, i64 0, i32 1
  store i32 %1, ptr %10, align 4, !tbaa !103
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcInvalidIndex", ptr %4, i64 0, i32 2
  store i32 %2, ptr %11, align 8, !tbaa !105
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %4, ptr noundef nonnull @.str.9, i32 noundef 2270, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.11, ptr noundef nonnull @.str.12)
          to label %12 unwind label %20

12:                                               ; preds = %9
  %13 = call ptr @__cxa_allocate_exception(i64 72) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %13, ptr noundef nonnull align 8 dereferenceable(60) %4)
          to label %14 unwind label %18

14:                                               ; preds = %12
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfE15ExcInvalidIndexE, i64 0, inrange i32 0, i64 2), ptr %13, align 8, !tbaa !5
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcInvalidIndex", ptr %13, i64 0, i32 1
  %16 = load i64, ptr %10, align 4
  store i64 %16, ptr %15, align 4
  invoke void @__cxa_throw(ptr nonnull %13, ptr nonnull @_ZTIN6dealii12SparseMatrixIfE15ExcInvalidIndexE, ptr nonnull @_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexD2Ev) #21
          to label %17 unwind label %20

17:                                               ; preds = %14
  unreachable

18:                                               ; preds = %12
  %19 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %13) #17
  br label %22

20:                                               ; preds = %14, %9
  %21 = landingpad { ptr, i32 }
          cleanup
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi { ptr, i32 } [ %21, %20 ], [ %19, %18 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %4) #17
  resume { ptr, i32 } %23

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !92
  %27 = load ptr, ptr %5, align 8, !tbaa !8
  %28 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %27, i32 noundef %1, i32 noundef %2)
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds float, ptr %26, i64 %29
  %31 = load float, ptr %30, align 4, !tbaa !95
  ret float %31
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIfE2elEjj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %5, i32 noundef %1, i32 noundef %2)
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !92
  %11 = zext i32 %6 to i64
  %12 = getelementptr inbounds float, ptr %10, i64 %11
  %13 = load float, ptr %12, align 4, !tbaa !95
  br label %14

14:                                               ; preds = %3, %8
  %15 = phi float [ %13, %8 ], [ 0.000000e+00, %3 ]
  ret float %15
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIfE12diag_elementEj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !92
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !32
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds i64, ptr %8, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = getelementptr inbounds float, ptr %4, i64 %11
  %13 = load float, ptr %12, align 4, !tbaa !95
  ret float %13
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 4 dereferenceable(4) ptr @_ZN6dealii12SparseMatrixIfE12diag_elementEj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !92
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !32
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds i64, ptr %8, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = getelementptr inbounds float, ptr %4, i64 %11
  ret ptr %12
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIfE9raw_entryEjj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !92
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds i64, ptr %9, i64 %10
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = zext i32 %2 to i64
  %14 = add i64 %12, %13
  %15 = getelementptr inbounds float, ptr %5, i64 %14
  %16 = load float, ptr %15, align 4, !tbaa !95
  ret float %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIfE12global_entryEj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !92
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds float, ptr %4, i64 %5
  %7 = load float, ptr %6, align 4, !tbaa !95
  ret float %7
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 4 dereferenceable(4) ptr @_ZN6dealii12SparseMatrixIfE12global_entryEj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !92
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds float, ptr %4, i64 %5
  ret ptr %6
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIfE7l1_normEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.dealii::Vector.20", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %2) #17
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 3
  %6 = load i32, ptr %5, align 8, !tbaa !17
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !5
  %7 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %1
  %10 = zext i32 %6 to i64
  %11 = shl nuw nsw i64 %10, 2
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #20
          to label %13 unwind label %16

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 2
  store ptr %12, ptr %14, align 8, !tbaa !106
  store i32 %6, ptr %15, align 4, !tbaa !108
  store i32 %6, ptr %7, align 8, !tbaa !109
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %12, i8 0, i64 %11, i1 false), !tbaa !95
  br label %23

16:                                               ; preds = %9
  %17 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
          to label %18 unwind label %20

18:                                               ; preds = %16, %75
  %19 = phi { ptr, i32 } [ %42, %75 ], [ %17, %16 ]
  resume { ptr, i32 } %19

20:                                               ; preds = %16
  %21 = landingpad { ptr, i32 }
          catch ptr null
  %22 = extractvalue { ptr, i32 } %21, 0
  call void @__clang_call_terminate(ptr %22) #18
  unreachable

23:                                               ; preds = %1, %13
  %24 = phi ptr [ null, %1 ], [ %12, %13 ]
  %25 = load ptr, ptr %3, align 8, !tbaa !8
  %26 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !33
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 8
  %31 = load ptr, ptr %30, align 8, !tbaa !32
  %32 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 9
  %35 = zext i32 %27 to i64
  %36 = load i64, ptr %31, align 8, !tbaa !34
  br label %43

37:                                               ; preds = %54, %43
  %38 = icmp eq i64 %46, %35
  br i1 %38, label %39, label %43

39:                                               ; preds = %37, %23
  %40 = invoke noundef float @_ZNK6dealii6VectorIfE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(88) %2)
          to label %69 unwind label %41

41:                                               ; preds = %39
  %42 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIfED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %2)
          to label %75 unwind label %76

43:                                               ; preds = %29, %37
  %44 = phi i64 [ %36, %29 ], [ %48, %37 ]
  %45 = phi i64 [ 0, %29 ], [ %46, %37 ]
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr inbounds i64, ptr %31, i64 %46
  %48 = load i64, ptr %47, align 8, !tbaa !34
  %49 = and i64 %44, 4294967295
  %50 = icmp ugt i64 %48, %49
  br i1 %50, label %51, label %37

51:                                               ; preds = %43
  %52 = trunc i64 %44 to i32
  %53 = load ptr, ptr %34, align 8, !tbaa !46
  br label %54

54:                                               ; preds = %51, %54
  %55 = phi i64 [ %49, %51 ], [ %67, %54 ]
  %56 = phi i32 [ %52, %51 ], [ %66, %54 ]
  %57 = getelementptr inbounds float, ptr %33, i64 %55
  %58 = load float, ptr %57, align 4, !tbaa !95
  %59 = call float @llvm.fabs.f32(float %58)
  %60 = getelementptr inbounds i32, ptr %53, i64 %55
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds float, ptr %24, i64 %62
  %64 = load float, ptr %63, align 4, !tbaa !95
  %65 = fadd float %59, %64
  store float %65, ptr %63, align 4, !tbaa !95
  %66 = add i32 %56, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %48, %67
  br i1 %68, label %54, label %37

69:                                               ; preds = %39
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !5
  %70 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %71 = load ptr, ptr %70, align 8, !tbaa !106
  %72 = icmp eq ptr %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  call void @_ZdaPv(ptr noundef nonnull %71) #19
  store ptr null, ptr %70, align 8, !tbaa !106
  br label %74

74:                                               ; preds = %69, %73
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %2) #17
  ret float %40

75:                                               ; preds = %41
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %2) #17
  br label %18

76:                                               ; preds = %41
  %77 = landingpad { ptr, i32 }
          catch ptr null
  %78 = extractvalue { ptr, i32 } %77, 0
  call void @__clang_call_terminate(ptr %78) #18
  unreachable
}

declare noundef float @_ZNK6dealii6VectorIfE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIfED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #4 comdat align 2 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.20", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !106
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #19
  store ptr null, ptr %2, align 8, !tbaa !106
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIfE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !92
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !32
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %1
  %12 = load i64, ptr %7, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %3, i64 %12
  %14 = zext i32 %9 to i64
  br label %17

15:                                               ; preds = %34, %1
  %16 = phi float [ 0.000000e+00, %1 ], [ %38, %34 ]
  ret float %16

17:                                               ; preds = %11, %34
  %18 = phi i64 [ 0, %11 ], [ %21, %34 ]
  %19 = phi ptr [ %13, %11 ], [ %36, %34 ]
  %20 = phi float [ 0.000000e+00, %11 ], [ %38, %34 ]
  %21 = add nuw nsw i64 %18, 1
  %22 = getelementptr inbounds i64, ptr %7, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !34
  %24 = getelementptr inbounds float, ptr %3, i64 %23
  %25 = icmp eq ptr %19, %24
  br i1 %25, label %34, label %26

26:                                               ; preds = %17, %26
  %27 = phi ptr [ %29, %26 ], [ %19, %17 ]
  %28 = phi float [ %32, %26 ], [ 0.000000e+00, %17 ]
  %29 = getelementptr inbounds float, ptr %27, i64 1
  %30 = load float, ptr %27, align 4, !tbaa !95
  %31 = tail call float @llvm.fabs.f32(float %30)
  %32 = fadd float %28, %31
  %33 = icmp eq ptr %29, %24
  br i1 %33, label %34, label %26

34:                                               ; preds = %26, %17
  %35 = phi float [ 0.000000e+00, %17 ], [ %32, %26 ]
  %36 = phi ptr [ %19, %17 ], [ %24, %26 ]
  %37 = fcmp ogt float %35, %20
  %38 = select i1 %37, float %35, float %20
  %39 = icmp eq i64 %21, %14
  br i1 %39, label %15, label %17
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIfE14frobenius_normEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !33
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !92
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds i64, ptr %9, i64 %10
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %7, i64 %12
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %18, %1
  %16 = phi float [ 0.000000e+00, %1 ], [ %23, %18 ]
  %17 = tail call float @sqrtf(float noundef %16) #17
  ret float %17

18:                                               ; preds = %1, %18
  %19 = phi ptr [ %24, %18 ], [ %7, %1 ]
  %20 = phi float [ %23, %18 ], [ 0.000000e+00, %1 ]
  %21 = load float, ptr %19, align 4, !tbaa !95
  %22 = fmul float %21, %21
  %23 = fadd float %20, %22
  %24 = getelementptr inbounds float, ptr %19, i64 1
  %25 = icmp eq ptr %24, %13
  br i1 %25, label %15, label %18
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5beginEv(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.21") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %8 = zext i32 %6 to i64
  br label %9

9:                                                ; preds = %12, %2
  %10 = phi i64 [ %14, %12 ], [ 0, %2 ]
  %11 = icmp eq i64 %10, %8
  br i1 %11, label %24, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr %7, align 8, !tbaa !32
  %14 = add nuw nsw i64 %10, 1
  %15 = getelementptr inbounds i64, ptr %13, i64 %14
  %16 = load i64, ptr %15, align 8, !tbaa !34
  %17 = getelementptr inbounds i64, ptr %13, i64 %10
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = sub i64 %16, %18
  %20 = and i64 %19, 4294967295
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %9, label %22

22:                                               ; preds = %12
  %23 = trunc i64 %10 to i32
  br label %24

24:                                               ; preds = %9, %22
  %25 = phi i32 [ %23, %22 ], [ %6, %9 ]
  store ptr %4, ptr %0, align 8, !tbaa !57
  %26 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %25, ptr %26, align 8, !tbaa !59
  %27 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %27, align 4, !tbaa !60
  %28 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.22", ptr %0, i64 0, i32 1
  store ptr %1, ptr %28, align 8, !tbaa !110
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE3endEv(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.21") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  store ptr %4, ptr %0, align 8, !tbaa !57
  %5 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  store i32 %7, ptr %5, align 8, !tbaa !59
  %8 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %8, align 4, !tbaa !60
  %9 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.22", ptr %0, i64 0, i32 1
  store ptr %1, ptr %9, align 8, !tbaa !110
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE5beginEv(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.23") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %8 = zext i32 %6 to i64
  br label %9

9:                                                ; preds = %12, %2
  %10 = phi i64 [ %14, %12 ], [ 0, %2 ]
  %11 = icmp eq i64 %10, %8
  br i1 %11, label %24, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr %7, align 8, !tbaa !32
  %14 = add nuw nsw i64 %10, 1
  %15 = getelementptr inbounds i64, ptr %13, i64 %14
  %16 = load i64, ptr %15, align 8, !tbaa !34
  %17 = getelementptr inbounds i64, ptr %13, i64 %10
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = sub i64 %16, %18
  %20 = and i64 %19, 4294967295
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %9, label %22

22:                                               ; preds = %12
  %23 = trunc i64 %10 to i32
  br label %24

24:                                               ; preds = %9, %22
  %25 = phi i32 [ %23, %22 ], [ %6, %9 ]
  store ptr %4, ptr %0, align 8, !tbaa !57
  %26 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %25, ptr %26, align 8, !tbaa !59
  %27 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %27, align 4, !tbaa !60
  %28 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.24", ptr %0, i64 0, i32 1
  store ptr %1, ptr %28, align 8, !tbaa !112
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3endEv(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.23") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  store ptr %4, ptr %0, align 8, !tbaa !57
  %7 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %6, ptr %7, align 8, !tbaa !59
  %8 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %8, align 4, !tbaa !60
  %9 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.24", ptr %0, i64 0, i32 1
  store ptr %1, ptr %9, align 8, !tbaa !112
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5beginEj(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.21") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !32
  %8 = add i32 %2, 1
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %7, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = zext i32 %2 to i64
  %13 = getelementptr inbounds i64, ptr %7, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = sub i64 %11, %14
  %16 = and i64 %15, 4294967295
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %34

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33, !noalias !114
  br label %21

21:                                               ; preds = %26, %18
  %22 = phi i64 [ %11, %18 ], [ %30, %26 ]
  %23 = phi i32 [ %2, %18 ], [ %24, %26 ]
  %24 = add i32 %23, 1
  %25 = icmp ult i32 %24, %20
  br i1 %25, label %26, label %34

26:                                               ; preds = %21
  %27 = add i32 %23, 2
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i64, ptr %7, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34, !noalias !114
  %31 = sub i64 %30, %22
  %32 = and i64 %31, 4294967295
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %21, label %34

34:                                               ; preds = %26, %21, %3
  %35 = phi i32 [ %2, %3 ], [ %24, %26 ], [ %20, %21 ]
  store ptr %5, ptr %0, align 8, !tbaa !57
  %36 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %35, ptr %36, align 8, !tbaa !59
  %37 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %37, align 4, !tbaa !60
  %38 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.22", ptr %0, i64 0, i32 1
  store ptr %1, ptr %38, align 8, !tbaa !110
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE3endEj(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.21") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  br label %9

9:                                                ; preds = %13, %3
  %10 = phi i32 [ %2, %3 ], [ %11, %13 ]
  %11 = add i32 %10, 1
  %12 = icmp ult i32 %11, %7
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = load ptr, ptr %8, align 8, !tbaa !32
  %15 = add i32 %10, 2
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i64, ptr %14, i64 %16
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = zext i32 %11 to i64
  %20 = getelementptr inbounds i64, ptr %14, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !34
  %22 = sub i64 %18, %21
  %23 = and i64 %22, 4294967295
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %9, label %25

25:                                               ; preds = %9, %13
  %26 = phi i32 [ %11, %13 ], [ %7, %9 ]
  store ptr %5, ptr %0, align 8, !tbaa !57
  %27 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %26, ptr %27, align 8, !tbaa !59
  %28 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %28, align 4, !tbaa !60
  %29 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.22", ptr %0, i64 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !110
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE5beginEj(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.23") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !32
  %8 = add i32 %2, 1
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %7, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = zext i32 %2 to i64
  %13 = getelementptr inbounds i64, ptr %7, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = sub i64 %11, %14
  %16 = and i64 %15, 4294967295
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %34

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33, !noalias !117
  br label %21

21:                                               ; preds = %26, %18
  %22 = phi i64 [ %11, %18 ], [ %30, %26 ]
  %23 = phi i32 [ %2, %18 ], [ %24, %26 ]
  %24 = add i32 %23, 1
  %25 = icmp ult i32 %24, %20
  br i1 %25, label %26, label %34

26:                                               ; preds = %21
  %27 = add i32 %23, 2
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i64, ptr %7, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34, !noalias !117
  %31 = sub i64 %30, %22
  %32 = and i64 %31, 4294967295
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %21, label %34

34:                                               ; preds = %26, %21, %3
  %35 = phi i32 [ %2, %3 ], [ %24, %26 ], [ %20, %21 ]
  store ptr %5, ptr %0, align 8, !tbaa !57
  %36 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %35, ptr %36, align 8, !tbaa !59
  %37 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %37, align 4, !tbaa !60
  %38 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.24", ptr %0, i64 0, i32 1
  store ptr %1, ptr %38, align 8, !tbaa !112
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3endEj(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.23") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  br label %9

9:                                                ; preds = %13, %3
  %10 = phi i32 [ %2, %3 ], [ %11, %13 ]
  %11 = add i32 %10, 1
  %12 = icmp ult i32 %11, %7
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = load ptr, ptr %8, align 8, !tbaa !32
  %15 = add i32 %10, 2
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i64, ptr %14, i64 %16
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = zext i32 %11 to i64
  %20 = getelementptr inbounds i64, ptr %14, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !34
  %22 = sub i64 %18, %21
  %23 = and i64 %22, 4294967295
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %9, label %25

25:                                               ; preds = %9, %13
  %26 = phi i32 [ %11, %13 ], [ %7, %9 ]
  store ptr %5, ptr %0, align 8, !tbaa !57
  %27 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %26, ptr %27, align 8, !tbaa !59
  %28 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %28, align 4, !tbaa !60
  %29 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.24", ptr %0, i64 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !112
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5printERSo(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  br label %26

11:                                               ; preds = %79, %26
  %12 = phi ptr [ %27, %26 ], [ %85, %79 ]
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %12, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !33
  %15 = zext i32 %14 to i64
  %16 = icmp ult i64 %33, %15
  br i1 %16, label %26, label %17

17:                                               ; preds = %11, %2
  %18 = load ptr, ptr %1, align 8, !tbaa !5
  %19 = getelementptr i8, ptr %18, i64 -24
  %20 = load i64, ptr %19, align 8
  %21 = getelementptr inbounds i8, ptr %1, i64 %20
  %22 = getelementptr inbounds %"class.std::ios_base", ptr %21, i64 0, i32 5
  %23 = load i32, ptr %22, align 8, !tbaa !71
  %24 = and i32 %23, 5
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %102, label %91

26:                                               ; preds = %9, %11
  %27 = phi ptr [ %5, %9 ], [ %12, %11 ]
  %28 = phi i64 [ 0, %9 ], [ %33, %11 ]
  %29 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %27, i64 0, i32 8
  %30 = load ptr, ptr %29, align 8, !tbaa !32
  %31 = getelementptr inbounds i64, ptr %30, i64 %28
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = add nuw nsw i64 %28, 1
  %34 = and i64 %32, 4294967295
  %35 = getelementptr inbounds i64, ptr %30, i64 %33
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = icmp ugt i64 %36, %34
  br i1 %37, label %38, label %11

38:                                               ; preds = %26
  %39 = trunc i64 %32 to i32
  br label %40

40:                                               ; preds = %38, %79
  %41 = phi i64 [ %84, %79 ], [ %34, %38 ]
  %42 = phi i32 [ %83, %79 ], [ %39, %38 ]
  %43 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.13, i64 noundef 1)
  %44 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, i64 noundef %28)
  %45 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %44, ptr noundef nonnull @.str.14, i64 noundef 1)
  %46 = load ptr, ptr %4, align 8, !tbaa !8
  %47 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %46, i64 0, i32 9
  %48 = load ptr, ptr %47, align 8, !tbaa !46
  %49 = getelementptr inbounds i32, ptr %48, i64 %41
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = zext i32 %50 to i64
  %52 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %44, i64 noundef %51)
  %53 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %52, ptr noundef nonnull @.str.15, i64 noundef 2)
  %54 = load ptr, ptr %10, align 8, !tbaa !92
  %55 = getelementptr inbounds float, ptr %54, i64 %41
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fpext float %56 to double
  %58 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %52, double noundef %57)
  %59 = load ptr, ptr %58, align 8, !tbaa !5
  %60 = getelementptr i8, ptr %59, i64 -24
  %61 = load i64, ptr %60, align 8
  %62 = getelementptr inbounds i8, ptr %58, i64 %61
  %63 = getelementptr inbounds %"class.std::basic_ios", ptr %62, i64 0, i32 5
  %64 = load ptr, ptr %63, align 8, !tbaa !77
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %67

66:                                               ; preds = %40
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

67:                                               ; preds = %40
  %68 = getelementptr inbounds %"class.std::ctype", ptr %64, i64 0, i32 8
  %69 = load i8, ptr %68, align 8, !tbaa !79
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::ctype", ptr %64, i64 0, i32 9, i64 10
  %73 = load i8, ptr %72, align 1, !tbaa !82
  br label %79

74:                                               ; preds = %67
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %64)
  %75 = load ptr, ptr %64, align 8, !tbaa !5
  %76 = getelementptr inbounds ptr, ptr %75, i64 6
  %77 = load ptr, ptr %76, align 8
  %78 = tail call noundef signext i8 %77(ptr noundef nonnull align 8 dereferenceable(570) %64, i8 noundef signext 10)
  br label %79

79:                                               ; preds = %71, %74
  %80 = phi i8 [ %73, %71 ], [ %78, %74 ]
  %81 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %58, i8 noundef signext %80)
  %82 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %81)
  %83 = add i32 %42, 1
  %84 = zext i32 %83 to i64
  %85 = load ptr, ptr %4, align 8, !tbaa !8
  %86 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %85, i64 0, i32 8
  %87 = load ptr, ptr %86, align 8, !tbaa !32
  %88 = getelementptr inbounds i64, ptr %87, i64 %33
  %89 = load i64, ptr %88, align 8, !tbaa !34
  %90 = icmp ugt i64 %89, %84
  br i1 %90, label %40, label %11

91:                                               ; preds = %17
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.16, i32 noundef 1591, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %92 unwind label %98

92:                                               ; preds = %91
  %93 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %93, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %94 unwind label %96

94:                                               ; preds = %92
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %93, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %93, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %95 unwind label %98

95:                                               ; preds = %94
  unreachable

96:                                               ; preds = %92
  %97 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %93) #17
  br label %100

98:                                               ; preds = %94, %91
  %99 = landingpad { ptr, i32 }
          cleanup
  br label %100

100:                                              ; preds = %96, %98
  %101 = phi { ptr, i32 } [ %99, %98 ], [ %97, %96 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #17
  resume { ptr, i32 } %101

102:                                              ; preds = %17
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE15print_formattedERSojbjPKcd(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %2, i1 noundef zeroext %3, i32 noundef %4, ptr noundef %5, double noundef %6) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %11 = load ptr, ptr %1, align 8, !tbaa !5
  %12 = getelementptr i8, ptr %11, i64 -24
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds i8, ptr %1, i64 %13
  %15 = getelementptr inbounds %"class.std::ios_base", ptr %14, i64 0, i32 3
  %16 = load i32, ptr %15, align 8, !tbaa !83
  %17 = zext i32 %2 to i64
  %18 = getelementptr inbounds %"class.std::ios_base", ptr %14, i64 0, i32 1
  %19 = load i64, ptr %18, align 8, !tbaa !84
  store i64 %17, ptr %18, align 8, !tbaa !84
  %20 = load i64, ptr %12, align 8
  %21 = getelementptr inbounds i8, ptr %1, i64 %20
  %22 = getelementptr inbounds %"class.std::ios_base", ptr %21, i64 0, i32 3
  %23 = load i32, ptr %22, align 8, !tbaa !85
  %24 = and i32 %23, -261
  %25 = select i1 %3, i32 256, i32 4
  %26 = or i32 %24, %25
  store i32 %26, ptr %22, align 8, !tbaa !85
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %28 = getelementptr %"class.std::basic_ios", ptr %1, i64 0, i32 5
  %29 = load ptr, ptr %27, align 8, !tbaa !8
  %30 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %29, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !33
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %50, label %33

33:                                               ; preds = %7
  %34 = icmp eq i32 %4, 0
  %35 = select i1 %3, i32 7, i32 2
  %36 = add i32 %35, %2
  %37 = select i1 %34, i32 %36, i32 %4
  %38 = getelementptr %"class.std::ios_base", ptr %1, i64 0, i32 2
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %41 = icmp eq ptr %5, null
  br label %42

42:                                               ; preds = %33, %79
  %43 = phi ptr [ %29, %33 ], [ %84, %79 ]
  %44 = phi i32 [ 0, %33 ], [ %83, %79 ]
  %45 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %43, i64 0, i32 3
  %46 = load i32, ptr %45, align 8, !tbaa !17
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %59, label %88

48:                                               ; preds = %79
  %49 = load ptr, ptr %1, align 8, !tbaa !5
  br label %50

50:                                               ; preds = %48, %7
  %51 = phi ptr [ %49, %48 ], [ %11, %7 ]
  %52 = getelementptr i8, ptr %51, i64 -24
  %53 = load i64, ptr %52, align 8
  %54 = getelementptr inbounds i8, ptr %1, i64 %53
  %55 = getelementptr inbounds %"class.std::ios_base", ptr %54, i64 0, i32 5
  %56 = load i32, ptr %55, align 8, !tbaa !71
  %57 = and i32 %56, 5
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %158, label %147

59:                                               ; preds = %141, %42
  %60 = load ptr, ptr %1, align 8, !tbaa !5
  %61 = getelementptr i8, ptr %60, i64 -24
  %62 = load i64, ptr %61, align 8
  %63 = getelementptr i8, ptr %28, i64 %62
  %64 = load ptr, ptr %63, align 8, !tbaa !77
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %67

66:                                               ; preds = %59
  call void @_ZSt16__throw_bad_castv() #21
  unreachable

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.std::ctype", ptr %64, i64 0, i32 8
  %69 = load i8, ptr %68, align 8, !tbaa !79
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::ctype", ptr %64, i64 0, i32 9, i64 10
  %73 = load i8, ptr %72, align 1, !tbaa !82
  br label %79

74:                                               ; preds = %67
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %64)
  %75 = load ptr, ptr %64, align 8, !tbaa !5
  %76 = getelementptr inbounds ptr, ptr %75, i64 6
  %77 = load ptr, ptr %76, align 8
  %78 = call noundef signext i8 %77(ptr noundef nonnull align 8 dereferenceable(570) %64, i8 noundef signext 10)
  br label %79

79:                                               ; preds = %71, %74
  %80 = phi i8 [ %73, %71 ], [ %78, %74 ]
  %81 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %80)
  %82 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %81)
  %83 = add nuw i32 %44, 1
  %84 = load ptr, ptr %27, align 8, !tbaa !8
  %85 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %84, i64 0, i32 2
  %86 = load i32, ptr %85, align 4, !tbaa !33
  %87 = icmp ult i32 %83, %86
  br i1 %87, label %42, label %48

88:                                               ; preds = %42, %141
  %89 = phi ptr [ %143, %141 ], [ %43, %42 ]
  %90 = phi i32 [ %142, %141 ], [ 0, %42 ]
  %91 = call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %89, i32 noundef %44, i32 noundef %90)
  %92 = icmp eq i32 %91, -1
  %93 = load ptr, ptr %1, align 8, !tbaa !5
  %94 = getelementptr i8, ptr %93, i64 -24
  %95 = load i64, ptr %94, align 8
  %96 = getelementptr i8, ptr %38, i64 %95
  store i64 %39, ptr %96, align 8, !tbaa !86
  br i1 %92, label %119, label %97

97:                                               ; preds = %88
  %98 = load ptr, ptr %40, align 8, !tbaa !92
  %99 = load ptr, ptr %27, align 8, !tbaa !8
  %100 = call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %99, i32 noundef %44, i32 noundef %90)
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds float, ptr %98, i64 %101
  %103 = load float, ptr %102, align 4, !tbaa !95
  %104 = fpext float %103 to double
  %105 = fmul double %104, %6
  %106 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, double noundef %105)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9)
  store i8 32, ptr %9, align 1, !tbaa !82
  %107 = load ptr, ptr %106, align 8, !tbaa !5
  %108 = getelementptr i8, ptr %107, i64 -24
  %109 = load i64, ptr %108, align 8
  %110 = getelementptr inbounds i8, ptr %106, i64 %109
  %111 = getelementptr inbounds %"class.std::ios_base", ptr %110, i64 0, i32 2
  %112 = load i64, ptr %111, align 8, !tbaa !86
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %97
  %115 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %106, ptr noundef nonnull %9, i64 noundef 1)
  br label %118

116:                                              ; preds = %97
  %117 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %106, i8 noundef signext 32)
  br label %118

118:                                              ; preds = %114, %116
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9)
  br label %141

119:                                              ; preds = %88
  br i1 %41, label %120, label %126

120:                                              ; preds = %119
  %121 = load i64, ptr %94, align 8
  %122 = getelementptr inbounds i8, ptr %1, i64 %121
  %123 = getelementptr inbounds %"class.std::ios_base", ptr %122, i64 0, i32 5
  %124 = load i32, ptr %123, align 8, !tbaa !71
  %125 = or i32 %124, 1
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(ptr noundef nonnull align 8 dereferenceable(264) %122, i32 noundef %125)
  br label %129

126:                                              ; preds = %119
  %127 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %5) #17
  %128 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %5, i64 noundef %127)
  br label %129

129:                                              ; preds = %120, %126
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8)
  store i8 32, ptr %8, align 1, !tbaa !82
  %130 = load ptr, ptr %1, align 8, !tbaa !5
  %131 = getelementptr i8, ptr %130, i64 -24
  %132 = load i64, ptr %131, align 8
  %133 = getelementptr i8, ptr %38, i64 %132
  %134 = load i64, ptr %133, align 8, !tbaa !86
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %129
  %137 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %8, i64 noundef 1)
  br label %140

138:                                              ; preds = %129
  %139 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 32)
  br label %140

140:                                              ; preds = %136, %138
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8)
  br label %141

141:                                              ; preds = %118, %140
  %142 = add nuw i32 %90, 1
  %143 = load ptr, ptr %27, align 8, !tbaa !8
  %144 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %143, i64 0, i32 3
  %145 = load i32, ptr %144, align 8, !tbaa !17
  %146 = icmp ult i32 %142, %145
  br i1 %146, label %88, label %59

147:                                              ; preds = %50
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %10, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %10)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %10, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %10, ptr noundef nonnull @.str.16, i32 noundef 1632, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %148 unwind label %154

148:                                              ; preds = %147
  %149 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %149, ptr noundef nonnull align 8 dereferenceable(60) %10)
          to label %150 unwind label %152

150:                                              ; preds = %148
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %149, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %149, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %151 unwind label %154

151:                                              ; preds = %150
  unreachable

152:                                              ; preds = %148
  %153 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %149) #17
  br label %156

154:                                              ; preds = %150, %147
  %155 = landingpad { ptr, i32 }
          cleanup
  br label %156

156:                                              ; preds = %152, %154
  %157 = phi { ptr, i32 } [ %155, %154 ], [ %153, %152 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %10) #17
  resume { ptr, i32 } %157

158:                                              ; preds = %50
  %159 = and i64 %19, 4294967295
  %160 = getelementptr inbounds %"class.std::ios_base", ptr %54, i64 0, i32 1
  store i64 %159, ptr %160, align 8, !tbaa !84
  %161 = load i64, ptr %52, align 8
  %162 = getelementptr inbounds i8, ptr %1, i64 %161
  %163 = getelementptr inbounds %"class.std::ios_base", ptr %162, i64 0, i32 3
  store i32 %16, ptr %163, align 8, !tbaa !83
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE13print_patternERSod(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(8) %1, double noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %9 = getelementptr %"class.std::basic_ios", ptr %1, i64 0, i32 5
  %10 = load ptr, ptr %8, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %10, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %3
  %15 = getelementptr %"class.std::ios_base", ptr %1, i64 0, i32 2
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  br label %17

17:                                               ; preds = %14, %52
  %18 = phi ptr [ %10, %14 ], [ %57, %52 ]
  %19 = phi i32 [ 0, %14 ], [ %56, %52 ]
  %20 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 3
  %21 = load i32, ptr %20, align 8, !tbaa !17
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %32, label %61

23:                                               ; preds = %52, %3
  %24 = load ptr, ptr %1, align 8, !tbaa !5
  %25 = getelementptr i8, ptr %24, i64 -24
  %26 = load i64, ptr %25, align 8
  %27 = getelementptr inbounds i8, ptr %1, i64 %26
  %28 = getelementptr inbounds %"class.std::ios_base", ptr %27, i64 0, i32 5
  %29 = load i32, ptr %28, align 8, !tbaa !71
  %30 = and i32 %29, 5
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %129, label %118

32:                                               ; preds = %112, %17
  %33 = load ptr, ptr %1, align 8, !tbaa !5
  %34 = getelementptr i8, ptr %33, i64 -24
  %35 = load i64, ptr %34, align 8
  %36 = getelementptr i8, ptr %9, i64 %35
  %37 = load ptr, ptr %36, align 8, !tbaa !77
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %32
  call void @_ZSt16__throw_bad_castv() #21
  unreachable

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.std::ctype", ptr %37, i64 0, i32 8
  %42 = load i8, ptr %41, align 8, !tbaa !79
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::ctype", ptr %37, i64 0, i32 9, i64 10
  %46 = load i8, ptr %45, align 1, !tbaa !82
  br label %52

47:                                               ; preds = %40
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %37)
  %48 = load ptr, ptr %37, align 8, !tbaa !5
  %49 = getelementptr inbounds ptr, ptr %48, i64 6
  %50 = load ptr, ptr %49, align 8
  %51 = call noundef signext i8 %50(ptr noundef nonnull align 8 dereferenceable(570) %37, i8 noundef signext 10)
  br label %52

52:                                               ; preds = %44, %47
  %53 = phi i8 [ %46, %44 ], [ %51, %47 ]
  %54 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %53)
  %55 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %54)
  %56 = add nuw i32 %19, 1
  %57 = load ptr, ptr %8, align 8, !tbaa !8
  %58 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %57, i64 0, i32 2
  %59 = load i32, ptr %58, align 4, !tbaa !33
  %60 = icmp ult i32 %56, %59
  br i1 %60, label %17, label %23

61:                                               ; preds = %17, %112
  %62 = phi ptr [ %114, %112 ], [ %18, %17 ]
  %63 = phi i32 [ %113, %112 ], [ 0, %17 ]
  %64 = call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %62, i32 noundef %19, i32 noundef %63)
  %65 = icmp eq i32 %64, -1
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6)
  store i8 46, ptr %6, align 1, !tbaa !82
  %67 = load ptr, ptr %1, align 8, !tbaa !5
  %68 = getelementptr i8, ptr %67, i64 -24
  %69 = load i64, ptr %68, align 8
  %70 = getelementptr i8, ptr %15, i64 %69
  %71 = load i64, ptr %70, align 8, !tbaa !86
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %66
  %74 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %6, i64 noundef 1)
  br label %77

75:                                               ; preds = %66
  %76 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 46)
  br label %77

77:                                               ; preds = %73, %75
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6)
  br label %112

78:                                               ; preds = %61
  %79 = load ptr, ptr %16, align 8, !tbaa !92
  %80 = load ptr, ptr %8, align 8, !tbaa !8
  %81 = call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %80, i32 noundef %19, i32 noundef %63)
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds float, ptr %79, i64 %82
  %84 = load float, ptr %83, align 4, !tbaa !95
  %85 = call float @llvm.fabs.f32(float %84)
  %86 = fpext float %85 to double
  %87 = fcmp ogt double %86, %2
  br i1 %87, label %88, label %100

88:                                               ; preds = %78
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5)
  store i8 42, ptr %5, align 1, !tbaa !82
  %89 = load ptr, ptr %1, align 8, !tbaa !5
  %90 = getelementptr i8, ptr %89, i64 -24
  %91 = load i64, ptr %90, align 8
  %92 = getelementptr i8, ptr %15, i64 %91
  %93 = load i64, ptr %92, align 8, !tbaa !86
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %88
  %96 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %5, i64 noundef 1)
  br label %99

97:                                               ; preds = %88
  %98 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 42)
  br label %99

99:                                               ; preds = %95, %97
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5)
  br label %112

100:                                              ; preds = %78
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  store i8 58, ptr %4, align 1, !tbaa !82
  %101 = load ptr, ptr %1, align 8, !tbaa !5
  %102 = getelementptr i8, ptr %101, i64 -24
  %103 = load i64, ptr %102, align 8
  %104 = getelementptr i8, ptr %15, i64 %103
  %105 = load i64, ptr %104, align 8, !tbaa !86
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %100
  %108 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %4, i64 noundef 1)
  br label %111

109:                                              ; preds = %100
  %110 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 58)
  br label %111

111:                                              ; preds = %107, %109
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  br label %112

112:                                              ; preds = %77, %111, %99
  %113 = add nuw i32 %63, 1
  %114 = load ptr, ptr %8, align 8, !tbaa !8
  %115 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %114, i64 0, i32 3
  %116 = load i32, ptr %115, align 8, !tbaa !17
  %117 = icmp ult i32 %113, %116
  br i1 %117, label %61, label %32

118:                                              ; preds = %23
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.16, i32 noundef 1660, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %119 unwind label %125

119:                                              ; preds = %118
  %120 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %120, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %121 unwind label %123

121:                                              ; preds = %119
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %120, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %120, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %122 unwind label %125

122:                                              ; preds = %121
  unreachable

123:                                              ; preds = %119
  %124 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %120) #17
  br label %127

125:                                              ; preds = %121, %118
  %126 = landingpad { ptr, i32 }
          cleanup
  br label %127

127:                                              ; preds = %123, %125
  %128 = phi { ptr, i32 } [ %126, %125 ], [ %124, %123 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7) #17
  resume { ptr, i32 } %128

129:                                              ; preds = %23
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE11block_writeERSo(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = load ptr, ptr %1, align 8, !tbaa !5
  %8 = getelementptr i8, ptr %7, i64 -24
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = getelementptr inbounds %"class.std::ios_base", ptr %10, i64 0, i32 5
  %12 = load i32, ptr %11, align 8, !tbaa !71
  %13 = and i32 %12, 5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %5, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %5)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %5, ptr noundef nonnull @.str.16, i32 noundef 1669, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %16 unwind label %22

16:                                               ; preds = %15
  %17 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %17, ptr noundef nonnull align 8 dereferenceable(60) %5)
          to label %18 unwind label %20

18:                                               ; preds = %16
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %17, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %19 unwind label %22

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %16
  %21 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %17) #17
  br label %75

22:                                               ; preds = %18, %15
  %23 = landingpad { ptr, i32 }
          cleanup
  br label %75

24:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  store i8 91, ptr %4, align 1, !tbaa !82
  %25 = getelementptr inbounds %"class.std::ios_base", ptr %10, i64 0, i32 2
  %26 = load i64, ptr %25, align 8, !tbaa !86
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %4, i64 noundef 1)
  br label %32

30:                                               ; preds = %24
  %31 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 91)
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi ptr [ %29, %28 ], [ %1, %30 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  %35 = load i32, ptr %34, align 8, !tbaa !94
  %36 = zext i32 %35 to i64
  %37 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %33, i64 noundef %36)
  %38 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %37, ptr noundef nonnull @.str.19, i64 noundef 2)
  %39 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !92
  %41 = load i32, ptr %34, align 8, !tbaa !94
  %42 = zext i32 %41 to i64
  %43 = shl nuw nsw i64 %42, 2
  %44 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef %40, i64 noundef %43)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3)
  store i8 93, ptr %3, align 1, !tbaa !82
  %45 = load ptr, ptr %1, align 8, !tbaa !5
  %46 = getelementptr i8, ptr %45, i64 -24
  %47 = load i64, ptr %46, align 8
  %48 = getelementptr inbounds i8, ptr %1, i64 %47
  %49 = getelementptr inbounds %"class.std::ios_base", ptr %48, i64 0, i32 2
  %50 = load i64, ptr %49, align 8, !tbaa !86
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %32
  %53 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %3, i64 noundef 1)
  br label %56

54:                                               ; preds = %32
  %55 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 93)
  br label %56

56:                                               ; preds = %52, %54
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3)
  %57 = load ptr, ptr %1, align 8, !tbaa !5
  %58 = getelementptr i8, ptr %57, i64 -24
  %59 = load i64, ptr %58, align 8
  %60 = getelementptr inbounds i8, ptr %1, i64 %59
  %61 = getelementptr inbounds %"class.std::ios_base", ptr %60, i64 0, i32 5
  %62 = load i32, ptr %61, align 8, !tbaa !71
  %63 = and i32 %62, 5
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %74, label %65

65:                                               ; preds = %56
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.16, i32 noundef 1680, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %66 unwind label %72

66:                                               ; preds = %65
  %67 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %67, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %68 unwind label %70

68:                                               ; preds = %66
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %67, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %67, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %69 unwind label %72

69:                                               ; preds = %68
  unreachable

70:                                               ; preds = %66
  %71 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %67) #17
  br label %75

72:                                               ; preds = %68, %65
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %75

74:                                               ; preds = %56
  ret void

75:                                               ; preds = %72, %70, %22, %20
  %76 = phi ptr [ %5, %20 ], [ %5, %22 ], [ %6, %70 ], [ %6, %72 ]
  %77 = phi { ptr, i32 } [ %21, %20 ], [ %23, %22 ], [ %71, %70 ], [ %73, %72 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %76) #17
  resume { ptr, i32 } %77
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE10block_readERSi(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = getelementptr i8, ptr %9, i64 -24
  %11 = load i64, ptr %10, align 8
  %12 = getelementptr inbounds i8, ptr %1, i64 %11
  %13 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 5
  %14 = load i32, ptr %13, align 8, !tbaa !71
  %15 = and i32 %14, 5
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.16, i32 noundef 1689, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.20, ptr noundef nonnull @.str.18)
          to label %18 unwind label %24

18:                                               ; preds = %17
  %19 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %19, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %20 unwind label %22

20:                                               ; preds = %18
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %21 unwind label %24

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %19) #17
  br label %26

24:                                               ; preds = %20, %17
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi { ptr, i32 } [ %25, %24 ], [ %23, %22 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #17
  br label %96

28:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #17
  %29 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 1 dereferenceable(1) %4)
  %30 = load i8, ptr %4, align 1, !tbaa !82
  %31 = icmp eq i8 %30, 91
  br i1 %31, label %41, label %32

32:                                               ; preds = %28
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %5, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %5)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %5, ptr noundef nonnull @.str.16, i32 noundef 1695, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.18)
          to label %33 unwind label %39

33:                                               ; preds = %32
  %34 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %34, ptr noundef nonnull align 8 dereferenceable(60) %5)
          to label %35 unwind label %37

35:                                               ; preds = %33
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %34, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %34, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %36 unwind label %39

36:                                               ; preds = %35
  unreachable

37:                                               ; preds = %33
  %38 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %34) #17
  br label %93

39:                                               ; preds = %35, %32
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %93

41:                                               ; preds = %28
  %42 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 3
  %43 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi10_M_extractIjEERSiRT_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 4 dereferenceable(4) %42)
  %44 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 1 dereferenceable(1) %4)
  %45 = load i8, ptr %4, align 1, !tbaa !82
  %46 = icmp eq i8 %45, 93
  br i1 %46, label %56, label %47

47:                                               ; preds = %41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.16, i32 noundef 1699, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.18)
          to label %48 unwind label %54

48:                                               ; preds = %47
  %49 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %49, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %50 unwind label %52

50:                                               ; preds = %48
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %49, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %49, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %51 unwind label %54

51:                                               ; preds = %50
  unreachable

52:                                               ; preds = %48
  %53 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %49) #17
  br label %93

54:                                               ; preds = %50, %47
  %55 = landingpad { ptr, i32 }
          cleanup
  br label %93

56:                                               ; preds = %41
  %57 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 1 dereferenceable(1) %4)
  %58 = load i8, ptr %4, align 1, !tbaa !82
  %59 = icmp eq i8 %58, 91
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.16, i32 noundef 1701, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.18)
          to label %61 unwind label %67

61:                                               ; preds = %60
  %62 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %62, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %63 unwind label %65

63:                                               ; preds = %61
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %62, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %62, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %64 unwind label %67

64:                                               ; preds = %63
  unreachable

65:                                               ; preds = %61
  %66 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %62) #17
  br label %93

67:                                               ; preds = %63, %60
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %93

69:                                               ; preds = %56
  %70 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !92
  %72 = icmp eq ptr %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  call void @_ZdaPv(ptr noundef nonnull %71) #19
  br label %74

74:                                               ; preds = %73, %69
  %75 = load i32, ptr %42, align 8, !tbaa !94
  %76 = zext i32 %75 to i64
  %77 = shl nuw nsw i64 %76, 2
  %78 = call noalias noundef nonnull ptr @_Znam(i64 noundef %77) #20
  store ptr %78, ptr %70, align 8, !tbaa !92
  %79 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %78, i64 noundef %77)
  %80 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 1 dereferenceable(1) %4)
  %81 = load i8, ptr %4, align 1, !tbaa !82
  %82 = icmp eq i8 %81, 93
  br i1 %82, label %92, label %83

83:                                               ; preds = %74
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %8, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %8)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %8, ptr noundef nonnull @.str.16, i32 noundef 1712, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.18)
          to label %84 unwind label %90

84:                                               ; preds = %83
  %85 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %85, ptr noundef nonnull align 8 dereferenceable(60) %8)
          to label %86 unwind label %88

86:                                               ; preds = %84
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %85, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %85, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %87 unwind label %90

87:                                               ; preds = %86
  unreachable

88:                                               ; preds = %84
  %89 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %85) #17
  br label %93

90:                                               ; preds = %86, %83
  %91 = landingpad { ptr, i32 }
          cleanup
  br label %93

92:                                               ; preds = %74
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #17
  ret void

93:                                               ; preds = %90, %88, %67, %65, %54, %52, %39, %37
  %94 = phi ptr [ %5, %37 ], [ %5, %39 ], [ %6, %52 ], [ %6, %54 ], [ %7, %65 ], [ %7, %67 ], [ %8, %88 ], [ %8, %90 ]
  %95 = phi { ptr, i32 } [ %38, %37 ], [ %40, %39 ], [ %53, %52 ], [ %55, %54 ], [ %66, %65 ], [ %68, %67 ], [ %89, %88 ], [ %91, %90 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %94) #17
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #17
  br label %96

96:                                               ; preds = %93, %26
  %97 = phi { ptr, i32 } [ %95, %93 ], [ %27, %26 ]
  resume { ptr, i32 } %97
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexC2Eii(ptr noundef nonnull align 8 dereferenceable(68) %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 comdat($_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexC5Eii) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfE15ExcInvalidIndexE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcInvalidIndex", ptr %0, i64 0, i32 1
  store i32 %1, ptr %4, align 4, !tbaa !103
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcInvalidIndex", ptr %0, i64 0, i32 2
  store i32 %2, ptr %5, align 8, !tbaa !105
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexD2Ev(ptr noundef nonnull align 8 dereferenceable(68) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexD5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexD0Ev(ptr noundef nonnull align 8 dereferenceable(68) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIfE15ExcInvalidIndexD5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE15ExcInvalidIndex10print_infoERSo(ptr noundef nonnull align 8 dereferenceable(68) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.23, i64 noundef 22)
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcInvalidIndex", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !103
  %7 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %6)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3)
  store i8 44, ptr %3, align 1, !tbaa !82
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %7, i64 %10
  %12 = getelementptr inbounds %"class.std::ios_base", ptr %11, i64 0, i32 2
  %13 = load i64, ptr %12, align 8, !tbaa !86
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %7, ptr noundef nonnull %3, i64 noundef 1)
  br label %19

17:                                               ; preds = %2
  %18 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %7, i8 noundef signext 44)
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi ptr [ %16, %15 ], [ %7, %17 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3)
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcInvalidIndex", ptr %0, i64 0, i32 2
  %22 = load i32, ptr %21, align 8, !tbaa !105
  %23 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %20, i32 noundef %22)
  %24 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %23, ptr noundef nonnull @.str.24, i64 noundef 17)
  %25 = load ptr, ptr %23, align 8, !tbaa !5
  %26 = getelementptr i8, ptr %25, i64 -24
  %27 = load i64, ptr %26, align 8
  %28 = getelementptr inbounds i8, ptr %23, i64 %27
  %29 = getelementptr inbounds %"class.std::basic_ios", ptr %28, i64 0, i32 5
  %30 = load ptr, ptr %29, align 8, !tbaa !77
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %19
  call void @_ZSt16__throw_bad_castv() #21
  unreachable

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.std::ctype", ptr %30, i64 0, i32 8
  %35 = load i8, ptr %34, align 8, !tbaa !79
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::ctype", ptr %30, i64 0, i32 9, i64 10
  %39 = load i8, ptr %38, align 1, !tbaa !82
  br label %45

40:                                               ; preds = %33
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %30)
  %41 = load ptr, ptr %30, align 8, !tbaa !5
  %42 = getelementptr inbounds ptr, ptr %41, i64 6
  %43 = load ptr, ptr %42, align 8
  %44 = call noundef signext i8 %43(ptr noundef nonnull align 8 dereferenceable(570) %30, i8 noundef signext 10)
  br label %45

45:                                               ; preds = %37, %40
  %46 = phi i8 [ %39, %37 ], [ %44, %40 ]
  %47 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %23, i8 noundef signext %46)
  %48 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %47)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1C2Ei(ptr noundef nonnull align 8 dereferenceable(64) %0, i32 noundef %1) unnamed_addr #0 comdat($_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1C5Ei) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfE16ExcInvalidIndex1E, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcInvalidIndex1", ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !120
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1D2Ev(ptr noundef nonnull align 8 dereferenceable(64) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1D5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1D0Ev(ptr noundef nonnull align 8 dereferenceable(64) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIfE16ExcInvalidIndex1D5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE16ExcInvalidIndex110print_infoERSo(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) unnamed_addr #0 comdat align 2 {
  %3 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.25, i64 noundef 10)
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcInvalidIndex1", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !120
  %6 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %5)
  %7 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %6, ptr noundef nonnull @.str.26, i64 noundef 29)
  %8 = load ptr, ptr %6, align 8, !tbaa !5
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %6, i64 %10
  %12 = getelementptr inbounds %"class.std::basic_ios", ptr %11, i64 0, i32 5
  %13 = load ptr, ptr %12, align 8, !tbaa !77
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::ctype", ptr %13, i64 0, i32 8
  %18 = load i8, ptr %17, align 8, !tbaa !79
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::ctype", ptr %13, i64 0, i32 9, i64 10
  %22 = load i8, ptr %21, align 1, !tbaa !82
  br label %28

23:                                               ; preds = %16
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %13)
  %24 = load ptr, ptr %13, align 8, !tbaa !5
  %25 = getelementptr inbounds ptr, ptr %24, i64 6
  %26 = load ptr, ptr %25, align 8
  %27 = tail call noundef signext i8 %26(ptr noundef nonnull align 8 dereferenceable(570) %13, i8 noundef signext 10)
  br label %28

28:                                               ; preds = %20, %23
  %29 = phi i8 [ %22, %20 ], [ %27, %23 ]
  %30 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %6, i8 noundef signext %29)
  %31 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %30)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeC2Eii(ptr noundef nonnull align 8 dereferenceable(68) %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 comdat($_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeC5Eii) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIfE16ExcIteratorRangeE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcIteratorRange", ptr %0, i64 0, i32 1
  store i32 %1, ptr %4, align 4, !tbaa !122
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcIteratorRange", ptr %0, i64 0, i32 2
  store i32 %2, ptr %5, align 8, !tbaa !124
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeD2Ev(ptr noundef nonnull align 8 dereferenceable(68) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeD5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeD0Ev(ptr noundef nonnull align 8 dereferenceable(68) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIfE16ExcIteratorRangeD5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE16ExcIteratorRange10print_infoERSo(ptr noundef nonnull align 8 dereferenceable(68) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) unnamed_addr #0 comdat align 2 {
  %3 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.27, i64 noundef 32)
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcIteratorRange", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !122
  %6 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %5)
  %7 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %6, ptr noundef nonnull @.str.28, i64 noundef 44)
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix<float>::ExcIteratorRange", ptr %0, i64 0, i32 2
  %9 = load i32, ptr %8, align 8, !tbaa !124
  %10 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %6, i32 noundef %9)
  %11 = load ptr, ptr %10, align 8, !tbaa !5
  %12 = getelementptr i8, ptr %11, i64 -24
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds i8, ptr %10, i64 %13
  %15 = getelementptr inbounds %"class.std::basic_ios", ptr %14, i64 0, i32 5
  %16 = load ptr, ptr %15, align 8, !tbaa !77
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::ctype", ptr %16, i64 0, i32 8
  %21 = load i8, ptr %20, align 8, !tbaa !79
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::ctype", ptr %16, i64 0, i32 9, i64 10
  %25 = load i8, ptr %24, align 1, !tbaa !82
  br label %31

26:                                               ; preds = %19
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %16)
  %27 = load ptr, ptr %16, align 8, !tbaa !5
  %28 = getelementptr inbounds ptr, ptr %27, i64 6
  %29 = load ptr, ptr %28, align 8
  %30 = tail call noundef signext i8 %29(ptr noundef nonnull align 8 dereferenceable(570) %16, i8 noundef signext 10)
  br label %31

31:                                               ; preds = %23, %26
  %32 = phi i8 [ %25, %23 ], [ %30, %26 ]
  %33 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %10, i8 noundef signext %32)
  %34 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %33)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeEC2Ev(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1) unnamed_addr #0 comdat align 2 {
  %3 = load ptr, ptr %1, align 8
  store ptr %3, ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds ptr, ptr %1, i64 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr i8, ptr %3, i64 -24
  %7 = load i64, ptr %6, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 %7
  store ptr %5, ptr %8, align 8, !tbaa !5
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  store ptr null, ptr %9, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %10, align 8, !tbaa !12
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  store ptr null, ptr %11, align 8, !tbaa !125
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  store i32 0, ptr %12, align 8, !tbaa !127
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeEC1Ev(ptr noundef nonnull align 8 dereferenceable(36) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 40
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 1, i64 3), ptr %2, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  store ptr null, ptr %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %4, align 8, !tbaa !12
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  store ptr null, ptr %5, align 8, !tbaa !125
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  store i32 0, ptr %6, align 8, !tbaa !127
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(36) %2) unnamed_addr #0 comdat align 2 {
  %4 = load ptr, ptr %1, align 8
  store ptr %4, ptr %0, align 8, !tbaa !5
  %5 = getelementptr inbounds ptr, ptr %1, i64 1
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr i8, ptr %4, i64 -24
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 %8
  store ptr %6, ptr %9, align 8, !tbaa !5
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  store ptr null, ptr %10, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %11, align 8, !tbaa !12
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  store ptr null, ptr %12, align 8, !tbaa !125
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  store i32 0, ptr %13, align 8, !tbaa !127
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeEC1ERKS1_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 40
  %4 = load ptr, ptr %1, align 8, !tbaa !5
  %5 = getelementptr i8, ptr %4, i64 -24
  %6 = load i64, ptr %5, align 8
  %7 = getelementptr inbounds i8, ptr %1, i64 %6
  tail call void @_ZN6dealii11SubscriptorC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(72) %3, ptr noundef nonnull align 8 dereferenceable(72) %7)
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 1, i64 3), ptr %3, align 8, !tbaa !5
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  store ptr null, ptr %8, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %9, align 8, !tbaa !12
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  store ptr null, ptr %10, align 8, !tbaa !125
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  store i32 0, ptr %11, align 8, !tbaa !127
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeEC2ERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(122) %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = load ptr, ptr %1, align 8
  store ptr %4, ptr %0, align 8, !tbaa !5
  %5 = getelementptr inbounds ptr, ptr %1, i64 1
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr i8, ptr %4, i64 -24
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 %8
  store ptr %6, ptr %9, align 8, !tbaa !5
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  store ptr null, ptr %10, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %11, align 8, !tbaa !12
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  store ptr null, ptr %12, align 8, !tbaa !125
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  store i32 0, ptr %13, align 8, !tbaa !127
  %14 = load ptr, ptr %0, align 8, !tbaa !5
  %15 = getelementptr inbounds ptr, ptr %14, i64 2
  %16 = load ptr, ptr %15, align 8
  tail call void %16(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeEC1ERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 40
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 1, i64 3), ptr %3, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  store ptr null, ptr %4, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %5, align 8, !tbaa !12
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  store ptr null, ptr %6, align 8, !tbaa !125
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  store i32 0, ptr %7, align 8, !tbaa !127
  invoke void @_ZN6dealii12SparseMatrixIeE6reinitERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1)
          to label %8 unwind label %9

8:                                                ; preds = %2
  ret void

9:                                                ; preds = %2
  %10 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
          to label %11 unwind label %12

11:                                               ; preds = %9
  resume { ptr, i32 } %10

12:                                               ; preds = %9
  %13 = landingpad { ptr, i32 }
          catch ptr null
  %14 = extractvalue { ptr, i32 } %13, 0
  tail call void @__clang_call_terminate(ptr %14) #18
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeEC2ERKNS_15SparsityPatternERKNS_14IdentityMatrixE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(122) %2, ptr noundef nonnull align 4 dereferenceable(4) %3) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = load ptr, ptr %1, align 8
  store ptr %5, ptr %0, align 8, !tbaa !5
  %6 = getelementptr inbounds ptr, ptr %1, i64 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr i8, ptr %5, i64 -24
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 %9
  store ptr %7, ptr %10, align 8, !tbaa !5
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  store ptr null, ptr %11, align 8, !tbaa !8
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %12, align 8, !tbaa !12
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  store ptr null, ptr %13, align 8, !tbaa !125
  %14 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  store i32 0, ptr %14, align 8, !tbaa !127
  %15 = load ptr, ptr %0, align 8, !tbaa !5
  %16 = getelementptr inbounds ptr, ptr %15, i64 2
  %17 = load ptr, ptr %16, align 8
  tail call void %17(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %2)
  %18 = load ptr, ptr %11, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 3
  %20 = load i32, ptr %19, align 8, !tbaa !17
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %32, %4
  ret void

23:                                               ; preds = %4, %32
  %24 = phi ptr [ %34, %32 ], [ %18, %4 ]
  %25 = phi i32 [ %33, %32 ], [ 0, %4 ]
  %26 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %24, i32 noundef %25, i32 noundef %25)
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = load ptr, ptr %13, align 8, !tbaa !125
  %30 = zext i32 %26 to i64
  %31 = getelementptr inbounds x86_fp80, ptr %29, i64 %30
  store x86_fp80 0xK3FFF8000000000000000, ptr %31, align 16, !tbaa !128
  br label %32

32:                                               ; preds = %28, %23
  %33 = add nuw i32 %25, 1
  %34 = load ptr, ptr %11, align 8, !tbaa !8
  %35 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %34, i64 0, i32 3
  %36 = load i32, ptr %35, align 8, !tbaa !17
  %37 = icmp ult i32 %33, %36
  br i1 %37, label %23, label %22
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIeE1nEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 3
  %5 = load i32, ptr %4, align 8, !tbaa !17
  ret i32 %5
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3setEjje(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, x86_fp80 noundef %3) local_unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %6, i32 noundef %1, i32 noundef %2)
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !125
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds x86_fp80, ptr %11, i64 %12
  store x86_fp80 %3, ptr %13, align 16, !tbaa !128
  br label %14

14:                                               ; preds = %4, %9
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeEC1ERKNS_15SparsityPatternERKNS_14IdentityMatrixE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1, ptr noundef nonnull align 4 dereferenceable(4) %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds i8, ptr %0, i64 40
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 1, i64 3), ptr %4, align 8, !tbaa !5
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  store ptr null, ptr %5, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1, i32 1
  store ptr @.str, ptr %6, align 8, !tbaa !12
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  store ptr null, ptr %7, align 8, !tbaa !125
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  store i32 0, ptr %8, align 8, !tbaa !127
  invoke void @_ZN6dealii12SparseMatrixIeE6reinitERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1)
          to label %9 unwind label %15

9:                                                ; preds = %3
  %10 = load ptr, ptr %5, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %10, i64 0, i32 3
  %12 = load i32, ptr %11, align 8, !tbaa !17
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %29, %9
  ret void

15:                                               ; preds = %3
  %16 = landingpad { ptr, i32 }
          cleanup
  br label %35

17:                                               ; preds = %19
  %18 = landingpad { ptr, i32 }
          cleanup
  br label %35

19:                                               ; preds = %9, %29
  %20 = phi ptr [ %31, %29 ], [ %10, %9 ]
  %21 = phi i32 [ %30, %29 ], [ 0, %9 ]
  %22 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %20, i32 noundef %21, i32 noundef %21)
          to label %23 unwind label %17

23:                                               ; preds = %19
  %24 = icmp eq i32 %22, -1
  br i1 %24, label %29, label %25

25:                                               ; preds = %23
  %26 = load ptr, ptr %7, align 8, !tbaa !125
  %27 = zext i32 %22 to i64
  %28 = getelementptr inbounds x86_fp80, ptr %26, i64 %27
  store x86_fp80 0xK3FFF8000000000000000, ptr %28, align 16, !tbaa !128
  br label %29

29:                                               ; preds = %25, %23
  %30 = add nuw i32 %21, 1
  %31 = load ptr, ptr %5, align 8, !tbaa !8
  %32 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %31, i64 0, i32 3
  %33 = load i32, ptr %32, align 8, !tbaa !17
  %34 = icmp ult i32 %30, %33
  br i1 %34, label %19, label %14

35:                                               ; preds = %15, %17
  %36 = phi { ptr, i32 } [ %18, %17 ], [ %16, %15 ]
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
          to label %37 unwind label %38

37:                                               ; preds = %35
  resume { ptr, i32 } %36

38:                                               ; preds = %35
  %39 = landingpad { ptr, i32 }
          catch ptr null
  %40 = extractvalue { ptr, i32 } %39, 0
  tail call void @__clang_call_terminate(ptr %40) #18
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeED2Ev(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = load ptr, ptr %1, align 8
  store ptr %3, ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds ptr, ptr %1, i64 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr i8, ptr %3, i64 -24
  %7 = load i64, ptr %6, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 %7
  store ptr %5, ptr %8, align 8, !tbaa !5
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !8
  %11 = icmp eq ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  store ptr null, ptr %9, align 8, !tbaa !8
  br label %13

13:                                               ; preds = %2, %12
  %14 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !125
  %16 = icmp eq ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZdaPv(ptr noundef nonnull %15) #19
  br label %18

18:                                               ; preds = %17, %13
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeED1Ev(ptr noundef nonnull align 8 dereferenceable(36) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds i8, ptr %0, i64 40
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 1, i64 3), ptr %2, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store ptr null, ptr %3, align 8, !tbaa !8
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdaPv(ptr noundef nonnull %9) #19
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZTv0_n24_N6dealii12SparseMatrixIeED1Ev(ptr noundef %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 -24
  %4 = load i64, ptr %3, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 %4
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 0, i64 3), ptr %5, align 8, !tbaa !5
  %6 = getelementptr inbounds i8, ptr %5, i64 40
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 1, i64 3), ptr %6, align 8, !tbaa !5
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %5, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  store ptr null, ptr %7, align 8, !tbaa !8
  br label %11

11:                                               ; preds = %10, %1
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %5, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !125
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdaPv(ptr noundef nonnull %13) #19
  br label %16

16:                                               ; preds = %11, %15
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %6)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeED0Ev(ptr noundef nonnull align 8 dereferenceable(36) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds i8, ptr %0, i64 40
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 1, i64 3), ptr %2, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store ptr null, ptr %3, align 8, !tbaa !8
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdaPv(ptr noundef nonnull %9) #19
  br label %12

12:                                               ; preds = %11, %7
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
          to label %13 unwind label %14

13:                                               ; preds = %12
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void

14:                                               ; preds = %12
  %15 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  resume { ptr, i32 } %15
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZTv0_n24_N6dealii12SparseMatrixIeED0Ev(ptr noundef %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 -24
  %4 = load i64, ptr %3, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 %4
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 0, i64 3), ptr %5, align 8, !tbaa !5
  %6 = getelementptr inbounds i8, ptr %5, i64 40
  store ptr getelementptr inbounds ({ [7 x ptr], [5 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeEE, i64 0, inrange i32 1, i64 3), ptr %6, align 8, !tbaa !5
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %5, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  store ptr null, ptr %7, align 8, !tbaa !8
  br label %11

11:                                               ; preds = %10, %1
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %5, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !125
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdaPv(ptr noundef nonnull %13) #19
  br label %16

16:                                               ; preds = %15, %11
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %6)
          to label %19 unwind label %17

17:                                               ; preds = %16
  %18 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %5) #19
  resume { ptr, i32 } %18

19:                                               ; preds = %16
  tail call void @_ZdlPv(ptr noundef nonnull %5) #19
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIeEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #6 comdat align 2 {
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIeEaSERKNS_14IdentityMatrixE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 4 dereferenceable(4) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !125
  %5 = icmp eq ptr %4, null
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  br i1 %5, label %26, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds x86_fp80, ptr %4, i64 %18
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi ptr [ %4, %20 ], [ %24, %22 ]
  store x86_fp80 0xK00000000000000000000, ptr %23, align 16, !tbaa !128
  %24 = getelementptr inbounds x86_fp80, ptr %23, i64 1
  %25 = icmp eq ptr %24, %21
  br i1 %25, label %26, label %22

26:                                               ; preds = %22, %2, %8
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 3
  %29 = load i32, ptr %28, align 8, !tbaa !17
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %41, %26
  ret ptr %0

32:                                               ; preds = %26, %41
  %33 = phi ptr [ %43, %41 ], [ %7, %26 ]
  %34 = phi i32 [ %42, %41 ], [ 0, %26 ]
  %35 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %33, i32 noundef %34, i32 noundef %34)
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %41, label %37

37:                                               ; preds = %32
  %38 = load ptr, ptr %3, align 8, !tbaa !125
  %39 = zext i32 %35 to i64
  %40 = getelementptr inbounds x86_fp80, ptr %38, i64 %39
  store x86_fp80 0xK3FFF8000000000000000, ptr %40, align 16, !tbaa !128
  br label %41

41:                                               ; preds = %32, %37
  %42 = add nuw i32 %34, 1
  %43 = load ptr, ptr %27, align 8, !tbaa !8
  %44 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %43, i64 0, i32 3
  %45 = load i32, ptr %44, align 8, !tbaa !17
  %46 = icmp ult i32 %42, %45
  br i1 %46, label %32, label %31
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIeEaSEd(ptr noundef nonnull align 8 dereferenceable(36) %0, double noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !125
  %5 = icmp eq ptr %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds x86_fp80, ptr %4, i64 %18
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi ptr [ %4, %20 ], [ %24, %22 ]
  store x86_fp80 0xK00000000000000000000, ptr %23, align 16, !tbaa !128
  %24 = getelementptr inbounds x86_fp80, ptr %23, i64 1
  %25 = icmp eq ptr %24, %21
  br i1 %25, label %26, label %22

26:                                               ; preds = %22, %6, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE6reinitERKNS_15SparsityPatternE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(122) %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store ptr %1, ptr %3, align 8, !tbaa !8
  br label %7

7:                                                ; preds = %2, %6
  %8 = tail call noundef zeroext i1 @_ZNK6dealii15SparsityPattern5emptyEv(ptr noundef nonnull align 8 dereferenceable(122) %1)
  br i1 %8, label %9, label %16

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !125
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZdaPv(ptr noundef nonnull %11) #19
  br label %14

14:                                               ; preds = %13, %9
  store ptr null, ptr %10, align 8, !tbaa !125
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  store i32 0, ptr %15, align 8, !tbaa !127
  br label %54

16:                                               ; preds = %7
  %17 = load ptr, ptr %3, align 8, !tbaa !8
  %18 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %17, i64 0, i32 8
  %19 = load ptr, ptr %18, align 8, !tbaa !32
  %20 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %17, i64 0, i32 2
  %21 = load i32, ptr %20, align 4, !tbaa !33
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i64, ptr %19, i64 %22
  %24 = load i64, ptr %23, align 8, !tbaa !34
  %25 = load i64, ptr %19, align 8, !tbaa !34
  %26 = sub i64 %24, %25
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  %29 = load i32, ptr %28, align 8, !tbaa !127
  %30 = icmp ult i32 %29, %27
  %31 = icmp eq i32 %29, 0
  %32 = or i1 %31, %30
  %33 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !125
  br i1 %32, label %35, label %42

35:                                               ; preds = %16
  %36 = icmp eq ptr %34, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %35
  tail call void @_ZdaPv(ptr noundef nonnull %34) #19
  br label %38

38:                                               ; preds = %37, %35
  %39 = shl i64 %26, 4
  %40 = and i64 %39, 68719476720
  %41 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %40) #20
  store ptr %41, ptr %33, align 8, !tbaa !125
  store i32 %27, ptr %28, align 8, !tbaa !127
  br label %42

42:                                               ; preds = %16, %38
  %43 = phi ptr [ %41, %38 ], [ %34, %16 ]
  %44 = icmp eq ptr %43, null
  %45 = icmp eq i32 %27, 0
  %46 = or i1 %45, %44
  br i1 %46, label %54, label %47

47:                                               ; preds = %42
  %48 = and i64 %26, 4294967295
  %49 = getelementptr inbounds x86_fp80, ptr %43, i64 %48
  br label %50

50:                                               ; preds = %50, %47
  %51 = phi ptr [ %43, %47 ], [ %52, %50 ]
  store x86_fp80 0xK00000000000000000000, ptr %51, align 16, !tbaa !128
  %52 = getelementptr inbounds x86_fp80, ptr %51, i64 1
  %53 = icmp eq ptr %52, %49
  br i1 %53, label %54, label %50

54:                                               ; preds = %50, %42, %14
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE5clearEv(ptr noundef nonnull align 8 dereferenceable(36) %0) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store ptr null, ptr %2, align 8, !tbaa !8
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !125
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdaPv(ptr noundef nonnull %8) #19
  br label %11

11:                                               ; preds = %10, %6
  store ptr null, ptr %7, align 8, !tbaa !125
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  store i32 0, ptr %12, align 8, !tbaa !127
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef zeroext i1 @_ZNK6dealii12SparseMatrixIeE5emptyEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call noundef zeroext i1 @_ZNK6dealii15SparsityPattern5emptyEv(ptr noundef nonnull align 8 dereferenceable(122) %3)
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ %6, %5 ], [ true, %1 ]
  ret i1 %8
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIeE1mEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !33
  ret i32 %5
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIeE18n_nonzero_elementsEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 8
  %5 = load ptr, ptr %4, align 8, !tbaa !32
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds i64, ptr %5, i64 %8
  %10 = load i64, ptr %9, align 8, !tbaa !34
  %11 = load i64, ptr %5, align 8, !tbaa !34
  %12 = sub i64 %10, %11
  %13 = trunc i64 %12 to i32
  ret i32 %13
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIeE27n_actually_nonzero_elementsEd(ptr noundef nonnull align 8 dereferenceable(36) %0, double noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %6 = load ptr, ptr %5, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %6, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = load i64, ptr %6, align 8, !tbaa !34
  %13 = sub i64 %11, %12
  %14 = and i64 %13, 4294967295
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %97, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !125
  %19 = fpext double %1 to x86_fp80
  %20 = and i64 %13, 4294967295
  %21 = icmp ult i64 %20, 8
  br i1 %21, label %94, label %22

22:                                               ; preds = %16
  %23 = and i64 %13, 7
  %24 = sub nsw i64 %20, %23
  %25 = insertelement <2 x x86_fp80> poison, x86_fp80 %19, i64 0
  %26 = shufflevector <2 x x86_fp80> %25, <2 x x86_fp80> poison, <2 x i32> zeroinitializer
  %27 = insertelement <2 x x86_fp80> poison, x86_fp80 %19, i64 0
  %28 = shufflevector <2 x x86_fp80> %27, <2 x x86_fp80> poison, <2 x i32> zeroinitializer
  %29 = insertelement <2 x x86_fp80> poison, x86_fp80 %19, i64 0
  %30 = shufflevector <2 x x86_fp80> %29, <2 x x86_fp80> poison, <2 x i32> zeroinitializer
  %31 = insertelement <2 x x86_fp80> poison, x86_fp80 %19, i64 0
  %32 = shufflevector <2 x x86_fp80> %31, <2 x x86_fp80> poison, <2 x i32> zeroinitializer
  br label %33

33:                                               ; preds = %33, %22
  %34 = phi i64 [ 0, %22 ], [ %86, %33 ]
  %35 = phi <2 x i32> [ zeroinitializer, %22 ], [ %82, %33 ]
  %36 = phi <2 x i32> [ zeroinitializer, %22 ], [ %83, %33 ]
  %37 = phi <2 x i32> [ zeroinitializer, %22 ], [ %84, %33 ]
  %38 = phi <2 x i32> [ zeroinitializer, %22 ], [ %85, %33 ]
  %39 = or i64 %34, 1
  %40 = or i64 %34, 2
  %41 = or i64 %34, 3
  %42 = or i64 %34, 4
  %43 = or i64 %34, 5
  %44 = or i64 %34, 6
  %45 = or i64 %34, 7
  %46 = getelementptr inbounds x86_fp80, ptr %18, i64 %34
  %47 = getelementptr inbounds x86_fp80, ptr %18, i64 %39
  %48 = getelementptr inbounds x86_fp80, ptr %18, i64 %40
  %49 = getelementptr inbounds x86_fp80, ptr %18, i64 %41
  %50 = getelementptr inbounds x86_fp80, ptr %18, i64 %42
  %51 = getelementptr inbounds x86_fp80, ptr %18, i64 %43
  %52 = getelementptr inbounds x86_fp80, ptr %18, i64 %44
  %53 = getelementptr inbounds x86_fp80, ptr %18, i64 %45
  %54 = load x86_fp80, ptr %46, align 16, !tbaa !128
  %55 = load x86_fp80, ptr %47, align 16, !tbaa !128
  %56 = insertelement <2 x x86_fp80> poison, x86_fp80 %54, i64 0
  %57 = insertelement <2 x x86_fp80> %56, x86_fp80 %55, i64 1
  %58 = load x86_fp80, ptr %48, align 16, !tbaa !128
  %59 = load x86_fp80, ptr %49, align 16, !tbaa !128
  %60 = insertelement <2 x x86_fp80> poison, x86_fp80 %58, i64 0
  %61 = insertelement <2 x x86_fp80> %60, x86_fp80 %59, i64 1
  %62 = load x86_fp80, ptr %50, align 16, !tbaa !128
  %63 = load x86_fp80, ptr %51, align 16, !tbaa !128
  %64 = insertelement <2 x x86_fp80> poison, x86_fp80 %62, i64 0
  %65 = insertelement <2 x x86_fp80> %64, x86_fp80 %63, i64 1
  %66 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %67 = load x86_fp80, ptr %53, align 16, !tbaa !128
  %68 = insertelement <2 x x86_fp80> poison, x86_fp80 %66, i64 0
  %69 = insertelement <2 x x86_fp80> %68, x86_fp80 %67, i64 1
  %70 = tail call <2 x x86_fp80> @llvm.fabs.v2f80(<2 x x86_fp80> %57)
  %71 = tail call <2 x x86_fp80> @llvm.fabs.v2f80(<2 x x86_fp80> %61)
  %72 = tail call <2 x x86_fp80> @llvm.fabs.v2f80(<2 x x86_fp80> %65)
  %73 = tail call <2 x x86_fp80> @llvm.fabs.v2f80(<2 x x86_fp80> %69)
  %74 = fcmp ogt <2 x x86_fp80> %70, %26
  %75 = fcmp ogt <2 x x86_fp80> %71, %28
  %76 = fcmp ogt <2 x x86_fp80> %72, %30
  %77 = fcmp ogt <2 x x86_fp80> %73, %32
  %78 = zext <2 x i1> %74 to <2 x i32>
  %79 = zext <2 x i1> %75 to <2 x i32>
  %80 = zext <2 x i1> %76 to <2 x i32>
  %81 = zext <2 x i1> %77 to <2 x i32>
  %82 = add <2 x i32> %35, %78
  %83 = add <2 x i32> %36, %79
  %84 = add <2 x i32> %37, %80
  %85 = add <2 x i32> %38, %81
  %86 = add nuw i64 %34, 8
  %87 = icmp eq i64 %86, %24
  br i1 %87, label %88, label %33, !llvm.loop !130

88:                                               ; preds = %33
  %89 = add <2 x i32> %83, %82
  %90 = add <2 x i32> %84, %89
  %91 = add <2 x i32> %85, %90
  %92 = tail call i32 @llvm.vector.reduce.add.v2i32(<2 x i32> %91)
  %93 = icmp eq i64 %23, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %16, %88
  %95 = phi i64 [ 0, %16 ], [ %24, %88 ]
  %96 = phi i32 [ 0, %16 ], [ %92, %88 ]
  br label %99

97:                                               ; preds = %99, %88, %2
  %98 = phi i32 [ 0, %2 ], [ %92, %88 ], [ %107, %99 ]
  ret i32 %98

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %108, %99 ], [ %95, %94 ]
  %101 = phi i32 [ %107, %99 ], [ %96, %94 ]
  %102 = getelementptr inbounds x86_fp80, ptr %18, i64 %100
  %103 = load x86_fp80, ptr %102, align 16, !tbaa !128
  %104 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %103)
  %105 = fcmp ogt x86_fp80 %104, %19
  %106 = zext i1 %105 to i32
  %107 = add i32 %101, %106
  %108 = add nuw nsw i64 %100, 1
  %109 = icmp eq i64 %108, %20
  br i1 %109, label %97, label %99, !llvm.loop !131
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIeE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii12SparseMatrixIeE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  %3 = load i32, ptr %2, align 8, !tbaa !127
  %4 = shl i32 %3, 4
  %5 = add i32 %4, 112
  ret i32 %5
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3addEjje(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, x86_fp80 noundef %3) local_unnamed_addr #4 comdat align 2 {
  %5 = fcmp oeq x86_fp80 %3, 0xK00000000000000000000
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %8, i32 noundef %1, i32 noundef %2)
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !125
  %14 = zext i32 %9 to i64
  %15 = getelementptr inbounds x86_fp80, ptr %13, i64 %14
  %16 = load x86_fp80, ptr %15, align 16, !tbaa !128
  %17 = fadd x86_fp80 %16, %3
  store x86_fp80 %17, ptr %15, align 16, !tbaa !128
  br label %18

18:                                               ; preds = %11, %6, %4
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIeEmLEe(ptr noundef nonnull align 8 dereferenceable(36) %0, x86_fp80 noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !125
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !32
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !33
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i64, ptr %8, i64 %11
  %13 = load i64, ptr %12, align 8, !tbaa !34
  %14 = load i64, ptr %8, align 8, !tbaa !34
  %15 = sub i64 %13, %14
  %16 = and i64 %15, 4294967295
  %17 = getelementptr inbounds x86_fp80, ptr %4, i64 %16
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %2, %19
  %20 = phi ptr [ %21, %19 ], [ %4, %2 ]
  %21 = getelementptr inbounds x86_fp80, ptr %20, i64 1
  %22 = load x86_fp80, ptr %20, align 16, !tbaa !128
  %23 = fmul x86_fp80 %22, %1
  store x86_fp80 %23, ptr %20, align 16, !tbaa !128
  %24 = icmp eq ptr %21, %17
  br i1 %24, label %25, label %19

25:                                               ; preds = %19, %2
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIeEdVEe(ptr noundef nonnull align 8 dereferenceable(36) %0, x86_fp80 noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = fdiv x86_fp80 0xK3FFF8000000000000000, %1
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !125
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, ptr %9, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = load i64, ptr %9, align 8, !tbaa !34
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds x86_fp80, ptr %5, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %2, %20
  %21 = phi ptr [ %22, %20 ], [ %5, %2 ]
  %22 = getelementptr inbounds x86_fp80, ptr %21, i64 1
  %23 = load x86_fp80, ptr %21, align 16, !tbaa !128
  %24 = fmul x86_fp80 %3, %23
  store x86_fp80 %24, ptr %21, align 16, !tbaa !128
  %25 = icmp eq ptr %22, %18
  br i1 %25, label %26, label %20

26:                                               ; preds = %20, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE10symmetrizeEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = zext i32 %5 to i64
  br label %11

10:                                               ; preds = %63, %1
  ret void

11:                                               ; preds = %7, %63
  %12 = phi i64 [ 0, %7 ], [ %24, %63 ]
  %13 = load ptr, ptr %8, align 8, !tbaa !125
  %14 = load ptr, ptr %2, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds i64, ptr %16, i64 %12
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = getelementptr inbounds x86_fp80, ptr %13, i64 %18
  %20 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 11
  %21 = load i8, ptr %20, align 1, !tbaa !43, !range !44, !noundef !45
  %22 = zext i8 %21 to i64
  %23 = getelementptr inbounds x86_fp80, ptr %19, i64 %22
  %24 = add nuw nsw i64 %12, 1
  %25 = getelementptr inbounds i64, ptr %16, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !34
  %27 = getelementptr inbounds x86_fp80, ptr %13, i64 %26
  %28 = icmp eq ptr %23, %27
  br i1 %28, label %63, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %31 = load ptr, ptr %30, align 8, !tbaa !46
  %32 = add i64 %18, 1
  %33 = getelementptr inbounds i32, ptr %31, i64 %32
  %34 = trunc i64 %12 to i32
  br label %35

35:                                               ; preds = %29, %59
  %36 = phi ptr [ %60, %59 ], [ %23, %29 ]
  %37 = phi ptr [ %61, %59 ], [ %33, %29 ]
  %38 = load i32, ptr %37, align 4, !tbaa !47
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %12, %39
  br i1 %40, label %41, label %63

41:                                               ; preds = %35
  %42 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %43 = load ptr, ptr %8, align 8, !tbaa !125
  %44 = load ptr, ptr %2, align 8, !tbaa !8
  %45 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %44, i32 noundef %38, i32 noundef %34)
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds x86_fp80, ptr %43, i64 %46
  %48 = load x86_fp80, ptr %47, align 16, !tbaa !128
  %49 = fadd x86_fp80 %42, %48
  %50 = fmul x86_fp80 %49, 0xK3FFE8000000000000000
  store x86_fp80 %50, ptr %36, align 16, !tbaa !128
  %51 = load i32, ptr %37, align 4, !tbaa !47
  %52 = load ptr, ptr %2, align 8, !tbaa !8
  %53 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %52, i32 noundef %51, i32 noundef %34)
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %59, label %55

55:                                               ; preds = %41
  %56 = load ptr, ptr %8, align 8, !tbaa !125
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds x86_fp80, ptr %56, i64 %57
  store x86_fp80 %50, ptr %58, align 16, !tbaa !128
  br label %59

59:                                               ; preds = %41, %55
  %60 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %61 = getelementptr inbounds i32, ptr %37, i64 1
  %62 = icmp eq ptr %60, %27
  br i1 %62, label %63, label %35

63:                                               ; preds = %35, %59, %11
  %64 = icmp eq i64 %24, %9
  br i1 %64, label %10, label %11
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIeEclEjj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.dealii::SparseMatrix<long double>::ExcInvalidIndex", align 8
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %6, i32 noundef %1, i32 noundef %2)
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %24

9:                                                ; preds = %3
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %4)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeE15ExcInvalidIndexE, i64 0, inrange i32 0, i64 2), ptr %4, align 8, !tbaa !5
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcInvalidIndex", ptr %4, i64 0, i32 1
  store i32 %1, ptr %10, align 4, !tbaa !132
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcInvalidIndex", ptr %4, i64 0, i32 2
  store i32 %2, ptr %11, align 8, !tbaa !134
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %4, ptr noundef nonnull @.str.9, i32 noundef 2270, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.11, ptr noundef nonnull @.str.12)
          to label %12 unwind label %20

12:                                               ; preds = %9
  %13 = call ptr @__cxa_allocate_exception(i64 72) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %13, ptr noundef nonnull align 8 dereferenceable(60) %4)
          to label %14 unwind label %18

14:                                               ; preds = %12
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeE15ExcInvalidIndexE, i64 0, inrange i32 0, i64 2), ptr %13, align 8, !tbaa !5
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcInvalidIndex", ptr %13, i64 0, i32 1
  %16 = load i64, ptr %10, align 4
  store i64 %16, ptr %15, align 4
  invoke void @__cxa_throw(ptr nonnull %13, ptr nonnull @_ZTIN6dealii12SparseMatrixIeE15ExcInvalidIndexE, ptr nonnull @_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexD2Ev) #21
          to label %17 unwind label %20

17:                                               ; preds = %14
  unreachable

18:                                               ; preds = %12
  %19 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %13) #17
  br label %22

20:                                               ; preds = %14, %9
  %21 = landingpad { ptr, i32 }
          cleanup
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi { ptr, i32 } [ %21, %20 ], [ %19, %18 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %4) #17
  resume { ptr, i32 } %23

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !125
  %27 = load ptr, ptr %5, align 8, !tbaa !8
  %28 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %27, i32 noundef %1, i32 noundef %2)
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds x86_fp80, ptr %26, i64 %29
  %31 = load x86_fp80, ptr %30, align 16, !tbaa !128
  ret x86_fp80 %31
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIeE2elEjj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %5, i32 noundef %1, i32 noundef %2)
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !125
  %11 = zext i32 %6 to i64
  %12 = getelementptr inbounds x86_fp80, ptr %10, i64 %11
  %13 = load x86_fp80, ptr %12, align 16, !tbaa !128
  br label %14

14:                                               ; preds = %3, %8
  %15 = phi x86_fp80 [ %13, %8 ], [ 0xK00000000000000000000, %3 ]
  ret x86_fp80 %15
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIeE12diag_elementEj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !125
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !32
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds i64, ptr %8, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = getelementptr inbounds x86_fp80, ptr %4, i64 %11
  %13 = load x86_fp80, ptr %12, align 16, !tbaa !128
  ret x86_fp80 %13
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef nonnull align 16 dereferenceable(16) ptr @_ZN6dealii12SparseMatrixIeE12diag_elementEj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !125
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !32
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds i64, ptr %8, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = getelementptr inbounds x86_fp80, ptr %4, i64 %11
  ret ptr %12
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIeE9raw_entryEjj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !125
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds i64, ptr %9, i64 %10
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = zext i32 %2 to i64
  %14 = add i64 %12, %13
  %15 = getelementptr inbounds x86_fp80, ptr %5, i64 %14
  %16 = load x86_fp80, ptr %15, align 16, !tbaa !128
  ret x86_fp80 %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIeE12global_entryEj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !125
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds x86_fp80, ptr %4, i64 %5
  %7 = load x86_fp80, ptr %6, align 16, !tbaa !128
  ret x86_fp80 %7
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 16 dereferenceable(16) ptr @_ZN6dealii12SparseMatrixIeE12global_entryEj(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !125
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds x86_fp80, ptr %4, i64 %5
  ret ptr %6
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIeE7l1_normEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.dealii::Vector.27", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %2) #17
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 3
  %6 = load i32, ptr %5, align 8, !tbaa !17
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIeEE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !5
  %7 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %28, label %9

9:                                                ; preds = %1
  %10 = zext i32 %6 to i64
  %11 = shl nuw nsw i64 %10, 4
  %12 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %11) #20
          to label %13 unwind label %21

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 2
  store ptr %12, ptr %14, align 8, !tbaa !135
  store i32 %6, ptr %15, align 4, !tbaa !137
  store i32 %6, ptr %7, align 8, !tbaa !138
  %16 = getelementptr inbounds x86_fp80, ptr %12, i64 %10
  br label %17

17:                                               ; preds = %17, %13
  %18 = phi ptr [ %19, %17 ], [ %12, %13 ]
  store x86_fp80 0xK00000000000000000000, ptr %18, align 16, !tbaa !128
  %19 = getelementptr inbounds x86_fp80, ptr %18, i64 1
  %20 = icmp eq ptr %19, %16
  br i1 %20, label %28, label %17

21:                                               ; preds = %9
  %22 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
          to label %23 unwind label %25

23:                                               ; preds = %21, %80
  %24 = phi { ptr, i32 } [ %47, %80 ], [ %22, %21 ]
  resume { ptr, i32 } %24

25:                                               ; preds = %21
  %26 = landingpad { ptr, i32 }
          catch ptr null
  %27 = extractvalue { ptr, i32 } %26, 0
  call void @__clang_call_terminate(ptr %27) #18
  unreachable

28:                                               ; preds = %17, %1
  %29 = phi ptr [ null, %1 ], [ %12, %17 ]
  %30 = load ptr, ptr %3, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %30, i64 0, i32 2
  %32 = load i32, ptr %31, align 4, !tbaa !33
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %44, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %30, i64 0, i32 8
  %36 = load ptr, ptr %35, align 8, !tbaa !32
  %37 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %30, i64 0, i32 9
  %40 = zext i32 %32 to i64
  %41 = load i64, ptr %36, align 8, !tbaa !34
  br label %48

42:                                               ; preds = %59, %48
  %43 = icmp eq i64 %51, %40
  br i1 %43, label %44, label %48

44:                                               ; preds = %42, %28
  %45 = invoke noundef x86_fp80 @_ZNK6dealii6VectorIeE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(88) %2)
          to label %74 unwind label %46

46:                                               ; preds = %44
  %47 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIeED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %2)
          to label %80 unwind label %81

48:                                               ; preds = %34, %42
  %49 = phi i64 [ %41, %34 ], [ %53, %42 ]
  %50 = phi i64 [ 0, %34 ], [ %51, %42 ]
  %51 = add nuw nsw i64 %50, 1
  %52 = getelementptr inbounds i64, ptr %36, i64 %51
  %53 = load i64, ptr %52, align 8, !tbaa !34
  %54 = and i64 %49, 4294967295
  %55 = icmp ugt i64 %53, %54
  br i1 %55, label %56, label %42

56:                                               ; preds = %48
  %57 = trunc i64 %49 to i32
  %58 = load ptr, ptr %39, align 8, !tbaa !46
  br label %59

59:                                               ; preds = %56, %59
  %60 = phi i64 [ %54, %56 ], [ %72, %59 ]
  %61 = phi i32 [ %57, %56 ], [ %71, %59 ]
  %62 = getelementptr inbounds x86_fp80, ptr %38, i64 %60
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = call x86_fp80 @llvm.fabs.f80(x86_fp80 %63)
  %65 = getelementptr inbounds i32, ptr %58, i64 %60
  %66 = load i32, ptr %65, align 4, !tbaa !47
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds x86_fp80, ptr %29, i64 %67
  %69 = load x86_fp80, ptr %68, align 16, !tbaa !128
  %70 = fadd x86_fp80 %64, %69
  store x86_fp80 %70, ptr %68, align 16, !tbaa !128
  %71 = add i32 %61, 1
  %72 = zext i32 %71 to i64
  %73 = icmp ugt i64 %53, %72
  br i1 %73, label %59, label %42

74:                                               ; preds = %44
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIeEE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !5
  %75 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %76 = load ptr, ptr %75, align 8, !tbaa !135
  %77 = icmp eq ptr %76, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %74
  call void @_ZdaPv(ptr noundef nonnull %76) #19
  store ptr null, ptr %75, align 8, !tbaa !135
  br label %79

79:                                               ; preds = %74, %78
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %2)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %2) #17
  ret x86_fp80 %45

80:                                               ; preds = %46
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %2) #17
  br label %23

81:                                               ; preds = %46
  %82 = landingpad { ptr, i32 }
          catch ptr null
  %83 = extractvalue { ptr, i32 } %82, 0
  call void @__clang_call_terminate(ptr %83) #18
  unreachable
}

declare noundef x86_fp80 @_ZNK6dealii6VectorIeE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIeED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #4 comdat align 2 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIeEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.27", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !135
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #19
  store ptr null, ptr %2, align 8, !tbaa !135
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIeE11linfty_normEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !125
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !32
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %1
  %12 = load i64, ptr %7, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %3, i64 %12
  %14 = zext i32 %9 to i64
  br label %17

15:                                               ; preds = %34, %1
  %16 = phi x86_fp80 [ 0xK00000000000000000000, %1 ], [ %38, %34 ]
  ret x86_fp80 %16

17:                                               ; preds = %11, %34
  %18 = phi i64 [ 0, %11 ], [ %21, %34 ]
  %19 = phi ptr [ %13, %11 ], [ %36, %34 ]
  %20 = phi x86_fp80 [ 0xK00000000000000000000, %11 ], [ %38, %34 ]
  %21 = add nuw nsw i64 %18, 1
  %22 = getelementptr inbounds i64, ptr %7, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !34
  %24 = getelementptr inbounds x86_fp80, ptr %3, i64 %23
  %25 = icmp eq ptr %19, %24
  br i1 %25, label %34, label %26

26:                                               ; preds = %17, %26
  %27 = phi ptr [ %29, %26 ], [ %19, %17 ]
  %28 = phi x86_fp80 [ %32, %26 ], [ 0xK00000000000000000000, %17 ]
  %29 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %30 = load x86_fp80, ptr %27, align 16, !tbaa !128
  %31 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %30)
  %32 = fadd x86_fp80 %28, %31
  %33 = icmp eq ptr %29, %24
  br i1 %33, label %34, label %26

34:                                               ; preds = %26, %17
  %35 = phi x86_fp80 [ 0xK00000000000000000000, %17 ], [ %32, %26 ]
  %36 = phi ptr [ %19, %17 ], [ %24, %26 ]
  %37 = fcmp ogt x86_fp80 %35, %20
  %38 = select i1 %37, x86_fp80 %35, x86_fp80 %20
  %39 = icmp eq i64 %21, %14
  br i1 %39, label %15, label %17
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIeE14frobenius_normEv(ptr noundef nonnull align 8 dereferenceable(36) %0) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !8
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !33
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !125
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %3, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds i64, ptr %9, i64 %10
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %7, i64 %12
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %18, %1
  %16 = phi x86_fp80 [ 0xK00000000000000000000, %1 ], [ %23, %18 ]
  %17 = tail call x86_fp80 @sqrtl(x86_fp80 noundef %16) #17
  ret x86_fp80 %17

18:                                               ; preds = %1, %18
  %19 = phi ptr [ %24, %18 ], [ %7, %1 ]
  %20 = phi x86_fp80 [ %23, %18 ], [ 0xK00000000000000000000, %1 ]
  %21 = load x86_fp80, ptr %19, align 16, !tbaa !128
  %22 = fmul x86_fp80 %21, %21
  %23 = fadd x86_fp80 %20, %22
  %24 = getelementptr inbounds x86_fp80, ptr %19, i64 1
  %25 = icmp eq ptr %24, %13
  br i1 %25, label %15, label %18
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5beginEv(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.28") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %8 = zext i32 %6 to i64
  br label %9

9:                                                ; preds = %12, %2
  %10 = phi i64 [ %14, %12 ], [ 0, %2 ]
  %11 = icmp eq i64 %10, %8
  br i1 %11, label %24, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr %7, align 8, !tbaa !32
  %14 = add nuw nsw i64 %10, 1
  %15 = getelementptr inbounds i64, ptr %13, i64 %14
  %16 = load i64, ptr %15, align 8, !tbaa !34
  %17 = getelementptr inbounds i64, ptr %13, i64 %10
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = sub i64 %16, %18
  %20 = and i64 %19, 4294967295
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %9, label %22

22:                                               ; preds = %12
  %23 = trunc i64 %10 to i32
  br label %24

24:                                               ; preds = %9, %22
  %25 = phi i32 [ %23, %22 ], [ %6, %9 ]
  store ptr %4, ptr %0, align 8, !tbaa !57
  %26 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %25, ptr %26, align 8, !tbaa !59
  %27 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %27, align 4, !tbaa !60
  %28 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.29", ptr %0, i64 0, i32 1
  store ptr %1, ptr %28, align 8, !tbaa !139
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE3endEv(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.28") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  store ptr %4, ptr %0, align 8, !tbaa !57
  %5 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  store i32 %7, ptr %5, align 8, !tbaa !59
  %8 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %8, align 4, !tbaa !60
  %9 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.29", ptr %0, i64 0, i32 1
  store ptr %1, ptr %9, align 8, !tbaa !139
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE5beginEv(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.30") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %8 = zext i32 %6 to i64
  br label %9

9:                                                ; preds = %12, %2
  %10 = phi i64 [ %14, %12 ], [ 0, %2 ]
  %11 = icmp eq i64 %10, %8
  br i1 %11, label %24, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr %7, align 8, !tbaa !32
  %14 = add nuw nsw i64 %10, 1
  %15 = getelementptr inbounds i64, ptr %13, i64 %14
  %16 = load i64, ptr %15, align 8, !tbaa !34
  %17 = getelementptr inbounds i64, ptr %13, i64 %10
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = sub i64 %16, %18
  %20 = and i64 %19, 4294967295
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %9, label %22

22:                                               ; preds = %12
  %23 = trunc i64 %10 to i32
  br label %24

24:                                               ; preds = %9, %22
  %25 = phi i32 [ %23, %22 ], [ %6, %9 ]
  store ptr %4, ptr %0, align 8, !tbaa !57
  %26 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %25, ptr %26, align 8, !tbaa !59
  %27 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %27, align 4, !tbaa !60
  %28 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.31", ptr %0, i64 0, i32 1
  store ptr %1, ptr %28, align 8, !tbaa !141
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3endEv(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.30") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  store ptr %4, ptr %0, align 8, !tbaa !57
  %7 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %6, ptr %7, align 8, !tbaa !59
  %8 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %8, align 4, !tbaa !60
  %9 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.31", ptr %0, i64 0, i32 1
  store ptr %1, ptr %9, align 8, !tbaa !141
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5beginEj(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.28") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !32
  %8 = add i32 %2, 1
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %7, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = zext i32 %2 to i64
  %13 = getelementptr inbounds i64, ptr %7, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = sub i64 %11, %14
  %16 = and i64 %15, 4294967295
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %34

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33, !noalias !143
  br label %21

21:                                               ; preds = %26, %18
  %22 = phi i64 [ %11, %18 ], [ %30, %26 ]
  %23 = phi i32 [ %2, %18 ], [ %24, %26 ]
  %24 = add i32 %23, 1
  %25 = icmp ult i32 %24, %20
  br i1 %25, label %26, label %34

26:                                               ; preds = %21
  %27 = add i32 %23, 2
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i64, ptr %7, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34, !noalias !143
  %31 = sub i64 %30, %22
  %32 = and i64 %31, 4294967295
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %21, label %34

34:                                               ; preds = %26, %21, %3
  %35 = phi i32 [ %2, %3 ], [ %24, %26 ], [ %20, %21 ]
  store ptr %5, ptr %0, align 8, !tbaa !57
  %36 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %35, ptr %36, align 8, !tbaa !59
  %37 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %37, align 4, !tbaa !60
  %38 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.29", ptr %0, i64 0, i32 1
  store ptr %1, ptr %38, align 8, !tbaa !139
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE3endEj(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.28") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  br label %9

9:                                                ; preds = %13, %3
  %10 = phi i32 [ %2, %3 ], [ %11, %13 ]
  %11 = add i32 %10, 1
  %12 = icmp ult i32 %11, %7
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = load ptr, ptr %8, align 8, !tbaa !32
  %15 = add i32 %10, 2
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i64, ptr %14, i64 %16
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = zext i32 %11 to i64
  %20 = getelementptr inbounds i64, ptr %14, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !34
  %22 = sub i64 %18, %21
  %23 = and i64 %22, 4294967295
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %9, label %25

25:                                               ; preds = %9, %13
  %26 = phi i32 [ %11, %13 ], [ %7, %9 ]
  store ptr %5, ptr %0, align 8, !tbaa !57
  %27 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %26, ptr %27, align 8, !tbaa !59
  %28 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %28, align 4, !tbaa !60
  %29 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.29", ptr %0, i64 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !139
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE5beginEj(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.30") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !32
  %8 = add i32 %2, 1
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %7, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = zext i32 %2 to i64
  %13 = getelementptr inbounds i64, ptr %7, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = sub i64 %11, %14
  %16 = and i64 %15, 4294967295
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %34

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33, !noalias !146
  br label %21

21:                                               ; preds = %26, %18
  %22 = phi i64 [ %11, %18 ], [ %30, %26 ]
  %23 = phi i32 [ %2, %18 ], [ %24, %26 ]
  %24 = add i32 %23, 1
  %25 = icmp ult i32 %24, %20
  br i1 %25, label %26, label %34

26:                                               ; preds = %21
  %27 = add i32 %23, 2
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i64, ptr %7, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34, !noalias !146
  %31 = sub i64 %30, %22
  %32 = and i64 %31, 4294967295
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %21, label %34

34:                                               ; preds = %26, %21, %3
  %35 = phi i32 [ %2, %3 ], [ %24, %26 ], [ %20, %21 ]
  store ptr %5, ptr %0, align 8, !tbaa !57
  %36 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %35, ptr %36, align 8, !tbaa !59
  %37 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %37, align 4, !tbaa !60
  %38 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.31", ptr %0, i64 0, i32 1
  store ptr %1, ptr %38, align 8, !tbaa !141
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3endEj(ptr noalias sret(%"class.dealii::internals::SparseMatrixIterators::Iterator.30") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, i32 noundef %2) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  br label %9

9:                                                ; preds = %13, %3
  %10 = phi i32 [ %2, %3 ], [ %11, %13 ]
  %11 = add i32 %10, 1
  %12 = icmp ult i32 %11, %7
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = load ptr, ptr %8, align 8, !tbaa !32
  %15 = add i32 %10, 2
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i64, ptr %14, i64 %16
  %18 = load i64, ptr %17, align 8, !tbaa !34
  %19 = zext i32 %11 to i64
  %20 = getelementptr inbounds i64, ptr %14, i64 %19
  %21 = load i64, ptr %20, align 8, !tbaa !34
  %22 = sub i64 %18, %21
  %23 = and i64 %22, 4294967295
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %9, label %25

25:                                               ; preds = %9, %13
  %26 = phi i32 [ %11, %13 ], [ %7, %9 ]
  store ptr %5, ptr %0, align 8, !tbaa !57
  %27 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 1
  store i32 %26, ptr %27, align 8, !tbaa !59
  %28 = getelementptr inbounds %"class.dealii::internals::SparsityPatternIterators::Accessor", ptr %0, i64 0, i32 2
  store i32 0, ptr %28, align 4, !tbaa !60
  %29 = getelementptr inbounds %"class.dealii::internals::SparseMatrixIterators::Accessor.31", ptr %0, i64 0, i32 1
  store ptr %1, ptr %29, align 8, !tbaa !141
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5printERSo(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  br label %26

11:                                               ; preds = %78, %26
  %12 = phi ptr [ %27, %26 ], [ %84, %78 ]
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %12, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !33
  %15 = zext i32 %14 to i64
  %16 = icmp ult i64 %33, %15
  br i1 %16, label %26, label %17

17:                                               ; preds = %11, %2
  %18 = load ptr, ptr %1, align 8, !tbaa !5
  %19 = getelementptr i8, ptr %18, i64 -24
  %20 = load i64, ptr %19, align 8
  %21 = getelementptr inbounds i8, ptr %1, i64 %20
  %22 = getelementptr inbounds %"class.std::ios_base", ptr %21, i64 0, i32 5
  %23 = load i32, ptr %22, align 8, !tbaa !71
  %24 = and i32 %23, 5
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %101, label %90

26:                                               ; preds = %9, %11
  %27 = phi ptr [ %5, %9 ], [ %12, %11 ]
  %28 = phi i64 [ 0, %9 ], [ %33, %11 ]
  %29 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %27, i64 0, i32 8
  %30 = load ptr, ptr %29, align 8, !tbaa !32
  %31 = getelementptr inbounds i64, ptr %30, i64 %28
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = add nuw nsw i64 %28, 1
  %34 = and i64 %32, 4294967295
  %35 = getelementptr inbounds i64, ptr %30, i64 %33
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = icmp ugt i64 %36, %34
  br i1 %37, label %38, label %11

38:                                               ; preds = %26
  %39 = trunc i64 %32 to i32
  br label %40

40:                                               ; preds = %38, %78
  %41 = phi i64 [ %83, %78 ], [ %34, %38 ]
  %42 = phi i32 [ %82, %78 ], [ %39, %38 ]
  %43 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.13, i64 noundef 1)
  %44 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, i64 noundef %28)
  %45 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %44, ptr noundef nonnull @.str.14, i64 noundef 1)
  %46 = load ptr, ptr %4, align 8, !tbaa !8
  %47 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %46, i64 0, i32 9
  %48 = load ptr, ptr %47, align 8, !tbaa !46
  %49 = getelementptr inbounds i32, ptr %48, i64 %41
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = zext i32 %50 to i64
  %52 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %44, i64 noundef %51)
  %53 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %52, ptr noundef nonnull @.str.15, i64 noundef 2)
  %54 = load ptr, ptr %10, align 8, !tbaa !125
  %55 = getelementptr inbounds x86_fp80, ptr %54, i64 %41
  %56 = load x86_fp80, ptr %55, align 16, !tbaa !128
  %57 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIeEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %52, x86_fp80 noundef %56)
  %58 = load ptr, ptr %57, align 8, !tbaa !5
  %59 = getelementptr i8, ptr %58, i64 -24
  %60 = load i64, ptr %59, align 8
  %61 = getelementptr inbounds i8, ptr %57, i64 %60
  %62 = getelementptr inbounds %"class.std::basic_ios", ptr %61, i64 0, i32 5
  %63 = load ptr, ptr %62, align 8, !tbaa !77
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %66

65:                                               ; preds = %40
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

66:                                               ; preds = %40
  %67 = getelementptr inbounds %"class.std::ctype", ptr %63, i64 0, i32 8
  %68 = load i8, ptr %67, align 8, !tbaa !79
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.std::ctype", ptr %63, i64 0, i32 9, i64 10
  %72 = load i8, ptr %71, align 1, !tbaa !82
  br label %78

73:                                               ; preds = %66
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %63)
  %74 = load ptr, ptr %63, align 8, !tbaa !5
  %75 = getelementptr inbounds ptr, ptr %74, i64 6
  %76 = load ptr, ptr %75, align 8
  %77 = tail call noundef signext i8 %76(ptr noundef nonnull align 8 dereferenceable(570) %63, i8 noundef signext 10)
  br label %78

78:                                               ; preds = %70, %73
  %79 = phi i8 [ %72, %70 ], [ %77, %73 ]
  %80 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %57, i8 noundef signext %79)
  %81 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %80)
  %82 = add i32 %42, 1
  %83 = zext i32 %82 to i64
  %84 = load ptr, ptr %4, align 8, !tbaa !8
  %85 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %84, i64 0, i32 8
  %86 = load ptr, ptr %85, align 8, !tbaa !32
  %87 = getelementptr inbounds i64, ptr %86, i64 %33
  %88 = load i64, ptr %87, align 8, !tbaa !34
  %89 = icmp ugt i64 %88, %83
  br i1 %89, label %40, label %11

90:                                               ; preds = %17
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.16, i32 noundef 1591, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %91 unwind label %97

91:                                               ; preds = %90
  %92 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %92, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %93 unwind label %95

93:                                               ; preds = %91
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %92, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %92, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %94 unwind label %97

94:                                               ; preds = %93
  unreachable

95:                                               ; preds = %91
  %96 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %92) #17
  br label %99

97:                                               ; preds = %93, %90
  %98 = landingpad { ptr, i32 }
          cleanup
  br label %99

99:                                               ; preds = %95, %97
  %100 = phi { ptr, i32 } [ %98, %97 ], [ %96, %95 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #17
  resume { ptr, i32 } %100

101:                                              ; preds = %17
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE15print_formattedERSojbjPKcd(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %2, i1 noundef zeroext %3, i32 noundef %4, ptr noundef %5, double noundef %6) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %11 = load ptr, ptr %1, align 8, !tbaa !5
  %12 = getelementptr i8, ptr %11, i64 -24
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds i8, ptr %1, i64 %13
  %15 = getelementptr inbounds %"class.std::ios_base", ptr %14, i64 0, i32 3
  %16 = load i32, ptr %15, align 8, !tbaa !83
  %17 = zext i32 %2 to i64
  %18 = getelementptr inbounds %"class.std::ios_base", ptr %14, i64 0, i32 1
  %19 = load i64, ptr %18, align 8, !tbaa !84
  store i64 %17, ptr %18, align 8, !tbaa !84
  %20 = load i64, ptr %12, align 8
  %21 = getelementptr inbounds i8, ptr %1, i64 %20
  %22 = getelementptr inbounds %"class.std::ios_base", ptr %21, i64 0, i32 3
  %23 = load i32, ptr %22, align 8, !tbaa !85
  %24 = and i32 %23, -261
  %25 = select i1 %3, i32 256, i32 4
  %26 = or i32 %24, %25
  store i32 %26, ptr %22, align 8, !tbaa !85
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %28 = getelementptr %"class.std::basic_ios", ptr %1, i64 0, i32 5
  %29 = load ptr, ptr %27, align 8, !tbaa !8
  %30 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %29, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !33
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %51, label %33

33:                                               ; preds = %7
  %34 = icmp eq i32 %4, 0
  %35 = select i1 %3, i32 7, i32 2
  %36 = add i32 %35, %2
  %37 = select i1 %34, i32 %36, i32 %4
  %38 = getelementptr %"class.std::ios_base", ptr %1, i64 0, i32 2
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %41 = fpext double %6 to x86_fp80
  %42 = icmp eq ptr %5, null
  br label %43

43:                                               ; preds = %33, %80
  %44 = phi ptr [ %29, %33 ], [ %85, %80 ]
  %45 = phi i32 [ 0, %33 ], [ %84, %80 ]
  %46 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %44, i64 0, i32 3
  %47 = load i32, ptr %46, align 8, !tbaa !17
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %60, label %89

49:                                               ; preds = %80
  %50 = load ptr, ptr %1, align 8, !tbaa !5
  br label %51

51:                                               ; preds = %49, %7
  %52 = phi ptr [ %50, %49 ], [ %11, %7 ]
  %53 = getelementptr i8, ptr %52, i64 -24
  %54 = load i64, ptr %53, align 8
  %55 = getelementptr inbounds i8, ptr %1, i64 %54
  %56 = getelementptr inbounds %"class.std::ios_base", ptr %55, i64 0, i32 5
  %57 = load i32, ptr %56, align 8, !tbaa !71
  %58 = and i32 %57, 5
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %158, label %147

60:                                               ; preds = %141, %43
  %61 = load ptr, ptr %1, align 8, !tbaa !5
  %62 = getelementptr i8, ptr %61, i64 -24
  %63 = load i64, ptr %62, align 8
  %64 = getelementptr i8, ptr %28, i64 %63
  %65 = load ptr, ptr %64, align 8, !tbaa !77
  %66 = icmp eq ptr %65, null
  br i1 %66, label %67, label %68

67:                                               ; preds = %60
  call void @_ZSt16__throw_bad_castv() #21
  unreachable

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.std::ctype", ptr %65, i64 0, i32 8
  %70 = load i8, ptr %69, align 8, !tbaa !79
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::ctype", ptr %65, i64 0, i32 9, i64 10
  %74 = load i8, ptr %73, align 1, !tbaa !82
  br label %80

75:                                               ; preds = %68
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %65)
  %76 = load ptr, ptr %65, align 8, !tbaa !5
  %77 = getelementptr inbounds ptr, ptr %76, i64 6
  %78 = load ptr, ptr %77, align 8
  %79 = call noundef signext i8 %78(ptr noundef nonnull align 8 dereferenceable(570) %65, i8 noundef signext 10)
  br label %80

80:                                               ; preds = %72, %75
  %81 = phi i8 [ %74, %72 ], [ %79, %75 ]
  %82 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %81)
  %83 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %82)
  %84 = add nuw i32 %45, 1
  %85 = load ptr, ptr %27, align 8, !tbaa !8
  %86 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %85, i64 0, i32 2
  %87 = load i32, ptr %86, align 4, !tbaa !33
  %88 = icmp ult i32 %84, %87
  br i1 %88, label %43, label %49

89:                                               ; preds = %43, %141
  %90 = phi ptr [ %143, %141 ], [ %44, %43 ]
  %91 = phi i32 [ %142, %141 ], [ 0, %43 ]
  %92 = call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %90, i32 noundef %45, i32 noundef %91)
  %93 = icmp eq i32 %92, -1
  %94 = load ptr, ptr %1, align 8, !tbaa !5
  %95 = getelementptr i8, ptr %94, i64 -24
  %96 = load i64, ptr %95, align 8
  %97 = getelementptr i8, ptr %38, i64 %96
  store i64 %39, ptr %97, align 8, !tbaa !86
  br i1 %93, label %119, label %98

98:                                               ; preds = %89
  %99 = load ptr, ptr %40, align 8, !tbaa !125
  %100 = load ptr, ptr %27, align 8, !tbaa !8
  %101 = call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %100, i32 noundef %45, i32 noundef %91)
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds x86_fp80, ptr %99, i64 %102
  %104 = load x86_fp80, ptr %103, align 16, !tbaa !128
  %105 = fmul x86_fp80 %104, %41
  %106 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIeEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, x86_fp80 noundef %105)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9)
  store i8 32, ptr %9, align 1, !tbaa !82
  %107 = load ptr, ptr %106, align 8, !tbaa !5
  %108 = getelementptr i8, ptr %107, i64 -24
  %109 = load i64, ptr %108, align 8
  %110 = getelementptr inbounds i8, ptr %106, i64 %109
  %111 = getelementptr inbounds %"class.std::ios_base", ptr %110, i64 0, i32 2
  %112 = load i64, ptr %111, align 8, !tbaa !86
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %98
  %115 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %106, ptr noundef nonnull %9, i64 noundef 1)
  br label %118

116:                                              ; preds = %98
  %117 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %106, i8 noundef signext 32)
  br label %118

118:                                              ; preds = %114, %116
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9)
  br label %141

119:                                              ; preds = %89
  br i1 %42, label %120, label %126

120:                                              ; preds = %119
  %121 = load i64, ptr %95, align 8
  %122 = getelementptr inbounds i8, ptr %1, i64 %121
  %123 = getelementptr inbounds %"class.std::ios_base", ptr %122, i64 0, i32 5
  %124 = load i32, ptr %123, align 8, !tbaa !71
  %125 = or i32 %124, 1
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(ptr noundef nonnull align 8 dereferenceable(264) %122, i32 noundef %125)
  br label %129

126:                                              ; preds = %119
  %127 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %5) #17
  %128 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %5, i64 noundef %127)
  br label %129

129:                                              ; preds = %120, %126
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8)
  store i8 32, ptr %8, align 1, !tbaa !82
  %130 = load ptr, ptr %1, align 8, !tbaa !5
  %131 = getelementptr i8, ptr %130, i64 -24
  %132 = load i64, ptr %131, align 8
  %133 = getelementptr i8, ptr %38, i64 %132
  %134 = load i64, ptr %133, align 8, !tbaa !86
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %129
  %137 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %8, i64 noundef 1)
  br label %140

138:                                              ; preds = %129
  %139 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 32)
  br label %140

140:                                              ; preds = %136, %138
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8)
  br label %141

141:                                              ; preds = %118, %140
  %142 = add nuw i32 %91, 1
  %143 = load ptr, ptr %27, align 8, !tbaa !8
  %144 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %143, i64 0, i32 3
  %145 = load i32, ptr %144, align 8, !tbaa !17
  %146 = icmp ult i32 %142, %145
  br i1 %146, label %89, label %60

147:                                              ; preds = %51
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %10, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %10)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %10, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %10, ptr noundef nonnull @.str.16, i32 noundef 1632, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %148 unwind label %154

148:                                              ; preds = %147
  %149 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %149, ptr noundef nonnull align 8 dereferenceable(60) %10)
          to label %150 unwind label %152

150:                                              ; preds = %148
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %149, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %149, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %151 unwind label %154

151:                                              ; preds = %150
  unreachable

152:                                              ; preds = %148
  %153 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %149) #17
  br label %156

154:                                              ; preds = %150, %147
  %155 = landingpad { ptr, i32 }
          cleanup
  br label %156

156:                                              ; preds = %152, %154
  %157 = phi { ptr, i32 } [ %155, %154 ], [ %153, %152 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %10) #17
  resume { ptr, i32 } %157

158:                                              ; preds = %51
  %159 = and i64 %19, 4294967295
  %160 = getelementptr inbounds %"class.std::ios_base", ptr %55, i64 0, i32 1
  store i64 %159, ptr %160, align 8, !tbaa !84
  %161 = load i64, ptr %53, align 8
  %162 = getelementptr inbounds i8, ptr %1, i64 %161
  %163 = getelementptr inbounds %"class.std::ios_base", ptr %162, i64 0, i32 3
  store i32 %16, ptr %163, align 8, !tbaa !83
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE13print_patternERSod(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(8) %1, double noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %9 = getelementptr %"class.std::basic_ios", ptr %1, i64 0, i32 5
  %10 = load ptr, ptr %8, align 8, !tbaa !8
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %10, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %3
  %15 = getelementptr %"class.std::ios_base", ptr %1, i64 0, i32 2
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %17 = fpext double %2 to x86_fp80
  br label %18

18:                                               ; preds = %14, %53
  %19 = phi ptr [ %10, %14 ], [ %58, %53 ]
  %20 = phi i32 [ 0, %14 ], [ %57, %53 ]
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %19, i64 0, i32 3
  %22 = load i32, ptr %21, align 8, !tbaa !17
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %33, label %62

24:                                               ; preds = %53, %3
  %25 = load ptr, ptr %1, align 8, !tbaa !5
  %26 = getelementptr i8, ptr %25, i64 -24
  %27 = load i64, ptr %26, align 8
  %28 = getelementptr inbounds i8, ptr %1, i64 %27
  %29 = getelementptr inbounds %"class.std::ios_base", ptr %28, i64 0, i32 5
  %30 = load i32, ptr %29, align 8, !tbaa !71
  %31 = and i32 %30, 5
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %129, label %118

33:                                               ; preds = %112, %18
  %34 = load ptr, ptr %1, align 8, !tbaa !5
  %35 = getelementptr i8, ptr %34, i64 -24
  %36 = load i64, ptr %35, align 8
  %37 = getelementptr i8, ptr %9, i64 %36
  %38 = load ptr, ptr %37, align 8, !tbaa !77
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %33
  call void @_ZSt16__throw_bad_castv() #21
  unreachable

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::ctype", ptr %38, i64 0, i32 8
  %43 = load i8, ptr %42, align 8, !tbaa !79
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::ctype", ptr %38, i64 0, i32 9, i64 10
  %47 = load i8, ptr %46, align 1, !tbaa !82
  br label %53

48:                                               ; preds = %41
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %38)
  %49 = load ptr, ptr %38, align 8, !tbaa !5
  %50 = getelementptr inbounds ptr, ptr %49, i64 6
  %51 = load ptr, ptr %50, align 8
  %52 = call noundef signext i8 %51(ptr noundef nonnull align 8 dereferenceable(570) %38, i8 noundef signext 10)
  br label %53

53:                                               ; preds = %45, %48
  %54 = phi i8 [ %47, %45 ], [ %52, %48 ]
  %55 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %54)
  %56 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %55)
  %57 = add nuw i32 %20, 1
  %58 = load ptr, ptr %8, align 8, !tbaa !8
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %58, i64 0, i32 2
  %60 = load i32, ptr %59, align 4, !tbaa !33
  %61 = icmp ult i32 %57, %60
  br i1 %61, label %18, label %24

62:                                               ; preds = %18, %112
  %63 = phi ptr [ %114, %112 ], [ %19, %18 ]
  %64 = phi i32 [ %113, %112 ], [ 0, %18 ]
  %65 = call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %63, i32 noundef %20, i32 noundef %64)
  %66 = icmp eq i32 %65, -1
  br i1 %66, label %67, label %79

67:                                               ; preds = %62
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6)
  store i8 46, ptr %6, align 1, !tbaa !82
  %68 = load ptr, ptr %1, align 8, !tbaa !5
  %69 = getelementptr i8, ptr %68, i64 -24
  %70 = load i64, ptr %69, align 8
  %71 = getelementptr i8, ptr %15, i64 %70
  %72 = load i64, ptr %71, align 8, !tbaa !86
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %67
  %75 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %6, i64 noundef 1)
  br label %78

76:                                               ; preds = %67
  %77 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 46)
  br label %78

78:                                               ; preds = %74, %76
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6)
  br label %112

79:                                               ; preds = %62
  %80 = load ptr, ptr %16, align 8, !tbaa !125
  %81 = load ptr, ptr %8, align 8, !tbaa !8
  %82 = call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %81, i32 noundef %20, i32 noundef %64)
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds x86_fp80, ptr %80, i64 %83
  %85 = load x86_fp80, ptr %84, align 16, !tbaa !128
  %86 = call x86_fp80 @llvm.fabs.f80(x86_fp80 %85)
  %87 = fcmp ogt x86_fp80 %86, %17
  br i1 %87, label %88, label %100

88:                                               ; preds = %79
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5)
  store i8 42, ptr %5, align 1, !tbaa !82
  %89 = load ptr, ptr %1, align 8, !tbaa !5
  %90 = getelementptr i8, ptr %89, i64 -24
  %91 = load i64, ptr %90, align 8
  %92 = getelementptr i8, ptr %15, i64 %91
  %93 = load i64, ptr %92, align 8, !tbaa !86
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %88
  %96 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %5, i64 noundef 1)
  br label %99

97:                                               ; preds = %88
  %98 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 42)
  br label %99

99:                                               ; preds = %95, %97
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5)
  br label %112

100:                                              ; preds = %79
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  store i8 58, ptr %4, align 1, !tbaa !82
  %101 = load ptr, ptr %1, align 8, !tbaa !5
  %102 = getelementptr i8, ptr %101, i64 -24
  %103 = load i64, ptr %102, align 8
  %104 = getelementptr i8, ptr %15, i64 %103
  %105 = load i64, ptr %104, align 8, !tbaa !86
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %100
  %108 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %4, i64 noundef 1)
  br label %111

109:                                              ; preds = %100
  %110 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 58)
  br label %111

111:                                              ; preds = %107, %109
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  br label %112

112:                                              ; preds = %78, %111, %99
  %113 = add nuw i32 %64, 1
  %114 = load ptr, ptr %8, align 8, !tbaa !8
  %115 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %114, i64 0, i32 3
  %116 = load i32, ptr %115, align 8, !tbaa !17
  %117 = icmp ult i32 %113, %116
  br i1 %117, label %62, label %33

118:                                              ; preds = %24
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.16, i32 noundef 1660, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %119 unwind label %125

119:                                              ; preds = %118
  %120 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %120, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %121 unwind label %123

121:                                              ; preds = %119
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %120, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %120, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %122 unwind label %125

122:                                              ; preds = %121
  unreachable

123:                                              ; preds = %119
  %124 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %120) #17
  br label %127

125:                                              ; preds = %121, %118
  %126 = landingpad { ptr, i32 }
          cleanup
  br label %127

127:                                              ; preds = %123, %125
  %128 = phi { ptr, i32 } [ %126, %125 ], [ %124, %123 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7) #17
  resume { ptr, i32 } %128

129:                                              ; preds = %24
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE11block_writeERSo(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = load ptr, ptr %1, align 8, !tbaa !5
  %8 = getelementptr i8, ptr %7, i64 -24
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = getelementptr inbounds %"class.std::ios_base", ptr %10, i64 0, i32 5
  %12 = load i32, ptr %11, align 8, !tbaa !71
  %13 = and i32 %12, 5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %5, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %5)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %5, ptr noundef nonnull @.str.16, i32 noundef 1669, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %16 unwind label %22

16:                                               ; preds = %15
  %17 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %17, ptr noundef nonnull align 8 dereferenceable(60) %5)
          to label %18 unwind label %20

18:                                               ; preds = %16
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %17, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %19 unwind label %22

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %16
  %21 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %17) #17
  br label %75

22:                                               ; preds = %18, %15
  %23 = landingpad { ptr, i32 }
          cleanup
  br label %75

24:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  store i8 91, ptr %4, align 1, !tbaa !82
  %25 = getelementptr inbounds %"class.std::ios_base", ptr %10, i64 0, i32 2
  %26 = load i64, ptr %25, align 8, !tbaa !86
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %4, i64 noundef 1)
  br label %32

30:                                               ; preds = %24
  %31 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 91)
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi ptr [ %29, %28 ], [ %1, %30 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  %35 = load i32, ptr %34, align 8, !tbaa !127
  %36 = zext i32 %35 to i64
  %37 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %33, i64 noundef %36)
  %38 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %37, ptr noundef nonnull @.str.19, i64 noundef 2)
  %39 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !125
  %41 = load i32, ptr %34, align 8, !tbaa !127
  %42 = zext i32 %41 to i64
  %43 = shl nuw nsw i64 %42, 4
  %44 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5writeEPKcl(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef %40, i64 noundef %43)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3)
  store i8 93, ptr %3, align 1, !tbaa !82
  %45 = load ptr, ptr %1, align 8, !tbaa !5
  %46 = getelementptr i8, ptr %45, i64 -24
  %47 = load i64, ptr %46, align 8
  %48 = getelementptr inbounds i8, ptr %1, i64 %47
  %49 = getelementptr inbounds %"class.std::ios_base", ptr %48, i64 0, i32 2
  %50 = load i64, ptr %49, align 8, !tbaa !86
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %32
  %53 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull %3, i64 noundef 1)
  br label %56

54:                                               ; preds = %32
  %55 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext 93)
  br label %56

56:                                               ; preds = %52, %54
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3)
  %57 = load ptr, ptr %1, align 8, !tbaa !5
  %58 = getelementptr i8, ptr %57, i64 -24
  %59 = load i64, ptr %58, align 8
  %60 = getelementptr inbounds i8, ptr %1, i64 %59
  %61 = getelementptr inbounds %"class.std::ios_base", ptr %60, i64 0, i32 5
  %62 = load i32, ptr %61, align 8, !tbaa !71
  %63 = and i32 %62, 5
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %74, label %65

65:                                               ; preds = %56
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.16, i32 noundef 1680, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
          to label %66 unwind label %72

66:                                               ; preds = %65
  %67 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %67, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %68 unwind label %70

68:                                               ; preds = %66
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %67, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %67, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %69 unwind label %72

69:                                               ; preds = %68
  unreachable

70:                                               ; preds = %66
  %71 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %67) #17
  br label %75

72:                                               ; preds = %68, %65
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %75

74:                                               ; preds = %56
  ret void

75:                                               ; preds = %72, %70, %22, %20
  %76 = phi ptr [ %5, %20 ], [ %5, %22 ], [ %6, %70 ], [ %6, %72 ]
  %77 = phi { ptr, i32 } [ %21, %20 ], [ %23, %22 ], [ %71, %70 ], [ %73, %72 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %76) #17
  resume { ptr, i32 } %77
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE10block_readERSi(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %6 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %7 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %8 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = getelementptr i8, ptr %9, i64 -24
  %11 = load i64, ptr %10, align 8
  %12 = getelementptr inbounds i8, ptr %1, i64 %11
  %13 = getelementptr inbounds %"class.std::ios_base", ptr %12, i64 0, i32 5
  %14 = load i32, ptr %13, align 8, !tbaa !71
  %15 = and i32 %14, 5
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.16, i32 noundef 1689, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.20, ptr noundef nonnull @.str.18)
          to label %18 unwind label %24

18:                                               ; preds = %17
  %19 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %19, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %20 unwind label %22

20:                                               ; preds = %18
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %21 unwind label %24

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %19) #17
  br label %26

24:                                               ; preds = %20, %17
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi { ptr, i32 } [ %25, %24 ], [ %23, %22 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #17
  br label %96

28:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #17
  %29 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 1 dereferenceable(1) %4)
  %30 = load i8, ptr %4, align 1, !tbaa !82
  %31 = icmp eq i8 %30, 91
  br i1 %31, label %41, label %32

32:                                               ; preds = %28
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %5, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %5)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %5, ptr noundef nonnull @.str.16, i32 noundef 1695, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.18)
          to label %33 unwind label %39

33:                                               ; preds = %32
  %34 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %34, ptr noundef nonnull align 8 dereferenceable(60) %5)
          to label %35 unwind label %37

35:                                               ; preds = %33
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %34, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %34, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %36 unwind label %39

36:                                               ; preds = %35
  unreachable

37:                                               ; preds = %33
  %38 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %34) #17
  br label %93

39:                                               ; preds = %35, %32
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %93

41:                                               ; preds = %28
  %42 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 3
  %43 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi10_M_extractIjEERSiRT_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 4 dereferenceable(4) %42)
  %44 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 1 dereferenceable(1) %4)
  %45 = load i8, ptr %4, align 1, !tbaa !82
  %46 = icmp eq i8 %45, 93
  br i1 %46, label %56, label %47

47:                                               ; preds = %41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %6, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %6)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %6, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %6, ptr noundef nonnull @.str.16, i32 noundef 1699, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.18)
          to label %48 unwind label %54

48:                                               ; preds = %47
  %49 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %49, ptr noundef nonnull align 8 dereferenceable(60) %6)
          to label %50 unwind label %52

50:                                               ; preds = %48
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %49, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %49, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %51 unwind label %54

51:                                               ; preds = %50
  unreachable

52:                                               ; preds = %48
  %53 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %49) #17
  br label %93

54:                                               ; preds = %50, %47
  %55 = landingpad { ptr, i32 }
          cleanup
  br label %93

56:                                               ; preds = %41
  %57 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 1 dereferenceable(1) %4)
  %58 = load i8, ptr %4, align 1, !tbaa !82
  %59 = icmp eq i8 %58, 91
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %7, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %7)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull @.str.16, i32 noundef 1701, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.18)
          to label %61 unwind label %67

61:                                               ; preds = %60
  %62 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %62, ptr noundef nonnull align 8 dereferenceable(60) %7)
          to label %63 unwind label %65

63:                                               ; preds = %61
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %62, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %62, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %64 unwind label %67

64:                                               ; preds = %63
  unreachable

65:                                               ; preds = %61
  %66 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %62) #17
  br label %93

67:                                               ; preds = %63, %60
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %93

69:                                               ; preds = %56
  %70 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !125
  %72 = icmp eq ptr %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  call void @_ZdaPv(ptr noundef nonnull %71) #19
  br label %74

74:                                               ; preds = %73, %69
  %75 = load i32, ptr %42, align 8, !tbaa !127
  %76 = zext i32 %75 to i64
  %77 = shl nuw nsw i64 %76, 4
  %78 = call noalias noundef nonnull ptr @_Znam(i64 noundef %77) #20
  store ptr %78, ptr %70, align 8, !tbaa !125
  %79 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi4readEPcl(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull %78, i64 noundef %77)
  %80 = call noundef nonnull align 8 dereferenceable(16) ptr @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 1 dereferenceable(1) %4)
  %81 = load i8, ptr %4, align 1, !tbaa !82
  %82 = icmp eq i8 %81, 93
  br i1 %82, label %92, label %83

83:                                               ; preds = %74
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %8, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %8)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !5
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %8, ptr noundef nonnull @.str.16, i32 noundef 1712, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.18)
          to label %84 unwind label %90

84:                                               ; preds = %83
  %85 = call ptr @__cxa_allocate_exception(i64 64) #17
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %85, ptr noundef nonnull align 8 dereferenceable(60) %8)
          to label %86 unwind label %88

86:                                               ; preds = %84
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %85, align 8, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %85, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #21
          to label %87 unwind label %90

87:                                               ; preds = %86
  unreachable

88:                                               ; preds = %84
  %89 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %85) #17
  br label %93

90:                                               ; preds = %86, %83
  %91 = landingpad { ptr, i32 }
          cleanup
  br label %93

92:                                               ; preds = %74
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #17
  ret void

93:                                               ; preds = %90, %88, %67, %65, %54, %52, %39, %37
  %94 = phi ptr [ %5, %37 ], [ %5, %39 ], [ %6, %52 ], [ %6, %54 ], [ %7, %65 ], [ %7, %67 ], [ %8, %88 ], [ %8, %90 ]
  %95 = phi { ptr, i32 } [ %38, %37 ], [ %40, %39 ], [ %53, %52 ], [ %55, %54 ], [ %66, %65 ], [ %68, %67 ], [ %89, %88 ], [ %91, %90 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %94) #17
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #17
  br label %96

96:                                               ; preds = %93, %26
  %97 = phi { ptr, i32 } [ %95, %93 ], [ %27, %26 ]
  resume { ptr, i32 } %97
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexC2Eii(ptr noundef nonnull align 8 dereferenceable(68) %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 comdat($_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexC5Eii) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeE15ExcInvalidIndexE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcInvalidIndex", ptr %0, i64 0, i32 1
  store i32 %1, ptr %4, align 4, !tbaa !132
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcInvalidIndex", ptr %0, i64 0, i32 2
  store i32 %2, ptr %5, align 8, !tbaa !134
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexD2Ev(ptr noundef nonnull align 8 dereferenceable(68) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexD5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexD0Ev(ptr noundef nonnull align 8 dereferenceable(68) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIeE15ExcInvalidIndexD5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE15ExcInvalidIndex10print_infoERSo(ptr noundef nonnull align 8 dereferenceable(68) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.23, i64 noundef 22)
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcInvalidIndex", ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !132
  %7 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %6)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3)
  store i8 44, ptr %3, align 1, !tbaa !82
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %7, i64 %10
  %12 = getelementptr inbounds %"class.std::ios_base", ptr %11, i64 0, i32 2
  %13 = load i64, ptr %12, align 8, !tbaa !86
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %7, ptr noundef nonnull %3, i64 noundef 1)
  br label %19

17:                                               ; preds = %2
  %18 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %7, i8 noundef signext 44)
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi ptr [ %16, %15 ], [ %7, %17 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3)
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcInvalidIndex", ptr %0, i64 0, i32 2
  %22 = load i32, ptr %21, align 8, !tbaa !134
  %23 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %20, i32 noundef %22)
  %24 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %23, ptr noundef nonnull @.str.24, i64 noundef 17)
  %25 = load ptr, ptr %23, align 8, !tbaa !5
  %26 = getelementptr i8, ptr %25, i64 -24
  %27 = load i64, ptr %26, align 8
  %28 = getelementptr inbounds i8, ptr %23, i64 %27
  %29 = getelementptr inbounds %"class.std::basic_ios", ptr %28, i64 0, i32 5
  %30 = load ptr, ptr %29, align 8, !tbaa !77
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %19
  call void @_ZSt16__throw_bad_castv() #21
  unreachable

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.std::ctype", ptr %30, i64 0, i32 8
  %35 = load i8, ptr %34, align 8, !tbaa !79
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::ctype", ptr %30, i64 0, i32 9, i64 10
  %39 = load i8, ptr %38, align 1, !tbaa !82
  br label %45

40:                                               ; preds = %33
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %30)
  %41 = load ptr, ptr %30, align 8, !tbaa !5
  %42 = getelementptr inbounds ptr, ptr %41, i64 6
  %43 = load ptr, ptr %42, align 8
  %44 = call noundef signext i8 %43(ptr noundef nonnull align 8 dereferenceable(570) %30, i8 noundef signext 10)
  br label %45

45:                                               ; preds = %37, %40
  %46 = phi i8 [ %39, %37 ], [ %44, %40 ]
  %47 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %23, i8 noundef signext %46)
  %48 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %47)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1C2Ei(ptr noundef nonnull align 8 dereferenceable(64) %0, i32 noundef %1) unnamed_addr #0 comdat($_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1C5Ei) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeE16ExcInvalidIndex1E, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcInvalidIndex1", ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !149
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1D2Ev(ptr noundef nonnull align 8 dereferenceable(64) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1D5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1D0Ev(ptr noundef nonnull align 8 dereferenceable(64) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIeE16ExcInvalidIndex1D5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE16ExcInvalidIndex110print_infoERSo(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) unnamed_addr #0 comdat align 2 {
  %3 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.25, i64 noundef 10)
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcInvalidIndex1", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !149
  %6 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %5)
  %7 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %6, ptr noundef nonnull @.str.26, i64 noundef 29)
  %8 = load ptr, ptr %6, align 8, !tbaa !5
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %6, i64 %10
  %12 = getelementptr inbounds %"class.std::basic_ios", ptr %11, i64 0, i32 5
  %13 = load ptr, ptr %12, align 8, !tbaa !77
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::ctype", ptr %13, i64 0, i32 8
  %18 = load i8, ptr %17, align 8, !tbaa !79
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::ctype", ptr %13, i64 0, i32 9, i64 10
  %22 = load i8, ptr %21, align 1, !tbaa !82
  br label %28

23:                                               ; preds = %16
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %13)
  %24 = load ptr, ptr %13, align 8, !tbaa !5
  %25 = getelementptr inbounds ptr, ptr %24, i64 6
  %26 = load ptr, ptr %25, align 8
  %27 = tail call noundef signext i8 %26(ptr noundef nonnull align 8 dereferenceable(570) %13, i8 noundef signext 10)
  br label %28

28:                                               ; preds = %20, %23
  %29 = phi i8 [ %22, %20 ], [ %27, %23 ]
  %30 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %6, i8 noundef signext %29)
  %31 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %30)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeC2Eii(ptr noundef nonnull align 8 dereferenceable(68) %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 comdat($_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeC5Eii) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii12SparseMatrixIeE16ExcIteratorRangeE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcIteratorRange", ptr %0, i64 0, i32 1
  store i32 %1, ptr %4, align 4, !tbaa !151
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcIteratorRange", ptr %0, i64 0, i32 2
  store i32 %2, ptr %5, align 8, !tbaa !153
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeD2Ev(ptr noundef nonnull align 8 dereferenceable(68) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeD5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeD0Ev(ptr noundef nonnull align 8 dereferenceable(68) %0) unnamed_addr #6 comdat($_ZN6dealii12SparseMatrixIeE16ExcIteratorRangeD5Ev) align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE16ExcIteratorRange10print_infoERSo(ptr noundef nonnull align 8 dereferenceable(68) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) unnamed_addr #0 comdat align 2 {
  %3 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.27, i64 noundef 32)
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcIteratorRange", ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !151
  %6 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %5)
  %7 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %6, ptr noundef nonnull @.str.28, i64 noundef 44)
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix<long double>::ExcIteratorRange", ptr %0, i64 0, i32 2
  %9 = load i32, ptr %8, align 8, !tbaa !153
  %10 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %6, i32 noundef %9)
  %11 = load ptr, ptr %10, align 8, !tbaa !5
  %12 = getelementptr i8, ptr %11, i64 -24
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds i8, ptr %10, i64 %13
  %15 = getelementptr inbounds %"class.std::basic_ios", ptr %14, i64 0, i32 5
  %16 = load ptr, ptr %15, align 8, !tbaa !77
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::ctype", ptr %16, i64 0, i32 8
  %21 = load i8, ptr %20, align 8, !tbaa !79
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::ctype", ptr %16, i64 0, i32 9, i64 10
  %25 = load i8, ptr %24, align 1, !tbaa !82
  br label %31

26:                                               ; preds = %19
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %16)
  %27 = load ptr, ptr %16, align 8, !tbaa !5
  %28 = getelementptr inbounds ptr, ptr %27, i64 6
  %29 = load ptr, ptr %28, align 8
  %30 = tail call noundef signext i8 %29(ptr noundef nonnull align 8 dereferenceable(570) %16, i8 noundef signext 10)
  br label %31

31:                                               ; preds = %23, %26
  %32 = phi i8 [ %25, %23 ], [ %30, %26 ]
  %33 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %10, i8 noundef signext %32)
  %34 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %33)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIdE9copy_fromIdEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !32
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !33
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i64, ptr %8, i64 %11
  %13 = load i64, ptr %12, align 8, !tbaa !34
  %14 = load i64, ptr %8, align 8, !tbaa !34
  %15 = sub i64 %13, %14
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !13
  %18 = shl i64 %15, 3
  %19 = and i64 %18, 34359738360
  %20 = icmp ugt i64 %19, 8
  br i1 %20, label %21, label %22, !prof !154

21:                                               ; preds = %2
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %17, ptr align 8 %4, i64 %19, i1 false)
  br label %26

22:                                               ; preds = %2
  %23 = icmp eq i64 %19, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = load double, ptr %4, align 8, !tbaa !30
  store double %25, ptr %17, align 8, !tbaa !30
  br label %26

26:                                               ; preds = %21, %22, %24
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE9copy_fromIdEEvRKNS_10FullMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(92) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = icmp eq ptr %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %6
  %21 = shl nuw nsw i64 %18, 3
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %4, i8 0, i64 %21, i1 false), !tbaa !30
  br label %22

22:                                               ; preds = %2, %6, %20
  %23 = getelementptr inbounds %"class.dealii::TableBase", ptr %1, i64 0, i32 3
  %24 = load i32, ptr %23, align 4, !tbaa !47
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.dealii::TableBase", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %28 = getelementptr inbounds %"class.dealii::TableBase", ptr %1, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %30 = load i32, ptr %27, align 8, !tbaa !47
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %26, %40
  %33 = phi i32 [ %41, %40 ], [ %24, %26 ]
  %34 = phi i32 [ %42, %40 ], [ %30, %26 ]
  %35 = phi i32 [ %43, %40 ], [ 0, %26 ]
  %36 = icmp eq i32 %34, 0
  br i1 %36, label %40, label %45

37:                                               ; preds = %40, %26, %22
  ret void

38:                                               ; preds = %63
  %39 = load i32, ptr %23, align 4, !tbaa !47
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i32 [ %39, %38 ], [ %33, %32 ]
  %42 = phi i32 [ %65, %38 ], [ 0, %32 ]
  %43 = add nuw i32 %35, 1
  %44 = icmp ult i32 %43, %41
  br i1 %44, label %32, label %37, !llvm.loop !155

45:                                               ; preds = %32, %63
  %46 = phi i32 [ %65, %63 ], [ %34, %32 ]
  %47 = phi i32 [ %64, %63 ], [ 0, %32 ]
  %48 = load ptr, ptr %28, align 8, !tbaa !157
  %49 = mul i32 %46, %35
  %50 = add i32 %49, %47
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds double, ptr %48, i64 %51
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = fcmp une double %53, 0.000000e+00
  br i1 %54, label %55, label %63

55:                                               ; preds = %45
  %56 = load ptr, ptr %29, align 8, !tbaa !8
  %57 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %56, i32 noundef %35, i32 noundef %47)
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = load ptr, ptr %3, align 8, !tbaa !13
  %61 = zext i32 %57 to i64
  %62 = getelementptr inbounds double, ptr %60, i64 %61
  store double %53, ptr %62, align 8, !tbaa !30
  br label %63

63:                                               ; preds = %59, %55, %45
  %64 = add nuw i32 %47, 1
  %65 = load i32, ptr %27, align 8, !tbaa !47
  %66 = icmp ult i32 %64, %65
  br i1 %66, label %45, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3addIdEEvdRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, double noundef %1, ptr noundef nonnull align 8 dereferenceable(36) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !13
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, ptr %9, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = load i64, ptr %9, align 8, !tbaa !34
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds double, ptr %5, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %88, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %2, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !13
  %23 = add nuw nsw i64 %17, 2305843009213693951
  %24 = and i64 %23, 2305843009213693951
  %25 = add nuw nsw i64 %24, 1
  %26 = icmp ult i64 %24, 15
  br i1 %26, label %76, label %27

27:                                               ; preds = %20
  %28 = shl nuw nsw i64 %17, 3
  %29 = getelementptr i8, ptr %5, i64 %28
  %30 = getelementptr i8, ptr %22, i64 %28
  %31 = icmp ult ptr %5, %30
  %32 = icmp ult ptr %22, %29
  %33 = and i1 %31, %32
  br i1 %33, label %76, label %34

34:                                               ; preds = %27
  %35 = and i64 %25, 4611686018427387888
  %36 = shl i64 %35, 3
  %37 = getelementptr i8, ptr %5, i64 %36
  %38 = shl i64 %35, 3
  %39 = getelementptr i8, ptr %22, i64 %38
  %40 = insertelement <4 x double> poison, double %1, i64 0
  %41 = shufflevector <4 x double> %40, <4 x double> poison, <4 x i32> zeroinitializer
  %42 = insertelement <4 x double> poison, double %1, i64 0
  %43 = shufflevector <4 x double> %42, <4 x double> poison, <4 x i32> zeroinitializer
  %44 = insertelement <4 x double> poison, double %1, i64 0
  %45 = shufflevector <4 x double> %44, <4 x double> poison, <4 x i32> zeroinitializer
  %46 = insertelement <4 x double> poison, double %1, i64 0
  %47 = shufflevector <4 x double> %46, <4 x double> poison, <4 x i32> zeroinitializer
  br label %48

48:                                               ; preds = %48, %34
  %49 = phi i64 [ 0, %34 ], [ %72, %48 ]
  %50 = shl i64 %49, 3
  %51 = getelementptr i8, ptr %5, i64 %50
  %52 = shl i64 %49, 3
  %53 = getelementptr i8, ptr %22, i64 %52
  %54 = load <4 x double>, ptr %53, align 8, !tbaa !30, !alias.scope !161
  %55 = getelementptr double, ptr %53, i64 4
  %56 = load <4 x double>, ptr %55, align 8, !tbaa !30, !alias.scope !161
  %57 = getelementptr double, ptr %53, i64 8
  %58 = load <4 x double>, ptr %57, align 8, !tbaa !30, !alias.scope !161
  %59 = getelementptr double, ptr %53, i64 12
  %60 = load <4 x double>, ptr %59, align 8, !tbaa !30, !alias.scope !161
  %61 = load <4 x double>, ptr %51, align 8, !tbaa !30, !alias.scope !164, !noalias !161
  %62 = getelementptr double, ptr %51, i64 4
  %63 = load <4 x double>, ptr %62, align 8, !tbaa !30, !alias.scope !164, !noalias !161
  %64 = getelementptr double, ptr %51, i64 8
  %65 = load <4 x double>, ptr %64, align 8, !tbaa !30, !alias.scope !164, !noalias !161
  %66 = getelementptr double, ptr %51, i64 12
  %67 = load <4 x double>, ptr %66, align 8, !tbaa !30, !alias.scope !164, !noalias !161
  %68 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %41, <4 x double> %54, <4 x double> %61)
  %69 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %43, <4 x double> %56, <4 x double> %63)
  %70 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %45, <4 x double> %58, <4 x double> %65)
  %71 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %47, <4 x double> %60, <4 x double> %67)
  store <4 x double> %68, ptr %51, align 8, !tbaa !30, !alias.scope !164, !noalias !161
  store <4 x double> %69, ptr %62, align 8, !tbaa !30, !alias.scope !164, !noalias !161
  store <4 x double> %70, ptr %64, align 8, !tbaa !30, !alias.scope !164, !noalias !161
  store <4 x double> %71, ptr %66, align 8, !tbaa !30, !alias.scope !164, !noalias !161
  %72 = add nuw i64 %49, 16
  %73 = icmp eq i64 %72, %35
  br i1 %73, label %74, label %48, !llvm.loop !166

74:                                               ; preds = %48
  %75 = icmp eq i64 %25, %35
  br i1 %75, label %88, label %76

76:                                               ; preds = %27, %20, %74
  %77 = phi ptr [ %5, %27 ], [ %5, %20 ], [ %37, %74 ]
  %78 = phi ptr [ %22, %27 ], [ %22, %20 ], [ %39, %74 ]
  br label %79

79:                                               ; preds = %76, %79
  %80 = phi ptr [ %84, %79 ], [ %77, %76 ]
  %81 = phi ptr [ %82, %79 ], [ %78, %76 ]
  %82 = getelementptr inbounds double, ptr %81, i64 1
  %83 = load double, ptr %81, align 8, !tbaa !30
  %84 = getelementptr inbounds double, ptr %80, i64 1
  %85 = load double, ptr %80, align 8, !tbaa !30
  %86 = tail call double @llvm.fmuladd.f64(double %1, double %83, double %85)
  store double %86, ptr %80, align 8, !tbaa !30
  %87 = icmp eq ptr %84, %18
  br i1 %87, label %88, label %79, !llvm.loop !167

88:                                               ; preds = %79, %74, %3
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #8

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5, i1 noundef zeroext %6) local_unnamed_addr #0 comdat align 2 {
  br i1 %6, label %11, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !8
  br label %255

11:                                               ; preds = %7
  %12 = shl i32 %2, 3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = add i32 %1, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i64, ptr %16, i64 %18
  %20 = load i64, ptr %19, align 8, !tbaa !34
  %21 = zext i32 %1 to i64
  %22 = getelementptr inbounds i64, ptr %16, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !34
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32
  %26 = icmp ugt i32 %12, %25
  br i1 %26, label %27, label %255

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 11
  %29 = load i8, ptr %28, align 1, !tbaa !43, !range !44, !noundef !45
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = getelementptr inbounds i32, ptr %32, i64 %23
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !13
  %36 = getelementptr inbounds double, ptr %35, i64 %23
  br i1 %30, label %209, label %37

37:                                               ; preds = %27
  %38 = ptrtoint ptr %3 to i64
  %39 = icmp eq i32 %2, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %37
  %41 = zext i32 %2 to i64
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi ptr [ %3, %40 ], [ %53, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %52, %42 ]
  %45 = lshr i64 %44, 1
  %46 = getelementptr inbounds i32, ptr %43, i64 %45
  %47 = load i32, ptr %46, align 4, !tbaa !47
  %48 = icmp ult i32 %47, %1
  %49 = getelementptr inbounds i32, ptr %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add nsw i64 %44, %50
  %52 = select i1 %48, i64 %51, i64 %45
  %53 = select i1 %48, ptr %49, ptr %43
  %54 = icmp sgt i64 %52, 0
  br i1 %54, label %42, label %55

55:                                               ; preds = %42
  %56 = ptrtoint ptr %53 to i64
  br label %57

57:                                               ; preds = %55, %37
  %58 = phi i64 [ %56, %55 ], [ %38, %37 ]
  %59 = phi ptr [ %53, %55 ], [ %3, %37 ]
  %60 = sub i64 %58, %38
  %61 = ashr exact i64 %60, 2
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, %2
  br i1 %63, label %73, label %64

64:                                               ; preds = %57
  %65 = load i32, ptr %59, align 4, !tbaa !47
  %66 = icmp eq i32 %65, %1
  br i1 %66, label %67, label %73

67:                                               ; preds = %64
  %68 = getelementptr inbounds double, ptr %4, i64 %61
  %69 = load double, ptr %68, align 8, !tbaa !30
  %70 = load double, ptr %36, align 8, !tbaa !30
  %71 = fadd double %69, %70
  store double %71, ptr %36, align 8, !tbaa !30
  %72 = add i32 %62, 1
  br label %73

73:                                               ; preds = %67, %64, %57
  %74 = phi i32 [ %72, %67 ], [ %62, %64 ], [ %2, %57 ]
  %75 = icmp eq i32 %62, 0
  br i1 %75, label %109, label %76

76:                                               ; preds = %73
  %77 = and i64 %61, 4294967295
  %78 = and i64 %61, 1
  %79 = icmp eq i64 %77, 1
  br i1 %79, label %88, label %80

80:                                               ; preds = %76
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %164, %80
  %83 = phi i64 [ 0, %80 ], [ %170, %164 ]
  %84 = phi i32 [ 1, %80 ], [ %158, %164 ]
  %85 = phi i64 [ 0, %80 ], [ %171, %164 ]
  %86 = getelementptr inbounds i32, ptr %3, i64 %83
  %87 = load i32, ptr %86, align 4, !tbaa !47
  br label %141

88:                                               ; preds = %164, %76
  %89 = phi i32 [ undef, %76 ], [ %158, %164 ]
  %90 = phi i64 [ 0, %76 ], [ %170, %164 ]
  %91 = phi i32 [ 1, %76 ], [ %158, %164 ]
  %92 = icmp eq i64 %78, 0
  br i1 %92, label %109, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds i32, ptr %3, i64 %90
  %95 = load i32, ptr %94, align 4, !tbaa !47
  br label %96

96:                                               ; preds = %96, %93
  %97 = phi i32 [ %102, %96 ], [ %91, %93 ]
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %33, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ult i32 %100, %95
  %102 = add i32 %97, 1
  br i1 %101, label %96, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds double, ptr %4, i64 %90
  %105 = load double, ptr %104, align 8, !tbaa !30
  %106 = getelementptr inbounds double, ptr %36, i64 %98
  %107 = load double, ptr %106, align 8, !tbaa !30
  %108 = fadd double %105, %107
  store double %108, ptr %106, align 8, !tbaa !30
  br label %109

109:                                              ; preds = %103, %88, %73
  %110 = phi i32 [ 1, %73 ], [ %89, %88 ], [ %97, %103 ]
  %111 = icmp ult i32 %74, %2
  br i1 %111, label %112, label %334

112:                                              ; preds = %109
  %113 = zext i32 %74 to i64
  %114 = zext i32 %2 to i64
  %115 = sub nsw i64 %114, %113
  %116 = xor i64 %113, -1
  %117 = and i64 %115, 1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %136, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds i32, ptr %3, i64 %113
  %121 = load i32, ptr %120, align 4, !tbaa !47
  br label %122

122:                                              ; preds = %122, %119
  %123 = phi i32 [ %128, %122 ], [ %110, %119 ]
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds i32, ptr %33, i64 %124
  %126 = load i32, ptr %125, align 4, !tbaa !47
  %127 = icmp ult i32 %126, %121
  %128 = add i32 %123, 1
  br i1 %127, label %122, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds double, ptr %4, i64 %113
  %131 = load double, ptr %130, align 8, !tbaa !30
  %132 = getelementptr inbounds double, ptr %36, i64 %124
  %133 = load double, ptr %132, align 8, !tbaa !30
  %134 = fadd double %131, %133
  store double %134, ptr %132, align 8, !tbaa !30
  %135 = add nuw nsw i64 %113, 1
  br label %136

136:                                              ; preds = %129, %112
  %137 = phi i64 [ %113, %112 ], [ %135, %129 ]
  %138 = phi i32 [ %110, %112 ], [ %123, %129 ]
  %139 = sub nsw i64 0, %114
  %140 = icmp eq i64 %116, %139
  br i1 %140, label %334, label %173

141:                                              ; preds = %141, %82
  %142 = phi i32 [ %147, %141 ], [ %84, %82 ]
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds i32, ptr %33, i64 %143
  %145 = load i32, ptr %144, align 4, !tbaa !47
  %146 = icmp ult i32 %145, %87
  %147 = add i32 %142, 1
  br i1 %146, label %141, label %148

148:                                              ; preds = %141
  %149 = getelementptr inbounds double, ptr %4, i64 %83
  %150 = load double, ptr %149, align 8, !tbaa !30
  %151 = getelementptr inbounds double, ptr %36, i64 %143
  %152 = load double, ptr %151, align 8, !tbaa !30
  %153 = fadd double %150, %152
  store double %153, ptr %151, align 8, !tbaa !30
  %154 = or i64 %83, 1
  %155 = getelementptr inbounds i32, ptr %3, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !47
  br label %157

157:                                              ; preds = %157, %148
  %158 = phi i32 [ %163, %157 ], [ %142, %148 ]
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds i32, ptr %33, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !47
  %162 = icmp ult i32 %161, %156
  %163 = add i32 %158, 1
  br i1 %162, label %157, label %164

164:                                              ; preds = %157
  %165 = getelementptr inbounds double, ptr %4, i64 %154
  %166 = load double, ptr %165, align 8, !tbaa !30
  %167 = getelementptr inbounds double, ptr %36, i64 %159
  %168 = load double, ptr %167, align 8, !tbaa !30
  %169 = fadd double %166, %168
  store double %169, ptr %167, align 8, !tbaa !30
  %170 = add nuw nsw i64 %83, 2
  %171 = add i64 %85, 2
  %172 = icmp eq i64 %171, %81
  br i1 %172, label %88, label %82

173:                                              ; preds = %136, %201
  %174 = phi i64 [ %207, %201 ], [ %137, %136 ]
  %175 = phi i32 [ %195, %201 ], [ %138, %136 ]
  %176 = getelementptr inbounds i32, ptr %3, i64 %174
  %177 = load i32, ptr %176, align 4, !tbaa !47
  br label %178

178:                                              ; preds = %178, %173
  %179 = phi i32 [ %184, %178 ], [ %175, %173 ]
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds i32, ptr %33, i64 %180
  %182 = load i32, ptr %181, align 4, !tbaa !47
  %183 = icmp ult i32 %182, %177
  %184 = add i32 %179, 1
  br i1 %183, label %178, label %185

185:                                              ; preds = %178
  %186 = getelementptr inbounds double, ptr %4, i64 %174
  %187 = load double, ptr %186, align 8, !tbaa !30
  %188 = getelementptr inbounds double, ptr %36, i64 %180
  %189 = load double, ptr %188, align 8, !tbaa !30
  %190 = fadd double %187, %189
  store double %190, ptr %188, align 8, !tbaa !30
  %191 = add nuw nsw i64 %174, 1
  %192 = getelementptr inbounds i32, ptr %3, i64 %191
  %193 = load i32, ptr %192, align 4, !tbaa !47
  br label %194

194:                                              ; preds = %194, %185
  %195 = phi i32 [ %200, %194 ], [ %179, %185 ]
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds i32, ptr %33, i64 %196
  %198 = load i32, ptr %197, align 4, !tbaa !47
  %199 = icmp ult i32 %198, %193
  %200 = add i32 %195, 1
  br i1 %199, label %194, label %201

201:                                              ; preds = %194
  %202 = getelementptr inbounds double, ptr %4, i64 %191
  %203 = load double, ptr %202, align 8, !tbaa !30
  %204 = getelementptr inbounds double, ptr %36, i64 %196
  %205 = load double, ptr %204, align 8, !tbaa !30
  %206 = fadd double %203, %205
  store double %206, ptr %204, align 8, !tbaa !30
  %207 = add nuw nsw i64 %174, 2
  %208 = icmp eq i64 %207, %114
  br i1 %208, label %334, label %173

209:                                              ; preds = %27
  %210 = icmp eq i32 %2, 0
  br i1 %210, label %334, label %211

211:                                              ; preds = %209
  %212 = zext i32 %2 to i64
  %213 = and i64 %212, 1
  %214 = icmp eq i32 %2, 1
  br i1 %214, label %314, label %215

215:                                              ; preds = %211
  %216 = and i64 %212, 4294967294
  br label %217

217:                                              ; preds = %246, %215
  %218 = phi i64 [ 0, %215 ], [ %252, %246 ]
  %219 = phi i32 [ 0, %215 ], [ %240, %246 ]
  %220 = phi i64 [ 0, %215 ], [ %253, %246 ]
  %221 = getelementptr inbounds i32, ptr %3, i64 %218
  %222 = load i32, ptr %221, align 4, !tbaa !47
  br label %223

223:                                              ; preds = %223, %217
  %224 = phi i32 [ %229, %223 ], [ %219, %217 ]
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds i32, ptr %33, i64 %225
  %227 = load i32, ptr %226, align 4, !tbaa !47
  %228 = icmp ult i32 %227, %222
  %229 = add i32 %224, 1
  br i1 %228, label %223, label %230

230:                                              ; preds = %223
  %231 = getelementptr inbounds double, ptr %4, i64 %218
  %232 = load double, ptr %231, align 8, !tbaa !30
  %233 = getelementptr inbounds double, ptr %36, i64 %225
  %234 = load double, ptr %233, align 8, !tbaa !30
  %235 = fadd double %232, %234
  store double %235, ptr %233, align 8, !tbaa !30
  %236 = or i64 %218, 1
  %237 = getelementptr inbounds i32, ptr %3, i64 %236
  %238 = load i32, ptr %237, align 4, !tbaa !47
  br label %239

239:                                              ; preds = %239, %230
  %240 = phi i32 [ %245, %239 ], [ %224, %230 ]
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds i32, ptr %33, i64 %241
  %243 = load i32, ptr %242, align 4, !tbaa !47
  %244 = icmp ult i32 %243, %238
  %245 = add i32 %240, 1
  br i1 %244, label %239, label %246

246:                                              ; preds = %239
  %247 = getelementptr inbounds double, ptr %4, i64 %236
  %248 = load double, ptr %247, align 8, !tbaa !30
  %249 = getelementptr inbounds double, ptr %36, i64 %241
  %250 = load double, ptr %249, align 8, !tbaa !30
  %251 = fadd double %248, %250
  store double %251, ptr %249, align 8, !tbaa !30
  %252 = add nuw nsw i64 %218, 2
  %253 = add i64 %220, 2
  %254 = icmp eq i64 %253, %216
  br i1 %254, label %314, label %217

255:                                              ; preds = %8, %11
  %256 = phi ptr [ %10, %8 ], [ %14, %11 ]
  %257 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %258 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %256, i64 0, i32 9
  %259 = load ptr, ptr %258, align 8, !tbaa !46
  %260 = icmp eq i32 %2, 0
  br i1 %260, label %334, label %261

261:                                              ; preds = %255
  %262 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %256, i64 0, i32 8
  %263 = load ptr, ptr %262, align 8, !tbaa !32
  %264 = zext i32 %1 to i64
  %265 = getelementptr inbounds i64, ptr %263, i64 %264
  %266 = load i64, ptr %265, align 8, !tbaa !34
  %267 = trunc i64 %266 to i32
  %268 = add i32 %1, 1
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %271 = zext i32 %2 to i64
  br label %272

272:                                              ; preds = %261, %310
  %273 = phi i64 [ 0, %261 ], [ %312, %310 ]
  %274 = phi i32 [ %267, %261 ], [ %311, %310 ]
  %275 = getelementptr inbounds double, ptr %4, i64 %273
  %276 = load double, ptr %275, align 8, !tbaa !30
  %277 = fcmp oeq double %276, 0.000000e+00
  %278 = and i1 %277, %5
  br i1 %278, label %310, label %279

279:                                              ; preds = %272
  %280 = zext i32 %274 to i64
  %281 = load ptr, ptr %257, align 8, !tbaa !8
  %282 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %281, i64 0, i32 8
  %283 = load ptr, ptr %282, align 8, !tbaa !32
  %284 = getelementptr inbounds i64, ptr %283, i64 %269
  %285 = load i64, ptr %284, align 8, !tbaa !34
  %286 = icmp eq i64 %285, %280
  br i1 %286, label %287, label %290

287:                                              ; preds = %279
  %288 = getelementptr inbounds i32, ptr %3, i64 %273
  %289 = load i32, ptr %288, align 4, !tbaa !47
  br label %296

290:                                              ; preds = %279
  %291 = getelementptr inbounds i32, ptr %259, i64 %280
  %292 = load i32, ptr %291, align 4, !tbaa !47
  %293 = getelementptr inbounds i32, ptr %3, i64 %273
  %294 = load i32, ptr %293, align 4, !tbaa !47
  %295 = icmp eq i32 %292, %294
  br i1 %295, label %302, label %296

296:                                              ; preds = %287, %290
  %297 = phi i32 [ %289, %287 ], [ %294, %290 ]
  %298 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %281, i32 noundef %1, i32 noundef %297)
  %299 = icmp eq i32 %298, -1
  br i1 %299, label %310, label %300

300:                                              ; preds = %296
  %301 = zext i32 %298 to i64
  br label %302

302:                                              ; preds = %300, %290
  %303 = phi i64 [ %301, %300 ], [ %280, %290 ]
  %304 = phi i32 [ %298, %300 ], [ %274, %290 ]
  %305 = load ptr, ptr %270, align 8, !tbaa !13
  %306 = getelementptr inbounds double, ptr %305, i64 %303
  %307 = load double, ptr %306, align 8, !tbaa !30
  %308 = fadd double %276, %307
  store double %308, ptr %306, align 8, !tbaa !30
  %309 = add i32 %304, 1
  br label %310

310:                                              ; preds = %296, %272, %302
  %311 = phi i32 [ %309, %302 ], [ %274, %272 ], [ -1, %296 ]
  %312 = add nuw nsw i64 %273, 1
  %313 = icmp eq i64 %312, %271
  br i1 %313, label %334, label %272

314:                                              ; preds = %246, %211
  %315 = phi i64 [ 0, %211 ], [ %252, %246 ]
  %316 = phi i32 [ 0, %211 ], [ %240, %246 ]
  %317 = icmp eq i64 %213, 0
  br i1 %317, label %334, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds i32, ptr %3, i64 %315
  %320 = load i32, ptr %319, align 4, !tbaa !47
  br label %321

321:                                              ; preds = %321, %318
  %322 = phi i32 [ %327, %321 ], [ %316, %318 ]
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds i32, ptr %33, i64 %323
  %325 = load i32, ptr %324, align 4, !tbaa !47
  %326 = icmp ult i32 %325, %320
  %327 = add i32 %322, 1
  br i1 %326, label %321, label %328

328:                                              ; preds = %321
  %329 = getelementptr inbounds double, ptr %4, i64 %315
  %330 = load double, ptr %329, align 8, !tbaa !30
  %331 = getelementptr inbounds double, ptr %36, i64 %323
  %332 = load double, ptr %331, align 8, !tbaa !30
  %333 = fadd double %330, %332
  store double %333, ptr %331, align 8, !tbaa !30
  br label %334

334:                                              ; preds = %310, %136, %201, %328, %314, %255, %109, %209
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3setIdEEvjjPKjPKT_b(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 9
  %10 = load ptr, ptr %9, align 8, !tbaa !46
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %60, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = zext i32 %1 to i64
  %16 = getelementptr inbounds i64, ptr %14, i64 %15
  %17 = load i64, ptr %16, align 8, !tbaa !34
  %18 = trunc i64 %17 to i32
  %19 = add i32 %1, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %22 = zext i32 %2 to i64
  br i1 %5, label %61, label %23

23:                                               ; preds = %12, %56
  %24 = phi i64 [ %58, %56 ], [ 0, %12 ]
  %25 = phi i32 [ %57, %56 ], [ %18, %12 ]
  %26 = getelementptr inbounds double, ptr %4, i64 %24
  %27 = load double, ptr %26, align 8, !tbaa !30
  %28 = zext i32 %25 to i64
  %29 = load ptr, ptr %7, align 8, !tbaa !8
  %30 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %29, i64 0, i32 8
  %31 = load ptr, ptr %30, align 8, !tbaa !32
  %32 = getelementptr inbounds i64, ptr %31, i64 %20
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = icmp eq i64 %33, %28
  br i1 %34, label %35, label %38

35:                                               ; preds = %23
  %36 = getelementptr inbounds i32, ptr %3, i64 %24
  %37 = load i32, ptr %36, align 4, !tbaa !47
  br label %44

38:                                               ; preds = %23
  %39 = getelementptr inbounds i32, ptr %10, i64 %28
  %40 = load i32, ptr %39, align 4, !tbaa !47
  %41 = getelementptr inbounds i32, ptr %3, i64 %24
  %42 = load i32, ptr %41, align 4, !tbaa !47
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %50, label %44

44:                                               ; preds = %35, %38
  %45 = phi i32 [ %37, %35 ], [ %42, %38 ]
  %46 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %29, i32 noundef %1, i32 noundef %45)
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %56, label %48

48:                                               ; preds = %44
  %49 = zext i32 %46 to i64
  br label %50

50:                                               ; preds = %48, %38
  %51 = phi i64 [ %49, %48 ], [ %28, %38 ]
  %52 = phi i32 [ %46, %48 ], [ %25, %38 ]
  %53 = load ptr, ptr %21, align 8, !tbaa !13
  %54 = getelementptr inbounds double, ptr %53, i64 %51
  store double %27, ptr %54, align 8, !tbaa !30
  %55 = add i32 %52, 1
  br label %56

56:                                               ; preds = %50, %44
  %57 = phi i32 [ %55, %50 ], [ -1, %44 ]
  %58 = add nuw nsw i64 %24, 1
  %59 = icmp eq i64 %58, %22
  br i1 %59, label %60, label %23

60:                                               ; preds = %56, %96, %6
  ret void

61:                                               ; preds = %12, %96
  %62 = phi i64 [ %98, %96 ], [ 0, %12 ]
  %63 = phi i32 [ %97, %96 ], [ %18, %12 ]
  %64 = getelementptr inbounds double, ptr %4, i64 %62
  %65 = load double, ptr %64, align 8, !tbaa !30
  %66 = fcmp oeq double %65, 0.000000e+00
  br i1 %66, label %96, label %67

67:                                               ; preds = %61
  %68 = zext i32 %63 to i64
  %69 = load ptr, ptr %7, align 8, !tbaa !8
  %70 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %69, i64 0, i32 8
  %71 = load ptr, ptr %70, align 8, !tbaa !32
  %72 = getelementptr inbounds i64, ptr %71, i64 %20
  %73 = load i64, ptr %72, align 8, !tbaa !34
  %74 = icmp eq i64 %73, %68
  br i1 %74, label %75, label %78

75:                                               ; preds = %67
  %76 = getelementptr inbounds i32, ptr %3, i64 %62
  %77 = load i32, ptr %76, align 4, !tbaa !47
  br label %84

78:                                               ; preds = %67
  %79 = getelementptr inbounds i32, ptr %10, i64 %68
  %80 = load i32, ptr %79, align 4, !tbaa !47
  %81 = getelementptr inbounds i32, ptr %3, i64 %62
  %82 = load i32, ptr %81, align 4, !tbaa !47
  %83 = icmp eq i32 %80, %82
  br i1 %83, label %90, label %84

84:                                               ; preds = %75, %78
  %85 = phi i32 [ %77, %75 ], [ %82, %78 ]
  %86 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %69, i32 noundef %1, i32 noundef %85)
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %96, label %88

88:                                               ; preds = %84
  %89 = zext i32 %86 to i64
  br label %90

90:                                               ; preds = %88, %78
  %91 = phi i64 [ %89, %88 ], [ %68, %78 ]
  %92 = phi i32 [ %86, %88 ], [ %63, %78 ]
  %93 = load ptr, ptr %21, align 8, !tbaa !13
  %94 = getelementptr inbounds double, ptr %93, i64 %91
  store double %65, ptr %94, align 8, !tbaa !30
  %95 = add i32 %92, 1
  br label %96

96:                                               ; preds = %84, %61, %90
  %97 = phi i32 [ %95, %90 ], [ %63, %61 ], [ -1, %84 ]
  %98 = add nuw nsw i64 %62, 1
  %99 = icmp eq i64 %98, %22
  br i1 %99, label %60, label %61
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIdE9copy_fromIfEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %6 = load ptr, ptr %5, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %6, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = load i64, ptr %6, align 8, !tbaa !34
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 2
  %15 = and i64 %14, 17179869180
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %69, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %1, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !92
  %20 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !13
  %22 = lshr exact i64 %15, 2
  %23 = icmp ult i64 %15, 64
  br i1 %23, label %55, label %24

24:                                               ; preds = %17
  %25 = and i64 %22, 4294967280
  %26 = and i64 %22, 15
  %27 = shl nuw nsw i64 %25, 3
  %28 = getelementptr i8, ptr %21, i64 %27
  %29 = shl nuw nsw i64 %25, 2
  %30 = getelementptr i8, ptr %19, i64 %29
  br label %31

31:                                               ; preds = %31, %24
  %32 = phi i64 [ 0, %24 ], [ %51, %31 ]
  %33 = shl i64 %32, 3
  %34 = getelementptr i8, ptr %21, i64 %33
  %35 = shl i64 %32, 2
  %36 = getelementptr i8, ptr %19, i64 %35
  %37 = load <4 x float>, ptr %36, align 4, !tbaa !95
  %38 = getelementptr float, ptr %36, i64 4
  %39 = load <4 x float>, ptr %38, align 4, !tbaa !95
  %40 = getelementptr float, ptr %36, i64 8
  %41 = load <4 x float>, ptr %40, align 4, !tbaa !95
  %42 = getelementptr float, ptr %36, i64 12
  %43 = load <4 x float>, ptr %42, align 4, !tbaa !95
  %44 = fpext <4 x float> %37 to <4 x double>
  %45 = fpext <4 x float> %39 to <4 x double>
  %46 = fpext <4 x float> %41 to <4 x double>
  %47 = fpext <4 x float> %43 to <4 x double>
  store <4 x double> %44, ptr %34, align 8, !tbaa !30
  %48 = getelementptr double, ptr %34, i64 4
  store <4 x double> %45, ptr %48, align 8, !tbaa !30
  %49 = getelementptr double, ptr %34, i64 8
  store <4 x double> %46, ptr %49, align 8, !tbaa !30
  %50 = getelementptr double, ptr %34, i64 12
  store <4 x double> %47, ptr %50, align 8, !tbaa !30
  %51 = add nuw i64 %32, 16
  %52 = icmp eq i64 %51, %25
  br i1 %52, label %53, label %31, !llvm.loop !168

53:                                               ; preds = %31
  %54 = icmp eq i64 %22, %25
  br i1 %54, label %69, label %55

55:                                               ; preds = %17, %53
  %56 = phi i64 [ %22, %17 ], [ %26, %53 ]
  %57 = phi ptr [ %21, %17 ], [ %28, %53 ]
  %58 = phi ptr [ %19, %17 ], [ %30, %53 ]
  br label %59

59:                                               ; preds = %55, %59
  %60 = phi i64 [ %67, %59 ], [ %56, %55 ]
  %61 = phi ptr [ %66, %59 ], [ %57, %55 ]
  %62 = phi ptr [ %65, %59 ], [ %58, %55 ]
  %63 = load float, ptr %62, align 4, !tbaa !95
  %64 = fpext float %63 to double
  store double %64, ptr %61, align 8, !tbaa !30
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = getelementptr inbounds double, ptr %61, i64 1
  %67 = add nsw i64 %60, -1
  %68 = icmp ugt i64 %60, 1
  br i1 %68, label %59, label %69, !llvm.loop !169

69:                                               ; preds = %59, %53, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE9copy_fromIfEEvRKNS_10FullMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(92) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = icmp eq ptr %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %6
  %21 = shl nuw nsw i64 %18, 3
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %4, i8 0, i64 %21, i1 false), !tbaa !30
  br label %22

22:                                               ; preds = %2, %6, %20
  %23 = getelementptr inbounds %"class.dealii::TableBase.34", ptr %1, i64 0, i32 3
  %24 = load i32, ptr %23, align 4, !tbaa !47
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.dealii::TableBase.34", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %28 = getelementptr inbounds %"class.dealii::TableBase.34", ptr %1, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %30 = load i32, ptr %27, align 8, !tbaa !47
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %26, %40
  %33 = phi i32 [ %41, %40 ], [ %24, %26 ]
  %34 = phi i32 [ %42, %40 ], [ %30, %26 ]
  %35 = phi i32 [ %43, %40 ], [ 0, %26 ]
  %36 = icmp eq i32 %34, 0
  br i1 %36, label %40, label %45

37:                                               ; preds = %40, %26, %22
  ret void

38:                                               ; preds = %64
  %39 = load i32, ptr %23, align 4, !tbaa !47
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i32 [ %39, %38 ], [ %33, %32 ]
  %42 = phi i32 [ %66, %38 ], [ 0, %32 ]
  %43 = add nuw i32 %35, 1
  %44 = icmp ult i32 %43, %41
  br i1 %44, label %32, label %37, !llvm.loop !170

45:                                               ; preds = %32, %64
  %46 = phi i32 [ %66, %64 ], [ %34, %32 ]
  %47 = phi i32 [ %65, %64 ], [ 0, %32 ]
  %48 = load ptr, ptr %28, align 8, !tbaa !171
  %49 = mul i32 %46, %35
  %50 = add i32 %49, %47
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds float, ptr %48, i64 %51
  %53 = load float, ptr %52, align 4, !tbaa !95
  %54 = fcmp une float %53, 0.000000e+00
  br i1 %54, label %55, label %64

55:                                               ; preds = %45
  %56 = load ptr, ptr %29, align 8, !tbaa !8
  %57 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %56, i32 noundef %35, i32 noundef %47)
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = fpext float %53 to double
  %61 = load ptr, ptr %3, align 8, !tbaa !13
  %62 = zext i32 %57 to i64
  %63 = getelementptr inbounds double, ptr %61, i64 %62
  store double %60, ptr %63, align 8, !tbaa !30
  br label %64

64:                                               ; preds = %59, %55, %45
  %65 = add nuw i32 %47, 1
  %66 = load i32, ptr %27, align 8, !tbaa !47
  %67 = icmp ult i32 %65, %66
  br i1 %67, label %45, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3addIfEEvdRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, double noundef %1, ptr noundef nonnull align 8 dereferenceable(36) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !13
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, ptr %9, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = load i64, ptr %9, align 8, !tbaa !34
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds double, ptr %5, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %86, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %2, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !92
  %23 = add nuw nsw i64 %17, 2305843009213693951
  %24 = and i64 %23, 2305843009213693951
  %25 = add nuw nsw i64 %24, 1
  %26 = icmp ult i64 %24, 15
  br i1 %26, label %73, label %27

27:                                               ; preds = %20
  %28 = and i64 %25, 4611686018427387888
  %29 = shl i64 %28, 3
  %30 = getelementptr i8, ptr %5, i64 %29
  %31 = shl nuw i64 %28, 2
  %32 = getelementptr i8, ptr %22, i64 %31
  %33 = insertelement <4 x double> poison, double %1, i64 0
  %34 = shufflevector <4 x double> %33, <4 x double> poison, <4 x i32> zeroinitializer
  %35 = insertelement <4 x double> poison, double %1, i64 0
  %36 = shufflevector <4 x double> %35, <4 x double> poison, <4 x i32> zeroinitializer
  %37 = insertelement <4 x double> poison, double %1, i64 0
  %38 = shufflevector <4 x double> %37, <4 x double> poison, <4 x i32> zeroinitializer
  %39 = insertelement <4 x double> poison, double %1, i64 0
  %40 = shufflevector <4 x double> %39, <4 x double> poison, <4 x i32> zeroinitializer
  br label %41

41:                                               ; preds = %41, %27
  %42 = phi i64 [ 0, %27 ], [ %69, %41 ]
  %43 = shl i64 %42, 3
  %44 = getelementptr i8, ptr %5, i64 %43
  %45 = shl i64 %42, 2
  %46 = getelementptr i8, ptr %22, i64 %45
  %47 = load <4 x float>, ptr %46, align 4, !tbaa !95
  %48 = getelementptr float, ptr %46, i64 4
  %49 = load <4 x float>, ptr %48, align 4, !tbaa !95
  %50 = getelementptr float, ptr %46, i64 8
  %51 = load <4 x float>, ptr %50, align 4, !tbaa !95
  %52 = getelementptr float, ptr %46, i64 12
  %53 = load <4 x float>, ptr %52, align 4, !tbaa !95
  %54 = fpext <4 x float> %47 to <4 x double>
  %55 = fpext <4 x float> %49 to <4 x double>
  %56 = fpext <4 x float> %51 to <4 x double>
  %57 = fpext <4 x float> %53 to <4 x double>
  %58 = load <4 x double>, ptr %44, align 8, !tbaa !30
  %59 = getelementptr double, ptr %44, i64 4
  %60 = load <4 x double>, ptr %59, align 8, !tbaa !30
  %61 = getelementptr double, ptr %44, i64 8
  %62 = load <4 x double>, ptr %61, align 8, !tbaa !30
  %63 = getelementptr double, ptr %44, i64 12
  %64 = load <4 x double>, ptr %63, align 8, !tbaa !30
  %65 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %34, <4 x double> %54, <4 x double> %58)
  %66 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %36, <4 x double> %55, <4 x double> %60)
  %67 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %38, <4 x double> %56, <4 x double> %62)
  %68 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %40, <4 x double> %57, <4 x double> %64)
  store <4 x double> %65, ptr %44, align 8, !tbaa !30
  store <4 x double> %66, ptr %59, align 8, !tbaa !30
  store <4 x double> %67, ptr %61, align 8, !tbaa !30
  store <4 x double> %68, ptr %63, align 8, !tbaa !30
  %69 = add nuw i64 %42, 16
  %70 = icmp eq i64 %69, %28
  br i1 %70, label %71, label %41, !llvm.loop !173

71:                                               ; preds = %41
  %72 = icmp eq i64 %25, %28
  br i1 %72, label %86, label %73

73:                                               ; preds = %20, %71
  %74 = phi ptr [ %5, %20 ], [ %30, %71 ]
  %75 = phi ptr [ %22, %20 ], [ %32, %71 ]
  br label %76

76:                                               ; preds = %73, %76
  %77 = phi ptr [ %82, %76 ], [ %74, %73 ]
  %78 = phi ptr [ %79, %76 ], [ %75, %73 ]
  %79 = getelementptr inbounds float, ptr %78, i64 1
  %80 = load float, ptr %78, align 4, !tbaa !95
  %81 = fpext float %80 to double
  %82 = getelementptr inbounds double, ptr %77, i64 1
  %83 = load double, ptr %77, align 8, !tbaa !30
  %84 = tail call double @llvm.fmuladd.f64(double %1, double %81, double %83)
  store double %84, ptr %77, align 8, !tbaa !30
  %85 = icmp eq ptr %82, %18
  br i1 %85, label %86, label %76, !llvm.loop !174

86:                                               ; preds = %76, %71, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3addIfEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5, i1 noundef zeroext %6) local_unnamed_addr #0 comdat align 2 {
  br i1 %6, label %11, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !8
  br label %264

11:                                               ; preds = %7
  %12 = shl i32 %2, 3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = add i32 %1, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i64, ptr %16, i64 %18
  %20 = load i64, ptr %19, align 8, !tbaa !34
  %21 = zext i32 %1 to i64
  %22 = getelementptr inbounds i64, ptr %16, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !34
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32
  %26 = icmp ugt i32 %12, %25
  br i1 %26, label %27, label %264

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 11
  %29 = load i8, ptr %28, align 1, !tbaa !43, !range !44, !noundef !45
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = getelementptr inbounds i32, ptr %32, i64 %23
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !13
  %36 = getelementptr inbounds double, ptr %35, i64 %23
  br i1 %30, label %216, label %37

37:                                               ; preds = %27
  %38 = ptrtoint ptr %3 to i64
  %39 = icmp eq i32 %2, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %37
  %41 = zext i32 %2 to i64
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi ptr [ %3, %40 ], [ %53, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %52, %42 ]
  %45 = lshr i64 %44, 1
  %46 = getelementptr inbounds i32, ptr %43, i64 %45
  %47 = load i32, ptr %46, align 4, !tbaa !47
  %48 = icmp ult i32 %47, %1
  %49 = getelementptr inbounds i32, ptr %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add nsw i64 %44, %50
  %52 = select i1 %48, i64 %51, i64 %45
  %53 = select i1 %48, ptr %49, ptr %43
  %54 = icmp sgt i64 %52, 0
  br i1 %54, label %42, label %55

55:                                               ; preds = %42
  %56 = ptrtoint ptr %53 to i64
  br label %57

57:                                               ; preds = %55, %37
  %58 = phi i64 [ %56, %55 ], [ %38, %37 ]
  %59 = phi ptr [ %53, %55 ], [ %3, %37 ]
  %60 = sub i64 %58, %38
  %61 = ashr exact i64 %60, 2
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, %2
  br i1 %63, label %74, label %64

64:                                               ; preds = %57
  %65 = load i32, ptr %59, align 4, !tbaa !47
  %66 = icmp eq i32 %65, %1
  br i1 %66, label %67, label %74

67:                                               ; preds = %64
  %68 = getelementptr inbounds float, ptr %4, i64 %61
  %69 = load float, ptr %68, align 4, !tbaa !95
  %70 = fpext float %69 to double
  %71 = load double, ptr %36, align 8, !tbaa !30
  %72 = fadd double %71, %70
  store double %72, ptr %36, align 8, !tbaa !30
  %73 = add i32 %62, 1
  br label %74

74:                                               ; preds = %67, %64, %57
  %75 = phi i32 [ %73, %67 ], [ %62, %64 ], [ %2, %57 ]
  %76 = icmp eq i32 %62, 0
  br i1 %76, label %111, label %77

77:                                               ; preds = %74
  %78 = and i64 %61, 4294967295
  %79 = and i64 %61, 1
  %80 = icmp eq i64 %78, 1
  br i1 %80, label %89, label %81

81:                                               ; preds = %77
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %168, %81
  %84 = phi i64 [ 0, %81 ], [ %175, %168 ]
  %85 = phi i32 [ 1, %81 ], [ %162, %168 ]
  %86 = phi i64 [ 0, %81 ], [ %176, %168 ]
  %87 = getelementptr inbounds i32, ptr %3, i64 %84
  %88 = load i32, ptr %87, align 4, !tbaa !47
  br label %144

89:                                               ; preds = %168, %77
  %90 = phi i32 [ undef, %77 ], [ %162, %168 ]
  %91 = phi i64 [ 0, %77 ], [ %175, %168 ]
  %92 = phi i32 [ 1, %77 ], [ %162, %168 ]
  %93 = icmp eq i64 %79, 0
  br i1 %93, label %111, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds i32, ptr %3, i64 %91
  %96 = load i32, ptr %95, align 4, !tbaa !47
  br label %97

97:                                               ; preds = %97, %94
  %98 = phi i32 [ %103, %97 ], [ %92, %94 ]
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds i32, ptr %33, i64 %99
  %101 = load i32, ptr %100, align 4, !tbaa !47
  %102 = icmp ult i32 %101, %96
  %103 = add i32 %98, 1
  br i1 %102, label %97, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds float, ptr %4, i64 %91
  %106 = load float, ptr %105, align 4, !tbaa !95
  %107 = fpext float %106 to double
  %108 = getelementptr inbounds double, ptr %36, i64 %99
  %109 = load double, ptr %108, align 8, !tbaa !30
  %110 = fadd double %109, %107
  store double %110, ptr %108, align 8, !tbaa !30
  br label %111

111:                                              ; preds = %104, %89, %74
  %112 = phi i32 [ 1, %74 ], [ %90, %89 ], [ %98, %104 ]
  %113 = icmp ult i32 %75, %2
  br i1 %113, label %114, label %345

114:                                              ; preds = %111
  %115 = zext i32 %75 to i64
  %116 = zext i32 %2 to i64
  %117 = sub nsw i64 %116, %115
  %118 = xor i64 %115, -1
  %119 = and i64 %117, 1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %139, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds i32, ptr %3, i64 %115
  %123 = load i32, ptr %122, align 4, !tbaa !47
  br label %124

124:                                              ; preds = %124, %121
  %125 = phi i32 [ %130, %124 ], [ %112, %121 ]
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i32, ptr %33, i64 %126
  %128 = load i32, ptr %127, align 4, !tbaa !47
  %129 = icmp ult i32 %128, %123
  %130 = add i32 %125, 1
  br i1 %129, label %124, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds float, ptr %4, i64 %115
  %133 = load float, ptr %132, align 4, !tbaa !95
  %134 = fpext float %133 to double
  %135 = getelementptr inbounds double, ptr %36, i64 %126
  %136 = load double, ptr %135, align 8, !tbaa !30
  %137 = fadd double %136, %134
  store double %137, ptr %135, align 8, !tbaa !30
  %138 = add nuw nsw i64 %115, 1
  br label %139

139:                                              ; preds = %131, %114
  %140 = phi i64 [ %115, %114 ], [ %138, %131 ]
  %141 = phi i32 [ %112, %114 ], [ %125, %131 ]
  %142 = sub nsw i64 0, %116
  %143 = icmp eq i64 %118, %142
  br i1 %143, label %345, label %178

144:                                              ; preds = %144, %83
  %145 = phi i32 [ %150, %144 ], [ %85, %83 ]
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i32, ptr %33, i64 %146
  %148 = load i32, ptr %147, align 4, !tbaa !47
  %149 = icmp ult i32 %148, %88
  %150 = add i32 %145, 1
  br i1 %149, label %144, label %151

151:                                              ; preds = %144
  %152 = getelementptr inbounds float, ptr %4, i64 %84
  %153 = load float, ptr %152, align 4, !tbaa !95
  %154 = fpext float %153 to double
  %155 = getelementptr inbounds double, ptr %36, i64 %146
  %156 = load double, ptr %155, align 8, !tbaa !30
  %157 = fadd double %156, %154
  store double %157, ptr %155, align 8, !tbaa !30
  %158 = or i64 %84, 1
  %159 = getelementptr inbounds i32, ptr %3, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !47
  br label %161

161:                                              ; preds = %161, %151
  %162 = phi i32 [ %167, %161 ], [ %145, %151 ]
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds i32, ptr %33, i64 %163
  %165 = load i32, ptr %164, align 4, !tbaa !47
  %166 = icmp ult i32 %165, %160
  %167 = add i32 %162, 1
  br i1 %166, label %161, label %168

168:                                              ; preds = %161
  %169 = getelementptr inbounds float, ptr %4, i64 %158
  %170 = load float, ptr %169, align 4, !tbaa !95
  %171 = fpext float %170 to double
  %172 = getelementptr inbounds double, ptr %36, i64 %163
  %173 = load double, ptr %172, align 8, !tbaa !30
  %174 = fadd double %173, %171
  store double %174, ptr %172, align 8, !tbaa !30
  %175 = add nuw nsw i64 %84, 2
  %176 = add i64 %86, 2
  %177 = icmp eq i64 %176, %82
  br i1 %177, label %89, label %83

178:                                              ; preds = %139, %207
  %179 = phi i64 [ %214, %207 ], [ %140, %139 ]
  %180 = phi i32 [ %201, %207 ], [ %141, %139 ]
  %181 = getelementptr inbounds i32, ptr %3, i64 %179
  %182 = load i32, ptr %181, align 4, !tbaa !47
  br label %183

183:                                              ; preds = %183, %178
  %184 = phi i32 [ %189, %183 ], [ %180, %178 ]
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds i32, ptr %33, i64 %185
  %187 = load i32, ptr %186, align 4, !tbaa !47
  %188 = icmp ult i32 %187, %182
  %189 = add i32 %184, 1
  br i1 %188, label %183, label %190

190:                                              ; preds = %183
  %191 = getelementptr inbounds float, ptr %4, i64 %179
  %192 = load float, ptr %191, align 4, !tbaa !95
  %193 = fpext float %192 to double
  %194 = getelementptr inbounds double, ptr %36, i64 %185
  %195 = load double, ptr %194, align 8, !tbaa !30
  %196 = fadd double %195, %193
  store double %196, ptr %194, align 8, !tbaa !30
  %197 = add nuw nsw i64 %179, 1
  %198 = getelementptr inbounds i32, ptr %3, i64 %197
  %199 = load i32, ptr %198, align 4, !tbaa !47
  br label %200

200:                                              ; preds = %200, %190
  %201 = phi i32 [ %206, %200 ], [ %184, %190 ]
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds i32, ptr %33, i64 %202
  %204 = load i32, ptr %203, align 4, !tbaa !47
  %205 = icmp ult i32 %204, %199
  %206 = add i32 %201, 1
  br i1 %205, label %200, label %207

207:                                              ; preds = %200
  %208 = getelementptr inbounds float, ptr %4, i64 %197
  %209 = load float, ptr %208, align 4, !tbaa !95
  %210 = fpext float %209 to double
  %211 = getelementptr inbounds double, ptr %36, i64 %202
  %212 = load double, ptr %211, align 8, !tbaa !30
  %213 = fadd double %212, %210
  store double %213, ptr %211, align 8, !tbaa !30
  %214 = add nuw nsw i64 %179, 2
  %215 = icmp eq i64 %214, %116
  br i1 %215, label %345, label %178

216:                                              ; preds = %27
  %217 = icmp eq i32 %2, 0
  br i1 %217, label %345, label %218

218:                                              ; preds = %216
  %219 = zext i32 %2 to i64
  %220 = and i64 %219, 1
  %221 = icmp eq i32 %2, 1
  br i1 %221, label %324, label %222

222:                                              ; preds = %218
  %223 = and i64 %219, 4294967294
  br label %224

224:                                              ; preds = %254, %222
  %225 = phi i64 [ 0, %222 ], [ %261, %254 ]
  %226 = phi i32 [ 0, %222 ], [ %248, %254 ]
  %227 = phi i64 [ 0, %222 ], [ %262, %254 ]
  %228 = getelementptr inbounds i32, ptr %3, i64 %225
  %229 = load i32, ptr %228, align 4, !tbaa !47
  br label %230

230:                                              ; preds = %230, %224
  %231 = phi i32 [ %236, %230 ], [ %226, %224 ]
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds i32, ptr %33, i64 %232
  %234 = load i32, ptr %233, align 4, !tbaa !47
  %235 = icmp ult i32 %234, %229
  %236 = add i32 %231, 1
  br i1 %235, label %230, label %237

237:                                              ; preds = %230
  %238 = getelementptr inbounds float, ptr %4, i64 %225
  %239 = load float, ptr %238, align 4, !tbaa !95
  %240 = fpext float %239 to double
  %241 = getelementptr inbounds double, ptr %36, i64 %232
  %242 = load double, ptr %241, align 8, !tbaa !30
  %243 = fadd double %242, %240
  store double %243, ptr %241, align 8, !tbaa !30
  %244 = or i64 %225, 1
  %245 = getelementptr inbounds i32, ptr %3, i64 %244
  %246 = load i32, ptr %245, align 4, !tbaa !47
  br label %247

247:                                              ; preds = %247, %237
  %248 = phi i32 [ %253, %247 ], [ %231, %237 ]
  %249 = zext i32 %248 to i64
  %250 = getelementptr inbounds i32, ptr %33, i64 %249
  %251 = load i32, ptr %250, align 4, !tbaa !47
  %252 = icmp ult i32 %251, %246
  %253 = add i32 %248, 1
  br i1 %252, label %247, label %254

254:                                              ; preds = %247
  %255 = getelementptr inbounds float, ptr %4, i64 %244
  %256 = load float, ptr %255, align 4, !tbaa !95
  %257 = fpext float %256 to double
  %258 = getelementptr inbounds double, ptr %36, i64 %249
  %259 = load double, ptr %258, align 8, !tbaa !30
  %260 = fadd double %259, %257
  store double %260, ptr %258, align 8, !tbaa !30
  %261 = add nuw nsw i64 %225, 2
  %262 = add i64 %227, 2
  %263 = icmp eq i64 %262, %223
  br i1 %263, label %324, label %224

264:                                              ; preds = %8, %11
  %265 = phi ptr [ %10, %8 ], [ %14, %11 ]
  %266 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %267 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %265, i64 0, i32 9
  %268 = load ptr, ptr %267, align 8, !tbaa !46
  %269 = icmp eq i32 %2, 0
  br i1 %269, label %345, label %270

270:                                              ; preds = %264
  %271 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %265, i64 0, i32 8
  %272 = load ptr, ptr %271, align 8, !tbaa !32
  %273 = zext i32 %1 to i64
  %274 = getelementptr inbounds i64, ptr %272, i64 %273
  %275 = load i64, ptr %274, align 8, !tbaa !34
  %276 = trunc i64 %275 to i32
  %277 = add i32 %1, 1
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %280 = zext i32 %2 to i64
  br label %281

281:                                              ; preds = %270, %320
  %282 = phi i64 [ 0, %270 ], [ %322, %320 ]
  %283 = phi i32 [ %276, %270 ], [ %321, %320 ]
  %284 = getelementptr inbounds float, ptr %4, i64 %282
  %285 = load float, ptr %284, align 4, !tbaa !95
  %286 = fpext float %285 to double
  %287 = fcmp oeq float %285, 0.000000e+00
  %288 = and i1 %287, %5
  br i1 %288, label %320, label %289

289:                                              ; preds = %281
  %290 = zext i32 %283 to i64
  %291 = load ptr, ptr %266, align 8, !tbaa !8
  %292 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %291, i64 0, i32 8
  %293 = load ptr, ptr %292, align 8, !tbaa !32
  %294 = getelementptr inbounds i64, ptr %293, i64 %278
  %295 = load i64, ptr %294, align 8, !tbaa !34
  %296 = icmp eq i64 %295, %290
  br i1 %296, label %297, label %300

297:                                              ; preds = %289
  %298 = getelementptr inbounds i32, ptr %3, i64 %282
  %299 = load i32, ptr %298, align 4, !tbaa !47
  br label %306

300:                                              ; preds = %289
  %301 = getelementptr inbounds i32, ptr %268, i64 %290
  %302 = load i32, ptr %301, align 4, !tbaa !47
  %303 = getelementptr inbounds i32, ptr %3, i64 %282
  %304 = load i32, ptr %303, align 4, !tbaa !47
  %305 = icmp eq i32 %302, %304
  br i1 %305, label %312, label %306

306:                                              ; preds = %297, %300
  %307 = phi i32 [ %299, %297 ], [ %304, %300 ]
  %308 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %291, i32 noundef %1, i32 noundef %307)
  %309 = icmp eq i32 %308, -1
  br i1 %309, label %320, label %310

310:                                              ; preds = %306
  %311 = zext i32 %308 to i64
  br label %312

312:                                              ; preds = %310, %300
  %313 = phi i64 [ %311, %310 ], [ %290, %300 ]
  %314 = phi i32 [ %308, %310 ], [ %283, %300 ]
  %315 = load ptr, ptr %279, align 8, !tbaa !13
  %316 = getelementptr inbounds double, ptr %315, i64 %313
  %317 = load double, ptr %316, align 8, !tbaa !30
  %318 = fadd double %317, %286
  store double %318, ptr %316, align 8, !tbaa !30
  %319 = add i32 %314, 1
  br label %320

320:                                              ; preds = %306, %281, %312
  %321 = phi i32 [ %319, %312 ], [ %283, %281 ], [ -1, %306 ]
  %322 = add nuw nsw i64 %282, 1
  %323 = icmp eq i64 %322, %280
  br i1 %323, label %345, label %281

324:                                              ; preds = %254, %218
  %325 = phi i64 [ 0, %218 ], [ %261, %254 ]
  %326 = phi i32 [ 0, %218 ], [ %248, %254 ]
  %327 = icmp eq i64 %220, 0
  br i1 %327, label %345, label %328

328:                                              ; preds = %324
  %329 = getelementptr inbounds i32, ptr %3, i64 %325
  %330 = load i32, ptr %329, align 4, !tbaa !47
  br label %331

331:                                              ; preds = %331, %328
  %332 = phi i32 [ %337, %331 ], [ %326, %328 ]
  %333 = zext i32 %332 to i64
  %334 = getelementptr inbounds i32, ptr %33, i64 %333
  %335 = load i32, ptr %334, align 4, !tbaa !47
  %336 = icmp ult i32 %335, %330
  %337 = add i32 %332, 1
  br i1 %336, label %331, label %338

338:                                              ; preds = %331
  %339 = getelementptr inbounds float, ptr %4, i64 %325
  %340 = load float, ptr %339, align 4, !tbaa !95
  %341 = fpext float %340 to double
  %342 = getelementptr inbounds double, ptr %36, i64 %333
  %343 = load double, ptr %342, align 8, !tbaa !30
  %344 = fadd double %343, %341
  store double %344, ptr %342, align 8, !tbaa !30
  br label %345

345:                                              ; preds = %320, %139, %207, %338, %324, %264, %111, %216
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3setIfEEvjjPKjPKT_b(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 9
  %10 = load ptr, ptr %9, align 8, !tbaa !46
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %61, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = zext i32 %1 to i64
  %16 = getelementptr inbounds i64, ptr %14, i64 %15
  %17 = load i64, ptr %16, align 8, !tbaa !34
  %18 = trunc i64 %17 to i32
  %19 = add i32 %1, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %22 = zext i32 %2 to i64
  br i1 %5, label %62, label %23

23:                                               ; preds = %12, %57
  %24 = phi i64 [ %59, %57 ], [ 0, %12 ]
  %25 = phi i32 [ %58, %57 ], [ %18, %12 ]
  %26 = getelementptr inbounds float, ptr %4, i64 %24
  %27 = load float, ptr %26, align 4, !tbaa !95
  %28 = fpext float %27 to double
  %29 = zext i32 %25 to i64
  %30 = load ptr, ptr %7, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %30, i64 0, i32 8
  %32 = load ptr, ptr %31, align 8, !tbaa !32
  %33 = getelementptr inbounds i64, ptr %32, i64 %20
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = icmp eq i64 %34, %29
  br i1 %35, label %36, label %39

36:                                               ; preds = %23
  %37 = getelementptr inbounds i32, ptr %3, i64 %24
  %38 = load i32, ptr %37, align 4, !tbaa !47
  br label %45

39:                                               ; preds = %23
  %40 = getelementptr inbounds i32, ptr %10, i64 %29
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds i32, ptr %3, i64 %24
  %43 = load i32, ptr %42, align 4, !tbaa !47
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %51, label %45

45:                                               ; preds = %36, %39
  %46 = phi i32 [ %38, %36 ], [ %43, %39 ]
  %47 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %30, i32 noundef %1, i32 noundef %46)
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %57, label %49

49:                                               ; preds = %45
  %50 = zext i32 %47 to i64
  br label %51

51:                                               ; preds = %49, %39
  %52 = phi i64 [ %50, %49 ], [ %29, %39 ]
  %53 = phi i32 [ %47, %49 ], [ %25, %39 ]
  %54 = load ptr, ptr %21, align 8, !tbaa !13
  %55 = getelementptr inbounds double, ptr %54, i64 %52
  store double %28, ptr %55, align 8, !tbaa !30
  %56 = add i32 %53, 1
  br label %57

57:                                               ; preds = %51, %45
  %58 = phi i32 [ %56, %51 ], [ -1, %45 ]
  %59 = add nuw nsw i64 %24, 1
  %60 = icmp eq i64 %59, %22
  br i1 %60, label %61, label %23

61:                                               ; preds = %57, %98, %6
  ret void

62:                                               ; preds = %12, %98
  %63 = phi i64 [ %100, %98 ], [ 0, %12 ]
  %64 = phi i32 [ %99, %98 ], [ %18, %12 ]
  %65 = getelementptr inbounds float, ptr %4, i64 %63
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fpext float %66 to double
  %68 = fcmp oeq float %66, 0.000000e+00
  br i1 %68, label %98, label %69

69:                                               ; preds = %62
  %70 = zext i32 %64 to i64
  %71 = load ptr, ptr %7, align 8, !tbaa !8
  %72 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %71, i64 0, i32 8
  %73 = load ptr, ptr %72, align 8, !tbaa !32
  %74 = getelementptr inbounds i64, ptr %73, i64 %20
  %75 = load i64, ptr %74, align 8, !tbaa !34
  %76 = icmp eq i64 %75, %70
  br i1 %76, label %77, label %80

77:                                               ; preds = %69
  %78 = getelementptr inbounds i32, ptr %3, i64 %63
  %79 = load i32, ptr %78, align 4, !tbaa !47
  br label %86

80:                                               ; preds = %69
  %81 = getelementptr inbounds i32, ptr %10, i64 %70
  %82 = load i32, ptr %81, align 4, !tbaa !47
  %83 = getelementptr inbounds i32, ptr %3, i64 %63
  %84 = load i32, ptr %83, align 4, !tbaa !47
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %77, %80
  %87 = phi i32 [ %79, %77 ], [ %84, %80 ]
  %88 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %71, i32 noundef %1, i32 noundef %87)
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %98, label %90

90:                                               ; preds = %86
  %91 = zext i32 %88 to i64
  br label %92

92:                                               ; preds = %90, %80
  %93 = phi i64 [ %91, %90 ], [ %70, %80 ]
  %94 = phi i32 [ %88, %90 ], [ %64, %80 ]
  %95 = load ptr, ptr %21, align 8, !tbaa !13
  %96 = getelementptr inbounds double, ptr %95, i64 %93
  store double %67, ptr %96, align 8, !tbaa !30
  %97 = add i32 %94, 1
  br label %98

98:                                               ; preds = %86, %62, %92
  %99 = phi i32 [ %97, %92 ], [ %64, %62 ], [ -1, %86 ]
  %100 = add nuw nsw i64 %63, 1
  %101 = icmp eq i64 %100, %22
  br i1 %101, label %61, label %62
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIdE9copy_fromIeEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %6 = load ptr, ptr %5, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %6, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = load i64, ptr %6, align 8, !tbaa !34
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 4
  %15 = and i64 %14, 68719476720
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %1, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !125
  %20 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !13
  %22 = lshr exact i64 %15, 4
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi i64 [ %31, %23 ], [ %22, %17 ]
  %25 = phi ptr [ %30, %23 ], [ %21, %17 ]
  %26 = phi ptr [ %29, %23 ], [ %19, %17 ]
  %27 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %28 = fptrunc x86_fp80 %27 to double
  store double %28, ptr %25, align 8, !tbaa !30
  %29 = getelementptr inbounds x86_fp80, ptr %26, i64 1
  %30 = getelementptr inbounds double, ptr %25, i64 1
  %31 = add nsw i64 %24, -1
  %32 = icmp ugt i64 %24, 1
  br i1 %32, label %23, label %33

33:                                               ; preds = %23, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE9copy_fromIeEEvRKNS_10FullMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(92) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = icmp eq ptr %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %6
  %21 = shl nuw nsw i64 %18, 3
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %4, i8 0, i64 %21, i1 false), !tbaa !30
  br label %22

22:                                               ; preds = %2, %6, %20
  %23 = getelementptr inbounds %"class.dealii::TableBase.40", ptr %1, i64 0, i32 3
  %24 = load i32, ptr %23, align 4, !tbaa !47
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.dealii::TableBase.40", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %28 = getelementptr inbounds %"class.dealii::TableBase.40", ptr %1, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %30 = load i32, ptr %27, align 8, !tbaa !47
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %26, %40
  %33 = phi i32 [ %41, %40 ], [ %24, %26 ]
  %34 = phi i32 [ %42, %40 ], [ %30, %26 ]
  %35 = phi i32 [ %43, %40 ], [ 0, %26 ]
  %36 = icmp eq i32 %34, 0
  br i1 %36, label %40, label %45

37:                                               ; preds = %40, %26, %22
  ret void

38:                                               ; preds = %64
  %39 = load i32, ptr %23, align 4, !tbaa !47
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i32 [ %39, %38 ], [ %33, %32 ]
  %42 = phi i32 [ %66, %38 ], [ 0, %32 ]
  %43 = add nuw i32 %35, 1
  %44 = icmp ult i32 %43, %41
  br i1 %44, label %32, label %37, !llvm.loop !175

45:                                               ; preds = %32, %64
  %46 = phi i32 [ %66, %64 ], [ %34, %32 ]
  %47 = phi i32 [ %65, %64 ], [ 0, %32 ]
  %48 = load ptr, ptr %28, align 8, !tbaa !176
  %49 = mul i32 %46, %35
  %50 = add i32 %49, %47
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds x86_fp80, ptr %48, i64 %51
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = fcmp une x86_fp80 %53, 0xK00000000000000000000
  br i1 %54, label %55, label %64

55:                                               ; preds = %45
  %56 = load ptr, ptr %29, align 8, !tbaa !8
  %57 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %56, i32 noundef %35, i32 noundef %47)
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = fptrunc x86_fp80 %53 to double
  %61 = load ptr, ptr %3, align 8, !tbaa !13
  %62 = zext i32 %57 to i64
  %63 = getelementptr inbounds double, ptr %61, i64 %62
  store double %60, ptr %63, align 8, !tbaa !30
  br label %64

64:                                               ; preds = %59, %55, %45
  %65 = add nuw i32 %47, 1
  %66 = load i32, ptr %27, align 8, !tbaa !47
  %67 = icmp ult i32 %65, %66
  br i1 %67, label %45, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3addIeEEvdRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, double noundef %1, ptr noundef nonnull align 8 dereferenceable(36) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !13
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, ptr %9, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = load i64, ptr %9, align 8, !tbaa !34
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds double, ptr %5, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %2, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !125
  %23 = fpext double %1 to x86_fp80
  br label %24

24:                                               ; preds = %20, %24
  %25 = phi ptr [ %5, %20 ], [ %29, %24 ]
  %26 = phi ptr [ %22, %20 ], [ %27, %24 ]
  %27 = getelementptr inbounds x86_fp80, ptr %26, i64 1
  %28 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %29 = getelementptr inbounds double, ptr %25, i64 1
  %30 = load double, ptr %25, align 8, !tbaa !30
  %31 = fpext double %30 to x86_fp80
  %32 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %23, x86_fp80 %28, x86_fp80 %31)
  %33 = fptrunc x86_fp80 %32 to double
  store double %33, ptr %25, align 8, !tbaa !30
  %34 = icmp eq ptr %29, %18
  br i1 %34, label %35, label %24

35:                                               ; preds = %24, %3
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare x86_fp80 @llvm.fmuladd.f80(x86_fp80, x86_fp80, x86_fp80) #8

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3addIeEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5, i1 noundef zeroext %6) local_unnamed_addr #0 comdat align 2 {
  br i1 %6, label %11, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !8
  br label %156

11:                                               ; preds = %7
  %12 = shl i32 %2, 3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = add i32 %1, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i64, ptr %16, i64 %18
  %20 = load i64, ptr %19, align 8, !tbaa !34
  %21 = zext i32 %1 to i64
  %22 = getelementptr inbounds i64, ptr %16, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !34
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32
  %26 = icmp ugt i32 %12, %25
  br i1 %26, label %27, label %156

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 11
  %29 = load i8, ptr %28, align 1, !tbaa !43, !range !44, !noundef !45
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = getelementptr inbounds i32, ptr %32, i64 %23
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !13
  %36 = getelementptr inbounds double, ptr %35, i64 %23
  br i1 %30, label %130, label %37

37:                                               ; preds = %27
  %38 = ptrtoint ptr %3 to i64
  %39 = icmp eq i32 %2, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %37
  %41 = zext i32 %2 to i64
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi ptr [ %3, %40 ], [ %53, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %52, %42 ]
  %45 = lshr i64 %44, 1
  %46 = getelementptr inbounds i32, ptr %43, i64 %45
  %47 = load i32, ptr %46, align 4, !tbaa !47
  %48 = icmp ult i32 %47, %1
  %49 = getelementptr inbounds i32, ptr %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add nsw i64 %44, %50
  %52 = select i1 %48, i64 %51, i64 %45
  %53 = select i1 %48, ptr %49, ptr %43
  %54 = icmp sgt i64 %52, 0
  br i1 %54, label %42, label %55

55:                                               ; preds = %42
  %56 = ptrtoint ptr %53 to i64
  br label %57

57:                                               ; preds = %55, %37
  %58 = phi i64 [ %56, %55 ], [ %38, %37 ]
  %59 = phi ptr [ %53, %55 ], [ %3, %37 ]
  %60 = sub i64 %58, %38
  %61 = ashr exact i64 %60, 2
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, %2
  br i1 %63, label %75, label %64

64:                                               ; preds = %57
  %65 = load i32, ptr %59, align 4, !tbaa !47
  %66 = icmp eq i32 %65, %1
  br i1 %66, label %67, label %75

67:                                               ; preds = %64
  %68 = getelementptr inbounds x86_fp80, ptr %4, i64 %61
  %69 = load x86_fp80, ptr %68, align 16, !tbaa !128
  %70 = load double, ptr %36, align 8, !tbaa !30
  %71 = fpext double %70 to x86_fp80
  %72 = fadd x86_fp80 %69, %71
  %73 = fptrunc x86_fp80 %72 to double
  store double %73, ptr %36, align 8, !tbaa !30
  %74 = add i32 %62, 1
  br label %75

75:                                               ; preds = %67, %64, %57
  %76 = phi i32 [ %74, %67 ], [ %62, %64 ], [ %2, %57 ]
  %77 = icmp eq i32 %62, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %75
  %79 = and i64 %61, 4294967295
  br label %80

80:                                               ; preds = %78, %98
  %81 = phi i64 [ 0, %78 ], [ %106, %98 ]
  %82 = phi i32 [ 1, %78 ], [ %92, %98 ]
  %83 = getelementptr inbounds i32, ptr %3, i64 %81
  %84 = load i32, ptr %83, align 4, !tbaa !47
  br label %91

85:                                               ; preds = %98, %75
  %86 = phi i32 [ 1, %75 ], [ %92, %98 ]
  %87 = icmp ult i32 %76, %2
  br i1 %87, label %88, label %216

88:                                               ; preds = %85
  %89 = zext i32 %76 to i64
  %90 = zext i32 %2 to i64
  br label %108

91:                                               ; preds = %91, %80
  %92 = phi i32 [ %97, %91 ], [ %82, %80 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i32, ptr %33, i64 %93
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = icmp ult i32 %95, %84
  %97 = add i32 %92, 1
  br i1 %96, label %91, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds x86_fp80, ptr %4, i64 %81
  %100 = load x86_fp80, ptr %99, align 16, !tbaa !128
  %101 = getelementptr inbounds double, ptr %36, i64 %93
  %102 = load double, ptr %101, align 8, !tbaa !30
  %103 = fpext double %102 to x86_fp80
  %104 = fadd x86_fp80 %100, %103
  %105 = fptrunc x86_fp80 %104 to double
  store double %105, ptr %101, align 8, !tbaa !30
  %106 = add nuw nsw i64 %81, 1
  %107 = icmp eq i64 %106, %79
  br i1 %107, label %85, label %80

108:                                              ; preds = %88, %120
  %109 = phi i64 [ %89, %88 ], [ %128, %120 ]
  %110 = phi i32 [ %86, %88 ], [ %114, %120 ]
  %111 = getelementptr inbounds i32, ptr %3, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !47
  br label %113

113:                                              ; preds = %113, %108
  %114 = phi i32 [ %119, %113 ], [ %110, %108 ]
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i32, ptr %33, i64 %115
  %117 = load i32, ptr %116, align 4, !tbaa !47
  %118 = icmp ult i32 %117, %112
  %119 = add i32 %114, 1
  br i1 %118, label %113, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds x86_fp80, ptr %4, i64 %109
  %122 = load x86_fp80, ptr %121, align 16, !tbaa !128
  %123 = getelementptr inbounds double, ptr %36, i64 %115
  %124 = load double, ptr %123, align 8, !tbaa !30
  %125 = fpext double %124 to x86_fp80
  %126 = fadd x86_fp80 %122, %125
  %127 = fptrunc x86_fp80 %126 to double
  store double %127, ptr %123, align 8, !tbaa !30
  %128 = add nuw nsw i64 %109, 1
  %129 = icmp eq i64 %128, %90
  br i1 %129, label %216, label %108

130:                                              ; preds = %27
  %131 = icmp eq i32 %2, 0
  br i1 %131, label %216, label %132

132:                                              ; preds = %130
  %133 = zext i32 %2 to i64
  br label %134

134:                                              ; preds = %132, %146
  %135 = phi i64 [ 0, %132 ], [ %154, %146 ]
  %136 = phi i32 [ 0, %132 ], [ %140, %146 ]
  %137 = getelementptr inbounds i32, ptr %3, i64 %135
  %138 = load i32, ptr %137, align 4, !tbaa !47
  br label %139

139:                                              ; preds = %139, %134
  %140 = phi i32 [ %145, %139 ], [ %136, %134 ]
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i32, ptr %33, i64 %141
  %143 = load i32, ptr %142, align 4, !tbaa !47
  %144 = icmp ult i32 %143, %138
  %145 = add i32 %140, 1
  br i1 %144, label %139, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds x86_fp80, ptr %4, i64 %135
  %148 = load x86_fp80, ptr %147, align 16, !tbaa !128
  %149 = getelementptr inbounds double, ptr %36, i64 %141
  %150 = load double, ptr %149, align 8, !tbaa !30
  %151 = fpext double %150 to x86_fp80
  %152 = fadd x86_fp80 %148, %151
  %153 = fptrunc x86_fp80 %152 to double
  store double %153, ptr %149, align 8, !tbaa !30
  %154 = add nuw nsw i64 %135, 1
  %155 = icmp eq i64 %154, %133
  br i1 %155, label %216, label %134

156:                                              ; preds = %8, %11
  %157 = phi ptr [ %10, %8 ], [ %14, %11 ]
  %158 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %159 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %157, i64 0, i32 9
  %160 = load ptr, ptr %159, align 8, !tbaa !46
  %161 = icmp eq i32 %2, 0
  br i1 %161, label %216, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %157, i64 0, i32 8
  %164 = load ptr, ptr %163, align 8, !tbaa !32
  %165 = zext i32 %1 to i64
  %166 = getelementptr inbounds i64, ptr %164, i64 %165
  %167 = load i64, ptr %166, align 8, !tbaa !34
  %168 = trunc i64 %167 to i32
  %169 = add i32 %1, 1
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %172 = zext i32 %2 to i64
  br label %173

173:                                              ; preds = %162, %212
  %174 = phi i64 [ 0, %162 ], [ %214, %212 ]
  %175 = phi i32 [ %168, %162 ], [ %213, %212 ]
  %176 = getelementptr inbounds x86_fp80, ptr %4, i64 %174
  %177 = load x86_fp80, ptr %176, align 16, !tbaa !128
  %178 = fptrunc x86_fp80 %177 to double
  %179 = fcmp oeq double %178, 0.000000e+00
  %180 = and i1 %179, %5
  br i1 %180, label %212, label %181

181:                                              ; preds = %173
  %182 = zext i32 %175 to i64
  %183 = load ptr, ptr %158, align 8, !tbaa !8
  %184 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %183, i64 0, i32 8
  %185 = load ptr, ptr %184, align 8, !tbaa !32
  %186 = getelementptr inbounds i64, ptr %185, i64 %170
  %187 = load i64, ptr %186, align 8, !tbaa !34
  %188 = icmp eq i64 %187, %182
  br i1 %188, label %189, label %192

189:                                              ; preds = %181
  %190 = getelementptr inbounds i32, ptr %3, i64 %174
  %191 = load i32, ptr %190, align 4, !tbaa !47
  br label %198

192:                                              ; preds = %181
  %193 = getelementptr inbounds i32, ptr %160, i64 %182
  %194 = load i32, ptr %193, align 4, !tbaa !47
  %195 = getelementptr inbounds i32, ptr %3, i64 %174
  %196 = load i32, ptr %195, align 4, !tbaa !47
  %197 = icmp eq i32 %194, %196
  br i1 %197, label %204, label %198

198:                                              ; preds = %189, %192
  %199 = phi i32 [ %191, %189 ], [ %196, %192 ]
  %200 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %183, i32 noundef %1, i32 noundef %199)
  %201 = icmp eq i32 %200, -1
  br i1 %201, label %212, label %202

202:                                              ; preds = %198
  %203 = zext i32 %200 to i64
  br label %204

204:                                              ; preds = %202, %192
  %205 = phi i64 [ %203, %202 ], [ %182, %192 ]
  %206 = phi i32 [ %200, %202 ], [ %175, %192 ]
  %207 = load ptr, ptr %171, align 8, !tbaa !13
  %208 = getelementptr inbounds double, ptr %207, i64 %205
  %209 = load double, ptr %208, align 8, !tbaa !30
  %210 = fadd double %209, %178
  store double %210, ptr %208, align 8, !tbaa !30
  %211 = add i32 %206, 1
  br label %212

212:                                              ; preds = %198, %173, %204
  %213 = phi i32 [ %211, %204 ], [ %175, %173 ], [ -1, %198 ]
  %214 = add nuw nsw i64 %174, 1
  %215 = icmp eq i64 %214, %172
  br i1 %215, label %216, label %173

216:                                              ; preds = %212, %120, %146, %156, %85, %130
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIdE3setIeEEvjjPKjPKT_b(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 9
  %10 = load ptr, ptr %9, align 8, !tbaa !46
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %61, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = zext i32 %1 to i64
  %16 = getelementptr inbounds i64, ptr %14, i64 %15
  %17 = load i64, ptr %16, align 8, !tbaa !34
  %18 = trunc i64 %17 to i32
  %19 = add i32 %1, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %22 = zext i32 %2 to i64
  br i1 %5, label %62, label %23

23:                                               ; preds = %12, %57
  %24 = phi i64 [ %59, %57 ], [ 0, %12 ]
  %25 = phi i32 [ %58, %57 ], [ %18, %12 ]
  %26 = getelementptr inbounds x86_fp80, ptr %4, i64 %24
  %27 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %28 = fptrunc x86_fp80 %27 to double
  %29 = zext i32 %25 to i64
  %30 = load ptr, ptr %7, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %30, i64 0, i32 8
  %32 = load ptr, ptr %31, align 8, !tbaa !32
  %33 = getelementptr inbounds i64, ptr %32, i64 %20
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = icmp eq i64 %34, %29
  br i1 %35, label %36, label %39

36:                                               ; preds = %23
  %37 = getelementptr inbounds i32, ptr %3, i64 %24
  %38 = load i32, ptr %37, align 4, !tbaa !47
  br label %45

39:                                               ; preds = %23
  %40 = getelementptr inbounds i32, ptr %10, i64 %29
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds i32, ptr %3, i64 %24
  %43 = load i32, ptr %42, align 4, !tbaa !47
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %51, label %45

45:                                               ; preds = %36, %39
  %46 = phi i32 [ %38, %36 ], [ %43, %39 ]
  %47 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %30, i32 noundef %1, i32 noundef %46)
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %57, label %49

49:                                               ; preds = %45
  %50 = zext i32 %47 to i64
  br label %51

51:                                               ; preds = %49, %39
  %52 = phi i64 [ %50, %49 ], [ %29, %39 ]
  %53 = phi i32 [ %47, %49 ], [ %25, %39 ]
  %54 = load ptr, ptr %21, align 8, !tbaa !13
  %55 = getelementptr inbounds double, ptr %54, i64 %52
  store double %28, ptr %55, align 8, !tbaa !30
  %56 = add i32 %53, 1
  br label %57

57:                                               ; preds = %51, %45
  %58 = phi i32 [ %56, %51 ], [ -1, %45 ]
  %59 = add nuw nsw i64 %24, 1
  %60 = icmp eq i64 %59, %22
  br i1 %60, label %61, label %23

61:                                               ; preds = %57, %98, %6
  ret void

62:                                               ; preds = %12, %98
  %63 = phi i64 [ %100, %98 ], [ 0, %12 ]
  %64 = phi i32 [ %99, %98 ], [ %18, %12 ]
  %65 = getelementptr inbounds x86_fp80, ptr %4, i64 %63
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  %67 = fptrunc x86_fp80 %66 to double
  %68 = fcmp oeq double %67, 0.000000e+00
  br i1 %68, label %98, label %69

69:                                               ; preds = %62
  %70 = zext i32 %64 to i64
  %71 = load ptr, ptr %7, align 8, !tbaa !8
  %72 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %71, i64 0, i32 8
  %73 = load ptr, ptr %72, align 8, !tbaa !32
  %74 = getelementptr inbounds i64, ptr %73, i64 %20
  %75 = load i64, ptr %74, align 8, !tbaa !34
  %76 = icmp eq i64 %75, %70
  br i1 %76, label %77, label %80

77:                                               ; preds = %69
  %78 = getelementptr inbounds i32, ptr %3, i64 %63
  %79 = load i32, ptr %78, align 4, !tbaa !47
  br label %86

80:                                               ; preds = %69
  %81 = getelementptr inbounds i32, ptr %10, i64 %70
  %82 = load i32, ptr %81, align 4, !tbaa !47
  %83 = getelementptr inbounds i32, ptr %3, i64 %63
  %84 = load i32, ptr %83, align 4, !tbaa !47
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %77, %80
  %87 = phi i32 [ %79, %77 ], [ %84, %80 ]
  %88 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %71, i32 noundef %1, i32 noundef %87)
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %98, label %90

90:                                               ; preds = %86
  %91 = zext i32 %88 to i64
  br label %92

92:                                               ; preds = %90, %80
  %93 = phi i64 [ %91, %90 ], [ %70, %80 ]
  %94 = phi i32 [ %88, %90 ], [ %64, %80 ]
  %95 = load ptr, ptr %21, align 8, !tbaa !13
  %96 = getelementptr inbounds double, ptr %95, i64 %93
  store double %67, ptr %96, align 8, !tbaa !30
  %97 = add i32 %94, 1
  br label %98

98:                                               ; preds = %86, %62, %92
  %99 = phi i32 [ %97, %92 ], [ %64, %62 ], [ -1, %86 ]
  %100 = add nuw nsw i64 %63, 1
  %101 = icmp eq i64 %100, %22
  br i1 %101, label %61, label %62
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIfE9copy_fromIdEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %6 = load ptr, ptr %5, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %6, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = load i64, ptr %6, align 8, !tbaa !34
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 3
  %15 = and i64 %14, 34359738360
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %69, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  %20 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !92
  %22 = lshr exact i64 %15, 3
  %23 = icmp ult i64 %15, 128
  br i1 %23, label %55, label %24

24:                                               ; preds = %17
  %25 = and i64 %22, 4294967280
  %26 = and i64 %22, 15
  %27 = shl nuw nsw i64 %25, 2
  %28 = getelementptr i8, ptr %21, i64 %27
  %29 = shl nuw nsw i64 %25, 3
  %30 = getelementptr i8, ptr %19, i64 %29
  br label %31

31:                                               ; preds = %31, %24
  %32 = phi i64 [ 0, %24 ], [ %51, %31 ]
  %33 = shl i64 %32, 2
  %34 = getelementptr i8, ptr %21, i64 %33
  %35 = shl i64 %32, 3
  %36 = getelementptr i8, ptr %19, i64 %35
  %37 = load <4 x double>, ptr %36, align 8, !tbaa !30
  %38 = getelementptr double, ptr %36, i64 4
  %39 = load <4 x double>, ptr %38, align 8, !tbaa !30
  %40 = getelementptr double, ptr %36, i64 8
  %41 = load <4 x double>, ptr %40, align 8, !tbaa !30
  %42 = getelementptr double, ptr %36, i64 12
  %43 = load <4 x double>, ptr %42, align 8, !tbaa !30
  %44 = fptrunc <4 x double> %37 to <4 x float>
  %45 = fptrunc <4 x double> %39 to <4 x float>
  %46 = fptrunc <4 x double> %41 to <4 x float>
  %47 = fptrunc <4 x double> %43 to <4 x float>
  store <4 x float> %44, ptr %34, align 4, !tbaa !95
  %48 = getelementptr float, ptr %34, i64 4
  store <4 x float> %45, ptr %48, align 4, !tbaa !95
  %49 = getelementptr float, ptr %34, i64 8
  store <4 x float> %46, ptr %49, align 4, !tbaa !95
  %50 = getelementptr float, ptr %34, i64 12
  store <4 x float> %47, ptr %50, align 4, !tbaa !95
  %51 = add nuw i64 %32, 16
  %52 = icmp eq i64 %51, %25
  br i1 %52, label %53, label %31, !llvm.loop !178

53:                                               ; preds = %31
  %54 = icmp eq i64 %22, %25
  br i1 %54, label %69, label %55

55:                                               ; preds = %17, %53
  %56 = phi i64 [ %22, %17 ], [ %26, %53 ]
  %57 = phi ptr [ %21, %17 ], [ %28, %53 ]
  %58 = phi ptr [ %19, %17 ], [ %30, %53 ]
  br label %59

59:                                               ; preds = %55, %59
  %60 = phi i64 [ %67, %59 ], [ %56, %55 ]
  %61 = phi ptr [ %66, %59 ], [ %57, %55 ]
  %62 = phi ptr [ %65, %59 ], [ %58, %55 ]
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = fptrunc double %63 to float
  store float %64, ptr %61, align 4, !tbaa !95
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = getelementptr inbounds float, ptr %61, i64 1
  %67 = add nsw i64 %60, -1
  %68 = icmp ugt i64 %60, 1
  br i1 %68, label %59, label %69, !llvm.loop !179

69:                                               ; preds = %59, %53, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE9copy_fromIdEEvRKNS_10FullMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(92) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !92
  %5 = icmp eq ptr %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %6
  %21 = shl nuw nsw i64 %18, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %4, i8 0, i64 %21, i1 false), !tbaa !95
  br label %22

22:                                               ; preds = %2, %6, %20
  %23 = getelementptr inbounds %"class.dealii::TableBase", ptr %1, i64 0, i32 3
  %24 = load i32, ptr %23, align 4, !tbaa !47
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.dealii::TableBase", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %28 = getelementptr inbounds %"class.dealii::TableBase", ptr %1, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %30 = load i32, ptr %27, align 8, !tbaa !47
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %26, %40
  %33 = phi i32 [ %41, %40 ], [ %24, %26 ]
  %34 = phi i32 [ %42, %40 ], [ %30, %26 ]
  %35 = phi i32 [ %43, %40 ], [ 0, %26 ]
  %36 = icmp eq i32 %34, 0
  br i1 %36, label %40, label %45

37:                                               ; preds = %40, %26, %22
  ret void

38:                                               ; preds = %64
  %39 = load i32, ptr %23, align 4, !tbaa !47
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i32 [ %39, %38 ], [ %33, %32 ]
  %42 = phi i32 [ %66, %38 ], [ 0, %32 ]
  %43 = add nuw i32 %35, 1
  %44 = icmp ult i32 %43, %41
  br i1 %44, label %32, label %37, !llvm.loop !180

45:                                               ; preds = %32, %64
  %46 = phi i32 [ %66, %64 ], [ %34, %32 ]
  %47 = phi i32 [ %65, %64 ], [ 0, %32 ]
  %48 = load ptr, ptr %28, align 8, !tbaa !157
  %49 = mul i32 %46, %35
  %50 = add i32 %49, %47
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds double, ptr %48, i64 %51
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = fcmp une double %53, 0.000000e+00
  br i1 %54, label %55, label %64

55:                                               ; preds = %45
  %56 = load ptr, ptr %29, align 8, !tbaa !8
  %57 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %56, i32 noundef %35, i32 noundef %47)
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = fptrunc double %53 to float
  %61 = load ptr, ptr %3, align 8, !tbaa !92
  %62 = zext i32 %57 to i64
  %63 = getelementptr inbounds float, ptr %61, i64 %62
  store float %60, ptr %63, align 4, !tbaa !95
  br label %64

64:                                               ; preds = %59, %55, %45
  %65 = add nuw i32 %47, 1
  %66 = load i32, ptr %27, align 8, !tbaa !47
  %67 = icmp ult i32 %65, %66
  br i1 %67, label %45, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3addIdEEvfRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, float noundef %1, ptr noundef nonnull align 8 dereferenceable(36) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !92
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, ptr %9, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = load i64, ptr %9, align 8, !tbaa !34
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds float, ptr %5, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %92, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %2, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !13
  %23 = fpext float %1 to double
  %24 = add nuw nsw i64 %17, 4611686018427387903
  %25 = and i64 %24, 4611686018427387903
  %26 = add nuw nsw i64 %25, 1
  %27 = icmp ult i64 %25, 15
  br i1 %27, label %78, label %28

28:                                               ; preds = %20
  %29 = and i64 %26, 9223372036854775792
  %30 = shl i64 %29, 2
  %31 = getelementptr i8, ptr %5, i64 %30
  %32 = shl i64 %29, 3
  %33 = getelementptr i8, ptr %22, i64 %32
  %34 = insertelement <4 x double> poison, double %23, i64 0
  %35 = shufflevector <4 x double> %34, <4 x double> poison, <4 x i32> zeroinitializer
  %36 = insertelement <4 x double> poison, double %23, i64 0
  %37 = shufflevector <4 x double> %36, <4 x double> poison, <4 x i32> zeroinitializer
  %38 = insertelement <4 x double> poison, double %23, i64 0
  %39 = shufflevector <4 x double> %38, <4 x double> poison, <4 x i32> zeroinitializer
  %40 = insertelement <4 x double> poison, double %23, i64 0
  %41 = shufflevector <4 x double> %40, <4 x double> poison, <4 x i32> zeroinitializer
  br label %42

42:                                               ; preds = %42, %28
  %43 = phi i64 [ 0, %28 ], [ %74, %42 ]
  %44 = shl i64 %43, 2
  %45 = getelementptr i8, ptr %5, i64 %44
  %46 = shl i64 %43, 3
  %47 = getelementptr i8, ptr %22, i64 %46
  %48 = load <4 x double>, ptr %47, align 8, !tbaa !30
  %49 = getelementptr double, ptr %47, i64 4
  %50 = load <4 x double>, ptr %49, align 8, !tbaa !30
  %51 = getelementptr double, ptr %47, i64 8
  %52 = load <4 x double>, ptr %51, align 8, !tbaa !30
  %53 = getelementptr double, ptr %47, i64 12
  %54 = load <4 x double>, ptr %53, align 8, !tbaa !30
  %55 = load <4 x float>, ptr %45, align 4, !tbaa !95
  %56 = getelementptr float, ptr %45, i64 4
  %57 = load <4 x float>, ptr %56, align 4, !tbaa !95
  %58 = getelementptr float, ptr %45, i64 8
  %59 = load <4 x float>, ptr %58, align 4, !tbaa !95
  %60 = getelementptr float, ptr %45, i64 12
  %61 = load <4 x float>, ptr %60, align 4, !tbaa !95
  %62 = fpext <4 x float> %55 to <4 x double>
  %63 = fpext <4 x float> %57 to <4 x double>
  %64 = fpext <4 x float> %59 to <4 x double>
  %65 = fpext <4 x float> %61 to <4 x double>
  %66 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %35, <4 x double> %48, <4 x double> %62)
  %67 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %37, <4 x double> %50, <4 x double> %63)
  %68 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %39, <4 x double> %52, <4 x double> %64)
  %69 = tail call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %41, <4 x double> %54, <4 x double> %65)
  %70 = fptrunc <4 x double> %66 to <4 x float>
  %71 = fptrunc <4 x double> %67 to <4 x float>
  %72 = fptrunc <4 x double> %68 to <4 x float>
  %73 = fptrunc <4 x double> %69 to <4 x float>
  store <4 x float> %70, ptr %45, align 4, !tbaa !95
  store <4 x float> %71, ptr %56, align 4, !tbaa !95
  store <4 x float> %72, ptr %58, align 4, !tbaa !95
  store <4 x float> %73, ptr %60, align 4, !tbaa !95
  %74 = add nuw i64 %43, 16
  %75 = icmp eq i64 %74, %29
  br i1 %75, label %76, label %42, !llvm.loop !181

76:                                               ; preds = %42
  %77 = icmp eq i64 %26, %29
  br i1 %77, label %92, label %78

78:                                               ; preds = %20, %76
  %79 = phi ptr [ %5, %20 ], [ %31, %76 ]
  %80 = phi ptr [ %22, %20 ], [ %33, %76 ]
  br label %81

81:                                               ; preds = %78, %81
  %82 = phi ptr [ %86, %81 ], [ %79, %78 ]
  %83 = phi ptr [ %84, %81 ], [ %80, %78 ]
  %84 = getelementptr inbounds double, ptr %83, i64 1
  %85 = load double, ptr %83, align 8, !tbaa !30
  %86 = getelementptr inbounds float, ptr %82, i64 1
  %87 = load float, ptr %82, align 4, !tbaa !95
  %88 = fpext float %87 to double
  %89 = tail call double @llvm.fmuladd.f64(double %23, double %85, double %88)
  %90 = fptrunc double %89 to float
  store float %90, ptr %82, align 4, !tbaa !95
  %91 = icmp eq ptr %86, %18
  br i1 %91, label %92, label %81, !llvm.loop !182

92:                                               ; preds = %81, %76, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5, i1 noundef zeroext %6) local_unnamed_addr #0 comdat align 2 {
  br i1 %6, label %11, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !8
  br label %156

11:                                               ; preds = %7
  %12 = shl i32 %2, 3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = add i32 %1, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i64, ptr %16, i64 %18
  %20 = load i64, ptr %19, align 8, !tbaa !34
  %21 = zext i32 %1 to i64
  %22 = getelementptr inbounds i64, ptr %16, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !34
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32
  %26 = icmp ugt i32 %12, %25
  br i1 %26, label %27, label %156

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 11
  %29 = load i8, ptr %28, align 1, !tbaa !43, !range !44, !noundef !45
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = getelementptr inbounds i32, ptr %32, i64 %23
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !92
  %36 = getelementptr inbounds float, ptr %35, i64 %23
  br i1 %30, label %130, label %37

37:                                               ; preds = %27
  %38 = ptrtoint ptr %3 to i64
  %39 = icmp eq i32 %2, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %37
  %41 = zext i32 %2 to i64
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi ptr [ %3, %40 ], [ %53, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %52, %42 ]
  %45 = lshr i64 %44, 1
  %46 = getelementptr inbounds i32, ptr %43, i64 %45
  %47 = load i32, ptr %46, align 4, !tbaa !47
  %48 = icmp ult i32 %47, %1
  %49 = getelementptr inbounds i32, ptr %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add nsw i64 %44, %50
  %52 = select i1 %48, i64 %51, i64 %45
  %53 = select i1 %48, ptr %49, ptr %43
  %54 = icmp sgt i64 %52, 0
  br i1 %54, label %42, label %55

55:                                               ; preds = %42
  %56 = ptrtoint ptr %53 to i64
  br label %57

57:                                               ; preds = %55, %37
  %58 = phi i64 [ %56, %55 ], [ %38, %37 ]
  %59 = phi ptr [ %53, %55 ], [ %3, %37 ]
  %60 = sub i64 %58, %38
  %61 = ashr exact i64 %60, 2
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, %2
  br i1 %63, label %75, label %64

64:                                               ; preds = %57
  %65 = load i32, ptr %59, align 4, !tbaa !47
  %66 = icmp eq i32 %65, %1
  br i1 %66, label %67, label %75

67:                                               ; preds = %64
  %68 = getelementptr inbounds double, ptr %4, i64 %61
  %69 = load double, ptr %68, align 8, !tbaa !30
  %70 = load float, ptr %36, align 4, !tbaa !95
  %71 = fpext float %70 to double
  %72 = fadd double %69, %71
  %73 = fptrunc double %72 to float
  store float %73, ptr %36, align 4, !tbaa !95
  %74 = add i32 %62, 1
  br label %75

75:                                               ; preds = %67, %64, %57
  %76 = phi i32 [ %74, %67 ], [ %62, %64 ], [ %2, %57 ]
  %77 = icmp eq i32 %62, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %75
  %79 = and i64 %61, 4294967295
  br label %80

80:                                               ; preds = %78, %98
  %81 = phi i64 [ 0, %78 ], [ %106, %98 ]
  %82 = phi i32 [ 1, %78 ], [ %92, %98 ]
  %83 = getelementptr inbounds i32, ptr %3, i64 %81
  %84 = load i32, ptr %83, align 4, !tbaa !47
  br label %91

85:                                               ; preds = %98, %75
  %86 = phi i32 [ 1, %75 ], [ %92, %98 ]
  %87 = icmp ult i32 %76, %2
  br i1 %87, label %88, label %216

88:                                               ; preds = %85
  %89 = zext i32 %76 to i64
  %90 = zext i32 %2 to i64
  br label %108

91:                                               ; preds = %91, %80
  %92 = phi i32 [ %97, %91 ], [ %82, %80 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i32, ptr %33, i64 %93
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = icmp ult i32 %95, %84
  %97 = add i32 %92, 1
  br i1 %96, label %91, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds double, ptr %4, i64 %81
  %100 = load double, ptr %99, align 8, !tbaa !30
  %101 = getelementptr inbounds float, ptr %36, i64 %93
  %102 = load float, ptr %101, align 4, !tbaa !95
  %103 = fpext float %102 to double
  %104 = fadd double %100, %103
  %105 = fptrunc double %104 to float
  store float %105, ptr %101, align 4, !tbaa !95
  %106 = add nuw nsw i64 %81, 1
  %107 = icmp eq i64 %106, %79
  br i1 %107, label %85, label %80

108:                                              ; preds = %88, %120
  %109 = phi i64 [ %89, %88 ], [ %128, %120 ]
  %110 = phi i32 [ %86, %88 ], [ %114, %120 ]
  %111 = getelementptr inbounds i32, ptr %3, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !47
  br label %113

113:                                              ; preds = %113, %108
  %114 = phi i32 [ %119, %113 ], [ %110, %108 ]
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i32, ptr %33, i64 %115
  %117 = load i32, ptr %116, align 4, !tbaa !47
  %118 = icmp ult i32 %117, %112
  %119 = add i32 %114, 1
  br i1 %118, label %113, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds double, ptr %4, i64 %109
  %122 = load double, ptr %121, align 8, !tbaa !30
  %123 = getelementptr inbounds float, ptr %36, i64 %115
  %124 = load float, ptr %123, align 4, !tbaa !95
  %125 = fpext float %124 to double
  %126 = fadd double %122, %125
  %127 = fptrunc double %126 to float
  store float %127, ptr %123, align 4, !tbaa !95
  %128 = add nuw nsw i64 %109, 1
  %129 = icmp eq i64 %128, %90
  br i1 %129, label %216, label %108

130:                                              ; preds = %27
  %131 = icmp eq i32 %2, 0
  br i1 %131, label %216, label %132

132:                                              ; preds = %130
  %133 = zext i32 %2 to i64
  br label %134

134:                                              ; preds = %132, %146
  %135 = phi i64 [ 0, %132 ], [ %154, %146 ]
  %136 = phi i32 [ 0, %132 ], [ %140, %146 ]
  %137 = getelementptr inbounds i32, ptr %3, i64 %135
  %138 = load i32, ptr %137, align 4, !tbaa !47
  br label %139

139:                                              ; preds = %139, %134
  %140 = phi i32 [ %145, %139 ], [ %136, %134 ]
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i32, ptr %33, i64 %141
  %143 = load i32, ptr %142, align 4, !tbaa !47
  %144 = icmp ult i32 %143, %138
  %145 = add i32 %140, 1
  br i1 %144, label %139, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds double, ptr %4, i64 %135
  %148 = load double, ptr %147, align 8, !tbaa !30
  %149 = getelementptr inbounds float, ptr %36, i64 %141
  %150 = load float, ptr %149, align 4, !tbaa !95
  %151 = fpext float %150 to double
  %152 = fadd double %148, %151
  %153 = fptrunc double %152 to float
  store float %153, ptr %149, align 4, !tbaa !95
  %154 = add nuw nsw i64 %135, 1
  %155 = icmp eq i64 %154, %133
  br i1 %155, label %216, label %134

156:                                              ; preds = %8, %11
  %157 = phi ptr [ %10, %8 ], [ %14, %11 ]
  %158 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %159 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %157, i64 0, i32 9
  %160 = load ptr, ptr %159, align 8, !tbaa !46
  %161 = icmp eq i32 %2, 0
  br i1 %161, label %216, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %157, i64 0, i32 8
  %164 = load ptr, ptr %163, align 8, !tbaa !32
  %165 = zext i32 %1 to i64
  %166 = getelementptr inbounds i64, ptr %164, i64 %165
  %167 = load i64, ptr %166, align 8, !tbaa !34
  %168 = trunc i64 %167 to i32
  %169 = add i32 %1, 1
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %172 = zext i32 %2 to i64
  br label %173

173:                                              ; preds = %162, %212
  %174 = phi i64 [ 0, %162 ], [ %214, %212 ]
  %175 = phi i32 [ %168, %162 ], [ %213, %212 ]
  %176 = getelementptr inbounds double, ptr %4, i64 %174
  %177 = load double, ptr %176, align 8, !tbaa !30
  %178 = fptrunc double %177 to float
  %179 = fcmp oeq float %178, 0.000000e+00
  %180 = and i1 %179, %5
  br i1 %180, label %212, label %181

181:                                              ; preds = %173
  %182 = zext i32 %175 to i64
  %183 = load ptr, ptr %158, align 8, !tbaa !8
  %184 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %183, i64 0, i32 8
  %185 = load ptr, ptr %184, align 8, !tbaa !32
  %186 = getelementptr inbounds i64, ptr %185, i64 %170
  %187 = load i64, ptr %186, align 8, !tbaa !34
  %188 = icmp eq i64 %187, %182
  br i1 %188, label %189, label %192

189:                                              ; preds = %181
  %190 = getelementptr inbounds i32, ptr %3, i64 %174
  %191 = load i32, ptr %190, align 4, !tbaa !47
  br label %198

192:                                              ; preds = %181
  %193 = getelementptr inbounds i32, ptr %160, i64 %182
  %194 = load i32, ptr %193, align 4, !tbaa !47
  %195 = getelementptr inbounds i32, ptr %3, i64 %174
  %196 = load i32, ptr %195, align 4, !tbaa !47
  %197 = icmp eq i32 %194, %196
  br i1 %197, label %204, label %198

198:                                              ; preds = %189, %192
  %199 = phi i32 [ %191, %189 ], [ %196, %192 ]
  %200 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %183, i32 noundef %1, i32 noundef %199)
  %201 = icmp eq i32 %200, -1
  br i1 %201, label %212, label %202

202:                                              ; preds = %198
  %203 = zext i32 %200 to i64
  br label %204

204:                                              ; preds = %202, %192
  %205 = phi i64 [ %203, %202 ], [ %182, %192 ]
  %206 = phi i32 [ %200, %202 ], [ %175, %192 ]
  %207 = load ptr, ptr %171, align 8, !tbaa !92
  %208 = getelementptr inbounds float, ptr %207, i64 %205
  %209 = load float, ptr %208, align 4, !tbaa !95
  %210 = fadd float %209, %178
  store float %210, ptr %208, align 4, !tbaa !95
  %211 = add i32 %206, 1
  br label %212

212:                                              ; preds = %198, %173, %204
  %213 = phi i32 [ %211, %204 ], [ %175, %173 ], [ -1, %198 ]
  %214 = add nuw nsw i64 %174, 1
  %215 = icmp eq i64 %214, %172
  br i1 %215, label %216, label %173

216:                                              ; preds = %212, %120, %146, %156, %85, %130
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3setIdEEvjjPKjPKT_b(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 9
  %10 = load ptr, ptr %9, align 8, !tbaa !46
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %61, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = zext i32 %1 to i64
  %16 = getelementptr inbounds i64, ptr %14, i64 %15
  %17 = load i64, ptr %16, align 8, !tbaa !34
  %18 = trunc i64 %17 to i32
  %19 = add i32 %1, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %22 = zext i32 %2 to i64
  br i1 %5, label %62, label %23

23:                                               ; preds = %12, %57
  %24 = phi i64 [ %59, %57 ], [ 0, %12 ]
  %25 = phi i32 [ %58, %57 ], [ %18, %12 ]
  %26 = getelementptr inbounds double, ptr %4, i64 %24
  %27 = load double, ptr %26, align 8, !tbaa !30
  %28 = fptrunc double %27 to float
  %29 = zext i32 %25 to i64
  %30 = load ptr, ptr %7, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %30, i64 0, i32 8
  %32 = load ptr, ptr %31, align 8, !tbaa !32
  %33 = getelementptr inbounds i64, ptr %32, i64 %20
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = icmp eq i64 %34, %29
  br i1 %35, label %36, label %39

36:                                               ; preds = %23
  %37 = getelementptr inbounds i32, ptr %3, i64 %24
  %38 = load i32, ptr %37, align 4, !tbaa !47
  br label %45

39:                                               ; preds = %23
  %40 = getelementptr inbounds i32, ptr %10, i64 %29
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds i32, ptr %3, i64 %24
  %43 = load i32, ptr %42, align 4, !tbaa !47
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %51, label %45

45:                                               ; preds = %36, %39
  %46 = phi i32 [ %38, %36 ], [ %43, %39 ]
  %47 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %30, i32 noundef %1, i32 noundef %46)
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %57, label %49

49:                                               ; preds = %45
  %50 = zext i32 %47 to i64
  br label %51

51:                                               ; preds = %49, %39
  %52 = phi i64 [ %50, %49 ], [ %29, %39 ]
  %53 = phi i32 [ %47, %49 ], [ %25, %39 ]
  %54 = load ptr, ptr %21, align 8, !tbaa !92
  %55 = getelementptr inbounds float, ptr %54, i64 %52
  store float %28, ptr %55, align 4, !tbaa !95
  %56 = add i32 %53, 1
  br label %57

57:                                               ; preds = %51, %45
  %58 = phi i32 [ %56, %51 ], [ -1, %45 ]
  %59 = add nuw nsw i64 %24, 1
  %60 = icmp eq i64 %59, %22
  br i1 %60, label %61, label %23

61:                                               ; preds = %57, %98, %6
  ret void

62:                                               ; preds = %12, %98
  %63 = phi i64 [ %100, %98 ], [ 0, %12 ]
  %64 = phi i32 [ %99, %98 ], [ %18, %12 ]
  %65 = getelementptr inbounds double, ptr %4, i64 %63
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = fptrunc double %66 to float
  %68 = fcmp oeq float %67, 0.000000e+00
  br i1 %68, label %98, label %69

69:                                               ; preds = %62
  %70 = zext i32 %64 to i64
  %71 = load ptr, ptr %7, align 8, !tbaa !8
  %72 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %71, i64 0, i32 8
  %73 = load ptr, ptr %72, align 8, !tbaa !32
  %74 = getelementptr inbounds i64, ptr %73, i64 %20
  %75 = load i64, ptr %74, align 8, !tbaa !34
  %76 = icmp eq i64 %75, %70
  br i1 %76, label %77, label %80

77:                                               ; preds = %69
  %78 = getelementptr inbounds i32, ptr %3, i64 %63
  %79 = load i32, ptr %78, align 4, !tbaa !47
  br label %86

80:                                               ; preds = %69
  %81 = getelementptr inbounds i32, ptr %10, i64 %70
  %82 = load i32, ptr %81, align 4, !tbaa !47
  %83 = getelementptr inbounds i32, ptr %3, i64 %63
  %84 = load i32, ptr %83, align 4, !tbaa !47
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %77, %80
  %87 = phi i32 [ %79, %77 ], [ %84, %80 ]
  %88 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %71, i32 noundef %1, i32 noundef %87)
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %98, label %90

90:                                               ; preds = %86
  %91 = zext i32 %88 to i64
  br label %92

92:                                               ; preds = %90, %80
  %93 = phi i64 [ %91, %90 ], [ %70, %80 ]
  %94 = phi i32 [ %88, %90 ], [ %64, %80 ]
  %95 = load ptr, ptr %21, align 8, !tbaa !92
  %96 = getelementptr inbounds float, ptr %95, i64 %93
  store float %67, ptr %96, align 4, !tbaa !95
  %97 = add i32 %94, 1
  br label %98

98:                                               ; preds = %86, %62, %92
  %99 = phi i32 [ %97, %92 ], [ %64, %62 ], [ -1, %86 ]
  %100 = add nuw nsw i64 %63, 1
  %101 = icmp eq i64 %100, %22
  br i1 %101, label %61, label %62
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIfE9copy_fromIfEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !92
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !32
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !33
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i64, ptr %8, i64 %11
  %13 = load i64, ptr %12, align 8, !tbaa !34
  %14 = load i64, ptr %8, align 8, !tbaa !34
  %15 = sub i64 %13, %14
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !92
  %18 = shl i64 %15, 2
  %19 = and i64 %18, 17179869180
  %20 = icmp ugt i64 %19, 4
  br i1 %20, label %21, label %22, !prof !154

21:                                               ; preds = %2
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %17, ptr align 4 %4, i64 %19, i1 false)
  br label %26

22:                                               ; preds = %2
  %23 = icmp eq i64 %19, 4
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = load float, ptr %4, align 4, !tbaa !95
  store float %25, ptr %17, align 4, !tbaa !95
  br label %26

26:                                               ; preds = %21, %22, %24
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE9copy_fromIfEEvRKNS_10FullMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(92) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !92
  %5 = icmp eq ptr %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %6
  %21 = shl nuw nsw i64 %18, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %4, i8 0, i64 %21, i1 false), !tbaa !95
  br label %22

22:                                               ; preds = %2, %6, %20
  %23 = getelementptr inbounds %"class.dealii::TableBase.34", ptr %1, i64 0, i32 3
  %24 = load i32, ptr %23, align 4, !tbaa !47
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.dealii::TableBase.34", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %28 = getelementptr inbounds %"class.dealii::TableBase.34", ptr %1, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %30 = load i32, ptr %27, align 8, !tbaa !47
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %26, %40
  %33 = phi i32 [ %41, %40 ], [ %24, %26 ]
  %34 = phi i32 [ %42, %40 ], [ %30, %26 ]
  %35 = phi i32 [ %43, %40 ], [ 0, %26 ]
  %36 = icmp eq i32 %34, 0
  br i1 %36, label %40, label %45

37:                                               ; preds = %40, %26, %22
  ret void

38:                                               ; preds = %63
  %39 = load i32, ptr %23, align 4, !tbaa !47
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i32 [ %39, %38 ], [ %33, %32 ]
  %42 = phi i32 [ %65, %38 ], [ 0, %32 ]
  %43 = add nuw i32 %35, 1
  %44 = icmp ult i32 %43, %41
  br i1 %44, label %32, label %37, !llvm.loop !183

45:                                               ; preds = %32, %63
  %46 = phi i32 [ %65, %63 ], [ %34, %32 ]
  %47 = phi i32 [ %64, %63 ], [ 0, %32 ]
  %48 = load ptr, ptr %28, align 8, !tbaa !171
  %49 = mul i32 %46, %35
  %50 = add i32 %49, %47
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds float, ptr %48, i64 %51
  %53 = load float, ptr %52, align 4, !tbaa !95
  %54 = fcmp une float %53, 0.000000e+00
  br i1 %54, label %55, label %63

55:                                               ; preds = %45
  %56 = load ptr, ptr %29, align 8, !tbaa !8
  %57 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %56, i32 noundef %35, i32 noundef %47)
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = load ptr, ptr %3, align 8, !tbaa !92
  %61 = zext i32 %57 to i64
  %62 = getelementptr inbounds float, ptr %60, i64 %61
  store float %53, ptr %62, align 4, !tbaa !95
  br label %63

63:                                               ; preds = %59, %55, %45
  %64 = add nuw i32 %47, 1
  %65 = load i32, ptr %27, align 8, !tbaa !47
  %66 = icmp ult i32 %64, %65
  br i1 %66, label %45, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3addIfEEvfRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, float noundef %1, ptr noundef nonnull align 8 dereferenceable(36) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !92
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, ptr %9, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = load i64, ptr %9, align 8, !tbaa !34
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds float, ptr %5, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %88, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %2, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !92
  %23 = add nuw nsw i64 %17, 4611686018427387903
  %24 = and i64 %23, 4611686018427387903
  %25 = add nuw nsw i64 %24, 1
  %26 = icmp ult i64 %24, 31
  br i1 %26, label %76, label %27

27:                                               ; preds = %20
  %28 = shl nuw nsw i64 %17, 2
  %29 = getelementptr i8, ptr %5, i64 %28
  %30 = getelementptr i8, ptr %22, i64 %28
  %31 = icmp ult ptr %5, %30
  %32 = icmp ult ptr %22, %29
  %33 = and i1 %31, %32
  br i1 %33, label %76, label %34

34:                                               ; preds = %27
  %35 = and i64 %25, 9223372036854775776
  %36 = shl i64 %35, 2
  %37 = getelementptr i8, ptr %5, i64 %36
  %38 = shl i64 %35, 2
  %39 = getelementptr i8, ptr %22, i64 %38
  %40 = insertelement <8 x float> poison, float %1, i64 0
  %41 = shufflevector <8 x float> %40, <8 x float> poison, <8 x i32> zeroinitializer
  %42 = insertelement <8 x float> poison, float %1, i64 0
  %43 = shufflevector <8 x float> %42, <8 x float> poison, <8 x i32> zeroinitializer
  %44 = insertelement <8 x float> poison, float %1, i64 0
  %45 = shufflevector <8 x float> %44, <8 x float> poison, <8 x i32> zeroinitializer
  %46 = insertelement <8 x float> poison, float %1, i64 0
  %47 = shufflevector <8 x float> %46, <8 x float> poison, <8 x i32> zeroinitializer
  br label %48

48:                                               ; preds = %48, %34
  %49 = phi i64 [ 0, %34 ], [ %72, %48 ]
  %50 = shl i64 %49, 2
  %51 = getelementptr i8, ptr %5, i64 %50
  %52 = shl i64 %49, 2
  %53 = getelementptr i8, ptr %22, i64 %52
  %54 = load <8 x float>, ptr %53, align 4, !tbaa !95, !alias.scope !184
  %55 = getelementptr float, ptr %53, i64 8
  %56 = load <8 x float>, ptr %55, align 4, !tbaa !95, !alias.scope !184
  %57 = getelementptr float, ptr %53, i64 16
  %58 = load <8 x float>, ptr %57, align 4, !tbaa !95, !alias.scope !184
  %59 = getelementptr float, ptr %53, i64 24
  %60 = load <8 x float>, ptr %59, align 4, !tbaa !95, !alias.scope !184
  %61 = load <8 x float>, ptr %51, align 4, !tbaa !95, !alias.scope !187, !noalias !184
  %62 = getelementptr float, ptr %51, i64 8
  %63 = load <8 x float>, ptr %62, align 4, !tbaa !95, !alias.scope !187, !noalias !184
  %64 = getelementptr float, ptr %51, i64 16
  %65 = load <8 x float>, ptr %64, align 4, !tbaa !95, !alias.scope !187, !noalias !184
  %66 = getelementptr float, ptr %51, i64 24
  %67 = load <8 x float>, ptr %66, align 4, !tbaa !95, !alias.scope !187, !noalias !184
  %68 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %41, <8 x float> %54, <8 x float> %61)
  %69 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %43, <8 x float> %56, <8 x float> %63)
  %70 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %45, <8 x float> %58, <8 x float> %65)
  %71 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %47, <8 x float> %60, <8 x float> %67)
  store <8 x float> %68, ptr %51, align 4, !tbaa !95, !alias.scope !187, !noalias !184
  store <8 x float> %69, ptr %62, align 4, !tbaa !95, !alias.scope !187, !noalias !184
  store <8 x float> %70, ptr %64, align 4, !tbaa !95, !alias.scope !187, !noalias !184
  store <8 x float> %71, ptr %66, align 4, !tbaa !95, !alias.scope !187, !noalias !184
  %72 = add nuw i64 %49, 32
  %73 = icmp eq i64 %72, %35
  br i1 %73, label %74, label %48, !llvm.loop !189

74:                                               ; preds = %48
  %75 = icmp eq i64 %25, %35
  br i1 %75, label %88, label %76

76:                                               ; preds = %27, %20, %74
  %77 = phi ptr [ %5, %27 ], [ %5, %20 ], [ %37, %74 ]
  %78 = phi ptr [ %22, %27 ], [ %22, %20 ], [ %39, %74 ]
  br label %79

79:                                               ; preds = %76, %79
  %80 = phi ptr [ %84, %79 ], [ %77, %76 ]
  %81 = phi ptr [ %82, %79 ], [ %78, %76 ]
  %82 = getelementptr inbounds float, ptr %81, i64 1
  %83 = load float, ptr %81, align 4, !tbaa !95
  %84 = getelementptr inbounds float, ptr %80, i64 1
  %85 = load float, ptr %80, align 4, !tbaa !95
  %86 = tail call float @llvm.fmuladd.f32(float %1, float %83, float %85)
  store float %86, ptr %80, align 4, !tbaa !95
  %87 = icmp eq ptr %84, %18
  br i1 %87, label %88, label %79, !llvm.loop !190

88:                                               ; preds = %79, %74, %3
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fmuladd.f32(float, float, float) #8

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3addIfEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5, i1 noundef zeroext %6) local_unnamed_addr #0 comdat align 2 {
  br i1 %6, label %11, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !8
  br label %255

11:                                               ; preds = %7
  %12 = shl i32 %2, 3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = add i32 %1, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i64, ptr %16, i64 %18
  %20 = load i64, ptr %19, align 8, !tbaa !34
  %21 = zext i32 %1 to i64
  %22 = getelementptr inbounds i64, ptr %16, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !34
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32
  %26 = icmp ugt i32 %12, %25
  br i1 %26, label %27, label %255

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 11
  %29 = load i8, ptr %28, align 1, !tbaa !43, !range !44, !noundef !45
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = getelementptr inbounds i32, ptr %32, i64 %23
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !92
  %36 = getelementptr inbounds float, ptr %35, i64 %23
  br i1 %30, label %209, label %37

37:                                               ; preds = %27
  %38 = ptrtoint ptr %3 to i64
  %39 = icmp eq i32 %2, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %37
  %41 = zext i32 %2 to i64
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi ptr [ %3, %40 ], [ %53, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %52, %42 ]
  %45 = lshr i64 %44, 1
  %46 = getelementptr inbounds i32, ptr %43, i64 %45
  %47 = load i32, ptr %46, align 4, !tbaa !47
  %48 = icmp ult i32 %47, %1
  %49 = getelementptr inbounds i32, ptr %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add nsw i64 %44, %50
  %52 = select i1 %48, i64 %51, i64 %45
  %53 = select i1 %48, ptr %49, ptr %43
  %54 = icmp sgt i64 %52, 0
  br i1 %54, label %42, label %55

55:                                               ; preds = %42
  %56 = ptrtoint ptr %53 to i64
  br label %57

57:                                               ; preds = %55, %37
  %58 = phi i64 [ %56, %55 ], [ %38, %37 ]
  %59 = phi ptr [ %53, %55 ], [ %3, %37 ]
  %60 = sub i64 %58, %38
  %61 = ashr exact i64 %60, 2
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, %2
  br i1 %63, label %73, label %64

64:                                               ; preds = %57
  %65 = load i32, ptr %59, align 4, !tbaa !47
  %66 = icmp eq i32 %65, %1
  br i1 %66, label %67, label %73

67:                                               ; preds = %64
  %68 = getelementptr inbounds float, ptr %4, i64 %61
  %69 = load float, ptr %68, align 4, !tbaa !95
  %70 = load float, ptr %36, align 4, !tbaa !95
  %71 = fadd float %69, %70
  store float %71, ptr %36, align 4, !tbaa !95
  %72 = add i32 %62, 1
  br label %73

73:                                               ; preds = %67, %64, %57
  %74 = phi i32 [ %72, %67 ], [ %62, %64 ], [ %2, %57 ]
  %75 = icmp eq i32 %62, 0
  br i1 %75, label %109, label %76

76:                                               ; preds = %73
  %77 = and i64 %61, 4294967295
  %78 = and i64 %61, 1
  %79 = icmp eq i64 %77, 1
  br i1 %79, label %88, label %80

80:                                               ; preds = %76
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %164, %80
  %83 = phi i64 [ 0, %80 ], [ %170, %164 ]
  %84 = phi i32 [ 1, %80 ], [ %158, %164 ]
  %85 = phi i64 [ 0, %80 ], [ %171, %164 ]
  %86 = getelementptr inbounds i32, ptr %3, i64 %83
  %87 = load i32, ptr %86, align 4, !tbaa !47
  br label %141

88:                                               ; preds = %164, %76
  %89 = phi i32 [ undef, %76 ], [ %158, %164 ]
  %90 = phi i64 [ 0, %76 ], [ %170, %164 ]
  %91 = phi i32 [ 1, %76 ], [ %158, %164 ]
  %92 = icmp eq i64 %78, 0
  br i1 %92, label %109, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds i32, ptr %3, i64 %90
  %95 = load i32, ptr %94, align 4, !tbaa !47
  br label %96

96:                                               ; preds = %96, %93
  %97 = phi i32 [ %102, %96 ], [ %91, %93 ]
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %33, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ult i32 %100, %95
  %102 = add i32 %97, 1
  br i1 %101, label %96, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds float, ptr %4, i64 %90
  %105 = load float, ptr %104, align 4, !tbaa !95
  %106 = getelementptr inbounds float, ptr %36, i64 %98
  %107 = load float, ptr %106, align 4, !tbaa !95
  %108 = fadd float %105, %107
  store float %108, ptr %106, align 4, !tbaa !95
  br label %109

109:                                              ; preds = %103, %88, %73
  %110 = phi i32 [ 1, %73 ], [ %89, %88 ], [ %97, %103 ]
  %111 = icmp ult i32 %74, %2
  br i1 %111, label %112, label %334

112:                                              ; preds = %109
  %113 = zext i32 %74 to i64
  %114 = zext i32 %2 to i64
  %115 = sub nsw i64 %114, %113
  %116 = xor i64 %113, -1
  %117 = and i64 %115, 1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %136, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds i32, ptr %3, i64 %113
  %121 = load i32, ptr %120, align 4, !tbaa !47
  br label %122

122:                                              ; preds = %122, %119
  %123 = phi i32 [ %128, %122 ], [ %110, %119 ]
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds i32, ptr %33, i64 %124
  %126 = load i32, ptr %125, align 4, !tbaa !47
  %127 = icmp ult i32 %126, %121
  %128 = add i32 %123, 1
  br i1 %127, label %122, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds float, ptr %4, i64 %113
  %131 = load float, ptr %130, align 4, !tbaa !95
  %132 = getelementptr inbounds float, ptr %36, i64 %124
  %133 = load float, ptr %132, align 4, !tbaa !95
  %134 = fadd float %131, %133
  store float %134, ptr %132, align 4, !tbaa !95
  %135 = add nuw nsw i64 %113, 1
  br label %136

136:                                              ; preds = %129, %112
  %137 = phi i64 [ %113, %112 ], [ %135, %129 ]
  %138 = phi i32 [ %110, %112 ], [ %123, %129 ]
  %139 = sub nsw i64 0, %114
  %140 = icmp eq i64 %116, %139
  br i1 %140, label %334, label %173

141:                                              ; preds = %141, %82
  %142 = phi i32 [ %147, %141 ], [ %84, %82 ]
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds i32, ptr %33, i64 %143
  %145 = load i32, ptr %144, align 4, !tbaa !47
  %146 = icmp ult i32 %145, %87
  %147 = add i32 %142, 1
  br i1 %146, label %141, label %148

148:                                              ; preds = %141
  %149 = getelementptr inbounds float, ptr %4, i64 %83
  %150 = load float, ptr %149, align 4, !tbaa !95
  %151 = getelementptr inbounds float, ptr %36, i64 %143
  %152 = load float, ptr %151, align 4, !tbaa !95
  %153 = fadd float %150, %152
  store float %153, ptr %151, align 4, !tbaa !95
  %154 = or i64 %83, 1
  %155 = getelementptr inbounds i32, ptr %3, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !47
  br label %157

157:                                              ; preds = %157, %148
  %158 = phi i32 [ %163, %157 ], [ %142, %148 ]
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds i32, ptr %33, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !47
  %162 = icmp ult i32 %161, %156
  %163 = add i32 %158, 1
  br i1 %162, label %157, label %164

164:                                              ; preds = %157
  %165 = getelementptr inbounds float, ptr %4, i64 %154
  %166 = load float, ptr %165, align 4, !tbaa !95
  %167 = getelementptr inbounds float, ptr %36, i64 %159
  %168 = load float, ptr %167, align 4, !tbaa !95
  %169 = fadd float %166, %168
  store float %169, ptr %167, align 4, !tbaa !95
  %170 = add nuw nsw i64 %83, 2
  %171 = add i64 %85, 2
  %172 = icmp eq i64 %171, %81
  br i1 %172, label %88, label %82

173:                                              ; preds = %136, %201
  %174 = phi i64 [ %207, %201 ], [ %137, %136 ]
  %175 = phi i32 [ %195, %201 ], [ %138, %136 ]
  %176 = getelementptr inbounds i32, ptr %3, i64 %174
  %177 = load i32, ptr %176, align 4, !tbaa !47
  br label %178

178:                                              ; preds = %178, %173
  %179 = phi i32 [ %184, %178 ], [ %175, %173 ]
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds i32, ptr %33, i64 %180
  %182 = load i32, ptr %181, align 4, !tbaa !47
  %183 = icmp ult i32 %182, %177
  %184 = add i32 %179, 1
  br i1 %183, label %178, label %185

185:                                              ; preds = %178
  %186 = getelementptr inbounds float, ptr %4, i64 %174
  %187 = load float, ptr %186, align 4, !tbaa !95
  %188 = getelementptr inbounds float, ptr %36, i64 %180
  %189 = load float, ptr %188, align 4, !tbaa !95
  %190 = fadd float %187, %189
  store float %190, ptr %188, align 4, !tbaa !95
  %191 = add nuw nsw i64 %174, 1
  %192 = getelementptr inbounds i32, ptr %3, i64 %191
  %193 = load i32, ptr %192, align 4, !tbaa !47
  br label %194

194:                                              ; preds = %194, %185
  %195 = phi i32 [ %200, %194 ], [ %179, %185 ]
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds i32, ptr %33, i64 %196
  %198 = load i32, ptr %197, align 4, !tbaa !47
  %199 = icmp ult i32 %198, %193
  %200 = add i32 %195, 1
  br i1 %199, label %194, label %201

201:                                              ; preds = %194
  %202 = getelementptr inbounds float, ptr %4, i64 %191
  %203 = load float, ptr %202, align 4, !tbaa !95
  %204 = getelementptr inbounds float, ptr %36, i64 %196
  %205 = load float, ptr %204, align 4, !tbaa !95
  %206 = fadd float %203, %205
  store float %206, ptr %204, align 4, !tbaa !95
  %207 = add nuw nsw i64 %174, 2
  %208 = icmp eq i64 %207, %114
  br i1 %208, label %334, label %173

209:                                              ; preds = %27
  %210 = icmp eq i32 %2, 0
  br i1 %210, label %334, label %211

211:                                              ; preds = %209
  %212 = zext i32 %2 to i64
  %213 = and i64 %212, 1
  %214 = icmp eq i32 %2, 1
  br i1 %214, label %314, label %215

215:                                              ; preds = %211
  %216 = and i64 %212, 4294967294
  br label %217

217:                                              ; preds = %246, %215
  %218 = phi i64 [ 0, %215 ], [ %252, %246 ]
  %219 = phi i32 [ 0, %215 ], [ %240, %246 ]
  %220 = phi i64 [ 0, %215 ], [ %253, %246 ]
  %221 = getelementptr inbounds i32, ptr %3, i64 %218
  %222 = load i32, ptr %221, align 4, !tbaa !47
  br label %223

223:                                              ; preds = %223, %217
  %224 = phi i32 [ %229, %223 ], [ %219, %217 ]
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds i32, ptr %33, i64 %225
  %227 = load i32, ptr %226, align 4, !tbaa !47
  %228 = icmp ult i32 %227, %222
  %229 = add i32 %224, 1
  br i1 %228, label %223, label %230

230:                                              ; preds = %223
  %231 = getelementptr inbounds float, ptr %4, i64 %218
  %232 = load float, ptr %231, align 4, !tbaa !95
  %233 = getelementptr inbounds float, ptr %36, i64 %225
  %234 = load float, ptr %233, align 4, !tbaa !95
  %235 = fadd float %232, %234
  store float %235, ptr %233, align 4, !tbaa !95
  %236 = or i64 %218, 1
  %237 = getelementptr inbounds i32, ptr %3, i64 %236
  %238 = load i32, ptr %237, align 4, !tbaa !47
  br label %239

239:                                              ; preds = %239, %230
  %240 = phi i32 [ %245, %239 ], [ %224, %230 ]
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds i32, ptr %33, i64 %241
  %243 = load i32, ptr %242, align 4, !tbaa !47
  %244 = icmp ult i32 %243, %238
  %245 = add i32 %240, 1
  br i1 %244, label %239, label %246

246:                                              ; preds = %239
  %247 = getelementptr inbounds float, ptr %4, i64 %236
  %248 = load float, ptr %247, align 4, !tbaa !95
  %249 = getelementptr inbounds float, ptr %36, i64 %241
  %250 = load float, ptr %249, align 4, !tbaa !95
  %251 = fadd float %248, %250
  store float %251, ptr %249, align 4, !tbaa !95
  %252 = add nuw nsw i64 %218, 2
  %253 = add i64 %220, 2
  %254 = icmp eq i64 %253, %216
  br i1 %254, label %314, label %217

255:                                              ; preds = %8, %11
  %256 = phi ptr [ %10, %8 ], [ %14, %11 ]
  %257 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %258 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %256, i64 0, i32 9
  %259 = load ptr, ptr %258, align 8, !tbaa !46
  %260 = icmp eq i32 %2, 0
  br i1 %260, label %334, label %261

261:                                              ; preds = %255
  %262 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %256, i64 0, i32 8
  %263 = load ptr, ptr %262, align 8, !tbaa !32
  %264 = zext i32 %1 to i64
  %265 = getelementptr inbounds i64, ptr %263, i64 %264
  %266 = load i64, ptr %265, align 8, !tbaa !34
  %267 = trunc i64 %266 to i32
  %268 = add i32 %1, 1
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %271 = zext i32 %2 to i64
  br label %272

272:                                              ; preds = %261, %310
  %273 = phi i64 [ 0, %261 ], [ %312, %310 ]
  %274 = phi i32 [ %267, %261 ], [ %311, %310 ]
  %275 = getelementptr inbounds float, ptr %4, i64 %273
  %276 = load float, ptr %275, align 4, !tbaa !95
  %277 = fcmp oeq float %276, 0.000000e+00
  %278 = and i1 %277, %5
  br i1 %278, label %310, label %279

279:                                              ; preds = %272
  %280 = zext i32 %274 to i64
  %281 = load ptr, ptr %257, align 8, !tbaa !8
  %282 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %281, i64 0, i32 8
  %283 = load ptr, ptr %282, align 8, !tbaa !32
  %284 = getelementptr inbounds i64, ptr %283, i64 %269
  %285 = load i64, ptr %284, align 8, !tbaa !34
  %286 = icmp eq i64 %285, %280
  br i1 %286, label %287, label %290

287:                                              ; preds = %279
  %288 = getelementptr inbounds i32, ptr %3, i64 %273
  %289 = load i32, ptr %288, align 4, !tbaa !47
  br label %296

290:                                              ; preds = %279
  %291 = getelementptr inbounds i32, ptr %259, i64 %280
  %292 = load i32, ptr %291, align 4, !tbaa !47
  %293 = getelementptr inbounds i32, ptr %3, i64 %273
  %294 = load i32, ptr %293, align 4, !tbaa !47
  %295 = icmp eq i32 %292, %294
  br i1 %295, label %302, label %296

296:                                              ; preds = %287, %290
  %297 = phi i32 [ %289, %287 ], [ %294, %290 ]
  %298 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %281, i32 noundef %1, i32 noundef %297)
  %299 = icmp eq i32 %298, -1
  br i1 %299, label %310, label %300

300:                                              ; preds = %296
  %301 = zext i32 %298 to i64
  br label %302

302:                                              ; preds = %300, %290
  %303 = phi i64 [ %301, %300 ], [ %280, %290 ]
  %304 = phi i32 [ %298, %300 ], [ %274, %290 ]
  %305 = load ptr, ptr %270, align 8, !tbaa !92
  %306 = getelementptr inbounds float, ptr %305, i64 %303
  %307 = load float, ptr %306, align 4, !tbaa !95
  %308 = fadd float %276, %307
  store float %308, ptr %306, align 4, !tbaa !95
  %309 = add i32 %304, 1
  br label %310

310:                                              ; preds = %296, %272, %302
  %311 = phi i32 [ %309, %302 ], [ %274, %272 ], [ -1, %296 ]
  %312 = add nuw nsw i64 %273, 1
  %313 = icmp eq i64 %312, %271
  br i1 %313, label %334, label %272

314:                                              ; preds = %246, %211
  %315 = phi i64 [ 0, %211 ], [ %252, %246 ]
  %316 = phi i32 [ 0, %211 ], [ %240, %246 ]
  %317 = icmp eq i64 %213, 0
  br i1 %317, label %334, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds i32, ptr %3, i64 %315
  %320 = load i32, ptr %319, align 4, !tbaa !47
  br label %321

321:                                              ; preds = %321, %318
  %322 = phi i32 [ %327, %321 ], [ %316, %318 ]
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds i32, ptr %33, i64 %323
  %325 = load i32, ptr %324, align 4, !tbaa !47
  %326 = icmp ult i32 %325, %320
  %327 = add i32 %322, 1
  br i1 %326, label %321, label %328

328:                                              ; preds = %321
  %329 = getelementptr inbounds float, ptr %4, i64 %315
  %330 = load float, ptr %329, align 4, !tbaa !95
  %331 = getelementptr inbounds float, ptr %36, i64 %323
  %332 = load float, ptr %331, align 4, !tbaa !95
  %333 = fadd float %330, %332
  store float %333, ptr %331, align 4, !tbaa !95
  br label %334

334:                                              ; preds = %310, %136, %201, %328, %314, %255, %109, %209
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3setIfEEvjjPKjPKT_b(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 9
  %10 = load ptr, ptr %9, align 8, !tbaa !46
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %60, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = zext i32 %1 to i64
  %16 = getelementptr inbounds i64, ptr %14, i64 %15
  %17 = load i64, ptr %16, align 8, !tbaa !34
  %18 = trunc i64 %17 to i32
  %19 = add i32 %1, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %22 = zext i32 %2 to i64
  br i1 %5, label %61, label %23

23:                                               ; preds = %12, %56
  %24 = phi i64 [ %58, %56 ], [ 0, %12 ]
  %25 = phi i32 [ %57, %56 ], [ %18, %12 ]
  %26 = getelementptr inbounds float, ptr %4, i64 %24
  %27 = load float, ptr %26, align 4, !tbaa !95
  %28 = zext i32 %25 to i64
  %29 = load ptr, ptr %7, align 8, !tbaa !8
  %30 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %29, i64 0, i32 8
  %31 = load ptr, ptr %30, align 8, !tbaa !32
  %32 = getelementptr inbounds i64, ptr %31, i64 %20
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = icmp eq i64 %33, %28
  br i1 %34, label %35, label %38

35:                                               ; preds = %23
  %36 = getelementptr inbounds i32, ptr %3, i64 %24
  %37 = load i32, ptr %36, align 4, !tbaa !47
  br label %44

38:                                               ; preds = %23
  %39 = getelementptr inbounds i32, ptr %10, i64 %28
  %40 = load i32, ptr %39, align 4, !tbaa !47
  %41 = getelementptr inbounds i32, ptr %3, i64 %24
  %42 = load i32, ptr %41, align 4, !tbaa !47
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %50, label %44

44:                                               ; preds = %35, %38
  %45 = phi i32 [ %37, %35 ], [ %42, %38 ]
  %46 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %29, i32 noundef %1, i32 noundef %45)
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %56, label %48

48:                                               ; preds = %44
  %49 = zext i32 %46 to i64
  br label %50

50:                                               ; preds = %48, %38
  %51 = phi i64 [ %49, %48 ], [ %28, %38 ]
  %52 = phi i32 [ %46, %48 ], [ %25, %38 ]
  %53 = load ptr, ptr %21, align 8, !tbaa !92
  %54 = getelementptr inbounds float, ptr %53, i64 %51
  store float %27, ptr %54, align 4, !tbaa !95
  %55 = add i32 %52, 1
  br label %56

56:                                               ; preds = %50, %44
  %57 = phi i32 [ %55, %50 ], [ -1, %44 ]
  %58 = add nuw nsw i64 %24, 1
  %59 = icmp eq i64 %58, %22
  br i1 %59, label %60, label %23

60:                                               ; preds = %56, %96, %6
  ret void

61:                                               ; preds = %12, %96
  %62 = phi i64 [ %98, %96 ], [ 0, %12 ]
  %63 = phi i32 [ %97, %96 ], [ %18, %12 ]
  %64 = getelementptr inbounds float, ptr %4, i64 %62
  %65 = load float, ptr %64, align 4, !tbaa !95
  %66 = fcmp oeq float %65, 0.000000e+00
  br i1 %66, label %96, label %67

67:                                               ; preds = %61
  %68 = zext i32 %63 to i64
  %69 = load ptr, ptr %7, align 8, !tbaa !8
  %70 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %69, i64 0, i32 8
  %71 = load ptr, ptr %70, align 8, !tbaa !32
  %72 = getelementptr inbounds i64, ptr %71, i64 %20
  %73 = load i64, ptr %72, align 8, !tbaa !34
  %74 = icmp eq i64 %73, %68
  br i1 %74, label %75, label %78

75:                                               ; preds = %67
  %76 = getelementptr inbounds i32, ptr %3, i64 %62
  %77 = load i32, ptr %76, align 4, !tbaa !47
  br label %84

78:                                               ; preds = %67
  %79 = getelementptr inbounds i32, ptr %10, i64 %68
  %80 = load i32, ptr %79, align 4, !tbaa !47
  %81 = getelementptr inbounds i32, ptr %3, i64 %62
  %82 = load i32, ptr %81, align 4, !tbaa !47
  %83 = icmp eq i32 %80, %82
  br i1 %83, label %90, label %84

84:                                               ; preds = %75, %78
  %85 = phi i32 [ %77, %75 ], [ %82, %78 ]
  %86 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %69, i32 noundef %1, i32 noundef %85)
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %96, label %88

88:                                               ; preds = %84
  %89 = zext i32 %86 to i64
  br label %90

90:                                               ; preds = %88, %78
  %91 = phi i64 [ %89, %88 ], [ %68, %78 ]
  %92 = phi i32 [ %86, %88 ], [ %63, %78 ]
  %93 = load ptr, ptr %21, align 8, !tbaa !92
  %94 = getelementptr inbounds float, ptr %93, i64 %91
  store float %65, ptr %94, align 4, !tbaa !95
  %95 = add i32 %92, 1
  br label %96

96:                                               ; preds = %84, %61, %90
  %97 = phi i32 [ %95, %90 ], [ %63, %61 ], [ -1, %84 ]
  %98 = add nuw nsw i64 %62, 1
  %99 = icmp eq i64 %98, %22
  br i1 %99, label %60, label %61
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIfE9copy_fromIeEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %6 = load ptr, ptr %5, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %6, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = load i64, ptr %6, align 8, !tbaa !34
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 4
  %15 = and i64 %14, 68719476720
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %1, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !125
  %20 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !92
  %22 = lshr exact i64 %15, 4
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi i64 [ %31, %23 ], [ %22, %17 ]
  %25 = phi ptr [ %30, %23 ], [ %21, %17 ]
  %26 = phi ptr [ %29, %23 ], [ %19, %17 ]
  %27 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %28 = fptrunc x86_fp80 %27 to float
  store float %28, ptr %25, align 4, !tbaa !95
  %29 = getelementptr inbounds x86_fp80, ptr %26, i64 1
  %30 = getelementptr inbounds float, ptr %25, i64 1
  %31 = add nsw i64 %24, -1
  %32 = icmp ugt i64 %24, 1
  br i1 %32, label %23, label %33

33:                                               ; preds = %23, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE9copy_fromIeEEvRKNS_10FullMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(92) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !92
  %5 = icmp eq ptr %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %6
  %21 = shl nuw nsw i64 %18, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %4, i8 0, i64 %21, i1 false), !tbaa !95
  br label %22

22:                                               ; preds = %2, %6, %20
  %23 = getelementptr inbounds %"class.dealii::TableBase.40", ptr %1, i64 0, i32 3
  %24 = load i32, ptr %23, align 4, !tbaa !47
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.dealii::TableBase.40", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %28 = getelementptr inbounds %"class.dealii::TableBase.40", ptr %1, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %30 = load i32, ptr %27, align 8, !tbaa !47
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %26, %40
  %33 = phi i32 [ %41, %40 ], [ %24, %26 ]
  %34 = phi i32 [ %42, %40 ], [ %30, %26 ]
  %35 = phi i32 [ %43, %40 ], [ 0, %26 ]
  %36 = icmp eq i32 %34, 0
  br i1 %36, label %40, label %45

37:                                               ; preds = %40, %26, %22
  ret void

38:                                               ; preds = %64
  %39 = load i32, ptr %23, align 4, !tbaa !47
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i32 [ %39, %38 ], [ %33, %32 ]
  %42 = phi i32 [ %66, %38 ], [ 0, %32 ]
  %43 = add nuw i32 %35, 1
  %44 = icmp ult i32 %43, %41
  br i1 %44, label %32, label %37, !llvm.loop !191

45:                                               ; preds = %32, %64
  %46 = phi i32 [ %66, %64 ], [ %34, %32 ]
  %47 = phi i32 [ %65, %64 ], [ 0, %32 ]
  %48 = load ptr, ptr %28, align 8, !tbaa !176
  %49 = mul i32 %46, %35
  %50 = add i32 %49, %47
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds x86_fp80, ptr %48, i64 %51
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = fcmp une x86_fp80 %53, 0xK00000000000000000000
  br i1 %54, label %55, label %64

55:                                               ; preds = %45
  %56 = load ptr, ptr %29, align 8, !tbaa !8
  %57 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %56, i32 noundef %35, i32 noundef %47)
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = fptrunc x86_fp80 %53 to float
  %61 = load ptr, ptr %3, align 8, !tbaa !92
  %62 = zext i32 %57 to i64
  %63 = getelementptr inbounds float, ptr %61, i64 %62
  store float %60, ptr %63, align 4, !tbaa !95
  br label %64

64:                                               ; preds = %59, %55, %45
  %65 = add nuw i32 %47, 1
  %66 = load i32, ptr %27, align 8, !tbaa !47
  %67 = icmp ult i32 %65, %66
  br i1 %67, label %45, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3addIeEEvfRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, float noundef %1, ptr noundef nonnull align 8 dereferenceable(36) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !92
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, ptr %9, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = load i64, ptr %9, align 8, !tbaa !34
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds float, ptr %5, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %2, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !125
  %23 = fpext float %1 to x86_fp80
  br label %24

24:                                               ; preds = %20, %24
  %25 = phi ptr [ %5, %20 ], [ %29, %24 ]
  %26 = phi ptr [ %22, %20 ], [ %27, %24 ]
  %27 = getelementptr inbounds x86_fp80, ptr %26, i64 1
  %28 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %29 = getelementptr inbounds float, ptr %25, i64 1
  %30 = load float, ptr %25, align 4, !tbaa !95
  %31 = fpext float %30 to x86_fp80
  %32 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %23, x86_fp80 %28, x86_fp80 %31)
  %33 = fptrunc x86_fp80 %32 to float
  store float %33, ptr %25, align 4, !tbaa !95
  %34 = icmp eq ptr %29, %18
  br i1 %34, label %35, label %24

35:                                               ; preds = %24, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3addIeEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5, i1 noundef zeroext %6) local_unnamed_addr #0 comdat align 2 {
  br i1 %6, label %11, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !8
  br label %156

11:                                               ; preds = %7
  %12 = shl i32 %2, 3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = add i32 %1, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i64, ptr %16, i64 %18
  %20 = load i64, ptr %19, align 8, !tbaa !34
  %21 = zext i32 %1 to i64
  %22 = getelementptr inbounds i64, ptr %16, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !34
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32
  %26 = icmp ugt i32 %12, %25
  br i1 %26, label %27, label %156

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 11
  %29 = load i8, ptr %28, align 1, !tbaa !43, !range !44, !noundef !45
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = getelementptr inbounds i32, ptr %32, i64 %23
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !92
  %36 = getelementptr inbounds float, ptr %35, i64 %23
  br i1 %30, label %130, label %37

37:                                               ; preds = %27
  %38 = ptrtoint ptr %3 to i64
  %39 = icmp eq i32 %2, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %37
  %41 = zext i32 %2 to i64
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi ptr [ %3, %40 ], [ %53, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %52, %42 ]
  %45 = lshr i64 %44, 1
  %46 = getelementptr inbounds i32, ptr %43, i64 %45
  %47 = load i32, ptr %46, align 4, !tbaa !47
  %48 = icmp ult i32 %47, %1
  %49 = getelementptr inbounds i32, ptr %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add nsw i64 %44, %50
  %52 = select i1 %48, i64 %51, i64 %45
  %53 = select i1 %48, ptr %49, ptr %43
  %54 = icmp sgt i64 %52, 0
  br i1 %54, label %42, label %55

55:                                               ; preds = %42
  %56 = ptrtoint ptr %53 to i64
  br label %57

57:                                               ; preds = %55, %37
  %58 = phi i64 [ %56, %55 ], [ %38, %37 ]
  %59 = phi ptr [ %53, %55 ], [ %3, %37 ]
  %60 = sub i64 %58, %38
  %61 = ashr exact i64 %60, 2
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, %2
  br i1 %63, label %75, label %64

64:                                               ; preds = %57
  %65 = load i32, ptr %59, align 4, !tbaa !47
  %66 = icmp eq i32 %65, %1
  br i1 %66, label %67, label %75

67:                                               ; preds = %64
  %68 = getelementptr inbounds x86_fp80, ptr %4, i64 %61
  %69 = load x86_fp80, ptr %68, align 16, !tbaa !128
  %70 = load float, ptr %36, align 4, !tbaa !95
  %71 = fpext float %70 to x86_fp80
  %72 = fadd x86_fp80 %69, %71
  %73 = fptrunc x86_fp80 %72 to float
  store float %73, ptr %36, align 4, !tbaa !95
  %74 = add i32 %62, 1
  br label %75

75:                                               ; preds = %67, %64, %57
  %76 = phi i32 [ %74, %67 ], [ %62, %64 ], [ %2, %57 ]
  %77 = icmp eq i32 %62, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %75
  %79 = and i64 %61, 4294967295
  br label %80

80:                                               ; preds = %78, %98
  %81 = phi i64 [ 0, %78 ], [ %106, %98 ]
  %82 = phi i32 [ 1, %78 ], [ %92, %98 ]
  %83 = getelementptr inbounds i32, ptr %3, i64 %81
  %84 = load i32, ptr %83, align 4, !tbaa !47
  br label %91

85:                                               ; preds = %98, %75
  %86 = phi i32 [ 1, %75 ], [ %92, %98 ]
  %87 = icmp ult i32 %76, %2
  br i1 %87, label %88, label %216

88:                                               ; preds = %85
  %89 = zext i32 %76 to i64
  %90 = zext i32 %2 to i64
  br label %108

91:                                               ; preds = %91, %80
  %92 = phi i32 [ %97, %91 ], [ %82, %80 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i32, ptr %33, i64 %93
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = icmp ult i32 %95, %84
  %97 = add i32 %92, 1
  br i1 %96, label %91, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds x86_fp80, ptr %4, i64 %81
  %100 = load x86_fp80, ptr %99, align 16, !tbaa !128
  %101 = getelementptr inbounds float, ptr %36, i64 %93
  %102 = load float, ptr %101, align 4, !tbaa !95
  %103 = fpext float %102 to x86_fp80
  %104 = fadd x86_fp80 %100, %103
  %105 = fptrunc x86_fp80 %104 to float
  store float %105, ptr %101, align 4, !tbaa !95
  %106 = add nuw nsw i64 %81, 1
  %107 = icmp eq i64 %106, %79
  br i1 %107, label %85, label %80

108:                                              ; preds = %88, %120
  %109 = phi i64 [ %89, %88 ], [ %128, %120 ]
  %110 = phi i32 [ %86, %88 ], [ %114, %120 ]
  %111 = getelementptr inbounds i32, ptr %3, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !47
  br label %113

113:                                              ; preds = %113, %108
  %114 = phi i32 [ %119, %113 ], [ %110, %108 ]
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i32, ptr %33, i64 %115
  %117 = load i32, ptr %116, align 4, !tbaa !47
  %118 = icmp ult i32 %117, %112
  %119 = add i32 %114, 1
  br i1 %118, label %113, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds x86_fp80, ptr %4, i64 %109
  %122 = load x86_fp80, ptr %121, align 16, !tbaa !128
  %123 = getelementptr inbounds float, ptr %36, i64 %115
  %124 = load float, ptr %123, align 4, !tbaa !95
  %125 = fpext float %124 to x86_fp80
  %126 = fadd x86_fp80 %122, %125
  %127 = fptrunc x86_fp80 %126 to float
  store float %127, ptr %123, align 4, !tbaa !95
  %128 = add nuw nsw i64 %109, 1
  %129 = icmp eq i64 %128, %90
  br i1 %129, label %216, label %108

130:                                              ; preds = %27
  %131 = icmp eq i32 %2, 0
  br i1 %131, label %216, label %132

132:                                              ; preds = %130
  %133 = zext i32 %2 to i64
  br label %134

134:                                              ; preds = %132, %146
  %135 = phi i64 [ 0, %132 ], [ %154, %146 ]
  %136 = phi i32 [ 0, %132 ], [ %140, %146 ]
  %137 = getelementptr inbounds i32, ptr %3, i64 %135
  %138 = load i32, ptr %137, align 4, !tbaa !47
  br label %139

139:                                              ; preds = %139, %134
  %140 = phi i32 [ %145, %139 ], [ %136, %134 ]
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i32, ptr %33, i64 %141
  %143 = load i32, ptr %142, align 4, !tbaa !47
  %144 = icmp ult i32 %143, %138
  %145 = add i32 %140, 1
  br i1 %144, label %139, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds x86_fp80, ptr %4, i64 %135
  %148 = load x86_fp80, ptr %147, align 16, !tbaa !128
  %149 = getelementptr inbounds float, ptr %36, i64 %141
  %150 = load float, ptr %149, align 4, !tbaa !95
  %151 = fpext float %150 to x86_fp80
  %152 = fadd x86_fp80 %148, %151
  %153 = fptrunc x86_fp80 %152 to float
  store float %153, ptr %149, align 4, !tbaa !95
  %154 = add nuw nsw i64 %135, 1
  %155 = icmp eq i64 %154, %133
  br i1 %155, label %216, label %134

156:                                              ; preds = %8, %11
  %157 = phi ptr [ %10, %8 ], [ %14, %11 ]
  %158 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %159 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %157, i64 0, i32 9
  %160 = load ptr, ptr %159, align 8, !tbaa !46
  %161 = icmp eq i32 %2, 0
  br i1 %161, label %216, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %157, i64 0, i32 8
  %164 = load ptr, ptr %163, align 8, !tbaa !32
  %165 = zext i32 %1 to i64
  %166 = getelementptr inbounds i64, ptr %164, i64 %165
  %167 = load i64, ptr %166, align 8, !tbaa !34
  %168 = trunc i64 %167 to i32
  %169 = add i32 %1, 1
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %172 = zext i32 %2 to i64
  br label %173

173:                                              ; preds = %162, %212
  %174 = phi i64 [ 0, %162 ], [ %214, %212 ]
  %175 = phi i32 [ %168, %162 ], [ %213, %212 ]
  %176 = getelementptr inbounds x86_fp80, ptr %4, i64 %174
  %177 = load x86_fp80, ptr %176, align 16, !tbaa !128
  %178 = fptrunc x86_fp80 %177 to float
  %179 = fcmp oeq float %178, 0.000000e+00
  %180 = and i1 %179, %5
  br i1 %180, label %212, label %181

181:                                              ; preds = %173
  %182 = zext i32 %175 to i64
  %183 = load ptr, ptr %158, align 8, !tbaa !8
  %184 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %183, i64 0, i32 8
  %185 = load ptr, ptr %184, align 8, !tbaa !32
  %186 = getelementptr inbounds i64, ptr %185, i64 %170
  %187 = load i64, ptr %186, align 8, !tbaa !34
  %188 = icmp eq i64 %187, %182
  br i1 %188, label %189, label %192

189:                                              ; preds = %181
  %190 = getelementptr inbounds i32, ptr %3, i64 %174
  %191 = load i32, ptr %190, align 4, !tbaa !47
  br label %198

192:                                              ; preds = %181
  %193 = getelementptr inbounds i32, ptr %160, i64 %182
  %194 = load i32, ptr %193, align 4, !tbaa !47
  %195 = getelementptr inbounds i32, ptr %3, i64 %174
  %196 = load i32, ptr %195, align 4, !tbaa !47
  %197 = icmp eq i32 %194, %196
  br i1 %197, label %204, label %198

198:                                              ; preds = %189, %192
  %199 = phi i32 [ %191, %189 ], [ %196, %192 ]
  %200 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %183, i32 noundef %1, i32 noundef %199)
  %201 = icmp eq i32 %200, -1
  br i1 %201, label %212, label %202

202:                                              ; preds = %198
  %203 = zext i32 %200 to i64
  br label %204

204:                                              ; preds = %202, %192
  %205 = phi i64 [ %203, %202 ], [ %182, %192 ]
  %206 = phi i32 [ %200, %202 ], [ %175, %192 ]
  %207 = load ptr, ptr %171, align 8, !tbaa !92
  %208 = getelementptr inbounds float, ptr %207, i64 %205
  %209 = load float, ptr %208, align 4, !tbaa !95
  %210 = fadd float %209, %178
  store float %210, ptr %208, align 4, !tbaa !95
  %211 = add i32 %206, 1
  br label %212

212:                                              ; preds = %198, %173, %204
  %213 = phi i32 [ %211, %204 ], [ %175, %173 ], [ -1, %198 ]
  %214 = add nuw nsw i64 %174, 1
  %215 = icmp eq i64 %214, %172
  br i1 %215, label %216, label %173

216:                                              ; preds = %212, %120, %146, %156, %85, %130
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIfE3setIeEEvjjPKjPKT_b(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 9
  %10 = load ptr, ptr %9, align 8, !tbaa !46
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %61, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = zext i32 %1 to i64
  %16 = getelementptr inbounds i64, ptr %14, i64 %15
  %17 = load i64, ptr %16, align 8, !tbaa !34
  %18 = trunc i64 %17 to i32
  %19 = add i32 %1, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %22 = zext i32 %2 to i64
  br i1 %5, label %62, label %23

23:                                               ; preds = %12, %57
  %24 = phi i64 [ %59, %57 ], [ 0, %12 ]
  %25 = phi i32 [ %58, %57 ], [ %18, %12 ]
  %26 = getelementptr inbounds x86_fp80, ptr %4, i64 %24
  %27 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %28 = fptrunc x86_fp80 %27 to float
  %29 = zext i32 %25 to i64
  %30 = load ptr, ptr %7, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %30, i64 0, i32 8
  %32 = load ptr, ptr %31, align 8, !tbaa !32
  %33 = getelementptr inbounds i64, ptr %32, i64 %20
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = icmp eq i64 %34, %29
  br i1 %35, label %36, label %39

36:                                               ; preds = %23
  %37 = getelementptr inbounds i32, ptr %3, i64 %24
  %38 = load i32, ptr %37, align 4, !tbaa !47
  br label %45

39:                                               ; preds = %23
  %40 = getelementptr inbounds i32, ptr %10, i64 %29
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds i32, ptr %3, i64 %24
  %43 = load i32, ptr %42, align 4, !tbaa !47
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %51, label %45

45:                                               ; preds = %36, %39
  %46 = phi i32 [ %38, %36 ], [ %43, %39 ]
  %47 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %30, i32 noundef %1, i32 noundef %46)
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %57, label %49

49:                                               ; preds = %45
  %50 = zext i32 %47 to i64
  br label %51

51:                                               ; preds = %49, %39
  %52 = phi i64 [ %50, %49 ], [ %29, %39 ]
  %53 = phi i32 [ %47, %49 ], [ %25, %39 ]
  %54 = load ptr, ptr %21, align 8, !tbaa !92
  %55 = getelementptr inbounds float, ptr %54, i64 %52
  store float %28, ptr %55, align 4, !tbaa !95
  %56 = add i32 %53, 1
  br label %57

57:                                               ; preds = %51, %45
  %58 = phi i32 [ %56, %51 ], [ -1, %45 ]
  %59 = add nuw nsw i64 %24, 1
  %60 = icmp eq i64 %59, %22
  br i1 %60, label %61, label %23

61:                                               ; preds = %57, %98, %6
  ret void

62:                                               ; preds = %12, %98
  %63 = phi i64 [ %100, %98 ], [ 0, %12 ]
  %64 = phi i32 [ %99, %98 ], [ %18, %12 ]
  %65 = getelementptr inbounds x86_fp80, ptr %4, i64 %63
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  %67 = fptrunc x86_fp80 %66 to float
  %68 = fcmp oeq float %67, 0.000000e+00
  br i1 %68, label %98, label %69

69:                                               ; preds = %62
  %70 = zext i32 %64 to i64
  %71 = load ptr, ptr %7, align 8, !tbaa !8
  %72 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %71, i64 0, i32 8
  %73 = load ptr, ptr %72, align 8, !tbaa !32
  %74 = getelementptr inbounds i64, ptr %73, i64 %20
  %75 = load i64, ptr %74, align 8, !tbaa !34
  %76 = icmp eq i64 %75, %70
  br i1 %76, label %77, label %80

77:                                               ; preds = %69
  %78 = getelementptr inbounds i32, ptr %3, i64 %63
  %79 = load i32, ptr %78, align 4, !tbaa !47
  br label %86

80:                                               ; preds = %69
  %81 = getelementptr inbounds i32, ptr %10, i64 %70
  %82 = load i32, ptr %81, align 4, !tbaa !47
  %83 = getelementptr inbounds i32, ptr %3, i64 %63
  %84 = load i32, ptr %83, align 4, !tbaa !47
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %77, %80
  %87 = phi i32 [ %79, %77 ], [ %84, %80 ]
  %88 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %71, i32 noundef %1, i32 noundef %87)
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %98, label %90

90:                                               ; preds = %86
  %91 = zext i32 %88 to i64
  br label %92

92:                                               ; preds = %90, %80
  %93 = phi i64 [ %91, %90 ], [ %70, %80 ]
  %94 = phi i32 [ %88, %90 ], [ %64, %80 ]
  %95 = load ptr, ptr %21, align 8, !tbaa !92
  %96 = getelementptr inbounds float, ptr %95, i64 %93
  store float %67, ptr %96, align 4, !tbaa !95
  %97 = add i32 %94, 1
  br label %98

98:                                               ; preds = %86, %62, %92
  %99 = phi i32 [ %97, %92 ], [ %64, %62 ], [ -1, %86 ]
  %100 = add nuw nsw i64 %63, 1
  %101 = icmp eq i64 %100, %22
  br i1 %101, label %61, label %62
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIeE9copy_fromIdEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %6 = load ptr, ptr %5, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %6, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = load i64, ptr %6, align 8, !tbaa !34
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 3
  %15 = and i64 %14, 34359738360
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  %20 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !125
  %22 = lshr exact i64 %15, 3
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi i64 [ %31, %23 ], [ %22, %17 ]
  %25 = phi ptr [ %30, %23 ], [ %21, %17 ]
  %26 = phi ptr [ %29, %23 ], [ %19, %17 ]
  %27 = load double, ptr %26, align 8, !tbaa !30
  %28 = fpext double %27 to x86_fp80
  store x86_fp80 %28, ptr %25, align 16, !tbaa !128
  %29 = getelementptr inbounds double, ptr %26, i64 1
  %30 = getelementptr inbounds x86_fp80, ptr %25, i64 1
  %31 = add nsw i64 %24, -1
  %32 = icmp ugt i64 %24, 1
  br i1 %32, label %23, label %33

33:                                               ; preds = %23, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE9copy_fromIdEEvRKNS_10FullMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(92) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !125
  %5 = icmp eq ptr %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds x86_fp80, ptr %4, i64 %18
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi ptr [ %4, %20 ], [ %24, %22 ]
  store x86_fp80 0xK00000000000000000000, ptr %23, align 16, !tbaa !128
  %24 = getelementptr inbounds x86_fp80, ptr %23, i64 1
  %25 = icmp eq ptr %24, %21
  br i1 %25, label %26, label %22

26:                                               ; preds = %22, %2, %6
  %27 = getelementptr inbounds %"class.dealii::TableBase", ptr %1, i64 0, i32 3
  %28 = load i32, ptr %27, align 4, !tbaa !47
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %41, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.dealii::TableBase", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %32 = getelementptr inbounds %"class.dealii::TableBase", ptr %1, i64 0, i32 1
  %33 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %34 = load i32, ptr %31, align 8, !tbaa !47
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %30, %44
  %37 = phi i32 [ %45, %44 ], [ %28, %30 ]
  %38 = phi i32 [ %46, %44 ], [ %34, %30 ]
  %39 = phi i32 [ %47, %44 ], [ 0, %30 ]
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %44, label %49

41:                                               ; preds = %44, %30, %26
  ret void

42:                                               ; preds = %68
  %43 = load i32, ptr %27, align 4, !tbaa !47
  br label %44

44:                                               ; preds = %42, %36
  %45 = phi i32 [ %43, %42 ], [ %37, %36 ]
  %46 = phi i32 [ %70, %42 ], [ 0, %36 ]
  %47 = add nuw i32 %39, 1
  %48 = icmp ult i32 %47, %45
  br i1 %48, label %36, label %41, !llvm.loop !192

49:                                               ; preds = %36, %68
  %50 = phi i32 [ %70, %68 ], [ %38, %36 ]
  %51 = phi i32 [ %69, %68 ], [ 0, %36 ]
  %52 = load ptr, ptr %32, align 8, !tbaa !157
  %53 = mul i32 %50, %39
  %54 = add i32 %53, %51
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds double, ptr %52, i64 %55
  %57 = load double, ptr %56, align 8, !tbaa !30
  %58 = fcmp une double %57, 0.000000e+00
  br i1 %58, label %59, label %68

59:                                               ; preds = %49
  %60 = load ptr, ptr %33, align 8, !tbaa !8
  %61 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %60, i32 noundef %39, i32 noundef %51)
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = fpext double %57 to x86_fp80
  %65 = load ptr, ptr %3, align 8, !tbaa !125
  %66 = zext i32 %61 to i64
  %67 = getelementptr inbounds x86_fp80, ptr %65, i64 %66
  store x86_fp80 %64, ptr %67, align 16, !tbaa !128
  br label %68

68:                                               ; preds = %63, %59, %49
  %69 = add nuw i32 %51, 1
  %70 = load i32, ptr %31, align 8, !tbaa !47
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %49, label %42
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3addIdEEveRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, x86_fp80 noundef %1, ptr noundef nonnull align 8 dereferenceable(36) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !125
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, ptr %9, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = load i64, ptr %9, align 8, !tbaa !34
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds x86_fp80, ptr %5, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %2, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !13
  br label %23

23:                                               ; preds = %20, %23
  %24 = phi ptr [ %29, %23 ], [ %5, %20 ]
  %25 = phi ptr [ %26, %23 ], [ %22, %20 ]
  %26 = getelementptr inbounds double, ptr %25, i64 1
  %27 = load double, ptr %25, align 8, !tbaa !30
  %28 = fpext double %27 to x86_fp80
  %29 = getelementptr inbounds x86_fp80, ptr %24, i64 1
  %30 = load x86_fp80, ptr %24, align 16, !tbaa !128
  %31 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %28, x86_fp80 %30)
  store x86_fp80 %31, ptr %24, align 16, !tbaa !128
  %32 = icmp eq ptr %29, %18
  br i1 %32, label %33, label %23

33:                                               ; preds = %23, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5, i1 noundef zeroext %6) local_unnamed_addr #0 comdat align 2 {
  br i1 %6, label %11, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !8
  br label %152

11:                                               ; preds = %7
  %12 = shl i32 %2, 3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = add i32 %1, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i64, ptr %16, i64 %18
  %20 = load i64, ptr %19, align 8, !tbaa !34
  %21 = zext i32 %1 to i64
  %22 = getelementptr inbounds i64, ptr %16, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !34
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32
  %26 = icmp ugt i32 %12, %25
  br i1 %26, label %27, label %152

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 11
  %29 = load i8, ptr %28, align 1, !tbaa !43, !range !44, !noundef !45
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = getelementptr inbounds i32, ptr %32, i64 %23
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !125
  %36 = getelementptr inbounds x86_fp80, ptr %35, i64 %23
  br i1 %30, label %127, label %37

37:                                               ; preds = %27
  %38 = ptrtoint ptr %3 to i64
  %39 = icmp eq i32 %2, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %37
  %41 = zext i32 %2 to i64
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi ptr [ %3, %40 ], [ %53, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %52, %42 ]
  %45 = lshr i64 %44, 1
  %46 = getelementptr inbounds i32, ptr %43, i64 %45
  %47 = load i32, ptr %46, align 4, !tbaa !47
  %48 = icmp ult i32 %47, %1
  %49 = getelementptr inbounds i32, ptr %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add nsw i64 %44, %50
  %52 = select i1 %48, i64 %51, i64 %45
  %53 = select i1 %48, ptr %49, ptr %43
  %54 = icmp sgt i64 %52, 0
  br i1 %54, label %42, label %55

55:                                               ; preds = %42
  %56 = ptrtoint ptr %53 to i64
  br label %57

57:                                               ; preds = %55, %37
  %58 = phi i64 [ %56, %55 ], [ %38, %37 ]
  %59 = phi ptr [ %53, %55 ], [ %3, %37 ]
  %60 = sub i64 %58, %38
  %61 = ashr exact i64 %60, 2
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, %2
  br i1 %63, label %74, label %64

64:                                               ; preds = %57
  %65 = load i32, ptr %59, align 4, !tbaa !47
  %66 = icmp eq i32 %65, %1
  br i1 %66, label %67, label %74

67:                                               ; preds = %64
  %68 = getelementptr inbounds double, ptr %4, i64 %61
  %69 = load double, ptr %68, align 8, !tbaa !30
  %70 = fpext double %69 to x86_fp80
  %71 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %72 = fadd x86_fp80 %71, %70
  store x86_fp80 %72, ptr %36, align 16, !tbaa !128
  %73 = add i32 %62, 1
  br label %74

74:                                               ; preds = %67, %64, %57
  %75 = phi i32 [ %73, %67 ], [ %62, %64 ], [ %2, %57 ]
  %76 = icmp eq i32 %62, 0
  br i1 %76, label %84, label %77

77:                                               ; preds = %74
  %78 = and i64 %61, 4294967295
  br label %79

79:                                               ; preds = %77, %97
  %80 = phi i64 [ 0, %77 ], [ %104, %97 ]
  %81 = phi i32 [ 1, %77 ], [ %91, %97 ]
  %82 = getelementptr inbounds i32, ptr %3, i64 %80
  %83 = load i32, ptr %82, align 4, !tbaa !47
  br label %90

84:                                               ; preds = %97, %74
  %85 = phi i32 [ 1, %74 ], [ %91, %97 ]
  %86 = icmp ult i32 %75, %2
  br i1 %86, label %87, label %212

87:                                               ; preds = %84
  %88 = zext i32 %75 to i64
  %89 = zext i32 %2 to i64
  br label %106

90:                                               ; preds = %90, %79
  %91 = phi i32 [ %96, %90 ], [ %81, %79 ]
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i32, ptr %33, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47
  %95 = icmp ult i32 %94, %83
  %96 = add i32 %91, 1
  br i1 %95, label %90, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds double, ptr %4, i64 %80
  %99 = load double, ptr %98, align 8, !tbaa !30
  %100 = fpext double %99 to x86_fp80
  %101 = getelementptr inbounds x86_fp80, ptr %36, i64 %92
  %102 = load x86_fp80, ptr %101, align 16, !tbaa !128
  %103 = fadd x86_fp80 %102, %100
  store x86_fp80 %103, ptr %101, align 16, !tbaa !128
  %104 = add nuw nsw i64 %80, 1
  %105 = icmp eq i64 %104, %78
  br i1 %105, label %84, label %79

106:                                              ; preds = %87, %118
  %107 = phi i64 [ %88, %87 ], [ %125, %118 ]
  %108 = phi i32 [ %85, %87 ], [ %112, %118 ]
  %109 = getelementptr inbounds i32, ptr %3, i64 %107
  %110 = load i32, ptr %109, align 4, !tbaa !47
  br label %111

111:                                              ; preds = %111, %106
  %112 = phi i32 [ %117, %111 ], [ %108, %106 ]
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %33, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !47
  %116 = icmp ult i32 %115, %110
  %117 = add i32 %112, 1
  br i1 %116, label %111, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds double, ptr %4, i64 %107
  %120 = load double, ptr %119, align 8, !tbaa !30
  %121 = fpext double %120 to x86_fp80
  %122 = getelementptr inbounds x86_fp80, ptr %36, i64 %113
  %123 = load x86_fp80, ptr %122, align 16, !tbaa !128
  %124 = fadd x86_fp80 %123, %121
  store x86_fp80 %124, ptr %122, align 16, !tbaa !128
  %125 = add nuw nsw i64 %107, 1
  %126 = icmp eq i64 %125, %89
  br i1 %126, label %212, label %106

127:                                              ; preds = %27
  %128 = icmp eq i32 %2, 0
  br i1 %128, label %212, label %129

129:                                              ; preds = %127
  %130 = zext i32 %2 to i64
  br label %131

131:                                              ; preds = %129, %143
  %132 = phi i64 [ 0, %129 ], [ %150, %143 ]
  %133 = phi i32 [ 0, %129 ], [ %137, %143 ]
  %134 = getelementptr inbounds i32, ptr %3, i64 %132
  %135 = load i32, ptr %134, align 4, !tbaa !47
  br label %136

136:                                              ; preds = %136, %131
  %137 = phi i32 [ %142, %136 ], [ %133, %131 ]
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds i32, ptr %33, i64 %138
  %140 = load i32, ptr %139, align 4, !tbaa !47
  %141 = icmp ult i32 %140, %135
  %142 = add i32 %137, 1
  br i1 %141, label %136, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds double, ptr %4, i64 %132
  %145 = load double, ptr %144, align 8, !tbaa !30
  %146 = fpext double %145 to x86_fp80
  %147 = getelementptr inbounds x86_fp80, ptr %36, i64 %138
  %148 = load x86_fp80, ptr %147, align 16, !tbaa !128
  %149 = fadd x86_fp80 %148, %146
  store x86_fp80 %149, ptr %147, align 16, !tbaa !128
  %150 = add nuw nsw i64 %132, 1
  %151 = icmp eq i64 %150, %130
  br i1 %151, label %212, label %131

152:                                              ; preds = %8, %11
  %153 = phi ptr [ %10, %8 ], [ %14, %11 ]
  %154 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %155 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %153, i64 0, i32 9
  %156 = load ptr, ptr %155, align 8, !tbaa !46
  %157 = icmp eq i32 %2, 0
  br i1 %157, label %212, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %153, i64 0, i32 8
  %160 = load ptr, ptr %159, align 8, !tbaa !32
  %161 = zext i32 %1 to i64
  %162 = getelementptr inbounds i64, ptr %160, i64 %161
  %163 = load i64, ptr %162, align 8, !tbaa !34
  %164 = trunc i64 %163 to i32
  %165 = add i32 %1, 1
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %168 = zext i32 %2 to i64
  br label %169

169:                                              ; preds = %158, %208
  %170 = phi i64 [ 0, %158 ], [ %210, %208 ]
  %171 = phi i32 [ %164, %158 ], [ %209, %208 ]
  %172 = getelementptr inbounds double, ptr %4, i64 %170
  %173 = load double, ptr %172, align 8, !tbaa !30
  %174 = fpext double %173 to x86_fp80
  %175 = fcmp oeq double %173, 0.000000e+00
  %176 = and i1 %175, %5
  br i1 %176, label %208, label %177

177:                                              ; preds = %169
  %178 = zext i32 %171 to i64
  %179 = load ptr, ptr %154, align 8, !tbaa !8
  %180 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %179, i64 0, i32 8
  %181 = load ptr, ptr %180, align 8, !tbaa !32
  %182 = getelementptr inbounds i64, ptr %181, i64 %166
  %183 = load i64, ptr %182, align 8, !tbaa !34
  %184 = icmp eq i64 %183, %178
  br i1 %184, label %185, label %188

185:                                              ; preds = %177
  %186 = getelementptr inbounds i32, ptr %3, i64 %170
  %187 = load i32, ptr %186, align 4, !tbaa !47
  br label %194

188:                                              ; preds = %177
  %189 = getelementptr inbounds i32, ptr %156, i64 %178
  %190 = load i32, ptr %189, align 4, !tbaa !47
  %191 = getelementptr inbounds i32, ptr %3, i64 %170
  %192 = load i32, ptr %191, align 4, !tbaa !47
  %193 = icmp eq i32 %190, %192
  br i1 %193, label %200, label %194

194:                                              ; preds = %185, %188
  %195 = phi i32 [ %187, %185 ], [ %192, %188 ]
  %196 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %179, i32 noundef %1, i32 noundef %195)
  %197 = icmp eq i32 %196, -1
  br i1 %197, label %208, label %198

198:                                              ; preds = %194
  %199 = zext i32 %196 to i64
  br label %200

200:                                              ; preds = %198, %188
  %201 = phi i64 [ %199, %198 ], [ %178, %188 ]
  %202 = phi i32 [ %196, %198 ], [ %171, %188 ]
  %203 = load ptr, ptr %167, align 8, !tbaa !125
  %204 = getelementptr inbounds x86_fp80, ptr %203, i64 %201
  %205 = load x86_fp80, ptr %204, align 16, !tbaa !128
  %206 = fadd x86_fp80 %205, %174
  store x86_fp80 %206, ptr %204, align 16, !tbaa !128
  %207 = add i32 %202, 1
  br label %208

208:                                              ; preds = %194, %169, %200
  %209 = phi i32 [ %207, %200 ], [ %171, %169 ], [ -1, %194 ]
  %210 = add nuw nsw i64 %170, 1
  %211 = icmp eq i64 %210, %168
  br i1 %211, label %212, label %169

212:                                              ; preds = %208, %118, %143, %152, %84, %127
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3setIdEEvjjPKjPKT_b(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 9
  %10 = load ptr, ptr %9, align 8, !tbaa !46
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %61, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = zext i32 %1 to i64
  %16 = getelementptr inbounds i64, ptr %14, i64 %15
  %17 = load i64, ptr %16, align 8, !tbaa !34
  %18 = trunc i64 %17 to i32
  %19 = add i32 %1, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %22 = zext i32 %2 to i64
  br i1 %5, label %62, label %23

23:                                               ; preds = %12, %57
  %24 = phi i64 [ %59, %57 ], [ 0, %12 ]
  %25 = phi i32 [ %58, %57 ], [ %18, %12 ]
  %26 = getelementptr inbounds double, ptr %4, i64 %24
  %27 = load double, ptr %26, align 8, !tbaa !30
  %28 = fpext double %27 to x86_fp80
  %29 = zext i32 %25 to i64
  %30 = load ptr, ptr %7, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %30, i64 0, i32 8
  %32 = load ptr, ptr %31, align 8, !tbaa !32
  %33 = getelementptr inbounds i64, ptr %32, i64 %20
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = icmp eq i64 %34, %29
  br i1 %35, label %36, label %39

36:                                               ; preds = %23
  %37 = getelementptr inbounds i32, ptr %3, i64 %24
  %38 = load i32, ptr %37, align 4, !tbaa !47
  br label %45

39:                                               ; preds = %23
  %40 = getelementptr inbounds i32, ptr %10, i64 %29
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds i32, ptr %3, i64 %24
  %43 = load i32, ptr %42, align 4, !tbaa !47
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %51, label %45

45:                                               ; preds = %36, %39
  %46 = phi i32 [ %38, %36 ], [ %43, %39 ]
  %47 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %30, i32 noundef %1, i32 noundef %46)
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %57, label %49

49:                                               ; preds = %45
  %50 = zext i32 %47 to i64
  br label %51

51:                                               ; preds = %49, %39
  %52 = phi i64 [ %50, %49 ], [ %29, %39 ]
  %53 = phi i32 [ %47, %49 ], [ %25, %39 ]
  %54 = load ptr, ptr %21, align 8, !tbaa !125
  %55 = getelementptr inbounds x86_fp80, ptr %54, i64 %52
  store x86_fp80 %28, ptr %55, align 16, !tbaa !128
  %56 = add i32 %53, 1
  br label %57

57:                                               ; preds = %51, %45
  %58 = phi i32 [ %56, %51 ], [ -1, %45 ]
  %59 = add nuw nsw i64 %24, 1
  %60 = icmp eq i64 %59, %22
  br i1 %60, label %61, label %23

61:                                               ; preds = %57, %98, %6
  ret void

62:                                               ; preds = %12, %98
  %63 = phi i64 [ %100, %98 ], [ 0, %12 ]
  %64 = phi i32 [ %99, %98 ], [ %18, %12 ]
  %65 = getelementptr inbounds double, ptr %4, i64 %63
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = fpext double %66 to x86_fp80
  %68 = fcmp oeq double %66, 0.000000e+00
  br i1 %68, label %98, label %69

69:                                               ; preds = %62
  %70 = zext i32 %64 to i64
  %71 = load ptr, ptr %7, align 8, !tbaa !8
  %72 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %71, i64 0, i32 8
  %73 = load ptr, ptr %72, align 8, !tbaa !32
  %74 = getelementptr inbounds i64, ptr %73, i64 %20
  %75 = load i64, ptr %74, align 8, !tbaa !34
  %76 = icmp eq i64 %75, %70
  br i1 %76, label %77, label %80

77:                                               ; preds = %69
  %78 = getelementptr inbounds i32, ptr %3, i64 %63
  %79 = load i32, ptr %78, align 4, !tbaa !47
  br label %86

80:                                               ; preds = %69
  %81 = getelementptr inbounds i32, ptr %10, i64 %70
  %82 = load i32, ptr %81, align 4, !tbaa !47
  %83 = getelementptr inbounds i32, ptr %3, i64 %63
  %84 = load i32, ptr %83, align 4, !tbaa !47
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %77, %80
  %87 = phi i32 [ %79, %77 ], [ %84, %80 ]
  %88 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %71, i32 noundef %1, i32 noundef %87)
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %98, label %90

90:                                               ; preds = %86
  %91 = zext i32 %88 to i64
  br label %92

92:                                               ; preds = %90, %80
  %93 = phi i64 [ %91, %90 ], [ %70, %80 ]
  %94 = phi i32 [ %88, %90 ], [ %64, %80 ]
  %95 = load ptr, ptr %21, align 8, !tbaa !125
  %96 = getelementptr inbounds x86_fp80, ptr %95, i64 %93
  store x86_fp80 %67, ptr %96, align 16, !tbaa !128
  %97 = add i32 %94, 1
  br label %98

98:                                               ; preds = %86, %62, %92
  %99 = phi i32 [ %97, %92 ], [ %64, %62 ], [ -1, %86 ]
  %100 = add nuw nsw i64 %63, 1
  %101 = icmp eq i64 %100, %22
  br i1 %101, label %61, label %62
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIeE9copy_fromIfEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %6 = load ptr, ptr %5, align 8, !tbaa !32
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i64, ptr %6, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !34
  %12 = load i64, ptr %6, align 8, !tbaa !34
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 2
  %15 = and i64 %14, 17179869180
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %1, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !92
  %20 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !125
  %22 = lshr exact i64 %15, 2
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi i64 [ %31, %23 ], [ %22, %17 ]
  %25 = phi ptr [ %30, %23 ], [ %21, %17 ]
  %26 = phi ptr [ %29, %23 ], [ %19, %17 ]
  %27 = load float, ptr %26, align 4, !tbaa !95
  %28 = fpext float %27 to x86_fp80
  store x86_fp80 %28, ptr %25, align 16, !tbaa !128
  %29 = getelementptr inbounds float, ptr %26, i64 1
  %30 = getelementptr inbounds x86_fp80, ptr %25, i64 1
  %31 = add nsw i64 %24, -1
  %32 = icmp ugt i64 %24, 1
  br i1 %32, label %23, label %33

33:                                               ; preds = %23, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE9copy_fromIfEEvRKNS_10FullMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(92) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !125
  %5 = icmp eq ptr %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds x86_fp80, ptr %4, i64 %18
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi ptr [ %4, %20 ], [ %24, %22 ]
  store x86_fp80 0xK00000000000000000000, ptr %23, align 16, !tbaa !128
  %24 = getelementptr inbounds x86_fp80, ptr %23, i64 1
  %25 = icmp eq ptr %24, %21
  br i1 %25, label %26, label %22

26:                                               ; preds = %22, %2, %6
  %27 = getelementptr inbounds %"class.dealii::TableBase.34", ptr %1, i64 0, i32 3
  %28 = load i32, ptr %27, align 4, !tbaa !47
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %41, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.dealii::TableBase.34", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %32 = getelementptr inbounds %"class.dealii::TableBase.34", ptr %1, i64 0, i32 1
  %33 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %34 = load i32, ptr %31, align 8, !tbaa !47
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %30, %44
  %37 = phi i32 [ %45, %44 ], [ %28, %30 ]
  %38 = phi i32 [ %46, %44 ], [ %34, %30 ]
  %39 = phi i32 [ %47, %44 ], [ 0, %30 ]
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %44, label %49

41:                                               ; preds = %44, %30, %26
  ret void

42:                                               ; preds = %68
  %43 = load i32, ptr %27, align 4, !tbaa !47
  br label %44

44:                                               ; preds = %42, %36
  %45 = phi i32 [ %43, %42 ], [ %37, %36 ]
  %46 = phi i32 [ %70, %42 ], [ 0, %36 ]
  %47 = add nuw i32 %39, 1
  %48 = icmp ult i32 %47, %45
  br i1 %48, label %36, label %41, !llvm.loop !193

49:                                               ; preds = %36, %68
  %50 = phi i32 [ %70, %68 ], [ %38, %36 ]
  %51 = phi i32 [ %69, %68 ], [ 0, %36 ]
  %52 = load ptr, ptr %32, align 8, !tbaa !171
  %53 = mul i32 %50, %39
  %54 = add i32 %53, %51
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds float, ptr %52, i64 %55
  %57 = load float, ptr %56, align 4, !tbaa !95
  %58 = fcmp une float %57, 0.000000e+00
  br i1 %58, label %59, label %68

59:                                               ; preds = %49
  %60 = load ptr, ptr %33, align 8, !tbaa !8
  %61 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %60, i32 noundef %39, i32 noundef %51)
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = fpext float %57 to x86_fp80
  %65 = load ptr, ptr %3, align 8, !tbaa !125
  %66 = zext i32 %61 to i64
  %67 = getelementptr inbounds x86_fp80, ptr %65, i64 %66
  store x86_fp80 %64, ptr %67, align 16, !tbaa !128
  br label %68

68:                                               ; preds = %63, %59, %49
  %69 = add nuw i32 %51, 1
  %70 = load i32, ptr %31, align 8, !tbaa !47
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %49, label %42
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3addIfEEveRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, x86_fp80 noundef %1, ptr noundef nonnull align 8 dereferenceable(36) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !125
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, ptr %9, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = load i64, ptr %9, align 8, !tbaa !34
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds x86_fp80, ptr %5, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %2, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !92
  br label %23

23:                                               ; preds = %20, %23
  %24 = phi ptr [ %29, %23 ], [ %5, %20 ]
  %25 = phi ptr [ %26, %23 ], [ %22, %20 ]
  %26 = getelementptr inbounds float, ptr %25, i64 1
  %27 = load float, ptr %25, align 4, !tbaa !95
  %28 = fpext float %27 to x86_fp80
  %29 = getelementptr inbounds x86_fp80, ptr %24, i64 1
  %30 = load x86_fp80, ptr %24, align 16, !tbaa !128
  %31 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %28, x86_fp80 %30)
  store x86_fp80 %31, ptr %24, align 16, !tbaa !128
  %32 = icmp eq ptr %29, %18
  br i1 %32, label %33, label %23

33:                                               ; preds = %23, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3addIfEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5, i1 noundef zeroext %6) local_unnamed_addr #0 comdat align 2 {
  br i1 %6, label %11, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !8
  br label %152

11:                                               ; preds = %7
  %12 = shl i32 %2, 3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = add i32 %1, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i64, ptr %16, i64 %18
  %20 = load i64, ptr %19, align 8, !tbaa !34
  %21 = zext i32 %1 to i64
  %22 = getelementptr inbounds i64, ptr %16, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !34
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32
  %26 = icmp ugt i32 %12, %25
  br i1 %26, label %27, label %152

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 11
  %29 = load i8, ptr %28, align 1, !tbaa !43, !range !44, !noundef !45
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = getelementptr inbounds i32, ptr %32, i64 %23
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !125
  %36 = getelementptr inbounds x86_fp80, ptr %35, i64 %23
  br i1 %30, label %127, label %37

37:                                               ; preds = %27
  %38 = ptrtoint ptr %3 to i64
  %39 = icmp eq i32 %2, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %37
  %41 = zext i32 %2 to i64
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi ptr [ %3, %40 ], [ %53, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %52, %42 ]
  %45 = lshr i64 %44, 1
  %46 = getelementptr inbounds i32, ptr %43, i64 %45
  %47 = load i32, ptr %46, align 4, !tbaa !47
  %48 = icmp ult i32 %47, %1
  %49 = getelementptr inbounds i32, ptr %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add nsw i64 %44, %50
  %52 = select i1 %48, i64 %51, i64 %45
  %53 = select i1 %48, ptr %49, ptr %43
  %54 = icmp sgt i64 %52, 0
  br i1 %54, label %42, label %55

55:                                               ; preds = %42
  %56 = ptrtoint ptr %53 to i64
  br label %57

57:                                               ; preds = %55, %37
  %58 = phi i64 [ %56, %55 ], [ %38, %37 ]
  %59 = phi ptr [ %53, %55 ], [ %3, %37 ]
  %60 = sub i64 %58, %38
  %61 = ashr exact i64 %60, 2
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, %2
  br i1 %63, label %74, label %64

64:                                               ; preds = %57
  %65 = load i32, ptr %59, align 4, !tbaa !47
  %66 = icmp eq i32 %65, %1
  br i1 %66, label %67, label %74

67:                                               ; preds = %64
  %68 = getelementptr inbounds float, ptr %4, i64 %61
  %69 = load float, ptr %68, align 4, !tbaa !95
  %70 = fpext float %69 to x86_fp80
  %71 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %72 = fadd x86_fp80 %71, %70
  store x86_fp80 %72, ptr %36, align 16, !tbaa !128
  %73 = add i32 %62, 1
  br label %74

74:                                               ; preds = %67, %64, %57
  %75 = phi i32 [ %73, %67 ], [ %62, %64 ], [ %2, %57 ]
  %76 = icmp eq i32 %62, 0
  br i1 %76, label %84, label %77

77:                                               ; preds = %74
  %78 = and i64 %61, 4294967295
  br label %79

79:                                               ; preds = %77, %97
  %80 = phi i64 [ 0, %77 ], [ %104, %97 ]
  %81 = phi i32 [ 1, %77 ], [ %91, %97 ]
  %82 = getelementptr inbounds i32, ptr %3, i64 %80
  %83 = load i32, ptr %82, align 4, !tbaa !47
  br label %90

84:                                               ; preds = %97, %74
  %85 = phi i32 [ 1, %74 ], [ %91, %97 ]
  %86 = icmp ult i32 %75, %2
  br i1 %86, label %87, label %212

87:                                               ; preds = %84
  %88 = zext i32 %75 to i64
  %89 = zext i32 %2 to i64
  br label %106

90:                                               ; preds = %90, %79
  %91 = phi i32 [ %96, %90 ], [ %81, %79 ]
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i32, ptr %33, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47
  %95 = icmp ult i32 %94, %83
  %96 = add i32 %91, 1
  br i1 %95, label %90, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds float, ptr %4, i64 %80
  %99 = load float, ptr %98, align 4, !tbaa !95
  %100 = fpext float %99 to x86_fp80
  %101 = getelementptr inbounds x86_fp80, ptr %36, i64 %92
  %102 = load x86_fp80, ptr %101, align 16, !tbaa !128
  %103 = fadd x86_fp80 %102, %100
  store x86_fp80 %103, ptr %101, align 16, !tbaa !128
  %104 = add nuw nsw i64 %80, 1
  %105 = icmp eq i64 %104, %78
  br i1 %105, label %84, label %79

106:                                              ; preds = %87, %118
  %107 = phi i64 [ %88, %87 ], [ %125, %118 ]
  %108 = phi i32 [ %85, %87 ], [ %112, %118 ]
  %109 = getelementptr inbounds i32, ptr %3, i64 %107
  %110 = load i32, ptr %109, align 4, !tbaa !47
  br label %111

111:                                              ; preds = %111, %106
  %112 = phi i32 [ %117, %111 ], [ %108, %106 ]
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %33, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !47
  %116 = icmp ult i32 %115, %110
  %117 = add i32 %112, 1
  br i1 %116, label %111, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds float, ptr %4, i64 %107
  %120 = load float, ptr %119, align 4, !tbaa !95
  %121 = fpext float %120 to x86_fp80
  %122 = getelementptr inbounds x86_fp80, ptr %36, i64 %113
  %123 = load x86_fp80, ptr %122, align 16, !tbaa !128
  %124 = fadd x86_fp80 %123, %121
  store x86_fp80 %124, ptr %122, align 16, !tbaa !128
  %125 = add nuw nsw i64 %107, 1
  %126 = icmp eq i64 %125, %89
  br i1 %126, label %212, label %106

127:                                              ; preds = %27
  %128 = icmp eq i32 %2, 0
  br i1 %128, label %212, label %129

129:                                              ; preds = %127
  %130 = zext i32 %2 to i64
  br label %131

131:                                              ; preds = %129, %143
  %132 = phi i64 [ 0, %129 ], [ %150, %143 ]
  %133 = phi i32 [ 0, %129 ], [ %137, %143 ]
  %134 = getelementptr inbounds i32, ptr %3, i64 %132
  %135 = load i32, ptr %134, align 4, !tbaa !47
  br label %136

136:                                              ; preds = %136, %131
  %137 = phi i32 [ %142, %136 ], [ %133, %131 ]
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds i32, ptr %33, i64 %138
  %140 = load i32, ptr %139, align 4, !tbaa !47
  %141 = icmp ult i32 %140, %135
  %142 = add i32 %137, 1
  br i1 %141, label %136, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds float, ptr %4, i64 %132
  %145 = load float, ptr %144, align 4, !tbaa !95
  %146 = fpext float %145 to x86_fp80
  %147 = getelementptr inbounds x86_fp80, ptr %36, i64 %138
  %148 = load x86_fp80, ptr %147, align 16, !tbaa !128
  %149 = fadd x86_fp80 %148, %146
  store x86_fp80 %149, ptr %147, align 16, !tbaa !128
  %150 = add nuw nsw i64 %132, 1
  %151 = icmp eq i64 %150, %130
  br i1 %151, label %212, label %131

152:                                              ; preds = %8, %11
  %153 = phi ptr [ %10, %8 ], [ %14, %11 ]
  %154 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %155 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %153, i64 0, i32 9
  %156 = load ptr, ptr %155, align 8, !tbaa !46
  %157 = icmp eq i32 %2, 0
  br i1 %157, label %212, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %153, i64 0, i32 8
  %160 = load ptr, ptr %159, align 8, !tbaa !32
  %161 = zext i32 %1 to i64
  %162 = getelementptr inbounds i64, ptr %160, i64 %161
  %163 = load i64, ptr %162, align 8, !tbaa !34
  %164 = trunc i64 %163 to i32
  %165 = add i32 %1, 1
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %168 = zext i32 %2 to i64
  br label %169

169:                                              ; preds = %158, %208
  %170 = phi i64 [ 0, %158 ], [ %210, %208 ]
  %171 = phi i32 [ %164, %158 ], [ %209, %208 ]
  %172 = getelementptr inbounds float, ptr %4, i64 %170
  %173 = load float, ptr %172, align 4, !tbaa !95
  %174 = fpext float %173 to x86_fp80
  %175 = fcmp oeq float %173, 0.000000e+00
  %176 = and i1 %175, %5
  br i1 %176, label %208, label %177

177:                                              ; preds = %169
  %178 = zext i32 %171 to i64
  %179 = load ptr, ptr %154, align 8, !tbaa !8
  %180 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %179, i64 0, i32 8
  %181 = load ptr, ptr %180, align 8, !tbaa !32
  %182 = getelementptr inbounds i64, ptr %181, i64 %166
  %183 = load i64, ptr %182, align 8, !tbaa !34
  %184 = icmp eq i64 %183, %178
  br i1 %184, label %185, label %188

185:                                              ; preds = %177
  %186 = getelementptr inbounds i32, ptr %3, i64 %170
  %187 = load i32, ptr %186, align 4, !tbaa !47
  br label %194

188:                                              ; preds = %177
  %189 = getelementptr inbounds i32, ptr %156, i64 %178
  %190 = load i32, ptr %189, align 4, !tbaa !47
  %191 = getelementptr inbounds i32, ptr %3, i64 %170
  %192 = load i32, ptr %191, align 4, !tbaa !47
  %193 = icmp eq i32 %190, %192
  br i1 %193, label %200, label %194

194:                                              ; preds = %185, %188
  %195 = phi i32 [ %187, %185 ], [ %192, %188 ]
  %196 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %179, i32 noundef %1, i32 noundef %195)
  %197 = icmp eq i32 %196, -1
  br i1 %197, label %208, label %198

198:                                              ; preds = %194
  %199 = zext i32 %196 to i64
  br label %200

200:                                              ; preds = %198, %188
  %201 = phi i64 [ %199, %198 ], [ %178, %188 ]
  %202 = phi i32 [ %196, %198 ], [ %171, %188 ]
  %203 = load ptr, ptr %167, align 8, !tbaa !125
  %204 = getelementptr inbounds x86_fp80, ptr %203, i64 %201
  %205 = load x86_fp80, ptr %204, align 16, !tbaa !128
  %206 = fadd x86_fp80 %205, %174
  store x86_fp80 %206, ptr %204, align 16, !tbaa !128
  %207 = add i32 %202, 1
  br label %208

208:                                              ; preds = %194, %169, %200
  %209 = phi i32 [ %207, %200 ], [ %171, %169 ], [ -1, %194 ]
  %210 = add nuw nsw i64 %170, 1
  %211 = icmp eq i64 %210, %168
  br i1 %211, label %212, label %169

212:                                              ; preds = %208, %118, %143, %152, %84, %127
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3setIfEEvjjPKjPKT_b(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 9
  %10 = load ptr, ptr %9, align 8, !tbaa !46
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %61, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = zext i32 %1 to i64
  %16 = getelementptr inbounds i64, ptr %14, i64 %15
  %17 = load i64, ptr %16, align 8, !tbaa !34
  %18 = trunc i64 %17 to i32
  %19 = add i32 %1, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %22 = zext i32 %2 to i64
  br i1 %5, label %62, label %23

23:                                               ; preds = %12, %57
  %24 = phi i64 [ %59, %57 ], [ 0, %12 ]
  %25 = phi i32 [ %58, %57 ], [ %18, %12 ]
  %26 = getelementptr inbounds float, ptr %4, i64 %24
  %27 = load float, ptr %26, align 4, !tbaa !95
  %28 = fpext float %27 to x86_fp80
  %29 = zext i32 %25 to i64
  %30 = load ptr, ptr %7, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %30, i64 0, i32 8
  %32 = load ptr, ptr %31, align 8, !tbaa !32
  %33 = getelementptr inbounds i64, ptr %32, i64 %20
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = icmp eq i64 %34, %29
  br i1 %35, label %36, label %39

36:                                               ; preds = %23
  %37 = getelementptr inbounds i32, ptr %3, i64 %24
  %38 = load i32, ptr %37, align 4, !tbaa !47
  br label %45

39:                                               ; preds = %23
  %40 = getelementptr inbounds i32, ptr %10, i64 %29
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds i32, ptr %3, i64 %24
  %43 = load i32, ptr %42, align 4, !tbaa !47
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %51, label %45

45:                                               ; preds = %36, %39
  %46 = phi i32 [ %38, %36 ], [ %43, %39 ]
  %47 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %30, i32 noundef %1, i32 noundef %46)
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %57, label %49

49:                                               ; preds = %45
  %50 = zext i32 %47 to i64
  br label %51

51:                                               ; preds = %49, %39
  %52 = phi i64 [ %50, %49 ], [ %29, %39 ]
  %53 = phi i32 [ %47, %49 ], [ %25, %39 ]
  %54 = load ptr, ptr %21, align 8, !tbaa !125
  %55 = getelementptr inbounds x86_fp80, ptr %54, i64 %52
  store x86_fp80 %28, ptr %55, align 16, !tbaa !128
  %56 = add i32 %53, 1
  br label %57

57:                                               ; preds = %51, %45
  %58 = phi i32 [ %56, %51 ], [ -1, %45 ]
  %59 = add nuw nsw i64 %24, 1
  %60 = icmp eq i64 %59, %22
  br i1 %60, label %61, label %23

61:                                               ; preds = %57, %98, %6
  ret void

62:                                               ; preds = %12, %98
  %63 = phi i64 [ %100, %98 ], [ 0, %12 ]
  %64 = phi i32 [ %99, %98 ], [ %18, %12 ]
  %65 = getelementptr inbounds float, ptr %4, i64 %63
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fpext float %66 to x86_fp80
  %68 = fcmp oeq float %66, 0.000000e+00
  br i1 %68, label %98, label %69

69:                                               ; preds = %62
  %70 = zext i32 %64 to i64
  %71 = load ptr, ptr %7, align 8, !tbaa !8
  %72 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %71, i64 0, i32 8
  %73 = load ptr, ptr %72, align 8, !tbaa !32
  %74 = getelementptr inbounds i64, ptr %73, i64 %20
  %75 = load i64, ptr %74, align 8, !tbaa !34
  %76 = icmp eq i64 %75, %70
  br i1 %76, label %77, label %80

77:                                               ; preds = %69
  %78 = getelementptr inbounds i32, ptr %3, i64 %63
  %79 = load i32, ptr %78, align 4, !tbaa !47
  br label %86

80:                                               ; preds = %69
  %81 = getelementptr inbounds i32, ptr %10, i64 %70
  %82 = load i32, ptr %81, align 4, !tbaa !47
  %83 = getelementptr inbounds i32, ptr %3, i64 %63
  %84 = load i32, ptr %83, align 4, !tbaa !47
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %77, %80
  %87 = phi i32 [ %79, %77 ], [ %84, %80 ]
  %88 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %71, i32 noundef %1, i32 noundef %87)
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %98, label %90

90:                                               ; preds = %86
  %91 = zext i32 %88 to i64
  br label %92

92:                                               ; preds = %90, %80
  %93 = phi i64 [ %91, %90 ], [ %70, %80 ]
  %94 = phi i32 [ %88, %90 ], [ %64, %80 ]
  %95 = load ptr, ptr %21, align 8, !tbaa !125
  %96 = getelementptr inbounds x86_fp80, ptr %95, i64 %93
  store x86_fp80 %67, ptr %96, align 16, !tbaa !128
  %97 = add i32 %94, 1
  br label %98

98:                                               ; preds = %86, %62, %92
  %99 = phi i32 [ %97, %92 ], [ %64, %62 ], [ -1, %86 ]
  %100 = add nuw nsw i64 %63, 1
  %101 = icmp eq i64 %100, %22
  br i1 %101, label %61, label %62
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(36) ptr @_ZN6dealii12SparseMatrixIeE9copy_fromIeEERS1_RKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !125
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %8 = load ptr, ptr %7, align 8, !tbaa !32
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !33
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i64, ptr %8, i64 %11
  %13 = load i64, ptr %12, align 8, !tbaa !34
  %14 = load i64, ptr %8, align 8, !tbaa !34
  %15 = sub i64 %13, %14
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !125
  %18 = shl i64 %15, 4
  %19 = and i64 %18, 68719476720
  %20 = icmp ugt i64 %19, 16
  br i1 %20, label %21, label %22, !prof !154

21:                                               ; preds = %2
  tail call void @llvm.memmove.p0.p0.i64(ptr align 16 %17, ptr align 16 %4, i64 %19, i1 false)
  br label %26

22:                                               ; preds = %2
  %23 = icmp eq i64 %19, 16
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = load x86_fp80, ptr %4, align 16, !tbaa !128
  store x86_fp80 %25, ptr %17, align 16, !tbaa !128
  br label %26

26:                                               ; preds = %21, %22, %24
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE9copy_fromIeEEvRKNS_10FullMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(92) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !125
  %5 = icmp eq ptr %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, ptr %10, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !34
  %16 = load i64, ptr %10, align 8, !tbaa !34
  %17 = sub i64 %15, %16
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds x86_fp80, ptr %4, i64 %18
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi ptr [ %4, %20 ], [ %24, %22 ]
  store x86_fp80 0xK00000000000000000000, ptr %23, align 16, !tbaa !128
  %24 = getelementptr inbounds x86_fp80, ptr %23, i64 1
  %25 = icmp eq ptr %24, %21
  br i1 %25, label %26, label %22

26:                                               ; preds = %22, %2, %6
  %27 = getelementptr inbounds %"class.dealii::TableBase.40", ptr %1, i64 0, i32 3
  %28 = load i32, ptr %27, align 4, !tbaa !47
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %41, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.dealii::TableBase.40", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %32 = getelementptr inbounds %"class.dealii::TableBase.40", ptr %1, i64 0, i32 1
  %33 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %34 = load i32, ptr %31, align 8, !tbaa !47
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %30, %44
  %37 = phi i32 [ %45, %44 ], [ %28, %30 ]
  %38 = phi i32 [ %46, %44 ], [ %34, %30 ]
  %39 = phi i32 [ %47, %44 ], [ 0, %30 ]
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %44, label %49

41:                                               ; preds = %44, %30, %26
  ret void

42:                                               ; preds = %67
  %43 = load i32, ptr %27, align 4, !tbaa !47
  br label %44

44:                                               ; preds = %42, %36
  %45 = phi i32 [ %43, %42 ], [ %37, %36 ]
  %46 = phi i32 [ %69, %42 ], [ 0, %36 ]
  %47 = add nuw i32 %39, 1
  %48 = icmp ult i32 %47, %45
  br i1 %48, label %36, label %41, !llvm.loop !194

49:                                               ; preds = %36, %67
  %50 = phi i32 [ %69, %67 ], [ %38, %36 ]
  %51 = phi i32 [ %68, %67 ], [ 0, %36 ]
  %52 = load ptr, ptr %32, align 8, !tbaa !176
  %53 = mul i32 %50, %39
  %54 = add i32 %53, %51
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds x86_fp80, ptr %52, i64 %55
  %57 = load x86_fp80, ptr %56, align 16, !tbaa !128
  %58 = fcmp une x86_fp80 %57, 0xK00000000000000000000
  br i1 %58, label %59, label %67

59:                                               ; preds = %49
  %60 = load ptr, ptr %33, align 8, !tbaa !8
  %61 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %60, i32 noundef %39, i32 noundef %51)
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = load ptr, ptr %3, align 8, !tbaa !125
  %65 = zext i32 %61 to i64
  %66 = getelementptr inbounds x86_fp80, ptr %64, i64 %65
  store x86_fp80 %57, ptr %66, align 16, !tbaa !128
  br label %67

67:                                               ; preds = %63, %59, %49
  %68 = add nuw i32 %51, 1
  %69 = load i32, ptr %31, align 8, !tbaa !47
  %70 = icmp ult i32 %68, %69
  br i1 %70, label %49, label %42
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3addIeEEveRKNS0_IT_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, x86_fp80 noundef %1, ptr noundef nonnull align 8 dereferenceable(36) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !125
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, ptr %9, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = load i64, ptr %9, align 8, !tbaa !34
  %16 = sub i64 %14, %15
  %17 = and i64 %16, 4294967295
  %18 = getelementptr inbounds x86_fp80, ptr %5, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %2, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !125
  br label %23

23:                                               ; preds = %20, %23
  %24 = phi ptr [ %28, %23 ], [ %5, %20 ]
  %25 = phi ptr [ %26, %23 ], [ %22, %20 ]
  %26 = getelementptr inbounds x86_fp80, ptr %25, i64 1
  %27 = load x86_fp80, ptr %25, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %24, i64 1
  %29 = load x86_fp80, ptr %24, align 16, !tbaa !128
  %30 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %1, x86_fp80 %27, x86_fp80 %29)
  store x86_fp80 %30, ptr %24, align 16, !tbaa !128
  %31 = icmp eq ptr %28, %18
  br i1 %31, label %32, label %23

32:                                               ; preds = %23, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3addIeEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5, i1 noundef zeroext %6) local_unnamed_addr #0 comdat align 2 {
  br i1 %6, label %11, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !8
  br label %148

11:                                               ; preds = %7
  %12 = shl i32 %2, 3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = add i32 %1, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i64, ptr %16, i64 %18
  %20 = load i64, ptr %19, align 8, !tbaa !34
  %21 = zext i32 %1 to i64
  %22 = getelementptr inbounds i64, ptr %16, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !34
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32
  %26 = icmp ugt i32 %12, %25
  br i1 %26, label %27, label %148

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 11
  %29 = load i8, ptr %28, align 1, !tbaa !43, !range !44, !noundef !45
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = getelementptr inbounds i32, ptr %32, i64 %23
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !125
  %36 = getelementptr inbounds x86_fp80, ptr %35, i64 %23
  br i1 %30, label %124, label %37

37:                                               ; preds = %27
  %38 = ptrtoint ptr %3 to i64
  %39 = icmp eq i32 %2, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %37
  %41 = zext i32 %2 to i64
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi ptr [ %3, %40 ], [ %53, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %52, %42 ]
  %45 = lshr i64 %44, 1
  %46 = getelementptr inbounds i32, ptr %43, i64 %45
  %47 = load i32, ptr %46, align 4, !tbaa !47
  %48 = icmp ult i32 %47, %1
  %49 = getelementptr inbounds i32, ptr %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add nsw i64 %44, %50
  %52 = select i1 %48, i64 %51, i64 %45
  %53 = select i1 %48, ptr %49, ptr %43
  %54 = icmp sgt i64 %52, 0
  br i1 %54, label %42, label %55

55:                                               ; preds = %42
  %56 = ptrtoint ptr %53 to i64
  br label %57

57:                                               ; preds = %55, %37
  %58 = phi i64 [ %56, %55 ], [ %38, %37 ]
  %59 = phi ptr [ %53, %55 ], [ %3, %37 ]
  %60 = sub i64 %58, %38
  %61 = ashr exact i64 %60, 2
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, %2
  br i1 %63, label %73, label %64

64:                                               ; preds = %57
  %65 = load i32, ptr %59, align 4, !tbaa !47
  %66 = icmp eq i32 %65, %1
  br i1 %66, label %67, label %73

67:                                               ; preds = %64
  %68 = getelementptr inbounds x86_fp80, ptr %4, i64 %61
  %69 = load x86_fp80, ptr %68, align 16, !tbaa !128
  %70 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %71 = fadd x86_fp80 %69, %70
  store x86_fp80 %71, ptr %36, align 16, !tbaa !128
  %72 = add i32 %62, 1
  br label %73

73:                                               ; preds = %67, %64, %57
  %74 = phi i32 [ %72, %67 ], [ %62, %64 ], [ %2, %57 ]
  %75 = icmp eq i32 %62, 0
  br i1 %75, label %83, label %76

76:                                               ; preds = %73
  %77 = and i64 %61, 4294967295
  br label %78

78:                                               ; preds = %76, %96
  %79 = phi i64 [ 0, %76 ], [ %102, %96 ]
  %80 = phi i32 [ 1, %76 ], [ %90, %96 ]
  %81 = getelementptr inbounds i32, ptr %3, i64 %79
  %82 = load i32, ptr %81, align 4, !tbaa !47
  br label %89

83:                                               ; preds = %96, %73
  %84 = phi i32 [ 1, %73 ], [ %90, %96 ]
  %85 = icmp ult i32 %74, %2
  br i1 %85, label %86, label %207

86:                                               ; preds = %83
  %87 = zext i32 %74 to i64
  %88 = zext i32 %2 to i64
  br label %104

89:                                               ; preds = %89, %78
  %90 = phi i32 [ %95, %89 ], [ %80, %78 ]
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i32, ptr %33, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47
  %94 = icmp ult i32 %93, %82
  %95 = add i32 %90, 1
  br i1 %94, label %89, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds x86_fp80, ptr %4, i64 %79
  %98 = load x86_fp80, ptr %97, align 16, !tbaa !128
  %99 = getelementptr inbounds x86_fp80, ptr %36, i64 %91
  %100 = load x86_fp80, ptr %99, align 16, !tbaa !128
  %101 = fadd x86_fp80 %98, %100
  store x86_fp80 %101, ptr %99, align 16, !tbaa !128
  %102 = add nuw nsw i64 %79, 1
  %103 = icmp eq i64 %102, %77
  br i1 %103, label %83, label %78

104:                                              ; preds = %86, %116
  %105 = phi i64 [ %87, %86 ], [ %122, %116 ]
  %106 = phi i32 [ %84, %86 ], [ %110, %116 ]
  %107 = getelementptr inbounds i32, ptr %3, i64 %105
  %108 = load i32, ptr %107, align 4, !tbaa !47
  br label %109

109:                                              ; preds = %109, %104
  %110 = phi i32 [ %115, %109 ], [ %106, %104 ]
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i32, ptr %33, i64 %111
  %113 = load i32, ptr %112, align 4, !tbaa !47
  %114 = icmp ult i32 %113, %108
  %115 = add i32 %110, 1
  br i1 %114, label %109, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds x86_fp80, ptr %4, i64 %105
  %118 = load x86_fp80, ptr %117, align 16, !tbaa !128
  %119 = getelementptr inbounds x86_fp80, ptr %36, i64 %111
  %120 = load x86_fp80, ptr %119, align 16, !tbaa !128
  %121 = fadd x86_fp80 %118, %120
  store x86_fp80 %121, ptr %119, align 16, !tbaa !128
  %122 = add nuw nsw i64 %105, 1
  %123 = icmp eq i64 %122, %88
  br i1 %123, label %207, label %104

124:                                              ; preds = %27
  %125 = icmp eq i32 %2, 0
  br i1 %125, label %207, label %126

126:                                              ; preds = %124
  %127 = zext i32 %2 to i64
  br label %128

128:                                              ; preds = %126, %140
  %129 = phi i64 [ 0, %126 ], [ %146, %140 ]
  %130 = phi i32 [ 0, %126 ], [ %134, %140 ]
  %131 = getelementptr inbounds i32, ptr %3, i64 %129
  %132 = load i32, ptr %131, align 4, !tbaa !47
  br label %133

133:                                              ; preds = %133, %128
  %134 = phi i32 [ %139, %133 ], [ %130, %128 ]
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds i32, ptr %33, i64 %135
  %137 = load i32, ptr %136, align 4, !tbaa !47
  %138 = icmp ult i32 %137, %132
  %139 = add i32 %134, 1
  br i1 %138, label %133, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds x86_fp80, ptr %4, i64 %129
  %142 = load x86_fp80, ptr %141, align 16, !tbaa !128
  %143 = getelementptr inbounds x86_fp80, ptr %36, i64 %135
  %144 = load x86_fp80, ptr %143, align 16, !tbaa !128
  %145 = fadd x86_fp80 %142, %144
  store x86_fp80 %145, ptr %143, align 16, !tbaa !128
  %146 = add nuw nsw i64 %129, 1
  %147 = icmp eq i64 %146, %127
  br i1 %147, label %207, label %128

148:                                              ; preds = %8, %11
  %149 = phi ptr [ %10, %8 ], [ %14, %11 ]
  %150 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %151 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %149, i64 0, i32 9
  %152 = load ptr, ptr %151, align 8, !tbaa !46
  %153 = icmp eq i32 %2, 0
  br i1 %153, label %207, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %149, i64 0, i32 8
  %156 = load ptr, ptr %155, align 8, !tbaa !32
  %157 = zext i32 %1 to i64
  %158 = getelementptr inbounds i64, ptr %156, i64 %157
  %159 = load i64, ptr %158, align 8, !tbaa !34
  %160 = trunc i64 %159 to i32
  %161 = add i32 %1, 1
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %164 = zext i32 %2 to i64
  br label %165

165:                                              ; preds = %154, %203
  %166 = phi i64 [ 0, %154 ], [ %205, %203 ]
  %167 = phi i32 [ %160, %154 ], [ %204, %203 ]
  %168 = getelementptr inbounds x86_fp80, ptr %4, i64 %166
  %169 = load x86_fp80, ptr %168, align 16, !tbaa !128
  %170 = fcmp oeq x86_fp80 %169, 0xK00000000000000000000
  %171 = and i1 %170, %5
  br i1 %171, label %203, label %172

172:                                              ; preds = %165
  %173 = zext i32 %167 to i64
  %174 = load ptr, ptr %150, align 8, !tbaa !8
  %175 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %174, i64 0, i32 8
  %176 = load ptr, ptr %175, align 8, !tbaa !32
  %177 = getelementptr inbounds i64, ptr %176, i64 %162
  %178 = load i64, ptr %177, align 8, !tbaa !34
  %179 = icmp eq i64 %178, %173
  br i1 %179, label %180, label %183

180:                                              ; preds = %172
  %181 = getelementptr inbounds i32, ptr %3, i64 %166
  %182 = load i32, ptr %181, align 4, !tbaa !47
  br label %189

183:                                              ; preds = %172
  %184 = getelementptr inbounds i32, ptr %152, i64 %173
  %185 = load i32, ptr %184, align 4, !tbaa !47
  %186 = getelementptr inbounds i32, ptr %3, i64 %166
  %187 = load i32, ptr %186, align 4, !tbaa !47
  %188 = icmp eq i32 %185, %187
  br i1 %188, label %195, label %189

189:                                              ; preds = %180, %183
  %190 = phi i32 [ %182, %180 ], [ %187, %183 ]
  %191 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %174, i32 noundef %1, i32 noundef %190)
  %192 = icmp eq i32 %191, -1
  br i1 %192, label %203, label %193

193:                                              ; preds = %189
  %194 = zext i32 %191 to i64
  br label %195

195:                                              ; preds = %193, %183
  %196 = phi i64 [ %194, %193 ], [ %173, %183 ]
  %197 = phi i32 [ %191, %193 ], [ %167, %183 ]
  %198 = load ptr, ptr %163, align 8, !tbaa !125
  %199 = getelementptr inbounds x86_fp80, ptr %198, i64 %196
  %200 = load x86_fp80, ptr %199, align 16, !tbaa !128
  %201 = fadd x86_fp80 %169, %200
  store x86_fp80 %201, ptr %199, align 16, !tbaa !128
  %202 = add i32 %197, 1
  br label %203

203:                                              ; preds = %189, %165, %195
  %204 = phi i32 [ %202, %195 ], [ %167, %165 ], [ -1, %189 ]
  %205 = add nuw nsw i64 %166, 1
  %206 = icmp eq i64 %205, %164
  br i1 %206, label %207, label %165

207:                                              ; preds = %203, %116, %140, %148, %83, %124
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii12SparseMatrixIeE3setIeEEvjjPKjPKT_b(ptr noundef nonnull align 8 dereferenceable(36) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !8
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 9
  %10 = load ptr, ptr %9, align 8, !tbaa !46
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %60, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %8, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = zext i32 %1 to i64
  %16 = getelementptr inbounds i64, ptr %14, i64 %15
  %17 = load i64, ptr %16, align 8, !tbaa !34
  %18 = trunc i64 %17 to i32
  %19 = add i32 %1, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %22 = zext i32 %2 to i64
  br i1 %5, label %61, label %23

23:                                               ; preds = %12, %56
  %24 = phi i64 [ %58, %56 ], [ 0, %12 ]
  %25 = phi i32 [ %57, %56 ], [ %18, %12 ]
  %26 = getelementptr inbounds x86_fp80, ptr %4, i64 %24
  %27 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %28 = zext i32 %25 to i64
  %29 = load ptr, ptr %7, align 8, !tbaa !8
  %30 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %29, i64 0, i32 8
  %31 = load ptr, ptr %30, align 8, !tbaa !32
  %32 = getelementptr inbounds i64, ptr %31, i64 %20
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = icmp eq i64 %33, %28
  br i1 %34, label %35, label %38

35:                                               ; preds = %23
  %36 = getelementptr inbounds i32, ptr %3, i64 %24
  %37 = load i32, ptr %36, align 4, !tbaa !47
  br label %44

38:                                               ; preds = %23
  %39 = getelementptr inbounds i32, ptr %10, i64 %28
  %40 = load i32, ptr %39, align 4, !tbaa !47
  %41 = getelementptr inbounds i32, ptr %3, i64 %24
  %42 = load i32, ptr %41, align 4, !tbaa !47
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %50, label %44

44:                                               ; preds = %35, %38
  %45 = phi i32 [ %37, %35 ], [ %42, %38 ]
  %46 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %29, i32 noundef %1, i32 noundef %45)
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %56, label %48

48:                                               ; preds = %44
  %49 = zext i32 %46 to i64
  br label %50

50:                                               ; preds = %48, %38
  %51 = phi i64 [ %49, %48 ], [ %28, %38 ]
  %52 = phi i32 [ %46, %48 ], [ %25, %38 ]
  %53 = load ptr, ptr %21, align 8, !tbaa !125
  %54 = getelementptr inbounds x86_fp80, ptr %53, i64 %51
  store x86_fp80 %27, ptr %54, align 16, !tbaa !128
  %55 = add i32 %52, 1
  br label %56

56:                                               ; preds = %50, %44
  %57 = phi i32 [ %55, %50 ], [ -1, %44 ]
  %58 = add nuw nsw i64 %24, 1
  %59 = icmp eq i64 %58, %22
  br i1 %59, label %60, label %23

60:                                               ; preds = %56, %96, %6
  ret void

61:                                               ; preds = %12, %96
  %62 = phi i64 [ %98, %96 ], [ 0, %12 ]
  %63 = phi i32 [ %97, %96 ], [ %18, %12 ]
  %64 = getelementptr inbounds x86_fp80, ptr %4, i64 %62
  %65 = load x86_fp80, ptr %64, align 16, !tbaa !128
  %66 = fcmp oeq x86_fp80 %65, 0xK00000000000000000000
  br i1 %66, label %96, label %67

67:                                               ; preds = %61
  %68 = zext i32 %63 to i64
  %69 = load ptr, ptr %7, align 8, !tbaa !8
  %70 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %69, i64 0, i32 8
  %71 = load ptr, ptr %70, align 8, !tbaa !32
  %72 = getelementptr inbounds i64, ptr %71, i64 %20
  %73 = load i64, ptr %72, align 8, !tbaa !34
  %74 = icmp eq i64 %73, %68
  br i1 %74, label %75, label %78

75:                                               ; preds = %67
  %76 = getelementptr inbounds i32, ptr %3, i64 %62
  %77 = load i32, ptr %76, align 4, !tbaa !47
  br label %84

78:                                               ; preds = %67
  %79 = getelementptr inbounds i32, ptr %10, i64 %68
  %80 = load i32, ptr %79, align 4, !tbaa !47
  %81 = getelementptr inbounds i32, ptr %3, i64 %62
  %82 = load i32, ptr %81, align 4, !tbaa !47
  %83 = icmp eq i32 %80, %82
  br i1 %83, label %90, label %84

84:                                               ; preds = %75, %78
  %85 = phi i32 [ %77, %75 ], [ %82, %78 ]
  %86 = tail call noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %69, i32 noundef %1, i32 noundef %85)
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %96, label %88

88:                                               ; preds = %84
  %89 = zext i32 %86 to i64
  br label %90

90:                                               ; preds = %88, %78
  %91 = phi i64 [ %89, %88 ], [ %68, %78 ]
  %92 = phi i32 [ %86, %88 ], [ %63, %78 ]
  %93 = load ptr, ptr %21, align 8, !tbaa !125
  %94 = getelementptr inbounds x86_fp80, ptr %93, i64 %91
  store x86_fp80 %65, ptr %94, align 16, !tbaa !128
  %95 = add i32 %92, 1
  br label %96

96:                                               ; preds = %84, %61, %90
  %97 = phi i32 [ %95, %90 ], [ %63, %61 ], [ -1, %84 ]
  %98 = add nuw nsw i64 %62, 1
  %99 = icmp eq i64 %98, %22
  br i1 %99, label %60, label %61
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIdE18matrix_norm_squareIdEET_RKNS_6VectorIS3_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !13
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 9
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = load i64, ptr %10, align 8, !tbaa !34
  %16 = getelementptr inbounds i32, ptr %14, i64 %15
  %17 = getelementptr inbounds double, ptr %8, i64 %15
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %6 to i64
  br label %23

21:                                               ; preds = %46, %2
  %22 = phi double [ 0.000000e+00, %2 ], [ %52, %46 ]
  ret double %22

23:                                               ; preds = %12, %46
  %24 = phi i64 [ 0, %12 ], [ %28, %46 ]
  %25 = phi double [ 0.000000e+00, %12 ], [ %52, %46 ]
  %26 = phi ptr [ %16, %12 ], [ %49, %46 ]
  %27 = phi ptr [ %17, %12 ], [ %48, %46 ]
  %28 = add nuw nsw i64 %24, 1
  %29 = getelementptr inbounds i64, ptr %10, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = getelementptr inbounds double, ptr %8, i64 %30
  %32 = icmp eq ptr %27, %31
  br i1 %32, label %46, label %33

33:                                               ; preds = %23, %33
  %34 = phi ptr [ %39, %33 ], [ %26, %23 ]
  %35 = phi ptr [ %37, %33 ], [ %27, %23 ]
  %36 = phi double [ %44, %33 ], [ 0.000000e+00, %23 ]
  %37 = getelementptr inbounds double, ptr %35, i64 1
  %38 = load double, ptr %35, align 8, !tbaa !30
  %39 = getelementptr inbounds i32, ptr %34, i64 1
  %40 = load i32, ptr %34, align 4, !tbaa !47
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds double, ptr %19, i64 %41
  %43 = load double, ptr %42, align 8, !tbaa !30
  %44 = tail call double @llvm.fmuladd.f64(double %38, double %43, double %36)
  %45 = icmp eq ptr %37, %31
  br i1 %45, label %46, label %33

46:                                               ; preds = %33, %23
  %47 = phi double [ 0.000000e+00, %23 ], [ %44, %33 ]
  %48 = phi ptr [ %27, %23 ], [ %31, %33 ]
  %49 = phi ptr [ %26, %23 ], [ %39, %33 ]
  %50 = getelementptr inbounds double, ptr %19, i64 %24
  %51 = load double, ptr %50, align 8, !tbaa !30
  %52 = tail call double @llvm.fmuladd.f64(double %51, double %47, double %25)
  %53 = icmp eq i64 %28, %20
  br i1 %53, label %21, label %23
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIdE21matrix_scalar_productIdEET_RKNS_6VectorIS3_EES7_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = load i64, ptr %11, align 8, !tbaa !34
  %17 = getelementptr inbounds i32, ptr %15, i64 %16
  %18 = getelementptr inbounds double, ptr %9, i64 %16
  %19 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !53
  %23 = zext i32 %7 to i64
  br label %26

24:                                               ; preds = %49, %3
  %25 = phi double [ 0.000000e+00, %3 ], [ %55, %49 ]
  ret double %25

26:                                               ; preds = %13, %49
  %27 = phi i64 [ 0, %13 ], [ %31, %49 ]
  %28 = phi double [ 0.000000e+00, %13 ], [ %55, %49 ]
  %29 = phi ptr [ %17, %13 ], [ %52, %49 ]
  %30 = phi ptr [ %18, %13 ], [ %51, %49 ]
  %31 = add nuw nsw i64 %27, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = getelementptr inbounds double, ptr %9, i64 %33
  %35 = icmp eq ptr %30, %34
  br i1 %35, label %49, label %36

36:                                               ; preds = %26, %36
  %37 = phi ptr [ %42, %36 ], [ %29, %26 ]
  %38 = phi ptr [ %40, %36 ], [ %30, %26 ]
  %39 = phi double [ %47, %36 ], [ 0.000000e+00, %26 ]
  %40 = getelementptr inbounds double, ptr %38, i64 1
  %41 = load double, ptr %38, align 8, !tbaa !30
  %42 = getelementptr inbounds i32, ptr %37, i64 1
  %43 = load i32, ptr %37, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds double, ptr %20, i64 %44
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = tail call double @llvm.fmuladd.f64(double %41, double %46, double %39)
  %48 = icmp eq ptr %40, %34
  br i1 %48, label %49, label %36

49:                                               ; preds = %36, %26
  %50 = phi double [ 0.000000e+00, %26 ], [ %47, %36 ]
  %51 = phi ptr [ %30, %26 ], [ %34, %36 ]
  %52 = phi ptr [ %29, %26 ], [ %42, %36 ]
  %53 = getelementptr inbounds double, ptr %22, i64 %27
  %54 = load double, ptr %53, align 8, !tbaa !30
  %55 = tail call double @llvm.fmuladd.f64(double %54, double %50, double %28)
  %56 = icmp eq i64 %31, %23
  br i1 %56, label %24, label %26
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIdE8residualIdEET_RNS_6VectorIS3_EERKS5_S8_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %3, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !53
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !53
  %22 = zext i32 %8 to i64
  %23 = load i64, ptr %14, align 8, !tbaa !34
  br label %27

24:                                               ; preds = %41, %4
  %25 = phi double [ 0.000000e+00, %4 ], [ %44, %41 ]
  %26 = tail call double @sqrt(double noundef %25) #17
  ret double %26

27:                                               ; preds = %10, %41
  %28 = phi i64 [ %23, %10 ], [ %35, %41 ]
  %29 = phi i64 [ 0, %10 ], [ %33, %41 ]
  %30 = phi double [ 0.000000e+00, %10 ], [ %44, %41 ]
  %31 = getelementptr inbounds double, ptr %12, i64 %29
  %32 = load double, ptr %31, align 8, !tbaa !30
  %33 = add nuw nsw i64 %29, 1
  %34 = getelementptr inbounds i64, ptr %14, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %28, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %27
  %39 = trunc i64 %28 to i32
  %40 = load ptr, ptr %15, align 8, !tbaa !46
  br label %46

41:                                               ; preds = %46, %27
  %42 = phi double [ %32, %27 ], [ %58, %46 ]
  %43 = getelementptr inbounds double, ptr %21, i64 %29
  store double %42, ptr %43, align 8, !tbaa !30
  %44 = tail call double @llvm.fmuladd.f64(double %42, double %42, double %30)
  %45 = icmp eq i64 %33, %22
  br i1 %45, label %24, label %27

46:                                               ; preds = %38, %46
  %47 = phi i64 [ %36, %38 ], [ %60, %46 ]
  %48 = phi i32 [ %39, %38 ], [ %59, %46 ]
  %49 = phi double [ %32, %38 ], [ %58, %46 ]
  %50 = getelementptr inbounds i32, ptr %40, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = getelementptr inbounds double, ptr %17, i64 %47
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds double, ptr %19, i64 %54
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = fneg double %53
  %58 = tail call double @llvm.fmuladd.f64(double %57, double %56, double %49)
  %59 = add i32 %48, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %35, %60
  br i1 %61, label %46, label %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE17precondition_SSORIdEEvRNS_6VectorIT_EERKS5_dRKSt6vectorIjSaIjEE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !56
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !53
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !195
  %16 = load ptr, ptr %4, align 8, !tbaa !197
  %17 = icmp eq ptr %15, %16
  %18 = icmp eq i32 %7, 0
  br i1 %17, label %27, label %19

19:                                               ; preds = %5
  br i1 %18, label %662, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !53
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %26 = zext i32 %7 to i64
  br label %47

27:                                               ; preds = %5
  br i1 %18, label %662, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !53
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = ptrtoint ptr %32 to i64
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %7 to i64
  %37 = load i64, ptr %11, align 8, !tbaa !34
  br label %284

38:                                               ; preds = %88
  br i1 %18, label %662, label %39

39:                                               ; preds = %38
  %40 = fsub double 2.000000e+00, %3
  %41 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !13
  %43 = and i32 %7, 1
  %44 = icmp eq i32 %7, 1
  br i1 %44, label %140, label %45

45:                                               ; preds = %39
  %46 = and i32 %7, -2
  br label %161

47:                                               ; preds = %20, %88
  %48 = phi i64 [ 0, %20 ], [ %95, %88 ]
  %49 = phi ptr [ %11, %20 ], [ %97, %88 ]
  %50 = phi ptr [ %13, %20 ], [ %96, %88 ]
  %51 = getelementptr inbounds double, ptr %22, i64 %48
  %52 = load double, ptr %51, align 8, !tbaa !30
  store double %52, ptr %50, align 8, !tbaa !30
  %53 = getelementptr inbounds i32, ptr %16, i64 %48
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = load i64, ptr %49, align 8, !tbaa !34
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, 1
  %58 = icmp ult i32 %57, %54
  br i1 %58, label %59, label %88

59:                                               ; preds = %47
  %60 = load ptr, ptr %25, align 8, !tbaa !46
  %61 = zext i32 %57 to i64
  %62 = xor i32 %56, -1
  %63 = add i32 %54, %62
  %64 = add i32 %54, -2
  %65 = sub i32 %64, %56
  %66 = and i32 %63, 3
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %59, %68
  %69 = phi i64 [ %80, %68 ], [ %61, %59 ]
  %70 = phi double [ %79, %68 ], [ 0.000000e+00, %59 ]
  %71 = phi i32 [ %81, %68 ], [ 0, %59 ]
  %72 = getelementptr inbounds double, ptr %24, i64 %69
  %73 = load double, ptr %72, align 8, !tbaa !30
  %74 = getelementptr inbounds i32, ptr %60, i64 %69
  %75 = load i32, ptr %74, align 4, !tbaa !47
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds double, ptr %13, i64 %76
  %78 = load double, ptr %77, align 8, !tbaa !30
  %79 = tail call double @llvm.fmuladd.f64(double %73, double %78, double %70)
  %80 = add nuw nsw i64 %69, 1
  %81 = add i32 %71, 1
  %82 = icmp eq i32 %81, %66
  br i1 %82, label %83, label %68, !llvm.loop !198

83:                                               ; preds = %68, %59
  %84 = phi double [ undef, %59 ], [ %79, %68 ]
  %85 = phi i64 [ %61, %59 ], [ %80, %68 ]
  %86 = phi double [ 0.000000e+00, %59 ], [ %79, %68 ]
  %87 = icmp ult i32 %65, 3
  br i1 %87, label %88, label %99

88:                                               ; preds = %83, %99, %47
  %89 = phi double [ 0.000000e+00, %47 ], [ %84, %83 ], [ %136, %99 ]
  %90 = fneg double %89
  %91 = tail call double @llvm.fmuladd.f64(double %90, double %3, double %52)
  store double %91, ptr %50, align 8, !tbaa !30
  %92 = getelementptr inbounds double, ptr %24, i64 %55
  %93 = load double, ptr %92, align 8, !tbaa !30
  %94 = fdiv double %91, %93
  store double %94, ptr %50, align 8, !tbaa !30
  %95 = add nuw nsw i64 %48, 1
  %96 = getelementptr inbounds double, ptr %50, i64 1
  %97 = getelementptr inbounds i64, ptr %49, i64 1
  %98 = icmp eq i64 %95, %26
  br i1 %98, label %38, label %47

99:                                               ; preds = %83, %99
  %100 = phi i64 [ %137, %99 ], [ %85, %83 ]
  %101 = phi double [ %136, %99 ], [ %86, %83 ]
  %102 = getelementptr inbounds double, ptr %24, i64 %100
  %103 = load double, ptr %102, align 8, !tbaa !30
  %104 = getelementptr inbounds i32, ptr %60, i64 %100
  %105 = load i32, ptr %104, align 4, !tbaa !47
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds double, ptr %13, i64 %106
  %108 = load double, ptr %107, align 8, !tbaa !30
  %109 = tail call double @llvm.fmuladd.f64(double %103, double %108, double %101)
  %110 = add nuw nsw i64 %100, 1
  %111 = getelementptr inbounds double, ptr %24, i64 %110
  %112 = load double, ptr %111, align 8, !tbaa !30
  %113 = getelementptr inbounds i32, ptr %60, i64 %110
  %114 = load i32, ptr %113, align 4, !tbaa !47
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds double, ptr %13, i64 %115
  %117 = load double, ptr %116, align 8, !tbaa !30
  %118 = tail call double @llvm.fmuladd.f64(double %112, double %117, double %109)
  %119 = add nuw nsw i64 %100, 2
  %120 = getelementptr inbounds double, ptr %24, i64 %119
  %121 = load double, ptr %120, align 8, !tbaa !30
  %122 = getelementptr inbounds i32, ptr %60, i64 %119
  %123 = load i32, ptr %122, align 4, !tbaa !47
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds double, ptr %13, i64 %124
  %126 = load double, ptr %125, align 8, !tbaa !30
  %127 = tail call double @llvm.fmuladd.f64(double %121, double %126, double %118)
  %128 = add nuw nsw i64 %100, 3
  %129 = getelementptr inbounds double, ptr %24, i64 %128
  %130 = load double, ptr %129, align 8, !tbaa !30
  %131 = getelementptr inbounds i32, ptr %60, i64 %128
  %132 = load i32, ptr %131, align 4, !tbaa !47
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds double, ptr %13, i64 %133
  %135 = load double, ptr %134, align 8, !tbaa !30
  %136 = tail call double @llvm.fmuladd.f64(double %130, double %135, double %127)
  %137 = add nuw nsw i64 %100, 4
  %138 = trunc i64 %137 to i32
  %139 = icmp eq i32 %54, %138
  br i1 %139, label %88, label %99

140:                                              ; preds = %161, %39
  %141 = phi ptr [ %11, %39 ], [ %179, %161 ]
  %142 = phi ptr [ %13, %39 ], [ %180, %161 ]
  %143 = icmp eq i32 %43, 0
  br i1 %143, label %151, label %144

144:                                              ; preds = %140
  %145 = load i64, ptr %141, align 8, !tbaa !34
  %146 = getelementptr inbounds double, ptr %42, i64 %145
  %147 = load double, ptr %146, align 8, !tbaa !30
  %148 = fmul double %40, %147
  %149 = load double, ptr %142, align 8, !tbaa !30
  %150 = fmul double %149, %148
  store double %150, ptr %142, align 8, !tbaa !30
  br label %151

151:                                              ; preds = %140, %144
  %152 = add i32 %7, -1
  %153 = icmp sgt i32 %152, -1
  br i1 %153, label %154, label %662

154:                                              ; preds = %151
  %155 = zext i32 %152 to i64
  %156 = getelementptr inbounds double, ptr %13, i64 %155
  %157 = getelementptr inbounds i64, ptr %11, i64 %155
  %158 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %159 = load ptr, ptr %158, align 8
  %160 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  br label %183

161:                                              ; preds = %161, %45
  %162 = phi ptr [ %11, %45 ], [ %179, %161 ]
  %163 = phi ptr [ %13, %45 ], [ %180, %161 ]
  %164 = phi i32 [ 0, %45 ], [ %181, %161 ]
  %165 = load i64, ptr %162, align 8, !tbaa !34
  %166 = getelementptr inbounds double, ptr %42, i64 %165
  %167 = load double, ptr %166, align 8, !tbaa !30
  %168 = fmul double %40, %167
  %169 = load double, ptr %163, align 8, !tbaa !30
  %170 = fmul double %169, %168
  store double %170, ptr %163, align 8, !tbaa !30
  %171 = getelementptr inbounds i64, ptr %162, i64 1
  %172 = getelementptr inbounds double, ptr %163, i64 1
  %173 = load i64, ptr %171, align 8, !tbaa !34
  %174 = getelementptr inbounds double, ptr %42, i64 %173
  %175 = load double, ptr %174, align 8, !tbaa !30
  %176 = fmul double %40, %175
  %177 = load double, ptr %172, align 8, !tbaa !30
  %178 = fmul double %177, %176
  store double %178, ptr %172, align 8, !tbaa !30
  %179 = getelementptr inbounds i64, ptr %162, i64 2
  %180 = getelementptr inbounds double, ptr %163, i64 2
  %181 = add i32 %164, 2
  %182 = icmp eq i32 %181, %46
  br i1 %182, label %140, label %161

183:                                              ; preds = %154, %222
  %184 = phi i64 [ %155, %154 ], [ %231, %222 ]
  %185 = phi ptr [ %157, %154 ], [ %232, %222 ]
  %186 = phi ptr [ %156, %154 ], [ %233, %222 ]
  %187 = getelementptr inbounds i64, ptr %185, i64 1
  %188 = load i64, ptr %187, align 8, !tbaa !34
  %189 = trunc i64 %188 to i32
  %190 = getelementptr inbounds i32, ptr %16, i64 %184
  %191 = load i32, ptr %190, align 4, !tbaa !47
  %192 = icmp ult i32 %191, %189
  br i1 %192, label %193, label %222

193:                                              ; preds = %183
  %194 = load ptr, ptr %160, align 8, !tbaa !46
  %195 = zext i32 %191 to i64
  %196 = and i64 %188, 4294967295
  %197 = sub i64 %188, %195
  %198 = xor i64 %195, -1
  %199 = add nsw i64 %196, %198
  %200 = and i64 %197, 3
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %217, label %202

202:                                              ; preds = %193, %202
  %203 = phi i64 [ %214, %202 ], [ %195, %193 ]
  %204 = phi double [ %213, %202 ], [ 0.000000e+00, %193 ]
  %205 = phi i64 [ %215, %202 ], [ 0, %193 ]
  %206 = getelementptr inbounds double, ptr %159, i64 %203
  %207 = load double, ptr %206, align 8, !tbaa !30
  %208 = getelementptr inbounds i32, ptr %194, i64 %203
  %209 = load i32, ptr %208, align 4, !tbaa !47
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds double, ptr %13, i64 %210
  %212 = load double, ptr %211, align 8, !tbaa !30
  %213 = tail call double @llvm.fmuladd.f64(double %207, double %212, double %204)
  %214 = add nuw nsw i64 %203, 1
  %215 = add i64 %205, 1
  %216 = icmp eq i64 %215, %200
  br i1 %216, label %217, label %202, !llvm.loop !200

217:                                              ; preds = %202, %193
  %218 = phi double [ undef, %193 ], [ %213, %202 ]
  %219 = phi i64 [ %195, %193 ], [ %214, %202 ]
  %220 = phi double [ 0.000000e+00, %193 ], [ %213, %202 ]
  %221 = icmp ult i64 %199, 3
  br i1 %221, label %222, label %235

222:                                              ; preds = %217, %235, %183
  %223 = phi double [ 0.000000e+00, %183 ], [ %218, %217 ], [ %272, %235 ]
  %224 = load double, ptr %186, align 8, !tbaa !30
  %225 = fneg double %223
  %226 = tail call double @llvm.fmuladd.f64(double %225, double %3, double %224)
  store double %226, ptr %186, align 8, !tbaa !30
  %227 = load i64, ptr %185, align 8, !tbaa !34
  %228 = getelementptr inbounds double, ptr %159, i64 %227
  %229 = load double, ptr %228, align 8, !tbaa !30
  %230 = fdiv double %226, %229
  store double %230, ptr %186, align 8, !tbaa !30
  %231 = add nsw i64 %184, -1
  %232 = getelementptr inbounds i64, ptr %185, i64 -1
  %233 = getelementptr inbounds double, ptr %186, i64 -1
  %234 = icmp sgt i64 %184, 0
  br i1 %234, label %183, label %662

235:                                              ; preds = %217, %235
  %236 = phi i64 [ %273, %235 ], [ %219, %217 ]
  %237 = phi double [ %272, %235 ], [ %220, %217 ]
  %238 = getelementptr inbounds double, ptr %159, i64 %236
  %239 = load double, ptr %238, align 8, !tbaa !30
  %240 = getelementptr inbounds i32, ptr %194, i64 %236
  %241 = load i32, ptr %240, align 4, !tbaa !47
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds double, ptr %13, i64 %242
  %244 = load double, ptr %243, align 8, !tbaa !30
  %245 = tail call double @llvm.fmuladd.f64(double %239, double %244, double %237)
  %246 = add nuw nsw i64 %236, 1
  %247 = getelementptr inbounds double, ptr %159, i64 %246
  %248 = load double, ptr %247, align 8, !tbaa !30
  %249 = getelementptr inbounds i32, ptr %194, i64 %246
  %250 = load i32, ptr %249, align 4, !tbaa !47
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds double, ptr %13, i64 %251
  %253 = load double, ptr %252, align 8, !tbaa !30
  %254 = tail call double @llvm.fmuladd.f64(double %248, double %253, double %245)
  %255 = add nuw nsw i64 %236, 2
  %256 = getelementptr inbounds double, ptr %159, i64 %255
  %257 = load double, ptr %256, align 8, !tbaa !30
  %258 = getelementptr inbounds i32, ptr %194, i64 %255
  %259 = load i32, ptr %258, align 4, !tbaa !47
  %260 = zext i32 %259 to i64
  %261 = getelementptr inbounds double, ptr %13, i64 %260
  %262 = load double, ptr %261, align 8, !tbaa !30
  %263 = tail call double @llvm.fmuladd.f64(double %257, double %262, double %254)
  %264 = add nuw nsw i64 %236, 3
  %265 = getelementptr inbounds double, ptr %159, i64 %264
  %266 = load double, ptr %265, align 8, !tbaa !30
  %267 = getelementptr inbounds i32, ptr %194, i64 %264
  %268 = load i32, ptr %267, align 4, !tbaa !47
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds double, ptr %13, i64 %269
  %271 = load double, ptr %270, align 8, !tbaa !30
  %272 = tail call double @llvm.fmuladd.f64(double %266, double %271, double %263)
  %273 = add nuw nsw i64 %236, 4
  %274 = icmp eq i64 %273, %196
  br i1 %274, label %222, label %235

275:                                              ; preds = %404
  br i1 %18, label %662, label %276

276:                                              ; preds = %275
  %277 = fsub double 2.000000e+00, %3
  %278 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %279 = load ptr, ptr %278, align 8, !tbaa !13
  %280 = and i32 %7, 1
  %281 = icmp eq i32 %7, 1
  br i1 %281, label %455, label %282

282:                                              ; preds = %276
  %283 = and i32 %7, -2
  br label %478

284:                                              ; preds = %28, %404
  %285 = phi i64 [ %37, %28 ], [ %294, %404 ]
  %286 = phi i64 [ 0, %28 ], [ %411, %404 ]
  %287 = phi ptr [ %11, %28 ], [ %293, %404 ]
  %288 = phi ptr [ %13, %28 ], [ %412, %404 ]
  %289 = getelementptr inbounds double, ptr %30, i64 %286
  %290 = load double, ptr %289, align 8, !tbaa !30
  store double %290, ptr %288, align 8, !tbaa !30
  %291 = add i64 %285, 1
  %292 = getelementptr inbounds i32, ptr %32, i64 %291
  %293 = getelementptr inbounds i64, ptr %287, i64 1
  %294 = load i64, ptr %293, align 8, !tbaa !34
  %295 = getelementptr inbounds i32, ptr %32, i64 %294
  %296 = ptrtoint ptr %295 to i64
  %297 = ptrtoint ptr %292 to i64
  %298 = sub i64 %296, %297
  %299 = lshr exact i64 %298, 2
  %300 = trunc i64 %299 to i32
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %367, label %302

302:                                              ; preds = %284, %355
  %303 = phi i32 [ %365, %355 ], [ %300, %284 ]
  %304 = phi ptr [ %366, %355 ], [ %292, %284 ]
  %305 = icmp ult i32 %303, 8
  br i1 %305, label %306, label %355

306:                                              ; preds = %302
  switch i32 %303, label %355 [
    i32 7, label %307
    i32 6, label %313
    i32 5, label %320
    i32 4, label %327
    i32 3, label %334
    i32 2, label %341
    i32 1, label %348
  ]

307:                                              ; preds = %306
  %308 = load i32, ptr %304, align 4, !tbaa !47
  %309 = zext i32 %308 to i64
  %310 = icmp ugt i64 %286, %309
  br i1 %310, label %311, label %367

311:                                              ; preds = %307
  %312 = getelementptr inbounds i32, ptr %304, i64 1
  br label %313

313:                                              ; preds = %306, %311
  %314 = phi ptr [ %312, %311 ], [ %304, %306 ]
  %315 = load i32, ptr %314, align 4, !tbaa !47
  %316 = zext i32 %315 to i64
  %317 = icmp ugt i64 %286, %316
  br i1 %317, label %318, label %367

318:                                              ; preds = %313
  %319 = getelementptr inbounds i32, ptr %314, i64 1
  br label %320

320:                                              ; preds = %306, %318
  %321 = phi ptr [ %319, %318 ], [ %304, %306 ]
  %322 = load i32, ptr %321, align 4, !tbaa !47
  %323 = zext i32 %322 to i64
  %324 = icmp ugt i64 %286, %323
  br i1 %324, label %325, label %367

325:                                              ; preds = %320
  %326 = getelementptr inbounds i32, ptr %321, i64 1
  br label %327

327:                                              ; preds = %306, %325
  %328 = phi ptr [ %326, %325 ], [ %304, %306 ]
  %329 = load i32, ptr %328, align 4, !tbaa !47
  %330 = zext i32 %329 to i64
  %331 = icmp ugt i64 %286, %330
  br i1 %331, label %332, label %367

332:                                              ; preds = %327
  %333 = getelementptr inbounds i32, ptr %328, i64 1
  br label %334

334:                                              ; preds = %306, %332
  %335 = phi ptr [ %333, %332 ], [ %304, %306 ]
  %336 = load i32, ptr %335, align 4, !tbaa !47
  %337 = zext i32 %336 to i64
  %338 = icmp ugt i64 %286, %337
  br i1 %338, label %339, label %367

339:                                              ; preds = %334
  %340 = getelementptr inbounds i32, ptr %335, i64 1
  br label %341

341:                                              ; preds = %306, %339
  %342 = phi ptr [ %340, %339 ], [ %304, %306 ]
  %343 = load i32, ptr %342, align 4, !tbaa !47
  %344 = zext i32 %343 to i64
  %345 = icmp ugt i64 %286, %344
  br i1 %345, label %346, label %367

346:                                              ; preds = %341
  %347 = getelementptr inbounds i32, ptr %342, i64 1
  br label %348

348:                                              ; preds = %306, %346
  %349 = phi ptr [ %347, %346 ], [ %304, %306 ]
  %350 = load i32, ptr %349, align 4, !tbaa !47
  %351 = zext i32 %350 to i64
  %352 = icmp ugt i64 %286, %351
  %353 = zext i1 %352 to i64
  %354 = getelementptr inbounds i32, ptr %349, i64 %353
  br label %367

355:                                              ; preds = %306, %302
  %356 = lshr i32 %303, 1
  %357 = zext i32 %356 to i64
  %358 = getelementptr inbounds i32, ptr %304, i64 %357
  %359 = load i32, ptr %358, align 4, !tbaa !47
  %360 = zext i32 %359 to i64
  %361 = icmp ugt i64 %286, %360
  %362 = getelementptr inbounds i32, ptr %358, i64 1
  %363 = xor i32 %356, -1
  %364 = add i32 %303, %363
  %365 = select i1 %361, i32 %364, i32 %356
  %366 = select i1 %361, ptr %362, ptr %304
  br label %302

367:                                              ; preds = %284, %307, %313, %320, %327, %334, %341, %348
  %368 = phi ptr [ %292, %284 ], [ %304, %307 ], [ %314, %313 ], [ %321, %320 ], [ %328, %327 ], [ %335, %334 ], [ %342, %341 ], [ %354, %348 ]
  %369 = ptrtoint ptr %368 to i64
  %370 = sub i64 %369, %33
  %371 = lshr exact i64 %370, 2
  %372 = trunc i64 %371 to i32
  %373 = trunc i64 %285 to i32
  %374 = add i32 %373, 1
  %375 = icmp ult i32 %374, %372
  br i1 %375, label %376, label %404

376:                                              ; preds = %367
  %377 = zext i32 %374 to i64
  %378 = xor i32 %373, -1
  %379 = add i32 %378, %372
  %380 = add i32 %372, -2
  %381 = sub i32 %380, %373
  %382 = and i32 %379, 3
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %399, label %384

384:                                              ; preds = %376, %384
  %385 = phi i64 [ %396, %384 ], [ %377, %376 ]
  %386 = phi double [ %395, %384 ], [ 0.000000e+00, %376 ]
  %387 = phi i32 [ %397, %384 ], [ 0, %376 ]
  %388 = getelementptr inbounds double, ptr %35, i64 %385
  %389 = load double, ptr %388, align 8, !tbaa !30
  %390 = getelementptr inbounds i32, ptr %32, i64 %385
  %391 = load i32, ptr %390, align 4, !tbaa !47
  %392 = zext i32 %391 to i64
  %393 = getelementptr inbounds double, ptr %13, i64 %392
  %394 = load double, ptr %393, align 8, !tbaa !30
  %395 = tail call double @llvm.fmuladd.f64(double %389, double %394, double %386)
  %396 = add nuw nsw i64 %385, 1
  %397 = add i32 %387, 1
  %398 = icmp eq i32 %397, %382
  br i1 %398, label %399, label %384, !llvm.loop !201

399:                                              ; preds = %384, %376
  %400 = phi double [ undef, %376 ], [ %395, %384 ]
  %401 = phi i64 [ %377, %376 ], [ %396, %384 ]
  %402 = phi double [ 0.000000e+00, %376 ], [ %395, %384 ]
  %403 = icmp ult i32 %381, 3
  br i1 %403, label %404, label %414

404:                                              ; preds = %399, %414, %367
  %405 = phi double [ 0.000000e+00, %367 ], [ %400, %399 ], [ %451, %414 ]
  %406 = fneg double %405
  %407 = tail call double @llvm.fmuladd.f64(double %406, double %3, double %290)
  store double %407, ptr %288, align 8, !tbaa !30
  %408 = getelementptr inbounds double, ptr %35, i64 %285
  %409 = load double, ptr %408, align 8, !tbaa !30
  %410 = fdiv double %407, %409
  store double %410, ptr %288, align 8, !tbaa !30
  %411 = add nuw nsw i64 %286, 1
  %412 = getelementptr inbounds double, ptr %288, i64 1
  %413 = icmp eq i64 %411, %36
  br i1 %413, label %275, label %284

414:                                              ; preds = %399, %414
  %415 = phi i64 [ %452, %414 ], [ %401, %399 ]
  %416 = phi double [ %451, %414 ], [ %402, %399 ]
  %417 = getelementptr inbounds double, ptr %35, i64 %415
  %418 = load double, ptr %417, align 8, !tbaa !30
  %419 = getelementptr inbounds i32, ptr %32, i64 %415
  %420 = load i32, ptr %419, align 4, !tbaa !47
  %421 = zext i32 %420 to i64
  %422 = getelementptr inbounds double, ptr %13, i64 %421
  %423 = load double, ptr %422, align 8, !tbaa !30
  %424 = tail call double @llvm.fmuladd.f64(double %418, double %423, double %416)
  %425 = add nuw nsw i64 %415, 1
  %426 = getelementptr inbounds double, ptr %35, i64 %425
  %427 = load double, ptr %426, align 8, !tbaa !30
  %428 = getelementptr inbounds i32, ptr %32, i64 %425
  %429 = load i32, ptr %428, align 4, !tbaa !47
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds double, ptr %13, i64 %430
  %432 = load double, ptr %431, align 8, !tbaa !30
  %433 = tail call double @llvm.fmuladd.f64(double %427, double %432, double %424)
  %434 = add nuw nsw i64 %415, 2
  %435 = getelementptr inbounds double, ptr %35, i64 %434
  %436 = load double, ptr %435, align 8, !tbaa !30
  %437 = getelementptr inbounds i32, ptr %32, i64 %434
  %438 = load i32, ptr %437, align 4, !tbaa !47
  %439 = zext i32 %438 to i64
  %440 = getelementptr inbounds double, ptr %13, i64 %439
  %441 = load double, ptr %440, align 8, !tbaa !30
  %442 = tail call double @llvm.fmuladd.f64(double %436, double %441, double %433)
  %443 = add nuw nsw i64 %415, 3
  %444 = getelementptr inbounds double, ptr %35, i64 %443
  %445 = load double, ptr %444, align 8, !tbaa !30
  %446 = getelementptr inbounds i32, ptr %32, i64 %443
  %447 = load i32, ptr %446, align 4, !tbaa !47
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds double, ptr %13, i64 %448
  %450 = load double, ptr %449, align 8, !tbaa !30
  %451 = tail call double @llvm.fmuladd.f64(double %445, double %450, double %442)
  %452 = add nuw nsw i64 %415, 4
  %453 = trunc i64 %452 to i32
  %454 = icmp eq i32 %453, %372
  br i1 %454, label %404, label %414

455:                                              ; preds = %478, %276
  %456 = phi ptr [ %11, %276 ], [ %496, %478 ]
  %457 = phi ptr [ %13, %276 ], [ %497, %478 ]
  %458 = icmp eq i32 %280, 0
  br i1 %458, label %466, label %459

459:                                              ; preds = %455
  %460 = load i64, ptr %456, align 8, !tbaa !34
  %461 = getelementptr inbounds double, ptr %279, i64 %460
  %462 = load double, ptr %461, align 8, !tbaa !30
  %463 = fmul double %277, %462
  %464 = load double, ptr %457, align 8, !tbaa !30
  %465 = fmul double %464, %463
  store double %465, ptr %457, align 8, !tbaa !30
  br label %466

466:                                              ; preds = %455, %459
  %467 = add i32 %7, -1
  %468 = icmp sgt i32 %467, -1
  br i1 %468, label %469, label %662

469:                                              ; preds = %466
  %470 = zext i32 %467 to i64
  %471 = getelementptr inbounds double, ptr %13, i64 %470
  %472 = getelementptr inbounds i64, ptr %11, i64 %470
  %473 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %474 = load ptr, ptr %473, align 8, !tbaa !46
  %475 = ptrtoint ptr %474 to i64
  %476 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %477 = load ptr, ptr %476, align 8
  br label %500

478:                                              ; preds = %478, %282
  %479 = phi ptr [ %11, %282 ], [ %496, %478 ]
  %480 = phi ptr [ %13, %282 ], [ %497, %478 ]
  %481 = phi i32 [ 0, %282 ], [ %498, %478 ]
  %482 = load i64, ptr %479, align 8, !tbaa !34
  %483 = getelementptr inbounds double, ptr %279, i64 %482
  %484 = load double, ptr %483, align 8, !tbaa !30
  %485 = fmul double %277, %484
  %486 = load double, ptr %480, align 8, !tbaa !30
  %487 = fmul double %486, %485
  store double %487, ptr %480, align 8, !tbaa !30
  %488 = getelementptr inbounds i64, ptr %479, i64 1
  %489 = getelementptr inbounds double, ptr %480, i64 1
  %490 = load i64, ptr %488, align 8, !tbaa !34
  %491 = getelementptr inbounds double, ptr %279, i64 %490
  %492 = load double, ptr %491, align 8, !tbaa !30
  %493 = fmul double %277, %492
  %494 = load double, ptr %489, align 8, !tbaa !30
  %495 = fmul double %494, %493
  store double %495, ptr %489, align 8, !tbaa !30
  %496 = getelementptr inbounds i64, ptr %479, i64 2
  %497 = getelementptr inbounds double, ptr %480, i64 2
  %498 = add i32 %481, 2
  %499 = icmp eq i32 %498, %283
  br i1 %499, label %455, label %478

500:                                              ; preds = %469, %610
  %501 = phi ptr [ %472, %469 ], [ %619, %610 ]
  %502 = phi ptr [ %471, %469 ], [ %620, %610 ]
  %503 = phi i32 [ %467, %469 ], [ %618, %610 ]
  %504 = getelementptr inbounds i64, ptr %501, i64 1
  %505 = load i64, ptr %504, align 8, !tbaa !34
  %506 = trunc i64 %505 to i32
  %507 = load i64, ptr %501, align 8, !tbaa !34
  %508 = add i64 %507, 1
  %509 = getelementptr inbounds i32, ptr %474, i64 %508
  %510 = and i64 %505, 4294967295
  %511 = getelementptr inbounds i32, ptr %474, i64 %510
  %512 = ptrtoint ptr %511 to i64
  %513 = ptrtoint ptr %509 to i64
  %514 = sub i64 %512, %513
  %515 = lshr exact i64 %514, 2
  %516 = trunc i64 %515 to i32
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %575, label %518

518:                                              ; preds = %500, %564
  %519 = phi i32 [ %573, %564 ], [ %516, %500 ]
  %520 = phi ptr [ %574, %564 ], [ %509, %500 ]
  %521 = icmp ult i32 %519, 8
  br i1 %521, label %522, label %564

522:                                              ; preds = %518
  switch i32 %519, label %564 [
    i32 7, label %523
    i32 6, label %528
    i32 5, label %534
    i32 4, label %540
    i32 3, label %546
    i32 2, label %552
    i32 1, label %558
  ]

523:                                              ; preds = %522
  %524 = load i32, ptr %520, align 4, !tbaa !47
  %525 = icmp ult i32 %524, %503
  br i1 %525, label %526, label %575

526:                                              ; preds = %523
  %527 = getelementptr inbounds i32, ptr %520, i64 1
  br label %528

528:                                              ; preds = %522, %526
  %529 = phi ptr [ %527, %526 ], [ %520, %522 ]
  %530 = load i32, ptr %529, align 4, !tbaa !47
  %531 = icmp ult i32 %530, %503
  br i1 %531, label %532, label %575

532:                                              ; preds = %528
  %533 = getelementptr inbounds i32, ptr %529, i64 1
  br label %534

534:                                              ; preds = %522, %532
  %535 = phi ptr [ %533, %532 ], [ %520, %522 ]
  %536 = load i32, ptr %535, align 4, !tbaa !47
  %537 = icmp ult i32 %536, %503
  br i1 %537, label %538, label %575

538:                                              ; preds = %534
  %539 = getelementptr inbounds i32, ptr %535, i64 1
  br label %540

540:                                              ; preds = %522, %538
  %541 = phi ptr [ %539, %538 ], [ %520, %522 ]
  %542 = load i32, ptr %541, align 4, !tbaa !47
  %543 = icmp ult i32 %542, %503
  br i1 %543, label %544, label %575

544:                                              ; preds = %540
  %545 = getelementptr inbounds i32, ptr %541, i64 1
  br label %546

546:                                              ; preds = %522, %544
  %547 = phi ptr [ %545, %544 ], [ %520, %522 ]
  %548 = load i32, ptr %547, align 4, !tbaa !47
  %549 = icmp ult i32 %548, %503
  br i1 %549, label %550, label %575

550:                                              ; preds = %546
  %551 = getelementptr inbounds i32, ptr %547, i64 1
  br label %552

552:                                              ; preds = %522, %550
  %553 = phi ptr [ %551, %550 ], [ %520, %522 ]
  %554 = load i32, ptr %553, align 4, !tbaa !47
  %555 = icmp ult i32 %554, %503
  br i1 %555, label %556, label %575

556:                                              ; preds = %552
  %557 = getelementptr inbounds i32, ptr %553, i64 1
  br label %558

558:                                              ; preds = %522, %556
  %559 = phi ptr [ %557, %556 ], [ %520, %522 ]
  %560 = load i32, ptr %559, align 4, !tbaa !47
  %561 = icmp ult i32 %560, %503
  %562 = zext i1 %561 to i64
  %563 = getelementptr inbounds i32, ptr %559, i64 %562
  br label %575

564:                                              ; preds = %522, %518
  %565 = lshr i32 %519, 1
  %566 = zext i32 %565 to i64
  %567 = getelementptr inbounds i32, ptr %520, i64 %566
  %568 = load i32, ptr %567, align 4, !tbaa !47
  %569 = icmp ult i32 %568, %503
  %570 = getelementptr inbounds i32, ptr %567, i64 1
  %571 = xor i32 %565, -1
  %572 = add i32 %519, %571
  %573 = select i1 %569, i32 %572, i32 %565
  %574 = select i1 %569, ptr %570, ptr %520
  br label %518

575:                                              ; preds = %500, %523, %528, %534, %540, %546, %552, %558
  %576 = phi ptr [ %509, %500 ], [ %520, %523 ], [ %529, %528 ], [ %535, %534 ], [ %541, %540 ], [ %547, %546 ], [ %553, %552 ], [ %563, %558 ]
  %577 = ptrtoint ptr %576 to i64
  %578 = sub i64 %577, %475
  %579 = lshr exact i64 %578, 2
  %580 = trunc i64 %579 to i32
  %581 = icmp ult i32 %580, %506
  br i1 %581, label %582, label %610

582:                                              ; preds = %575
  %583 = and i64 %579, 4294967295
  %584 = and i64 %505, 4294967295
  %585 = sub i64 %505, %579
  %586 = xor i64 %583, -1
  %587 = add nsw i64 %510, %586
  %588 = and i64 %585, 3
  %589 = icmp eq i64 %588, 0
  br i1 %589, label %605, label %590

590:                                              ; preds = %582, %590
  %591 = phi i64 [ %602, %590 ], [ %583, %582 ]
  %592 = phi double [ %601, %590 ], [ 0.000000e+00, %582 ]
  %593 = phi i64 [ %603, %590 ], [ 0, %582 ]
  %594 = getelementptr inbounds double, ptr %477, i64 %591
  %595 = load double, ptr %594, align 8, !tbaa !30
  %596 = getelementptr inbounds i32, ptr %474, i64 %591
  %597 = load i32, ptr %596, align 4, !tbaa !47
  %598 = zext i32 %597 to i64
  %599 = getelementptr inbounds double, ptr %13, i64 %598
  %600 = load double, ptr %599, align 8, !tbaa !30
  %601 = tail call double @llvm.fmuladd.f64(double %595, double %600, double %592)
  %602 = add nuw nsw i64 %591, 1
  %603 = add i64 %593, 1
  %604 = icmp eq i64 %603, %588
  br i1 %604, label %605, label %590, !llvm.loop !202

605:                                              ; preds = %590, %582
  %606 = phi double [ undef, %582 ], [ %601, %590 ]
  %607 = phi i64 [ %583, %582 ], [ %602, %590 ]
  %608 = phi double [ 0.000000e+00, %582 ], [ %601, %590 ]
  %609 = icmp ult i64 %587, 3
  br i1 %609, label %610, label %622

610:                                              ; preds = %605, %622, %575
  %611 = phi double [ 0.000000e+00, %575 ], [ %606, %605 ], [ %659, %622 ]
  %612 = load double, ptr %502, align 8, !tbaa !30
  %613 = fneg double %611
  %614 = tail call double @llvm.fmuladd.f64(double %613, double %3, double %612)
  store double %614, ptr %502, align 8, !tbaa !30
  %615 = getelementptr inbounds double, ptr %477, i64 %507
  %616 = load double, ptr %615, align 8, !tbaa !30
  %617 = fdiv double %614, %616
  store double %617, ptr %502, align 8, !tbaa !30
  %618 = add nsw i32 %503, -1
  %619 = getelementptr inbounds i64, ptr %501, i64 -1
  %620 = getelementptr inbounds double, ptr %502, i64 -1
  %621 = icmp sgt i32 %503, 0
  br i1 %621, label %500, label %662

622:                                              ; preds = %605, %622
  %623 = phi i64 [ %660, %622 ], [ %607, %605 ]
  %624 = phi double [ %659, %622 ], [ %608, %605 ]
  %625 = getelementptr inbounds double, ptr %477, i64 %623
  %626 = load double, ptr %625, align 8, !tbaa !30
  %627 = getelementptr inbounds i32, ptr %474, i64 %623
  %628 = load i32, ptr %627, align 4, !tbaa !47
  %629 = zext i32 %628 to i64
  %630 = getelementptr inbounds double, ptr %13, i64 %629
  %631 = load double, ptr %630, align 8, !tbaa !30
  %632 = tail call double @llvm.fmuladd.f64(double %626, double %631, double %624)
  %633 = add nuw nsw i64 %623, 1
  %634 = getelementptr inbounds double, ptr %477, i64 %633
  %635 = load double, ptr %634, align 8, !tbaa !30
  %636 = getelementptr inbounds i32, ptr %474, i64 %633
  %637 = load i32, ptr %636, align 4, !tbaa !47
  %638 = zext i32 %637 to i64
  %639 = getelementptr inbounds double, ptr %13, i64 %638
  %640 = load double, ptr %639, align 8, !tbaa !30
  %641 = tail call double @llvm.fmuladd.f64(double %635, double %640, double %632)
  %642 = add nuw nsw i64 %623, 2
  %643 = getelementptr inbounds double, ptr %477, i64 %642
  %644 = load double, ptr %643, align 8, !tbaa !30
  %645 = getelementptr inbounds i32, ptr %474, i64 %642
  %646 = load i32, ptr %645, align 4, !tbaa !47
  %647 = zext i32 %646 to i64
  %648 = getelementptr inbounds double, ptr %13, i64 %647
  %649 = load double, ptr %648, align 8, !tbaa !30
  %650 = tail call double @llvm.fmuladd.f64(double %644, double %649, double %641)
  %651 = add nuw nsw i64 %623, 3
  %652 = getelementptr inbounds double, ptr %477, i64 %651
  %653 = load double, ptr %652, align 8, !tbaa !30
  %654 = getelementptr inbounds i32, ptr %474, i64 %651
  %655 = load i32, ptr %654, align 4, !tbaa !47
  %656 = zext i32 %655 to i64
  %657 = getelementptr inbounds double, ptr %13, i64 %656
  %658 = load double, ptr %657, align 8, !tbaa !30
  %659 = tail call double @llvm.fmuladd.f64(double %653, double %658, double %650)
  %660 = add nuw nsw i64 %623, 4
  %661 = icmp eq i64 %660, %584
  br i1 %661, label %610, label %622

662:                                              ; preds = %222, %610, %27, %275, %19, %38, %151, %466
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE16precondition_SORIdEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %62, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !53
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  %19 = zext i32 %9 to i64
  %20 = load i64, ptr %15, align 8, !tbaa !34
  br label %21

21:                                               ; preds = %35, %11
  %22 = phi i64 [ %20, %11 ], [ %28, %35 ]
  %23 = phi i64 [ 0, %11 ], [ %26, %35 ]
  %24 = getelementptr inbounds double, ptr %13, i64 %23
  %25 = load double, ptr %24, align 8, !tbaa !30
  %26 = add nuw nsw i64 %23, 1
  %27 = getelementptr inbounds i64, ptr %15, i64 %26
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = and i64 %22, 4294967295
  %30 = icmp ugt i64 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %21
  %32 = trunc i64 %22 to i32
  %33 = load ptr, ptr %16, align 8, !tbaa !46
  %34 = load ptr, ptr %17, align 8
  br label %42

35:                                               ; preds = %57, %21
  %36 = phi double [ %25, %21 ], [ %58, %57 ]
  %37 = fmul double %36, %3
  %38 = getelementptr inbounds double, ptr %18, i64 %22
  %39 = load double, ptr %38, align 8, !tbaa !30
  %40 = fdiv double %37, %39
  store double %40, ptr %24, align 8, !tbaa !30
  %41 = icmp eq i64 %26, %19
  br i1 %41, label %62, label %21

42:                                               ; preds = %57, %31
  %43 = phi i64 [ %29, %31 ], [ %60, %57 ]
  %44 = phi i32 [ %32, %31 ], [ %59, %57 ]
  %45 = phi double [ %25, %31 ], [ %58, %57 ]
  %46 = getelementptr inbounds i32, ptr %33, i64 %43
  %47 = load i32, ptr %46, align 4, !tbaa !47
  %48 = zext i32 %47 to i64
  %49 = icmp ugt i64 %23, %48
  br i1 %49, label %50, label %57

50:                                               ; preds = %42
  %51 = getelementptr inbounds double, ptr %34, i64 %43
  %52 = load double, ptr %51, align 8, !tbaa !30
  %53 = getelementptr inbounds double, ptr %13, i64 %48
  %54 = load double, ptr %53, align 8, !tbaa !30
  %55 = fneg double %52
  %56 = tail call double @llvm.fmuladd.f64(double %55, double %54, double %45)
  br label %57

57:                                               ; preds = %50, %42
  %58 = phi double [ %56, %50 ], [ %45, %42 ]
  %59 = add i32 %44, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %28, %60
  br i1 %61, label %42, label %35

62:                                               ; preds = %35, %4
  ret void
}

declare noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef nonnull align 8 dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE3SORIdEEvRNS_6VectorIT_EEd(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, double noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !53
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !13
  %17 = zext i32 %7 to i64
  %18 = load i64, ptr %13, align 8, !tbaa !34
  br label %20

19:                                               ; preds = %34, %3
  ret void

20:                                               ; preds = %9, %34
  %21 = phi i64 [ %18, %9 ], [ %27, %34 ]
  %22 = phi i64 [ 0, %9 ], [ %25, %34 ]
  %23 = getelementptr inbounds double, ptr %11, i64 %22
  %24 = load double, ptr %23, align 8, !tbaa !30
  %25 = add nuw nsw i64 %22, 1
  %26 = getelementptr inbounds i64, ptr %13, i64 %25
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = and i64 %21, 4294967295
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %20
  %31 = trunc i64 %21 to i32
  %32 = load ptr, ptr %14, align 8, !tbaa !46
  %33 = load ptr, ptr %15, align 8
  br label %41

34:                                               ; preds = %56, %20
  %35 = phi double [ %24, %20 ], [ %57, %56 ]
  %36 = fmul double %35, %2
  %37 = getelementptr inbounds double, ptr %16, i64 %21
  %38 = load double, ptr %37, align 8, !tbaa !30
  %39 = fdiv double %36, %38
  store double %39, ptr %23, align 8, !tbaa !30
  %40 = icmp eq i64 %25, %17
  br i1 %40, label %19, label %20

41:                                               ; preds = %30, %56
  %42 = phi i64 [ %28, %30 ], [ %59, %56 ]
  %43 = phi i32 [ %31, %30 ], [ %58, %56 ]
  %44 = phi double [ %24, %30 ], [ %57, %56 ]
  %45 = getelementptr inbounds i32, ptr %32, i64 %42
  %46 = load i32, ptr %45, align 4, !tbaa !47
  %47 = zext i32 %46 to i64
  %48 = icmp ugt i64 %22, %47
  br i1 %48, label %49, label %56

49:                                               ; preds = %41
  %50 = getelementptr inbounds double, ptr %33, i64 %42
  %51 = load double, ptr %50, align 8, !tbaa !30
  %52 = getelementptr inbounds double, ptr %11, i64 %47
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = fneg double %51
  %55 = tail call double @llvm.fmuladd.f64(double %54, double %53, double %44)
  br label %56

56:                                               ; preds = %49, %41
  %57 = phi double [ %55, %49 ], [ %44, %41 ]
  %58 = add i32 %43, 1
  %59 = zext i32 %58 to i64
  %60 = icmp ugt i64 %27, %59
  br i1 %60, label %41, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE17precondition_TSORIdEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %64, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !53
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  %19 = zext i32 %9 to i64
  br label %20

20:                                               ; preds = %37, %11
  %21 = phi i64 [ %19, %11 ], [ %22, %37 ]
  %22 = add nsw i64 %21, -1
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  %25 = getelementptr inbounds double, ptr %13, i64 %24
  %26 = load double, ptr %25, align 8, !tbaa !30
  %27 = getelementptr inbounds i64, ptr %15, i64 %24
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = getelementptr inbounds i64, ptr %15, i64 %21
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %28, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %20
  %34 = trunc i64 %28 to i32
  %35 = load ptr, ptr %16, align 8, !tbaa !46
  %36 = load ptr, ptr %17, align 8
  br label %44

37:                                               ; preds = %59, %20
  %38 = phi double [ %26, %20 ], [ %60, %59 ]
  %39 = fmul double %38, %3
  %40 = getelementptr inbounds double, ptr %18, i64 %28
  %41 = load double, ptr %40, align 8, !tbaa !30
  %42 = fdiv double %39, %41
  store double %42, ptr %25, align 8, !tbaa !30
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %64, label %20

44:                                               ; preds = %59, %33
  %45 = phi i64 [ %31, %33 ], [ %62, %59 ]
  %46 = phi i32 [ %34, %33 ], [ %61, %59 ]
  %47 = phi double [ %26, %33 ], [ %60, %59 ]
  %48 = getelementptr inbounds i32, ptr %35, i64 %45
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = icmp ugt i32 %49, %23
  br i1 %50, label %51, label %59

51:                                               ; preds = %44
  %52 = getelementptr inbounds double, ptr %36, i64 %45
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds double, ptr %13, i64 %54
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = fneg double %53
  %58 = tail call double @llvm.fmuladd.f64(double %57, double %56, double %47)
  br label %59

59:                                               ; preds = %51, %44
  %60 = phi double [ %58, %51 ], [ %47, %44 ]
  %61 = add i32 %46, 1
  %62 = zext i32 %61 to i64
  %63 = icmp ugt i64 %30, %62
  br i1 %63, label %44, label %37

64:                                               ; preds = %37, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE4TSORIdEEvRNS_6VectorIT_EEd(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, double noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !53
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !13
  %17 = zext i32 %7 to i64
  br label %19

18:                                               ; preds = %36, %3
  ret void

19:                                               ; preds = %9, %36
  %20 = phi i64 [ %17, %9 ], [ %21, %36 ]
  %21 = add nsw i64 %20, -1
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  %24 = getelementptr inbounds double, ptr %11, i64 %23
  %25 = load double, ptr %24, align 8, !tbaa !30
  %26 = getelementptr inbounds i64, ptr %13, i64 %23
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = getelementptr inbounds i64, ptr %13, i64 %20
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %27, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %19
  %33 = trunc i64 %27 to i32
  %34 = load ptr, ptr %14, align 8, !tbaa !46
  %35 = load ptr, ptr %15, align 8
  br label %43

36:                                               ; preds = %58, %19
  %37 = phi double [ %25, %19 ], [ %59, %58 ]
  %38 = fmul double %37, %2
  %39 = getelementptr inbounds double, ptr %16, i64 %27
  %40 = load double, ptr %39, align 8, !tbaa !30
  %41 = fdiv double %38, %40
  store double %41, ptr %24, align 8, !tbaa !30
  %42 = icmp eq i32 %22, 0
  br i1 %42, label %18, label %19

43:                                               ; preds = %32, %58
  %44 = phi i64 [ %30, %32 ], [ %61, %58 ]
  %45 = phi i32 [ %33, %32 ], [ %60, %58 ]
  %46 = phi double [ %25, %32 ], [ %59, %58 ]
  %47 = getelementptr inbounds i32, ptr %34, i64 %44
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = icmp ugt i32 %48, %22
  br i1 %49, label %50, label %58

50:                                               ; preds = %43
  %51 = getelementptr inbounds double, ptr %35, i64 %44
  %52 = load double, ptr %51, align 8, !tbaa !30
  %53 = zext i32 %48 to i64
  %54 = getelementptr inbounds double, ptr %11, i64 %53
  %55 = load double, ptr %54, align 8, !tbaa !30
  %56 = fneg double %52
  %57 = tail call double @llvm.fmuladd.f64(double %56, double %55, double %46)
  br label %58

58:                                               ; preds = %43, %50
  %59 = phi double [ %57, %50 ], [ %46, %43 ]
  %60 = add i32 %45, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %29, %61
  br i1 %62, label %43, label %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE19precondition_JacobiIdEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !56
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !53
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !53
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !8
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %12, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = fcmp une double %3, 1.000000e+00
  %16 = icmp eq i32 %6, 0
  br i1 %15, label %25, label %17

17:                                               ; preds = %4
  br i1 %16, label %129, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !13
  %21 = and i32 %6, 3
  %22 = icmp ult i32 %6, 4
  br i1 %22, label %109, label %23

23:                                               ; preds = %18
  %24 = and i32 %6, -4
  br label %58

25:                                               ; preds = %4
  br i1 %16, label %129, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  %29 = and i32 %6, 1
  %30 = icmp eq i32 %6, 1
  br i1 %30, label %97, label %31

31:                                               ; preds = %26
  %32 = and i32 %6, -2
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi ptr [ %14, %31 ], [ %55, %33 ]
  %35 = phi ptr [ %10, %31 ], [ %54, %33 ]
  %36 = phi ptr [ %8, %31 ], [ %53, %33 ]
  %37 = phi i32 [ 0, %31 ], [ %56, %33 ]
  %38 = load double, ptr %35, align 8, !tbaa !30
  %39 = fmul double %38, %3
  %40 = load i64, ptr %34, align 8, !tbaa !34
  %41 = getelementptr inbounds double, ptr %28, i64 %40
  %42 = load double, ptr %41, align 8, !tbaa !30
  %43 = fdiv double %39, %42
  store double %43, ptr %36, align 8, !tbaa !30
  %44 = getelementptr inbounds double, ptr %36, i64 1
  %45 = getelementptr inbounds double, ptr %35, i64 1
  %46 = getelementptr inbounds i64, ptr %34, i64 1
  %47 = load double, ptr %45, align 8, !tbaa !30
  %48 = fmul double %47, %3
  %49 = load i64, ptr %46, align 8, !tbaa !34
  %50 = getelementptr inbounds double, ptr %28, i64 %49
  %51 = load double, ptr %50, align 8, !tbaa !30
  %52 = fdiv double %48, %51
  store double %52, ptr %44, align 8, !tbaa !30
  %53 = getelementptr inbounds double, ptr %36, i64 2
  %54 = getelementptr inbounds double, ptr %35, i64 2
  %55 = getelementptr inbounds i64, ptr %34, i64 2
  %56 = add i32 %37, 2
  %57 = icmp eq i32 %56, %32
  br i1 %57, label %97, label %33

58:                                               ; preds = %58, %23
  %59 = phi ptr [ %14, %23 ], [ %94, %58 ]
  %60 = phi ptr [ %10, %23 ], [ %93, %58 ]
  %61 = phi ptr [ %8, %23 ], [ %92, %58 ]
  %62 = phi i32 [ 0, %23 ], [ %95, %58 ]
  %63 = load double, ptr %60, align 8, !tbaa !30
  %64 = load i64, ptr %59, align 8, !tbaa !34
  %65 = getelementptr inbounds double, ptr %20, i64 %64
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = fdiv double %63, %66
  store double %67, ptr %61, align 8, !tbaa !30
  %68 = getelementptr inbounds double, ptr %61, i64 1
  %69 = getelementptr inbounds double, ptr %60, i64 1
  %70 = getelementptr inbounds i64, ptr %59, i64 1
  %71 = load double, ptr %69, align 8, !tbaa !30
  %72 = load i64, ptr %70, align 8, !tbaa !34
  %73 = getelementptr inbounds double, ptr %20, i64 %72
  %74 = load double, ptr %73, align 8, !tbaa !30
  %75 = fdiv double %71, %74
  store double %75, ptr %68, align 8, !tbaa !30
  %76 = getelementptr inbounds double, ptr %61, i64 2
  %77 = getelementptr inbounds double, ptr %60, i64 2
  %78 = getelementptr inbounds i64, ptr %59, i64 2
  %79 = load double, ptr %77, align 8, !tbaa !30
  %80 = load i64, ptr %78, align 8, !tbaa !34
  %81 = getelementptr inbounds double, ptr %20, i64 %80
  %82 = load double, ptr %81, align 8, !tbaa !30
  %83 = fdiv double %79, %82
  store double %83, ptr %76, align 8, !tbaa !30
  %84 = getelementptr inbounds double, ptr %61, i64 3
  %85 = getelementptr inbounds double, ptr %60, i64 3
  %86 = getelementptr inbounds i64, ptr %59, i64 3
  %87 = load double, ptr %85, align 8, !tbaa !30
  %88 = load i64, ptr %86, align 8, !tbaa !34
  %89 = getelementptr inbounds double, ptr %20, i64 %88
  %90 = load double, ptr %89, align 8, !tbaa !30
  %91 = fdiv double %87, %90
  store double %91, ptr %84, align 8, !tbaa !30
  %92 = getelementptr inbounds double, ptr %61, i64 4
  %93 = getelementptr inbounds double, ptr %60, i64 4
  %94 = getelementptr inbounds i64, ptr %59, i64 4
  %95 = add i32 %62, 4
  %96 = icmp eq i32 %95, %24
  br i1 %96, label %109, label %58

97:                                               ; preds = %33, %26
  %98 = phi ptr [ %14, %26 ], [ %55, %33 ]
  %99 = phi ptr [ %10, %26 ], [ %54, %33 ]
  %100 = phi ptr [ %8, %26 ], [ %53, %33 ]
  %101 = icmp eq i32 %29, 0
  br i1 %101, label %129, label %102

102:                                              ; preds = %97
  %103 = load double, ptr %99, align 8, !tbaa !30
  %104 = fmul double %103, %3
  %105 = load i64, ptr %98, align 8, !tbaa !34
  %106 = getelementptr inbounds double, ptr %28, i64 %105
  %107 = load double, ptr %106, align 8, !tbaa !30
  %108 = fdiv double %104, %107
  store double %108, ptr %100, align 8, !tbaa !30
  br label %129

109:                                              ; preds = %58, %18
  %110 = phi ptr [ %14, %18 ], [ %94, %58 ]
  %111 = phi ptr [ %10, %18 ], [ %93, %58 ]
  %112 = phi ptr [ %8, %18 ], [ %92, %58 ]
  %113 = icmp eq i32 %21, 0
  br i1 %113, label %129, label %114

114:                                              ; preds = %109, %114
  %115 = phi ptr [ %126, %114 ], [ %110, %109 ]
  %116 = phi ptr [ %125, %114 ], [ %111, %109 ]
  %117 = phi ptr [ %124, %114 ], [ %112, %109 ]
  %118 = phi i32 [ %127, %114 ], [ 0, %109 ]
  %119 = load double, ptr %116, align 8, !tbaa !30
  %120 = load i64, ptr %115, align 8, !tbaa !34
  %121 = getelementptr inbounds double, ptr %20, i64 %120
  %122 = load double, ptr %121, align 8, !tbaa !30
  %123 = fdiv double %119, %122
  store double %123, ptr %117, align 8, !tbaa !30
  %124 = getelementptr inbounds double, ptr %117, i64 1
  %125 = getelementptr inbounds double, ptr %116, i64 1
  %126 = getelementptr inbounds i64, ptr %115, i64 1
  %127 = add i32 %118, 1
  %128 = icmp eq i32 %127, %21
  br i1 %128, label %129, label %114, !llvm.loop !203

129:                                              ; preds = %109, %114, %102, %97, %17, %25
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE4SSORIdEEvRNS_6VectorIT_EEd(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, double noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %78, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = load ptr, ptr %13, align 8, !tbaa !13
  %17 = zext i32 %5 to i64
  %18 = load i64, ptr %11, align 8, !tbaa !34
  br label %33

19:                                               ; preds = %68
  %20 = add i32 %5, -1
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %22, label %78

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %24, i64 0, i32 8
  %26 = load ptr, ptr %25, align 8, !tbaa !32
  %27 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %24, i64 0, i32 9
  %28 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %30 = load ptr, ptr %28, align 8, !tbaa !13
  %31 = load ptr, ptr %29, align 8, !tbaa !53
  %32 = zext i32 %20 to i64
  br label %79

33:                                               ; preds = %7, %68
  %34 = phi i64 [ %18, %7 ], [ %38, %68 ]
  %35 = phi i64 [ 0, %7 ], [ %36, %68 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %11, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %68

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %12, align 8, !tbaa !46
  %44 = load ptr, ptr %13, align 8
  %45 = load ptr, ptr %14, align 8
  br label %46

46:                                               ; preds = %41, %63
  %47 = phi i64 [ %39, %41 ], [ %66, %63 ]
  %48 = phi i32 [ %42, %41 ], [ %65, %63 ]
  %49 = phi double [ 0.000000e+00, %41 ], [ %64, %63 ]
  %50 = getelementptr inbounds i32, ptr %43, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ne i32 %51, -1
  %53 = zext i32 %48 to i64
  %54 = icmp ugt i64 %35, %53
  %55 = and i1 %54, %52
  br i1 %55, label %56, label %63

56:                                               ; preds = %46
  %57 = getelementptr inbounds double, ptr %44, i64 %47
  %58 = load double, ptr %57, align 8, !tbaa !30
  %59 = zext i32 %51 to i64
  %60 = getelementptr inbounds double, ptr %45, i64 %59
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = tail call double @llvm.fmuladd.f64(double %58, double %61, double %49)
  br label %63

63:                                               ; preds = %56, %46
  %64 = phi double [ %62, %56 ], [ %49, %46 ]
  %65 = add i32 %48, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %38, %66
  br i1 %67, label %46, label %68

68:                                               ; preds = %63, %33
  %69 = phi double [ 0.000000e+00, %33 ], [ %64, %63 ]
  %70 = getelementptr inbounds double, ptr %15, i64 %35
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fneg double %69
  %73 = tail call double @llvm.fmuladd.f64(double %72, double %2, double %71)
  store double %73, ptr %70, align 8, !tbaa !30
  %74 = getelementptr inbounds double, ptr %16, i64 %34
  %75 = load double, ptr %74, align 8, !tbaa !30
  %76 = fdiv double %73, %75
  store double %76, ptr %70, align 8, !tbaa !30
  %77 = icmp eq i64 %36, %17
  br i1 %77, label %19, label %33

78:                                               ; preds = %116, %3, %19
  ret void

79:                                               ; preds = %22, %116
  %80 = phi i64 [ %32, %22 ], [ %125, %116 ]
  %81 = phi i32 [ %5, %22 ], [ %127, %116 ]
  %82 = getelementptr inbounds i64, ptr %26, i64 %80
  %83 = load i64, ptr %82, align 8, !tbaa !34
  %84 = sext i32 %81 to i64
  %85 = getelementptr inbounds i64, ptr %26, i64 %84
  %86 = load i64, ptr %85, align 8, !tbaa !34
  %87 = and i64 %83, 4294967295
  %88 = icmp ugt i64 %86, %87
  br i1 %88, label %89, label %116

89:                                               ; preds = %79
  %90 = trunc i64 %83 to i32
  %91 = load ptr, ptr %27, align 8, !tbaa !46
  %92 = load ptr, ptr %28, align 8
  %93 = load ptr, ptr %29, align 8
  br label %94

94:                                               ; preds = %89, %111
  %95 = phi i64 [ %87, %89 ], [ %114, %111 ]
  %96 = phi i32 [ %90, %89 ], [ %113, %111 ]
  %97 = phi double [ 0.000000e+00, %89 ], [ %112, %111 ]
  %98 = getelementptr inbounds i32, ptr %91, i64 %95
  %99 = load i32, ptr %98, align 4, !tbaa !47
  %100 = icmp ne i32 %99, -1
  %101 = zext i32 %96 to i64
  %102 = icmp ult i64 %80, %101
  %103 = and i1 %102, %100
  br i1 %103, label %104, label %111

104:                                              ; preds = %94
  %105 = getelementptr inbounds double, ptr %92, i64 %95
  %106 = load double, ptr %105, align 8, !tbaa !30
  %107 = zext i32 %99 to i64
  %108 = getelementptr inbounds double, ptr %93, i64 %107
  %109 = load double, ptr %108, align 8, !tbaa !30
  %110 = tail call double @llvm.fmuladd.f64(double %106, double %109, double %97)
  br label %111

111:                                              ; preds = %104, %94
  %112 = phi double [ %110, %104 ], [ %97, %94 ]
  %113 = add i32 %96, 1
  %114 = zext i32 %113 to i64
  %115 = icmp ugt i64 %86, %114
  br i1 %115, label %94, label %116

116:                                              ; preds = %111, %79
  %117 = phi double [ 0.000000e+00, %79 ], [ %112, %111 ]
  %118 = fmul double %117, %2
  %119 = getelementptr inbounds double, ptr %30, i64 %83
  %120 = load double, ptr %119, align 8, !tbaa !30
  %121 = fdiv double %118, %120
  %122 = getelementptr inbounds double, ptr %31, i64 %80
  %123 = load double, ptr %122, align 8, !tbaa !30
  %124 = fsub double %123, %121
  store double %124, ptr %122, align 8, !tbaa !30
  %125 = add nsw i64 %80, -1
  %126 = icmp sgt i64 %80, 0
  %127 = trunc i64 %80 to i32
  br i1 %126, label %79, label %78
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE4PSORIdEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, double noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !53
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !13
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %42, %5
  ret void

23:                                               ; preds = %11, %42
  %24 = phi i64 [ 0, %11 ], [ %48, %42 ]
  %25 = getelementptr inbounds i32, ptr %12, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !47
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds double, ptr %14, i64 %27
  %29 = load double, ptr %28, align 8, !tbaa !30
  %30 = getelementptr inbounds i64, ptr %16, i64 %27
  %31 = load i64, ptr %30, align 8, !tbaa !34
  %32 = add i32 %26, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i64, ptr %16, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %31, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %23
  %39 = trunc i64 %31 to i32
  %40 = load ptr, ptr %17, align 8, !tbaa !46
  %41 = load ptr, ptr %19, align 8
  br label %50

42:                                               ; preds = %68, %23
  %43 = phi double [ %29, %23 ], [ %69, %68 ]
  %44 = fmul double %43, %4
  %45 = getelementptr inbounds double, ptr %20, i64 %31
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = fdiv double %44, %46
  store double %47, ptr %28, align 8, !tbaa !30
  %48 = add nuw nsw i64 %24, 1
  %49 = icmp eq i64 %48, %21
  br i1 %49, label %22, label %23

50:                                               ; preds = %38, %68
  %51 = phi i64 [ %36, %38 ], [ %71, %68 ]
  %52 = phi i32 [ %39, %38 ], [ %70, %68 ]
  %53 = phi double [ %29, %38 ], [ %69, %68 ]
  %54 = getelementptr inbounds i32, ptr %40, i64 %51
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i32, ptr %18, i64 %56
  %58 = load i32, ptr %57, align 4, !tbaa !47
  %59 = zext i32 %58 to i64
  %60 = icmp ugt i64 %24, %59
  br i1 %60, label %61, label %68

61:                                               ; preds = %50
  %62 = getelementptr inbounds double, ptr %41, i64 %51
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = getelementptr inbounds double, ptr %14, i64 %56
  %65 = load double, ptr %64, align 8, !tbaa !30
  %66 = fneg double %63
  %67 = tail call double @llvm.fmuladd.f64(double %66, double %65, double %53)
  br label %68

68:                                               ; preds = %61, %50
  %69 = phi double [ %67, %61 ], [ %53, %50 ]
  %70 = add i32 %52, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %35, %71
  br i1 %72, label %50, label %42
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5TPSORIdEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, double noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !53
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !13
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %45, %5
  ret void

23:                                               ; preds = %11, %45
  %24 = phi i64 [ %21, %11 ], [ %25, %45 ]
  %25 = add nsw i64 %24, -1
  %26 = trunc i64 %25 to i32
  %27 = and i64 %25, 4294967295
  %28 = getelementptr inbounds i32, ptr %12, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !47
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds double, ptr %14, i64 %30
  %32 = load double, ptr %31, align 8, !tbaa !30
  %33 = getelementptr inbounds i64, ptr %16, i64 %30
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = add i32 %29, 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i64, ptr %16, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %23
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %17, align 8, !tbaa !46
  %44 = load ptr, ptr %19, align 8
  br label %52

45:                                               ; preds = %69, %23
  %46 = phi double [ %32, %23 ], [ %70, %69 ]
  %47 = fmul double %46, %4
  %48 = getelementptr inbounds double, ptr %20, i64 %34
  %49 = load double, ptr %48, align 8, !tbaa !30
  %50 = fdiv double %47, %49
  store double %50, ptr %31, align 8, !tbaa !30
  %51 = icmp eq i32 %26, 0
  br i1 %51, label %22, label %23

52:                                               ; preds = %41, %69
  %53 = phi i64 [ %39, %41 ], [ %72, %69 ]
  %54 = phi i32 [ %42, %41 ], [ %71, %69 ]
  %55 = phi double [ %32, %41 ], [ %70, %69 ]
  %56 = getelementptr inbounds i32, ptr %43, i64 %53
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %18, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = icmp ugt i32 %60, %26
  br i1 %61, label %62, label %69

62:                                               ; preds = %52
  %63 = getelementptr inbounds double, ptr %44, i64 %53
  %64 = load double, ptr %63, align 8, !tbaa !30
  %65 = getelementptr inbounds double, ptr %14, i64 %58
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = fneg double %64
  %68 = tail call double @llvm.fmuladd.f64(double %67, double %66, double %55)
  br label %69

69:                                               ; preds = %62, %52
  %70 = phi double [ %68, %62 ], [ %55, %52 ]
  %71 = add i32 %54, 1
  %72 = zext i32 %71 to i64
  %73 = icmp ugt i64 %38, %72
  br i1 %73, label %52, label %45
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE8SOR_stepIdEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !53
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %8 to i64
  %21 = load i64, ptr %14, align 8, !tbaa !34
  br label %23

22:                                               ; preds = %36, %4
  ret void

23:                                               ; preds = %10, %36
  %24 = phi i64 [ %21, %10 ], [ %30, %36 ]
  %25 = phi i64 [ 0, %10 ], [ %28, %36 ]
  %26 = getelementptr inbounds double, ptr %12, i64 %25
  %27 = load double, ptr %26, align 8, !tbaa !30
  %28 = add nuw nsw i64 %25, 1
  %29 = getelementptr inbounds i64, ptr %14, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %24, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = trunc i64 %24 to i32
  %35 = load ptr, ptr %17, align 8, !tbaa !46
  br label %46

36:                                               ; preds = %46, %23
  %37 = phi double [ %27, %23 ], [ %58, %46 ]
  %38 = fmul double %37, %3
  %39 = getelementptr inbounds double, ptr %16, i64 %24
  %40 = load double, ptr %39, align 8, !tbaa !30
  %41 = fdiv double %38, %40
  %42 = getelementptr inbounds double, ptr %19, i64 %25
  %43 = load double, ptr %42, align 8, !tbaa !30
  %44 = fadd double %41, %43
  store double %44, ptr %42, align 8, !tbaa !30
  %45 = icmp eq i64 %28, %20
  br i1 %45, label %22, label %23

46:                                               ; preds = %33, %46
  %47 = phi i64 [ %31, %33 ], [ %60, %46 ]
  %48 = phi i32 [ %34, %33 ], [ %59, %46 ]
  %49 = phi double [ %27, %33 ], [ %58, %46 ]
  %50 = getelementptr inbounds double, ptr %16, i64 %47
  %51 = load double, ptr %50, align 8, !tbaa !30
  %52 = getelementptr inbounds i32, ptr %35, i64 %47
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds double, ptr %19, i64 %54
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = fneg double %51
  %58 = tail call double @llvm.fmuladd.f64(double %57, double %56, double %49)
  %59 = add i32 %48, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %30, %60
  br i1 %61, label %46, label %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9TSOR_stepIdEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = add i32 %8, -1
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %22

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !53
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %19 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %38, %4
  ret void

23:                                               ; preds = %11, %38
  %24 = phi i64 [ %21, %11 ], [ %47, %38 ]
  %25 = phi i32 [ %8, %11 ], [ %49, %38 ]
  %26 = getelementptr inbounds double, ptr %13, i64 %24
  %27 = load double, ptr %26, align 8, !tbaa !30
  %28 = getelementptr inbounds i64, ptr %15, i64 %24
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = sext i32 %25 to i64
  %31 = getelementptr inbounds i64, ptr %15, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = and i64 %29, 4294967295
  %34 = icmp ugt i64 %32, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %23
  %36 = trunc i64 %29 to i32
  %37 = load ptr, ptr %18, align 8, !tbaa !46
  br label %50

38:                                               ; preds = %50, %23
  %39 = phi double [ %27, %23 ], [ %62, %50 ]
  %40 = fmul double %39, %3
  %41 = getelementptr inbounds double, ptr %17, i64 %29
  %42 = load double, ptr %41, align 8, !tbaa !30
  %43 = fdiv double %40, %42
  %44 = getelementptr inbounds double, ptr %20, i64 %24
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fadd double %43, %45
  store double %46, ptr %44, align 8, !tbaa !30
  %47 = add nsw i64 %24, -1
  %48 = icmp sgt i64 %24, 0
  %49 = trunc i64 %24 to i32
  br i1 %48, label %23, label %22

50:                                               ; preds = %35, %50
  %51 = phi i64 [ %33, %35 ], [ %64, %50 ]
  %52 = phi i32 [ %36, %35 ], [ %63, %50 ]
  %53 = phi double [ %27, %35 ], [ %62, %50 ]
  %54 = getelementptr inbounds double, ptr %17, i64 %51
  %55 = load double, ptr %54, align 8, !tbaa !30
  %56 = getelementptr inbounds i32, ptr %37, i64 %51
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds double, ptr %20, i64 %58
  %60 = load double, ptr %59, align 8, !tbaa !30
  %61 = fneg double %55
  %62 = tail call double @llvm.fmuladd.f64(double %61, double %60, double %53)
  %63 = add i32 %52, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %32, %64
  br i1 %65, label %50, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9SSOR_stepIdEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %111, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !53
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %8 to i64
  %21 = load i64, ptr %14, align 8, !tbaa !34
  br label %22

22:                                               ; preds = %35, %10
  %23 = phi i64 [ %21, %10 ], [ %29, %35 ]
  %24 = phi i64 [ 0, %10 ], [ %27, %35 ]
  %25 = getelementptr inbounds double, ptr %12, i64 %24
  %26 = load double, ptr %25, align 8, !tbaa !30
  %27 = add nuw nsw i64 %24, 1
  %28 = getelementptr inbounds i64, ptr %14, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %23, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %22
  %33 = trunc i64 %23 to i32
  %34 = load ptr, ptr %17, align 8, !tbaa !46
  br label %45

35:                                               ; preds = %45, %22
  %36 = phi double [ %26, %22 ], [ %57, %45 ]
  %37 = fmul double %36, %3
  %38 = getelementptr inbounds double, ptr %16, i64 %23
  %39 = load double, ptr %38, align 8, !tbaa !30
  %40 = fdiv double %37, %39
  %41 = getelementptr inbounds double, ptr %19, i64 %24
  %42 = load double, ptr %41, align 8, !tbaa !30
  %43 = fadd double %40, %42
  store double %43, ptr %41, align 8, !tbaa !30
  %44 = icmp eq i64 %27, %20
  br i1 %44, label %61, label %22

45:                                               ; preds = %45, %32
  %46 = phi i64 [ %30, %32 ], [ %59, %45 ]
  %47 = phi i32 [ %33, %32 ], [ %58, %45 ]
  %48 = phi double [ %26, %32 ], [ %57, %45 ]
  %49 = getelementptr inbounds double, ptr %16, i64 %46
  %50 = load double, ptr %49, align 8, !tbaa !30
  %51 = getelementptr inbounds i32, ptr %34, i64 %46
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds double, ptr %19, i64 %53
  %55 = load double, ptr %54, align 8, !tbaa !30
  %56 = fneg double %50
  %57 = tail call double @llvm.fmuladd.f64(double %56, double %55, double %48)
  %58 = add i32 %47, 1
  %59 = zext i32 %58 to i64
  %60 = icmp ugt i64 %29, %59
  br i1 %60, label %45, label %35

61:                                               ; preds = %35
  %62 = add i32 %8, -1
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %64, label %111

64:                                               ; preds = %61
  %65 = load ptr, ptr %15, align 8
  %66 = load ptr, ptr %18, align 8
  %67 = zext i32 %62 to i64
  br label %68

68:                                               ; preds = %83, %64
  %69 = phi i64 [ %67, %64 ], [ %92, %83 ]
  %70 = phi i32 [ %8, %64 ], [ %94, %83 ]
  %71 = getelementptr inbounds double, ptr %12, i64 %69
  %72 = load double, ptr %71, align 8, !tbaa !30
  %73 = getelementptr inbounds i64, ptr %14, i64 %69
  %74 = load i64, ptr %73, align 8, !tbaa !34
  %75 = sext i32 %70 to i64
  %76 = getelementptr inbounds i64, ptr %14, i64 %75
  %77 = load i64, ptr %76, align 8, !tbaa !34
  %78 = and i64 %74, 4294967295
  %79 = icmp ugt i64 %77, %78
  br i1 %79, label %80, label %83

80:                                               ; preds = %68
  %81 = trunc i64 %74 to i32
  %82 = load ptr, ptr %17, align 8, !tbaa !46
  br label %95

83:                                               ; preds = %95, %68
  %84 = phi double [ %72, %68 ], [ %107, %95 ]
  %85 = fmul double %84, %3
  %86 = getelementptr inbounds double, ptr %65, i64 %74
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = fdiv double %85, %87
  %89 = getelementptr inbounds double, ptr %66, i64 %69
  %90 = load double, ptr %89, align 8, !tbaa !30
  %91 = fadd double %88, %90
  store double %91, ptr %89, align 8, !tbaa !30
  %92 = add nsw i64 %69, -1
  %93 = icmp sgt i64 %69, 0
  %94 = trunc i64 %69 to i32
  br i1 %93, label %68, label %111

95:                                               ; preds = %95, %80
  %96 = phi i64 [ %78, %80 ], [ %109, %95 ]
  %97 = phi i32 [ %81, %80 ], [ %108, %95 ]
  %98 = phi double [ %72, %80 ], [ %107, %95 ]
  %99 = getelementptr inbounds double, ptr %65, i64 %96
  %100 = load double, ptr %99, align 8, !tbaa !30
  %101 = getelementptr inbounds i32, ptr %82, i64 %96
  %102 = load i32, ptr %101, align 4, !tbaa !47
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds double, ptr %66, i64 %103
  %105 = load double, ptr %104, align 8, !tbaa !30
  %106 = fneg double %100
  %107 = tail call double @llvm.fmuladd.f64(double %106, double %105, double %98)
  %108 = add i32 %97, 1
  %109 = zext i32 %108 to i64
  %110 = icmp ugt i64 %77, %109
  br i1 %110, label %95, label %83

111:                                              ; preds = %83, %4, %61
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIdE18matrix_norm_squareIfEET_RKNS_6VectorIS3_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !13
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 9
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = load i64, ptr %10, align 8, !tbaa !34
  %16 = getelementptr inbounds i32, ptr %14, i64 %15
  %17 = getelementptr inbounds double, ptr %8, i64 %15
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %6 to i64
  br label %23

21:                                               ; preds = %49, %2
  %22 = phi float [ 0.000000e+00, %2 ], [ %55, %49 ]
  ret float %22

23:                                               ; preds = %12, %49
  %24 = phi i64 [ 0, %12 ], [ %28, %49 ]
  %25 = phi float [ 0.000000e+00, %12 ], [ %55, %49 ]
  %26 = phi ptr [ %16, %12 ], [ %52, %49 ]
  %27 = phi ptr [ %17, %12 ], [ %51, %49 ]
  %28 = add nuw nsw i64 %24, 1
  %29 = getelementptr inbounds i64, ptr %10, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = getelementptr inbounds double, ptr %8, i64 %30
  %32 = icmp eq ptr %27, %31
  br i1 %32, label %49, label %33

33:                                               ; preds = %23, %33
  %34 = phi ptr [ %39, %33 ], [ %26, %23 ]
  %35 = phi ptr [ %37, %33 ], [ %27, %23 ]
  %36 = phi float [ %47, %33 ], [ 0.000000e+00, %23 ]
  %37 = getelementptr inbounds double, ptr %35, i64 1
  %38 = load double, ptr %35, align 8, !tbaa !30
  %39 = getelementptr inbounds i32, ptr %34, i64 1
  %40 = load i32, ptr %34, align 4, !tbaa !47
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds float, ptr %19, i64 %41
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fpext float %43 to double
  %45 = fpext float %36 to double
  %46 = tail call double @llvm.fmuladd.f64(double %38, double %44, double %45)
  %47 = fptrunc double %46 to float
  %48 = icmp eq ptr %37, %31
  br i1 %48, label %49, label %33

49:                                               ; preds = %33, %23
  %50 = phi float [ 0.000000e+00, %23 ], [ %47, %33 ]
  %51 = phi ptr [ %27, %23 ], [ %31, %33 ]
  %52 = phi ptr [ %26, %23 ], [ %39, %33 ]
  %53 = getelementptr inbounds float, ptr %19, i64 %24
  %54 = load float, ptr %53, align 4, !tbaa !95
  %55 = tail call float @llvm.fmuladd.f32(float %54, float %50, float %25)
  %56 = icmp eq i64 %28, %20
  br i1 %56, label %21, label %23
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIdE21matrix_scalar_productIfEET_RKNS_6VectorIS3_EES7_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = load i64, ptr %11, align 8, !tbaa !34
  %17 = getelementptr inbounds i32, ptr %15, i64 %16
  %18 = getelementptr inbounds double, ptr %9, i64 %16
  %19 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !106
  %23 = zext i32 %7 to i64
  br label %26

24:                                               ; preds = %52, %3
  %25 = phi float [ 0.000000e+00, %3 ], [ %58, %52 ]
  ret float %25

26:                                               ; preds = %13, %52
  %27 = phi i64 [ 0, %13 ], [ %31, %52 ]
  %28 = phi float [ 0.000000e+00, %13 ], [ %58, %52 ]
  %29 = phi ptr [ %17, %13 ], [ %55, %52 ]
  %30 = phi ptr [ %18, %13 ], [ %54, %52 ]
  %31 = add nuw nsw i64 %27, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = getelementptr inbounds double, ptr %9, i64 %33
  %35 = icmp eq ptr %30, %34
  br i1 %35, label %52, label %36

36:                                               ; preds = %26, %36
  %37 = phi ptr [ %42, %36 ], [ %29, %26 ]
  %38 = phi ptr [ %40, %36 ], [ %30, %26 ]
  %39 = phi float [ %50, %36 ], [ 0.000000e+00, %26 ]
  %40 = getelementptr inbounds double, ptr %38, i64 1
  %41 = load double, ptr %38, align 8, !tbaa !30
  %42 = getelementptr inbounds i32, ptr %37, i64 1
  %43 = load i32, ptr %37, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds float, ptr %20, i64 %44
  %46 = load float, ptr %45, align 4, !tbaa !95
  %47 = fpext float %46 to double
  %48 = fpext float %39 to double
  %49 = tail call double @llvm.fmuladd.f64(double %41, double %47, double %48)
  %50 = fptrunc double %49 to float
  %51 = icmp eq ptr %40, %34
  br i1 %51, label %52, label %36

52:                                               ; preds = %36, %26
  %53 = phi float [ 0.000000e+00, %26 ], [ %50, %36 ]
  %54 = phi ptr [ %30, %26 ], [ %34, %36 ]
  %55 = phi ptr [ %29, %26 ], [ %42, %36 ]
  %56 = getelementptr inbounds float, ptr %22, i64 %27
  %57 = load float, ptr %56, align 4, !tbaa !95
  %58 = tail call float @llvm.fmuladd.f32(float %57, float %53, float %28)
  %59 = icmp eq i64 %31, %23
  br i1 %59, label %24, label %26
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIdE8residualIfEET_RNS_6VectorIS3_EERKS5_S8_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.20", ptr %3, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !106
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !106
  %22 = zext i32 %8 to i64
  %23 = load i64, ptr %14, align 8, !tbaa !34
  br label %27

24:                                               ; preds = %41, %4
  %25 = phi float [ 0.000000e+00, %4 ], [ %44, %41 ]
  %26 = tail call float @sqrtf(float noundef %25) #17
  ret float %26

27:                                               ; preds = %10, %41
  %28 = phi i64 [ %23, %10 ], [ %35, %41 ]
  %29 = phi i64 [ 0, %10 ], [ %33, %41 ]
  %30 = phi float [ 0.000000e+00, %10 ], [ %44, %41 ]
  %31 = getelementptr inbounds float, ptr %12, i64 %29
  %32 = load float, ptr %31, align 4, !tbaa !95
  %33 = add nuw nsw i64 %29, 1
  %34 = getelementptr inbounds i64, ptr %14, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %28, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %27
  %39 = trunc i64 %28 to i32
  %40 = load ptr, ptr %15, align 8, !tbaa !46
  br label %46

41:                                               ; preds = %46, %27
  %42 = phi float [ %32, %27 ], [ %61, %46 ]
  %43 = getelementptr inbounds float, ptr %21, i64 %29
  store float %42, ptr %43, align 4, !tbaa !95
  %44 = tail call float @llvm.fmuladd.f32(float %42, float %42, float %30)
  %45 = icmp eq i64 %33, %22
  br i1 %45, label %24, label %27

46:                                               ; preds = %38, %46
  %47 = phi i64 [ %36, %38 ], [ %63, %46 ]
  %48 = phi i32 [ %39, %38 ], [ %62, %46 ]
  %49 = phi float [ %32, %38 ], [ %61, %46 ]
  %50 = getelementptr inbounds i32, ptr %40, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = getelementptr inbounds double, ptr %17, i64 %47
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds float, ptr %19, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fpext float %56 to double
  %58 = fpext float %49 to double
  %59 = fneg double %53
  %60 = tail call double @llvm.fmuladd.f64(double %59, double %57, double %58)
  %61 = fptrunc double %60 to float
  %62 = add i32 %48, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %35, %63
  br i1 %64, label %46, label %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE17precondition_SSORIfEEvRNS_6VectorIT_EERKS5_dRKSt6vectorIjSaIjEE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !109
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !106
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !195
  %16 = load ptr, ptr %4, align 8, !tbaa !197
  %17 = icmp eq ptr %15, %16
  %18 = icmp eq i32 %7, 0
  br i1 %17, label %27, label %19

19:                                               ; preds = %5
  br i1 %18, label %606, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !106
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %26 = zext i32 %7 to i64
  br label %47

27:                                               ; preds = %5
  br i1 %18, label %606, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !106
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = ptrtoint ptr %32 to i64
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %7 to i64
  %37 = load i64, ptr %11, align 8, !tbaa !34
  br label %256

38:                                               ; preds = %83
  br i1 %18, label %606, label %39

39:                                               ; preds = %38
  %40 = fsub double 2.000000e+00, %3
  %41 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !13
  %43 = and i32 %7, 1
  %44 = icmp eq i32 %7, 1
  br i1 %44, label %123, label %45

45:                                               ; preds = %39
  %46 = and i32 %7, -2
  br label %146

47:                                               ; preds = %20, %83
  %48 = phi i64 [ 0, %20 ], [ %94, %83 ]
  %49 = phi ptr [ %11, %20 ], [ %96, %83 ]
  %50 = phi ptr [ %13, %20 ], [ %95, %83 ]
  %51 = getelementptr inbounds float, ptr %22, i64 %48
  %52 = load float, ptr %51, align 4, !tbaa !95
  store float %52, ptr %50, align 4, !tbaa !95
  %53 = getelementptr inbounds i32, ptr %16, i64 %48
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = load i64, ptr %49, align 8, !tbaa !34
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, 1
  %58 = icmp ult i32 %57, %54
  br i1 %58, label %59, label %83

59:                                               ; preds = %47
  %60 = load ptr, ptr %25, align 8, !tbaa !46
  %61 = zext i32 %57 to i64
  %62 = xor i32 %56, -1
  %63 = add i32 %54, %62
  %64 = add i32 %54, -2
  %65 = and i32 %63, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %78, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds double, ptr %24, i64 %61
  %69 = load double, ptr %68, align 8, !tbaa !30
  %70 = getelementptr inbounds i32, ptr %60, i64 %61
  %71 = load i32, ptr %70, align 4, !tbaa !47
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds float, ptr %13, i64 %72
  %74 = load float, ptr %73, align 4, !tbaa !95
  %75 = fpext float %74 to double
  %76 = tail call double @llvm.fmuladd.f64(double %69, double %75, double 0.000000e+00)
  %77 = add nuw nsw i64 %61, 1
  br label %78

78:                                               ; preds = %67, %59
  %79 = phi double [ undef, %59 ], [ %76, %67 ]
  %80 = phi i64 [ %61, %59 ], [ %77, %67 ]
  %81 = phi double [ 0.000000e+00, %59 ], [ %76, %67 ]
  %82 = icmp eq i32 %64, %56
  br i1 %82, label %83, label %98

83:                                               ; preds = %78, %98, %47
  %84 = phi double [ 0.000000e+00, %47 ], [ %79, %78 ], [ %119, %98 ]
  %85 = fpext float %52 to double
  %86 = fneg double %84
  %87 = tail call double @llvm.fmuladd.f64(double %86, double %3, double %85)
  %88 = fptrunc double %87 to float
  %89 = getelementptr inbounds double, ptr %24, i64 %55
  %90 = load double, ptr %89, align 8, !tbaa !30
  %91 = fpext float %88 to double
  %92 = fdiv double %91, %90
  %93 = fptrunc double %92 to float
  store float %93, ptr %50, align 4, !tbaa !95
  %94 = add nuw nsw i64 %48, 1
  %95 = getelementptr inbounds float, ptr %50, i64 1
  %96 = getelementptr inbounds i64, ptr %49, i64 1
  %97 = icmp eq i64 %94, %26
  br i1 %97, label %38, label %47

98:                                               ; preds = %78, %98
  %99 = phi i64 [ %120, %98 ], [ %80, %78 ]
  %100 = phi double [ %119, %98 ], [ %81, %78 ]
  %101 = getelementptr inbounds double, ptr %24, i64 %99
  %102 = load double, ptr %101, align 8, !tbaa !30
  %103 = getelementptr inbounds i32, ptr %60, i64 %99
  %104 = load i32, ptr %103, align 4, !tbaa !47
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds float, ptr %13, i64 %105
  %107 = load float, ptr %106, align 4, !tbaa !95
  %108 = fpext float %107 to double
  %109 = tail call double @llvm.fmuladd.f64(double %102, double %108, double %100)
  %110 = add nuw nsw i64 %99, 1
  %111 = getelementptr inbounds double, ptr %24, i64 %110
  %112 = load double, ptr %111, align 8, !tbaa !30
  %113 = getelementptr inbounds i32, ptr %60, i64 %110
  %114 = load i32, ptr %113, align 4, !tbaa !47
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds float, ptr %13, i64 %115
  %117 = load float, ptr %116, align 4, !tbaa !95
  %118 = fpext float %117 to double
  %119 = tail call double @llvm.fmuladd.f64(double %112, double %118, double %109)
  %120 = add nuw nsw i64 %99, 2
  %121 = trunc i64 %120 to i32
  %122 = icmp eq i32 %54, %121
  br i1 %122, label %83, label %98

123:                                              ; preds = %146, %39
  %124 = phi ptr [ %11, %39 ], [ %168, %146 ]
  %125 = phi ptr [ %13, %39 ], [ %169, %146 ]
  %126 = icmp eq i32 %43, 0
  br i1 %126, label %136, label %127

127:                                              ; preds = %123
  %128 = load i64, ptr %124, align 8, !tbaa !34
  %129 = getelementptr inbounds double, ptr %42, i64 %128
  %130 = load double, ptr %129, align 8, !tbaa !30
  %131 = fmul double %40, %130
  %132 = load float, ptr %125, align 4, !tbaa !95
  %133 = fpext float %132 to double
  %134 = fmul double %131, %133
  %135 = fptrunc double %134 to float
  store float %135, ptr %125, align 4, !tbaa !95
  br label %136

136:                                              ; preds = %123, %127
  %137 = add i32 %7, -1
  %138 = icmp sgt i32 %137, -1
  br i1 %138, label %139, label %606

139:                                              ; preds = %136
  %140 = zext i32 %137 to i64
  %141 = getelementptr inbounds float, ptr %13, i64 %140
  %142 = getelementptr inbounds i64, ptr %11, i64 %140
  %143 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %144 = load ptr, ptr %143, align 8
  %145 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  br label %172

146:                                              ; preds = %146, %45
  %147 = phi ptr [ %11, %45 ], [ %168, %146 ]
  %148 = phi ptr [ %13, %45 ], [ %169, %146 ]
  %149 = phi i32 [ 0, %45 ], [ %170, %146 ]
  %150 = load i64, ptr %147, align 8, !tbaa !34
  %151 = getelementptr inbounds double, ptr %42, i64 %150
  %152 = load double, ptr %151, align 8, !tbaa !30
  %153 = fmul double %40, %152
  %154 = load float, ptr %148, align 4, !tbaa !95
  %155 = fpext float %154 to double
  %156 = fmul double %153, %155
  %157 = fptrunc double %156 to float
  store float %157, ptr %148, align 4, !tbaa !95
  %158 = getelementptr inbounds i64, ptr %147, i64 1
  %159 = getelementptr inbounds float, ptr %148, i64 1
  %160 = load i64, ptr %158, align 8, !tbaa !34
  %161 = getelementptr inbounds double, ptr %42, i64 %160
  %162 = load double, ptr %161, align 8, !tbaa !30
  %163 = fmul double %40, %162
  %164 = load float, ptr %159, align 4, !tbaa !95
  %165 = fpext float %164 to double
  %166 = fmul double %163, %165
  %167 = fptrunc double %166 to float
  store float %167, ptr %159, align 4, !tbaa !95
  %168 = getelementptr inbounds i64, ptr %147, i64 2
  %169 = getelementptr inbounds float, ptr %148, i64 2
  %170 = add i32 %149, 2
  %171 = icmp eq i32 %170, %46
  br i1 %171, label %123, label %146

172:                                              ; preds = %139, %206
  %173 = phi i64 [ %140, %139 ], [ %219, %206 ]
  %174 = phi ptr [ %142, %139 ], [ %220, %206 ]
  %175 = phi ptr [ %141, %139 ], [ %221, %206 ]
  %176 = getelementptr inbounds i64, ptr %174, i64 1
  %177 = load i64, ptr %176, align 8, !tbaa !34
  %178 = trunc i64 %177 to i32
  %179 = getelementptr inbounds i32, ptr %16, i64 %173
  %180 = load i32, ptr %179, align 4, !tbaa !47
  %181 = icmp ult i32 %180, %178
  br i1 %181, label %182, label %206

182:                                              ; preds = %172
  %183 = load ptr, ptr %145, align 8, !tbaa !46
  %184 = zext i32 %180 to i64
  %185 = and i64 %177, 4294967295
  %186 = sub i64 %177, %184
  %187 = add nuw nsw i64 %184, 1
  %188 = and i64 %186, 1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %201, label %190

190:                                              ; preds = %182
  %191 = getelementptr inbounds double, ptr %144, i64 %184
  %192 = load double, ptr %191, align 8, !tbaa !30
  %193 = getelementptr inbounds i32, ptr %183, i64 %184
  %194 = load i32, ptr %193, align 4, !tbaa !47
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds float, ptr %13, i64 %195
  %197 = load float, ptr %196, align 4, !tbaa !95
  %198 = fpext float %197 to double
  %199 = tail call double @llvm.fmuladd.f64(double %192, double %198, double 0.000000e+00)
  %200 = add nuw nsw i64 %184, 1
  br label %201

201:                                              ; preds = %190, %182
  %202 = phi double [ undef, %182 ], [ %199, %190 ]
  %203 = phi i64 [ %184, %182 ], [ %200, %190 ]
  %204 = phi double [ 0.000000e+00, %182 ], [ %199, %190 ]
  %205 = icmp eq i64 %185, %187
  br i1 %205, label %206, label %223

206:                                              ; preds = %201, %223, %172
  %207 = phi double [ 0.000000e+00, %172 ], [ %202, %201 ], [ %244, %223 ]
  %208 = load float, ptr %175, align 4, !tbaa !95
  %209 = fpext float %208 to double
  %210 = fneg double %207
  %211 = tail call double @llvm.fmuladd.f64(double %210, double %3, double %209)
  %212 = fptrunc double %211 to float
  %213 = load i64, ptr %174, align 8, !tbaa !34
  %214 = getelementptr inbounds double, ptr %144, i64 %213
  %215 = load double, ptr %214, align 8, !tbaa !30
  %216 = fpext float %212 to double
  %217 = fdiv double %216, %215
  %218 = fptrunc double %217 to float
  store float %218, ptr %175, align 4, !tbaa !95
  %219 = add nsw i64 %173, -1
  %220 = getelementptr inbounds i64, ptr %174, i64 -1
  %221 = getelementptr inbounds float, ptr %175, i64 -1
  %222 = icmp sgt i64 %173, 0
  br i1 %222, label %172, label %606

223:                                              ; preds = %201, %223
  %224 = phi i64 [ %245, %223 ], [ %203, %201 ]
  %225 = phi double [ %244, %223 ], [ %204, %201 ]
  %226 = getelementptr inbounds double, ptr %144, i64 %224
  %227 = load double, ptr %226, align 8, !tbaa !30
  %228 = getelementptr inbounds i32, ptr %183, i64 %224
  %229 = load i32, ptr %228, align 4, !tbaa !47
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds float, ptr %13, i64 %230
  %232 = load float, ptr %231, align 4, !tbaa !95
  %233 = fpext float %232 to double
  %234 = tail call double @llvm.fmuladd.f64(double %227, double %233, double %225)
  %235 = add nuw nsw i64 %224, 1
  %236 = getelementptr inbounds double, ptr %144, i64 %235
  %237 = load double, ptr %236, align 8, !tbaa !30
  %238 = getelementptr inbounds i32, ptr %183, i64 %235
  %239 = load i32, ptr %238, align 4, !tbaa !47
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds float, ptr %13, i64 %240
  %242 = load float, ptr %241, align 4, !tbaa !95
  %243 = fpext float %242 to double
  %244 = tail call double @llvm.fmuladd.f64(double %237, double %243, double %234)
  %245 = add nuw nsw i64 %224, 2
  %246 = icmp eq i64 %245, %185
  br i1 %246, label %206, label %223

247:                                              ; preds = %371
  br i1 %18, label %606, label %248

248:                                              ; preds = %247
  %249 = fsub double 2.000000e+00, %3
  %250 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %251 = load ptr, ptr %250, align 8, !tbaa !13
  %252 = and i32 %7, 1
  %253 = icmp eq i32 %7, 1
  br i1 %253, label %410, label %254

254:                                              ; preds = %248
  %255 = and i32 %7, -2
  br label %435

256:                                              ; preds = %28, %371
  %257 = phi i64 [ %37, %28 ], [ %266, %371 ]
  %258 = phi i64 [ 0, %28 ], [ %382, %371 ]
  %259 = phi ptr [ %11, %28 ], [ %265, %371 ]
  %260 = phi ptr [ %13, %28 ], [ %383, %371 ]
  %261 = getelementptr inbounds float, ptr %30, i64 %258
  %262 = load float, ptr %261, align 4, !tbaa !95
  store float %262, ptr %260, align 4, !tbaa !95
  %263 = add i64 %257, 1
  %264 = getelementptr inbounds i32, ptr %32, i64 %263
  %265 = getelementptr inbounds i64, ptr %259, i64 1
  %266 = load i64, ptr %265, align 8, !tbaa !34
  %267 = getelementptr inbounds i32, ptr %32, i64 %266
  %268 = ptrtoint ptr %267 to i64
  %269 = ptrtoint ptr %264 to i64
  %270 = sub i64 %268, %269
  %271 = lshr exact i64 %270, 2
  %272 = trunc i64 %271 to i32
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %339, label %274

274:                                              ; preds = %256, %327
  %275 = phi i32 [ %337, %327 ], [ %272, %256 ]
  %276 = phi ptr [ %338, %327 ], [ %264, %256 ]
  %277 = icmp ult i32 %275, 8
  br i1 %277, label %278, label %327

278:                                              ; preds = %274
  switch i32 %275, label %327 [
    i32 7, label %279
    i32 6, label %285
    i32 5, label %292
    i32 4, label %299
    i32 3, label %306
    i32 2, label %313
    i32 1, label %320
  ]

279:                                              ; preds = %278
  %280 = load i32, ptr %276, align 4, !tbaa !47
  %281 = zext i32 %280 to i64
  %282 = icmp ugt i64 %258, %281
  br i1 %282, label %283, label %339

283:                                              ; preds = %279
  %284 = getelementptr inbounds i32, ptr %276, i64 1
  br label %285

285:                                              ; preds = %278, %283
  %286 = phi ptr [ %284, %283 ], [ %276, %278 ]
  %287 = load i32, ptr %286, align 4, !tbaa !47
  %288 = zext i32 %287 to i64
  %289 = icmp ugt i64 %258, %288
  br i1 %289, label %290, label %339

290:                                              ; preds = %285
  %291 = getelementptr inbounds i32, ptr %286, i64 1
  br label %292

292:                                              ; preds = %278, %290
  %293 = phi ptr [ %291, %290 ], [ %276, %278 ]
  %294 = load i32, ptr %293, align 4, !tbaa !47
  %295 = zext i32 %294 to i64
  %296 = icmp ugt i64 %258, %295
  br i1 %296, label %297, label %339

297:                                              ; preds = %292
  %298 = getelementptr inbounds i32, ptr %293, i64 1
  br label %299

299:                                              ; preds = %278, %297
  %300 = phi ptr [ %298, %297 ], [ %276, %278 ]
  %301 = load i32, ptr %300, align 4, !tbaa !47
  %302 = zext i32 %301 to i64
  %303 = icmp ugt i64 %258, %302
  br i1 %303, label %304, label %339

304:                                              ; preds = %299
  %305 = getelementptr inbounds i32, ptr %300, i64 1
  br label %306

306:                                              ; preds = %278, %304
  %307 = phi ptr [ %305, %304 ], [ %276, %278 ]
  %308 = load i32, ptr %307, align 4, !tbaa !47
  %309 = zext i32 %308 to i64
  %310 = icmp ugt i64 %258, %309
  br i1 %310, label %311, label %339

311:                                              ; preds = %306
  %312 = getelementptr inbounds i32, ptr %307, i64 1
  br label %313

313:                                              ; preds = %278, %311
  %314 = phi ptr [ %312, %311 ], [ %276, %278 ]
  %315 = load i32, ptr %314, align 4, !tbaa !47
  %316 = zext i32 %315 to i64
  %317 = icmp ugt i64 %258, %316
  br i1 %317, label %318, label %339

318:                                              ; preds = %313
  %319 = getelementptr inbounds i32, ptr %314, i64 1
  br label %320

320:                                              ; preds = %278, %318
  %321 = phi ptr [ %319, %318 ], [ %276, %278 ]
  %322 = load i32, ptr %321, align 4, !tbaa !47
  %323 = zext i32 %322 to i64
  %324 = icmp ugt i64 %258, %323
  %325 = zext i1 %324 to i64
  %326 = getelementptr inbounds i32, ptr %321, i64 %325
  br label %339

327:                                              ; preds = %278, %274
  %328 = lshr i32 %275, 1
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds i32, ptr %276, i64 %329
  %331 = load i32, ptr %330, align 4, !tbaa !47
  %332 = zext i32 %331 to i64
  %333 = icmp ugt i64 %258, %332
  %334 = getelementptr inbounds i32, ptr %330, i64 1
  %335 = xor i32 %328, -1
  %336 = add i32 %275, %335
  %337 = select i1 %333, i32 %336, i32 %328
  %338 = select i1 %333, ptr %334, ptr %276
  br label %274

339:                                              ; preds = %256, %279, %285, %292, %299, %306, %313, %320
  %340 = phi ptr [ %264, %256 ], [ %276, %279 ], [ %286, %285 ], [ %293, %292 ], [ %300, %299 ], [ %307, %306 ], [ %314, %313 ], [ %326, %320 ]
  %341 = ptrtoint ptr %340 to i64
  %342 = sub i64 %341, %33
  %343 = lshr exact i64 %342, 2
  %344 = trunc i64 %343 to i32
  %345 = trunc i64 %257 to i32
  %346 = add i32 %345, 1
  %347 = icmp ult i32 %346, %344
  br i1 %347, label %348, label %371

348:                                              ; preds = %339
  %349 = zext i32 %346 to i64
  %350 = xor i32 %345, -1
  %351 = add i32 %350, %344
  %352 = add i32 %344, -2
  %353 = and i32 %351, 1
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %366, label %355

355:                                              ; preds = %348
  %356 = getelementptr inbounds double, ptr %35, i64 %349
  %357 = load double, ptr %356, align 8, !tbaa !30
  %358 = getelementptr inbounds i32, ptr %32, i64 %349
  %359 = load i32, ptr %358, align 4, !tbaa !47
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds float, ptr %13, i64 %360
  %362 = load float, ptr %361, align 4, !tbaa !95
  %363 = fpext float %362 to double
  %364 = tail call double @llvm.fmuladd.f64(double %357, double %363, double 0.000000e+00)
  %365 = add nuw nsw i64 %349, 1
  br label %366

366:                                              ; preds = %355, %348
  %367 = phi double [ undef, %348 ], [ %364, %355 ]
  %368 = phi i64 [ %349, %348 ], [ %365, %355 ]
  %369 = phi double [ 0.000000e+00, %348 ], [ %364, %355 ]
  %370 = icmp eq i32 %352, %345
  br i1 %370, label %371, label %385

371:                                              ; preds = %366, %385, %339
  %372 = phi double [ 0.000000e+00, %339 ], [ %367, %366 ], [ %406, %385 ]
  %373 = fpext float %262 to double
  %374 = fneg double %372
  %375 = tail call double @llvm.fmuladd.f64(double %374, double %3, double %373)
  %376 = fptrunc double %375 to float
  %377 = getelementptr inbounds double, ptr %35, i64 %257
  %378 = load double, ptr %377, align 8, !tbaa !30
  %379 = fpext float %376 to double
  %380 = fdiv double %379, %378
  %381 = fptrunc double %380 to float
  store float %381, ptr %260, align 4, !tbaa !95
  %382 = add nuw nsw i64 %258, 1
  %383 = getelementptr inbounds float, ptr %260, i64 1
  %384 = icmp eq i64 %382, %36
  br i1 %384, label %247, label %256

385:                                              ; preds = %366, %385
  %386 = phi i64 [ %407, %385 ], [ %368, %366 ]
  %387 = phi double [ %406, %385 ], [ %369, %366 ]
  %388 = getelementptr inbounds double, ptr %35, i64 %386
  %389 = load double, ptr %388, align 8, !tbaa !30
  %390 = getelementptr inbounds i32, ptr %32, i64 %386
  %391 = load i32, ptr %390, align 4, !tbaa !47
  %392 = zext i32 %391 to i64
  %393 = getelementptr inbounds float, ptr %13, i64 %392
  %394 = load float, ptr %393, align 4, !tbaa !95
  %395 = fpext float %394 to double
  %396 = tail call double @llvm.fmuladd.f64(double %389, double %395, double %387)
  %397 = add nuw nsw i64 %386, 1
  %398 = getelementptr inbounds double, ptr %35, i64 %397
  %399 = load double, ptr %398, align 8, !tbaa !30
  %400 = getelementptr inbounds i32, ptr %32, i64 %397
  %401 = load i32, ptr %400, align 4, !tbaa !47
  %402 = zext i32 %401 to i64
  %403 = getelementptr inbounds float, ptr %13, i64 %402
  %404 = load float, ptr %403, align 4, !tbaa !95
  %405 = fpext float %404 to double
  %406 = tail call double @llvm.fmuladd.f64(double %399, double %405, double %396)
  %407 = add nuw nsw i64 %386, 2
  %408 = trunc i64 %407 to i32
  %409 = icmp eq i32 %408, %344
  br i1 %409, label %371, label %385

410:                                              ; preds = %435, %248
  %411 = phi ptr [ %11, %248 ], [ %457, %435 ]
  %412 = phi ptr [ %13, %248 ], [ %458, %435 ]
  %413 = icmp eq i32 %252, 0
  br i1 %413, label %423, label %414

414:                                              ; preds = %410
  %415 = load i64, ptr %411, align 8, !tbaa !34
  %416 = getelementptr inbounds double, ptr %251, i64 %415
  %417 = load double, ptr %416, align 8, !tbaa !30
  %418 = fmul double %249, %417
  %419 = load float, ptr %412, align 4, !tbaa !95
  %420 = fpext float %419 to double
  %421 = fmul double %418, %420
  %422 = fptrunc double %421 to float
  store float %422, ptr %412, align 4, !tbaa !95
  br label %423

423:                                              ; preds = %410, %414
  %424 = add i32 %7, -1
  %425 = icmp sgt i32 %424, -1
  br i1 %425, label %426, label %606

426:                                              ; preds = %423
  %427 = zext i32 %424 to i64
  %428 = getelementptr inbounds float, ptr %13, i64 %427
  %429 = getelementptr inbounds i64, ptr %11, i64 %427
  %430 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %431 = load ptr, ptr %430, align 8, !tbaa !46
  %432 = ptrtoint ptr %431 to i64
  %433 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %434 = load ptr, ptr %433, align 8
  br label %461

435:                                              ; preds = %435, %254
  %436 = phi ptr [ %11, %254 ], [ %457, %435 ]
  %437 = phi ptr [ %13, %254 ], [ %458, %435 ]
  %438 = phi i32 [ 0, %254 ], [ %459, %435 ]
  %439 = load i64, ptr %436, align 8, !tbaa !34
  %440 = getelementptr inbounds double, ptr %251, i64 %439
  %441 = load double, ptr %440, align 8, !tbaa !30
  %442 = fmul double %249, %441
  %443 = load float, ptr %437, align 4, !tbaa !95
  %444 = fpext float %443 to double
  %445 = fmul double %442, %444
  %446 = fptrunc double %445 to float
  store float %446, ptr %437, align 4, !tbaa !95
  %447 = getelementptr inbounds i64, ptr %436, i64 1
  %448 = getelementptr inbounds float, ptr %437, i64 1
  %449 = load i64, ptr %447, align 8, !tbaa !34
  %450 = getelementptr inbounds double, ptr %251, i64 %449
  %451 = load double, ptr %450, align 8, !tbaa !30
  %452 = fmul double %249, %451
  %453 = load float, ptr %448, align 4, !tbaa !95
  %454 = fpext float %453 to double
  %455 = fmul double %452, %454
  %456 = fptrunc double %455 to float
  store float %456, ptr %448, align 4, !tbaa !95
  %457 = getelementptr inbounds i64, ptr %436, i64 2
  %458 = getelementptr inbounds float, ptr %437, i64 2
  %459 = add i32 %438, 2
  %460 = icmp eq i32 %459, %255
  br i1 %460, label %410, label %435

461:                                              ; preds = %426, %566
  %462 = phi ptr [ %429, %426 ], [ %579, %566 ]
  %463 = phi ptr [ %428, %426 ], [ %580, %566 ]
  %464 = phi i32 [ %424, %426 ], [ %578, %566 ]
  %465 = getelementptr inbounds i64, ptr %462, i64 1
  %466 = load i64, ptr %465, align 8, !tbaa !34
  %467 = trunc i64 %466 to i32
  %468 = load i64, ptr %462, align 8, !tbaa !34
  %469 = add i64 %468, 1
  %470 = getelementptr inbounds i32, ptr %431, i64 %469
  %471 = and i64 %466, 4294967295
  %472 = getelementptr inbounds i32, ptr %431, i64 %471
  %473 = ptrtoint ptr %472 to i64
  %474 = ptrtoint ptr %470 to i64
  %475 = sub i64 %473, %474
  %476 = lshr exact i64 %475, 2
  %477 = trunc i64 %476 to i32
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %536, label %479

479:                                              ; preds = %461, %525
  %480 = phi i32 [ %534, %525 ], [ %477, %461 ]
  %481 = phi ptr [ %535, %525 ], [ %470, %461 ]
  %482 = icmp ult i32 %480, 8
  br i1 %482, label %483, label %525

483:                                              ; preds = %479
  switch i32 %480, label %525 [
    i32 7, label %484
    i32 6, label %489
    i32 5, label %495
    i32 4, label %501
    i32 3, label %507
    i32 2, label %513
    i32 1, label %519
  ]

484:                                              ; preds = %483
  %485 = load i32, ptr %481, align 4, !tbaa !47
  %486 = icmp ult i32 %485, %464
  br i1 %486, label %487, label %536

487:                                              ; preds = %484
  %488 = getelementptr inbounds i32, ptr %481, i64 1
  br label %489

489:                                              ; preds = %483, %487
  %490 = phi ptr [ %488, %487 ], [ %481, %483 ]
  %491 = load i32, ptr %490, align 4, !tbaa !47
  %492 = icmp ult i32 %491, %464
  br i1 %492, label %493, label %536

493:                                              ; preds = %489
  %494 = getelementptr inbounds i32, ptr %490, i64 1
  br label %495

495:                                              ; preds = %483, %493
  %496 = phi ptr [ %494, %493 ], [ %481, %483 ]
  %497 = load i32, ptr %496, align 4, !tbaa !47
  %498 = icmp ult i32 %497, %464
  br i1 %498, label %499, label %536

499:                                              ; preds = %495
  %500 = getelementptr inbounds i32, ptr %496, i64 1
  br label %501

501:                                              ; preds = %483, %499
  %502 = phi ptr [ %500, %499 ], [ %481, %483 ]
  %503 = load i32, ptr %502, align 4, !tbaa !47
  %504 = icmp ult i32 %503, %464
  br i1 %504, label %505, label %536

505:                                              ; preds = %501
  %506 = getelementptr inbounds i32, ptr %502, i64 1
  br label %507

507:                                              ; preds = %483, %505
  %508 = phi ptr [ %506, %505 ], [ %481, %483 ]
  %509 = load i32, ptr %508, align 4, !tbaa !47
  %510 = icmp ult i32 %509, %464
  br i1 %510, label %511, label %536

511:                                              ; preds = %507
  %512 = getelementptr inbounds i32, ptr %508, i64 1
  br label %513

513:                                              ; preds = %483, %511
  %514 = phi ptr [ %512, %511 ], [ %481, %483 ]
  %515 = load i32, ptr %514, align 4, !tbaa !47
  %516 = icmp ult i32 %515, %464
  br i1 %516, label %517, label %536

517:                                              ; preds = %513
  %518 = getelementptr inbounds i32, ptr %514, i64 1
  br label %519

519:                                              ; preds = %483, %517
  %520 = phi ptr [ %518, %517 ], [ %481, %483 ]
  %521 = load i32, ptr %520, align 4, !tbaa !47
  %522 = icmp ult i32 %521, %464
  %523 = zext i1 %522 to i64
  %524 = getelementptr inbounds i32, ptr %520, i64 %523
  br label %536

525:                                              ; preds = %483, %479
  %526 = lshr i32 %480, 1
  %527 = zext i32 %526 to i64
  %528 = getelementptr inbounds i32, ptr %481, i64 %527
  %529 = load i32, ptr %528, align 4, !tbaa !47
  %530 = icmp ult i32 %529, %464
  %531 = getelementptr inbounds i32, ptr %528, i64 1
  %532 = xor i32 %526, -1
  %533 = add i32 %480, %532
  %534 = select i1 %530, i32 %533, i32 %526
  %535 = select i1 %530, ptr %531, ptr %481
  br label %479

536:                                              ; preds = %461, %484, %489, %495, %501, %507, %513, %519
  %537 = phi ptr [ %470, %461 ], [ %481, %484 ], [ %490, %489 ], [ %496, %495 ], [ %502, %501 ], [ %508, %507 ], [ %514, %513 ], [ %524, %519 ]
  %538 = ptrtoint ptr %537 to i64
  %539 = sub i64 %538, %432
  %540 = lshr exact i64 %539, 2
  %541 = trunc i64 %540 to i32
  %542 = icmp ult i32 %541, %467
  br i1 %542, label %543, label %566

543:                                              ; preds = %536
  %544 = and i64 %540, 4294967295
  %545 = and i64 %466, 4294967295
  %546 = sub i64 %466, %540
  %547 = add nuw nsw i64 %544, 1
  %548 = and i64 %546, 1
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %561, label %550

550:                                              ; preds = %543
  %551 = getelementptr inbounds double, ptr %434, i64 %544
  %552 = load double, ptr %551, align 8, !tbaa !30
  %553 = getelementptr inbounds i32, ptr %431, i64 %544
  %554 = load i32, ptr %553, align 4, !tbaa !47
  %555 = zext i32 %554 to i64
  %556 = getelementptr inbounds float, ptr %13, i64 %555
  %557 = load float, ptr %556, align 4, !tbaa !95
  %558 = fpext float %557 to double
  %559 = tail call double @llvm.fmuladd.f64(double %552, double %558, double 0.000000e+00)
  %560 = add nuw nsw i64 %544, 1
  br label %561

561:                                              ; preds = %550, %543
  %562 = phi double [ undef, %543 ], [ %559, %550 ]
  %563 = phi i64 [ %544, %543 ], [ %560, %550 ]
  %564 = phi double [ 0.000000e+00, %543 ], [ %559, %550 ]
  %565 = icmp eq i64 %471, %547
  br i1 %565, label %566, label %582

566:                                              ; preds = %561, %582, %536
  %567 = phi double [ 0.000000e+00, %536 ], [ %562, %561 ], [ %603, %582 ]
  %568 = load float, ptr %463, align 4, !tbaa !95
  %569 = fpext float %568 to double
  %570 = fneg double %567
  %571 = tail call double @llvm.fmuladd.f64(double %570, double %3, double %569)
  %572 = fptrunc double %571 to float
  %573 = getelementptr inbounds double, ptr %434, i64 %468
  %574 = load double, ptr %573, align 8, !tbaa !30
  %575 = fpext float %572 to double
  %576 = fdiv double %575, %574
  %577 = fptrunc double %576 to float
  store float %577, ptr %463, align 4, !tbaa !95
  %578 = add nsw i32 %464, -1
  %579 = getelementptr inbounds i64, ptr %462, i64 -1
  %580 = getelementptr inbounds float, ptr %463, i64 -1
  %581 = icmp sgt i32 %464, 0
  br i1 %581, label %461, label %606

582:                                              ; preds = %561, %582
  %583 = phi i64 [ %604, %582 ], [ %563, %561 ]
  %584 = phi double [ %603, %582 ], [ %564, %561 ]
  %585 = getelementptr inbounds double, ptr %434, i64 %583
  %586 = load double, ptr %585, align 8, !tbaa !30
  %587 = getelementptr inbounds i32, ptr %431, i64 %583
  %588 = load i32, ptr %587, align 4, !tbaa !47
  %589 = zext i32 %588 to i64
  %590 = getelementptr inbounds float, ptr %13, i64 %589
  %591 = load float, ptr %590, align 4, !tbaa !95
  %592 = fpext float %591 to double
  %593 = tail call double @llvm.fmuladd.f64(double %586, double %592, double %584)
  %594 = add nuw nsw i64 %583, 1
  %595 = getelementptr inbounds double, ptr %434, i64 %594
  %596 = load double, ptr %595, align 8, !tbaa !30
  %597 = getelementptr inbounds i32, ptr %431, i64 %594
  %598 = load i32, ptr %597, align 4, !tbaa !47
  %599 = zext i32 %598 to i64
  %600 = getelementptr inbounds float, ptr %13, i64 %599
  %601 = load float, ptr %600, align 4, !tbaa !95
  %602 = fpext float %601 to double
  %603 = tail call double @llvm.fmuladd.f64(double %596, double %602, double %593)
  %604 = add nuw nsw i64 %583, 2
  %605 = icmp eq i64 %604, %545
  br i1 %605, label %566, label %582

606:                                              ; preds = %206, %566, %27, %247, %19, %38, %136, %423
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE16precondition_SORIfEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %67, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !106
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  %19 = zext i32 %9 to i64
  %20 = load i64, ptr %15, align 8, !tbaa !34
  br label %21

21:                                               ; preds = %35, %11
  %22 = phi i64 [ %20, %11 ], [ %28, %35 ]
  %23 = phi i64 [ 0, %11 ], [ %26, %35 ]
  %24 = getelementptr inbounds float, ptr %13, i64 %23
  %25 = load float, ptr %24, align 4, !tbaa !95
  %26 = add nuw nsw i64 %23, 1
  %27 = getelementptr inbounds i64, ptr %15, i64 %26
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = and i64 %22, 4294967295
  %30 = icmp ugt i64 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %21
  %32 = trunc i64 %22 to i32
  %33 = load ptr, ptr %16, align 8, !tbaa !46
  %34 = load ptr, ptr %17, align 8
  br label %44

35:                                               ; preds = %62, %21
  %36 = phi float [ %25, %21 ], [ %63, %62 ]
  %37 = fpext float %36 to double
  %38 = fmul double %37, %3
  %39 = getelementptr inbounds double, ptr %18, i64 %22
  %40 = load double, ptr %39, align 8, !tbaa !30
  %41 = fdiv double %38, %40
  %42 = fptrunc double %41 to float
  store float %42, ptr %24, align 4, !tbaa !95
  %43 = icmp eq i64 %26, %19
  br i1 %43, label %67, label %21

44:                                               ; preds = %62, %31
  %45 = phi i64 [ %29, %31 ], [ %65, %62 ]
  %46 = phi i32 [ %32, %31 ], [ %64, %62 ]
  %47 = phi float [ %25, %31 ], [ %63, %62 ]
  %48 = getelementptr inbounds i32, ptr %33, i64 %45
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = zext i32 %49 to i64
  %51 = icmp ugt i64 %23, %50
  br i1 %51, label %52, label %62

52:                                               ; preds = %44
  %53 = getelementptr inbounds double, ptr %34, i64 %45
  %54 = load double, ptr %53, align 8, !tbaa !30
  %55 = getelementptr inbounds float, ptr %13, i64 %50
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fpext float %56 to double
  %58 = fpext float %47 to double
  %59 = fneg double %54
  %60 = tail call double @llvm.fmuladd.f64(double %59, double %57, double %58)
  %61 = fptrunc double %60 to float
  br label %62

62:                                               ; preds = %52, %44
  %63 = phi float [ %61, %52 ], [ %47, %44 ]
  %64 = add i32 %46, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %28, %65
  br i1 %66, label %44, label %35

67:                                               ; preds = %35, %4
  ret void
}

declare noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef nonnull align 8 dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE3SORIfEEvRNS_6VectorIT_EEd(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, double noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !106
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !13
  %17 = zext i32 %7 to i64
  %18 = load i64, ptr %13, align 8, !tbaa !34
  br label %20

19:                                               ; preds = %34, %3
  ret void

20:                                               ; preds = %9, %34
  %21 = phi i64 [ %18, %9 ], [ %27, %34 ]
  %22 = phi i64 [ 0, %9 ], [ %25, %34 ]
  %23 = getelementptr inbounds float, ptr %11, i64 %22
  %24 = load float, ptr %23, align 4, !tbaa !95
  %25 = add nuw nsw i64 %22, 1
  %26 = getelementptr inbounds i64, ptr %13, i64 %25
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = and i64 %21, 4294967295
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %20
  %31 = trunc i64 %21 to i32
  %32 = load ptr, ptr %14, align 8, !tbaa !46
  %33 = load ptr, ptr %15, align 8
  br label %43

34:                                               ; preds = %61, %20
  %35 = phi float [ %24, %20 ], [ %62, %61 ]
  %36 = fpext float %35 to double
  %37 = fmul double %36, %2
  %38 = getelementptr inbounds double, ptr %16, i64 %21
  %39 = load double, ptr %38, align 8, !tbaa !30
  %40 = fdiv double %37, %39
  %41 = fptrunc double %40 to float
  store float %41, ptr %23, align 4, !tbaa !95
  %42 = icmp eq i64 %25, %17
  br i1 %42, label %19, label %20

43:                                               ; preds = %30, %61
  %44 = phi i64 [ %28, %30 ], [ %64, %61 ]
  %45 = phi i32 [ %31, %30 ], [ %63, %61 ]
  %46 = phi float [ %24, %30 ], [ %62, %61 ]
  %47 = getelementptr inbounds i32, ptr %32, i64 %44
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %22, %49
  br i1 %50, label %51, label %61

51:                                               ; preds = %43
  %52 = getelementptr inbounds double, ptr %33, i64 %44
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = getelementptr inbounds float, ptr %11, i64 %49
  %55 = load float, ptr %54, align 4, !tbaa !95
  %56 = fpext float %55 to double
  %57 = fpext float %46 to double
  %58 = fneg double %53
  %59 = tail call double @llvm.fmuladd.f64(double %58, double %56, double %57)
  %60 = fptrunc double %59 to float
  br label %61

61:                                               ; preds = %51, %43
  %62 = phi float [ %60, %51 ], [ %46, %43 ]
  %63 = add i32 %45, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %27, %64
  br i1 %65, label %43, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE17precondition_TSORIfEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %69, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !106
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  %19 = zext i32 %9 to i64
  br label %20

20:                                               ; preds = %37, %11
  %21 = phi i64 [ %19, %11 ], [ %22, %37 ]
  %22 = add nsw i64 %21, -1
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  %25 = getelementptr inbounds float, ptr %13, i64 %24
  %26 = load float, ptr %25, align 4, !tbaa !95
  %27 = getelementptr inbounds i64, ptr %15, i64 %24
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = getelementptr inbounds i64, ptr %15, i64 %21
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %28, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %20
  %34 = trunc i64 %28 to i32
  %35 = load ptr, ptr %16, align 8, !tbaa !46
  %36 = load ptr, ptr %17, align 8
  br label %46

37:                                               ; preds = %64, %20
  %38 = phi float [ %26, %20 ], [ %65, %64 ]
  %39 = fpext float %38 to double
  %40 = fmul double %39, %3
  %41 = getelementptr inbounds double, ptr %18, i64 %28
  %42 = load double, ptr %41, align 8, !tbaa !30
  %43 = fdiv double %40, %42
  %44 = fptrunc double %43 to float
  store float %44, ptr %25, align 4, !tbaa !95
  %45 = icmp eq i32 %23, 0
  br i1 %45, label %69, label %20

46:                                               ; preds = %64, %33
  %47 = phi i64 [ %31, %33 ], [ %67, %64 ]
  %48 = phi i32 [ %34, %33 ], [ %66, %64 ]
  %49 = phi float [ %26, %33 ], [ %65, %64 ]
  %50 = getelementptr inbounds i32, ptr %35, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %23
  br i1 %52, label %53, label %64

53:                                               ; preds = %46
  %54 = getelementptr inbounds double, ptr %36, i64 %47
  %55 = load double, ptr %54, align 8, !tbaa !30
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds float, ptr %13, i64 %56
  %58 = load float, ptr %57, align 4, !tbaa !95
  %59 = fpext float %58 to double
  %60 = fpext float %49 to double
  %61 = fneg double %55
  %62 = tail call double @llvm.fmuladd.f64(double %61, double %59, double %60)
  %63 = fptrunc double %62 to float
  br label %64

64:                                               ; preds = %53, %46
  %65 = phi float [ %63, %53 ], [ %49, %46 ]
  %66 = add i32 %48, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %30, %67
  br i1 %68, label %46, label %37

69:                                               ; preds = %37, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE4TSORIfEEvRNS_6VectorIT_EEd(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, double noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !106
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !13
  %17 = zext i32 %7 to i64
  br label %19

18:                                               ; preds = %36, %3
  ret void

19:                                               ; preds = %9, %36
  %20 = phi i64 [ %17, %9 ], [ %21, %36 ]
  %21 = add nsw i64 %20, -1
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  %24 = getelementptr inbounds float, ptr %11, i64 %23
  %25 = load float, ptr %24, align 4, !tbaa !95
  %26 = getelementptr inbounds i64, ptr %13, i64 %23
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = getelementptr inbounds i64, ptr %13, i64 %20
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %27, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %19
  %33 = trunc i64 %27 to i32
  %34 = load ptr, ptr %14, align 8, !tbaa !46
  %35 = load ptr, ptr %15, align 8
  br label %45

36:                                               ; preds = %63, %19
  %37 = phi float [ %25, %19 ], [ %64, %63 ]
  %38 = fpext float %37 to double
  %39 = fmul double %38, %2
  %40 = getelementptr inbounds double, ptr %16, i64 %27
  %41 = load double, ptr %40, align 8, !tbaa !30
  %42 = fdiv double %39, %41
  %43 = fptrunc double %42 to float
  store float %43, ptr %24, align 4, !tbaa !95
  %44 = icmp eq i32 %22, 0
  br i1 %44, label %18, label %19

45:                                               ; preds = %32, %63
  %46 = phi i64 [ %30, %32 ], [ %66, %63 ]
  %47 = phi i32 [ %33, %32 ], [ %65, %63 ]
  %48 = phi float [ %25, %32 ], [ %64, %63 ]
  %49 = getelementptr inbounds i32, ptr %34, i64 %46
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %22
  br i1 %51, label %52, label %63

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %35, i64 %46
  %54 = load double, ptr %53, align 8, !tbaa !30
  %55 = zext i32 %50 to i64
  %56 = getelementptr inbounds float, ptr %11, i64 %55
  %57 = load float, ptr %56, align 4, !tbaa !95
  %58 = fpext float %57 to double
  %59 = fpext float %48 to double
  %60 = fneg double %54
  %61 = tail call double @llvm.fmuladd.f64(double %60, double %58, double %59)
  %62 = fptrunc double %61 to float
  br label %63

63:                                               ; preds = %45, %52
  %64 = phi float [ %62, %52 ], [ %48, %45 ]
  %65 = add i32 %47, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %29, %66
  br i1 %67, label %45, label %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE19precondition_JacobiIfEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !109
  %7 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !106
  %9 = ptrtoint ptr %8 to i64
  %10 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !106
  %12 = ptrtoint ptr %11 to i64
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = fcmp une double %3, 1.000000e+00
  %18 = icmp eq i32 %6, 0
  br i1 %17, label %105, label %19

19:                                               ; preds = %4
  br i1 %18, label %251, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !13
  %23 = zext i32 %6 to i64
  %24 = icmp ult i32 %6, 4
  %25 = sub i64 %9, %12
  %26 = icmp ult i64 %25, 16
  %27 = select i1 %24, i1 true, i1 %26
  br i1 %27, label %78, label %28

28:                                               ; preds = %20
  %29 = and i64 %23, 4294967292
  %30 = trunc i64 %29 to i32
  %31 = shl nuw nsw i64 %29, 3
  %32 = getelementptr i8, ptr %16, i64 %31
  %33 = shl nuw nsw i64 %29, 2
  %34 = getelementptr i8, ptr %11, i64 %33
  %35 = shl nuw nsw i64 %29, 2
  %36 = getelementptr i8, ptr %8, i64 %35
  br label %37

37:                                               ; preds = %37, %28
  %38 = phi i64 [ 0, %28 ], [ %74, %37 ]
  %39 = shl i64 %38, 3
  %40 = getelementptr i8, ptr %16, i64 %39
  %41 = shl i64 %38, 3
  %42 = or i64 %41, 8
  %43 = getelementptr i8, ptr %16, i64 %42
  %44 = shl i64 %38, 3
  %45 = or i64 %44, 16
  %46 = getelementptr i8, ptr %16, i64 %45
  %47 = shl i64 %38, 3
  %48 = or i64 %47, 24
  %49 = getelementptr i8, ptr %16, i64 %48
  %50 = shl i64 %38, 2
  %51 = getelementptr i8, ptr %11, i64 %50
  %52 = shl i64 %38, 2
  %53 = getelementptr i8, ptr %8, i64 %52
  %54 = load <4 x float>, ptr %51, align 4, !tbaa !95
  %55 = fpext <4 x float> %54 to <4 x double>
  %56 = load i64, ptr %40, align 8, !tbaa !34
  %57 = load i64, ptr %43, align 8, !tbaa !34
  %58 = load i64, ptr %46, align 8, !tbaa !34
  %59 = load i64, ptr %49, align 8, !tbaa !34
  %60 = getelementptr inbounds double, ptr %22, i64 %56
  %61 = getelementptr inbounds double, ptr %22, i64 %57
  %62 = getelementptr inbounds double, ptr %22, i64 %58
  %63 = getelementptr inbounds double, ptr %22, i64 %59
  %64 = load double, ptr %60, align 8, !tbaa !30
  %65 = load double, ptr %61, align 8, !tbaa !30
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = load double, ptr %63, align 8, !tbaa !30
  %68 = insertelement <4 x double> poison, double %64, i64 0
  %69 = insertelement <4 x double> %68, double %65, i64 1
  %70 = insertelement <4 x double> %69, double %66, i64 2
  %71 = insertelement <4 x double> %70, double %67, i64 3
  %72 = fdiv <4 x double> %55, %71
  %73 = fptrunc <4 x double> %72 to <4 x float>
  store <4 x float> %73, ptr %53, align 4, !tbaa !95
  %74 = add nuw i64 %38, 4
  %75 = icmp eq i64 %74, %29
  br i1 %75, label %76, label %37, !llvm.loop !204

76:                                               ; preds = %37
  %77 = icmp eq i64 %29, %23
  br i1 %77, label %251, label %78

78:                                               ; preds = %20, %76
  %79 = phi i32 [ 0, %20 ], [ %30, %76 ]
  %80 = phi ptr [ %16, %20 ], [ %32, %76 ]
  %81 = phi ptr [ %11, %20 ], [ %34, %76 ]
  %82 = phi ptr [ %8, %20 ], [ %36, %76 ]
  %83 = sub i32 %6, %79
  %84 = add i32 %79, 1
  %85 = and i32 %83, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %99, label %87

87:                                               ; preds = %78
  %88 = load float, ptr %81, align 4, !tbaa !95
  %89 = fpext float %88 to double
  %90 = load i64, ptr %80, align 8, !tbaa !34
  %91 = getelementptr inbounds double, ptr %22, i64 %90
  %92 = load double, ptr %91, align 8, !tbaa !30
  %93 = fdiv double %89, %92
  %94 = fptrunc double %93 to float
  store float %94, ptr %82, align 4, !tbaa !95
  %95 = add nuw i32 %79, 1
  %96 = getelementptr inbounds float, ptr %82, i64 1
  %97 = getelementptr inbounds float, ptr %81, i64 1
  %98 = getelementptr inbounds i64, ptr %80, i64 1
  br label %99

99:                                               ; preds = %87, %78
  %100 = phi i32 [ %79, %78 ], [ %95, %87 ]
  %101 = phi ptr [ %80, %78 ], [ %98, %87 ]
  %102 = phi ptr [ %81, %78 ], [ %97, %87 ]
  %103 = phi ptr [ %82, %78 ], [ %96, %87 ]
  %104 = icmp eq i32 %6, %84
  br i1 %104, label %251, label %224

105:                                              ; preds = %4
  br i1 %18, label %251, label %106

106:                                              ; preds = %105
  %107 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %108 = load ptr, ptr %107, align 8, !tbaa !13
  %109 = zext i32 %6 to i64
  %110 = icmp ult i32 %6, 4
  %111 = sub i64 %9, %12
  %112 = icmp ult i64 %111, 16
  %113 = select i1 %110, i1 true, i1 %112
  br i1 %113, label %167, label %114

114:                                              ; preds = %106
  %115 = and i64 %109, 4294967292
  %116 = trunc i64 %115 to i32
  %117 = shl nuw nsw i64 %115, 3
  %118 = getelementptr i8, ptr %16, i64 %117
  %119 = shl nuw nsw i64 %115, 2
  %120 = getelementptr i8, ptr %11, i64 %119
  %121 = shl nuw nsw i64 %115, 2
  %122 = getelementptr i8, ptr %8, i64 %121
  %123 = insertelement <4 x double> poison, double %3, i64 0
  %124 = shufflevector <4 x double> %123, <4 x double> poison, <4 x i32> zeroinitializer
  br label %125

125:                                              ; preds = %125, %114
  %126 = phi i64 [ 0, %114 ], [ %163, %125 ]
  %127 = shl i64 %126, 3
  %128 = getelementptr i8, ptr %16, i64 %127
  %129 = shl i64 %126, 3
  %130 = or i64 %129, 8
  %131 = getelementptr i8, ptr %16, i64 %130
  %132 = shl i64 %126, 3
  %133 = or i64 %132, 16
  %134 = getelementptr i8, ptr %16, i64 %133
  %135 = shl i64 %126, 3
  %136 = or i64 %135, 24
  %137 = getelementptr i8, ptr %16, i64 %136
  %138 = shl i64 %126, 2
  %139 = getelementptr i8, ptr %11, i64 %138
  %140 = shl i64 %126, 2
  %141 = getelementptr i8, ptr %8, i64 %140
  %142 = load <4 x float>, ptr %139, align 4, !tbaa !95
  %143 = fpext <4 x float> %142 to <4 x double>
  %144 = fmul <4 x double> %124, %143
  %145 = load i64, ptr %128, align 8, !tbaa !34
  %146 = load i64, ptr %131, align 8, !tbaa !34
  %147 = load i64, ptr %134, align 8, !tbaa !34
  %148 = load i64, ptr %137, align 8, !tbaa !34
  %149 = getelementptr inbounds double, ptr %108, i64 %145
  %150 = getelementptr inbounds double, ptr %108, i64 %146
  %151 = getelementptr inbounds double, ptr %108, i64 %147
  %152 = getelementptr inbounds double, ptr %108, i64 %148
  %153 = load double, ptr %149, align 8, !tbaa !30
  %154 = load double, ptr %150, align 8, !tbaa !30
  %155 = load double, ptr %151, align 8, !tbaa !30
  %156 = load double, ptr %152, align 8, !tbaa !30
  %157 = insertelement <4 x double> poison, double %153, i64 0
  %158 = insertelement <4 x double> %157, double %154, i64 1
  %159 = insertelement <4 x double> %158, double %155, i64 2
  %160 = insertelement <4 x double> %159, double %156, i64 3
  %161 = fdiv <4 x double> %144, %160
  %162 = fptrunc <4 x double> %161 to <4 x float>
  store <4 x float> %162, ptr %141, align 4, !tbaa !95
  %163 = add nuw i64 %126, 4
  %164 = icmp eq i64 %163, %115
  br i1 %164, label %165, label %125, !llvm.loop !205

165:                                              ; preds = %125
  %166 = icmp eq i64 %115, %109
  br i1 %166, label %251, label %167

167:                                              ; preds = %106, %165
  %168 = phi i32 [ 0, %106 ], [ %116, %165 ]
  %169 = phi ptr [ %16, %106 ], [ %118, %165 ]
  %170 = phi ptr [ %11, %106 ], [ %120, %165 ]
  %171 = phi ptr [ %8, %106 ], [ %122, %165 ]
  %172 = sub i32 %6, %168
  %173 = add i32 %168, 1
  %174 = and i32 %172, 1
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %189, label %176

176:                                              ; preds = %167
  %177 = load float, ptr %170, align 4, !tbaa !95
  %178 = fpext float %177 to double
  %179 = fmul double %178, %3
  %180 = load i64, ptr %169, align 8, !tbaa !34
  %181 = getelementptr inbounds double, ptr %108, i64 %180
  %182 = load double, ptr %181, align 8, !tbaa !30
  %183 = fdiv double %179, %182
  %184 = fptrunc double %183 to float
  store float %184, ptr %171, align 4, !tbaa !95
  %185 = add nuw i32 %168, 1
  %186 = getelementptr inbounds float, ptr %171, i64 1
  %187 = getelementptr inbounds float, ptr %170, i64 1
  %188 = getelementptr inbounds i64, ptr %169, i64 1
  br label %189

189:                                              ; preds = %176, %167
  %190 = phi i32 [ %168, %167 ], [ %185, %176 ]
  %191 = phi ptr [ %169, %167 ], [ %188, %176 ]
  %192 = phi ptr [ %170, %167 ], [ %187, %176 ]
  %193 = phi ptr [ %171, %167 ], [ %186, %176 ]
  %194 = icmp eq i32 %6, %173
  br i1 %194, label %251, label %195

195:                                              ; preds = %189, %195
  %196 = phi i32 [ %219, %195 ], [ %190, %189 ]
  %197 = phi ptr [ %222, %195 ], [ %191, %189 ]
  %198 = phi ptr [ %221, %195 ], [ %192, %189 ]
  %199 = phi ptr [ %220, %195 ], [ %193, %189 ]
  %200 = load float, ptr %198, align 4, !tbaa !95
  %201 = fpext float %200 to double
  %202 = fmul double %201, %3
  %203 = load i64, ptr %197, align 8, !tbaa !34
  %204 = getelementptr inbounds double, ptr %108, i64 %203
  %205 = load double, ptr %204, align 8, !tbaa !30
  %206 = fdiv double %202, %205
  %207 = fptrunc double %206 to float
  store float %207, ptr %199, align 4, !tbaa !95
  %208 = getelementptr inbounds float, ptr %199, i64 1
  %209 = getelementptr inbounds float, ptr %198, i64 1
  %210 = getelementptr inbounds i64, ptr %197, i64 1
  %211 = load float, ptr %209, align 4, !tbaa !95
  %212 = fpext float %211 to double
  %213 = fmul double %212, %3
  %214 = load i64, ptr %210, align 8, !tbaa !34
  %215 = getelementptr inbounds double, ptr %108, i64 %214
  %216 = load double, ptr %215, align 8, !tbaa !30
  %217 = fdiv double %213, %216
  %218 = fptrunc double %217 to float
  store float %218, ptr %208, align 4, !tbaa !95
  %219 = add nuw i32 %196, 2
  %220 = getelementptr inbounds float, ptr %199, i64 2
  %221 = getelementptr inbounds float, ptr %198, i64 2
  %222 = getelementptr inbounds i64, ptr %197, i64 2
  %223 = icmp eq i32 %219, %6
  br i1 %223, label %251, label %195, !llvm.loop !206

224:                                              ; preds = %99, %224
  %225 = phi i32 [ %246, %224 ], [ %100, %99 ]
  %226 = phi ptr [ %249, %224 ], [ %101, %99 ]
  %227 = phi ptr [ %248, %224 ], [ %102, %99 ]
  %228 = phi ptr [ %247, %224 ], [ %103, %99 ]
  %229 = load float, ptr %227, align 4, !tbaa !95
  %230 = fpext float %229 to double
  %231 = load i64, ptr %226, align 8, !tbaa !34
  %232 = getelementptr inbounds double, ptr %22, i64 %231
  %233 = load double, ptr %232, align 8, !tbaa !30
  %234 = fdiv double %230, %233
  %235 = fptrunc double %234 to float
  store float %235, ptr %228, align 4, !tbaa !95
  %236 = getelementptr inbounds float, ptr %228, i64 1
  %237 = getelementptr inbounds float, ptr %227, i64 1
  %238 = getelementptr inbounds i64, ptr %226, i64 1
  %239 = load float, ptr %237, align 4, !tbaa !95
  %240 = fpext float %239 to double
  %241 = load i64, ptr %238, align 8, !tbaa !34
  %242 = getelementptr inbounds double, ptr %22, i64 %241
  %243 = load double, ptr %242, align 8, !tbaa !30
  %244 = fdiv double %240, %243
  %245 = fptrunc double %244 to float
  store float %245, ptr %236, align 4, !tbaa !95
  %246 = add nuw i32 %225, 2
  %247 = getelementptr inbounds float, ptr %228, i64 2
  %248 = getelementptr inbounds float, ptr %227, i64 2
  %249 = getelementptr inbounds i64, ptr %226, i64 2
  %250 = icmp eq i32 %246, %6
  br i1 %250, label %251, label %224, !llvm.loop !207

251:                                              ; preds = %99, %224, %189, %195, %76, %165, %19, %105
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE4SSORIfEEvRNS_6VectorIT_EEd(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, double noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %86, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = load ptr, ptr %13, align 8, !tbaa !13
  %17 = zext i32 %5 to i64
  %18 = load i64, ptr %11, align 8, !tbaa !34
  br label %33

19:                                               ; preds = %71
  %20 = add i32 %5, -1
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %22, label %86

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %24, i64 0, i32 8
  %26 = load ptr, ptr %25, align 8, !tbaa !32
  %27 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %24, i64 0, i32 9
  %28 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %30 = load ptr, ptr %28, align 8, !tbaa !13
  %31 = load ptr, ptr %29, align 8, !tbaa !106
  %32 = zext i32 %20 to i64
  br label %87

33:                                               ; preds = %7, %71
  %34 = phi i64 [ %18, %7 ], [ %38, %71 ]
  %35 = phi i64 [ 0, %7 ], [ %36, %71 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %11, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %71

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %12, align 8, !tbaa !46
  %44 = load ptr, ptr %13, align 8
  %45 = load ptr, ptr %14, align 8
  br label %46

46:                                               ; preds = %41, %66
  %47 = phi i64 [ %39, %41 ], [ %69, %66 ]
  %48 = phi i32 [ %42, %41 ], [ %68, %66 ]
  %49 = phi float [ 0.000000e+00, %41 ], [ %67, %66 ]
  %50 = getelementptr inbounds i32, ptr %43, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ne i32 %51, -1
  %53 = zext i32 %48 to i64
  %54 = icmp ugt i64 %35, %53
  %55 = and i1 %54, %52
  br i1 %55, label %56, label %66

56:                                               ; preds = %46
  %57 = getelementptr inbounds double, ptr %44, i64 %47
  %58 = load double, ptr %57, align 8, !tbaa !30
  %59 = zext i32 %51 to i64
  %60 = getelementptr inbounds float, ptr %45, i64 %59
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to double
  %63 = fpext float %49 to double
  %64 = tail call double @llvm.fmuladd.f64(double %58, double %62, double %63)
  %65 = fptrunc double %64 to float
  br label %66

66:                                               ; preds = %56, %46
  %67 = phi float [ %65, %56 ], [ %49, %46 ]
  %68 = add i32 %48, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %38, %69
  br i1 %70, label %46, label %71

71:                                               ; preds = %66, %33
  %72 = phi float [ 0.000000e+00, %33 ], [ %67, %66 ]
  %73 = fpext float %72 to double
  %74 = getelementptr inbounds float, ptr %15, i64 %35
  %75 = load float, ptr %74, align 4, !tbaa !95
  %76 = fpext float %75 to double
  %77 = fneg double %73
  %78 = tail call double @llvm.fmuladd.f64(double %77, double %2, double %76)
  %79 = fptrunc double %78 to float
  %80 = getelementptr inbounds double, ptr %16, i64 %34
  %81 = load double, ptr %80, align 8, !tbaa !30
  %82 = fpext float %79 to double
  %83 = fdiv double %82, %81
  %84 = fptrunc double %83 to float
  store float %84, ptr %74, align 4, !tbaa !95
  %85 = icmp eq i64 %36, %17
  br i1 %85, label %19, label %33

86:                                               ; preds = %127, %3, %19
  ret void

87:                                               ; preds = %22, %127
  %88 = phi i64 [ %32, %22 ], [ %139, %127 ]
  %89 = phi i32 [ %5, %22 ], [ %141, %127 ]
  %90 = getelementptr inbounds i64, ptr %26, i64 %88
  %91 = load i64, ptr %90, align 8, !tbaa !34
  %92 = sext i32 %89 to i64
  %93 = getelementptr inbounds i64, ptr %26, i64 %92
  %94 = load i64, ptr %93, align 8, !tbaa !34
  %95 = and i64 %91, 4294967295
  %96 = icmp ugt i64 %94, %95
  br i1 %96, label %97, label %127

97:                                               ; preds = %87
  %98 = trunc i64 %91 to i32
  %99 = load ptr, ptr %27, align 8, !tbaa !46
  %100 = load ptr, ptr %28, align 8
  %101 = load ptr, ptr %29, align 8
  br label %102

102:                                              ; preds = %97, %122
  %103 = phi i64 [ %95, %97 ], [ %125, %122 ]
  %104 = phi i32 [ %98, %97 ], [ %124, %122 ]
  %105 = phi float [ 0.000000e+00, %97 ], [ %123, %122 ]
  %106 = getelementptr inbounds i32, ptr %99, i64 %103
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = icmp ne i32 %107, -1
  %109 = zext i32 %104 to i64
  %110 = icmp ult i64 %88, %109
  %111 = and i1 %110, %108
  br i1 %111, label %112, label %122

112:                                              ; preds = %102
  %113 = getelementptr inbounds double, ptr %100, i64 %103
  %114 = load double, ptr %113, align 8, !tbaa !30
  %115 = zext i32 %107 to i64
  %116 = getelementptr inbounds float, ptr %101, i64 %115
  %117 = load float, ptr %116, align 4, !tbaa !95
  %118 = fpext float %117 to double
  %119 = fpext float %105 to double
  %120 = tail call double @llvm.fmuladd.f64(double %114, double %118, double %119)
  %121 = fptrunc double %120 to float
  br label %122

122:                                              ; preds = %112, %102
  %123 = phi float [ %121, %112 ], [ %105, %102 ]
  %124 = add i32 %104, 1
  %125 = zext i32 %124 to i64
  %126 = icmp ugt i64 %94, %125
  br i1 %126, label %102, label %127

127:                                              ; preds = %122, %87
  %128 = phi float [ 0.000000e+00, %87 ], [ %123, %122 ]
  %129 = fpext float %128 to double
  %130 = fmul double %129, %2
  %131 = getelementptr inbounds double, ptr %30, i64 %91
  %132 = load double, ptr %131, align 8, !tbaa !30
  %133 = fdiv double %130, %132
  %134 = getelementptr inbounds float, ptr %31, i64 %88
  %135 = load float, ptr %134, align 4, !tbaa !95
  %136 = fpext float %135 to double
  %137 = fsub double %136, %133
  %138 = fptrunc double %137 to float
  store float %138, ptr %134, align 4, !tbaa !95
  %139 = add nsw i64 %88, -1
  %140 = icmp sgt i64 %88, 0
  %141 = trunc i64 %88 to i32
  br i1 %140, label %87, label %86
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE4PSORIfEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, double noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !106
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !13
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %42, %5
  ret void

23:                                               ; preds = %11, %42
  %24 = phi i64 [ 0, %11 ], [ %50, %42 ]
  %25 = getelementptr inbounds i32, ptr %12, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !47
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds float, ptr %14, i64 %27
  %29 = load float, ptr %28, align 4, !tbaa !95
  %30 = getelementptr inbounds i64, ptr %16, i64 %27
  %31 = load i64, ptr %30, align 8, !tbaa !34
  %32 = add i32 %26, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i64, ptr %16, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %31, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %23
  %39 = trunc i64 %31 to i32
  %40 = load ptr, ptr %17, align 8, !tbaa !46
  %41 = load ptr, ptr %19, align 8
  br label %52

42:                                               ; preds = %73, %23
  %43 = phi float [ %29, %23 ], [ %74, %73 ]
  %44 = fpext float %43 to double
  %45 = fmul double %44, %4
  %46 = getelementptr inbounds double, ptr %20, i64 %31
  %47 = load double, ptr %46, align 8, !tbaa !30
  %48 = fdiv double %45, %47
  %49 = fptrunc double %48 to float
  store float %49, ptr %28, align 4, !tbaa !95
  %50 = add nuw nsw i64 %24, 1
  %51 = icmp eq i64 %50, %21
  br i1 %51, label %22, label %23

52:                                               ; preds = %38, %73
  %53 = phi i64 [ %36, %38 ], [ %76, %73 ]
  %54 = phi i32 [ %39, %38 ], [ %75, %73 ]
  %55 = phi float [ %29, %38 ], [ %74, %73 ]
  %56 = getelementptr inbounds i32, ptr %40, i64 %53
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %18, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %24, %61
  br i1 %62, label %63, label %73

63:                                               ; preds = %52
  %64 = getelementptr inbounds double, ptr %41, i64 %53
  %65 = load double, ptr %64, align 8, !tbaa !30
  %66 = getelementptr inbounds float, ptr %14, i64 %58
  %67 = load float, ptr %66, align 4, !tbaa !95
  %68 = fpext float %67 to double
  %69 = fpext float %55 to double
  %70 = fneg double %65
  %71 = tail call double @llvm.fmuladd.f64(double %70, double %68, double %69)
  %72 = fptrunc double %71 to float
  br label %73

73:                                               ; preds = %63, %52
  %74 = phi float [ %72, %63 ], [ %55, %52 ]
  %75 = add i32 %54, 1
  %76 = zext i32 %75 to i64
  %77 = icmp ugt i64 %35, %76
  br i1 %77, label %52, label %42
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5TPSORIfEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, double noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !106
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !13
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %45, %5
  ret void

23:                                               ; preds = %11, %45
  %24 = phi i64 [ %21, %11 ], [ %25, %45 ]
  %25 = add nsw i64 %24, -1
  %26 = trunc i64 %25 to i32
  %27 = and i64 %25, 4294967295
  %28 = getelementptr inbounds i32, ptr %12, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !47
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds float, ptr %14, i64 %30
  %32 = load float, ptr %31, align 4, !tbaa !95
  %33 = getelementptr inbounds i64, ptr %16, i64 %30
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = add i32 %29, 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i64, ptr %16, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %23
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %17, align 8, !tbaa !46
  %44 = load ptr, ptr %19, align 8
  br label %54

45:                                               ; preds = %74, %23
  %46 = phi float [ %32, %23 ], [ %75, %74 ]
  %47 = fpext float %46 to double
  %48 = fmul double %47, %4
  %49 = getelementptr inbounds double, ptr %20, i64 %34
  %50 = load double, ptr %49, align 8, !tbaa !30
  %51 = fdiv double %48, %50
  %52 = fptrunc double %51 to float
  store float %52, ptr %31, align 4, !tbaa !95
  %53 = icmp eq i32 %26, 0
  br i1 %53, label %22, label %23

54:                                               ; preds = %41, %74
  %55 = phi i64 [ %39, %41 ], [ %77, %74 ]
  %56 = phi i32 [ %42, %41 ], [ %76, %74 ]
  %57 = phi float [ %32, %41 ], [ %75, %74 ]
  %58 = getelementptr inbounds i32, ptr %43, i64 %55
  %59 = load i32, ptr %58, align 4, !tbaa !47
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i32, ptr %18, i64 %60
  %62 = load i32, ptr %61, align 4, !tbaa !47
  %63 = icmp ugt i32 %62, %26
  br i1 %63, label %64, label %74

64:                                               ; preds = %54
  %65 = getelementptr inbounds double, ptr %44, i64 %55
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = getelementptr inbounds float, ptr %14, i64 %60
  %68 = load float, ptr %67, align 4, !tbaa !95
  %69 = fpext float %68 to double
  %70 = fpext float %57 to double
  %71 = fneg double %66
  %72 = tail call double @llvm.fmuladd.f64(double %71, double %69, double %70)
  %73 = fptrunc double %72 to float
  br label %74

74:                                               ; preds = %64, %54
  %75 = phi float [ %73, %64 ], [ %57, %54 ]
  %76 = add i32 %56, 1
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %38, %77
  br i1 %78, label %54, label %45
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE8SOR_stepIfEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !106
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %8 to i64
  %21 = load i64, ptr %14, align 8, !tbaa !34
  br label %23

22:                                               ; preds = %36, %4
  ret void

23:                                               ; preds = %10, %36
  %24 = phi i64 [ %21, %10 ], [ %30, %36 ]
  %25 = phi i64 [ 0, %10 ], [ %28, %36 ]
  %26 = getelementptr inbounds float, ptr %12, i64 %25
  %27 = load float, ptr %26, align 4, !tbaa !95
  %28 = add nuw nsw i64 %25, 1
  %29 = getelementptr inbounds i64, ptr %14, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %24, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = trunc i64 %24 to i32
  %35 = load ptr, ptr %17, align 8, !tbaa !46
  br label %49

36:                                               ; preds = %49, %23
  %37 = phi float [ %27, %23 ], [ %64, %49 ]
  %38 = fpext float %37 to double
  %39 = fmul double %38, %3
  %40 = getelementptr inbounds double, ptr %16, i64 %24
  %41 = load double, ptr %40, align 8, !tbaa !30
  %42 = fdiv double %39, %41
  %43 = getelementptr inbounds float, ptr %19, i64 %25
  %44 = load float, ptr %43, align 4, !tbaa !95
  %45 = fpext float %44 to double
  %46 = fadd double %42, %45
  %47 = fptrunc double %46 to float
  store float %47, ptr %43, align 4, !tbaa !95
  %48 = icmp eq i64 %28, %20
  br i1 %48, label %22, label %23

49:                                               ; preds = %33, %49
  %50 = phi i64 [ %31, %33 ], [ %66, %49 ]
  %51 = phi i32 [ %34, %33 ], [ %65, %49 ]
  %52 = phi float [ %27, %33 ], [ %64, %49 ]
  %53 = getelementptr inbounds double, ptr %16, i64 %50
  %54 = load double, ptr %53, align 8, !tbaa !30
  %55 = getelementptr inbounds i32, ptr %35, i64 %50
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds float, ptr %19, i64 %57
  %59 = load float, ptr %58, align 4, !tbaa !95
  %60 = fpext float %59 to double
  %61 = fpext float %52 to double
  %62 = fneg double %54
  %63 = tail call double @llvm.fmuladd.f64(double %62, double %60, double %61)
  %64 = fptrunc double %63 to float
  %65 = add i32 %51, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %30, %66
  br i1 %67, label %49, label %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9TSOR_stepIfEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = add i32 %8, -1
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %22

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !106
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %19 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %38, %4
  ret void

23:                                               ; preds = %11, %38
  %24 = phi i64 [ %21, %11 ], [ %50, %38 ]
  %25 = phi i32 [ %8, %11 ], [ %52, %38 ]
  %26 = getelementptr inbounds float, ptr %13, i64 %24
  %27 = load float, ptr %26, align 4, !tbaa !95
  %28 = getelementptr inbounds i64, ptr %15, i64 %24
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = sext i32 %25 to i64
  %31 = getelementptr inbounds i64, ptr %15, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = and i64 %29, 4294967295
  %34 = icmp ugt i64 %32, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %23
  %36 = trunc i64 %29 to i32
  %37 = load ptr, ptr %18, align 8, !tbaa !46
  br label %53

38:                                               ; preds = %53, %23
  %39 = phi float [ %27, %23 ], [ %68, %53 ]
  %40 = fpext float %39 to double
  %41 = fmul double %40, %3
  %42 = getelementptr inbounds double, ptr %17, i64 %29
  %43 = load double, ptr %42, align 8, !tbaa !30
  %44 = fdiv double %41, %43
  %45 = getelementptr inbounds float, ptr %20, i64 %24
  %46 = load float, ptr %45, align 4, !tbaa !95
  %47 = fpext float %46 to double
  %48 = fadd double %44, %47
  %49 = fptrunc double %48 to float
  store float %49, ptr %45, align 4, !tbaa !95
  %50 = add nsw i64 %24, -1
  %51 = icmp sgt i64 %24, 0
  %52 = trunc i64 %24 to i32
  br i1 %51, label %23, label %22

53:                                               ; preds = %35, %53
  %54 = phi i64 [ %33, %35 ], [ %70, %53 ]
  %55 = phi i32 [ %36, %35 ], [ %69, %53 ]
  %56 = phi float [ %27, %35 ], [ %68, %53 ]
  %57 = getelementptr inbounds double, ptr %17, i64 %54
  %58 = load double, ptr %57, align 8, !tbaa !30
  %59 = getelementptr inbounds i32, ptr %37, i64 %54
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds float, ptr %20, i64 %61
  %63 = load float, ptr %62, align 4, !tbaa !95
  %64 = fpext float %63 to double
  %65 = fpext float %56 to double
  %66 = fneg double %58
  %67 = tail call double @llvm.fmuladd.f64(double %66, double %64, double %65)
  %68 = fptrunc double %67 to float
  %69 = add i32 %55, 1
  %70 = zext i32 %69 to i64
  %71 = icmp ugt i64 %32, %70
  br i1 %71, label %53, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9SSOR_stepIfEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %123, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !106
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %8 to i64
  %21 = load i64, ptr %14, align 8, !tbaa !34
  br label %22

22:                                               ; preds = %35, %10
  %23 = phi i64 [ %21, %10 ], [ %29, %35 ]
  %24 = phi i64 [ 0, %10 ], [ %27, %35 ]
  %25 = getelementptr inbounds float, ptr %12, i64 %24
  %26 = load float, ptr %25, align 4, !tbaa !95
  %27 = add nuw nsw i64 %24, 1
  %28 = getelementptr inbounds i64, ptr %14, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %23, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %22
  %33 = trunc i64 %23 to i32
  %34 = load ptr, ptr %17, align 8, !tbaa !46
  br label %48

35:                                               ; preds = %48, %22
  %36 = phi float [ %26, %22 ], [ %63, %48 ]
  %37 = fpext float %36 to double
  %38 = fmul double %37, %3
  %39 = getelementptr inbounds double, ptr %16, i64 %23
  %40 = load double, ptr %39, align 8, !tbaa !30
  %41 = fdiv double %38, %40
  %42 = getelementptr inbounds float, ptr %19, i64 %24
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fpext float %43 to double
  %45 = fadd double %41, %44
  %46 = fptrunc double %45 to float
  store float %46, ptr %42, align 4, !tbaa !95
  %47 = icmp eq i64 %27, %20
  br i1 %47, label %67, label %22

48:                                               ; preds = %48, %32
  %49 = phi i64 [ %30, %32 ], [ %65, %48 ]
  %50 = phi i32 [ %33, %32 ], [ %64, %48 ]
  %51 = phi float [ %26, %32 ], [ %63, %48 ]
  %52 = getelementptr inbounds double, ptr %16, i64 %49
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = getelementptr inbounds i32, ptr %34, i64 %49
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds float, ptr %19, i64 %56
  %58 = load float, ptr %57, align 4, !tbaa !95
  %59 = fpext float %58 to double
  %60 = fpext float %51 to double
  %61 = fneg double %53
  %62 = tail call double @llvm.fmuladd.f64(double %61, double %59, double %60)
  %63 = fptrunc double %62 to float
  %64 = add i32 %50, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %29, %65
  br i1 %66, label %48, label %35

67:                                               ; preds = %35
  %68 = add i32 %8, -1
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %70, label %123

70:                                               ; preds = %67
  %71 = load ptr, ptr %15, align 8
  %72 = load ptr, ptr %18, align 8
  %73 = zext i32 %68 to i64
  br label %74

74:                                               ; preds = %89, %70
  %75 = phi i64 [ %73, %70 ], [ %101, %89 ]
  %76 = phi i32 [ %8, %70 ], [ %103, %89 ]
  %77 = getelementptr inbounds float, ptr %12, i64 %75
  %78 = load float, ptr %77, align 4, !tbaa !95
  %79 = getelementptr inbounds i64, ptr %14, i64 %75
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = sext i32 %76 to i64
  %82 = getelementptr inbounds i64, ptr %14, i64 %81
  %83 = load i64, ptr %82, align 8, !tbaa !34
  %84 = and i64 %80, 4294967295
  %85 = icmp ugt i64 %83, %84
  br i1 %85, label %86, label %89

86:                                               ; preds = %74
  %87 = trunc i64 %80 to i32
  %88 = load ptr, ptr %17, align 8, !tbaa !46
  br label %104

89:                                               ; preds = %104, %74
  %90 = phi float [ %78, %74 ], [ %119, %104 ]
  %91 = fpext float %90 to double
  %92 = fmul double %91, %3
  %93 = getelementptr inbounds double, ptr %71, i64 %80
  %94 = load double, ptr %93, align 8, !tbaa !30
  %95 = fdiv double %92, %94
  %96 = getelementptr inbounds float, ptr %72, i64 %75
  %97 = load float, ptr %96, align 4, !tbaa !95
  %98 = fpext float %97 to double
  %99 = fadd double %95, %98
  %100 = fptrunc double %99 to float
  store float %100, ptr %96, align 4, !tbaa !95
  %101 = add nsw i64 %75, -1
  %102 = icmp sgt i64 %75, 0
  %103 = trunc i64 %75 to i32
  br i1 %102, label %74, label %123

104:                                              ; preds = %104, %86
  %105 = phi i64 [ %84, %86 ], [ %121, %104 ]
  %106 = phi i32 [ %87, %86 ], [ %120, %104 ]
  %107 = phi float [ %78, %86 ], [ %119, %104 ]
  %108 = getelementptr inbounds double, ptr %71, i64 %105
  %109 = load double, ptr %108, align 8, !tbaa !30
  %110 = getelementptr inbounds i32, ptr %88, i64 %105
  %111 = load i32, ptr %110, align 4, !tbaa !47
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds float, ptr %72, i64 %112
  %114 = load float, ptr %113, align 4, !tbaa !95
  %115 = fpext float %114 to double
  %116 = fpext float %107 to double
  %117 = fneg double %109
  %118 = tail call double @llvm.fmuladd.f64(double %117, double %115, double %116)
  %119 = fptrunc double %118 to float
  %120 = add i32 %106, 1
  %121 = zext i32 %120 to i64
  %122 = icmp ugt i64 %83, %121
  br i1 %122, label %104, label %89

123:                                              ; preds = %89, %4, %67
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIdE18matrix_norm_squareIeEET_RKNS_6VectorIS3_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !13
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 9
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = load i64, ptr %10, align 8, !tbaa !34
  %16 = getelementptr inbounds i32, ptr %14, i64 %15
  %17 = getelementptr inbounds double, ptr %8, i64 %15
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %6 to i64
  br label %23

21:                                               ; preds = %47, %2
  %22 = phi x86_fp80 [ 0xK00000000000000000000, %2 ], [ %53, %47 ]
  ret x86_fp80 %22

23:                                               ; preds = %12, %47
  %24 = phi i64 [ 0, %12 ], [ %28, %47 ]
  %25 = phi x86_fp80 [ 0xK00000000000000000000, %12 ], [ %53, %47 ]
  %26 = phi ptr [ %16, %12 ], [ %50, %47 ]
  %27 = phi ptr [ %17, %12 ], [ %49, %47 ]
  %28 = add nuw nsw i64 %24, 1
  %29 = getelementptr inbounds i64, ptr %10, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = getelementptr inbounds double, ptr %8, i64 %30
  %32 = icmp eq ptr %27, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %23, %33
  %34 = phi ptr [ %40, %33 ], [ %26, %23 ]
  %35 = phi ptr [ %37, %33 ], [ %27, %23 ]
  %36 = phi x86_fp80 [ %45, %33 ], [ 0xK00000000000000000000, %23 ]
  %37 = getelementptr inbounds double, ptr %35, i64 1
  %38 = load double, ptr %35, align 8, !tbaa !30
  %39 = fpext double %38 to x86_fp80
  %40 = getelementptr inbounds i32, ptr %34, i64 1
  %41 = load i32, ptr %34, align 4, !tbaa !47
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds x86_fp80, ptr %19, i64 %42
  %44 = load x86_fp80, ptr %43, align 16, !tbaa !128
  %45 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %39, x86_fp80 %44, x86_fp80 %36)
  %46 = icmp eq ptr %37, %31
  br i1 %46, label %47, label %33

47:                                               ; preds = %33, %23
  %48 = phi x86_fp80 [ 0xK00000000000000000000, %23 ], [ %45, %33 ]
  %49 = phi ptr [ %27, %23 ], [ %31, %33 ]
  %50 = phi ptr [ %26, %23 ], [ %40, %33 ]
  %51 = getelementptr inbounds x86_fp80, ptr %19, i64 %24
  %52 = load x86_fp80, ptr %51, align 16, !tbaa !128
  %53 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %52, x86_fp80 %48, x86_fp80 %25)
  %54 = icmp eq i64 %28, %20
  br i1 %54, label %21, label %23
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIdE21matrix_scalar_productIeEET_RKNS_6VectorIS3_EES7_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = load i64, ptr %11, align 8, !tbaa !34
  %17 = getelementptr inbounds i32, ptr %15, i64 %16
  %18 = getelementptr inbounds double, ptr %9, i64 %16
  %19 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !135
  %23 = zext i32 %7 to i64
  br label %26

24:                                               ; preds = %50, %3
  %25 = phi x86_fp80 [ 0xK00000000000000000000, %3 ], [ %56, %50 ]
  ret x86_fp80 %25

26:                                               ; preds = %13, %50
  %27 = phi i64 [ 0, %13 ], [ %31, %50 ]
  %28 = phi x86_fp80 [ 0xK00000000000000000000, %13 ], [ %56, %50 ]
  %29 = phi ptr [ %17, %13 ], [ %53, %50 ]
  %30 = phi ptr [ %18, %13 ], [ %52, %50 ]
  %31 = add nuw nsw i64 %27, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = getelementptr inbounds double, ptr %9, i64 %33
  %35 = icmp eq ptr %30, %34
  br i1 %35, label %50, label %36

36:                                               ; preds = %26, %36
  %37 = phi ptr [ %43, %36 ], [ %29, %26 ]
  %38 = phi ptr [ %40, %36 ], [ %30, %26 ]
  %39 = phi x86_fp80 [ %48, %36 ], [ 0xK00000000000000000000, %26 ]
  %40 = getelementptr inbounds double, ptr %38, i64 1
  %41 = load double, ptr %38, align 8, !tbaa !30
  %42 = fpext double %41 to x86_fp80
  %43 = getelementptr inbounds i32, ptr %37, i64 1
  %44 = load i32, ptr %37, align 4, !tbaa !47
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds x86_fp80, ptr %20, i64 %45
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !128
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %42, x86_fp80 %47, x86_fp80 %39)
  %49 = icmp eq ptr %40, %34
  br i1 %49, label %50, label %36

50:                                               ; preds = %36, %26
  %51 = phi x86_fp80 [ 0xK00000000000000000000, %26 ], [ %48, %36 ]
  %52 = phi ptr [ %30, %26 ], [ %34, %36 ]
  %53 = phi ptr [ %29, %26 ], [ %43, %36 ]
  %54 = getelementptr inbounds x86_fp80, ptr %22, i64 %27
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  %56 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %55, x86_fp80 %51, x86_fp80 %28)
  %57 = icmp eq i64 %31, %23
  br i1 %57, label %24, label %26
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIdE8residualIeEET_RNS_6VectorIS3_EERKS5_S8_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.27", ptr %3, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !135
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !135
  %22 = zext i32 %8 to i64
  %23 = load i64, ptr %14, align 8, !tbaa !34
  br label %27

24:                                               ; preds = %41, %4
  %25 = phi x86_fp80 [ 0xK00000000000000000000, %4 ], [ %44, %41 ]
  %26 = tail call x86_fp80 @sqrtl(x86_fp80 noundef %25) #17
  ret x86_fp80 %26

27:                                               ; preds = %10, %41
  %28 = phi i64 [ %23, %10 ], [ %35, %41 ]
  %29 = phi i64 [ 0, %10 ], [ %33, %41 ]
  %30 = phi x86_fp80 [ 0xK00000000000000000000, %10 ], [ %44, %41 ]
  %31 = getelementptr inbounds x86_fp80, ptr %12, i64 %29
  %32 = load x86_fp80, ptr %31, align 16, !tbaa !128
  %33 = add nuw nsw i64 %29, 1
  %34 = getelementptr inbounds i64, ptr %14, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %28, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %27
  %39 = trunc i64 %28 to i32
  %40 = load ptr, ptr %15, align 8, !tbaa !46
  br label %46

41:                                               ; preds = %46, %27
  %42 = phi x86_fp80 [ %32, %27 ], [ %59, %46 ]
  %43 = getelementptr inbounds x86_fp80, ptr %21, i64 %29
  store x86_fp80 %42, ptr %43, align 16, !tbaa !128
  %44 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %42, x86_fp80 %42, x86_fp80 %30)
  %45 = icmp eq i64 %33, %22
  br i1 %45, label %24, label %27

46:                                               ; preds = %38, %46
  %47 = phi i64 [ %36, %38 ], [ %61, %46 ]
  %48 = phi i32 [ %39, %38 ], [ %60, %46 ]
  %49 = phi x86_fp80 [ %32, %38 ], [ %59, %46 ]
  %50 = getelementptr inbounds i32, ptr %40, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = getelementptr inbounds double, ptr %17, i64 %47
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = fpext double %53 to x86_fp80
  %55 = zext i32 %51 to i64
  %56 = getelementptr inbounds x86_fp80, ptr %19, i64 %55
  %57 = load x86_fp80, ptr %56, align 16, !tbaa !128
  %58 = fneg x86_fp80 %54
  %59 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %58, x86_fp80 %57, x86_fp80 %49)
  %60 = add i32 %48, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %35, %61
  br i1 %62, label %46, label %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE17precondition_SSORIeEEvRNS_6VectorIT_EERKS5_dRKSt6vectorIjSaIjEE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !138
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !135
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !195
  %16 = load ptr, ptr %4, align 8, !tbaa !197
  %17 = icmp eq ptr %15, %16
  %18 = icmp eq i32 %7, 0
  br i1 %17, label %27, label %19

19:                                               ; preds = %5
  br i1 %18, label %612, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !135
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %26 = zext i32 %7 to i64
  br label %47

27:                                               ; preds = %5
  br i1 %18, label %612, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !135
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = ptrtoint ptr %32 to i64
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %7 to i64
  %37 = load i64, ptr %11, align 8, !tbaa !34
  br label %259

38:                                               ; preds = %84
  br i1 %18, label %612, label %39

39:                                               ; preds = %38
  %40 = fsub double 2.000000e+00, %3
  %41 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !13
  %43 = and i32 %7, 1
  %44 = icmp eq i32 %7, 1
  br i1 %44, label %126, label %45

45:                                               ; preds = %39
  %46 = and i32 %7, -2
  br label %148

47:                                               ; preds = %20, %84
  %48 = phi i64 [ 0, %20 ], [ %93, %84 ]
  %49 = phi ptr [ %11, %20 ], [ %95, %84 ]
  %50 = phi ptr [ %13, %20 ], [ %94, %84 ]
  %51 = getelementptr inbounds x86_fp80, ptr %22, i64 %48
  %52 = load x86_fp80, ptr %51, align 16, !tbaa !128
  store x86_fp80 %52, ptr %50, align 16, !tbaa !128
  %53 = getelementptr inbounds i32, ptr %16, i64 %48
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = load i64, ptr %49, align 8, !tbaa !34
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, 1
  %58 = icmp ult i32 %57, %54
  br i1 %58, label %59, label %84

59:                                               ; preds = %47
  %60 = load ptr, ptr %25, align 8, !tbaa !46
  %61 = zext i32 %57 to i64
  %62 = xor i32 %56, -1
  %63 = add i32 %54, %62
  %64 = add i32 %54, -2
  %65 = and i32 %63, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %79, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds double, ptr %24, i64 %61
  %69 = load double, ptr %68, align 8, !tbaa !30
  %70 = fpext double %69 to x86_fp80
  %71 = getelementptr inbounds i32, ptr %60, i64 %61
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds x86_fp80, ptr %13, i64 %73
  %75 = load x86_fp80, ptr %74, align 16, !tbaa !128
  %76 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %75, x86_fp80 0xK00000000000000000000)
  %77 = fptrunc x86_fp80 %76 to double
  %78 = add nuw nsw i64 %61, 1
  br label %79

79:                                               ; preds = %67, %59
  %80 = phi double [ undef, %59 ], [ %77, %67 ]
  %81 = phi i64 [ %61, %59 ], [ %78, %67 ]
  %82 = phi double [ 0.000000e+00, %59 ], [ %77, %67 ]
  %83 = icmp eq i32 %64, %56
  br i1 %83, label %84, label %97

84:                                               ; preds = %79, %97, %47
  %85 = phi double [ 0.000000e+00, %47 ], [ %80, %79 ], [ %122, %97 ]
  %86 = fmul double %85, %3
  %87 = fpext double %86 to x86_fp80
  %88 = fsub x86_fp80 %52, %87
  %89 = getelementptr inbounds double, ptr %24, i64 %55
  %90 = load double, ptr %89, align 8, !tbaa !30
  %91 = fpext double %90 to x86_fp80
  %92 = fdiv x86_fp80 %88, %91
  store x86_fp80 %92, ptr %50, align 16, !tbaa !128
  %93 = add nuw nsw i64 %48, 1
  %94 = getelementptr inbounds x86_fp80, ptr %50, i64 1
  %95 = getelementptr inbounds i64, ptr %49, i64 1
  %96 = icmp eq i64 %93, %26
  br i1 %96, label %38, label %47

97:                                               ; preds = %79, %97
  %98 = phi i64 [ %123, %97 ], [ %81, %79 ]
  %99 = phi double [ %122, %97 ], [ %82, %79 ]
  %100 = getelementptr inbounds double, ptr %24, i64 %98
  %101 = load double, ptr %100, align 8, !tbaa !30
  %102 = fpext double %101 to x86_fp80
  %103 = getelementptr inbounds i32, ptr %60, i64 %98
  %104 = load i32, ptr %103, align 4, !tbaa !47
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds x86_fp80, ptr %13, i64 %105
  %107 = load x86_fp80, ptr %106, align 16, !tbaa !128
  %108 = fpext double %99 to x86_fp80
  %109 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %102, x86_fp80 %107, x86_fp80 %108)
  %110 = fptrunc x86_fp80 %109 to double
  %111 = add nuw nsw i64 %98, 1
  %112 = getelementptr inbounds double, ptr %24, i64 %111
  %113 = load double, ptr %112, align 8, !tbaa !30
  %114 = fpext double %113 to x86_fp80
  %115 = getelementptr inbounds i32, ptr %60, i64 %111
  %116 = load i32, ptr %115, align 4, !tbaa !47
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds x86_fp80, ptr %13, i64 %117
  %119 = load x86_fp80, ptr %118, align 16, !tbaa !128
  %120 = fpext double %110 to x86_fp80
  %121 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %114, x86_fp80 %119, x86_fp80 %120)
  %122 = fptrunc x86_fp80 %121 to double
  %123 = add nuw nsw i64 %98, 2
  %124 = trunc i64 %123 to i32
  %125 = icmp eq i32 %54, %124
  br i1 %125, label %84, label %97

126:                                              ; preds = %148, %39
  %127 = phi ptr [ %11, %39 ], [ %168, %148 ]
  %128 = phi ptr [ %13, %39 ], [ %169, %148 ]
  %129 = icmp eq i32 %43, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %126
  %131 = load i64, ptr %127, align 8, !tbaa !34
  %132 = getelementptr inbounds double, ptr %42, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !30
  %134 = fmul double %40, %133
  %135 = fpext double %134 to x86_fp80
  %136 = load x86_fp80, ptr %128, align 16, !tbaa !128
  %137 = fmul x86_fp80 %136, %135
  store x86_fp80 %137, ptr %128, align 16, !tbaa !128
  br label %138

138:                                              ; preds = %126, %130
  %139 = add i32 %7, -1
  %140 = icmp sgt i32 %139, -1
  br i1 %140, label %141, label %612

141:                                              ; preds = %138
  %142 = zext i32 %139 to i64
  %143 = getelementptr inbounds x86_fp80, ptr %13, i64 %142
  %144 = getelementptr inbounds i64, ptr %11, i64 %142
  %145 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %146 = load ptr, ptr %145, align 8
  %147 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  br label %172

148:                                              ; preds = %148, %45
  %149 = phi ptr [ %11, %45 ], [ %168, %148 ]
  %150 = phi ptr [ %13, %45 ], [ %169, %148 ]
  %151 = phi i32 [ 0, %45 ], [ %170, %148 ]
  %152 = load i64, ptr %149, align 8, !tbaa !34
  %153 = getelementptr inbounds double, ptr %42, i64 %152
  %154 = load double, ptr %153, align 8, !tbaa !30
  %155 = fmul double %40, %154
  %156 = fpext double %155 to x86_fp80
  %157 = load x86_fp80, ptr %150, align 16, !tbaa !128
  %158 = fmul x86_fp80 %157, %156
  store x86_fp80 %158, ptr %150, align 16, !tbaa !128
  %159 = getelementptr inbounds i64, ptr %149, i64 1
  %160 = getelementptr inbounds x86_fp80, ptr %150, i64 1
  %161 = load i64, ptr %159, align 8, !tbaa !34
  %162 = getelementptr inbounds double, ptr %42, i64 %161
  %163 = load double, ptr %162, align 8, !tbaa !30
  %164 = fmul double %40, %163
  %165 = fpext double %164 to x86_fp80
  %166 = load x86_fp80, ptr %160, align 16, !tbaa !128
  %167 = fmul x86_fp80 %166, %165
  store x86_fp80 %167, ptr %160, align 16, !tbaa !128
  %168 = getelementptr inbounds i64, ptr %149, i64 2
  %169 = getelementptr inbounds x86_fp80, ptr %150, i64 2
  %170 = add i32 %151, 2
  %171 = icmp eq i32 %170, %46
  br i1 %171, label %126, label %148

172:                                              ; preds = %141, %207
  %173 = phi i64 [ %142, %141 ], [ %218, %207 ]
  %174 = phi ptr [ %144, %141 ], [ %219, %207 ]
  %175 = phi ptr [ %143, %141 ], [ %220, %207 ]
  %176 = getelementptr inbounds i64, ptr %174, i64 1
  %177 = load i64, ptr %176, align 8, !tbaa !34
  %178 = trunc i64 %177 to i32
  %179 = getelementptr inbounds i32, ptr %16, i64 %173
  %180 = load i32, ptr %179, align 4, !tbaa !47
  %181 = icmp ult i32 %180, %178
  br i1 %181, label %182, label %207

182:                                              ; preds = %172
  %183 = load ptr, ptr %147, align 8, !tbaa !46
  %184 = zext i32 %180 to i64
  %185 = and i64 %177, 4294967295
  %186 = sub i64 %177, %184
  %187 = add nuw nsw i64 %184, 1
  %188 = and i64 %186, 1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %202, label %190

190:                                              ; preds = %182
  %191 = getelementptr inbounds double, ptr %146, i64 %184
  %192 = load double, ptr %191, align 8, !tbaa !30
  %193 = fpext double %192 to x86_fp80
  %194 = getelementptr inbounds i32, ptr %183, i64 %184
  %195 = load i32, ptr %194, align 4, !tbaa !47
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds x86_fp80, ptr %13, i64 %196
  %198 = load x86_fp80, ptr %197, align 16, !tbaa !128
  %199 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %193, x86_fp80 %198, x86_fp80 0xK00000000000000000000)
  %200 = fptrunc x86_fp80 %199 to double
  %201 = add nuw nsw i64 %184, 1
  br label %202

202:                                              ; preds = %190, %182
  %203 = phi double [ undef, %182 ], [ %200, %190 ]
  %204 = phi i64 [ %184, %182 ], [ %201, %190 ]
  %205 = phi double [ 0.000000e+00, %182 ], [ %200, %190 ]
  %206 = icmp eq i64 %185, %187
  br i1 %206, label %207, label %222

207:                                              ; preds = %202, %222, %172
  %208 = phi double [ 0.000000e+00, %172 ], [ %203, %202 ], [ %247, %222 ]
  %209 = fmul double %208, %3
  %210 = fpext double %209 to x86_fp80
  %211 = load x86_fp80, ptr %175, align 16, !tbaa !128
  %212 = fsub x86_fp80 %211, %210
  %213 = load i64, ptr %174, align 8, !tbaa !34
  %214 = getelementptr inbounds double, ptr %146, i64 %213
  %215 = load double, ptr %214, align 8, !tbaa !30
  %216 = fpext double %215 to x86_fp80
  %217 = fdiv x86_fp80 %212, %216
  store x86_fp80 %217, ptr %175, align 16, !tbaa !128
  %218 = add nsw i64 %173, -1
  %219 = getelementptr inbounds i64, ptr %174, i64 -1
  %220 = getelementptr inbounds x86_fp80, ptr %175, i64 -1
  %221 = icmp sgt i64 %173, 0
  br i1 %221, label %172, label %612

222:                                              ; preds = %202, %222
  %223 = phi i64 [ %248, %222 ], [ %204, %202 ]
  %224 = phi double [ %247, %222 ], [ %205, %202 ]
  %225 = getelementptr inbounds double, ptr %146, i64 %223
  %226 = load double, ptr %225, align 8, !tbaa !30
  %227 = fpext double %226 to x86_fp80
  %228 = getelementptr inbounds i32, ptr %183, i64 %223
  %229 = load i32, ptr %228, align 4, !tbaa !47
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds x86_fp80, ptr %13, i64 %230
  %232 = load x86_fp80, ptr %231, align 16, !tbaa !128
  %233 = fpext double %224 to x86_fp80
  %234 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %227, x86_fp80 %232, x86_fp80 %233)
  %235 = fptrunc x86_fp80 %234 to double
  %236 = add nuw nsw i64 %223, 1
  %237 = getelementptr inbounds double, ptr %146, i64 %236
  %238 = load double, ptr %237, align 8, !tbaa !30
  %239 = fpext double %238 to x86_fp80
  %240 = getelementptr inbounds i32, ptr %183, i64 %236
  %241 = load i32, ptr %240, align 4, !tbaa !47
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds x86_fp80, ptr %13, i64 %242
  %244 = load x86_fp80, ptr %243, align 16, !tbaa !128
  %245 = fpext double %235 to x86_fp80
  %246 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %239, x86_fp80 %244, x86_fp80 %245)
  %247 = fptrunc x86_fp80 %246 to double
  %248 = add nuw nsw i64 %223, 2
  %249 = icmp eq i64 %248, %185
  br i1 %249, label %207, label %222

250:                                              ; preds = %375
  br i1 %18, label %612, label %251

251:                                              ; preds = %250
  %252 = fsub double 2.000000e+00, %3
  %253 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %254 = load ptr, ptr %253, align 8, !tbaa !13
  %255 = and i32 %7, 1
  %256 = icmp eq i32 %7, 1
  br i1 %256, label %416, label %257

257:                                              ; preds = %251
  %258 = and i32 %7, -2
  br label %440

259:                                              ; preds = %28, %375
  %260 = phi i64 [ %37, %28 ], [ %269, %375 ]
  %261 = phi i64 [ 0, %28 ], [ %384, %375 ]
  %262 = phi ptr [ %11, %28 ], [ %268, %375 ]
  %263 = phi ptr [ %13, %28 ], [ %385, %375 ]
  %264 = getelementptr inbounds x86_fp80, ptr %30, i64 %261
  %265 = load x86_fp80, ptr %264, align 16, !tbaa !128
  store x86_fp80 %265, ptr %263, align 16, !tbaa !128
  %266 = add i64 %260, 1
  %267 = getelementptr inbounds i32, ptr %32, i64 %266
  %268 = getelementptr inbounds i64, ptr %262, i64 1
  %269 = load i64, ptr %268, align 8, !tbaa !34
  %270 = getelementptr inbounds i32, ptr %32, i64 %269
  %271 = ptrtoint ptr %270 to i64
  %272 = ptrtoint ptr %267 to i64
  %273 = sub i64 %271, %272
  %274 = lshr exact i64 %273, 2
  %275 = trunc i64 %274 to i32
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %342, label %277

277:                                              ; preds = %259, %330
  %278 = phi i32 [ %340, %330 ], [ %275, %259 ]
  %279 = phi ptr [ %341, %330 ], [ %267, %259 ]
  %280 = icmp ult i32 %278, 8
  br i1 %280, label %281, label %330

281:                                              ; preds = %277
  switch i32 %278, label %330 [
    i32 7, label %282
    i32 6, label %288
    i32 5, label %295
    i32 4, label %302
    i32 3, label %309
    i32 2, label %316
    i32 1, label %323
  ]

282:                                              ; preds = %281
  %283 = load i32, ptr %279, align 4, !tbaa !47
  %284 = zext i32 %283 to i64
  %285 = icmp ugt i64 %261, %284
  br i1 %285, label %286, label %342

286:                                              ; preds = %282
  %287 = getelementptr inbounds i32, ptr %279, i64 1
  br label %288

288:                                              ; preds = %281, %286
  %289 = phi ptr [ %287, %286 ], [ %279, %281 ]
  %290 = load i32, ptr %289, align 4, !tbaa !47
  %291 = zext i32 %290 to i64
  %292 = icmp ugt i64 %261, %291
  br i1 %292, label %293, label %342

293:                                              ; preds = %288
  %294 = getelementptr inbounds i32, ptr %289, i64 1
  br label %295

295:                                              ; preds = %281, %293
  %296 = phi ptr [ %294, %293 ], [ %279, %281 ]
  %297 = load i32, ptr %296, align 4, !tbaa !47
  %298 = zext i32 %297 to i64
  %299 = icmp ugt i64 %261, %298
  br i1 %299, label %300, label %342

300:                                              ; preds = %295
  %301 = getelementptr inbounds i32, ptr %296, i64 1
  br label %302

302:                                              ; preds = %281, %300
  %303 = phi ptr [ %301, %300 ], [ %279, %281 ]
  %304 = load i32, ptr %303, align 4, !tbaa !47
  %305 = zext i32 %304 to i64
  %306 = icmp ugt i64 %261, %305
  br i1 %306, label %307, label %342

307:                                              ; preds = %302
  %308 = getelementptr inbounds i32, ptr %303, i64 1
  br label %309

309:                                              ; preds = %281, %307
  %310 = phi ptr [ %308, %307 ], [ %279, %281 ]
  %311 = load i32, ptr %310, align 4, !tbaa !47
  %312 = zext i32 %311 to i64
  %313 = icmp ugt i64 %261, %312
  br i1 %313, label %314, label %342

314:                                              ; preds = %309
  %315 = getelementptr inbounds i32, ptr %310, i64 1
  br label %316

316:                                              ; preds = %281, %314
  %317 = phi ptr [ %315, %314 ], [ %279, %281 ]
  %318 = load i32, ptr %317, align 4, !tbaa !47
  %319 = zext i32 %318 to i64
  %320 = icmp ugt i64 %261, %319
  br i1 %320, label %321, label %342

321:                                              ; preds = %316
  %322 = getelementptr inbounds i32, ptr %317, i64 1
  br label %323

323:                                              ; preds = %281, %321
  %324 = phi ptr [ %322, %321 ], [ %279, %281 ]
  %325 = load i32, ptr %324, align 4, !tbaa !47
  %326 = zext i32 %325 to i64
  %327 = icmp ugt i64 %261, %326
  %328 = zext i1 %327 to i64
  %329 = getelementptr inbounds i32, ptr %324, i64 %328
  br label %342

330:                                              ; preds = %281, %277
  %331 = lshr i32 %278, 1
  %332 = zext i32 %331 to i64
  %333 = getelementptr inbounds i32, ptr %279, i64 %332
  %334 = load i32, ptr %333, align 4, !tbaa !47
  %335 = zext i32 %334 to i64
  %336 = icmp ugt i64 %261, %335
  %337 = getelementptr inbounds i32, ptr %333, i64 1
  %338 = xor i32 %331, -1
  %339 = add i32 %278, %338
  %340 = select i1 %336, i32 %339, i32 %331
  %341 = select i1 %336, ptr %337, ptr %279
  br label %277

342:                                              ; preds = %259, %282, %288, %295, %302, %309, %316, %323
  %343 = phi ptr [ %267, %259 ], [ %279, %282 ], [ %289, %288 ], [ %296, %295 ], [ %303, %302 ], [ %310, %309 ], [ %317, %316 ], [ %329, %323 ]
  %344 = ptrtoint ptr %343 to i64
  %345 = sub i64 %344, %33
  %346 = lshr exact i64 %345, 2
  %347 = trunc i64 %346 to i32
  %348 = trunc i64 %260 to i32
  %349 = add i32 %348, 1
  %350 = icmp ult i32 %349, %347
  br i1 %350, label %351, label %375

351:                                              ; preds = %342
  %352 = zext i32 %349 to i64
  %353 = xor i32 %348, -1
  %354 = add i32 %353, %347
  %355 = add i32 %347, -2
  %356 = and i32 %354, 1
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %370, label %358

358:                                              ; preds = %351
  %359 = getelementptr inbounds double, ptr %35, i64 %352
  %360 = load double, ptr %359, align 8, !tbaa !30
  %361 = fpext double %360 to x86_fp80
  %362 = getelementptr inbounds i32, ptr %32, i64 %352
  %363 = load i32, ptr %362, align 4, !tbaa !47
  %364 = zext i32 %363 to i64
  %365 = getelementptr inbounds x86_fp80, ptr %13, i64 %364
  %366 = load x86_fp80, ptr %365, align 16, !tbaa !128
  %367 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %361, x86_fp80 %366, x86_fp80 0xK00000000000000000000)
  %368 = fptrunc x86_fp80 %367 to double
  %369 = add nuw nsw i64 %352, 1
  br label %370

370:                                              ; preds = %358, %351
  %371 = phi double [ undef, %351 ], [ %368, %358 ]
  %372 = phi i64 [ %352, %351 ], [ %369, %358 ]
  %373 = phi double [ 0.000000e+00, %351 ], [ %368, %358 ]
  %374 = icmp eq i32 %355, %348
  br i1 %374, label %375, label %387

375:                                              ; preds = %370, %387, %342
  %376 = phi double [ 0.000000e+00, %342 ], [ %371, %370 ], [ %412, %387 ]
  %377 = fmul double %376, %3
  %378 = fpext double %377 to x86_fp80
  %379 = fsub x86_fp80 %265, %378
  %380 = getelementptr inbounds double, ptr %35, i64 %260
  %381 = load double, ptr %380, align 8, !tbaa !30
  %382 = fpext double %381 to x86_fp80
  %383 = fdiv x86_fp80 %379, %382
  store x86_fp80 %383, ptr %263, align 16, !tbaa !128
  %384 = add nuw nsw i64 %261, 1
  %385 = getelementptr inbounds x86_fp80, ptr %263, i64 1
  %386 = icmp eq i64 %384, %36
  br i1 %386, label %250, label %259

387:                                              ; preds = %370, %387
  %388 = phi i64 [ %413, %387 ], [ %372, %370 ]
  %389 = phi double [ %412, %387 ], [ %373, %370 ]
  %390 = getelementptr inbounds double, ptr %35, i64 %388
  %391 = load double, ptr %390, align 8, !tbaa !30
  %392 = fpext double %391 to x86_fp80
  %393 = getelementptr inbounds i32, ptr %32, i64 %388
  %394 = load i32, ptr %393, align 4, !tbaa !47
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds x86_fp80, ptr %13, i64 %395
  %397 = load x86_fp80, ptr %396, align 16, !tbaa !128
  %398 = fpext double %389 to x86_fp80
  %399 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %392, x86_fp80 %397, x86_fp80 %398)
  %400 = fptrunc x86_fp80 %399 to double
  %401 = add nuw nsw i64 %388, 1
  %402 = getelementptr inbounds double, ptr %35, i64 %401
  %403 = load double, ptr %402, align 8, !tbaa !30
  %404 = fpext double %403 to x86_fp80
  %405 = getelementptr inbounds i32, ptr %32, i64 %401
  %406 = load i32, ptr %405, align 4, !tbaa !47
  %407 = zext i32 %406 to i64
  %408 = getelementptr inbounds x86_fp80, ptr %13, i64 %407
  %409 = load x86_fp80, ptr %408, align 16, !tbaa !128
  %410 = fpext double %400 to x86_fp80
  %411 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %404, x86_fp80 %409, x86_fp80 %410)
  %412 = fptrunc x86_fp80 %411 to double
  %413 = add nuw nsw i64 %388, 2
  %414 = trunc i64 %413 to i32
  %415 = icmp eq i32 %414, %347
  br i1 %415, label %375, label %387

416:                                              ; preds = %440, %251
  %417 = phi ptr [ %11, %251 ], [ %460, %440 ]
  %418 = phi ptr [ %13, %251 ], [ %461, %440 ]
  %419 = icmp eq i32 %255, 0
  br i1 %419, label %428, label %420

420:                                              ; preds = %416
  %421 = load i64, ptr %417, align 8, !tbaa !34
  %422 = getelementptr inbounds double, ptr %254, i64 %421
  %423 = load double, ptr %422, align 8, !tbaa !30
  %424 = fmul double %252, %423
  %425 = fpext double %424 to x86_fp80
  %426 = load x86_fp80, ptr %418, align 16, !tbaa !128
  %427 = fmul x86_fp80 %426, %425
  store x86_fp80 %427, ptr %418, align 16, !tbaa !128
  br label %428

428:                                              ; preds = %416, %420
  %429 = add i32 %7, -1
  %430 = icmp sgt i32 %429, -1
  br i1 %430, label %431, label %612

431:                                              ; preds = %428
  %432 = zext i32 %429 to i64
  %433 = getelementptr inbounds x86_fp80, ptr %13, i64 %432
  %434 = getelementptr inbounds i64, ptr %11, i64 %432
  %435 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %436 = load ptr, ptr %435, align 8, !tbaa !46
  %437 = ptrtoint ptr %436 to i64
  %438 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %439 = load ptr, ptr %438, align 8
  br label %464

440:                                              ; preds = %440, %257
  %441 = phi ptr [ %11, %257 ], [ %460, %440 ]
  %442 = phi ptr [ %13, %257 ], [ %461, %440 ]
  %443 = phi i32 [ 0, %257 ], [ %462, %440 ]
  %444 = load i64, ptr %441, align 8, !tbaa !34
  %445 = getelementptr inbounds double, ptr %254, i64 %444
  %446 = load double, ptr %445, align 8, !tbaa !30
  %447 = fmul double %252, %446
  %448 = fpext double %447 to x86_fp80
  %449 = load x86_fp80, ptr %442, align 16, !tbaa !128
  %450 = fmul x86_fp80 %449, %448
  store x86_fp80 %450, ptr %442, align 16, !tbaa !128
  %451 = getelementptr inbounds i64, ptr %441, i64 1
  %452 = getelementptr inbounds x86_fp80, ptr %442, i64 1
  %453 = load i64, ptr %451, align 8, !tbaa !34
  %454 = getelementptr inbounds double, ptr %254, i64 %453
  %455 = load double, ptr %454, align 8, !tbaa !30
  %456 = fmul double %252, %455
  %457 = fpext double %456 to x86_fp80
  %458 = load x86_fp80, ptr %452, align 16, !tbaa !128
  %459 = fmul x86_fp80 %458, %457
  store x86_fp80 %459, ptr %452, align 16, !tbaa !128
  %460 = getelementptr inbounds i64, ptr %441, i64 2
  %461 = getelementptr inbounds x86_fp80, ptr %442, i64 2
  %462 = add i32 %443, 2
  %463 = icmp eq i32 %462, %258
  br i1 %463, label %416, label %440

464:                                              ; preds = %431, %570
  %465 = phi ptr [ %434, %431 ], [ %581, %570 ]
  %466 = phi ptr [ %433, %431 ], [ %582, %570 ]
  %467 = phi i32 [ %429, %431 ], [ %580, %570 ]
  %468 = getelementptr inbounds i64, ptr %465, i64 1
  %469 = load i64, ptr %468, align 8, !tbaa !34
  %470 = trunc i64 %469 to i32
  %471 = load i64, ptr %465, align 8, !tbaa !34
  %472 = add i64 %471, 1
  %473 = getelementptr inbounds i32, ptr %436, i64 %472
  %474 = and i64 %469, 4294967295
  %475 = getelementptr inbounds i32, ptr %436, i64 %474
  %476 = ptrtoint ptr %475 to i64
  %477 = ptrtoint ptr %473 to i64
  %478 = sub i64 %476, %477
  %479 = lshr exact i64 %478, 2
  %480 = trunc i64 %479 to i32
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %539, label %482

482:                                              ; preds = %464, %528
  %483 = phi i32 [ %537, %528 ], [ %480, %464 ]
  %484 = phi ptr [ %538, %528 ], [ %473, %464 ]
  %485 = icmp ult i32 %483, 8
  br i1 %485, label %486, label %528

486:                                              ; preds = %482
  switch i32 %483, label %528 [
    i32 7, label %487
    i32 6, label %492
    i32 5, label %498
    i32 4, label %504
    i32 3, label %510
    i32 2, label %516
    i32 1, label %522
  ]

487:                                              ; preds = %486
  %488 = load i32, ptr %484, align 4, !tbaa !47
  %489 = icmp ult i32 %488, %467
  br i1 %489, label %490, label %539

490:                                              ; preds = %487
  %491 = getelementptr inbounds i32, ptr %484, i64 1
  br label %492

492:                                              ; preds = %486, %490
  %493 = phi ptr [ %491, %490 ], [ %484, %486 ]
  %494 = load i32, ptr %493, align 4, !tbaa !47
  %495 = icmp ult i32 %494, %467
  br i1 %495, label %496, label %539

496:                                              ; preds = %492
  %497 = getelementptr inbounds i32, ptr %493, i64 1
  br label %498

498:                                              ; preds = %486, %496
  %499 = phi ptr [ %497, %496 ], [ %484, %486 ]
  %500 = load i32, ptr %499, align 4, !tbaa !47
  %501 = icmp ult i32 %500, %467
  br i1 %501, label %502, label %539

502:                                              ; preds = %498
  %503 = getelementptr inbounds i32, ptr %499, i64 1
  br label %504

504:                                              ; preds = %486, %502
  %505 = phi ptr [ %503, %502 ], [ %484, %486 ]
  %506 = load i32, ptr %505, align 4, !tbaa !47
  %507 = icmp ult i32 %506, %467
  br i1 %507, label %508, label %539

508:                                              ; preds = %504
  %509 = getelementptr inbounds i32, ptr %505, i64 1
  br label %510

510:                                              ; preds = %486, %508
  %511 = phi ptr [ %509, %508 ], [ %484, %486 ]
  %512 = load i32, ptr %511, align 4, !tbaa !47
  %513 = icmp ult i32 %512, %467
  br i1 %513, label %514, label %539

514:                                              ; preds = %510
  %515 = getelementptr inbounds i32, ptr %511, i64 1
  br label %516

516:                                              ; preds = %486, %514
  %517 = phi ptr [ %515, %514 ], [ %484, %486 ]
  %518 = load i32, ptr %517, align 4, !tbaa !47
  %519 = icmp ult i32 %518, %467
  br i1 %519, label %520, label %539

520:                                              ; preds = %516
  %521 = getelementptr inbounds i32, ptr %517, i64 1
  br label %522

522:                                              ; preds = %486, %520
  %523 = phi ptr [ %521, %520 ], [ %484, %486 ]
  %524 = load i32, ptr %523, align 4, !tbaa !47
  %525 = icmp ult i32 %524, %467
  %526 = zext i1 %525 to i64
  %527 = getelementptr inbounds i32, ptr %523, i64 %526
  br label %539

528:                                              ; preds = %486, %482
  %529 = lshr i32 %483, 1
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds i32, ptr %484, i64 %530
  %532 = load i32, ptr %531, align 4, !tbaa !47
  %533 = icmp ult i32 %532, %467
  %534 = getelementptr inbounds i32, ptr %531, i64 1
  %535 = xor i32 %529, -1
  %536 = add i32 %483, %535
  %537 = select i1 %533, i32 %536, i32 %529
  %538 = select i1 %533, ptr %534, ptr %484
  br label %482

539:                                              ; preds = %464, %487, %492, %498, %504, %510, %516, %522
  %540 = phi ptr [ %473, %464 ], [ %484, %487 ], [ %493, %492 ], [ %499, %498 ], [ %505, %504 ], [ %511, %510 ], [ %517, %516 ], [ %527, %522 ]
  %541 = ptrtoint ptr %540 to i64
  %542 = sub i64 %541, %437
  %543 = lshr exact i64 %542, 2
  %544 = trunc i64 %543 to i32
  %545 = icmp ult i32 %544, %470
  br i1 %545, label %546, label %570

546:                                              ; preds = %539
  %547 = and i64 %543, 4294967295
  %548 = and i64 %469, 4294967295
  %549 = sub i64 %469, %543
  %550 = add nuw nsw i64 %547, 1
  %551 = and i64 %549, 1
  %552 = icmp eq i64 %551, 0
  br i1 %552, label %565, label %553

553:                                              ; preds = %546
  %554 = getelementptr inbounds double, ptr %439, i64 %547
  %555 = load double, ptr %554, align 8, !tbaa !30
  %556 = fpext double %555 to x86_fp80
  %557 = getelementptr inbounds i32, ptr %436, i64 %547
  %558 = load i32, ptr %557, align 4, !tbaa !47
  %559 = zext i32 %558 to i64
  %560 = getelementptr inbounds x86_fp80, ptr %13, i64 %559
  %561 = load x86_fp80, ptr %560, align 16, !tbaa !128
  %562 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %556, x86_fp80 %561, x86_fp80 0xK00000000000000000000)
  %563 = fptrunc x86_fp80 %562 to double
  %564 = add nuw nsw i64 %547, 1
  br label %565

565:                                              ; preds = %553, %546
  %566 = phi double [ undef, %546 ], [ %563, %553 ]
  %567 = phi i64 [ %547, %546 ], [ %564, %553 ]
  %568 = phi double [ 0.000000e+00, %546 ], [ %563, %553 ]
  %569 = icmp eq i64 %474, %550
  br i1 %569, label %570, label %584

570:                                              ; preds = %565, %584, %539
  %571 = phi double [ 0.000000e+00, %539 ], [ %566, %565 ], [ %609, %584 ]
  %572 = fmul double %571, %3
  %573 = fpext double %572 to x86_fp80
  %574 = load x86_fp80, ptr %466, align 16, !tbaa !128
  %575 = fsub x86_fp80 %574, %573
  %576 = getelementptr inbounds double, ptr %439, i64 %471
  %577 = load double, ptr %576, align 8, !tbaa !30
  %578 = fpext double %577 to x86_fp80
  %579 = fdiv x86_fp80 %575, %578
  store x86_fp80 %579, ptr %466, align 16, !tbaa !128
  %580 = add nsw i32 %467, -1
  %581 = getelementptr inbounds i64, ptr %465, i64 -1
  %582 = getelementptr inbounds x86_fp80, ptr %466, i64 -1
  %583 = icmp sgt i32 %467, 0
  br i1 %583, label %464, label %612

584:                                              ; preds = %565, %584
  %585 = phi i64 [ %610, %584 ], [ %567, %565 ]
  %586 = phi double [ %609, %584 ], [ %568, %565 ]
  %587 = getelementptr inbounds double, ptr %439, i64 %585
  %588 = load double, ptr %587, align 8, !tbaa !30
  %589 = fpext double %588 to x86_fp80
  %590 = getelementptr inbounds i32, ptr %436, i64 %585
  %591 = load i32, ptr %590, align 4, !tbaa !47
  %592 = zext i32 %591 to i64
  %593 = getelementptr inbounds x86_fp80, ptr %13, i64 %592
  %594 = load x86_fp80, ptr %593, align 16, !tbaa !128
  %595 = fpext double %586 to x86_fp80
  %596 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %589, x86_fp80 %594, x86_fp80 %595)
  %597 = fptrunc x86_fp80 %596 to double
  %598 = add nuw nsw i64 %585, 1
  %599 = getelementptr inbounds double, ptr %439, i64 %598
  %600 = load double, ptr %599, align 8, !tbaa !30
  %601 = fpext double %600 to x86_fp80
  %602 = getelementptr inbounds i32, ptr %436, i64 %598
  %603 = load i32, ptr %602, align 4, !tbaa !47
  %604 = zext i32 %603 to i64
  %605 = getelementptr inbounds x86_fp80, ptr %13, i64 %604
  %606 = load x86_fp80, ptr %605, align 16, !tbaa !128
  %607 = fpext double %597 to x86_fp80
  %608 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %601, x86_fp80 %606, x86_fp80 %607)
  %609 = fptrunc x86_fp80 %608 to double
  %610 = add nuw nsw i64 %585, 2
  %611 = icmp eq i64 %610, %548
  br i1 %611, label %570, label %584

612:                                              ; preds = %207, %570, %27, %250, %19, %38, %138, %428
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE16precondition_SORIeEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %65, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !135
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %18 = fpext double %3 to x86_fp80
  %19 = load ptr, ptr %17, align 8, !tbaa !13
  %20 = zext i32 %9 to i64
  %21 = load i64, ptr %15, align 8, !tbaa !34
  br label %22

22:                                               ; preds = %36, %11
  %23 = phi i64 [ %21, %11 ], [ %29, %36 ]
  %24 = phi i64 [ 0, %11 ], [ %27, %36 ]
  %25 = getelementptr inbounds x86_fp80, ptr %13, i64 %24
  %26 = load x86_fp80, ptr %25, align 16, !tbaa !128
  %27 = add nuw nsw i64 %24, 1
  %28 = getelementptr inbounds i64, ptr %15, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %23, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %22
  %33 = trunc i64 %23 to i32
  %34 = load ptr, ptr %16, align 8, !tbaa !46
  %35 = load ptr, ptr %17, align 8
  br label %44

36:                                               ; preds = %60, %22
  %37 = phi x86_fp80 [ %26, %22 ], [ %61, %60 ]
  %38 = fmul x86_fp80 %37, %18
  %39 = getelementptr inbounds double, ptr %19, i64 %23
  %40 = load double, ptr %39, align 8, !tbaa !30
  %41 = fpext double %40 to x86_fp80
  %42 = fdiv x86_fp80 %38, %41
  store x86_fp80 %42, ptr %25, align 16, !tbaa !128
  %43 = icmp eq i64 %27, %20
  br i1 %43, label %65, label %22

44:                                               ; preds = %60, %32
  %45 = phi i64 [ %30, %32 ], [ %63, %60 ]
  %46 = phi i32 [ %33, %32 ], [ %62, %60 ]
  %47 = phi x86_fp80 [ %26, %32 ], [ %61, %60 ]
  %48 = getelementptr inbounds i32, ptr %34, i64 %45
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = zext i32 %49 to i64
  %51 = icmp ugt i64 %24, %50
  br i1 %51, label %52, label %60

52:                                               ; preds = %44
  %53 = getelementptr inbounds double, ptr %35, i64 %45
  %54 = load double, ptr %53, align 8, !tbaa !30
  %55 = fpext double %54 to x86_fp80
  %56 = getelementptr inbounds x86_fp80, ptr %13, i64 %50
  %57 = load x86_fp80, ptr %56, align 16, !tbaa !128
  %58 = fneg x86_fp80 %55
  %59 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %58, x86_fp80 %57, x86_fp80 %47)
  br label %60

60:                                               ; preds = %52, %44
  %61 = phi x86_fp80 [ %59, %52 ], [ %47, %44 ]
  %62 = add i32 %46, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %29, %63
  br i1 %64, label %44, label %36

65:                                               ; preds = %36, %4
  ret void
}

declare noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef nonnull align 8 dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE3SORIeEEvRNS_6VectorIT_EEd(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, double noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !135
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %16 = fpext double %2 to x86_fp80
  %17 = load ptr, ptr %15, align 8, !tbaa !13
  %18 = zext i32 %7 to i64
  %19 = load i64, ptr %13, align 8, !tbaa !34
  br label %21

20:                                               ; preds = %35, %3
  ret void

21:                                               ; preds = %9, %35
  %22 = phi i64 [ %19, %9 ], [ %28, %35 ]
  %23 = phi i64 [ 0, %9 ], [ %26, %35 ]
  %24 = getelementptr inbounds x86_fp80, ptr %11, i64 %23
  %25 = load x86_fp80, ptr %24, align 16, !tbaa !128
  %26 = add nuw nsw i64 %23, 1
  %27 = getelementptr inbounds i64, ptr %13, i64 %26
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = and i64 %22, 4294967295
  %30 = icmp ugt i64 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %21
  %32 = trunc i64 %22 to i32
  %33 = load ptr, ptr %14, align 8, !tbaa !46
  %34 = load ptr, ptr %15, align 8
  br label %43

35:                                               ; preds = %59, %21
  %36 = phi x86_fp80 [ %25, %21 ], [ %60, %59 ]
  %37 = fmul x86_fp80 %36, %16
  %38 = getelementptr inbounds double, ptr %17, i64 %22
  %39 = load double, ptr %38, align 8, !tbaa !30
  %40 = fpext double %39 to x86_fp80
  %41 = fdiv x86_fp80 %37, %40
  store x86_fp80 %41, ptr %24, align 16, !tbaa !128
  %42 = icmp eq i64 %26, %18
  br i1 %42, label %20, label %21

43:                                               ; preds = %31, %59
  %44 = phi i64 [ %29, %31 ], [ %62, %59 ]
  %45 = phi i32 [ %32, %31 ], [ %61, %59 ]
  %46 = phi x86_fp80 [ %25, %31 ], [ %60, %59 ]
  %47 = getelementptr inbounds i32, ptr %33, i64 %44
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %23, %49
  br i1 %50, label %51, label %59

51:                                               ; preds = %43
  %52 = getelementptr inbounds double, ptr %34, i64 %44
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = fpext double %53 to x86_fp80
  %55 = getelementptr inbounds x86_fp80, ptr %11, i64 %49
  %56 = load x86_fp80, ptr %55, align 16, !tbaa !128
  %57 = fneg x86_fp80 %54
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %57, x86_fp80 %56, x86_fp80 %46)
  br label %59

59:                                               ; preds = %51, %43
  %60 = phi x86_fp80 [ %58, %51 ], [ %46, %43 ]
  %61 = add i32 %45, 1
  %62 = zext i32 %61 to i64
  %63 = icmp ugt i64 %28, %62
  br i1 %63, label %43, label %35
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE17precondition_TSORIeEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %67, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !135
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %18 = fpext double %3 to x86_fp80
  %19 = load ptr, ptr %17, align 8, !tbaa !13
  %20 = zext i32 %9 to i64
  br label %21

21:                                               ; preds = %38, %11
  %22 = phi i64 [ %20, %11 ], [ %23, %38 ]
  %23 = add nsw i64 %22, -1
  %24 = trunc i64 %23 to i32
  %25 = and i64 %23, 4294967295
  %26 = getelementptr inbounds x86_fp80, ptr %13, i64 %25
  %27 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %28 = getelementptr inbounds i64, ptr %15, i64 %25
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = getelementptr inbounds i64, ptr %15, i64 %22
  %31 = load i64, ptr %30, align 8, !tbaa !34
  %32 = and i64 %29, 4294967295
  %33 = icmp ugt i64 %31, %32
  br i1 %33, label %34, label %38

34:                                               ; preds = %21
  %35 = trunc i64 %29 to i32
  %36 = load ptr, ptr %16, align 8, !tbaa !46
  %37 = load ptr, ptr %17, align 8
  br label %46

38:                                               ; preds = %62, %21
  %39 = phi x86_fp80 [ %27, %21 ], [ %63, %62 ]
  %40 = fmul x86_fp80 %39, %18
  %41 = getelementptr inbounds double, ptr %19, i64 %29
  %42 = load double, ptr %41, align 8, !tbaa !30
  %43 = fpext double %42 to x86_fp80
  %44 = fdiv x86_fp80 %40, %43
  store x86_fp80 %44, ptr %26, align 16, !tbaa !128
  %45 = icmp eq i32 %24, 0
  br i1 %45, label %67, label %21

46:                                               ; preds = %62, %34
  %47 = phi i64 [ %32, %34 ], [ %65, %62 ]
  %48 = phi i32 [ %35, %34 ], [ %64, %62 ]
  %49 = phi x86_fp80 [ %27, %34 ], [ %63, %62 ]
  %50 = getelementptr inbounds i32, ptr %36, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %24
  br i1 %52, label %53, label %62

53:                                               ; preds = %46
  %54 = getelementptr inbounds double, ptr %37, i64 %47
  %55 = load double, ptr %54, align 8, !tbaa !30
  %56 = fpext double %55 to x86_fp80
  %57 = zext i32 %51 to i64
  %58 = getelementptr inbounds x86_fp80, ptr %13, i64 %57
  %59 = load x86_fp80, ptr %58, align 16, !tbaa !128
  %60 = fneg x86_fp80 %56
  %61 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %60, x86_fp80 %59, x86_fp80 %49)
  br label %62

62:                                               ; preds = %53, %46
  %63 = phi x86_fp80 [ %61, %53 ], [ %49, %46 ]
  %64 = add i32 %48, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %31, %65
  br i1 %66, label %46, label %38

67:                                               ; preds = %38, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE4TSORIeEEvRNS_6VectorIT_EEd(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, double noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !135
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %16 = fpext double %2 to x86_fp80
  %17 = load ptr, ptr %15, align 8, !tbaa !13
  %18 = zext i32 %7 to i64
  br label %20

19:                                               ; preds = %37, %3
  ret void

20:                                               ; preds = %9, %37
  %21 = phi i64 [ %18, %9 ], [ %22, %37 ]
  %22 = add nsw i64 %21, -1
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  %25 = getelementptr inbounds x86_fp80, ptr %11, i64 %24
  %26 = load x86_fp80, ptr %25, align 16, !tbaa !128
  %27 = getelementptr inbounds i64, ptr %13, i64 %24
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = getelementptr inbounds i64, ptr %13, i64 %21
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %28, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %20
  %34 = trunc i64 %28 to i32
  %35 = load ptr, ptr %14, align 8, !tbaa !46
  %36 = load ptr, ptr %15, align 8
  br label %45

37:                                               ; preds = %61, %20
  %38 = phi x86_fp80 [ %26, %20 ], [ %62, %61 ]
  %39 = fmul x86_fp80 %38, %16
  %40 = getelementptr inbounds double, ptr %17, i64 %28
  %41 = load double, ptr %40, align 8, !tbaa !30
  %42 = fpext double %41 to x86_fp80
  %43 = fdiv x86_fp80 %39, %42
  store x86_fp80 %43, ptr %25, align 16, !tbaa !128
  %44 = icmp eq i32 %23, 0
  br i1 %44, label %19, label %20

45:                                               ; preds = %33, %61
  %46 = phi i64 [ %31, %33 ], [ %64, %61 ]
  %47 = phi i32 [ %34, %33 ], [ %63, %61 ]
  %48 = phi x86_fp80 [ %26, %33 ], [ %62, %61 ]
  %49 = getelementptr inbounds i32, ptr %35, i64 %46
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %23
  br i1 %51, label %52, label %61

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %36, i64 %46
  %54 = load double, ptr %53, align 8, !tbaa !30
  %55 = fpext double %54 to x86_fp80
  %56 = zext i32 %50 to i64
  %57 = getelementptr inbounds x86_fp80, ptr %11, i64 %56
  %58 = load x86_fp80, ptr %57, align 16, !tbaa !128
  %59 = fneg x86_fp80 %55
  %60 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %59, x86_fp80 %58, x86_fp80 %48)
  br label %61

61:                                               ; preds = %45, %52
  %62 = phi x86_fp80 [ %60, %52 ], [ %48, %45 ]
  %63 = add i32 %47, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %30, %64
  br i1 %65, label %45, label %37
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE19precondition_JacobiIeEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !138
  %7 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !135
  %9 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !135
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !8
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %12, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = fcmp une double %3, 1.000000e+00
  %16 = icmp eq i32 %6, 0
  br i1 %15, label %25, label %17

17:                                               ; preds = %4
  br i1 %16, label %111, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !13
  %21 = and i32 %6, 1
  %22 = icmp eq i32 %6, 1
  br i1 %22, label %99, label %23

23:                                               ; preds = %18
  %24 = and i32 %6, -2
  br label %61

25:                                               ; preds = %4
  br i1 %16, label %111, label %26

26:                                               ; preds = %25
  %27 = fpext double %3 to x86_fp80
  %28 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !13
  %30 = and i32 %6, 1
  %31 = icmp eq i32 %6, 1
  br i1 %31, label %86, label %32

32:                                               ; preds = %26
  %33 = and i32 %6, -2
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi ptr [ %14, %32 ], [ %58, %34 ]
  %36 = phi ptr [ %10, %32 ], [ %57, %34 ]
  %37 = phi ptr [ %8, %32 ], [ %56, %34 ]
  %38 = phi i32 [ 0, %32 ], [ %59, %34 ]
  %39 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %40 = fmul x86_fp80 %39, %27
  %41 = load i64, ptr %35, align 8, !tbaa !34
  %42 = getelementptr inbounds double, ptr %29, i64 %41
  %43 = load double, ptr %42, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = fdiv x86_fp80 %40, %44
  store x86_fp80 %45, ptr %37, align 16, !tbaa !128
  %46 = getelementptr inbounds x86_fp80, ptr %37, i64 1
  %47 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %48 = getelementptr inbounds i64, ptr %35, i64 1
  %49 = load x86_fp80, ptr %47, align 16, !tbaa !128
  %50 = fmul x86_fp80 %49, %27
  %51 = load i64, ptr %48, align 8, !tbaa !34
  %52 = getelementptr inbounds double, ptr %29, i64 %51
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = fpext double %53 to x86_fp80
  %55 = fdiv x86_fp80 %50, %54
  store x86_fp80 %55, ptr %46, align 16, !tbaa !128
  %56 = getelementptr inbounds x86_fp80, ptr %37, i64 2
  %57 = getelementptr inbounds x86_fp80, ptr %36, i64 2
  %58 = getelementptr inbounds i64, ptr %35, i64 2
  %59 = add i32 %38, 2
  %60 = icmp eq i32 %59, %33
  br i1 %60, label %86, label %34

61:                                               ; preds = %61, %23
  %62 = phi ptr [ %14, %23 ], [ %83, %61 ]
  %63 = phi ptr [ %10, %23 ], [ %82, %61 ]
  %64 = phi ptr [ %8, %23 ], [ %81, %61 ]
  %65 = phi i32 [ 0, %23 ], [ %84, %61 ]
  %66 = load x86_fp80, ptr %63, align 16, !tbaa !128
  %67 = load i64, ptr %62, align 8, !tbaa !34
  %68 = getelementptr inbounds double, ptr %20, i64 %67
  %69 = load double, ptr %68, align 8, !tbaa !30
  %70 = fpext double %69 to x86_fp80
  %71 = fdiv x86_fp80 %66, %70
  store x86_fp80 %71, ptr %64, align 16, !tbaa !128
  %72 = getelementptr inbounds x86_fp80, ptr %64, i64 1
  %73 = getelementptr inbounds x86_fp80, ptr %63, i64 1
  %74 = getelementptr inbounds i64, ptr %62, i64 1
  %75 = load x86_fp80, ptr %73, align 16, !tbaa !128
  %76 = load i64, ptr %74, align 8, !tbaa !34
  %77 = getelementptr inbounds double, ptr %20, i64 %76
  %78 = load double, ptr %77, align 8, !tbaa !30
  %79 = fpext double %78 to x86_fp80
  %80 = fdiv x86_fp80 %75, %79
  store x86_fp80 %80, ptr %72, align 16, !tbaa !128
  %81 = getelementptr inbounds x86_fp80, ptr %64, i64 2
  %82 = getelementptr inbounds x86_fp80, ptr %63, i64 2
  %83 = getelementptr inbounds i64, ptr %62, i64 2
  %84 = add i32 %65, 2
  %85 = icmp eq i32 %84, %24
  br i1 %85, label %99, label %61

86:                                               ; preds = %34, %26
  %87 = phi ptr [ %14, %26 ], [ %58, %34 ]
  %88 = phi ptr [ %10, %26 ], [ %57, %34 ]
  %89 = phi ptr [ %8, %26 ], [ %56, %34 ]
  %90 = icmp eq i32 %30, 0
  br i1 %90, label %111, label %91

91:                                               ; preds = %86
  %92 = load x86_fp80, ptr %88, align 16, !tbaa !128
  %93 = fmul x86_fp80 %92, %27
  %94 = load i64, ptr %87, align 8, !tbaa !34
  %95 = getelementptr inbounds double, ptr %29, i64 %94
  %96 = load double, ptr %95, align 8, !tbaa !30
  %97 = fpext double %96 to x86_fp80
  %98 = fdiv x86_fp80 %93, %97
  store x86_fp80 %98, ptr %89, align 16, !tbaa !128
  br label %111

99:                                               ; preds = %61, %18
  %100 = phi ptr [ %14, %18 ], [ %83, %61 ]
  %101 = phi ptr [ %10, %18 ], [ %82, %61 ]
  %102 = phi ptr [ %8, %18 ], [ %81, %61 ]
  %103 = icmp eq i32 %21, 0
  br i1 %103, label %111, label %104

104:                                              ; preds = %99
  %105 = load x86_fp80, ptr %101, align 16, !tbaa !128
  %106 = load i64, ptr %100, align 8, !tbaa !34
  %107 = getelementptr inbounds double, ptr %20, i64 %106
  %108 = load double, ptr %107, align 8, !tbaa !30
  %109 = fpext double %108 to x86_fp80
  %110 = fdiv x86_fp80 %105, %109
  store x86_fp80 %110, ptr %102, align 16, !tbaa !128
  br label %111

111:                                              ; preds = %104, %99, %91, %86, %17, %25
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE4SSORIeEEvRNS_6VectorIT_EEd(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, double noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %82, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = fpext double %2 to x86_fp80
  %16 = load ptr, ptr %14, align 8, !tbaa !135
  %17 = load ptr, ptr %13, align 8, !tbaa !13
  %18 = zext i32 %5 to i64
  %19 = load i64, ptr %11, align 8, !tbaa !34
  br label %35

20:                                               ; preds = %71
  %21 = add i32 %5, -1
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %23, label %82

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !8
  %26 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 8
  %27 = load ptr, ptr %26, align 8, !tbaa !32
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 9
  %29 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %31 = fpext double %2 to x86_fp80
  %32 = load ptr, ptr %29, align 8, !tbaa !13
  %33 = load ptr, ptr %30, align 8, !tbaa !135
  %34 = zext i32 %21 to i64
  br label %83

35:                                               ; preds = %7, %71
  %36 = phi i64 [ %19, %7 ], [ %40, %71 ]
  %37 = phi i64 [ 0, %7 ], [ %38, %71 ]
  %38 = add nuw nsw i64 %37, 1
  %39 = getelementptr inbounds i64, ptr %11, i64 %38
  %40 = load i64, ptr %39, align 8, !tbaa !34
  %41 = and i64 %36, 4294967295
  %42 = icmp ugt i64 %40, %41
  br i1 %42, label %43, label %71

43:                                               ; preds = %35
  %44 = trunc i64 %36 to i32
  %45 = load ptr, ptr %12, align 8, !tbaa !46
  %46 = load ptr, ptr %13, align 8
  %47 = load ptr, ptr %14, align 8
  br label %48

48:                                               ; preds = %43, %66
  %49 = phi i64 [ %41, %43 ], [ %69, %66 ]
  %50 = phi i32 [ %44, %43 ], [ %68, %66 ]
  %51 = phi x86_fp80 [ 0xK00000000000000000000, %43 ], [ %67, %66 ]
  %52 = getelementptr inbounds i32, ptr %45, i64 %49
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ne i32 %53, -1
  %55 = zext i32 %50 to i64
  %56 = icmp ugt i64 %37, %55
  %57 = and i1 %56, %54
  br i1 %57, label %58, label %66

58:                                               ; preds = %48
  %59 = getelementptr inbounds double, ptr %46, i64 %49
  %60 = load double, ptr %59, align 8, !tbaa !30
  %61 = fpext double %60 to x86_fp80
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds x86_fp80, ptr %47, i64 %62
  %64 = load x86_fp80, ptr %63, align 16, !tbaa !128
  %65 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %61, x86_fp80 %64, x86_fp80 %51)
  br label %66

66:                                               ; preds = %58, %48
  %67 = phi x86_fp80 [ %65, %58 ], [ %51, %48 ]
  %68 = add i32 %50, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %40, %69
  br i1 %70, label %48, label %71

71:                                               ; preds = %66, %35
  %72 = phi x86_fp80 [ 0xK00000000000000000000, %35 ], [ %67, %66 ]
  %73 = getelementptr inbounds x86_fp80, ptr %16, i64 %37
  %74 = load x86_fp80, ptr %73, align 16, !tbaa !128
  %75 = fneg x86_fp80 %72
  %76 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %75, x86_fp80 %15, x86_fp80 %74)
  %77 = getelementptr inbounds double, ptr %17, i64 %36
  %78 = load double, ptr %77, align 8, !tbaa !30
  %79 = fpext double %78 to x86_fp80
  %80 = fdiv x86_fp80 %76, %79
  store x86_fp80 %80, ptr %73, align 16, !tbaa !128
  %81 = icmp eq i64 %38, %18
  br i1 %81, label %20, label %35

82:                                               ; preds = %121, %3, %20
  ret void

83:                                               ; preds = %23, %121
  %84 = phi i64 [ %34, %23 ], [ %131, %121 ]
  %85 = phi i32 [ %5, %23 ], [ %133, %121 ]
  %86 = getelementptr inbounds i64, ptr %27, i64 %84
  %87 = load i64, ptr %86, align 8, !tbaa !34
  %88 = sext i32 %85 to i64
  %89 = getelementptr inbounds i64, ptr %27, i64 %88
  %90 = load i64, ptr %89, align 8, !tbaa !34
  %91 = and i64 %87, 4294967295
  %92 = icmp ugt i64 %90, %91
  br i1 %92, label %93, label %121

93:                                               ; preds = %83
  %94 = trunc i64 %87 to i32
  %95 = load ptr, ptr %28, align 8, !tbaa !46
  %96 = load ptr, ptr %29, align 8
  %97 = load ptr, ptr %30, align 8
  br label %98

98:                                               ; preds = %93, %116
  %99 = phi i64 [ %91, %93 ], [ %119, %116 ]
  %100 = phi i32 [ %94, %93 ], [ %118, %116 ]
  %101 = phi x86_fp80 [ 0xK00000000000000000000, %93 ], [ %117, %116 ]
  %102 = getelementptr inbounds i32, ptr %95, i64 %99
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = icmp ne i32 %103, -1
  %105 = zext i32 %100 to i64
  %106 = icmp ult i64 %84, %105
  %107 = and i1 %106, %104
  br i1 %107, label %108, label %116

108:                                              ; preds = %98
  %109 = getelementptr inbounds double, ptr %96, i64 %99
  %110 = load double, ptr %109, align 8, !tbaa !30
  %111 = fpext double %110 to x86_fp80
  %112 = zext i32 %103 to i64
  %113 = getelementptr inbounds x86_fp80, ptr %97, i64 %112
  %114 = load x86_fp80, ptr %113, align 16, !tbaa !128
  %115 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %111, x86_fp80 %114, x86_fp80 %101)
  br label %116

116:                                              ; preds = %108, %98
  %117 = phi x86_fp80 [ %115, %108 ], [ %101, %98 ]
  %118 = add i32 %100, 1
  %119 = zext i32 %118 to i64
  %120 = icmp ugt i64 %90, %119
  br i1 %120, label %98, label %121

121:                                              ; preds = %116, %83
  %122 = phi x86_fp80 [ 0xK00000000000000000000, %83 ], [ %117, %116 ]
  %123 = fmul x86_fp80 %122, %31
  %124 = getelementptr inbounds double, ptr %32, i64 %87
  %125 = load double, ptr %124, align 8, !tbaa !30
  %126 = fpext double %125 to x86_fp80
  %127 = fdiv x86_fp80 %123, %126
  %128 = getelementptr inbounds x86_fp80, ptr %33, i64 %84
  %129 = load x86_fp80, ptr %128, align 16, !tbaa !128
  %130 = fsub x86_fp80 %129, %127
  store x86_fp80 %130, ptr %128, align 16, !tbaa !128
  %131 = add nsw i64 %84, -1
  %132 = icmp sgt i64 %84, 0
  %133 = trunc i64 %84 to i32
  br i1 %132, label %83, label %82
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE4PSORIeEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, double noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !135
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %20 = fpext double %4 to x86_fp80
  %21 = load ptr, ptr %19, align 8, !tbaa !13
  %22 = zext i32 %9 to i64
  br label %24

23:                                               ; preds = %43, %5
  ret void

24:                                               ; preds = %11, %43
  %25 = phi i64 [ 0, %11 ], [ %50, %43 ]
  %26 = getelementptr inbounds i32, ptr %12, i64 %25
  %27 = load i32, ptr %26, align 4, !tbaa !47
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds x86_fp80, ptr %14, i64 %28
  %30 = load x86_fp80, ptr %29, align 16, !tbaa !128
  %31 = getelementptr inbounds i64, ptr %16, i64 %28
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = add i32 %27, 1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i64, ptr %16, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = and i64 %32, 4294967295
  %38 = icmp ugt i64 %36, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %24
  %40 = trunc i64 %32 to i32
  %41 = load ptr, ptr %17, align 8, !tbaa !46
  %42 = load ptr, ptr %19, align 8
  br label %52

43:                                               ; preds = %71, %24
  %44 = phi x86_fp80 [ %30, %24 ], [ %72, %71 ]
  %45 = fmul x86_fp80 %44, %20
  %46 = getelementptr inbounds double, ptr %21, i64 %32
  %47 = load double, ptr %46, align 8, !tbaa !30
  %48 = fpext double %47 to x86_fp80
  %49 = fdiv x86_fp80 %45, %48
  store x86_fp80 %49, ptr %29, align 16, !tbaa !128
  %50 = add nuw nsw i64 %25, 1
  %51 = icmp eq i64 %50, %22
  br i1 %51, label %23, label %24

52:                                               ; preds = %39, %71
  %53 = phi i64 [ %37, %39 ], [ %74, %71 ]
  %54 = phi i32 [ %40, %39 ], [ %73, %71 ]
  %55 = phi x86_fp80 [ %30, %39 ], [ %72, %71 ]
  %56 = getelementptr inbounds i32, ptr %41, i64 %53
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %18, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %25, %61
  br i1 %62, label %63, label %71

63:                                               ; preds = %52
  %64 = getelementptr inbounds double, ptr %42, i64 %53
  %65 = load double, ptr %64, align 8, !tbaa !30
  %66 = fpext double %65 to x86_fp80
  %67 = getelementptr inbounds x86_fp80, ptr %14, i64 %58
  %68 = load x86_fp80, ptr %67, align 16, !tbaa !128
  %69 = fneg x86_fp80 %66
  %70 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %68, x86_fp80 %55)
  br label %71

71:                                               ; preds = %63, %52
  %72 = phi x86_fp80 [ %70, %63 ], [ %55, %52 ]
  %73 = add i32 %54, 1
  %74 = zext i32 %73 to i64
  %75 = icmp ugt i64 %36, %74
  br i1 %75, label %52, label %43
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5TPSORIeEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, double noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !135
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %20 = fpext double %4 to x86_fp80
  %21 = load ptr, ptr %19, align 8, !tbaa !13
  %22 = zext i32 %9 to i64
  br label %24

23:                                               ; preds = %46, %5
  ret void

24:                                               ; preds = %11, %46
  %25 = phi i64 [ %22, %11 ], [ %26, %46 ]
  %26 = add nsw i64 %25, -1
  %27 = trunc i64 %26 to i32
  %28 = and i64 %26, 4294967295
  %29 = getelementptr inbounds i32, ptr %12, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds x86_fp80, ptr %14, i64 %31
  %33 = load x86_fp80, ptr %32, align 16, !tbaa !128
  %34 = getelementptr inbounds i64, ptr %16, i64 %31
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = add i32 %30, 1
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i64, ptr %16, i64 %37
  %39 = load i64, ptr %38, align 8, !tbaa !34
  %40 = and i64 %35, 4294967295
  %41 = icmp ugt i64 %39, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %24
  %43 = trunc i64 %35 to i32
  %44 = load ptr, ptr %17, align 8, !tbaa !46
  %45 = load ptr, ptr %19, align 8
  br label %54

46:                                               ; preds = %72, %24
  %47 = phi x86_fp80 [ %33, %24 ], [ %73, %72 ]
  %48 = fmul x86_fp80 %47, %20
  %49 = getelementptr inbounds double, ptr %21, i64 %35
  %50 = load double, ptr %49, align 8, !tbaa !30
  %51 = fpext double %50 to x86_fp80
  %52 = fdiv x86_fp80 %48, %51
  store x86_fp80 %52, ptr %32, align 16, !tbaa !128
  %53 = icmp eq i32 %27, 0
  br i1 %53, label %23, label %24

54:                                               ; preds = %42, %72
  %55 = phi i64 [ %40, %42 ], [ %75, %72 ]
  %56 = phi i32 [ %43, %42 ], [ %74, %72 ]
  %57 = phi x86_fp80 [ %33, %42 ], [ %73, %72 ]
  %58 = getelementptr inbounds i32, ptr %44, i64 %55
  %59 = load i32, ptr %58, align 4, !tbaa !47
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i32, ptr %18, i64 %60
  %62 = load i32, ptr %61, align 4, !tbaa !47
  %63 = icmp ugt i32 %62, %27
  br i1 %63, label %64, label %72

64:                                               ; preds = %54
  %65 = getelementptr inbounds double, ptr %45, i64 %55
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = fpext double %66 to x86_fp80
  %68 = getelementptr inbounds x86_fp80, ptr %14, i64 %60
  %69 = load x86_fp80, ptr %68, align 16, !tbaa !128
  %70 = fneg x86_fp80 %67
  %71 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %69, x86_fp80 %57)
  br label %72

72:                                               ; preds = %64, %54
  %73 = phi x86_fp80 [ %71, %64 ], [ %57, %54 ]
  %74 = add i32 %56, 1
  %75 = zext i32 %74 to i64
  %76 = icmp ugt i64 %39, %75
  br i1 %76, label %54, label %46
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE8SOR_stepIeEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !135
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = fpext double %3 to x86_fp80
  %21 = zext i32 %8 to i64
  %22 = load i64, ptr %14, align 8, !tbaa !34
  br label %24

23:                                               ; preds = %37, %4
  ret void

24:                                               ; preds = %10, %37
  %25 = phi i64 [ %22, %10 ], [ %31, %37 ]
  %26 = phi i64 [ 0, %10 ], [ %29, %37 ]
  %27 = getelementptr inbounds x86_fp80, ptr %12, i64 %26
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !128
  %29 = add nuw nsw i64 %26, 1
  %30 = getelementptr inbounds i64, ptr %14, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !34
  %32 = and i64 %25, 4294967295
  %33 = icmp ugt i64 %31, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %24
  %35 = trunc i64 %25 to i32
  %36 = load ptr, ptr %17, align 8, !tbaa !46
  br label %48

37:                                               ; preds = %48, %24
  %38 = phi x86_fp80 [ %28, %24 ], [ %61, %48 ]
  %39 = fmul x86_fp80 %38, %20
  %40 = getelementptr inbounds double, ptr %16, i64 %25
  %41 = load double, ptr %40, align 8, !tbaa !30
  %42 = fpext double %41 to x86_fp80
  %43 = fdiv x86_fp80 %39, %42
  %44 = getelementptr inbounds x86_fp80, ptr %19, i64 %26
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  %46 = fadd x86_fp80 %45, %43
  store x86_fp80 %46, ptr %44, align 16, !tbaa !128
  %47 = icmp eq i64 %29, %21
  br i1 %47, label %23, label %24

48:                                               ; preds = %34, %48
  %49 = phi i64 [ %32, %34 ], [ %63, %48 ]
  %50 = phi i32 [ %35, %34 ], [ %62, %48 ]
  %51 = phi x86_fp80 [ %28, %34 ], [ %61, %48 ]
  %52 = getelementptr inbounds double, ptr %16, i64 %49
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = fpext double %53 to x86_fp80
  %55 = getelementptr inbounds i32, ptr %36, i64 %49
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds x86_fp80, ptr %19, i64 %57
  %59 = load x86_fp80, ptr %58, align 16, !tbaa !128
  %60 = fneg x86_fp80 %54
  %61 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %60, x86_fp80 %59, x86_fp80 %51)
  %62 = add i32 %50, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %31, %63
  br i1 %64, label %48, label %37
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9TSOR_stepIeEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = add i32 %8, -1
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %23

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !135
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %19 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = fpext double %3 to x86_fp80
  %22 = zext i32 %9 to i64
  br label %24

23:                                               ; preds = %39, %4
  ret void

24:                                               ; preds = %11, %39
  %25 = phi i64 [ %22, %11 ], [ %49, %39 ]
  %26 = phi i32 [ %8, %11 ], [ %51, %39 ]
  %27 = getelementptr inbounds x86_fp80, ptr %13, i64 %25
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !128
  %29 = getelementptr inbounds i64, ptr %15, i64 %25
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds i64, ptr %15, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %30, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %24
  %37 = trunc i64 %30 to i32
  %38 = load ptr, ptr %18, align 8, !tbaa !46
  br label %52

39:                                               ; preds = %52, %24
  %40 = phi x86_fp80 [ %28, %24 ], [ %65, %52 ]
  %41 = fmul x86_fp80 %40, %21
  %42 = getelementptr inbounds double, ptr %17, i64 %30
  %43 = load double, ptr %42, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = fdiv x86_fp80 %41, %44
  %46 = getelementptr inbounds x86_fp80, ptr %20, i64 %25
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !128
  %48 = fadd x86_fp80 %47, %45
  store x86_fp80 %48, ptr %46, align 16, !tbaa !128
  %49 = add nsw i64 %25, -1
  %50 = icmp sgt i64 %25, 0
  %51 = trunc i64 %25 to i32
  br i1 %50, label %24, label %23

52:                                               ; preds = %36, %52
  %53 = phi i64 [ %34, %36 ], [ %67, %52 ]
  %54 = phi i32 [ %37, %36 ], [ %66, %52 ]
  %55 = phi x86_fp80 [ %28, %36 ], [ %65, %52 ]
  %56 = getelementptr inbounds double, ptr %17, i64 %53
  %57 = load double, ptr %56, align 8, !tbaa !30
  %58 = fpext double %57 to x86_fp80
  %59 = getelementptr inbounds i32, ptr %38, i64 %53
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds x86_fp80, ptr %20, i64 %61
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = fneg x86_fp80 %58
  %65 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %64, x86_fp80 %63, x86_fp80 %55)
  %66 = add i32 %54, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %33, %67
  br i1 %68, label %52, label %39
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9SSOR_stepIeEEvRNS_6VectorIT_EERKS5_d(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, double noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %116, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !135
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = fpext double %3 to x86_fp80
  %21 = zext i32 %8 to i64
  %22 = load i64, ptr %14, align 8, !tbaa !34
  br label %23

23:                                               ; preds = %36, %10
  %24 = phi i64 [ %22, %10 ], [ %30, %36 ]
  %25 = phi i64 [ 0, %10 ], [ %28, %36 ]
  %26 = getelementptr inbounds x86_fp80, ptr %12, i64 %25
  %27 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %28 = add nuw nsw i64 %25, 1
  %29 = getelementptr inbounds i64, ptr %14, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %24, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = trunc i64 %24 to i32
  %35 = load ptr, ptr %17, align 8, !tbaa !46
  br label %47

36:                                               ; preds = %47, %23
  %37 = phi x86_fp80 [ %27, %23 ], [ %60, %47 ]
  %38 = fmul x86_fp80 %37, %20
  %39 = getelementptr inbounds double, ptr %16, i64 %24
  %40 = load double, ptr %39, align 8, !tbaa !30
  %41 = fpext double %40 to x86_fp80
  %42 = fdiv x86_fp80 %38, %41
  %43 = getelementptr inbounds x86_fp80, ptr %19, i64 %25
  %44 = load x86_fp80, ptr %43, align 16, !tbaa !128
  %45 = fadd x86_fp80 %44, %42
  store x86_fp80 %45, ptr %43, align 16, !tbaa !128
  %46 = icmp eq i64 %28, %21
  br i1 %46, label %64, label %23

47:                                               ; preds = %47, %33
  %48 = phi i64 [ %31, %33 ], [ %62, %47 ]
  %49 = phi i32 [ %34, %33 ], [ %61, %47 ]
  %50 = phi x86_fp80 [ %27, %33 ], [ %60, %47 ]
  %51 = getelementptr inbounds double, ptr %16, i64 %48
  %52 = load double, ptr %51, align 8, !tbaa !30
  %53 = fpext double %52 to x86_fp80
  %54 = getelementptr inbounds i32, ptr %35, i64 %48
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds x86_fp80, ptr %19, i64 %56
  %58 = load x86_fp80, ptr %57, align 16, !tbaa !128
  %59 = fneg x86_fp80 %53
  %60 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %59, x86_fp80 %58, x86_fp80 %50)
  %61 = add i32 %49, 1
  %62 = zext i32 %61 to i64
  %63 = icmp ugt i64 %30, %62
  br i1 %63, label %47, label %36

64:                                               ; preds = %36
  %65 = add i32 %8, -1
  %66 = icmp sgt i32 %65, -1
  br i1 %66, label %67, label %116

67:                                               ; preds = %64
  %68 = load ptr, ptr %15, align 8
  %69 = load ptr, ptr %18, align 8
  %70 = zext i32 %65 to i64
  br label %71

71:                                               ; preds = %86, %67
  %72 = phi i64 [ %70, %67 ], [ %96, %86 ]
  %73 = phi i32 [ %8, %67 ], [ %98, %86 ]
  %74 = getelementptr inbounds x86_fp80, ptr %12, i64 %72
  %75 = load x86_fp80, ptr %74, align 16, !tbaa !128
  %76 = getelementptr inbounds i64, ptr %14, i64 %72
  %77 = load i64, ptr %76, align 8, !tbaa !34
  %78 = sext i32 %73 to i64
  %79 = getelementptr inbounds i64, ptr %14, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %77, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %71
  %84 = trunc i64 %77 to i32
  %85 = load ptr, ptr %17, align 8, !tbaa !46
  br label %99

86:                                               ; preds = %99, %71
  %87 = phi x86_fp80 [ %75, %71 ], [ %112, %99 ]
  %88 = fmul x86_fp80 %87, %20
  %89 = getelementptr inbounds double, ptr %68, i64 %77
  %90 = load double, ptr %89, align 8, !tbaa !30
  %91 = fpext double %90 to x86_fp80
  %92 = fdiv x86_fp80 %88, %91
  %93 = getelementptr inbounds x86_fp80, ptr %69, i64 %72
  %94 = load x86_fp80, ptr %93, align 16, !tbaa !128
  %95 = fadd x86_fp80 %94, %92
  store x86_fp80 %95, ptr %93, align 16, !tbaa !128
  %96 = add nsw i64 %72, -1
  %97 = icmp sgt i64 %72, 0
  %98 = trunc i64 %72 to i32
  br i1 %97, label %71, label %116

99:                                               ; preds = %99, %83
  %100 = phi i64 [ %81, %83 ], [ %114, %99 ]
  %101 = phi i32 [ %84, %83 ], [ %113, %99 ]
  %102 = phi x86_fp80 [ %75, %83 ], [ %112, %99 ]
  %103 = getelementptr inbounds double, ptr %68, i64 %100
  %104 = load double, ptr %103, align 8, !tbaa !30
  %105 = fpext double %104 to x86_fp80
  %106 = getelementptr inbounds i32, ptr %85, i64 %100
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds x86_fp80, ptr %69, i64 %108
  %110 = load x86_fp80, ptr %109, align 16, !tbaa !128
  %111 = fneg x86_fp80 %105
  %112 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %111, x86_fp80 %110, x86_fp80 %102)
  %113 = add i32 %101, 1
  %114 = zext i32 %113 to i64
  %115 = icmp ugt i64 %80, %114
  br i1 %115, label %99, label %86

116:                                              ; preds = %86, %4, %64
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIfE18matrix_norm_squareIdEET_RKNS_6VectorIS3_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !92
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 9
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = load i64, ptr %10, align 8, !tbaa !34
  %16 = getelementptr inbounds i32, ptr %14, i64 %15
  %17 = getelementptr inbounds float, ptr %8, i64 %15
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %6 to i64
  br label %23

21:                                               ; preds = %47, %2
  %22 = phi double [ 0.000000e+00, %2 ], [ %53, %47 ]
  ret double %22

23:                                               ; preds = %12, %47
  %24 = phi i64 [ 0, %12 ], [ %28, %47 ]
  %25 = phi double [ 0.000000e+00, %12 ], [ %53, %47 ]
  %26 = phi ptr [ %16, %12 ], [ %50, %47 ]
  %27 = phi ptr [ %17, %12 ], [ %49, %47 ]
  %28 = add nuw nsw i64 %24, 1
  %29 = getelementptr inbounds i64, ptr %10, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = getelementptr inbounds float, ptr %8, i64 %30
  %32 = icmp eq ptr %27, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %23, %33
  %34 = phi ptr [ %40, %33 ], [ %26, %23 ]
  %35 = phi ptr [ %37, %33 ], [ %27, %23 ]
  %36 = phi double [ %45, %33 ], [ 0.000000e+00, %23 ]
  %37 = getelementptr inbounds float, ptr %35, i64 1
  %38 = load float, ptr %35, align 4, !tbaa !95
  %39 = fpext float %38 to double
  %40 = getelementptr inbounds i32, ptr %34, i64 1
  %41 = load i32, ptr %34, align 4, !tbaa !47
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds double, ptr %19, i64 %42
  %44 = load double, ptr %43, align 8, !tbaa !30
  %45 = tail call double @llvm.fmuladd.f64(double %39, double %44, double %36)
  %46 = icmp eq ptr %37, %31
  br i1 %46, label %47, label %33

47:                                               ; preds = %33, %23
  %48 = phi double [ 0.000000e+00, %23 ], [ %45, %33 ]
  %49 = phi ptr [ %27, %23 ], [ %31, %33 ]
  %50 = phi ptr [ %26, %23 ], [ %40, %33 ]
  %51 = getelementptr inbounds double, ptr %19, i64 %24
  %52 = load double, ptr %51, align 8, !tbaa !30
  %53 = tail call double @llvm.fmuladd.f64(double %52, double %48, double %25)
  %54 = icmp eq i64 %28, %20
  br i1 %54, label %21, label %23
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIfE21matrix_scalar_productIdEET_RKNS_6VectorIS3_EES7_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = load i64, ptr %11, align 8, !tbaa !34
  %17 = getelementptr inbounds i32, ptr %15, i64 %16
  %18 = getelementptr inbounds float, ptr %9, i64 %16
  %19 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !53
  %23 = zext i32 %7 to i64
  br label %26

24:                                               ; preds = %50, %3
  %25 = phi double [ 0.000000e+00, %3 ], [ %56, %50 ]
  ret double %25

26:                                               ; preds = %13, %50
  %27 = phi i64 [ 0, %13 ], [ %31, %50 ]
  %28 = phi double [ 0.000000e+00, %13 ], [ %56, %50 ]
  %29 = phi ptr [ %17, %13 ], [ %53, %50 ]
  %30 = phi ptr [ %18, %13 ], [ %52, %50 ]
  %31 = add nuw nsw i64 %27, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = getelementptr inbounds float, ptr %9, i64 %33
  %35 = icmp eq ptr %30, %34
  br i1 %35, label %50, label %36

36:                                               ; preds = %26, %36
  %37 = phi ptr [ %43, %36 ], [ %29, %26 ]
  %38 = phi ptr [ %40, %36 ], [ %30, %26 ]
  %39 = phi double [ %48, %36 ], [ 0.000000e+00, %26 ]
  %40 = getelementptr inbounds float, ptr %38, i64 1
  %41 = load float, ptr %38, align 4, !tbaa !95
  %42 = fpext float %41 to double
  %43 = getelementptr inbounds i32, ptr %37, i64 1
  %44 = load i32, ptr %37, align 4, !tbaa !47
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds double, ptr %20, i64 %45
  %47 = load double, ptr %46, align 8, !tbaa !30
  %48 = tail call double @llvm.fmuladd.f64(double %42, double %47, double %39)
  %49 = icmp eq ptr %40, %34
  br i1 %49, label %50, label %36

50:                                               ; preds = %36, %26
  %51 = phi double [ 0.000000e+00, %26 ], [ %48, %36 ]
  %52 = phi ptr [ %30, %26 ], [ %34, %36 ]
  %53 = phi ptr [ %29, %26 ], [ %43, %36 ]
  %54 = getelementptr inbounds double, ptr %22, i64 %27
  %55 = load double, ptr %54, align 8, !tbaa !30
  %56 = tail call double @llvm.fmuladd.f64(double %55, double %51, double %28)
  %57 = icmp eq i64 %31, %23
  br i1 %57, label %24, label %26
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIfE8residualIdEET_RNS_6VectorIS3_EERKS5_S8_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %3, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !53
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !53
  %22 = zext i32 %8 to i64
  %23 = load i64, ptr %14, align 8, !tbaa !34
  br label %27

24:                                               ; preds = %41, %4
  %25 = phi double [ 0.000000e+00, %4 ], [ %44, %41 ]
  %26 = tail call double @sqrt(double noundef %25) #17
  ret double %26

27:                                               ; preds = %10, %41
  %28 = phi i64 [ %23, %10 ], [ %35, %41 ]
  %29 = phi i64 [ 0, %10 ], [ %33, %41 ]
  %30 = phi double [ 0.000000e+00, %10 ], [ %44, %41 ]
  %31 = getelementptr inbounds double, ptr %12, i64 %29
  %32 = load double, ptr %31, align 8, !tbaa !30
  %33 = add nuw nsw i64 %29, 1
  %34 = getelementptr inbounds i64, ptr %14, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %28, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %27
  %39 = trunc i64 %28 to i32
  %40 = load ptr, ptr %15, align 8, !tbaa !46
  br label %46

41:                                               ; preds = %46, %27
  %42 = phi double [ %32, %27 ], [ %59, %46 ]
  %43 = getelementptr inbounds double, ptr %21, i64 %29
  store double %42, ptr %43, align 8, !tbaa !30
  %44 = tail call double @llvm.fmuladd.f64(double %42, double %42, double %30)
  %45 = icmp eq i64 %33, %22
  br i1 %45, label %24, label %27

46:                                               ; preds = %38, %46
  %47 = phi i64 [ %36, %38 ], [ %61, %46 ]
  %48 = phi i32 [ %39, %38 ], [ %60, %46 ]
  %49 = phi double [ %32, %38 ], [ %59, %46 ]
  %50 = getelementptr inbounds i32, ptr %40, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = getelementptr inbounds float, ptr %17, i64 %47
  %53 = load float, ptr %52, align 4, !tbaa !95
  %54 = fpext float %53 to double
  %55 = zext i32 %51 to i64
  %56 = getelementptr inbounds double, ptr %19, i64 %55
  %57 = load double, ptr %56, align 8, !tbaa !30
  %58 = fneg double %54
  %59 = tail call double @llvm.fmuladd.f64(double %58, double %57, double %49)
  %60 = add i32 %48, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %35, %61
  br i1 %62, label %46, label %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE17precondition_SSORIdEEvRNS_6VectorIT_EERKS5_fRKSt6vectorIjSaIjEE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !56
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !53
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !195
  %16 = load ptr, ptr %4, align 8, !tbaa !197
  %17 = icmp eq ptr %15, %16
  %18 = icmp eq i32 %7, 0
  br i1 %17, label %27, label %19

19:                                               ; preds = %5
  br i1 %18, label %614, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !53
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %26 = zext i32 %7 to i64
  br label %48

27:                                               ; preds = %5
  br i1 %18, label %614, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !53
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = ptrtoint ptr %32 to i64
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %7 to i64
  %37 = load i64, ptr %11, align 8, !tbaa !34
  br label %261

38:                                               ; preds = %85
  br i1 %18, label %614, label %39

39:                                               ; preds = %38
  %40 = fpext float %3 to double
  %41 = fsub double 2.000000e+00, %40
  %42 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %43 = load ptr, ptr %42, align 8, !tbaa !92
  %44 = and i32 %7, 1
  %45 = icmp eq i32 %7, 1
  br i1 %45, label %127, label %46

46:                                               ; preds = %39
  %47 = and i32 %7, -2
  br label %149

48:                                               ; preds = %20, %85
  %49 = phi i64 [ 0, %20 ], [ %94, %85 ]
  %50 = phi ptr [ %11, %20 ], [ %96, %85 ]
  %51 = phi ptr [ %13, %20 ], [ %95, %85 ]
  %52 = getelementptr inbounds double, ptr %22, i64 %49
  %53 = load double, ptr %52, align 8, !tbaa !30
  store double %53, ptr %51, align 8, !tbaa !30
  %54 = getelementptr inbounds i32, ptr %16, i64 %49
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = load i64, ptr %50, align 8, !tbaa !34
  %57 = trunc i64 %56 to i32
  %58 = add i32 %57, 1
  %59 = icmp ult i32 %58, %55
  br i1 %59, label %60, label %85

60:                                               ; preds = %48
  %61 = load ptr, ptr %25, align 8, !tbaa !46
  %62 = zext i32 %58 to i64
  %63 = xor i32 %57, -1
  %64 = add i32 %55, %63
  %65 = add i32 %55, -2
  %66 = and i32 %64, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %80, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds float, ptr %24, i64 %62
  %70 = load float, ptr %69, align 4, !tbaa !95
  %71 = fpext float %70 to double
  %72 = getelementptr inbounds i32, ptr %61, i64 %62
  %73 = load i32, ptr %72, align 4, !tbaa !47
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds double, ptr %13, i64 %74
  %76 = load double, ptr %75, align 8, !tbaa !30
  %77 = tail call double @llvm.fmuladd.f64(double %71, double %76, double 0.000000e+00)
  %78 = fptrunc double %77 to float
  %79 = add nuw nsw i64 %62, 1
  br label %80

80:                                               ; preds = %68, %60
  %81 = phi float [ undef, %60 ], [ %78, %68 ]
  %82 = phi i64 [ %62, %60 ], [ %79, %68 ]
  %83 = phi float [ 0.000000e+00, %60 ], [ %78, %68 ]
  %84 = icmp eq i32 %65, %57
  br i1 %84, label %85, label %98

85:                                               ; preds = %80, %98, %48
  %86 = phi float [ 0.000000e+00, %48 ], [ %81, %80 ], [ %123, %98 ]
  %87 = fmul float %86, %3
  %88 = fpext float %87 to double
  %89 = fsub double %53, %88
  %90 = getelementptr inbounds float, ptr %24, i64 %56
  %91 = load float, ptr %90, align 4, !tbaa !95
  %92 = fpext float %91 to double
  %93 = fdiv double %89, %92
  store double %93, ptr %51, align 8, !tbaa !30
  %94 = add nuw nsw i64 %49, 1
  %95 = getelementptr inbounds double, ptr %51, i64 1
  %96 = getelementptr inbounds i64, ptr %50, i64 1
  %97 = icmp eq i64 %94, %26
  br i1 %97, label %38, label %48

98:                                               ; preds = %80, %98
  %99 = phi i64 [ %124, %98 ], [ %82, %80 ]
  %100 = phi float [ %123, %98 ], [ %83, %80 ]
  %101 = getelementptr inbounds float, ptr %24, i64 %99
  %102 = load float, ptr %101, align 4, !tbaa !95
  %103 = fpext float %102 to double
  %104 = getelementptr inbounds i32, ptr %61, i64 %99
  %105 = load i32, ptr %104, align 4, !tbaa !47
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds double, ptr %13, i64 %106
  %108 = load double, ptr %107, align 8, !tbaa !30
  %109 = fpext float %100 to double
  %110 = tail call double @llvm.fmuladd.f64(double %103, double %108, double %109)
  %111 = fptrunc double %110 to float
  %112 = add nuw nsw i64 %99, 1
  %113 = getelementptr inbounds float, ptr %24, i64 %112
  %114 = load float, ptr %113, align 4, !tbaa !95
  %115 = fpext float %114 to double
  %116 = getelementptr inbounds i32, ptr %61, i64 %112
  %117 = load i32, ptr %116, align 4, !tbaa !47
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds double, ptr %13, i64 %118
  %120 = load double, ptr %119, align 8, !tbaa !30
  %121 = fpext float %111 to double
  %122 = tail call double @llvm.fmuladd.f64(double %115, double %120, double %121)
  %123 = fptrunc double %122 to float
  %124 = add nuw nsw i64 %99, 2
  %125 = trunc i64 %124 to i32
  %126 = icmp eq i32 %55, %125
  br i1 %126, label %85, label %98

127:                                              ; preds = %149, %39
  %128 = phi ptr [ %11, %39 ], [ %169, %149 ]
  %129 = phi ptr [ %13, %39 ], [ %170, %149 ]
  %130 = icmp eq i32 %44, 0
  br i1 %130, label %139, label %131

131:                                              ; preds = %127
  %132 = load i64, ptr %128, align 8, !tbaa !34
  %133 = getelementptr inbounds float, ptr %43, i64 %132
  %134 = load float, ptr %133, align 4, !tbaa !95
  %135 = fpext float %134 to double
  %136 = fmul double %41, %135
  %137 = load double, ptr %129, align 8, !tbaa !30
  %138 = fmul double %137, %136
  store double %138, ptr %129, align 8, !tbaa !30
  br label %139

139:                                              ; preds = %127, %131
  %140 = add i32 %7, -1
  %141 = icmp sgt i32 %140, -1
  br i1 %141, label %142, label %614

142:                                              ; preds = %139
  %143 = zext i32 %140 to i64
  %144 = getelementptr inbounds double, ptr %13, i64 %143
  %145 = getelementptr inbounds i64, ptr %11, i64 %143
  %146 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %147 = load ptr, ptr %146, align 8
  %148 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  br label %173

149:                                              ; preds = %149, %46
  %150 = phi ptr [ %11, %46 ], [ %169, %149 ]
  %151 = phi ptr [ %13, %46 ], [ %170, %149 ]
  %152 = phi i32 [ 0, %46 ], [ %171, %149 ]
  %153 = load i64, ptr %150, align 8, !tbaa !34
  %154 = getelementptr inbounds float, ptr %43, i64 %153
  %155 = load float, ptr %154, align 4, !tbaa !95
  %156 = fpext float %155 to double
  %157 = fmul double %41, %156
  %158 = load double, ptr %151, align 8, !tbaa !30
  %159 = fmul double %158, %157
  store double %159, ptr %151, align 8, !tbaa !30
  %160 = getelementptr inbounds i64, ptr %150, i64 1
  %161 = getelementptr inbounds double, ptr %151, i64 1
  %162 = load i64, ptr %160, align 8, !tbaa !34
  %163 = getelementptr inbounds float, ptr %43, i64 %162
  %164 = load float, ptr %163, align 4, !tbaa !95
  %165 = fpext float %164 to double
  %166 = fmul double %41, %165
  %167 = load double, ptr %161, align 8, !tbaa !30
  %168 = fmul double %167, %166
  store double %168, ptr %161, align 8, !tbaa !30
  %169 = getelementptr inbounds i64, ptr %150, i64 2
  %170 = getelementptr inbounds double, ptr %151, i64 2
  %171 = add i32 %152, 2
  %172 = icmp eq i32 %171, %47
  br i1 %172, label %127, label %149

173:                                              ; preds = %142, %208
  %174 = phi i64 [ %143, %142 ], [ %219, %208 ]
  %175 = phi ptr [ %145, %142 ], [ %220, %208 ]
  %176 = phi ptr [ %144, %142 ], [ %221, %208 ]
  %177 = getelementptr inbounds i64, ptr %175, i64 1
  %178 = load i64, ptr %177, align 8, !tbaa !34
  %179 = trunc i64 %178 to i32
  %180 = getelementptr inbounds i32, ptr %16, i64 %174
  %181 = load i32, ptr %180, align 4, !tbaa !47
  %182 = icmp ult i32 %181, %179
  br i1 %182, label %183, label %208

183:                                              ; preds = %173
  %184 = load ptr, ptr %148, align 8, !tbaa !46
  %185 = zext i32 %181 to i64
  %186 = and i64 %178, 4294967295
  %187 = sub i64 %178, %185
  %188 = add nuw nsw i64 %185, 1
  %189 = and i64 %187, 1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %203, label %191

191:                                              ; preds = %183
  %192 = getelementptr inbounds float, ptr %147, i64 %185
  %193 = load float, ptr %192, align 4, !tbaa !95
  %194 = fpext float %193 to double
  %195 = getelementptr inbounds i32, ptr %184, i64 %185
  %196 = load i32, ptr %195, align 4, !tbaa !47
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds double, ptr %13, i64 %197
  %199 = load double, ptr %198, align 8, !tbaa !30
  %200 = tail call double @llvm.fmuladd.f64(double %194, double %199, double 0.000000e+00)
  %201 = fptrunc double %200 to float
  %202 = add nuw nsw i64 %185, 1
  br label %203

203:                                              ; preds = %191, %183
  %204 = phi float [ undef, %183 ], [ %201, %191 ]
  %205 = phi i64 [ %185, %183 ], [ %202, %191 ]
  %206 = phi float [ 0.000000e+00, %183 ], [ %201, %191 ]
  %207 = icmp eq i64 %186, %188
  br i1 %207, label %208, label %223

208:                                              ; preds = %203, %223, %173
  %209 = phi float [ 0.000000e+00, %173 ], [ %204, %203 ], [ %248, %223 ]
  %210 = fmul float %209, %3
  %211 = fpext float %210 to double
  %212 = load double, ptr %176, align 8, !tbaa !30
  %213 = fsub double %212, %211
  %214 = load i64, ptr %175, align 8, !tbaa !34
  %215 = getelementptr inbounds float, ptr %147, i64 %214
  %216 = load float, ptr %215, align 4, !tbaa !95
  %217 = fpext float %216 to double
  %218 = fdiv double %213, %217
  store double %218, ptr %176, align 8, !tbaa !30
  %219 = add nsw i64 %174, -1
  %220 = getelementptr inbounds i64, ptr %175, i64 -1
  %221 = getelementptr inbounds double, ptr %176, i64 -1
  %222 = icmp sgt i64 %174, 0
  br i1 %222, label %173, label %614

223:                                              ; preds = %203, %223
  %224 = phi i64 [ %249, %223 ], [ %205, %203 ]
  %225 = phi float [ %248, %223 ], [ %206, %203 ]
  %226 = getelementptr inbounds float, ptr %147, i64 %224
  %227 = load float, ptr %226, align 4, !tbaa !95
  %228 = fpext float %227 to double
  %229 = getelementptr inbounds i32, ptr %184, i64 %224
  %230 = load i32, ptr %229, align 4, !tbaa !47
  %231 = zext i32 %230 to i64
  %232 = getelementptr inbounds double, ptr %13, i64 %231
  %233 = load double, ptr %232, align 8, !tbaa !30
  %234 = fpext float %225 to double
  %235 = tail call double @llvm.fmuladd.f64(double %228, double %233, double %234)
  %236 = fptrunc double %235 to float
  %237 = add nuw nsw i64 %224, 1
  %238 = getelementptr inbounds float, ptr %147, i64 %237
  %239 = load float, ptr %238, align 4, !tbaa !95
  %240 = fpext float %239 to double
  %241 = getelementptr inbounds i32, ptr %184, i64 %237
  %242 = load i32, ptr %241, align 4, !tbaa !47
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds double, ptr %13, i64 %243
  %245 = load double, ptr %244, align 8, !tbaa !30
  %246 = fpext float %236 to double
  %247 = tail call double @llvm.fmuladd.f64(double %240, double %245, double %246)
  %248 = fptrunc double %247 to float
  %249 = add nuw nsw i64 %224, 2
  %250 = icmp eq i64 %249, %186
  br i1 %250, label %208, label %223

251:                                              ; preds = %377
  br i1 %18, label %614, label %252

252:                                              ; preds = %251
  %253 = fpext float %3 to double
  %254 = fsub double 2.000000e+00, %253
  %255 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %256 = load ptr, ptr %255, align 8, !tbaa !92
  %257 = and i32 %7, 1
  %258 = icmp eq i32 %7, 1
  br i1 %258, label %418, label %259

259:                                              ; preds = %252
  %260 = and i32 %7, -2
  br label %442

261:                                              ; preds = %28, %377
  %262 = phi i64 [ %37, %28 ], [ %271, %377 ]
  %263 = phi i64 [ 0, %28 ], [ %386, %377 ]
  %264 = phi ptr [ %11, %28 ], [ %270, %377 ]
  %265 = phi ptr [ %13, %28 ], [ %387, %377 ]
  %266 = getelementptr inbounds double, ptr %30, i64 %263
  %267 = load double, ptr %266, align 8, !tbaa !30
  store double %267, ptr %265, align 8, !tbaa !30
  %268 = add i64 %262, 1
  %269 = getelementptr inbounds i32, ptr %32, i64 %268
  %270 = getelementptr inbounds i64, ptr %264, i64 1
  %271 = load i64, ptr %270, align 8, !tbaa !34
  %272 = getelementptr inbounds i32, ptr %32, i64 %271
  %273 = ptrtoint ptr %272 to i64
  %274 = ptrtoint ptr %269 to i64
  %275 = sub i64 %273, %274
  %276 = lshr exact i64 %275, 2
  %277 = trunc i64 %276 to i32
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %344, label %279

279:                                              ; preds = %261, %332
  %280 = phi i32 [ %342, %332 ], [ %277, %261 ]
  %281 = phi ptr [ %343, %332 ], [ %269, %261 ]
  %282 = icmp ult i32 %280, 8
  br i1 %282, label %283, label %332

283:                                              ; preds = %279
  switch i32 %280, label %332 [
    i32 7, label %284
    i32 6, label %290
    i32 5, label %297
    i32 4, label %304
    i32 3, label %311
    i32 2, label %318
    i32 1, label %325
  ]

284:                                              ; preds = %283
  %285 = load i32, ptr %281, align 4, !tbaa !47
  %286 = zext i32 %285 to i64
  %287 = icmp ugt i64 %263, %286
  br i1 %287, label %288, label %344

288:                                              ; preds = %284
  %289 = getelementptr inbounds i32, ptr %281, i64 1
  br label %290

290:                                              ; preds = %283, %288
  %291 = phi ptr [ %289, %288 ], [ %281, %283 ]
  %292 = load i32, ptr %291, align 4, !tbaa !47
  %293 = zext i32 %292 to i64
  %294 = icmp ugt i64 %263, %293
  br i1 %294, label %295, label %344

295:                                              ; preds = %290
  %296 = getelementptr inbounds i32, ptr %291, i64 1
  br label %297

297:                                              ; preds = %283, %295
  %298 = phi ptr [ %296, %295 ], [ %281, %283 ]
  %299 = load i32, ptr %298, align 4, !tbaa !47
  %300 = zext i32 %299 to i64
  %301 = icmp ugt i64 %263, %300
  br i1 %301, label %302, label %344

302:                                              ; preds = %297
  %303 = getelementptr inbounds i32, ptr %298, i64 1
  br label %304

304:                                              ; preds = %283, %302
  %305 = phi ptr [ %303, %302 ], [ %281, %283 ]
  %306 = load i32, ptr %305, align 4, !tbaa !47
  %307 = zext i32 %306 to i64
  %308 = icmp ugt i64 %263, %307
  br i1 %308, label %309, label %344

309:                                              ; preds = %304
  %310 = getelementptr inbounds i32, ptr %305, i64 1
  br label %311

311:                                              ; preds = %283, %309
  %312 = phi ptr [ %310, %309 ], [ %281, %283 ]
  %313 = load i32, ptr %312, align 4, !tbaa !47
  %314 = zext i32 %313 to i64
  %315 = icmp ugt i64 %263, %314
  br i1 %315, label %316, label %344

316:                                              ; preds = %311
  %317 = getelementptr inbounds i32, ptr %312, i64 1
  br label %318

318:                                              ; preds = %283, %316
  %319 = phi ptr [ %317, %316 ], [ %281, %283 ]
  %320 = load i32, ptr %319, align 4, !tbaa !47
  %321 = zext i32 %320 to i64
  %322 = icmp ugt i64 %263, %321
  br i1 %322, label %323, label %344

323:                                              ; preds = %318
  %324 = getelementptr inbounds i32, ptr %319, i64 1
  br label %325

325:                                              ; preds = %283, %323
  %326 = phi ptr [ %324, %323 ], [ %281, %283 ]
  %327 = load i32, ptr %326, align 4, !tbaa !47
  %328 = zext i32 %327 to i64
  %329 = icmp ugt i64 %263, %328
  %330 = zext i1 %329 to i64
  %331 = getelementptr inbounds i32, ptr %326, i64 %330
  br label %344

332:                                              ; preds = %283, %279
  %333 = lshr i32 %280, 1
  %334 = zext i32 %333 to i64
  %335 = getelementptr inbounds i32, ptr %281, i64 %334
  %336 = load i32, ptr %335, align 4, !tbaa !47
  %337 = zext i32 %336 to i64
  %338 = icmp ugt i64 %263, %337
  %339 = getelementptr inbounds i32, ptr %335, i64 1
  %340 = xor i32 %333, -1
  %341 = add i32 %280, %340
  %342 = select i1 %338, i32 %341, i32 %333
  %343 = select i1 %338, ptr %339, ptr %281
  br label %279

344:                                              ; preds = %261, %284, %290, %297, %304, %311, %318, %325
  %345 = phi ptr [ %269, %261 ], [ %281, %284 ], [ %291, %290 ], [ %298, %297 ], [ %305, %304 ], [ %312, %311 ], [ %319, %318 ], [ %331, %325 ]
  %346 = ptrtoint ptr %345 to i64
  %347 = sub i64 %346, %33
  %348 = lshr exact i64 %347, 2
  %349 = trunc i64 %348 to i32
  %350 = trunc i64 %262 to i32
  %351 = add i32 %350, 1
  %352 = icmp ult i32 %351, %349
  br i1 %352, label %353, label %377

353:                                              ; preds = %344
  %354 = zext i32 %351 to i64
  %355 = xor i32 %350, -1
  %356 = add i32 %355, %349
  %357 = add i32 %349, -2
  %358 = and i32 %356, 1
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %372, label %360

360:                                              ; preds = %353
  %361 = getelementptr inbounds float, ptr %35, i64 %354
  %362 = load float, ptr %361, align 4, !tbaa !95
  %363 = fpext float %362 to double
  %364 = getelementptr inbounds i32, ptr %32, i64 %354
  %365 = load i32, ptr %364, align 4, !tbaa !47
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds double, ptr %13, i64 %366
  %368 = load double, ptr %367, align 8, !tbaa !30
  %369 = tail call double @llvm.fmuladd.f64(double %363, double %368, double 0.000000e+00)
  %370 = fptrunc double %369 to float
  %371 = add nuw nsw i64 %354, 1
  br label %372

372:                                              ; preds = %360, %353
  %373 = phi float [ undef, %353 ], [ %370, %360 ]
  %374 = phi i64 [ %354, %353 ], [ %371, %360 ]
  %375 = phi float [ 0.000000e+00, %353 ], [ %370, %360 ]
  %376 = icmp eq i32 %357, %350
  br i1 %376, label %377, label %389

377:                                              ; preds = %372, %389, %344
  %378 = phi float [ 0.000000e+00, %344 ], [ %373, %372 ], [ %414, %389 ]
  %379 = fmul float %378, %3
  %380 = fpext float %379 to double
  %381 = fsub double %267, %380
  %382 = getelementptr inbounds float, ptr %35, i64 %262
  %383 = load float, ptr %382, align 4, !tbaa !95
  %384 = fpext float %383 to double
  %385 = fdiv double %381, %384
  store double %385, ptr %265, align 8, !tbaa !30
  %386 = add nuw nsw i64 %263, 1
  %387 = getelementptr inbounds double, ptr %265, i64 1
  %388 = icmp eq i64 %386, %36
  br i1 %388, label %251, label %261

389:                                              ; preds = %372, %389
  %390 = phi i64 [ %415, %389 ], [ %374, %372 ]
  %391 = phi float [ %414, %389 ], [ %375, %372 ]
  %392 = getelementptr inbounds float, ptr %35, i64 %390
  %393 = load float, ptr %392, align 4, !tbaa !95
  %394 = fpext float %393 to double
  %395 = getelementptr inbounds i32, ptr %32, i64 %390
  %396 = load i32, ptr %395, align 4, !tbaa !47
  %397 = zext i32 %396 to i64
  %398 = getelementptr inbounds double, ptr %13, i64 %397
  %399 = load double, ptr %398, align 8, !tbaa !30
  %400 = fpext float %391 to double
  %401 = tail call double @llvm.fmuladd.f64(double %394, double %399, double %400)
  %402 = fptrunc double %401 to float
  %403 = add nuw nsw i64 %390, 1
  %404 = getelementptr inbounds float, ptr %35, i64 %403
  %405 = load float, ptr %404, align 4, !tbaa !95
  %406 = fpext float %405 to double
  %407 = getelementptr inbounds i32, ptr %32, i64 %403
  %408 = load i32, ptr %407, align 4, !tbaa !47
  %409 = zext i32 %408 to i64
  %410 = getelementptr inbounds double, ptr %13, i64 %409
  %411 = load double, ptr %410, align 8, !tbaa !30
  %412 = fpext float %402 to double
  %413 = tail call double @llvm.fmuladd.f64(double %406, double %411, double %412)
  %414 = fptrunc double %413 to float
  %415 = add nuw nsw i64 %390, 2
  %416 = trunc i64 %415 to i32
  %417 = icmp eq i32 %416, %349
  br i1 %417, label %377, label %389

418:                                              ; preds = %442, %252
  %419 = phi ptr [ %11, %252 ], [ %462, %442 ]
  %420 = phi ptr [ %13, %252 ], [ %463, %442 ]
  %421 = icmp eq i32 %257, 0
  br i1 %421, label %430, label %422

422:                                              ; preds = %418
  %423 = load i64, ptr %419, align 8, !tbaa !34
  %424 = getelementptr inbounds float, ptr %256, i64 %423
  %425 = load float, ptr %424, align 4, !tbaa !95
  %426 = fpext float %425 to double
  %427 = fmul double %254, %426
  %428 = load double, ptr %420, align 8, !tbaa !30
  %429 = fmul double %428, %427
  store double %429, ptr %420, align 8, !tbaa !30
  br label %430

430:                                              ; preds = %418, %422
  %431 = add i32 %7, -1
  %432 = icmp sgt i32 %431, -1
  br i1 %432, label %433, label %614

433:                                              ; preds = %430
  %434 = zext i32 %431 to i64
  %435 = getelementptr inbounds double, ptr %13, i64 %434
  %436 = getelementptr inbounds i64, ptr %11, i64 %434
  %437 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %438 = load ptr, ptr %437, align 8, !tbaa !46
  %439 = ptrtoint ptr %438 to i64
  %440 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %441 = load ptr, ptr %440, align 8
  br label %466

442:                                              ; preds = %442, %259
  %443 = phi ptr [ %11, %259 ], [ %462, %442 ]
  %444 = phi ptr [ %13, %259 ], [ %463, %442 ]
  %445 = phi i32 [ 0, %259 ], [ %464, %442 ]
  %446 = load i64, ptr %443, align 8, !tbaa !34
  %447 = getelementptr inbounds float, ptr %256, i64 %446
  %448 = load float, ptr %447, align 4, !tbaa !95
  %449 = fpext float %448 to double
  %450 = fmul double %254, %449
  %451 = load double, ptr %444, align 8, !tbaa !30
  %452 = fmul double %451, %450
  store double %452, ptr %444, align 8, !tbaa !30
  %453 = getelementptr inbounds i64, ptr %443, i64 1
  %454 = getelementptr inbounds double, ptr %444, i64 1
  %455 = load i64, ptr %453, align 8, !tbaa !34
  %456 = getelementptr inbounds float, ptr %256, i64 %455
  %457 = load float, ptr %456, align 4, !tbaa !95
  %458 = fpext float %457 to double
  %459 = fmul double %254, %458
  %460 = load double, ptr %454, align 8, !tbaa !30
  %461 = fmul double %460, %459
  store double %461, ptr %454, align 8, !tbaa !30
  %462 = getelementptr inbounds i64, ptr %443, i64 2
  %463 = getelementptr inbounds double, ptr %444, i64 2
  %464 = add i32 %445, 2
  %465 = icmp eq i32 %464, %260
  br i1 %465, label %418, label %442

466:                                              ; preds = %433, %572
  %467 = phi ptr [ %436, %433 ], [ %583, %572 ]
  %468 = phi ptr [ %435, %433 ], [ %584, %572 ]
  %469 = phi i32 [ %431, %433 ], [ %582, %572 ]
  %470 = getelementptr inbounds i64, ptr %467, i64 1
  %471 = load i64, ptr %470, align 8, !tbaa !34
  %472 = trunc i64 %471 to i32
  %473 = load i64, ptr %467, align 8, !tbaa !34
  %474 = add i64 %473, 1
  %475 = getelementptr inbounds i32, ptr %438, i64 %474
  %476 = and i64 %471, 4294967295
  %477 = getelementptr inbounds i32, ptr %438, i64 %476
  %478 = ptrtoint ptr %477 to i64
  %479 = ptrtoint ptr %475 to i64
  %480 = sub i64 %478, %479
  %481 = lshr exact i64 %480, 2
  %482 = trunc i64 %481 to i32
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %541, label %484

484:                                              ; preds = %466, %530
  %485 = phi i32 [ %539, %530 ], [ %482, %466 ]
  %486 = phi ptr [ %540, %530 ], [ %475, %466 ]
  %487 = icmp ult i32 %485, 8
  br i1 %487, label %488, label %530

488:                                              ; preds = %484
  switch i32 %485, label %530 [
    i32 7, label %489
    i32 6, label %494
    i32 5, label %500
    i32 4, label %506
    i32 3, label %512
    i32 2, label %518
    i32 1, label %524
  ]

489:                                              ; preds = %488
  %490 = load i32, ptr %486, align 4, !tbaa !47
  %491 = icmp ult i32 %490, %469
  br i1 %491, label %492, label %541

492:                                              ; preds = %489
  %493 = getelementptr inbounds i32, ptr %486, i64 1
  br label %494

494:                                              ; preds = %488, %492
  %495 = phi ptr [ %493, %492 ], [ %486, %488 ]
  %496 = load i32, ptr %495, align 4, !tbaa !47
  %497 = icmp ult i32 %496, %469
  br i1 %497, label %498, label %541

498:                                              ; preds = %494
  %499 = getelementptr inbounds i32, ptr %495, i64 1
  br label %500

500:                                              ; preds = %488, %498
  %501 = phi ptr [ %499, %498 ], [ %486, %488 ]
  %502 = load i32, ptr %501, align 4, !tbaa !47
  %503 = icmp ult i32 %502, %469
  br i1 %503, label %504, label %541

504:                                              ; preds = %500
  %505 = getelementptr inbounds i32, ptr %501, i64 1
  br label %506

506:                                              ; preds = %488, %504
  %507 = phi ptr [ %505, %504 ], [ %486, %488 ]
  %508 = load i32, ptr %507, align 4, !tbaa !47
  %509 = icmp ult i32 %508, %469
  br i1 %509, label %510, label %541

510:                                              ; preds = %506
  %511 = getelementptr inbounds i32, ptr %507, i64 1
  br label %512

512:                                              ; preds = %488, %510
  %513 = phi ptr [ %511, %510 ], [ %486, %488 ]
  %514 = load i32, ptr %513, align 4, !tbaa !47
  %515 = icmp ult i32 %514, %469
  br i1 %515, label %516, label %541

516:                                              ; preds = %512
  %517 = getelementptr inbounds i32, ptr %513, i64 1
  br label %518

518:                                              ; preds = %488, %516
  %519 = phi ptr [ %517, %516 ], [ %486, %488 ]
  %520 = load i32, ptr %519, align 4, !tbaa !47
  %521 = icmp ult i32 %520, %469
  br i1 %521, label %522, label %541

522:                                              ; preds = %518
  %523 = getelementptr inbounds i32, ptr %519, i64 1
  br label %524

524:                                              ; preds = %488, %522
  %525 = phi ptr [ %523, %522 ], [ %486, %488 ]
  %526 = load i32, ptr %525, align 4, !tbaa !47
  %527 = icmp ult i32 %526, %469
  %528 = zext i1 %527 to i64
  %529 = getelementptr inbounds i32, ptr %525, i64 %528
  br label %541

530:                                              ; preds = %488, %484
  %531 = lshr i32 %485, 1
  %532 = zext i32 %531 to i64
  %533 = getelementptr inbounds i32, ptr %486, i64 %532
  %534 = load i32, ptr %533, align 4, !tbaa !47
  %535 = icmp ult i32 %534, %469
  %536 = getelementptr inbounds i32, ptr %533, i64 1
  %537 = xor i32 %531, -1
  %538 = add i32 %485, %537
  %539 = select i1 %535, i32 %538, i32 %531
  %540 = select i1 %535, ptr %536, ptr %486
  br label %484

541:                                              ; preds = %466, %489, %494, %500, %506, %512, %518, %524
  %542 = phi ptr [ %475, %466 ], [ %486, %489 ], [ %495, %494 ], [ %501, %500 ], [ %507, %506 ], [ %513, %512 ], [ %519, %518 ], [ %529, %524 ]
  %543 = ptrtoint ptr %542 to i64
  %544 = sub i64 %543, %439
  %545 = lshr exact i64 %544, 2
  %546 = trunc i64 %545 to i32
  %547 = icmp ult i32 %546, %472
  br i1 %547, label %548, label %572

548:                                              ; preds = %541
  %549 = and i64 %545, 4294967295
  %550 = and i64 %471, 4294967295
  %551 = sub i64 %471, %545
  %552 = add nuw nsw i64 %549, 1
  %553 = and i64 %551, 1
  %554 = icmp eq i64 %553, 0
  br i1 %554, label %567, label %555

555:                                              ; preds = %548
  %556 = getelementptr inbounds float, ptr %441, i64 %549
  %557 = load float, ptr %556, align 4, !tbaa !95
  %558 = fpext float %557 to double
  %559 = getelementptr inbounds i32, ptr %438, i64 %549
  %560 = load i32, ptr %559, align 4, !tbaa !47
  %561 = zext i32 %560 to i64
  %562 = getelementptr inbounds double, ptr %13, i64 %561
  %563 = load double, ptr %562, align 8, !tbaa !30
  %564 = tail call double @llvm.fmuladd.f64(double %558, double %563, double 0.000000e+00)
  %565 = fptrunc double %564 to float
  %566 = add nuw nsw i64 %549, 1
  br label %567

567:                                              ; preds = %555, %548
  %568 = phi float [ undef, %548 ], [ %565, %555 ]
  %569 = phi i64 [ %549, %548 ], [ %566, %555 ]
  %570 = phi float [ 0.000000e+00, %548 ], [ %565, %555 ]
  %571 = icmp eq i64 %476, %552
  br i1 %571, label %572, label %586

572:                                              ; preds = %567, %586, %541
  %573 = phi float [ 0.000000e+00, %541 ], [ %568, %567 ], [ %611, %586 ]
  %574 = fmul float %573, %3
  %575 = fpext float %574 to double
  %576 = load double, ptr %468, align 8, !tbaa !30
  %577 = fsub double %576, %575
  %578 = getelementptr inbounds float, ptr %441, i64 %473
  %579 = load float, ptr %578, align 4, !tbaa !95
  %580 = fpext float %579 to double
  %581 = fdiv double %577, %580
  store double %581, ptr %468, align 8, !tbaa !30
  %582 = add nsw i32 %469, -1
  %583 = getelementptr inbounds i64, ptr %467, i64 -1
  %584 = getelementptr inbounds double, ptr %468, i64 -1
  %585 = icmp sgt i32 %469, 0
  br i1 %585, label %466, label %614

586:                                              ; preds = %567, %586
  %587 = phi i64 [ %612, %586 ], [ %569, %567 ]
  %588 = phi float [ %611, %586 ], [ %570, %567 ]
  %589 = getelementptr inbounds float, ptr %441, i64 %587
  %590 = load float, ptr %589, align 4, !tbaa !95
  %591 = fpext float %590 to double
  %592 = getelementptr inbounds i32, ptr %438, i64 %587
  %593 = load i32, ptr %592, align 4, !tbaa !47
  %594 = zext i32 %593 to i64
  %595 = getelementptr inbounds double, ptr %13, i64 %594
  %596 = load double, ptr %595, align 8, !tbaa !30
  %597 = fpext float %588 to double
  %598 = tail call double @llvm.fmuladd.f64(double %591, double %596, double %597)
  %599 = fptrunc double %598 to float
  %600 = add nuw nsw i64 %587, 1
  %601 = getelementptr inbounds float, ptr %441, i64 %600
  %602 = load float, ptr %601, align 4, !tbaa !95
  %603 = fpext float %602 to double
  %604 = getelementptr inbounds i32, ptr %438, i64 %600
  %605 = load i32, ptr %604, align 4, !tbaa !47
  %606 = zext i32 %605 to i64
  %607 = getelementptr inbounds double, ptr %13, i64 %606
  %608 = load double, ptr %607, align 8, !tbaa !30
  %609 = fpext float %599 to double
  %610 = tail call double @llvm.fmuladd.f64(double %603, double %608, double %609)
  %611 = fptrunc double %610 to float
  %612 = add nuw nsw i64 %587, 2
  %613 = icmp eq i64 %612, %550
  br i1 %613, label %572, label %586

614:                                              ; preds = %208, %572, %27, %251, %19, %38, %139, %430
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE16precondition_SORIdEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %65, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !53
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %18 = fpext float %3 to double
  %19 = load ptr, ptr %17, align 8, !tbaa !92
  %20 = zext i32 %9 to i64
  %21 = load i64, ptr %15, align 8, !tbaa !34
  br label %22

22:                                               ; preds = %36, %11
  %23 = phi i64 [ %21, %11 ], [ %29, %36 ]
  %24 = phi i64 [ 0, %11 ], [ %27, %36 ]
  %25 = getelementptr inbounds double, ptr %13, i64 %24
  %26 = load double, ptr %25, align 8, !tbaa !30
  %27 = add nuw nsw i64 %24, 1
  %28 = getelementptr inbounds i64, ptr %15, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %23, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %22
  %33 = trunc i64 %23 to i32
  %34 = load ptr, ptr %16, align 8, !tbaa !46
  %35 = load ptr, ptr %17, align 8
  br label %44

36:                                               ; preds = %60, %22
  %37 = phi double [ %26, %22 ], [ %61, %60 ]
  %38 = fmul double %37, %18
  %39 = getelementptr inbounds float, ptr %19, i64 %23
  %40 = load float, ptr %39, align 4, !tbaa !95
  %41 = fpext float %40 to double
  %42 = fdiv double %38, %41
  store double %42, ptr %25, align 8, !tbaa !30
  %43 = icmp eq i64 %27, %20
  br i1 %43, label %65, label %22

44:                                               ; preds = %60, %32
  %45 = phi i64 [ %30, %32 ], [ %63, %60 ]
  %46 = phi i32 [ %33, %32 ], [ %62, %60 ]
  %47 = phi double [ %26, %32 ], [ %61, %60 ]
  %48 = getelementptr inbounds i32, ptr %34, i64 %45
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = zext i32 %49 to i64
  %51 = icmp ugt i64 %24, %50
  br i1 %51, label %52, label %60

52:                                               ; preds = %44
  %53 = getelementptr inbounds float, ptr %35, i64 %45
  %54 = load float, ptr %53, align 4, !tbaa !95
  %55 = fpext float %54 to double
  %56 = getelementptr inbounds double, ptr %13, i64 %50
  %57 = load double, ptr %56, align 8, !tbaa !30
  %58 = fneg double %55
  %59 = tail call double @llvm.fmuladd.f64(double %58, double %57, double %47)
  br label %60

60:                                               ; preds = %52, %44
  %61 = phi double [ %59, %52 ], [ %47, %44 ]
  %62 = add i32 %46, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %29, %63
  br i1 %64, label %44, label %36

65:                                               ; preds = %36, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE3SORIdEEvRNS_6VectorIT_EEf(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, float noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !53
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %16 = fpext float %2 to double
  %17 = load ptr, ptr %15, align 8, !tbaa !92
  %18 = zext i32 %7 to i64
  %19 = load i64, ptr %13, align 8, !tbaa !34
  br label %21

20:                                               ; preds = %35, %3
  ret void

21:                                               ; preds = %9, %35
  %22 = phi i64 [ %19, %9 ], [ %28, %35 ]
  %23 = phi i64 [ 0, %9 ], [ %26, %35 ]
  %24 = getelementptr inbounds double, ptr %11, i64 %23
  %25 = load double, ptr %24, align 8, !tbaa !30
  %26 = add nuw nsw i64 %23, 1
  %27 = getelementptr inbounds i64, ptr %13, i64 %26
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = and i64 %22, 4294967295
  %30 = icmp ugt i64 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %21
  %32 = trunc i64 %22 to i32
  %33 = load ptr, ptr %14, align 8, !tbaa !46
  %34 = load ptr, ptr %15, align 8
  br label %43

35:                                               ; preds = %59, %21
  %36 = phi double [ %25, %21 ], [ %60, %59 ]
  %37 = fmul double %36, %16
  %38 = getelementptr inbounds float, ptr %17, i64 %22
  %39 = load float, ptr %38, align 4, !tbaa !95
  %40 = fpext float %39 to double
  %41 = fdiv double %37, %40
  store double %41, ptr %24, align 8, !tbaa !30
  %42 = icmp eq i64 %26, %18
  br i1 %42, label %20, label %21

43:                                               ; preds = %31, %59
  %44 = phi i64 [ %29, %31 ], [ %62, %59 ]
  %45 = phi i32 [ %32, %31 ], [ %61, %59 ]
  %46 = phi double [ %25, %31 ], [ %60, %59 ]
  %47 = getelementptr inbounds i32, ptr %33, i64 %44
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %23, %49
  br i1 %50, label %51, label %59

51:                                               ; preds = %43
  %52 = getelementptr inbounds float, ptr %34, i64 %44
  %53 = load float, ptr %52, align 4, !tbaa !95
  %54 = fpext float %53 to double
  %55 = getelementptr inbounds double, ptr %11, i64 %49
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = fneg double %54
  %58 = tail call double @llvm.fmuladd.f64(double %57, double %56, double %46)
  br label %59

59:                                               ; preds = %51, %43
  %60 = phi double [ %58, %51 ], [ %46, %43 ]
  %61 = add i32 %45, 1
  %62 = zext i32 %61 to i64
  %63 = icmp ugt i64 %28, %62
  br i1 %63, label %43, label %35
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE17precondition_TSORIdEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %67, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !53
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %18 = fpext float %3 to double
  %19 = load ptr, ptr %17, align 8, !tbaa !92
  %20 = zext i32 %9 to i64
  br label %21

21:                                               ; preds = %38, %11
  %22 = phi i64 [ %20, %11 ], [ %23, %38 ]
  %23 = add nsw i64 %22, -1
  %24 = trunc i64 %23 to i32
  %25 = and i64 %23, 4294967295
  %26 = getelementptr inbounds double, ptr %13, i64 %25
  %27 = load double, ptr %26, align 8, !tbaa !30
  %28 = getelementptr inbounds i64, ptr %15, i64 %25
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = getelementptr inbounds i64, ptr %15, i64 %22
  %31 = load i64, ptr %30, align 8, !tbaa !34
  %32 = and i64 %29, 4294967295
  %33 = icmp ugt i64 %31, %32
  br i1 %33, label %34, label %38

34:                                               ; preds = %21
  %35 = trunc i64 %29 to i32
  %36 = load ptr, ptr %16, align 8, !tbaa !46
  %37 = load ptr, ptr %17, align 8
  br label %46

38:                                               ; preds = %62, %21
  %39 = phi double [ %27, %21 ], [ %63, %62 ]
  %40 = fmul double %39, %18
  %41 = getelementptr inbounds float, ptr %19, i64 %29
  %42 = load float, ptr %41, align 4, !tbaa !95
  %43 = fpext float %42 to double
  %44 = fdiv double %40, %43
  store double %44, ptr %26, align 8, !tbaa !30
  %45 = icmp eq i32 %24, 0
  br i1 %45, label %67, label %21

46:                                               ; preds = %62, %34
  %47 = phi i64 [ %32, %34 ], [ %65, %62 ]
  %48 = phi i32 [ %35, %34 ], [ %64, %62 ]
  %49 = phi double [ %27, %34 ], [ %63, %62 ]
  %50 = getelementptr inbounds i32, ptr %36, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %24
  br i1 %52, label %53, label %62

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %37, i64 %47
  %55 = load float, ptr %54, align 4, !tbaa !95
  %56 = fpext float %55 to double
  %57 = zext i32 %51 to i64
  %58 = getelementptr inbounds double, ptr %13, i64 %57
  %59 = load double, ptr %58, align 8, !tbaa !30
  %60 = fneg double %56
  %61 = tail call double @llvm.fmuladd.f64(double %60, double %59, double %49)
  br label %62

62:                                               ; preds = %53, %46
  %63 = phi double [ %61, %53 ], [ %49, %46 ]
  %64 = add i32 %48, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %31, %65
  br i1 %66, label %46, label %38

67:                                               ; preds = %38, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE4TSORIdEEvRNS_6VectorIT_EEf(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, float noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !53
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %16 = fpext float %2 to double
  %17 = load ptr, ptr %15, align 8, !tbaa !92
  %18 = zext i32 %7 to i64
  br label %20

19:                                               ; preds = %37, %3
  ret void

20:                                               ; preds = %9, %37
  %21 = phi i64 [ %18, %9 ], [ %22, %37 ]
  %22 = add nsw i64 %21, -1
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  %25 = getelementptr inbounds double, ptr %11, i64 %24
  %26 = load double, ptr %25, align 8, !tbaa !30
  %27 = getelementptr inbounds i64, ptr %13, i64 %24
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = getelementptr inbounds i64, ptr %13, i64 %21
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %28, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %20
  %34 = trunc i64 %28 to i32
  %35 = load ptr, ptr %14, align 8, !tbaa !46
  %36 = load ptr, ptr %15, align 8
  br label %45

37:                                               ; preds = %61, %20
  %38 = phi double [ %26, %20 ], [ %62, %61 ]
  %39 = fmul double %38, %16
  %40 = getelementptr inbounds float, ptr %17, i64 %28
  %41 = load float, ptr %40, align 4, !tbaa !95
  %42 = fpext float %41 to double
  %43 = fdiv double %39, %42
  store double %43, ptr %25, align 8, !tbaa !30
  %44 = icmp eq i32 %23, 0
  br i1 %44, label %19, label %20

45:                                               ; preds = %33, %61
  %46 = phi i64 [ %31, %33 ], [ %64, %61 ]
  %47 = phi i32 [ %34, %33 ], [ %63, %61 ]
  %48 = phi double [ %26, %33 ], [ %62, %61 ]
  %49 = getelementptr inbounds i32, ptr %35, i64 %46
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %23
  br i1 %51, label %52, label %61

52:                                               ; preds = %45
  %53 = getelementptr inbounds float, ptr %36, i64 %46
  %54 = load float, ptr %53, align 4, !tbaa !95
  %55 = fpext float %54 to double
  %56 = zext i32 %50 to i64
  %57 = getelementptr inbounds double, ptr %11, i64 %56
  %58 = load double, ptr %57, align 8, !tbaa !30
  %59 = fneg double %55
  %60 = tail call double @llvm.fmuladd.f64(double %59, double %58, double %48)
  br label %61

61:                                               ; preds = %45, %52
  %62 = phi double [ %60, %52 ], [ %48, %45 ]
  %63 = add i32 %47, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %30, %64
  br i1 %65, label %45, label %37
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE19precondition_JacobiIdEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !56
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !53
  %9 = ptrtoint ptr %8 to i64
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !53
  %12 = ptrtoint ptr %11 to i64
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = fpext float %3 to double
  %18 = fcmp une float %3, 1.000000e+00
  %19 = icmp eq i32 %6, 0
  br i1 %18, label %104, label %20

20:                                               ; preds = %4
  br i1 %19, label %244, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !92
  %24 = zext i32 %6 to i64
  %25 = icmp ult i32 %6, 4
  %26 = sub i64 %9, %12
  %27 = icmp ult i64 %26, 32
  %28 = select i1 %25, i1 true, i1 %27
  br i1 %28, label %78, label %29

29:                                               ; preds = %21
  %30 = and i64 %24, 4294967292
  %31 = trunc i64 %30 to i32
  %32 = shl nuw nsw i64 %30, 3
  %33 = getelementptr i8, ptr %16, i64 %32
  %34 = shl nuw nsw i64 %30, 3
  %35 = getelementptr i8, ptr %11, i64 %34
  %36 = shl nuw nsw i64 %30, 3
  %37 = getelementptr i8, ptr %8, i64 %36
  br label %38

38:                                               ; preds = %38, %29
  %39 = phi i64 [ 0, %29 ], [ %74, %38 ]
  %40 = shl i64 %39, 3
  %41 = getelementptr i8, ptr %16, i64 %40
  %42 = shl i64 %39, 3
  %43 = or i64 %42, 8
  %44 = getelementptr i8, ptr %16, i64 %43
  %45 = shl i64 %39, 3
  %46 = or i64 %45, 16
  %47 = getelementptr i8, ptr %16, i64 %46
  %48 = shl i64 %39, 3
  %49 = or i64 %48, 24
  %50 = getelementptr i8, ptr %16, i64 %49
  %51 = shl i64 %39, 3
  %52 = getelementptr i8, ptr %11, i64 %51
  %53 = shl i64 %39, 3
  %54 = getelementptr i8, ptr %8, i64 %53
  %55 = load <4 x double>, ptr %52, align 8, !tbaa !30
  %56 = load i64, ptr %41, align 8, !tbaa !34
  %57 = load i64, ptr %44, align 8, !tbaa !34
  %58 = load i64, ptr %47, align 8, !tbaa !34
  %59 = load i64, ptr %50, align 8, !tbaa !34
  %60 = getelementptr inbounds float, ptr %23, i64 %56
  %61 = getelementptr inbounds float, ptr %23, i64 %57
  %62 = getelementptr inbounds float, ptr %23, i64 %58
  %63 = getelementptr inbounds float, ptr %23, i64 %59
  %64 = load float, ptr %60, align 4, !tbaa !95
  %65 = load float, ptr %61, align 4, !tbaa !95
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = load float, ptr %63, align 4, !tbaa !95
  %68 = insertelement <4 x float> poison, float %64, i64 0
  %69 = insertelement <4 x float> %68, float %65, i64 1
  %70 = insertelement <4 x float> %69, float %66, i64 2
  %71 = insertelement <4 x float> %70, float %67, i64 3
  %72 = fpext <4 x float> %71 to <4 x double>
  %73 = fdiv <4 x double> %55, %72
  store <4 x double> %73, ptr %54, align 8, !tbaa !30
  %74 = add nuw i64 %39, 4
  %75 = icmp eq i64 %74, %30
  br i1 %75, label %76, label %38, !llvm.loop !208

76:                                               ; preds = %38
  %77 = icmp eq i64 %30, %24
  br i1 %77, label %244, label %78

78:                                               ; preds = %21, %76
  %79 = phi i32 [ 0, %21 ], [ %31, %76 ]
  %80 = phi ptr [ %16, %21 ], [ %33, %76 ]
  %81 = phi ptr [ %11, %21 ], [ %35, %76 ]
  %82 = phi ptr [ %8, %21 ], [ %37, %76 ]
  %83 = sub i32 %6, %79
  %84 = add i32 %79, 1
  %85 = and i32 %83, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %98, label %87

87:                                               ; preds = %78
  %88 = load double, ptr %81, align 8, !tbaa !30
  %89 = load i64, ptr %80, align 8, !tbaa !34
  %90 = getelementptr inbounds float, ptr %23, i64 %89
  %91 = load float, ptr %90, align 4, !tbaa !95
  %92 = fpext float %91 to double
  %93 = fdiv double %88, %92
  store double %93, ptr %82, align 8, !tbaa !30
  %94 = add nuw i32 %79, 1
  %95 = getelementptr inbounds double, ptr %82, i64 1
  %96 = getelementptr inbounds double, ptr %81, i64 1
  %97 = getelementptr inbounds i64, ptr %80, i64 1
  br label %98

98:                                               ; preds = %87, %78
  %99 = phi i32 [ %79, %78 ], [ %94, %87 ]
  %100 = phi ptr [ %80, %78 ], [ %97, %87 ]
  %101 = phi ptr [ %81, %78 ], [ %96, %87 ]
  %102 = phi ptr [ %82, %78 ], [ %95, %87 ]
  %103 = icmp eq i32 %6, %84
  br i1 %103, label %244, label %219

104:                                              ; preds = %4
  br i1 %19, label %244, label %105

105:                                              ; preds = %104
  %106 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %107 = load ptr, ptr %106, align 8, !tbaa !92
  %108 = zext i32 %6 to i64
  %109 = icmp ult i32 %6, 4
  %110 = sub i64 %9, %12
  %111 = icmp ult i64 %110, 32
  %112 = select i1 %109, i1 true, i1 %111
  br i1 %112, label %165, label %113

113:                                              ; preds = %105
  %114 = and i64 %108, 4294967292
  %115 = trunc i64 %114 to i32
  %116 = shl nuw nsw i64 %114, 3
  %117 = getelementptr i8, ptr %16, i64 %116
  %118 = shl nuw nsw i64 %114, 3
  %119 = getelementptr i8, ptr %11, i64 %118
  %120 = shl nuw nsw i64 %114, 3
  %121 = getelementptr i8, ptr %8, i64 %120
  %122 = insertelement <4 x double> poison, double %17, i64 0
  %123 = shufflevector <4 x double> %122, <4 x double> poison, <4 x i32> zeroinitializer
  br label %124

124:                                              ; preds = %124, %113
  %125 = phi i64 [ 0, %113 ], [ %161, %124 ]
  %126 = shl i64 %125, 3
  %127 = getelementptr i8, ptr %16, i64 %126
  %128 = shl i64 %125, 3
  %129 = or i64 %128, 8
  %130 = getelementptr i8, ptr %16, i64 %129
  %131 = shl i64 %125, 3
  %132 = or i64 %131, 16
  %133 = getelementptr i8, ptr %16, i64 %132
  %134 = shl i64 %125, 3
  %135 = or i64 %134, 24
  %136 = getelementptr i8, ptr %16, i64 %135
  %137 = shl i64 %125, 3
  %138 = getelementptr i8, ptr %11, i64 %137
  %139 = shl i64 %125, 3
  %140 = getelementptr i8, ptr %8, i64 %139
  %141 = load <4 x double>, ptr %138, align 8, !tbaa !30
  %142 = fmul <4 x double> %141, %123
  %143 = load i64, ptr %127, align 8, !tbaa !34
  %144 = load i64, ptr %130, align 8, !tbaa !34
  %145 = load i64, ptr %133, align 8, !tbaa !34
  %146 = load i64, ptr %136, align 8, !tbaa !34
  %147 = getelementptr inbounds float, ptr %107, i64 %143
  %148 = getelementptr inbounds float, ptr %107, i64 %144
  %149 = getelementptr inbounds float, ptr %107, i64 %145
  %150 = getelementptr inbounds float, ptr %107, i64 %146
  %151 = load float, ptr %147, align 4, !tbaa !95
  %152 = load float, ptr %148, align 4, !tbaa !95
  %153 = load float, ptr %149, align 4, !tbaa !95
  %154 = load float, ptr %150, align 4, !tbaa !95
  %155 = insertelement <4 x float> poison, float %151, i64 0
  %156 = insertelement <4 x float> %155, float %152, i64 1
  %157 = insertelement <4 x float> %156, float %153, i64 2
  %158 = insertelement <4 x float> %157, float %154, i64 3
  %159 = fpext <4 x float> %158 to <4 x double>
  %160 = fdiv <4 x double> %142, %159
  store <4 x double> %160, ptr %140, align 8, !tbaa !30
  %161 = add nuw i64 %125, 4
  %162 = icmp eq i64 %161, %114
  br i1 %162, label %163, label %124, !llvm.loop !209

163:                                              ; preds = %124
  %164 = icmp eq i64 %114, %108
  br i1 %164, label %244, label %165

165:                                              ; preds = %105, %163
  %166 = phi i32 [ 0, %105 ], [ %115, %163 ]
  %167 = phi ptr [ %16, %105 ], [ %117, %163 ]
  %168 = phi ptr [ %11, %105 ], [ %119, %163 ]
  %169 = phi ptr [ %8, %105 ], [ %121, %163 ]
  %170 = sub i32 %6, %166
  %171 = add i32 %166, 1
  %172 = and i32 %170, 1
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %186, label %174

174:                                              ; preds = %165
  %175 = load double, ptr %168, align 8, !tbaa !30
  %176 = fmul double %175, %17
  %177 = load i64, ptr %167, align 8, !tbaa !34
  %178 = getelementptr inbounds float, ptr %107, i64 %177
  %179 = load float, ptr %178, align 4, !tbaa !95
  %180 = fpext float %179 to double
  %181 = fdiv double %176, %180
  store double %181, ptr %169, align 8, !tbaa !30
  %182 = add nuw i32 %166, 1
  %183 = getelementptr inbounds double, ptr %169, i64 1
  %184 = getelementptr inbounds double, ptr %168, i64 1
  %185 = getelementptr inbounds i64, ptr %167, i64 1
  br label %186

186:                                              ; preds = %174, %165
  %187 = phi i32 [ %166, %165 ], [ %182, %174 ]
  %188 = phi ptr [ %167, %165 ], [ %185, %174 ]
  %189 = phi ptr [ %168, %165 ], [ %184, %174 ]
  %190 = phi ptr [ %169, %165 ], [ %183, %174 ]
  %191 = icmp eq i32 %6, %171
  br i1 %191, label %244, label %192

192:                                              ; preds = %186, %192
  %193 = phi i32 [ %214, %192 ], [ %187, %186 ]
  %194 = phi ptr [ %217, %192 ], [ %188, %186 ]
  %195 = phi ptr [ %216, %192 ], [ %189, %186 ]
  %196 = phi ptr [ %215, %192 ], [ %190, %186 ]
  %197 = load double, ptr %195, align 8, !tbaa !30
  %198 = fmul double %197, %17
  %199 = load i64, ptr %194, align 8, !tbaa !34
  %200 = getelementptr inbounds float, ptr %107, i64 %199
  %201 = load float, ptr %200, align 4, !tbaa !95
  %202 = fpext float %201 to double
  %203 = fdiv double %198, %202
  store double %203, ptr %196, align 8, !tbaa !30
  %204 = getelementptr inbounds double, ptr %196, i64 1
  %205 = getelementptr inbounds double, ptr %195, i64 1
  %206 = getelementptr inbounds i64, ptr %194, i64 1
  %207 = load double, ptr %205, align 8, !tbaa !30
  %208 = fmul double %207, %17
  %209 = load i64, ptr %206, align 8, !tbaa !34
  %210 = getelementptr inbounds float, ptr %107, i64 %209
  %211 = load float, ptr %210, align 4, !tbaa !95
  %212 = fpext float %211 to double
  %213 = fdiv double %208, %212
  store double %213, ptr %204, align 8, !tbaa !30
  %214 = add nuw i32 %193, 2
  %215 = getelementptr inbounds double, ptr %196, i64 2
  %216 = getelementptr inbounds double, ptr %195, i64 2
  %217 = getelementptr inbounds i64, ptr %194, i64 2
  %218 = icmp eq i32 %214, %6
  br i1 %218, label %244, label %192, !llvm.loop !210

219:                                              ; preds = %98, %219
  %220 = phi i32 [ %239, %219 ], [ %99, %98 ]
  %221 = phi ptr [ %242, %219 ], [ %100, %98 ]
  %222 = phi ptr [ %241, %219 ], [ %101, %98 ]
  %223 = phi ptr [ %240, %219 ], [ %102, %98 ]
  %224 = load double, ptr %222, align 8, !tbaa !30
  %225 = load i64, ptr %221, align 8, !tbaa !34
  %226 = getelementptr inbounds float, ptr %23, i64 %225
  %227 = load float, ptr %226, align 4, !tbaa !95
  %228 = fpext float %227 to double
  %229 = fdiv double %224, %228
  store double %229, ptr %223, align 8, !tbaa !30
  %230 = getelementptr inbounds double, ptr %223, i64 1
  %231 = getelementptr inbounds double, ptr %222, i64 1
  %232 = getelementptr inbounds i64, ptr %221, i64 1
  %233 = load double, ptr %231, align 8, !tbaa !30
  %234 = load i64, ptr %232, align 8, !tbaa !34
  %235 = getelementptr inbounds float, ptr %23, i64 %234
  %236 = load float, ptr %235, align 4, !tbaa !95
  %237 = fpext float %236 to double
  %238 = fdiv double %233, %237
  store double %238, ptr %230, align 8, !tbaa !30
  %239 = add nuw i32 %220, 2
  %240 = getelementptr inbounds double, ptr %223, i64 2
  %241 = getelementptr inbounds double, ptr %222, i64 2
  %242 = getelementptr inbounds i64, ptr %221, i64 2
  %243 = icmp eq i32 %239, %6
  br i1 %243, label %244, label %219, !llvm.loop !211

244:                                              ; preds = %98, %219, %186, %192, %76, %163, %20, %104
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE4SSORIdEEvRNS_6VectorIT_EEf(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, float noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %82, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = fpext float %2 to double
  %16 = load ptr, ptr %14, align 8, !tbaa !53
  %17 = load ptr, ptr %13, align 8, !tbaa !92
  %18 = zext i32 %5 to i64
  %19 = load i64, ptr %11, align 8, !tbaa !34
  br label %35

20:                                               ; preds = %71
  %21 = add i32 %5, -1
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %23, label %82

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !8
  %26 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 8
  %27 = load ptr, ptr %26, align 8, !tbaa !32
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 9
  %29 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %31 = fpext float %2 to double
  %32 = load ptr, ptr %29, align 8, !tbaa !92
  %33 = load ptr, ptr %30, align 8, !tbaa !53
  %34 = zext i32 %21 to i64
  br label %83

35:                                               ; preds = %7, %71
  %36 = phi i64 [ %19, %7 ], [ %40, %71 ]
  %37 = phi i64 [ 0, %7 ], [ %38, %71 ]
  %38 = add nuw nsw i64 %37, 1
  %39 = getelementptr inbounds i64, ptr %11, i64 %38
  %40 = load i64, ptr %39, align 8, !tbaa !34
  %41 = and i64 %36, 4294967295
  %42 = icmp ugt i64 %40, %41
  br i1 %42, label %43, label %71

43:                                               ; preds = %35
  %44 = trunc i64 %36 to i32
  %45 = load ptr, ptr %12, align 8, !tbaa !46
  %46 = load ptr, ptr %13, align 8
  %47 = load ptr, ptr %14, align 8
  br label %48

48:                                               ; preds = %43, %66
  %49 = phi i64 [ %41, %43 ], [ %69, %66 ]
  %50 = phi i32 [ %44, %43 ], [ %68, %66 ]
  %51 = phi double [ 0.000000e+00, %43 ], [ %67, %66 ]
  %52 = getelementptr inbounds i32, ptr %45, i64 %49
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ne i32 %53, -1
  %55 = zext i32 %50 to i64
  %56 = icmp ugt i64 %37, %55
  %57 = and i1 %56, %54
  br i1 %57, label %58, label %66

58:                                               ; preds = %48
  %59 = getelementptr inbounds float, ptr %46, i64 %49
  %60 = load float, ptr %59, align 4, !tbaa !95
  %61 = fpext float %60 to double
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds double, ptr %47, i64 %62
  %64 = load double, ptr %63, align 8, !tbaa !30
  %65 = tail call double @llvm.fmuladd.f64(double %61, double %64, double %51)
  br label %66

66:                                               ; preds = %58, %48
  %67 = phi double [ %65, %58 ], [ %51, %48 ]
  %68 = add i32 %50, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %40, %69
  br i1 %70, label %48, label %71

71:                                               ; preds = %66, %35
  %72 = phi double [ 0.000000e+00, %35 ], [ %67, %66 ]
  %73 = getelementptr inbounds double, ptr %16, i64 %37
  %74 = load double, ptr %73, align 8, !tbaa !30
  %75 = fneg double %72
  %76 = tail call double @llvm.fmuladd.f64(double %75, double %15, double %74)
  %77 = getelementptr inbounds float, ptr %17, i64 %36
  %78 = load float, ptr %77, align 4, !tbaa !95
  %79 = fpext float %78 to double
  %80 = fdiv double %76, %79
  store double %80, ptr %73, align 8, !tbaa !30
  %81 = icmp eq i64 %38, %18
  br i1 %81, label %20, label %35

82:                                               ; preds = %121, %3, %20
  ret void

83:                                               ; preds = %23, %121
  %84 = phi i64 [ %34, %23 ], [ %131, %121 ]
  %85 = phi i32 [ %5, %23 ], [ %133, %121 ]
  %86 = getelementptr inbounds i64, ptr %27, i64 %84
  %87 = load i64, ptr %86, align 8, !tbaa !34
  %88 = sext i32 %85 to i64
  %89 = getelementptr inbounds i64, ptr %27, i64 %88
  %90 = load i64, ptr %89, align 8, !tbaa !34
  %91 = and i64 %87, 4294967295
  %92 = icmp ugt i64 %90, %91
  br i1 %92, label %93, label %121

93:                                               ; preds = %83
  %94 = trunc i64 %87 to i32
  %95 = load ptr, ptr %28, align 8, !tbaa !46
  %96 = load ptr, ptr %29, align 8
  %97 = load ptr, ptr %30, align 8
  br label %98

98:                                               ; preds = %93, %116
  %99 = phi i64 [ %91, %93 ], [ %119, %116 ]
  %100 = phi i32 [ %94, %93 ], [ %118, %116 ]
  %101 = phi double [ 0.000000e+00, %93 ], [ %117, %116 ]
  %102 = getelementptr inbounds i32, ptr %95, i64 %99
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = icmp ne i32 %103, -1
  %105 = zext i32 %100 to i64
  %106 = icmp ult i64 %84, %105
  %107 = and i1 %106, %104
  br i1 %107, label %108, label %116

108:                                              ; preds = %98
  %109 = getelementptr inbounds float, ptr %96, i64 %99
  %110 = load float, ptr %109, align 4, !tbaa !95
  %111 = fpext float %110 to double
  %112 = zext i32 %103 to i64
  %113 = getelementptr inbounds double, ptr %97, i64 %112
  %114 = load double, ptr %113, align 8, !tbaa !30
  %115 = tail call double @llvm.fmuladd.f64(double %111, double %114, double %101)
  br label %116

116:                                              ; preds = %108, %98
  %117 = phi double [ %115, %108 ], [ %101, %98 ]
  %118 = add i32 %100, 1
  %119 = zext i32 %118 to i64
  %120 = icmp ugt i64 %90, %119
  br i1 %120, label %98, label %121

121:                                              ; preds = %116, %83
  %122 = phi double [ 0.000000e+00, %83 ], [ %117, %116 ]
  %123 = fmul double %122, %31
  %124 = getelementptr inbounds float, ptr %32, i64 %87
  %125 = load float, ptr %124, align 4, !tbaa !95
  %126 = fpext float %125 to double
  %127 = fdiv double %123, %126
  %128 = getelementptr inbounds double, ptr %33, i64 %84
  %129 = load double, ptr %128, align 8, !tbaa !30
  %130 = fsub double %129, %127
  store double %130, ptr %128, align 8, !tbaa !30
  %131 = add nsw i64 %84, -1
  %132 = icmp sgt i64 %84, 0
  %133 = trunc i64 %84 to i32
  br i1 %132, label %83, label %82
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE4PSORIdEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, float noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !53
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %20 = fpext float %4 to double
  %21 = load ptr, ptr %19, align 8, !tbaa !92
  %22 = zext i32 %9 to i64
  br label %24

23:                                               ; preds = %43, %5
  ret void

24:                                               ; preds = %11, %43
  %25 = phi i64 [ 0, %11 ], [ %50, %43 ]
  %26 = getelementptr inbounds i32, ptr %12, i64 %25
  %27 = load i32, ptr %26, align 4, !tbaa !47
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds double, ptr %14, i64 %28
  %30 = load double, ptr %29, align 8, !tbaa !30
  %31 = getelementptr inbounds i64, ptr %16, i64 %28
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = add i32 %27, 1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i64, ptr %16, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = and i64 %32, 4294967295
  %38 = icmp ugt i64 %36, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %24
  %40 = trunc i64 %32 to i32
  %41 = load ptr, ptr %17, align 8, !tbaa !46
  %42 = load ptr, ptr %19, align 8
  br label %52

43:                                               ; preds = %71, %24
  %44 = phi double [ %30, %24 ], [ %72, %71 ]
  %45 = fmul double %44, %20
  %46 = getelementptr inbounds float, ptr %21, i64 %32
  %47 = load float, ptr %46, align 4, !tbaa !95
  %48 = fpext float %47 to double
  %49 = fdiv double %45, %48
  store double %49, ptr %29, align 8, !tbaa !30
  %50 = add nuw nsw i64 %25, 1
  %51 = icmp eq i64 %50, %22
  br i1 %51, label %23, label %24

52:                                               ; preds = %39, %71
  %53 = phi i64 [ %37, %39 ], [ %74, %71 ]
  %54 = phi i32 [ %40, %39 ], [ %73, %71 ]
  %55 = phi double [ %30, %39 ], [ %72, %71 ]
  %56 = getelementptr inbounds i32, ptr %41, i64 %53
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %18, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %25, %61
  br i1 %62, label %63, label %71

63:                                               ; preds = %52
  %64 = getelementptr inbounds float, ptr %42, i64 %53
  %65 = load float, ptr %64, align 4, !tbaa !95
  %66 = fpext float %65 to double
  %67 = getelementptr inbounds double, ptr %14, i64 %58
  %68 = load double, ptr %67, align 8, !tbaa !30
  %69 = fneg double %66
  %70 = tail call double @llvm.fmuladd.f64(double %69, double %68, double %55)
  br label %71

71:                                               ; preds = %63, %52
  %72 = phi double [ %70, %63 ], [ %55, %52 ]
  %73 = add i32 %54, 1
  %74 = zext i32 %73 to i64
  %75 = icmp ugt i64 %36, %74
  br i1 %75, label %52, label %43
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5TPSORIdEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, float noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !53
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %20 = fpext float %4 to double
  %21 = load ptr, ptr %19, align 8, !tbaa !92
  %22 = zext i32 %9 to i64
  br label %24

23:                                               ; preds = %46, %5
  ret void

24:                                               ; preds = %11, %46
  %25 = phi i64 [ %22, %11 ], [ %26, %46 ]
  %26 = add nsw i64 %25, -1
  %27 = trunc i64 %26 to i32
  %28 = and i64 %26, 4294967295
  %29 = getelementptr inbounds i32, ptr %12, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds double, ptr %14, i64 %31
  %33 = load double, ptr %32, align 8, !tbaa !30
  %34 = getelementptr inbounds i64, ptr %16, i64 %31
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = add i32 %30, 1
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i64, ptr %16, i64 %37
  %39 = load i64, ptr %38, align 8, !tbaa !34
  %40 = and i64 %35, 4294967295
  %41 = icmp ugt i64 %39, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %24
  %43 = trunc i64 %35 to i32
  %44 = load ptr, ptr %17, align 8, !tbaa !46
  %45 = load ptr, ptr %19, align 8
  br label %54

46:                                               ; preds = %72, %24
  %47 = phi double [ %33, %24 ], [ %73, %72 ]
  %48 = fmul double %47, %20
  %49 = getelementptr inbounds float, ptr %21, i64 %35
  %50 = load float, ptr %49, align 4, !tbaa !95
  %51 = fpext float %50 to double
  %52 = fdiv double %48, %51
  store double %52, ptr %32, align 8, !tbaa !30
  %53 = icmp eq i32 %27, 0
  br i1 %53, label %23, label %24

54:                                               ; preds = %42, %72
  %55 = phi i64 [ %40, %42 ], [ %75, %72 ]
  %56 = phi i32 [ %43, %42 ], [ %74, %72 ]
  %57 = phi double [ %33, %42 ], [ %73, %72 ]
  %58 = getelementptr inbounds i32, ptr %44, i64 %55
  %59 = load i32, ptr %58, align 4, !tbaa !47
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i32, ptr %18, i64 %60
  %62 = load i32, ptr %61, align 4, !tbaa !47
  %63 = icmp ugt i32 %62, %27
  br i1 %63, label %64, label %72

64:                                               ; preds = %54
  %65 = getelementptr inbounds float, ptr %45, i64 %55
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fpext float %66 to double
  %68 = getelementptr inbounds double, ptr %14, i64 %60
  %69 = load double, ptr %68, align 8, !tbaa !30
  %70 = fneg double %67
  %71 = tail call double @llvm.fmuladd.f64(double %70, double %69, double %57)
  br label %72

72:                                               ; preds = %64, %54
  %73 = phi double [ %71, %64 ], [ %57, %54 ]
  %74 = add i32 %56, 1
  %75 = zext i32 %74 to i64
  %76 = icmp ugt i64 %39, %75
  br i1 %76, label %54, label %46
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE8SOR_stepIdEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !53
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = fpext float %3 to double
  %21 = zext i32 %8 to i64
  %22 = load i64, ptr %14, align 8, !tbaa !34
  br label %24

23:                                               ; preds = %37, %4
  ret void

24:                                               ; preds = %10, %37
  %25 = phi i64 [ %22, %10 ], [ %31, %37 ]
  %26 = phi i64 [ 0, %10 ], [ %29, %37 ]
  %27 = getelementptr inbounds double, ptr %12, i64 %26
  %28 = load double, ptr %27, align 8, !tbaa !30
  %29 = add nuw nsw i64 %26, 1
  %30 = getelementptr inbounds i64, ptr %14, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !34
  %32 = and i64 %25, 4294967295
  %33 = icmp ugt i64 %31, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %24
  %35 = trunc i64 %25 to i32
  %36 = load ptr, ptr %17, align 8, !tbaa !46
  br label %48

37:                                               ; preds = %48, %24
  %38 = phi double [ %28, %24 ], [ %61, %48 ]
  %39 = fmul double %38, %20
  %40 = getelementptr inbounds float, ptr %16, i64 %25
  %41 = load float, ptr %40, align 4, !tbaa !95
  %42 = fpext float %41 to double
  %43 = fdiv double %39, %42
  %44 = getelementptr inbounds double, ptr %19, i64 %26
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fadd double %45, %43
  store double %46, ptr %44, align 8, !tbaa !30
  %47 = icmp eq i64 %29, %21
  br i1 %47, label %23, label %24

48:                                               ; preds = %34, %48
  %49 = phi i64 [ %32, %34 ], [ %63, %48 ]
  %50 = phi i32 [ %35, %34 ], [ %62, %48 ]
  %51 = phi double [ %28, %34 ], [ %61, %48 ]
  %52 = getelementptr inbounds float, ptr %16, i64 %49
  %53 = load float, ptr %52, align 4, !tbaa !95
  %54 = fpext float %53 to double
  %55 = getelementptr inbounds i32, ptr %36, i64 %49
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds double, ptr %19, i64 %57
  %59 = load double, ptr %58, align 8, !tbaa !30
  %60 = fneg double %54
  %61 = tail call double @llvm.fmuladd.f64(double %60, double %59, double %51)
  %62 = add i32 %50, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %31, %63
  br i1 %64, label %48, label %37
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9TSOR_stepIdEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = add i32 %8, -1
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %23

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !53
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %19 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = fpext float %3 to double
  %22 = zext i32 %9 to i64
  br label %24

23:                                               ; preds = %39, %4
  ret void

24:                                               ; preds = %11, %39
  %25 = phi i64 [ %22, %11 ], [ %49, %39 ]
  %26 = phi i32 [ %8, %11 ], [ %51, %39 ]
  %27 = getelementptr inbounds double, ptr %13, i64 %25
  %28 = load double, ptr %27, align 8, !tbaa !30
  %29 = getelementptr inbounds i64, ptr %15, i64 %25
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds i64, ptr %15, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %30, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %24
  %37 = trunc i64 %30 to i32
  %38 = load ptr, ptr %18, align 8, !tbaa !46
  br label %52

39:                                               ; preds = %52, %24
  %40 = phi double [ %28, %24 ], [ %65, %52 ]
  %41 = fmul double %40, %21
  %42 = getelementptr inbounds float, ptr %17, i64 %30
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fpext float %43 to double
  %45 = fdiv double %41, %44
  %46 = getelementptr inbounds double, ptr %20, i64 %25
  %47 = load double, ptr %46, align 8, !tbaa !30
  %48 = fadd double %47, %45
  store double %48, ptr %46, align 8, !tbaa !30
  %49 = add nsw i64 %25, -1
  %50 = icmp sgt i64 %25, 0
  %51 = trunc i64 %25 to i32
  br i1 %50, label %24, label %23

52:                                               ; preds = %36, %52
  %53 = phi i64 [ %34, %36 ], [ %67, %52 ]
  %54 = phi i32 [ %37, %36 ], [ %66, %52 ]
  %55 = phi double [ %28, %36 ], [ %65, %52 ]
  %56 = getelementptr inbounds float, ptr %17, i64 %53
  %57 = load float, ptr %56, align 4, !tbaa !95
  %58 = fpext float %57 to double
  %59 = getelementptr inbounds i32, ptr %38, i64 %53
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds double, ptr %20, i64 %61
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = fneg double %58
  %65 = tail call double @llvm.fmuladd.f64(double %64, double %63, double %55)
  %66 = add i32 %54, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %33, %67
  br i1 %68, label %52, label %39
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9SSOR_stepIdEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %116, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !53
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = fpext float %3 to double
  %21 = zext i32 %8 to i64
  %22 = load i64, ptr %14, align 8, !tbaa !34
  br label %23

23:                                               ; preds = %36, %10
  %24 = phi i64 [ %22, %10 ], [ %30, %36 ]
  %25 = phi i64 [ 0, %10 ], [ %28, %36 ]
  %26 = getelementptr inbounds double, ptr %12, i64 %25
  %27 = load double, ptr %26, align 8, !tbaa !30
  %28 = add nuw nsw i64 %25, 1
  %29 = getelementptr inbounds i64, ptr %14, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %24, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = trunc i64 %24 to i32
  %35 = load ptr, ptr %17, align 8, !tbaa !46
  br label %47

36:                                               ; preds = %47, %23
  %37 = phi double [ %27, %23 ], [ %60, %47 ]
  %38 = fmul double %37, %20
  %39 = getelementptr inbounds float, ptr %16, i64 %24
  %40 = load float, ptr %39, align 4, !tbaa !95
  %41 = fpext float %40 to double
  %42 = fdiv double %38, %41
  %43 = getelementptr inbounds double, ptr %19, i64 %25
  %44 = load double, ptr %43, align 8, !tbaa !30
  %45 = fadd double %44, %42
  store double %45, ptr %43, align 8, !tbaa !30
  %46 = icmp eq i64 %28, %21
  br i1 %46, label %64, label %23

47:                                               ; preds = %47, %33
  %48 = phi i64 [ %31, %33 ], [ %62, %47 ]
  %49 = phi i32 [ %34, %33 ], [ %61, %47 ]
  %50 = phi double [ %27, %33 ], [ %60, %47 ]
  %51 = getelementptr inbounds float, ptr %16, i64 %48
  %52 = load float, ptr %51, align 4, !tbaa !95
  %53 = fpext float %52 to double
  %54 = getelementptr inbounds i32, ptr %35, i64 %48
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds double, ptr %19, i64 %56
  %58 = load double, ptr %57, align 8, !tbaa !30
  %59 = fneg double %53
  %60 = tail call double @llvm.fmuladd.f64(double %59, double %58, double %50)
  %61 = add i32 %49, 1
  %62 = zext i32 %61 to i64
  %63 = icmp ugt i64 %30, %62
  br i1 %63, label %47, label %36

64:                                               ; preds = %36
  %65 = add i32 %8, -1
  %66 = icmp sgt i32 %65, -1
  br i1 %66, label %67, label %116

67:                                               ; preds = %64
  %68 = load ptr, ptr %15, align 8
  %69 = load ptr, ptr %18, align 8
  %70 = zext i32 %65 to i64
  br label %71

71:                                               ; preds = %86, %67
  %72 = phi i64 [ %70, %67 ], [ %96, %86 ]
  %73 = phi i32 [ %8, %67 ], [ %98, %86 ]
  %74 = getelementptr inbounds double, ptr %12, i64 %72
  %75 = load double, ptr %74, align 8, !tbaa !30
  %76 = getelementptr inbounds i64, ptr %14, i64 %72
  %77 = load i64, ptr %76, align 8, !tbaa !34
  %78 = sext i32 %73 to i64
  %79 = getelementptr inbounds i64, ptr %14, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %77, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %71
  %84 = trunc i64 %77 to i32
  %85 = load ptr, ptr %17, align 8, !tbaa !46
  br label %99

86:                                               ; preds = %99, %71
  %87 = phi double [ %75, %71 ], [ %112, %99 ]
  %88 = fmul double %87, %20
  %89 = getelementptr inbounds float, ptr %68, i64 %77
  %90 = load float, ptr %89, align 4, !tbaa !95
  %91 = fpext float %90 to double
  %92 = fdiv double %88, %91
  %93 = getelementptr inbounds double, ptr %69, i64 %72
  %94 = load double, ptr %93, align 8, !tbaa !30
  %95 = fadd double %94, %92
  store double %95, ptr %93, align 8, !tbaa !30
  %96 = add nsw i64 %72, -1
  %97 = icmp sgt i64 %72, 0
  %98 = trunc i64 %72 to i32
  br i1 %97, label %71, label %116

99:                                               ; preds = %99, %83
  %100 = phi i64 [ %81, %83 ], [ %114, %99 ]
  %101 = phi i32 [ %84, %83 ], [ %113, %99 ]
  %102 = phi double [ %75, %83 ], [ %112, %99 ]
  %103 = getelementptr inbounds float, ptr %68, i64 %100
  %104 = load float, ptr %103, align 4, !tbaa !95
  %105 = fpext float %104 to double
  %106 = getelementptr inbounds i32, ptr %85, i64 %100
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds double, ptr %69, i64 %108
  %110 = load double, ptr %109, align 8, !tbaa !30
  %111 = fneg double %105
  %112 = tail call double @llvm.fmuladd.f64(double %111, double %110, double %102)
  %113 = add i32 %101, 1
  %114 = zext i32 %113 to i64
  %115 = icmp ugt i64 %80, %114
  br i1 %115, label %99, label %86

116:                                              ; preds = %86, %4, %64
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIfE18matrix_norm_squareIfEET_RKNS_6VectorIS3_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !92
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 9
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = load i64, ptr %10, align 8, !tbaa !34
  %16 = getelementptr inbounds i32, ptr %14, i64 %15
  %17 = getelementptr inbounds float, ptr %8, i64 %15
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %6 to i64
  br label %23

21:                                               ; preds = %46, %2
  %22 = phi float [ 0.000000e+00, %2 ], [ %52, %46 ]
  ret float %22

23:                                               ; preds = %12, %46
  %24 = phi i64 [ 0, %12 ], [ %28, %46 ]
  %25 = phi float [ 0.000000e+00, %12 ], [ %52, %46 ]
  %26 = phi ptr [ %16, %12 ], [ %49, %46 ]
  %27 = phi ptr [ %17, %12 ], [ %48, %46 ]
  %28 = add nuw nsw i64 %24, 1
  %29 = getelementptr inbounds i64, ptr %10, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = getelementptr inbounds float, ptr %8, i64 %30
  %32 = icmp eq ptr %27, %31
  br i1 %32, label %46, label %33

33:                                               ; preds = %23, %33
  %34 = phi ptr [ %39, %33 ], [ %26, %23 ]
  %35 = phi ptr [ %37, %33 ], [ %27, %23 ]
  %36 = phi float [ %44, %33 ], [ 0.000000e+00, %23 ]
  %37 = getelementptr inbounds float, ptr %35, i64 1
  %38 = load float, ptr %35, align 4, !tbaa !95
  %39 = getelementptr inbounds i32, ptr %34, i64 1
  %40 = load i32, ptr %34, align 4, !tbaa !47
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds float, ptr %19, i64 %41
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = tail call float @llvm.fmuladd.f32(float %38, float %43, float %36)
  %45 = icmp eq ptr %37, %31
  br i1 %45, label %46, label %33

46:                                               ; preds = %33, %23
  %47 = phi float [ 0.000000e+00, %23 ], [ %44, %33 ]
  %48 = phi ptr [ %27, %23 ], [ %31, %33 ]
  %49 = phi ptr [ %26, %23 ], [ %39, %33 ]
  %50 = getelementptr inbounds float, ptr %19, i64 %24
  %51 = load float, ptr %50, align 4, !tbaa !95
  %52 = tail call float @llvm.fmuladd.f32(float %51, float %47, float %25)
  %53 = icmp eq i64 %28, %20
  br i1 %53, label %21, label %23
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIfE21matrix_scalar_productIfEET_RKNS_6VectorIS3_EES7_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = load i64, ptr %11, align 8, !tbaa !34
  %17 = getelementptr inbounds i32, ptr %15, i64 %16
  %18 = getelementptr inbounds float, ptr %9, i64 %16
  %19 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !106
  %23 = zext i32 %7 to i64
  br label %26

24:                                               ; preds = %49, %3
  %25 = phi float [ 0.000000e+00, %3 ], [ %55, %49 ]
  ret float %25

26:                                               ; preds = %13, %49
  %27 = phi i64 [ 0, %13 ], [ %31, %49 ]
  %28 = phi float [ 0.000000e+00, %13 ], [ %55, %49 ]
  %29 = phi ptr [ %17, %13 ], [ %52, %49 ]
  %30 = phi ptr [ %18, %13 ], [ %51, %49 ]
  %31 = add nuw nsw i64 %27, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = getelementptr inbounds float, ptr %9, i64 %33
  %35 = icmp eq ptr %30, %34
  br i1 %35, label %49, label %36

36:                                               ; preds = %26, %36
  %37 = phi ptr [ %42, %36 ], [ %29, %26 ]
  %38 = phi ptr [ %40, %36 ], [ %30, %26 ]
  %39 = phi float [ %47, %36 ], [ 0.000000e+00, %26 ]
  %40 = getelementptr inbounds float, ptr %38, i64 1
  %41 = load float, ptr %38, align 4, !tbaa !95
  %42 = getelementptr inbounds i32, ptr %37, i64 1
  %43 = load i32, ptr %37, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds float, ptr %20, i64 %44
  %46 = load float, ptr %45, align 4, !tbaa !95
  %47 = tail call float @llvm.fmuladd.f32(float %41, float %46, float %39)
  %48 = icmp eq ptr %40, %34
  br i1 %48, label %49, label %36

49:                                               ; preds = %36, %26
  %50 = phi float [ 0.000000e+00, %26 ], [ %47, %36 ]
  %51 = phi ptr [ %30, %26 ], [ %34, %36 ]
  %52 = phi ptr [ %29, %26 ], [ %42, %36 ]
  %53 = getelementptr inbounds float, ptr %22, i64 %27
  %54 = load float, ptr %53, align 4, !tbaa !95
  %55 = tail call float @llvm.fmuladd.f32(float %54, float %50, float %28)
  %56 = icmp eq i64 %31, %23
  br i1 %56, label %24, label %26
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIfE8residualIfEET_RNS_6VectorIS3_EERKS5_S8_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.20", ptr %3, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !106
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !106
  %22 = zext i32 %8 to i64
  %23 = load i64, ptr %14, align 8, !tbaa !34
  br label %27

24:                                               ; preds = %41, %4
  %25 = phi float [ 0.000000e+00, %4 ], [ %44, %41 ]
  %26 = tail call float @sqrtf(float noundef %25) #17
  ret float %26

27:                                               ; preds = %10, %41
  %28 = phi i64 [ %23, %10 ], [ %35, %41 ]
  %29 = phi i64 [ 0, %10 ], [ %33, %41 ]
  %30 = phi float [ 0.000000e+00, %10 ], [ %44, %41 ]
  %31 = getelementptr inbounds float, ptr %12, i64 %29
  %32 = load float, ptr %31, align 4, !tbaa !95
  %33 = add nuw nsw i64 %29, 1
  %34 = getelementptr inbounds i64, ptr %14, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %28, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %27
  %39 = trunc i64 %28 to i32
  %40 = load ptr, ptr %15, align 8, !tbaa !46
  br label %46

41:                                               ; preds = %46, %27
  %42 = phi float [ %32, %27 ], [ %58, %46 ]
  %43 = getelementptr inbounds float, ptr %21, i64 %29
  store float %42, ptr %43, align 4, !tbaa !95
  %44 = tail call float @llvm.fmuladd.f32(float %42, float %42, float %30)
  %45 = icmp eq i64 %33, %22
  br i1 %45, label %24, label %27

46:                                               ; preds = %38, %46
  %47 = phi i64 [ %36, %38 ], [ %60, %46 ]
  %48 = phi i32 [ %39, %38 ], [ %59, %46 ]
  %49 = phi float [ %32, %38 ], [ %58, %46 ]
  %50 = getelementptr inbounds i32, ptr %40, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = getelementptr inbounds float, ptr %17, i64 %47
  %53 = load float, ptr %52, align 4, !tbaa !95
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds float, ptr %19, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fneg float %53
  %58 = tail call float @llvm.fmuladd.f32(float %57, float %56, float %49)
  %59 = add i32 %48, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %35, %60
  br i1 %61, label %46, label %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE17precondition_SSORIfEEvRNS_6VectorIT_EERKS5_fRKSt6vectorIjSaIjEE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !109
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !106
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !195
  %16 = load ptr, ptr %4, align 8, !tbaa !197
  %17 = icmp eq ptr %15, %16
  %18 = icmp eq i32 %7, 0
  br i1 %17, label %27, label %19

19:                                               ; preds = %5
  br i1 %18, label %682, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !106
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %26 = zext i32 %7 to i64
  br label %48

27:                                               ; preds = %5
  br i1 %18, label %682, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !106
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = ptrtoint ptr %32 to i64
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %7 to i64
  %37 = load i64, ptr %11, align 8, !tbaa !34
  br label %295

38:                                               ; preds = %89
  br i1 %18, label %682, label %39

39:                                               ; preds = %38
  %40 = fpext float %3 to double
  %41 = fsub double 2.000000e+00, %40
  %42 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %43 = load ptr, ptr %42, align 8, !tbaa !92
  %44 = and i32 %7, 1
  %45 = icmp eq i32 %7, 1
  br i1 %45, label %141, label %46

46:                                               ; preds = %39
  %47 = and i32 %7, -2
  br label %165

48:                                               ; preds = %20, %89
  %49 = phi i64 [ 0, %20 ], [ %96, %89 ]
  %50 = phi ptr [ %11, %20 ], [ %98, %89 ]
  %51 = phi ptr [ %13, %20 ], [ %97, %89 ]
  %52 = getelementptr inbounds float, ptr %22, i64 %49
  %53 = load float, ptr %52, align 4, !tbaa !95
  store float %53, ptr %51, align 4, !tbaa !95
  %54 = getelementptr inbounds i32, ptr %16, i64 %49
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = load i64, ptr %50, align 8, !tbaa !34
  %57 = trunc i64 %56 to i32
  %58 = add i32 %57, 1
  %59 = icmp ult i32 %58, %55
  br i1 %59, label %60, label %89

60:                                               ; preds = %48
  %61 = load ptr, ptr %25, align 8, !tbaa !46
  %62 = zext i32 %58 to i64
  %63 = xor i32 %57, -1
  %64 = add i32 %55, %63
  %65 = add i32 %55, -2
  %66 = sub i32 %65, %57
  %67 = and i32 %64, 3
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %60, %69
  %70 = phi i64 [ %81, %69 ], [ %62, %60 ]
  %71 = phi float [ %80, %69 ], [ 0.000000e+00, %60 ]
  %72 = phi i32 [ %82, %69 ], [ 0, %60 ]
  %73 = getelementptr inbounds float, ptr %24, i64 %70
  %74 = load float, ptr %73, align 4, !tbaa !95
  %75 = getelementptr inbounds i32, ptr %61, i64 %70
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds float, ptr %13, i64 %77
  %79 = load float, ptr %78, align 4, !tbaa !95
  %80 = tail call float @llvm.fmuladd.f32(float %74, float %79, float %71)
  %81 = add nuw nsw i64 %70, 1
  %82 = add i32 %72, 1
  %83 = icmp eq i32 %82, %67
  br i1 %83, label %84, label %69, !llvm.loop !212

84:                                               ; preds = %69, %60
  %85 = phi float [ undef, %60 ], [ %80, %69 ]
  %86 = phi i64 [ %62, %60 ], [ %81, %69 ]
  %87 = phi float [ 0.000000e+00, %60 ], [ %80, %69 ]
  %88 = icmp ult i32 %66, 3
  br i1 %88, label %89, label %100

89:                                               ; preds = %84, %100, %48
  %90 = phi float [ 0.000000e+00, %48 ], [ %85, %84 ], [ %137, %100 ]
  %91 = fneg float %90
  %92 = tail call float @llvm.fmuladd.f32(float %91, float %3, float %53)
  store float %92, ptr %51, align 4, !tbaa !95
  %93 = getelementptr inbounds float, ptr %24, i64 %56
  %94 = load float, ptr %93, align 4, !tbaa !95
  %95 = fdiv float %92, %94
  store float %95, ptr %51, align 4, !tbaa !95
  %96 = add nuw nsw i64 %49, 1
  %97 = getelementptr inbounds float, ptr %51, i64 1
  %98 = getelementptr inbounds i64, ptr %50, i64 1
  %99 = icmp eq i64 %96, %26
  br i1 %99, label %38, label %48

100:                                              ; preds = %84, %100
  %101 = phi i64 [ %138, %100 ], [ %86, %84 ]
  %102 = phi float [ %137, %100 ], [ %87, %84 ]
  %103 = getelementptr inbounds float, ptr %24, i64 %101
  %104 = load float, ptr %103, align 4, !tbaa !95
  %105 = getelementptr inbounds i32, ptr %61, i64 %101
  %106 = load i32, ptr %105, align 4, !tbaa !47
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds float, ptr %13, i64 %107
  %109 = load float, ptr %108, align 4, !tbaa !95
  %110 = tail call float @llvm.fmuladd.f32(float %104, float %109, float %102)
  %111 = add nuw nsw i64 %101, 1
  %112 = getelementptr inbounds float, ptr %24, i64 %111
  %113 = load float, ptr %112, align 4, !tbaa !95
  %114 = getelementptr inbounds i32, ptr %61, i64 %111
  %115 = load i32, ptr %114, align 4, !tbaa !47
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds float, ptr %13, i64 %116
  %118 = load float, ptr %117, align 4, !tbaa !95
  %119 = tail call float @llvm.fmuladd.f32(float %113, float %118, float %110)
  %120 = add nuw nsw i64 %101, 2
  %121 = getelementptr inbounds float, ptr %24, i64 %120
  %122 = load float, ptr %121, align 4, !tbaa !95
  %123 = getelementptr inbounds i32, ptr %61, i64 %120
  %124 = load i32, ptr %123, align 4, !tbaa !47
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds float, ptr %13, i64 %125
  %127 = load float, ptr %126, align 4, !tbaa !95
  %128 = tail call float @llvm.fmuladd.f32(float %122, float %127, float %119)
  %129 = add nuw nsw i64 %101, 3
  %130 = getelementptr inbounds float, ptr %24, i64 %129
  %131 = load float, ptr %130, align 4, !tbaa !95
  %132 = getelementptr inbounds i32, ptr %61, i64 %129
  %133 = load i32, ptr %132, align 4, !tbaa !47
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds float, ptr %13, i64 %134
  %136 = load float, ptr %135, align 4, !tbaa !95
  %137 = tail call float @llvm.fmuladd.f32(float %131, float %136, float %128)
  %138 = add nuw nsw i64 %101, 4
  %139 = trunc i64 %138 to i32
  %140 = icmp eq i32 %55, %139
  br i1 %140, label %89, label %100

141:                                              ; preds = %165, %39
  %142 = phi ptr [ %11, %39 ], [ %189, %165 ]
  %143 = phi ptr [ %13, %39 ], [ %190, %165 ]
  %144 = icmp eq i32 %44, 0
  br i1 %144, label %155, label %145

145:                                              ; preds = %141
  %146 = load i64, ptr %142, align 8, !tbaa !34
  %147 = getelementptr inbounds float, ptr %43, i64 %146
  %148 = load float, ptr %147, align 4, !tbaa !95
  %149 = fpext float %148 to double
  %150 = fmul double %41, %149
  %151 = load float, ptr %143, align 4, !tbaa !95
  %152 = fpext float %151 to double
  %153 = fmul double %150, %152
  %154 = fptrunc double %153 to float
  store float %154, ptr %143, align 4, !tbaa !95
  br label %155

155:                                              ; preds = %141, %145
  %156 = add i32 %7, -1
  %157 = icmp sgt i32 %156, -1
  br i1 %157, label %158, label %682

158:                                              ; preds = %155
  %159 = zext i32 %156 to i64
  %160 = getelementptr inbounds float, ptr %13, i64 %159
  %161 = getelementptr inbounds i64, ptr %11, i64 %159
  %162 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %163 = load ptr, ptr %162, align 8
  %164 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  br label %193

165:                                              ; preds = %165, %46
  %166 = phi ptr [ %11, %46 ], [ %189, %165 ]
  %167 = phi ptr [ %13, %46 ], [ %190, %165 ]
  %168 = phi i32 [ 0, %46 ], [ %191, %165 ]
  %169 = load i64, ptr %166, align 8, !tbaa !34
  %170 = getelementptr inbounds float, ptr %43, i64 %169
  %171 = load float, ptr %170, align 4, !tbaa !95
  %172 = fpext float %171 to double
  %173 = fmul double %41, %172
  %174 = load float, ptr %167, align 4, !tbaa !95
  %175 = fpext float %174 to double
  %176 = fmul double %173, %175
  %177 = fptrunc double %176 to float
  store float %177, ptr %167, align 4, !tbaa !95
  %178 = getelementptr inbounds i64, ptr %166, i64 1
  %179 = getelementptr inbounds float, ptr %167, i64 1
  %180 = load i64, ptr %178, align 8, !tbaa !34
  %181 = getelementptr inbounds float, ptr %43, i64 %180
  %182 = load float, ptr %181, align 4, !tbaa !95
  %183 = fpext float %182 to double
  %184 = fmul double %41, %183
  %185 = load float, ptr %179, align 4, !tbaa !95
  %186 = fpext float %185 to double
  %187 = fmul double %184, %186
  %188 = fptrunc double %187 to float
  store float %188, ptr %179, align 4, !tbaa !95
  %189 = getelementptr inbounds i64, ptr %166, i64 2
  %190 = getelementptr inbounds float, ptr %167, i64 2
  %191 = add i32 %168, 2
  %192 = icmp eq i32 %191, %47
  br i1 %192, label %141, label %165

193:                                              ; preds = %158, %232
  %194 = phi i64 [ %159, %158 ], [ %241, %232 ]
  %195 = phi ptr [ %161, %158 ], [ %242, %232 ]
  %196 = phi ptr [ %160, %158 ], [ %243, %232 ]
  %197 = getelementptr inbounds i64, ptr %195, i64 1
  %198 = load i64, ptr %197, align 8, !tbaa !34
  %199 = trunc i64 %198 to i32
  %200 = getelementptr inbounds i32, ptr %16, i64 %194
  %201 = load i32, ptr %200, align 4, !tbaa !47
  %202 = icmp ult i32 %201, %199
  br i1 %202, label %203, label %232

203:                                              ; preds = %193
  %204 = load ptr, ptr %164, align 8, !tbaa !46
  %205 = zext i32 %201 to i64
  %206 = and i64 %198, 4294967295
  %207 = sub i64 %198, %205
  %208 = xor i64 %205, -1
  %209 = add nsw i64 %206, %208
  %210 = and i64 %207, 3
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %227, label %212

212:                                              ; preds = %203, %212
  %213 = phi i64 [ %224, %212 ], [ %205, %203 ]
  %214 = phi float [ %223, %212 ], [ 0.000000e+00, %203 ]
  %215 = phi i64 [ %225, %212 ], [ 0, %203 ]
  %216 = getelementptr inbounds float, ptr %163, i64 %213
  %217 = load float, ptr %216, align 4, !tbaa !95
  %218 = getelementptr inbounds i32, ptr %204, i64 %213
  %219 = load i32, ptr %218, align 4, !tbaa !47
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds float, ptr %13, i64 %220
  %222 = load float, ptr %221, align 4, !tbaa !95
  %223 = tail call float @llvm.fmuladd.f32(float %217, float %222, float %214)
  %224 = add nuw nsw i64 %213, 1
  %225 = add i64 %215, 1
  %226 = icmp eq i64 %225, %210
  br i1 %226, label %227, label %212, !llvm.loop !213

227:                                              ; preds = %212, %203
  %228 = phi float [ undef, %203 ], [ %223, %212 ]
  %229 = phi i64 [ %205, %203 ], [ %224, %212 ]
  %230 = phi float [ 0.000000e+00, %203 ], [ %223, %212 ]
  %231 = icmp ult i64 %209, 3
  br i1 %231, label %232, label %245

232:                                              ; preds = %227, %245, %193
  %233 = phi float [ 0.000000e+00, %193 ], [ %228, %227 ], [ %282, %245 ]
  %234 = load float, ptr %196, align 4, !tbaa !95
  %235 = fneg float %233
  %236 = tail call float @llvm.fmuladd.f32(float %235, float %3, float %234)
  store float %236, ptr %196, align 4, !tbaa !95
  %237 = load i64, ptr %195, align 8, !tbaa !34
  %238 = getelementptr inbounds float, ptr %163, i64 %237
  %239 = load float, ptr %238, align 4, !tbaa !95
  %240 = fdiv float %236, %239
  store float %240, ptr %196, align 4, !tbaa !95
  %241 = add nsw i64 %194, -1
  %242 = getelementptr inbounds i64, ptr %195, i64 -1
  %243 = getelementptr inbounds float, ptr %196, i64 -1
  %244 = icmp sgt i64 %194, 0
  br i1 %244, label %193, label %682

245:                                              ; preds = %227, %245
  %246 = phi i64 [ %283, %245 ], [ %229, %227 ]
  %247 = phi float [ %282, %245 ], [ %230, %227 ]
  %248 = getelementptr inbounds float, ptr %163, i64 %246
  %249 = load float, ptr %248, align 4, !tbaa !95
  %250 = getelementptr inbounds i32, ptr %204, i64 %246
  %251 = load i32, ptr %250, align 4, !tbaa !47
  %252 = zext i32 %251 to i64
  %253 = getelementptr inbounds float, ptr %13, i64 %252
  %254 = load float, ptr %253, align 4, !tbaa !95
  %255 = tail call float @llvm.fmuladd.f32(float %249, float %254, float %247)
  %256 = add nuw nsw i64 %246, 1
  %257 = getelementptr inbounds float, ptr %163, i64 %256
  %258 = load float, ptr %257, align 4, !tbaa !95
  %259 = getelementptr inbounds i32, ptr %204, i64 %256
  %260 = load i32, ptr %259, align 4, !tbaa !47
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds float, ptr %13, i64 %261
  %263 = load float, ptr %262, align 4, !tbaa !95
  %264 = tail call float @llvm.fmuladd.f32(float %258, float %263, float %255)
  %265 = add nuw nsw i64 %246, 2
  %266 = getelementptr inbounds float, ptr %163, i64 %265
  %267 = load float, ptr %266, align 4, !tbaa !95
  %268 = getelementptr inbounds i32, ptr %204, i64 %265
  %269 = load i32, ptr %268, align 4, !tbaa !47
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds float, ptr %13, i64 %270
  %272 = load float, ptr %271, align 4, !tbaa !95
  %273 = tail call float @llvm.fmuladd.f32(float %267, float %272, float %264)
  %274 = add nuw nsw i64 %246, 3
  %275 = getelementptr inbounds float, ptr %163, i64 %274
  %276 = load float, ptr %275, align 4, !tbaa !95
  %277 = getelementptr inbounds i32, ptr %204, i64 %274
  %278 = load i32, ptr %277, align 4, !tbaa !47
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds float, ptr %13, i64 %279
  %281 = load float, ptr %280, align 4, !tbaa !95
  %282 = tail call float @llvm.fmuladd.f32(float %276, float %281, float %273)
  %283 = add nuw nsw i64 %246, 4
  %284 = icmp eq i64 %283, %206
  br i1 %284, label %232, label %245

285:                                              ; preds = %415
  br i1 %18, label %682, label %286

286:                                              ; preds = %285
  %287 = fpext float %3 to double
  %288 = fsub double 2.000000e+00, %287
  %289 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %290 = load ptr, ptr %289, align 8, !tbaa !92
  %291 = and i32 %7, 1
  %292 = icmp eq i32 %7, 1
  br i1 %292, label %466, label %293

293:                                              ; preds = %286
  %294 = and i32 %7, -2
  br label %492

295:                                              ; preds = %28, %415
  %296 = phi i64 [ %37, %28 ], [ %305, %415 ]
  %297 = phi i64 [ 0, %28 ], [ %422, %415 ]
  %298 = phi ptr [ %11, %28 ], [ %304, %415 ]
  %299 = phi ptr [ %13, %28 ], [ %423, %415 ]
  %300 = getelementptr inbounds float, ptr %30, i64 %297
  %301 = load float, ptr %300, align 4, !tbaa !95
  store float %301, ptr %299, align 4, !tbaa !95
  %302 = add i64 %296, 1
  %303 = getelementptr inbounds i32, ptr %32, i64 %302
  %304 = getelementptr inbounds i64, ptr %298, i64 1
  %305 = load i64, ptr %304, align 8, !tbaa !34
  %306 = getelementptr inbounds i32, ptr %32, i64 %305
  %307 = ptrtoint ptr %306 to i64
  %308 = ptrtoint ptr %303 to i64
  %309 = sub i64 %307, %308
  %310 = lshr exact i64 %309, 2
  %311 = trunc i64 %310 to i32
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %378, label %313

313:                                              ; preds = %295, %366
  %314 = phi i32 [ %376, %366 ], [ %311, %295 ]
  %315 = phi ptr [ %377, %366 ], [ %303, %295 ]
  %316 = icmp ult i32 %314, 8
  br i1 %316, label %317, label %366

317:                                              ; preds = %313
  switch i32 %314, label %366 [
    i32 7, label %318
    i32 6, label %324
    i32 5, label %331
    i32 4, label %338
    i32 3, label %345
    i32 2, label %352
    i32 1, label %359
  ]

318:                                              ; preds = %317
  %319 = load i32, ptr %315, align 4, !tbaa !47
  %320 = zext i32 %319 to i64
  %321 = icmp ugt i64 %297, %320
  br i1 %321, label %322, label %378

322:                                              ; preds = %318
  %323 = getelementptr inbounds i32, ptr %315, i64 1
  br label %324

324:                                              ; preds = %317, %322
  %325 = phi ptr [ %323, %322 ], [ %315, %317 ]
  %326 = load i32, ptr %325, align 4, !tbaa !47
  %327 = zext i32 %326 to i64
  %328 = icmp ugt i64 %297, %327
  br i1 %328, label %329, label %378

329:                                              ; preds = %324
  %330 = getelementptr inbounds i32, ptr %325, i64 1
  br label %331

331:                                              ; preds = %317, %329
  %332 = phi ptr [ %330, %329 ], [ %315, %317 ]
  %333 = load i32, ptr %332, align 4, !tbaa !47
  %334 = zext i32 %333 to i64
  %335 = icmp ugt i64 %297, %334
  br i1 %335, label %336, label %378

336:                                              ; preds = %331
  %337 = getelementptr inbounds i32, ptr %332, i64 1
  br label %338

338:                                              ; preds = %317, %336
  %339 = phi ptr [ %337, %336 ], [ %315, %317 ]
  %340 = load i32, ptr %339, align 4, !tbaa !47
  %341 = zext i32 %340 to i64
  %342 = icmp ugt i64 %297, %341
  br i1 %342, label %343, label %378

343:                                              ; preds = %338
  %344 = getelementptr inbounds i32, ptr %339, i64 1
  br label %345

345:                                              ; preds = %317, %343
  %346 = phi ptr [ %344, %343 ], [ %315, %317 ]
  %347 = load i32, ptr %346, align 4, !tbaa !47
  %348 = zext i32 %347 to i64
  %349 = icmp ugt i64 %297, %348
  br i1 %349, label %350, label %378

350:                                              ; preds = %345
  %351 = getelementptr inbounds i32, ptr %346, i64 1
  br label %352

352:                                              ; preds = %317, %350
  %353 = phi ptr [ %351, %350 ], [ %315, %317 ]
  %354 = load i32, ptr %353, align 4, !tbaa !47
  %355 = zext i32 %354 to i64
  %356 = icmp ugt i64 %297, %355
  br i1 %356, label %357, label %378

357:                                              ; preds = %352
  %358 = getelementptr inbounds i32, ptr %353, i64 1
  br label %359

359:                                              ; preds = %317, %357
  %360 = phi ptr [ %358, %357 ], [ %315, %317 ]
  %361 = load i32, ptr %360, align 4, !tbaa !47
  %362 = zext i32 %361 to i64
  %363 = icmp ugt i64 %297, %362
  %364 = zext i1 %363 to i64
  %365 = getelementptr inbounds i32, ptr %360, i64 %364
  br label %378

366:                                              ; preds = %317, %313
  %367 = lshr i32 %314, 1
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds i32, ptr %315, i64 %368
  %370 = load i32, ptr %369, align 4, !tbaa !47
  %371 = zext i32 %370 to i64
  %372 = icmp ugt i64 %297, %371
  %373 = getelementptr inbounds i32, ptr %369, i64 1
  %374 = xor i32 %367, -1
  %375 = add i32 %314, %374
  %376 = select i1 %372, i32 %375, i32 %367
  %377 = select i1 %372, ptr %373, ptr %315
  br label %313

378:                                              ; preds = %295, %318, %324, %331, %338, %345, %352, %359
  %379 = phi ptr [ %303, %295 ], [ %315, %318 ], [ %325, %324 ], [ %332, %331 ], [ %339, %338 ], [ %346, %345 ], [ %353, %352 ], [ %365, %359 ]
  %380 = ptrtoint ptr %379 to i64
  %381 = sub i64 %380, %33
  %382 = lshr exact i64 %381, 2
  %383 = trunc i64 %382 to i32
  %384 = trunc i64 %296 to i32
  %385 = add i32 %384, 1
  %386 = icmp ult i32 %385, %383
  br i1 %386, label %387, label %415

387:                                              ; preds = %378
  %388 = zext i32 %385 to i64
  %389 = xor i32 %384, -1
  %390 = add i32 %389, %383
  %391 = add i32 %383, -2
  %392 = sub i32 %391, %384
  %393 = and i32 %390, 3
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %410, label %395

395:                                              ; preds = %387, %395
  %396 = phi i64 [ %407, %395 ], [ %388, %387 ]
  %397 = phi float [ %406, %395 ], [ 0.000000e+00, %387 ]
  %398 = phi i32 [ %408, %395 ], [ 0, %387 ]
  %399 = getelementptr inbounds float, ptr %35, i64 %396
  %400 = load float, ptr %399, align 4, !tbaa !95
  %401 = getelementptr inbounds i32, ptr %32, i64 %396
  %402 = load i32, ptr %401, align 4, !tbaa !47
  %403 = zext i32 %402 to i64
  %404 = getelementptr inbounds float, ptr %13, i64 %403
  %405 = load float, ptr %404, align 4, !tbaa !95
  %406 = tail call float @llvm.fmuladd.f32(float %400, float %405, float %397)
  %407 = add nuw nsw i64 %396, 1
  %408 = add i32 %398, 1
  %409 = icmp eq i32 %408, %393
  br i1 %409, label %410, label %395, !llvm.loop !214

410:                                              ; preds = %395, %387
  %411 = phi float [ undef, %387 ], [ %406, %395 ]
  %412 = phi i64 [ %388, %387 ], [ %407, %395 ]
  %413 = phi float [ 0.000000e+00, %387 ], [ %406, %395 ]
  %414 = icmp ult i32 %392, 3
  br i1 %414, label %415, label %425

415:                                              ; preds = %410, %425, %378
  %416 = phi float [ 0.000000e+00, %378 ], [ %411, %410 ], [ %462, %425 ]
  %417 = fneg float %416
  %418 = tail call float @llvm.fmuladd.f32(float %417, float %3, float %301)
  store float %418, ptr %299, align 4, !tbaa !95
  %419 = getelementptr inbounds float, ptr %35, i64 %296
  %420 = load float, ptr %419, align 4, !tbaa !95
  %421 = fdiv float %418, %420
  store float %421, ptr %299, align 4, !tbaa !95
  %422 = add nuw nsw i64 %297, 1
  %423 = getelementptr inbounds float, ptr %299, i64 1
  %424 = icmp eq i64 %422, %36
  br i1 %424, label %285, label %295

425:                                              ; preds = %410, %425
  %426 = phi i64 [ %463, %425 ], [ %412, %410 ]
  %427 = phi float [ %462, %425 ], [ %413, %410 ]
  %428 = getelementptr inbounds float, ptr %35, i64 %426
  %429 = load float, ptr %428, align 4, !tbaa !95
  %430 = getelementptr inbounds i32, ptr %32, i64 %426
  %431 = load i32, ptr %430, align 4, !tbaa !47
  %432 = zext i32 %431 to i64
  %433 = getelementptr inbounds float, ptr %13, i64 %432
  %434 = load float, ptr %433, align 4, !tbaa !95
  %435 = tail call float @llvm.fmuladd.f32(float %429, float %434, float %427)
  %436 = add nuw nsw i64 %426, 1
  %437 = getelementptr inbounds float, ptr %35, i64 %436
  %438 = load float, ptr %437, align 4, !tbaa !95
  %439 = getelementptr inbounds i32, ptr %32, i64 %436
  %440 = load i32, ptr %439, align 4, !tbaa !47
  %441 = zext i32 %440 to i64
  %442 = getelementptr inbounds float, ptr %13, i64 %441
  %443 = load float, ptr %442, align 4, !tbaa !95
  %444 = tail call float @llvm.fmuladd.f32(float %438, float %443, float %435)
  %445 = add nuw nsw i64 %426, 2
  %446 = getelementptr inbounds float, ptr %35, i64 %445
  %447 = load float, ptr %446, align 4, !tbaa !95
  %448 = getelementptr inbounds i32, ptr %32, i64 %445
  %449 = load i32, ptr %448, align 4, !tbaa !47
  %450 = zext i32 %449 to i64
  %451 = getelementptr inbounds float, ptr %13, i64 %450
  %452 = load float, ptr %451, align 4, !tbaa !95
  %453 = tail call float @llvm.fmuladd.f32(float %447, float %452, float %444)
  %454 = add nuw nsw i64 %426, 3
  %455 = getelementptr inbounds float, ptr %35, i64 %454
  %456 = load float, ptr %455, align 4, !tbaa !95
  %457 = getelementptr inbounds i32, ptr %32, i64 %454
  %458 = load i32, ptr %457, align 4, !tbaa !47
  %459 = zext i32 %458 to i64
  %460 = getelementptr inbounds float, ptr %13, i64 %459
  %461 = load float, ptr %460, align 4, !tbaa !95
  %462 = tail call float @llvm.fmuladd.f32(float %456, float %461, float %453)
  %463 = add nuw nsw i64 %426, 4
  %464 = trunc i64 %463 to i32
  %465 = icmp eq i32 %464, %383
  br i1 %465, label %415, label %425

466:                                              ; preds = %492, %286
  %467 = phi ptr [ %11, %286 ], [ %516, %492 ]
  %468 = phi ptr [ %13, %286 ], [ %517, %492 ]
  %469 = icmp eq i32 %291, 0
  br i1 %469, label %480, label %470

470:                                              ; preds = %466
  %471 = load i64, ptr %467, align 8, !tbaa !34
  %472 = getelementptr inbounds float, ptr %290, i64 %471
  %473 = load float, ptr %472, align 4, !tbaa !95
  %474 = fpext float %473 to double
  %475 = fmul double %288, %474
  %476 = load float, ptr %468, align 4, !tbaa !95
  %477 = fpext float %476 to double
  %478 = fmul double %475, %477
  %479 = fptrunc double %478 to float
  store float %479, ptr %468, align 4, !tbaa !95
  br label %480

480:                                              ; preds = %466, %470
  %481 = add i32 %7, -1
  %482 = icmp sgt i32 %481, -1
  br i1 %482, label %483, label %682

483:                                              ; preds = %480
  %484 = zext i32 %481 to i64
  %485 = getelementptr inbounds float, ptr %13, i64 %484
  %486 = getelementptr inbounds i64, ptr %11, i64 %484
  %487 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %488 = load ptr, ptr %487, align 8, !tbaa !46
  %489 = ptrtoint ptr %488 to i64
  %490 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %491 = load ptr, ptr %490, align 8
  br label %520

492:                                              ; preds = %492, %293
  %493 = phi ptr [ %11, %293 ], [ %516, %492 ]
  %494 = phi ptr [ %13, %293 ], [ %517, %492 ]
  %495 = phi i32 [ 0, %293 ], [ %518, %492 ]
  %496 = load i64, ptr %493, align 8, !tbaa !34
  %497 = getelementptr inbounds float, ptr %290, i64 %496
  %498 = load float, ptr %497, align 4, !tbaa !95
  %499 = fpext float %498 to double
  %500 = fmul double %288, %499
  %501 = load float, ptr %494, align 4, !tbaa !95
  %502 = fpext float %501 to double
  %503 = fmul double %500, %502
  %504 = fptrunc double %503 to float
  store float %504, ptr %494, align 4, !tbaa !95
  %505 = getelementptr inbounds i64, ptr %493, i64 1
  %506 = getelementptr inbounds float, ptr %494, i64 1
  %507 = load i64, ptr %505, align 8, !tbaa !34
  %508 = getelementptr inbounds float, ptr %290, i64 %507
  %509 = load float, ptr %508, align 4, !tbaa !95
  %510 = fpext float %509 to double
  %511 = fmul double %288, %510
  %512 = load float, ptr %506, align 4, !tbaa !95
  %513 = fpext float %512 to double
  %514 = fmul double %511, %513
  %515 = fptrunc double %514 to float
  store float %515, ptr %506, align 4, !tbaa !95
  %516 = getelementptr inbounds i64, ptr %493, i64 2
  %517 = getelementptr inbounds float, ptr %494, i64 2
  %518 = add i32 %495, 2
  %519 = icmp eq i32 %518, %294
  br i1 %519, label %466, label %492

520:                                              ; preds = %483, %630
  %521 = phi ptr [ %486, %483 ], [ %639, %630 ]
  %522 = phi ptr [ %485, %483 ], [ %640, %630 ]
  %523 = phi i32 [ %481, %483 ], [ %638, %630 ]
  %524 = getelementptr inbounds i64, ptr %521, i64 1
  %525 = load i64, ptr %524, align 8, !tbaa !34
  %526 = trunc i64 %525 to i32
  %527 = load i64, ptr %521, align 8, !tbaa !34
  %528 = add i64 %527, 1
  %529 = getelementptr inbounds i32, ptr %488, i64 %528
  %530 = and i64 %525, 4294967295
  %531 = getelementptr inbounds i32, ptr %488, i64 %530
  %532 = ptrtoint ptr %531 to i64
  %533 = ptrtoint ptr %529 to i64
  %534 = sub i64 %532, %533
  %535 = lshr exact i64 %534, 2
  %536 = trunc i64 %535 to i32
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %595, label %538

538:                                              ; preds = %520, %584
  %539 = phi i32 [ %593, %584 ], [ %536, %520 ]
  %540 = phi ptr [ %594, %584 ], [ %529, %520 ]
  %541 = icmp ult i32 %539, 8
  br i1 %541, label %542, label %584

542:                                              ; preds = %538
  switch i32 %539, label %584 [
    i32 7, label %543
    i32 6, label %548
    i32 5, label %554
    i32 4, label %560
    i32 3, label %566
    i32 2, label %572
    i32 1, label %578
  ]

543:                                              ; preds = %542
  %544 = load i32, ptr %540, align 4, !tbaa !47
  %545 = icmp ult i32 %544, %523
  br i1 %545, label %546, label %595

546:                                              ; preds = %543
  %547 = getelementptr inbounds i32, ptr %540, i64 1
  br label %548

548:                                              ; preds = %542, %546
  %549 = phi ptr [ %547, %546 ], [ %540, %542 ]
  %550 = load i32, ptr %549, align 4, !tbaa !47
  %551 = icmp ult i32 %550, %523
  br i1 %551, label %552, label %595

552:                                              ; preds = %548
  %553 = getelementptr inbounds i32, ptr %549, i64 1
  br label %554

554:                                              ; preds = %542, %552
  %555 = phi ptr [ %553, %552 ], [ %540, %542 ]
  %556 = load i32, ptr %555, align 4, !tbaa !47
  %557 = icmp ult i32 %556, %523
  br i1 %557, label %558, label %595

558:                                              ; preds = %554
  %559 = getelementptr inbounds i32, ptr %555, i64 1
  br label %560

560:                                              ; preds = %542, %558
  %561 = phi ptr [ %559, %558 ], [ %540, %542 ]
  %562 = load i32, ptr %561, align 4, !tbaa !47
  %563 = icmp ult i32 %562, %523
  br i1 %563, label %564, label %595

564:                                              ; preds = %560
  %565 = getelementptr inbounds i32, ptr %561, i64 1
  br label %566

566:                                              ; preds = %542, %564
  %567 = phi ptr [ %565, %564 ], [ %540, %542 ]
  %568 = load i32, ptr %567, align 4, !tbaa !47
  %569 = icmp ult i32 %568, %523
  br i1 %569, label %570, label %595

570:                                              ; preds = %566
  %571 = getelementptr inbounds i32, ptr %567, i64 1
  br label %572

572:                                              ; preds = %542, %570
  %573 = phi ptr [ %571, %570 ], [ %540, %542 ]
  %574 = load i32, ptr %573, align 4, !tbaa !47
  %575 = icmp ult i32 %574, %523
  br i1 %575, label %576, label %595

576:                                              ; preds = %572
  %577 = getelementptr inbounds i32, ptr %573, i64 1
  br label %578

578:                                              ; preds = %542, %576
  %579 = phi ptr [ %577, %576 ], [ %540, %542 ]
  %580 = load i32, ptr %579, align 4, !tbaa !47
  %581 = icmp ult i32 %580, %523
  %582 = zext i1 %581 to i64
  %583 = getelementptr inbounds i32, ptr %579, i64 %582
  br label %595

584:                                              ; preds = %542, %538
  %585 = lshr i32 %539, 1
  %586 = zext i32 %585 to i64
  %587 = getelementptr inbounds i32, ptr %540, i64 %586
  %588 = load i32, ptr %587, align 4, !tbaa !47
  %589 = icmp ult i32 %588, %523
  %590 = getelementptr inbounds i32, ptr %587, i64 1
  %591 = xor i32 %585, -1
  %592 = add i32 %539, %591
  %593 = select i1 %589, i32 %592, i32 %585
  %594 = select i1 %589, ptr %590, ptr %540
  br label %538

595:                                              ; preds = %520, %543, %548, %554, %560, %566, %572, %578
  %596 = phi ptr [ %529, %520 ], [ %540, %543 ], [ %549, %548 ], [ %555, %554 ], [ %561, %560 ], [ %567, %566 ], [ %573, %572 ], [ %583, %578 ]
  %597 = ptrtoint ptr %596 to i64
  %598 = sub i64 %597, %489
  %599 = lshr exact i64 %598, 2
  %600 = trunc i64 %599 to i32
  %601 = icmp ult i32 %600, %526
  br i1 %601, label %602, label %630

602:                                              ; preds = %595
  %603 = and i64 %599, 4294967295
  %604 = and i64 %525, 4294967295
  %605 = sub i64 %525, %599
  %606 = xor i64 %603, -1
  %607 = add nsw i64 %530, %606
  %608 = and i64 %605, 3
  %609 = icmp eq i64 %608, 0
  br i1 %609, label %625, label %610

610:                                              ; preds = %602, %610
  %611 = phi i64 [ %622, %610 ], [ %603, %602 ]
  %612 = phi float [ %621, %610 ], [ 0.000000e+00, %602 ]
  %613 = phi i64 [ %623, %610 ], [ 0, %602 ]
  %614 = getelementptr inbounds float, ptr %491, i64 %611
  %615 = load float, ptr %614, align 4, !tbaa !95
  %616 = getelementptr inbounds i32, ptr %488, i64 %611
  %617 = load i32, ptr %616, align 4, !tbaa !47
  %618 = zext i32 %617 to i64
  %619 = getelementptr inbounds float, ptr %13, i64 %618
  %620 = load float, ptr %619, align 4, !tbaa !95
  %621 = tail call float @llvm.fmuladd.f32(float %615, float %620, float %612)
  %622 = add nuw nsw i64 %611, 1
  %623 = add i64 %613, 1
  %624 = icmp eq i64 %623, %608
  br i1 %624, label %625, label %610, !llvm.loop !215

625:                                              ; preds = %610, %602
  %626 = phi float [ undef, %602 ], [ %621, %610 ]
  %627 = phi i64 [ %603, %602 ], [ %622, %610 ]
  %628 = phi float [ 0.000000e+00, %602 ], [ %621, %610 ]
  %629 = icmp ult i64 %607, 3
  br i1 %629, label %630, label %642

630:                                              ; preds = %625, %642, %595
  %631 = phi float [ 0.000000e+00, %595 ], [ %626, %625 ], [ %679, %642 ]
  %632 = load float, ptr %522, align 4, !tbaa !95
  %633 = fneg float %631
  %634 = tail call float @llvm.fmuladd.f32(float %633, float %3, float %632)
  store float %634, ptr %522, align 4, !tbaa !95
  %635 = getelementptr inbounds float, ptr %491, i64 %527
  %636 = load float, ptr %635, align 4, !tbaa !95
  %637 = fdiv float %634, %636
  store float %637, ptr %522, align 4, !tbaa !95
  %638 = add nsw i32 %523, -1
  %639 = getelementptr inbounds i64, ptr %521, i64 -1
  %640 = getelementptr inbounds float, ptr %522, i64 -1
  %641 = icmp sgt i32 %523, 0
  br i1 %641, label %520, label %682

642:                                              ; preds = %625, %642
  %643 = phi i64 [ %680, %642 ], [ %627, %625 ]
  %644 = phi float [ %679, %642 ], [ %628, %625 ]
  %645 = getelementptr inbounds float, ptr %491, i64 %643
  %646 = load float, ptr %645, align 4, !tbaa !95
  %647 = getelementptr inbounds i32, ptr %488, i64 %643
  %648 = load i32, ptr %647, align 4, !tbaa !47
  %649 = zext i32 %648 to i64
  %650 = getelementptr inbounds float, ptr %13, i64 %649
  %651 = load float, ptr %650, align 4, !tbaa !95
  %652 = tail call float @llvm.fmuladd.f32(float %646, float %651, float %644)
  %653 = add nuw nsw i64 %643, 1
  %654 = getelementptr inbounds float, ptr %491, i64 %653
  %655 = load float, ptr %654, align 4, !tbaa !95
  %656 = getelementptr inbounds i32, ptr %488, i64 %653
  %657 = load i32, ptr %656, align 4, !tbaa !47
  %658 = zext i32 %657 to i64
  %659 = getelementptr inbounds float, ptr %13, i64 %658
  %660 = load float, ptr %659, align 4, !tbaa !95
  %661 = tail call float @llvm.fmuladd.f32(float %655, float %660, float %652)
  %662 = add nuw nsw i64 %643, 2
  %663 = getelementptr inbounds float, ptr %491, i64 %662
  %664 = load float, ptr %663, align 4, !tbaa !95
  %665 = getelementptr inbounds i32, ptr %488, i64 %662
  %666 = load i32, ptr %665, align 4, !tbaa !47
  %667 = zext i32 %666 to i64
  %668 = getelementptr inbounds float, ptr %13, i64 %667
  %669 = load float, ptr %668, align 4, !tbaa !95
  %670 = tail call float @llvm.fmuladd.f32(float %664, float %669, float %661)
  %671 = add nuw nsw i64 %643, 3
  %672 = getelementptr inbounds float, ptr %491, i64 %671
  %673 = load float, ptr %672, align 4, !tbaa !95
  %674 = getelementptr inbounds i32, ptr %488, i64 %671
  %675 = load i32, ptr %674, align 4, !tbaa !47
  %676 = zext i32 %675 to i64
  %677 = getelementptr inbounds float, ptr %13, i64 %676
  %678 = load float, ptr %677, align 4, !tbaa !95
  %679 = tail call float @llvm.fmuladd.f32(float %673, float %678, float %670)
  %680 = add nuw nsw i64 %643, 4
  %681 = icmp eq i64 %680, %604
  br i1 %681, label %630, label %642

682:                                              ; preds = %232, %630, %27, %285, %19, %38, %155, %480
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE16precondition_SORIfEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %62, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !106
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !92
  %19 = zext i32 %9 to i64
  %20 = load i64, ptr %15, align 8, !tbaa !34
  br label %21

21:                                               ; preds = %35, %11
  %22 = phi i64 [ %20, %11 ], [ %28, %35 ]
  %23 = phi i64 [ 0, %11 ], [ %26, %35 ]
  %24 = getelementptr inbounds float, ptr %13, i64 %23
  %25 = load float, ptr %24, align 4, !tbaa !95
  %26 = add nuw nsw i64 %23, 1
  %27 = getelementptr inbounds i64, ptr %15, i64 %26
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = and i64 %22, 4294967295
  %30 = icmp ugt i64 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %21
  %32 = trunc i64 %22 to i32
  %33 = load ptr, ptr %16, align 8, !tbaa !46
  %34 = load ptr, ptr %17, align 8
  br label %42

35:                                               ; preds = %57, %21
  %36 = phi float [ %25, %21 ], [ %58, %57 ]
  %37 = fmul float %36, %3
  %38 = getelementptr inbounds float, ptr %18, i64 %22
  %39 = load float, ptr %38, align 4, !tbaa !95
  %40 = fdiv float %37, %39
  store float %40, ptr %24, align 4, !tbaa !95
  %41 = icmp eq i64 %26, %19
  br i1 %41, label %62, label %21

42:                                               ; preds = %57, %31
  %43 = phi i64 [ %29, %31 ], [ %60, %57 ]
  %44 = phi i32 [ %32, %31 ], [ %59, %57 ]
  %45 = phi float [ %25, %31 ], [ %58, %57 ]
  %46 = getelementptr inbounds i32, ptr %33, i64 %43
  %47 = load i32, ptr %46, align 4, !tbaa !47
  %48 = zext i32 %47 to i64
  %49 = icmp ugt i64 %23, %48
  br i1 %49, label %50, label %57

50:                                               ; preds = %42
  %51 = getelementptr inbounds float, ptr %34, i64 %43
  %52 = load float, ptr %51, align 4, !tbaa !95
  %53 = getelementptr inbounds float, ptr %13, i64 %48
  %54 = load float, ptr %53, align 4, !tbaa !95
  %55 = fneg float %52
  %56 = tail call float @llvm.fmuladd.f32(float %55, float %54, float %45)
  br label %57

57:                                               ; preds = %50, %42
  %58 = phi float [ %56, %50 ], [ %45, %42 ]
  %59 = add i32 %44, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %28, %60
  br i1 %61, label %42, label %35

62:                                               ; preds = %35, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE3SORIfEEvRNS_6VectorIT_EEf(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, float noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !106
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !92
  %17 = zext i32 %7 to i64
  %18 = load i64, ptr %13, align 8, !tbaa !34
  br label %20

19:                                               ; preds = %34, %3
  ret void

20:                                               ; preds = %9, %34
  %21 = phi i64 [ %18, %9 ], [ %27, %34 ]
  %22 = phi i64 [ 0, %9 ], [ %25, %34 ]
  %23 = getelementptr inbounds float, ptr %11, i64 %22
  %24 = load float, ptr %23, align 4, !tbaa !95
  %25 = add nuw nsw i64 %22, 1
  %26 = getelementptr inbounds i64, ptr %13, i64 %25
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = and i64 %21, 4294967295
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %20
  %31 = trunc i64 %21 to i32
  %32 = load ptr, ptr %14, align 8, !tbaa !46
  %33 = load ptr, ptr %15, align 8
  br label %41

34:                                               ; preds = %56, %20
  %35 = phi float [ %24, %20 ], [ %57, %56 ]
  %36 = fmul float %35, %2
  %37 = getelementptr inbounds float, ptr %16, i64 %21
  %38 = load float, ptr %37, align 4, !tbaa !95
  %39 = fdiv float %36, %38
  store float %39, ptr %23, align 4, !tbaa !95
  %40 = icmp eq i64 %25, %17
  br i1 %40, label %19, label %20

41:                                               ; preds = %30, %56
  %42 = phi i64 [ %28, %30 ], [ %59, %56 ]
  %43 = phi i32 [ %31, %30 ], [ %58, %56 ]
  %44 = phi float [ %24, %30 ], [ %57, %56 ]
  %45 = getelementptr inbounds i32, ptr %32, i64 %42
  %46 = load i32, ptr %45, align 4, !tbaa !47
  %47 = zext i32 %46 to i64
  %48 = icmp ugt i64 %22, %47
  br i1 %48, label %49, label %56

49:                                               ; preds = %41
  %50 = getelementptr inbounds float, ptr %33, i64 %42
  %51 = load float, ptr %50, align 4, !tbaa !95
  %52 = getelementptr inbounds float, ptr %11, i64 %47
  %53 = load float, ptr %52, align 4, !tbaa !95
  %54 = fneg float %51
  %55 = tail call float @llvm.fmuladd.f32(float %54, float %53, float %44)
  br label %56

56:                                               ; preds = %49, %41
  %57 = phi float [ %55, %49 ], [ %44, %41 ]
  %58 = add i32 %43, 1
  %59 = zext i32 %58 to i64
  %60 = icmp ugt i64 %27, %59
  br i1 %60, label %41, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE17precondition_TSORIfEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %64, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !106
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !92
  %19 = zext i32 %9 to i64
  br label %20

20:                                               ; preds = %37, %11
  %21 = phi i64 [ %19, %11 ], [ %22, %37 ]
  %22 = add nsw i64 %21, -1
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  %25 = getelementptr inbounds float, ptr %13, i64 %24
  %26 = load float, ptr %25, align 4, !tbaa !95
  %27 = getelementptr inbounds i64, ptr %15, i64 %24
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = getelementptr inbounds i64, ptr %15, i64 %21
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %28, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %20
  %34 = trunc i64 %28 to i32
  %35 = load ptr, ptr %16, align 8, !tbaa !46
  %36 = load ptr, ptr %17, align 8
  br label %44

37:                                               ; preds = %59, %20
  %38 = phi float [ %26, %20 ], [ %60, %59 ]
  %39 = fmul float %38, %3
  %40 = getelementptr inbounds float, ptr %18, i64 %28
  %41 = load float, ptr %40, align 4, !tbaa !95
  %42 = fdiv float %39, %41
  store float %42, ptr %25, align 4, !tbaa !95
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %64, label %20

44:                                               ; preds = %59, %33
  %45 = phi i64 [ %31, %33 ], [ %62, %59 ]
  %46 = phi i32 [ %34, %33 ], [ %61, %59 ]
  %47 = phi float [ %26, %33 ], [ %60, %59 ]
  %48 = getelementptr inbounds i32, ptr %35, i64 %45
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = icmp ugt i32 %49, %23
  br i1 %50, label %51, label %59

51:                                               ; preds = %44
  %52 = getelementptr inbounds float, ptr %36, i64 %45
  %53 = load float, ptr %52, align 4, !tbaa !95
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds float, ptr %13, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fneg float %53
  %58 = tail call float @llvm.fmuladd.f32(float %57, float %56, float %47)
  br label %59

59:                                               ; preds = %51, %44
  %60 = phi float [ %58, %51 ], [ %47, %44 ]
  %61 = add i32 %46, 1
  %62 = zext i32 %61 to i64
  %63 = icmp ugt i64 %30, %62
  br i1 %63, label %44, label %37

64:                                               ; preds = %37, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE4TSORIfEEvRNS_6VectorIT_EEf(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, float noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !106
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !92
  %17 = zext i32 %7 to i64
  br label %19

18:                                               ; preds = %36, %3
  ret void

19:                                               ; preds = %9, %36
  %20 = phi i64 [ %17, %9 ], [ %21, %36 ]
  %21 = add nsw i64 %20, -1
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  %24 = getelementptr inbounds float, ptr %11, i64 %23
  %25 = load float, ptr %24, align 4, !tbaa !95
  %26 = getelementptr inbounds i64, ptr %13, i64 %23
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = getelementptr inbounds i64, ptr %13, i64 %20
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %27, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %19
  %33 = trunc i64 %27 to i32
  %34 = load ptr, ptr %14, align 8, !tbaa !46
  %35 = load ptr, ptr %15, align 8
  br label %43

36:                                               ; preds = %58, %19
  %37 = phi float [ %25, %19 ], [ %59, %58 ]
  %38 = fmul float %37, %2
  %39 = getelementptr inbounds float, ptr %16, i64 %27
  %40 = load float, ptr %39, align 4, !tbaa !95
  %41 = fdiv float %38, %40
  store float %41, ptr %24, align 4, !tbaa !95
  %42 = icmp eq i32 %22, 0
  br i1 %42, label %18, label %19

43:                                               ; preds = %32, %58
  %44 = phi i64 [ %30, %32 ], [ %61, %58 ]
  %45 = phi i32 [ %33, %32 ], [ %60, %58 ]
  %46 = phi float [ %25, %32 ], [ %59, %58 ]
  %47 = getelementptr inbounds i32, ptr %34, i64 %44
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = icmp ugt i32 %48, %22
  br i1 %49, label %50, label %58

50:                                               ; preds = %43
  %51 = getelementptr inbounds float, ptr %35, i64 %44
  %52 = load float, ptr %51, align 4, !tbaa !95
  %53 = zext i32 %48 to i64
  %54 = getelementptr inbounds float, ptr %11, i64 %53
  %55 = load float, ptr %54, align 4, !tbaa !95
  %56 = fneg float %52
  %57 = tail call float @llvm.fmuladd.f32(float %56, float %55, float %46)
  br label %58

58:                                               ; preds = %43, %50
  %59 = phi float [ %57, %50 ], [ %46, %43 ]
  %60 = add i32 %45, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %29, %61
  br i1 %62, label %43, label %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE19precondition_JacobiIfEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !109
  %7 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !106
  %9 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !106
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !8
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %12, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = fcmp une float %3, 1.000000e+00
  %16 = icmp eq i32 %6, 0
  br i1 %15, label %25, label %17

17:                                               ; preds = %4
  br i1 %16, label %129, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !92
  %21 = and i32 %6, 3
  %22 = icmp ult i32 %6, 4
  br i1 %22, label %109, label %23

23:                                               ; preds = %18
  %24 = and i32 %6, -4
  br label %58

25:                                               ; preds = %4
  br i1 %16, label %129, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !92
  %29 = and i32 %6, 1
  %30 = icmp eq i32 %6, 1
  br i1 %30, label %97, label %31

31:                                               ; preds = %26
  %32 = and i32 %6, -2
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi ptr [ %14, %31 ], [ %55, %33 ]
  %35 = phi ptr [ %10, %31 ], [ %54, %33 ]
  %36 = phi ptr [ %8, %31 ], [ %53, %33 ]
  %37 = phi i32 [ 0, %31 ], [ %56, %33 ]
  %38 = load float, ptr %35, align 4, !tbaa !95
  %39 = fmul float %38, %3
  %40 = load i64, ptr %34, align 8, !tbaa !34
  %41 = getelementptr inbounds float, ptr %28, i64 %40
  %42 = load float, ptr %41, align 4, !tbaa !95
  %43 = fdiv float %39, %42
  store float %43, ptr %36, align 4, !tbaa !95
  %44 = getelementptr inbounds float, ptr %36, i64 1
  %45 = getelementptr inbounds float, ptr %35, i64 1
  %46 = getelementptr inbounds i64, ptr %34, i64 1
  %47 = load float, ptr %45, align 4, !tbaa !95
  %48 = fmul float %47, %3
  %49 = load i64, ptr %46, align 8, !tbaa !34
  %50 = getelementptr inbounds float, ptr %28, i64 %49
  %51 = load float, ptr %50, align 4, !tbaa !95
  %52 = fdiv float %48, %51
  store float %52, ptr %44, align 4, !tbaa !95
  %53 = getelementptr inbounds float, ptr %36, i64 2
  %54 = getelementptr inbounds float, ptr %35, i64 2
  %55 = getelementptr inbounds i64, ptr %34, i64 2
  %56 = add i32 %37, 2
  %57 = icmp eq i32 %56, %32
  br i1 %57, label %97, label %33

58:                                               ; preds = %58, %23
  %59 = phi ptr [ %14, %23 ], [ %94, %58 ]
  %60 = phi ptr [ %10, %23 ], [ %93, %58 ]
  %61 = phi ptr [ %8, %23 ], [ %92, %58 ]
  %62 = phi i32 [ 0, %23 ], [ %95, %58 ]
  %63 = load float, ptr %60, align 4, !tbaa !95
  %64 = load i64, ptr %59, align 8, !tbaa !34
  %65 = getelementptr inbounds float, ptr %20, i64 %64
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fdiv float %63, %66
  store float %67, ptr %61, align 4, !tbaa !95
  %68 = getelementptr inbounds float, ptr %61, i64 1
  %69 = getelementptr inbounds float, ptr %60, i64 1
  %70 = getelementptr inbounds i64, ptr %59, i64 1
  %71 = load float, ptr %69, align 4, !tbaa !95
  %72 = load i64, ptr %70, align 8, !tbaa !34
  %73 = getelementptr inbounds float, ptr %20, i64 %72
  %74 = load float, ptr %73, align 4, !tbaa !95
  %75 = fdiv float %71, %74
  store float %75, ptr %68, align 4, !tbaa !95
  %76 = getelementptr inbounds float, ptr %61, i64 2
  %77 = getelementptr inbounds float, ptr %60, i64 2
  %78 = getelementptr inbounds i64, ptr %59, i64 2
  %79 = load float, ptr %77, align 4, !tbaa !95
  %80 = load i64, ptr %78, align 8, !tbaa !34
  %81 = getelementptr inbounds float, ptr %20, i64 %80
  %82 = load float, ptr %81, align 4, !tbaa !95
  %83 = fdiv float %79, %82
  store float %83, ptr %76, align 4, !tbaa !95
  %84 = getelementptr inbounds float, ptr %61, i64 3
  %85 = getelementptr inbounds float, ptr %60, i64 3
  %86 = getelementptr inbounds i64, ptr %59, i64 3
  %87 = load float, ptr %85, align 4, !tbaa !95
  %88 = load i64, ptr %86, align 8, !tbaa !34
  %89 = getelementptr inbounds float, ptr %20, i64 %88
  %90 = load float, ptr %89, align 4, !tbaa !95
  %91 = fdiv float %87, %90
  store float %91, ptr %84, align 4, !tbaa !95
  %92 = getelementptr inbounds float, ptr %61, i64 4
  %93 = getelementptr inbounds float, ptr %60, i64 4
  %94 = getelementptr inbounds i64, ptr %59, i64 4
  %95 = add i32 %62, 4
  %96 = icmp eq i32 %95, %24
  br i1 %96, label %109, label %58

97:                                               ; preds = %33, %26
  %98 = phi ptr [ %14, %26 ], [ %55, %33 ]
  %99 = phi ptr [ %10, %26 ], [ %54, %33 ]
  %100 = phi ptr [ %8, %26 ], [ %53, %33 ]
  %101 = icmp eq i32 %29, 0
  br i1 %101, label %129, label %102

102:                                              ; preds = %97
  %103 = load float, ptr %99, align 4, !tbaa !95
  %104 = fmul float %103, %3
  %105 = load i64, ptr %98, align 8, !tbaa !34
  %106 = getelementptr inbounds float, ptr %28, i64 %105
  %107 = load float, ptr %106, align 4, !tbaa !95
  %108 = fdiv float %104, %107
  store float %108, ptr %100, align 4, !tbaa !95
  br label %129

109:                                              ; preds = %58, %18
  %110 = phi ptr [ %14, %18 ], [ %94, %58 ]
  %111 = phi ptr [ %10, %18 ], [ %93, %58 ]
  %112 = phi ptr [ %8, %18 ], [ %92, %58 ]
  %113 = icmp eq i32 %21, 0
  br i1 %113, label %129, label %114

114:                                              ; preds = %109, %114
  %115 = phi ptr [ %126, %114 ], [ %110, %109 ]
  %116 = phi ptr [ %125, %114 ], [ %111, %109 ]
  %117 = phi ptr [ %124, %114 ], [ %112, %109 ]
  %118 = phi i32 [ %127, %114 ], [ 0, %109 ]
  %119 = load float, ptr %116, align 4, !tbaa !95
  %120 = load i64, ptr %115, align 8, !tbaa !34
  %121 = getelementptr inbounds float, ptr %20, i64 %120
  %122 = load float, ptr %121, align 4, !tbaa !95
  %123 = fdiv float %119, %122
  store float %123, ptr %117, align 4, !tbaa !95
  %124 = getelementptr inbounds float, ptr %117, i64 1
  %125 = getelementptr inbounds float, ptr %116, i64 1
  %126 = getelementptr inbounds i64, ptr %115, i64 1
  %127 = add i32 %118, 1
  %128 = icmp eq i32 %127, %21
  br i1 %128, label %129, label %114, !llvm.loop !216

129:                                              ; preds = %109, %114, %102, %97, %17, %25
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE4SSORIfEEvRNS_6VectorIT_EEf(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, float noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %78, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = load ptr, ptr %13, align 8, !tbaa !92
  %17 = zext i32 %5 to i64
  %18 = load i64, ptr %11, align 8, !tbaa !34
  br label %33

19:                                               ; preds = %68
  %20 = add i32 %5, -1
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %22, label %78

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %24, i64 0, i32 8
  %26 = load ptr, ptr %25, align 8, !tbaa !32
  %27 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %24, i64 0, i32 9
  %28 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %30 = load ptr, ptr %28, align 8, !tbaa !92
  %31 = load ptr, ptr %29, align 8, !tbaa !106
  %32 = zext i32 %20 to i64
  br label %79

33:                                               ; preds = %7, %68
  %34 = phi i64 [ %18, %7 ], [ %38, %68 ]
  %35 = phi i64 [ 0, %7 ], [ %36, %68 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %11, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %68

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %12, align 8, !tbaa !46
  %44 = load ptr, ptr %13, align 8
  %45 = load ptr, ptr %14, align 8
  br label %46

46:                                               ; preds = %41, %63
  %47 = phi i64 [ %39, %41 ], [ %66, %63 ]
  %48 = phi i32 [ %42, %41 ], [ %65, %63 ]
  %49 = phi float [ 0.000000e+00, %41 ], [ %64, %63 ]
  %50 = getelementptr inbounds i32, ptr %43, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ne i32 %51, -1
  %53 = zext i32 %48 to i64
  %54 = icmp ugt i64 %35, %53
  %55 = and i1 %54, %52
  br i1 %55, label %56, label %63

56:                                               ; preds = %46
  %57 = getelementptr inbounds float, ptr %44, i64 %47
  %58 = load float, ptr %57, align 4, !tbaa !95
  %59 = zext i32 %51 to i64
  %60 = getelementptr inbounds float, ptr %45, i64 %59
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = tail call float @llvm.fmuladd.f32(float %58, float %61, float %49)
  br label %63

63:                                               ; preds = %56, %46
  %64 = phi float [ %62, %56 ], [ %49, %46 ]
  %65 = add i32 %48, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %38, %66
  br i1 %67, label %46, label %68

68:                                               ; preds = %63, %33
  %69 = phi float [ 0.000000e+00, %33 ], [ %64, %63 ]
  %70 = getelementptr inbounds float, ptr %15, i64 %35
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fneg float %69
  %73 = tail call float @llvm.fmuladd.f32(float %72, float %2, float %71)
  store float %73, ptr %70, align 4, !tbaa !95
  %74 = getelementptr inbounds float, ptr %16, i64 %34
  %75 = load float, ptr %74, align 4, !tbaa !95
  %76 = fdiv float %73, %75
  store float %76, ptr %70, align 4, !tbaa !95
  %77 = icmp eq i64 %36, %17
  br i1 %77, label %19, label %33

78:                                               ; preds = %116, %3, %19
  ret void

79:                                               ; preds = %22, %116
  %80 = phi i64 [ %32, %22 ], [ %125, %116 ]
  %81 = phi i32 [ %5, %22 ], [ %127, %116 ]
  %82 = getelementptr inbounds i64, ptr %26, i64 %80
  %83 = load i64, ptr %82, align 8, !tbaa !34
  %84 = sext i32 %81 to i64
  %85 = getelementptr inbounds i64, ptr %26, i64 %84
  %86 = load i64, ptr %85, align 8, !tbaa !34
  %87 = and i64 %83, 4294967295
  %88 = icmp ugt i64 %86, %87
  br i1 %88, label %89, label %116

89:                                               ; preds = %79
  %90 = trunc i64 %83 to i32
  %91 = load ptr, ptr %27, align 8, !tbaa !46
  %92 = load ptr, ptr %28, align 8
  %93 = load ptr, ptr %29, align 8
  br label %94

94:                                               ; preds = %89, %111
  %95 = phi i64 [ %87, %89 ], [ %114, %111 ]
  %96 = phi i32 [ %90, %89 ], [ %113, %111 ]
  %97 = phi float [ 0.000000e+00, %89 ], [ %112, %111 ]
  %98 = getelementptr inbounds i32, ptr %91, i64 %95
  %99 = load i32, ptr %98, align 4, !tbaa !47
  %100 = icmp ne i32 %99, -1
  %101 = zext i32 %96 to i64
  %102 = icmp ult i64 %80, %101
  %103 = and i1 %102, %100
  br i1 %103, label %104, label %111

104:                                              ; preds = %94
  %105 = getelementptr inbounds float, ptr %92, i64 %95
  %106 = load float, ptr %105, align 4, !tbaa !95
  %107 = zext i32 %99 to i64
  %108 = getelementptr inbounds float, ptr %93, i64 %107
  %109 = load float, ptr %108, align 4, !tbaa !95
  %110 = tail call float @llvm.fmuladd.f32(float %106, float %109, float %97)
  br label %111

111:                                              ; preds = %104, %94
  %112 = phi float [ %110, %104 ], [ %97, %94 ]
  %113 = add i32 %96, 1
  %114 = zext i32 %113 to i64
  %115 = icmp ugt i64 %86, %114
  br i1 %115, label %94, label %116

116:                                              ; preds = %111, %79
  %117 = phi float [ 0.000000e+00, %79 ], [ %112, %111 ]
  %118 = fmul float %117, %2
  %119 = getelementptr inbounds float, ptr %30, i64 %83
  %120 = load float, ptr %119, align 4, !tbaa !95
  %121 = fdiv float %118, %120
  %122 = getelementptr inbounds float, ptr %31, i64 %80
  %123 = load float, ptr %122, align 4, !tbaa !95
  %124 = fsub float %123, %121
  store float %124, ptr %122, align 4, !tbaa !95
  %125 = add nsw i64 %80, -1
  %126 = icmp sgt i64 %80, 0
  %127 = trunc i64 %80 to i32
  br i1 %126, label %79, label %78
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE4PSORIfEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, float noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !106
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !92
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %42, %5
  ret void

23:                                               ; preds = %11, %42
  %24 = phi i64 [ 0, %11 ], [ %48, %42 ]
  %25 = getelementptr inbounds i32, ptr %12, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !47
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds float, ptr %14, i64 %27
  %29 = load float, ptr %28, align 4, !tbaa !95
  %30 = getelementptr inbounds i64, ptr %16, i64 %27
  %31 = load i64, ptr %30, align 8, !tbaa !34
  %32 = add i32 %26, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i64, ptr %16, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %31, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %23
  %39 = trunc i64 %31 to i32
  %40 = load ptr, ptr %17, align 8, !tbaa !46
  %41 = load ptr, ptr %19, align 8
  br label %50

42:                                               ; preds = %68, %23
  %43 = phi float [ %29, %23 ], [ %69, %68 ]
  %44 = fmul float %43, %4
  %45 = getelementptr inbounds float, ptr %20, i64 %31
  %46 = load float, ptr %45, align 4, !tbaa !95
  %47 = fdiv float %44, %46
  store float %47, ptr %28, align 4, !tbaa !95
  %48 = add nuw nsw i64 %24, 1
  %49 = icmp eq i64 %48, %21
  br i1 %49, label %22, label %23

50:                                               ; preds = %38, %68
  %51 = phi i64 [ %36, %38 ], [ %71, %68 ]
  %52 = phi i32 [ %39, %38 ], [ %70, %68 ]
  %53 = phi float [ %29, %38 ], [ %69, %68 ]
  %54 = getelementptr inbounds i32, ptr %40, i64 %51
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i32, ptr %18, i64 %56
  %58 = load i32, ptr %57, align 4, !tbaa !47
  %59 = zext i32 %58 to i64
  %60 = icmp ugt i64 %24, %59
  br i1 %60, label %61, label %68

61:                                               ; preds = %50
  %62 = getelementptr inbounds float, ptr %41, i64 %51
  %63 = load float, ptr %62, align 4, !tbaa !95
  %64 = getelementptr inbounds float, ptr %14, i64 %56
  %65 = load float, ptr %64, align 4, !tbaa !95
  %66 = fneg float %63
  %67 = tail call float @llvm.fmuladd.f32(float %66, float %65, float %53)
  br label %68

68:                                               ; preds = %61, %50
  %69 = phi float [ %67, %61 ], [ %53, %50 ]
  %70 = add i32 %52, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %35, %71
  br i1 %72, label %50, label %42
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5TPSORIfEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, float noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !106
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !92
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %45, %5
  ret void

23:                                               ; preds = %11, %45
  %24 = phi i64 [ %21, %11 ], [ %25, %45 ]
  %25 = add nsw i64 %24, -1
  %26 = trunc i64 %25 to i32
  %27 = and i64 %25, 4294967295
  %28 = getelementptr inbounds i32, ptr %12, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !47
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds float, ptr %14, i64 %30
  %32 = load float, ptr %31, align 4, !tbaa !95
  %33 = getelementptr inbounds i64, ptr %16, i64 %30
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = add i32 %29, 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i64, ptr %16, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %23
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %17, align 8, !tbaa !46
  %44 = load ptr, ptr %19, align 8
  br label %52

45:                                               ; preds = %69, %23
  %46 = phi float [ %32, %23 ], [ %70, %69 ]
  %47 = fmul float %46, %4
  %48 = getelementptr inbounds float, ptr %20, i64 %34
  %49 = load float, ptr %48, align 4, !tbaa !95
  %50 = fdiv float %47, %49
  store float %50, ptr %31, align 4, !tbaa !95
  %51 = icmp eq i32 %26, 0
  br i1 %51, label %22, label %23

52:                                               ; preds = %41, %69
  %53 = phi i64 [ %39, %41 ], [ %72, %69 ]
  %54 = phi i32 [ %42, %41 ], [ %71, %69 ]
  %55 = phi float [ %32, %41 ], [ %70, %69 ]
  %56 = getelementptr inbounds i32, ptr %43, i64 %53
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %18, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = icmp ugt i32 %60, %26
  br i1 %61, label %62, label %69

62:                                               ; preds = %52
  %63 = getelementptr inbounds float, ptr %44, i64 %53
  %64 = load float, ptr %63, align 4, !tbaa !95
  %65 = getelementptr inbounds float, ptr %14, i64 %58
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fneg float %64
  %68 = tail call float @llvm.fmuladd.f32(float %67, float %66, float %55)
  br label %69

69:                                               ; preds = %62, %52
  %70 = phi float [ %68, %62 ], [ %55, %52 ]
  %71 = add i32 %54, 1
  %72 = zext i32 %71 to i64
  %73 = icmp ugt i64 %38, %72
  br i1 %73, label %52, label %45
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE8SOR_stepIfEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !106
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %8 to i64
  %21 = load i64, ptr %14, align 8, !tbaa !34
  br label %23

22:                                               ; preds = %36, %4
  ret void

23:                                               ; preds = %10, %36
  %24 = phi i64 [ %21, %10 ], [ %30, %36 ]
  %25 = phi i64 [ 0, %10 ], [ %28, %36 ]
  %26 = getelementptr inbounds float, ptr %12, i64 %25
  %27 = load float, ptr %26, align 4, !tbaa !95
  %28 = add nuw nsw i64 %25, 1
  %29 = getelementptr inbounds i64, ptr %14, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %24, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = trunc i64 %24 to i32
  %35 = load ptr, ptr %17, align 8, !tbaa !46
  br label %46

36:                                               ; preds = %46, %23
  %37 = phi float [ %27, %23 ], [ %58, %46 ]
  %38 = fmul float %37, %3
  %39 = getelementptr inbounds float, ptr %16, i64 %24
  %40 = load float, ptr %39, align 4, !tbaa !95
  %41 = fdiv float %38, %40
  %42 = getelementptr inbounds float, ptr %19, i64 %25
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fadd float %41, %43
  store float %44, ptr %42, align 4, !tbaa !95
  %45 = icmp eq i64 %28, %20
  br i1 %45, label %22, label %23

46:                                               ; preds = %33, %46
  %47 = phi i64 [ %31, %33 ], [ %60, %46 ]
  %48 = phi i32 [ %34, %33 ], [ %59, %46 ]
  %49 = phi float [ %27, %33 ], [ %58, %46 ]
  %50 = getelementptr inbounds float, ptr %16, i64 %47
  %51 = load float, ptr %50, align 4, !tbaa !95
  %52 = getelementptr inbounds i32, ptr %35, i64 %47
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds float, ptr %19, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fneg float %51
  %58 = tail call float @llvm.fmuladd.f32(float %57, float %56, float %49)
  %59 = add i32 %48, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %30, %60
  br i1 %61, label %46, label %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9TSOR_stepIfEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = add i32 %8, -1
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %22

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !106
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %19 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %38, %4
  ret void

23:                                               ; preds = %11, %38
  %24 = phi i64 [ %21, %11 ], [ %47, %38 ]
  %25 = phi i32 [ %8, %11 ], [ %49, %38 ]
  %26 = getelementptr inbounds float, ptr %13, i64 %24
  %27 = load float, ptr %26, align 4, !tbaa !95
  %28 = getelementptr inbounds i64, ptr %15, i64 %24
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = sext i32 %25 to i64
  %31 = getelementptr inbounds i64, ptr %15, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = and i64 %29, 4294967295
  %34 = icmp ugt i64 %32, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %23
  %36 = trunc i64 %29 to i32
  %37 = load ptr, ptr %18, align 8, !tbaa !46
  br label %50

38:                                               ; preds = %50, %23
  %39 = phi float [ %27, %23 ], [ %62, %50 ]
  %40 = fmul float %39, %3
  %41 = getelementptr inbounds float, ptr %17, i64 %29
  %42 = load float, ptr %41, align 4, !tbaa !95
  %43 = fdiv float %40, %42
  %44 = getelementptr inbounds float, ptr %20, i64 %24
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fadd float %43, %45
  store float %46, ptr %44, align 4, !tbaa !95
  %47 = add nsw i64 %24, -1
  %48 = icmp sgt i64 %24, 0
  %49 = trunc i64 %24 to i32
  br i1 %48, label %23, label %22

50:                                               ; preds = %35, %50
  %51 = phi i64 [ %33, %35 ], [ %64, %50 ]
  %52 = phi i32 [ %36, %35 ], [ %63, %50 ]
  %53 = phi float [ %27, %35 ], [ %62, %50 ]
  %54 = getelementptr inbounds float, ptr %17, i64 %51
  %55 = load float, ptr %54, align 4, !tbaa !95
  %56 = getelementptr inbounds i32, ptr %37, i64 %51
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds float, ptr %20, i64 %58
  %60 = load float, ptr %59, align 4, !tbaa !95
  %61 = fneg float %55
  %62 = tail call float @llvm.fmuladd.f32(float %61, float %60, float %53)
  %63 = add i32 %52, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %32, %64
  br i1 %65, label %50, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9SSOR_stepIfEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %111, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !106
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %8 to i64
  %21 = load i64, ptr %14, align 8, !tbaa !34
  br label %22

22:                                               ; preds = %35, %10
  %23 = phi i64 [ %21, %10 ], [ %29, %35 ]
  %24 = phi i64 [ 0, %10 ], [ %27, %35 ]
  %25 = getelementptr inbounds float, ptr %12, i64 %24
  %26 = load float, ptr %25, align 4, !tbaa !95
  %27 = add nuw nsw i64 %24, 1
  %28 = getelementptr inbounds i64, ptr %14, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %23, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %22
  %33 = trunc i64 %23 to i32
  %34 = load ptr, ptr %17, align 8, !tbaa !46
  br label %45

35:                                               ; preds = %45, %22
  %36 = phi float [ %26, %22 ], [ %57, %45 ]
  %37 = fmul float %36, %3
  %38 = getelementptr inbounds float, ptr %16, i64 %23
  %39 = load float, ptr %38, align 4, !tbaa !95
  %40 = fdiv float %37, %39
  %41 = getelementptr inbounds float, ptr %19, i64 %24
  %42 = load float, ptr %41, align 4, !tbaa !95
  %43 = fadd float %40, %42
  store float %43, ptr %41, align 4, !tbaa !95
  %44 = icmp eq i64 %27, %20
  br i1 %44, label %61, label %22

45:                                               ; preds = %45, %32
  %46 = phi i64 [ %30, %32 ], [ %59, %45 ]
  %47 = phi i32 [ %33, %32 ], [ %58, %45 ]
  %48 = phi float [ %26, %32 ], [ %57, %45 ]
  %49 = getelementptr inbounds float, ptr %16, i64 %46
  %50 = load float, ptr %49, align 4, !tbaa !95
  %51 = getelementptr inbounds i32, ptr %34, i64 %46
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds float, ptr %19, i64 %53
  %55 = load float, ptr %54, align 4, !tbaa !95
  %56 = fneg float %50
  %57 = tail call float @llvm.fmuladd.f32(float %56, float %55, float %48)
  %58 = add i32 %47, 1
  %59 = zext i32 %58 to i64
  %60 = icmp ugt i64 %29, %59
  br i1 %60, label %45, label %35

61:                                               ; preds = %35
  %62 = add i32 %8, -1
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %64, label %111

64:                                               ; preds = %61
  %65 = load ptr, ptr %15, align 8
  %66 = load ptr, ptr %18, align 8
  %67 = zext i32 %62 to i64
  br label %68

68:                                               ; preds = %83, %64
  %69 = phi i64 [ %67, %64 ], [ %92, %83 ]
  %70 = phi i32 [ %8, %64 ], [ %94, %83 ]
  %71 = getelementptr inbounds float, ptr %12, i64 %69
  %72 = load float, ptr %71, align 4, !tbaa !95
  %73 = getelementptr inbounds i64, ptr %14, i64 %69
  %74 = load i64, ptr %73, align 8, !tbaa !34
  %75 = sext i32 %70 to i64
  %76 = getelementptr inbounds i64, ptr %14, i64 %75
  %77 = load i64, ptr %76, align 8, !tbaa !34
  %78 = and i64 %74, 4294967295
  %79 = icmp ugt i64 %77, %78
  br i1 %79, label %80, label %83

80:                                               ; preds = %68
  %81 = trunc i64 %74 to i32
  %82 = load ptr, ptr %17, align 8, !tbaa !46
  br label %95

83:                                               ; preds = %95, %68
  %84 = phi float [ %72, %68 ], [ %107, %95 ]
  %85 = fmul float %84, %3
  %86 = getelementptr inbounds float, ptr %65, i64 %74
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fdiv float %85, %87
  %89 = getelementptr inbounds float, ptr %66, i64 %69
  %90 = load float, ptr %89, align 4, !tbaa !95
  %91 = fadd float %88, %90
  store float %91, ptr %89, align 4, !tbaa !95
  %92 = add nsw i64 %69, -1
  %93 = icmp sgt i64 %69, 0
  %94 = trunc i64 %69 to i32
  br i1 %93, label %68, label %111

95:                                               ; preds = %95, %80
  %96 = phi i64 [ %78, %80 ], [ %109, %95 ]
  %97 = phi i32 [ %81, %80 ], [ %108, %95 ]
  %98 = phi float [ %72, %80 ], [ %107, %95 ]
  %99 = getelementptr inbounds float, ptr %65, i64 %96
  %100 = load float, ptr %99, align 4, !tbaa !95
  %101 = getelementptr inbounds i32, ptr %82, i64 %96
  %102 = load i32, ptr %101, align 4, !tbaa !47
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds float, ptr %66, i64 %103
  %105 = load float, ptr %104, align 4, !tbaa !95
  %106 = fneg float %100
  %107 = tail call float @llvm.fmuladd.f32(float %106, float %105, float %98)
  %108 = add i32 %97, 1
  %109 = zext i32 %108 to i64
  %110 = icmp ugt i64 %77, %109
  br i1 %110, label %95, label %83

111:                                              ; preds = %83, %4, %61
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIfE18matrix_norm_squareIeEET_RKNS_6VectorIS3_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !92
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 9
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = load i64, ptr %10, align 8, !tbaa !34
  %16 = getelementptr inbounds i32, ptr %14, i64 %15
  %17 = getelementptr inbounds float, ptr %8, i64 %15
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %6 to i64
  br label %23

21:                                               ; preds = %47, %2
  %22 = phi x86_fp80 [ 0xK00000000000000000000, %2 ], [ %53, %47 ]
  ret x86_fp80 %22

23:                                               ; preds = %12, %47
  %24 = phi i64 [ 0, %12 ], [ %28, %47 ]
  %25 = phi x86_fp80 [ 0xK00000000000000000000, %12 ], [ %53, %47 ]
  %26 = phi ptr [ %16, %12 ], [ %50, %47 ]
  %27 = phi ptr [ %17, %12 ], [ %49, %47 ]
  %28 = add nuw nsw i64 %24, 1
  %29 = getelementptr inbounds i64, ptr %10, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = getelementptr inbounds float, ptr %8, i64 %30
  %32 = icmp eq ptr %27, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %23, %33
  %34 = phi ptr [ %40, %33 ], [ %26, %23 ]
  %35 = phi ptr [ %37, %33 ], [ %27, %23 ]
  %36 = phi x86_fp80 [ %45, %33 ], [ 0xK00000000000000000000, %23 ]
  %37 = getelementptr inbounds float, ptr %35, i64 1
  %38 = load float, ptr %35, align 4, !tbaa !95
  %39 = fpext float %38 to x86_fp80
  %40 = getelementptr inbounds i32, ptr %34, i64 1
  %41 = load i32, ptr %34, align 4, !tbaa !47
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds x86_fp80, ptr %19, i64 %42
  %44 = load x86_fp80, ptr %43, align 16, !tbaa !128
  %45 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %39, x86_fp80 %44, x86_fp80 %36)
  %46 = icmp eq ptr %37, %31
  br i1 %46, label %47, label %33

47:                                               ; preds = %33, %23
  %48 = phi x86_fp80 [ 0xK00000000000000000000, %23 ], [ %45, %33 ]
  %49 = phi ptr [ %27, %23 ], [ %31, %33 ]
  %50 = phi ptr [ %26, %23 ], [ %40, %33 ]
  %51 = getelementptr inbounds x86_fp80, ptr %19, i64 %24
  %52 = load x86_fp80, ptr %51, align 16, !tbaa !128
  %53 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %52, x86_fp80 %48, x86_fp80 %25)
  %54 = icmp eq i64 %28, %20
  br i1 %54, label %21, label %23
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIfE21matrix_scalar_productIeEET_RKNS_6VectorIS3_EES7_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = load i64, ptr %11, align 8, !tbaa !34
  %17 = getelementptr inbounds i32, ptr %15, i64 %16
  %18 = getelementptr inbounds float, ptr %9, i64 %16
  %19 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !135
  %23 = zext i32 %7 to i64
  br label %26

24:                                               ; preds = %50, %3
  %25 = phi x86_fp80 [ 0xK00000000000000000000, %3 ], [ %56, %50 ]
  ret x86_fp80 %25

26:                                               ; preds = %13, %50
  %27 = phi i64 [ 0, %13 ], [ %31, %50 ]
  %28 = phi x86_fp80 [ 0xK00000000000000000000, %13 ], [ %56, %50 ]
  %29 = phi ptr [ %17, %13 ], [ %53, %50 ]
  %30 = phi ptr [ %18, %13 ], [ %52, %50 ]
  %31 = add nuw nsw i64 %27, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = getelementptr inbounds float, ptr %9, i64 %33
  %35 = icmp eq ptr %30, %34
  br i1 %35, label %50, label %36

36:                                               ; preds = %26, %36
  %37 = phi ptr [ %43, %36 ], [ %29, %26 ]
  %38 = phi ptr [ %40, %36 ], [ %30, %26 ]
  %39 = phi x86_fp80 [ %48, %36 ], [ 0xK00000000000000000000, %26 ]
  %40 = getelementptr inbounds float, ptr %38, i64 1
  %41 = load float, ptr %38, align 4, !tbaa !95
  %42 = fpext float %41 to x86_fp80
  %43 = getelementptr inbounds i32, ptr %37, i64 1
  %44 = load i32, ptr %37, align 4, !tbaa !47
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds x86_fp80, ptr %20, i64 %45
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !128
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %42, x86_fp80 %47, x86_fp80 %39)
  %49 = icmp eq ptr %40, %34
  br i1 %49, label %50, label %36

50:                                               ; preds = %36, %26
  %51 = phi x86_fp80 [ 0xK00000000000000000000, %26 ], [ %48, %36 ]
  %52 = phi ptr [ %30, %26 ], [ %34, %36 ]
  %53 = phi ptr [ %29, %26 ], [ %43, %36 ]
  %54 = getelementptr inbounds x86_fp80, ptr %22, i64 %27
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  %56 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %55, x86_fp80 %51, x86_fp80 %28)
  %57 = icmp eq i64 %31, %23
  br i1 %57, label %24, label %26
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIfE8residualIeEET_RNS_6VectorIS3_EERKS5_S8_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.27", ptr %3, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !135
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !135
  %22 = zext i32 %8 to i64
  %23 = load i64, ptr %14, align 8, !tbaa !34
  br label %27

24:                                               ; preds = %41, %4
  %25 = phi x86_fp80 [ 0xK00000000000000000000, %4 ], [ %44, %41 ]
  %26 = tail call x86_fp80 @sqrtl(x86_fp80 noundef %25) #17
  ret x86_fp80 %26

27:                                               ; preds = %10, %41
  %28 = phi i64 [ %23, %10 ], [ %35, %41 ]
  %29 = phi i64 [ 0, %10 ], [ %33, %41 ]
  %30 = phi x86_fp80 [ 0xK00000000000000000000, %10 ], [ %44, %41 ]
  %31 = getelementptr inbounds x86_fp80, ptr %12, i64 %29
  %32 = load x86_fp80, ptr %31, align 16, !tbaa !128
  %33 = add nuw nsw i64 %29, 1
  %34 = getelementptr inbounds i64, ptr %14, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %28, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %27
  %39 = trunc i64 %28 to i32
  %40 = load ptr, ptr %15, align 8, !tbaa !46
  br label %46

41:                                               ; preds = %46, %27
  %42 = phi x86_fp80 [ %32, %27 ], [ %59, %46 ]
  %43 = getelementptr inbounds x86_fp80, ptr %21, i64 %29
  store x86_fp80 %42, ptr %43, align 16, !tbaa !128
  %44 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %42, x86_fp80 %42, x86_fp80 %30)
  %45 = icmp eq i64 %33, %22
  br i1 %45, label %24, label %27

46:                                               ; preds = %38, %46
  %47 = phi i64 [ %36, %38 ], [ %61, %46 ]
  %48 = phi i32 [ %39, %38 ], [ %60, %46 ]
  %49 = phi x86_fp80 [ %32, %38 ], [ %59, %46 ]
  %50 = getelementptr inbounds i32, ptr %40, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = getelementptr inbounds float, ptr %17, i64 %47
  %53 = load float, ptr %52, align 4, !tbaa !95
  %54 = fpext float %53 to x86_fp80
  %55 = zext i32 %51 to i64
  %56 = getelementptr inbounds x86_fp80, ptr %19, i64 %55
  %57 = load x86_fp80, ptr %56, align 16, !tbaa !128
  %58 = fneg x86_fp80 %54
  %59 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %58, x86_fp80 %57, x86_fp80 %49)
  %60 = add i32 %48, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %35, %61
  br i1 %62, label %46, label %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE17precondition_SSORIeEEvRNS_6VectorIT_EERKS5_fRKSt6vectorIjSaIjEE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !138
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !135
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !195
  %16 = load ptr, ptr %4, align 8, !tbaa !197
  %17 = icmp eq ptr %15, %16
  %18 = icmp eq i32 %7, 0
  br i1 %17, label %27, label %19

19:                                               ; preds = %5
  br i1 %18, label %620, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !135
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %26 = zext i32 %7 to i64
  br label %48

27:                                               ; preds = %5
  br i1 %18, label %620, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !135
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = ptrtoint ptr %32 to i64
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %7 to i64
  %37 = load i64, ptr %11, align 8, !tbaa !34
  br label %264

38:                                               ; preds = %85
  br i1 %18, label %620, label %39

39:                                               ; preds = %38
  %40 = fpext float %3 to double
  %41 = fsub double 2.000000e+00, %40
  %42 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %43 = load ptr, ptr %42, align 8, !tbaa !92
  %44 = and i32 %7, 1
  %45 = icmp eq i32 %7, 1
  br i1 %45, label %127, label %46

46:                                               ; preds = %39
  %47 = and i32 %7, -2
  br label %150

48:                                               ; preds = %20, %85
  %49 = phi i64 [ 0, %20 ], [ %94, %85 ]
  %50 = phi ptr [ %11, %20 ], [ %96, %85 ]
  %51 = phi ptr [ %13, %20 ], [ %95, %85 ]
  %52 = getelementptr inbounds x86_fp80, ptr %22, i64 %49
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  store x86_fp80 %53, ptr %51, align 16, !tbaa !128
  %54 = getelementptr inbounds i32, ptr %16, i64 %49
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = load i64, ptr %50, align 8, !tbaa !34
  %57 = trunc i64 %56 to i32
  %58 = add i32 %57, 1
  %59 = icmp ult i32 %58, %55
  br i1 %59, label %60, label %85

60:                                               ; preds = %48
  %61 = load ptr, ptr %25, align 8, !tbaa !46
  %62 = zext i32 %58 to i64
  %63 = xor i32 %57, -1
  %64 = add i32 %55, %63
  %65 = add i32 %55, -2
  %66 = and i32 %64, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %80, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds float, ptr %24, i64 %62
  %70 = load float, ptr %69, align 4, !tbaa !95
  %71 = fpext float %70 to x86_fp80
  %72 = getelementptr inbounds i32, ptr %61, i64 %62
  %73 = load i32, ptr %72, align 4, !tbaa !47
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds x86_fp80, ptr %13, i64 %74
  %76 = load x86_fp80, ptr %75, align 16, !tbaa !128
  %77 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %71, x86_fp80 %76, x86_fp80 0xK00000000000000000000)
  %78 = fptrunc x86_fp80 %77 to float
  %79 = add nuw nsw i64 %62, 1
  br label %80

80:                                               ; preds = %68, %60
  %81 = phi float [ undef, %60 ], [ %78, %68 ]
  %82 = phi i64 [ %62, %60 ], [ %79, %68 ]
  %83 = phi float [ 0.000000e+00, %60 ], [ %78, %68 ]
  %84 = icmp eq i32 %65, %57
  br i1 %84, label %85, label %98

85:                                               ; preds = %80, %98, %48
  %86 = phi float [ 0.000000e+00, %48 ], [ %81, %80 ], [ %123, %98 ]
  %87 = fmul float %86, %3
  %88 = fpext float %87 to x86_fp80
  %89 = fsub x86_fp80 %53, %88
  %90 = getelementptr inbounds float, ptr %24, i64 %56
  %91 = load float, ptr %90, align 4, !tbaa !95
  %92 = fpext float %91 to x86_fp80
  %93 = fdiv x86_fp80 %89, %92
  store x86_fp80 %93, ptr %51, align 16, !tbaa !128
  %94 = add nuw nsw i64 %49, 1
  %95 = getelementptr inbounds x86_fp80, ptr %51, i64 1
  %96 = getelementptr inbounds i64, ptr %50, i64 1
  %97 = icmp eq i64 %94, %26
  br i1 %97, label %38, label %48

98:                                               ; preds = %80, %98
  %99 = phi i64 [ %124, %98 ], [ %82, %80 ]
  %100 = phi float [ %123, %98 ], [ %83, %80 ]
  %101 = getelementptr inbounds float, ptr %24, i64 %99
  %102 = load float, ptr %101, align 4, !tbaa !95
  %103 = fpext float %102 to x86_fp80
  %104 = getelementptr inbounds i32, ptr %61, i64 %99
  %105 = load i32, ptr %104, align 4, !tbaa !47
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds x86_fp80, ptr %13, i64 %106
  %108 = load x86_fp80, ptr %107, align 16, !tbaa !128
  %109 = fpext float %100 to x86_fp80
  %110 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %103, x86_fp80 %108, x86_fp80 %109)
  %111 = fptrunc x86_fp80 %110 to float
  %112 = add nuw nsw i64 %99, 1
  %113 = getelementptr inbounds float, ptr %24, i64 %112
  %114 = load float, ptr %113, align 4, !tbaa !95
  %115 = fpext float %114 to x86_fp80
  %116 = getelementptr inbounds i32, ptr %61, i64 %112
  %117 = load i32, ptr %116, align 4, !tbaa !47
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds x86_fp80, ptr %13, i64 %118
  %120 = load x86_fp80, ptr %119, align 16, !tbaa !128
  %121 = fpext float %111 to x86_fp80
  %122 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %115, x86_fp80 %120, x86_fp80 %121)
  %123 = fptrunc x86_fp80 %122 to float
  %124 = add nuw nsw i64 %99, 2
  %125 = trunc i64 %124 to i32
  %126 = icmp eq i32 %55, %125
  br i1 %126, label %85, label %98

127:                                              ; preds = %150, %39
  %128 = phi ptr [ %11, %39 ], [ %172, %150 ]
  %129 = phi ptr [ %13, %39 ], [ %173, %150 ]
  %130 = icmp eq i32 %44, 0
  br i1 %130, label %140, label %131

131:                                              ; preds = %127
  %132 = load i64, ptr %128, align 8, !tbaa !34
  %133 = getelementptr inbounds float, ptr %43, i64 %132
  %134 = load float, ptr %133, align 4, !tbaa !95
  %135 = fpext float %134 to double
  %136 = fmul double %41, %135
  %137 = fpext double %136 to x86_fp80
  %138 = load x86_fp80, ptr %129, align 16, !tbaa !128
  %139 = fmul x86_fp80 %138, %137
  store x86_fp80 %139, ptr %129, align 16, !tbaa !128
  br label %140

140:                                              ; preds = %127, %131
  %141 = add i32 %7, -1
  %142 = icmp sgt i32 %141, -1
  br i1 %142, label %143, label %620

143:                                              ; preds = %140
  %144 = zext i32 %141 to i64
  %145 = getelementptr inbounds x86_fp80, ptr %13, i64 %144
  %146 = getelementptr inbounds i64, ptr %11, i64 %144
  %147 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %148 = load ptr, ptr %147, align 8
  %149 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  br label %176

150:                                              ; preds = %150, %46
  %151 = phi ptr [ %11, %46 ], [ %172, %150 ]
  %152 = phi ptr [ %13, %46 ], [ %173, %150 ]
  %153 = phi i32 [ 0, %46 ], [ %174, %150 ]
  %154 = load i64, ptr %151, align 8, !tbaa !34
  %155 = getelementptr inbounds float, ptr %43, i64 %154
  %156 = load float, ptr %155, align 4, !tbaa !95
  %157 = fpext float %156 to double
  %158 = fmul double %41, %157
  %159 = fpext double %158 to x86_fp80
  %160 = load x86_fp80, ptr %152, align 16, !tbaa !128
  %161 = fmul x86_fp80 %160, %159
  store x86_fp80 %161, ptr %152, align 16, !tbaa !128
  %162 = getelementptr inbounds i64, ptr %151, i64 1
  %163 = getelementptr inbounds x86_fp80, ptr %152, i64 1
  %164 = load i64, ptr %162, align 8, !tbaa !34
  %165 = getelementptr inbounds float, ptr %43, i64 %164
  %166 = load float, ptr %165, align 4, !tbaa !95
  %167 = fpext float %166 to double
  %168 = fmul double %41, %167
  %169 = fpext double %168 to x86_fp80
  %170 = load x86_fp80, ptr %163, align 16, !tbaa !128
  %171 = fmul x86_fp80 %170, %169
  store x86_fp80 %171, ptr %163, align 16, !tbaa !128
  %172 = getelementptr inbounds i64, ptr %151, i64 2
  %173 = getelementptr inbounds x86_fp80, ptr %152, i64 2
  %174 = add i32 %153, 2
  %175 = icmp eq i32 %174, %47
  br i1 %175, label %127, label %150

176:                                              ; preds = %143, %211
  %177 = phi i64 [ %144, %143 ], [ %222, %211 ]
  %178 = phi ptr [ %146, %143 ], [ %223, %211 ]
  %179 = phi ptr [ %145, %143 ], [ %224, %211 ]
  %180 = getelementptr inbounds i64, ptr %178, i64 1
  %181 = load i64, ptr %180, align 8, !tbaa !34
  %182 = trunc i64 %181 to i32
  %183 = getelementptr inbounds i32, ptr %16, i64 %177
  %184 = load i32, ptr %183, align 4, !tbaa !47
  %185 = icmp ult i32 %184, %182
  br i1 %185, label %186, label %211

186:                                              ; preds = %176
  %187 = load ptr, ptr %149, align 8, !tbaa !46
  %188 = zext i32 %184 to i64
  %189 = and i64 %181, 4294967295
  %190 = sub i64 %181, %188
  %191 = add nuw nsw i64 %188, 1
  %192 = and i64 %190, 1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %206, label %194

194:                                              ; preds = %186
  %195 = getelementptr inbounds float, ptr %148, i64 %188
  %196 = load float, ptr %195, align 4, !tbaa !95
  %197 = fpext float %196 to x86_fp80
  %198 = getelementptr inbounds i32, ptr %187, i64 %188
  %199 = load i32, ptr %198, align 4, !tbaa !47
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds x86_fp80, ptr %13, i64 %200
  %202 = load x86_fp80, ptr %201, align 16, !tbaa !128
  %203 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %197, x86_fp80 %202, x86_fp80 0xK00000000000000000000)
  %204 = fptrunc x86_fp80 %203 to float
  %205 = add nuw nsw i64 %188, 1
  br label %206

206:                                              ; preds = %194, %186
  %207 = phi float [ undef, %186 ], [ %204, %194 ]
  %208 = phi i64 [ %188, %186 ], [ %205, %194 ]
  %209 = phi float [ 0.000000e+00, %186 ], [ %204, %194 ]
  %210 = icmp eq i64 %189, %191
  br i1 %210, label %211, label %226

211:                                              ; preds = %206, %226, %176
  %212 = phi float [ 0.000000e+00, %176 ], [ %207, %206 ], [ %251, %226 ]
  %213 = fmul float %212, %3
  %214 = fpext float %213 to x86_fp80
  %215 = load x86_fp80, ptr %179, align 16, !tbaa !128
  %216 = fsub x86_fp80 %215, %214
  %217 = load i64, ptr %178, align 8, !tbaa !34
  %218 = getelementptr inbounds float, ptr %148, i64 %217
  %219 = load float, ptr %218, align 4, !tbaa !95
  %220 = fpext float %219 to x86_fp80
  %221 = fdiv x86_fp80 %216, %220
  store x86_fp80 %221, ptr %179, align 16, !tbaa !128
  %222 = add nsw i64 %177, -1
  %223 = getelementptr inbounds i64, ptr %178, i64 -1
  %224 = getelementptr inbounds x86_fp80, ptr %179, i64 -1
  %225 = icmp sgt i64 %177, 0
  br i1 %225, label %176, label %620

226:                                              ; preds = %206, %226
  %227 = phi i64 [ %252, %226 ], [ %208, %206 ]
  %228 = phi float [ %251, %226 ], [ %209, %206 ]
  %229 = getelementptr inbounds float, ptr %148, i64 %227
  %230 = load float, ptr %229, align 4, !tbaa !95
  %231 = fpext float %230 to x86_fp80
  %232 = getelementptr inbounds i32, ptr %187, i64 %227
  %233 = load i32, ptr %232, align 4, !tbaa !47
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds x86_fp80, ptr %13, i64 %234
  %236 = load x86_fp80, ptr %235, align 16, !tbaa !128
  %237 = fpext float %228 to x86_fp80
  %238 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %231, x86_fp80 %236, x86_fp80 %237)
  %239 = fptrunc x86_fp80 %238 to float
  %240 = add nuw nsw i64 %227, 1
  %241 = getelementptr inbounds float, ptr %148, i64 %240
  %242 = load float, ptr %241, align 4, !tbaa !95
  %243 = fpext float %242 to x86_fp80
  %244 = getelementptr inbounds i32, ptr %187, i64 %240
  %245 = load i32, ptr %244, align 4, !tbaa !47
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds x86_fp80, ptr %13, i64 %246
  %248 = load x86_fp80, ptr %247, align 16, !tbaa !128
  %249 = fpext float %239 to x86_fp80
  %250 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %243, x86_fp80 %248, x86_fp80 %249)
  %251 = fptrunc x86_fp80 %250 to float
  %252 = add nuw nsw i64 %227, 2
  %253 = icmp eq i64 %252, %189
  br i1 %253, label %211, label %226

254:                                              ; preds = %380
  br i1 %18, label %620, label %255

255:                                              ; preds = %254
  %256 = fpext float %3 to double
  %257 = fsub double 2.000000e+00, %256
  %258 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %259 = load ptr, ptr %258, align 8, !tbaa !92
  %260 = and i32 %7, 1
  %261 = icmp eq i32 %7, 1
  br i1 %261, label %421, label %262

262:                                              ; preds = %255
  %263 = and i32 %7, -2
  br label %446

264:                                              ; preds = %28, %380
  %265 = phi i64 [ %37, %28 ], [ %274, %380 ]
  %266 = phi i64 [ 0, %28 ], [ %389, %380 ]
  %267 = phi ptr [ %11, %28 ], [ %273, %380 ]
  %268 = phi ptr [ %13, %28 ], [ %390, %380 ]
  %269 = getelementptr inbounds x86_fp80, ptr %30, i64 %266
  %270 = load x86_fp80, ptr %269, align 16, !tbaa !128
  store x86_fp80 %270, ptr %268, align 16, !tbaa !128
  %271 = add i64 %265, 1
  %272 = getelementptr inbounds i32, ptr %32, i64 %271
  %273 = getelementptr inbounds i64, ptr %267, i64 1
  %274 = load i64, ptr %273, align 8, !tbaa !34
  %275 = getelementptr inbounds i32, ptr %32, i64 %274
  %276 = ptrtoint ptr %275 to i64
  %277 = ptrtoint ptr %272 to i64
  %278 = sub i64 %276, %277
  %279 = lshr exact i64 %278, 2
  %280 = trunc i64 %279 to i32
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %347, label %282

282:                                              ; preds = %264, %335
  %283 = phi i32 [ %345, %335 ], [ %280, %264 ]
  %284 = phi ptr [ %346, %335 ], [ %272, %264 ]
  %285 = icmp ult i32 %283, 8
  br i1 %285, label %286, label %335

286:                                              ; preds = %282
  switch i32 %283, label %335 [
    i32 7, label %287
    i32 6, label %293
    i32 5, label %300
    i32 4, label %307
    i32 3, label %314
    i32 2, label %321
    i32 1, label %328
  ]

287:                                              ; preds = %286
  %288 = load i32, ptr %284, align 4, !tbaa !47
  %289 = zext i32 %288 to i64
  %290 = icmp ugt i64 %266, %289
  br i1 %290, label %291, label %347

291:                                              ; preds = %287
  %292 = getelementptr inbounds i32, ptr %284, i64 1
  br label %293

293:                                              ; preds = %286, %291
  %294 = phi ptr [ %292, %291 ], [ %284, %286 ]
  %295 = load i32, ptr %294, align 4, !tbaa !47
  %296 = zext i32 %295 to i64
  %297 = icmp ugt i64 %266, %296
  br i1 %297, label %298, label %347

298:                                              ; preds = %293
  %299 = getelementptr inbounds i32, ptr %294, i64 1
  br label %300

300:                                              ; preds = %286, %298
  %301 = phi ptr [ %299, %298 ], [ %284, %286 ]
  %302 = load i32, ptr %301, align 4, !tbaa !47
  %303 = zext i32 %302 to i64
  %304 = icmp ugt i64 %266, %303
  br i1 %304, label %305, label %347

305:                                              ; preds = %300
  %306 = getelementptr inbounds i32, ptr %301, i64 1
  br label %307

307:                                              ; preds = %286, %305
  %308 = phi ptr [ %306, %305 ], [ %284, %286 ]
  %309 = load i32, ptr %308, align 4, !tbaa !47
  %310 = zext i32 %309 to i64
  %311 = icmp ugt i64 %266, %310
  br i1 %311, label %312, label %347

312:                                              ; preds = %307
  %313 = getelementptr inbounds i32, ptr %308, i64 1
  br label %314

314:                                              ; preds = %286, %312
  %315 = phi ptr [ %313, %312 ], [ %284, %286 ]
  %316 = load i32, ptr %315, align 4, !tbaa !47
  %317 = zext i32 %316 to i64
  %318 = icmp ugt i64 %266, %317
  br i1 %318, label %319, label %347

319:                                              ; preds = %314
  %320 = getelementptr inbounds i32, ptr %315, i64 1
  br label %321

321:                                              ; preds = %286, %319
  %322 = phi ptr [ %320, %319 ], [ %284, %286 ]
  %323 = load i32, ptr %322, align 4, !tbaa !47
  %324 = zext i32 %323 to i64
  %325 = icmp ugt i64 %266, %324
  br i1 %325, label %326, label %347

326:                                              ; preds = %321
  %327 = getelementptr inbounds i32, ptr %322, i64 1
  br label %328

328:                                              ; preds = %286, %326
  %329 = phi ptr [ %327, %326 ], [ %284, %286 ]
  %330 = load i32, ptr %329, align 4, !tbaa !47
  %331 = zext i32 %330 to i64
  %332 = icmp ugt i64 %266, %331
  %333 = zext i1 %332 to i64
  %334 = getelementptr inbounds i32, ptr %329, i64 %333
  br label %347

335:                                              ; preds = %286, %282
  %336 = lshr i32 %283, 1
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds i32, ptr %284, i64 %337
  %339 = load i32, ptr %338, align 4, !tbaa !47
  %340 = zext i32 %339 to i64
  %341 = icmp ugt i64 %266, %340
  %342 = getelementptr inbounds i32, ptr %338, i64 1
  %343 = xor i32 %336, -1
  %344 = add i32 %283, %343
  %345 = select i1 %341, i32 %344, i32 %336
  %346 = select i1 %341, ptr %342, ptr %284
  br label %282

347:                                              ; preds = %264, %287, %293, %300, %307, %314, %321, %328
  %348 = phi ptr [ %272, %264 ], [ %284, %287 ], [ %294, %293 ], [ %301, %300 ], [ %308, %307 ], [ %315, %314 ], [ %322, %321 ], [ %334, %328 ]
  %349 = ptrtoint ptr %348 to i64
  %350 = sub i64 %349, %33
  %351 = lshr exact i64 %350, 2
  %352 = trunc i64 %351 to i32
  %353 = trunc i64 %265 to i32
  %354 = add i32 %353, 1
  %355 = icmp ult i32 %354, %352
  br i1 %355, label %356, label %380

356:                                              ; preds = %347
  %357 = zext i32 %354 to i64
  %358 = xor i32 %353, -1
  %359 = add i32 %358, %352
  %360 = add i32 %352, -2
  %361 = and i32 %359, 1
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %375, label %363

363:                                              ; preds = %356
  %364 = getelementptr inbounds float, ptr %35, i64 %357
  %365 = load float, ptr %364, align 4, !tbaa !95
  %366 = fpext float %365 to x86_fp80
  %367 = getelementptr inbounds i32, ptr %32, i64 %357
  %368 = load i32, ptr %367, align 4, !tbaa !47
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds x86_fp80, ptr %13, i64 %369
  %371 = load x86_fp80, ptr %370, align 16, !tbaa !128
  %372 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %366, x86_fp80 %371, x86_fp80 0xK00000000000000000000)
  %373 = fptrunc x86_fp80 %372 to float
  %374 = add nuw nsw i64 %357, 1
  br label %375

375:                                              ; preds = %363, %356
  %376 = phi float [ undef, %356 ], [ %373, %363 ]
  %377 = phi i64 [ %357, %356 ], [ %374, %363 ]
  %378 = phi float [ 0.000000e+00, %356 ], [ %373, %363 ]
  %379 = icmp eq i32 %360, %353
  br i1 %379, label %380, label %392

380:                                              ; preds = %375, %392, %347
  %381 = phi float [ 0.000000e+00, %347 ], [ %376, %375 ], [ %417, %392 ]
  %382 = fmul float %381, %3
  %383 = fpext float %382 to x86_fp80
  %384 = fsub x86_fp80 %270, %383
  %385 = getelementptr inbounds float, ptr %35, i64 %265
  %386 = load float, ptr %385, align 4, !tbaa !95
  %387 = fpext float %386 to x86_fp80
  %388 = fdiv x86_fp80 %384, %387
  store x86_fp80 %388, ptr %268, align 16, !tbaa !128
  %389 = add nuw nsw i64 %266, 1
  %390 = getelementptr inbounds x86_fp80, ptr %268, i64 1
  %391 = icmp eq i64 %389, %36
  br i1 %391, label %254, label %264

392:                                              ; preds = %375, %392
  %393 = phi i64 [ %418, %392 ], [ %377, %375 ]
  %394 = phi float [ %417, %392 ], [ %378, %375 ]
  %395 = getelementptr inbounds float, ptr %35, i64 %393
  %396 = load float, ptr %395, align 4, !tbaa !95
  %397 = fpext float %396 to x86_fp80
  %398 = getelementptr inbounds i32, ptr %32, i64 %393
  %399 = load i32, ptr %398, align 4, !tbaa !47
  %400 = zext i32 %399 to i64
  %401 = getelementptr inbounds x86_fp80, ptr %13, i64 %400
  %402 = load x86_fp80, ptr %401, align 16, !tbaa !128
  %403 = fpext float %394 to x86_fp80
  %404 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %397, x86_fp80 %402, x86_fp80 %403)
  %405 = fptrunc x86_fp80 %404 to float
  %406 = add nuw nsw i64 %393, 1
  %407 = getelementptr inbounds float, ptr %35, i64 %406
  %408 = load float, ptr %407, align 4, !tbaa !95
  %409 = fpext float %408 to x86_fp80
  %410 = getelementptr inbounds i32, ptr %32, i64 %406
  %411 = load i32, ptr %410, align 4, !tbaa !47
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds x86_fp80, ptr %13, i64 %412
  %414 = load x86_fp80, ptr %413, align 16, !tbaa !128
  %415 = fpext float %405 to x86_fp80
  %416 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %409, x86_fp80 %414, x86_fp80 %415)
  %417 = fptrunc x86_fp80 %416 to float
  %418 = add nuw nsw i64 %393, 2
  %419 = trunc i64 %418 to i32
  %420 = icmp eq i32 %419, %352
  br i1 %420, label %380, label %392

421:                                              ; preds = %446, %255
  %422 = phi ptr [ %11, %255 ], [ %468, %446 ]
  %423 = phi ptr [ %13, %255 ], [ %469, %446 ]
  %424 = icmp eq i32 %260, 0
  br i1 %424, label %434, label %425

425:                                              ; preds = %421
  %426 = load i64, ptr %422, align 8, !tbaa !34
  %427 = getelementptr inbounds float, ptr %259, i64 %426
  %428 = load float, ptr %427, align 4, !tbaa !95
  %429 = fpext float %428 to double
  %430 = fmul double %257, %429
  %431 = fpext double %430 to x86_fp80
  %432 = load x86_fp80, ptr %423, align 16, !tbaa !128
  %433 = fmul x86_fp80 %432, %431
  store x86_fp80 %433, ptr %423, align 16, !tbaa !128
  br label %434

434:                                              ; preds = %421, %425
  %435 = add i32 %7, -1
  %436 = icmp sgt i32 %435, -1
  br i1 %436, label %437, label %620

437:                                              ; preds = %434
  %438 = zext i32 %435 to i64
  %439 = getelementptr inbounds x86_fp80, ptr %13, i64 %438
  %440 = getelementptr inbounds i64, ptr %11, i64 %438
  %441 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %442 = load ptr, ptr %441, align 8, !tbaa !46
  %443 = ptrtoint ptr %442 to i64
  %444 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %445 = load ptr, ptr %444, align 8
  br label %472

446:                                              ; preds = %446, %262
  %447 = phi ptr [ %11, %262 ], [ %468, %446 ]
  %448 = phi ptr [ %13, %262 ], [ %469, %446 ]
  %449 = phi i32 [ 0, %262 ], [ %470, %446 ]
  %450 = load i64, ptr %447, align 8, !tbaa !34
  %451 = getelementptr inbounds float, ptr %259, i64 %450
  %452 = load float, ptr %451, align 4, !tbaa !95
  %453 = fpext float %452 to double
  %454 = fmul double %257, %453
  %455 = fpext double %454 to x86_fp80
  %456 = load x86_fp80, ptr %448, align 16, !tbaa !128
  %457 = fmul x86_fp80 %456, %455
  store x86_fp80 %457, ptr %448, align 16, !tbaa !128
  %458 = getelementptr inbounds i64, ptr %447, i64 1
  %459 = getelementptr inbounds x86_fp80, ptr %448, i64 1
  %460 = load i64, ptr %458, align 8, !tbaa !34
  %461 = getelementptr inbounds float, ptr %259, i64 %460
  %462 = load float, ptr %461, align 4, !tbaa !95
  %463 = fpext float %462 to double
  %464 = fmul double %257, %463
  %465 = fpext double %464 to x86_fp80
  %466 = load x86_fp80, ptr %459, align 16, !tbaa !128
  %467 = fmul x86_fp80 %466, %465
  store x86_fp80 %467, ptr %459, align 16, !tbaa !128
  %468 = getelementptr inbounds i64, ptr %447, i64 2
  %469 = getelementptr inbounds x86_fp80, ptr %448, i64 2
  %470 = add i32 %449, 2
  %471 = icmp eq i32 %470, %263
  br i1 %471, label %421, label %446

472:                                              ; preds = %437, %578
  %473 = phi ptr [ %440, %437 ], [ %589, %578 ]
  %474 = phi ptr [ %439, %437 ], [ %590, %578 ]
  %475 = phi i32 [ %435, %437 ], [ %588, %578 ]
  %476 = getelementptr inbounds i64, ptr %473, i64 1
  %477 = load i64, ptr %476, align 8, !tbaa !34
  %478 = trunc i64 %477 to i32
  %479 = load i64, ptr %473, align 8, !tbaa !34
  %480 = add i64 %479, 1
  %481 = getelementptr inbounds i32, ptr %442, i64 %480
  %482 = and i64 %477, 4294967295
  %483 = getelementptr inbounds i32, ptr %442, i64 %482
  %484 = ptrtoint ptr %483 to i64
  %485 = ptrtoint ptr %481 to i64
  %486 = sub i64 %484, %485
  %487 = lshr exact i64 %486, 2
  %488 = trunc i64 %487 to i32
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %547, label %490

490:                                              ; preds = %472, %536
  %491 = phi i32 [ %545, %536 ], [ %488, %472 ]
  %492 = phi ptr [ %546, %536 ], [ %481, %472 ]
  %493 = icmp ult i32 %491, 8
  br i1 %493, label %494, label %536

494:                                              ; preds = %490
  switch i32 %491, label %536 [
    i32 7, label %495
    i32 6, label %500
    i32 5, label %506
    i32 4, label %512
    i32 3, label %518
    i32 2, label %524
    i32 1, label %530
  ]

495:                                              ; preds = %494
  %496 = load i32, ptr %492, align 4, !tbaa !47
  %497 = icmp ult i32 %496, %475
  br i1 %497, label %498, label %547

498:                                              ; preds = %495
  %499 = getelementptr inbounds i32, ptr %492, i64 1
  br label %500

500:                                              ; preds = %494, %498
  %501 = phi ptr [ %499, %498 ], [ %492, %494 ]
  %502 = load i32, ptr %501, align 4, !tbaa !47
  %503 = icmp ult i32 %502, %475
  br i1 %503, label %504, label %547

504:                                              ; preds = %500
  %505 = getelementptr inbounds i32, ptr %501, i64 1
  br label %506

506:                                              ; preds = %494, %504
  %507 = phi ptr [ %505, %504 ], [ %492, %494 ]
  %508 = load i32, ptr %507, align 4, !tbaa !47
  %509 = icmp ult i32 %508, %475
  br i1 %509, label %510, label %547

510:                                              ; preds = %506
  %511 = getelementptr inbounds i32, ptr %507, i64 1
  br label %512

512:                                              ; preds = %494, %510
  %513 = phi ptr [ %511, %510 ], [ %492, %494 ]
  %514 = load i32, ptr %513, align 4, !tbaa !47
  %515 = icmp ult i32 %514, %475
  br i1 %515, label %516, label %547

516:                                              ; preds = %512
  %517 = getelementptr inbounds i32, ptr %513, i64 1
  br label %518

518:                                              ; preds = %494, %516
  %519 = phi ptr [ %517, %516 ], [ %492, %494 ]
  %520 = load i32, ptr %519, align 4, !tbaa !47
  %521 = icmp ult i32 %520, %475
  br i1 %521, label %522, label %547

522:                                              ; preds = %518
  %523 = getelementptr inbounds i32, ptr %519, i64 1
  br label %524

524:                                              ; preds = %494, %522
  %525 = phi ptr [ %523, %522 ], [ %492, %494 ]
  %526 = load i32, ptr %525, align 4, !tbaa !47
  %527 = icmp ult i32 %526, %475
  br i1 %527, label %528, label %547

528:                                              ; preds = %524
  %529 = getelementptr inbounds i32, ptr %525, i64 1
  br label %530

530:                                              ; preds = %494, %528
  %531 = phi ptr [ %529, %528 ], [ %492, %494 ]
  %532 = load i32, ptr %531, align 4, !tbaa !47
  %533 = icmp ult i32 %532, %475
  %534 = zext i1 %533 to i64
  %535 = getelementptr inbounds i32, ptr %531, i64 %534
  br label %547

536:                                              ; preds = %494, %490
  %537 = lshr i32 %491, 1
  %538 = zext i32 %537 to i64
  %539 = getelementptr inbounds i32, ptr %492, i64 %538
  %540 = load i32, ptr %539, align 4, !tbaa !47
  %541 = icmp ult i32 %540, %475
  %542 = getelementptr inbounds i32, ptr %539, i64 1
  %543 = xor i32 %537, -1
  %544 = add i32 %491, %543
  %545 = select i1 %541, i32 %544, i32 %537
  %546 = select i1 %541, ptr %542, ptr %492
  br label %490

547:                                              ; preds = %472, %495, %500, %506, %512, %518, %524, %530
  %548 = phi ptr [ %481, %472 ], [ %492, %495 ], [ %501, %500 ], [ %507, %506 ], [ %513, %512 ], [ %519, %518 ], [ %525, %524 ], [ %535, %530 ]
  %549 = ptrtoint ptr %548 to i64
  %550 = sub i64 %549, %443
  %551 = lshr exact i64 %550, 2
  %552 = trunc i64 %551 to i32
  %553 = icmp ult i32 %552, %478
  br i1 %553, label %554, label %578

554:                                              ; preds = %547
  %555 = and i64 %551, 4294967295
  %556 = and i64 %477, 4294967295
  %557 = sub i64 %477, %551
  %558 = add nuw nsw i64 %555, 1
  %559 = and i64 %557, 1
  %560 = icmp eq i64 %559, 0
  br i1 %560, label %573, label %561

561:                                              ; preds = %554
  %562 = getelementptr inbounds float, ptr %445, i64 %555
  %563 = load float, ptr %562, align 4, !tbaa !95
  %564 = fpext float %563 to x86_fp80
  %565 = getelementptr inbounds i32, ptr %442, i64 %555
  %566 = load i32, ptr %565, align 4, !tbaa !47
  %567 = zext i32 %566 to i64
  %568 = getelementptr inbounds x86_fp80, ptr %13, i64 %567
  %569 = load x86_fp80, ptr %568, align 16, !tbaa !128
  %570 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %564, x86_fp80 %569, x86_fp80 0xK00000000000000000000)
  %571 = fptrunc x86_fp80 %570 to float
  %572 = add nuw nsw i64 %555, 1
  br label %573

573:                                              ; preds = %561, %554
  %574 = phi float [ undef, %554 ], [ %571, %561 ]
  %575 = phi i64 [ %555, %554 ], [ %572, %561 ]
  %576 = phi float [ 0.000000e+00, %554 ], [ %571, %561 ]
  %577 = icmp eq i64 %482, %558
  br i1 %577, label %578, label %592

578:                                              ; preds = %573, %592, %547
  %579 = phi float [ 0.000000e+00, %547 ], [ %574, %573 ], [ %617, %592 ]
  %580 = fmul float %579, %3
  %581 = fpext float %580 to x86_fp80
  %582 = load x86_fp80, ptr %474, align 16, !tbaa !128
  %583 = fsub x86_fp80 %582, %581
  %584 = getelementptr inbounds float, ptr %445, i64 %479
  %585 = load float, ptr %584, align 4, !tbaa !95
  %586 = fpext float %585 to x86_fp80
  %587 = fdiv x86_fp80 %583, %586
  store x86_fp80 %587, ptr %474, align 16, !tbaa !128
  %588 = add nsw i32 %475, -1
  %589 = getelementptr inbounds i64, ptr %473, i64 -1
  %590 = getelementptr inbounds x86_fp80, ptr %474, i64 -1
  %591 = icmp sgt i32 %475, 0
  br i1 %591, label %472, label %620

592:                                              ; preds = %573, %592
  %593 = phi i64 [ %618, %592 ], [ %575, %573 ]
  %594 = phi float [ %617, %592 ], [ %576, %573 ]
  %595 = getelementptr inbounds float, ptr %445, i64 %593
  %596 = load float, ptr %595, align 4, !tbaa !95
  %597 = fpext float %596 to x86_fp80
  %598 = getelementptr inbounds i32, ptr %442, i64 %593
  %599 = load i32, ptr %598, align 4, !tbaa !47
  %600 = zext i32 %599 to i64
  %601 = getelementptr inbounds x86_fp80, ptr %13, i64 %600
  %602 = load x86_fp80, ptr %601, align 16, !tbaa !128
  %603 = fpext float %594 to x86_fp80
  %604 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %597, x86_fp80 %602, x86_fp80 %603)
  %605 = fptrunc x86_fp80 %604 to float
  %606 = add nuw nsw i64 %593, 1
  %607 = getelementptr inbounds float, ptr %445, i64 %606
  %608 = load float, ptr %607, align 4, !tbaa !95
  %609 = fpext float %608 to x86_fp80
  %610 = getelementptr inbounds i32, ptr %442, i64 %606
  %611 = load i32, ptr %610, align 4, !tbaa !47
  %612 = zext i32 %611 to i64
  %613 = getelementptr inbounds x86_fp80, ptr %13, i64 %612
  %614 = load x86_fp80, ptr %613, align 16, !tbaa !128
  %615 = fpext float %605 to x86_fp80
  %616 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %609, x86_fp80 %614, x86_fp80 %615)
  %617 = fptrunc x86_fp80 %616 to float
  %618 = add nuw nsw i64 %593, 2
  %619 = icmp eq i64 %618, %556
  br i1 %619, label %578, label %592

620:                                              ; preds = %211, %578, %27, %254, %19, %38, %140, %434
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE16precondition_SORIeEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %65, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !135
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %18 = fpext float %3 to x86_fp80
  %19 = load ptr, ptr %17, align 8, !tbaa !92
  %20 = zext i32 %9 to i64
  %21 = load i64, ptr %15, align 8, !tbaa !34
  br label %22

22:                                               ; preds = %36, %11
  %23 = phi i64 [ %21, %11 ], [ %29, %36 ]
  %24 = phi i64 [ 0, %11 ], [ %27, %36 ]
  %25 = getelementptr inbounds x86_fp80, ptr %13, i64 %24
  %26 = load x86_fp80, ptr %25, align 16, !tbaa !128
  %27 = add nuw nsw i64 %24, 1
  %28 = getelementptr inbounds i64, ptr %15, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %23, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %22
  %33 = trunc i64 %23 to i32
  %34 = load ptr, ptr %16, align 8, !tbaa !46
  %35 = load ptr, ptr %17, align 8
  br label %44

36:                                               ; preds = %60, %22
  %37 = phi x86_fp80 [ %26, %22 ], [ %61, %60 ]
  %38 = fmul x86_fp80 %37, %18
  %39 = getelementptr inbounds float, ptr %19, i64 %23
  %40 = load float, ptr %39, align 4, !tbaa !95
  %41 = fpext float %40 to x86_fp80
  %42 = fdiv x86_fp80 %38, %41
  store x86_fp80 %42, ptr %25, align 16, !tbaa !128
  %43 = icmp eq i64 %27, %20
  br i1 %43, label %65, label %22

44:                                               ; preds = %60, %32
  %45 = phi i64 [ %30, %32 ], [ %63, %60 ]
  %46 = phi i32 [ %33, %32 ], [ %62, %60 ]
  %47 = phi x86_fp80 [ %26, %32 ], [ %61, %60 ]
  %48 = getelementptr inbounds i32, ptr %34, i64 %45
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = zext i32 %49 to i64
  %51 = icmp ugt i64 %24, %50
  br i1 %51, label %52, label %60

52:                                               ; preds = %44
  %53 = getelementptr inbounds float, ptr %35, i64 %45
  %54 = load float, ptr %53, align 4, !tbaa !95
  %55 = fpext float %54 to x86_fp80
  %56 = getelementptr inbounds x86_fp80, ptr %13, i64 %50
  %57 = load x86_fp80, ptr %56, align 16, !tbaa !128
  %58 = fneg x86_fp80 %55
  %59 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %58, x86_fp80 %57, x86_fp80 %47)
  br label %60

60:                                               ; preds = %52, %44
  %61 = phi x86_fp80 [ %59, %52 ], [ %47, %44 ]
  %62 = add i32 %46, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %29, %63
  br i1 %64, label %44, label %36

65:                                               ; preds = %36, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE3SORIeEEvRNS_6VectorIT_EEf(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, float noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !135
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %16 = fpext float %2 to x86_fp80
  %17 = load ptr, ptr %15, align 8, !tbaa !92
  %18 = zext i32 %7 to i64
  %19 = load i64, ptr %13, align 8, !tbaa !34
  br label %21

20:                                               ; preds = %35, %3
  ret void

21:                                               ; preds = %9, %35
  %22 = phi i64 [ %19, %9 ], [ %28, %35 ]
  %23 = phi i64 [ 0, %9 ], [ %26, %35 ]
  %24 = getelementptr inbounds x86_fp80, ptr %11, i64 %23
  %25 = load x86_fp80, ptr %24, align 16, !tbaa !128
  %26 = add nuw nsw i64 %23, 1
  %27 = getelementptr inbounds i64, ptr %13, i64 %26
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = and i64 %22, 4294967295
  %30 = icmp ugt i64 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %21
  %32 = trunc i64 %22 to i32
  %33 = load ptr, ptr %14, align 8, !tbaa !46
  %34 = load ptr, ptr %15, align 8
  br label %43

35:                                               ; preds = %59, %21
  %36 = phi x86_fp80 [ %25, %21 ], [ %60, %59 ]
  %37 = fmul x86_fp80 %36, %16
  %38 = getelementptr inbounds float, ptr %17, i64 %22
  %39 = load float, ptr %38, align 4, !tbaa !95
  %40 = fpext float %39 to x86_fp80
  %41 = fdiv x86_fp80 %37, %40
  store x86_fp80 %41, ptr %24, align 16, !tbaa !128
  %42 = icmp eq i64 %26, %18
  br i1 %42, label %20, label %21

43:                                               ; preds = %31, %59
  %44 = phi i64 [ %29, %31 ], [ %62, %59 ]
  %45 = phi i32 [ %32, %31 ], [ %61, %59 ]
  %46 = phi x86_fp80 [ %25, %31 ], [ %60, %59 ]
  %47 = getelementptr inbounds i32, ptr %33, i64 %44
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %23, %49
  br i1 %50, label %51, label %59

51:                                               ; preds = %43
  %52 = getelementptr inbounds float, ptr %34, i64 %44
  %53 = load float, ptr %52, align 4, !tbaa !95
  %54 = fpext float %53 to x86_fp80
  %55 = getelementptr inbounds x86_fp80, ptr %11, i64 %49
  %56 = load x86_fp80, ptr %55, align 16, !tbaa !128
  %57 = fneg x86_fp80 %54
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %57, x86_fp80 %56, x86_fp80 %46)
  br label %59

59:                                               ; preds = %51, %43
  %60 = phi x86_fp80 [ %58, %51 ], [ %46, %43 ]
  %61 = add i32 %45, 1
  %62 = zext i32 %61 to i64
  %63 = icmp ugt i64 %28, %62
  br i1 %63, label %43, label %35
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE17precondition_TSORIeEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %67, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !135
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %18 = fpext float %3 to x86_fp80
  %19 = load ptr, ptr %17, align 8, !tbaa !92
  %20 = zext i32 %9 to i64
  br label %21

21:                                               ; preds = %38, %11
  %22 = phi i64 [ %20, %11 ], [ %23, %38 ]
  %23 = add nsw i64 %22, -1
  %24 = trunc i64 %23 to i32
  %25 = and i64 %23, 4294967295
  %26 = getelementptr inbounds x86_fp80, ptr %13, i64 %25
  %27 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %28 = getelementptr inbounds i64, ptr %15, i64 %25
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = getelementptr inbounds i64, ptr %15, i64 %22
  %31 = load i64, ptr %30, align 8, !tbaa !34
  %32 = and i64 %29, 4294967295
  %33 = icmp ugt i64 %31, %32
  br i1 %33, label %34, label %38

34:                                               ; preds = %21
  %35 = trunc i64 %29 to i32
  %36 = load ptr, ptr %16, align 8, !tbaa !46
  %37 = load ptr, ptr %17, align 8
  br label %46

38:                                               ; preds = %62, %21
  %39 = phi x86_fp80 [ %27, %21 ], [ %63, %62 ]
  %40 = fmul x86_fp80 %39, %18
  %41 = getelementptr inbounds float, ptr %19, i64 %29
  %42 = load float, ptr %41, align 4, !tbaa !95
  %43 = fpext float %42 to x86_fp80
  %44 = fdiv x86_fp80 %40, %43
  store x86_fp80 %44, ptr %26, align 16, !tbaa !128
  %45 = icmp eq i32 %24, 0
  br i1 %45, label %67, label %21

46:                                               ; preds = %62, %34
  %47 = phi i64 [ %32, %34 ], [ %65, %62 ]
  %48 = phi i32 [ %35, %34 ], [ %64, %62 ]
  %49 = phi x86_fp80 [ %27, %34 ], [ %63, %62 ]
  %50 = getelementptr inbounds i32, ptr %36, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %24
  br i1 %52, label %53, label %62

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %37, i64 %47
  %55 = load float, ptr %54, align 4, !tbaa !95
  %56 = fpext float %55 to x86_fp80
  %57 = zext i32 %51 to i64
  %58 = getelementptr inbounds x86_fp80, ptr %13, i64 %57
  %59 = load x86_fp80, ptr %58, align 16, !tbaa !128
  %60 = fneg x86_fp80 %56
  %61 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %60, x86_fp80 %59, x86_fp80 %49)
  br label %62

62:                                               ; preds = %53, %46
  %63 = phi x86_fp80 [ %61, %53 ], [ %49, %46 ]
  %64 = add i32 %48, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %31, %65
  br i1 %66, label %46, label %38

67:                                               ; preds = %38, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE4TSORIeEEvRNS_6VectorIT_EEf(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, float noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !135
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %16 = fpext float %2 to x86_fp80
  %17 = load ptr, ptr %15, align 8, !tbaa !92
  %18 = zext i32 %7 to i64
  br label %20

19:                                               ; preds = %37, %3
  ret void

20:                                               ; preds = %9, %37
  %21 = phi i64 [ %18, %9 ], [ %22, %37 ]
  %22 = add nsw i64 %21, -1
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  %25 = getelementptr inbounds x86_fp80, ptr %11, i64 %24
  %26 = load x86_fp80, ptr %25, align 16, !tbaa !128
  %27 = getelementptr inbounds i64, ptr %13, i64 %24
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = getelementptr inbounds i64, ptr %13, i64 %21
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %28, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %20
  %34 = trunc i64 %28 to i32
  %35 = load ptr, ptr %14, align 8, !tbaa !46
  %36 = load ptr, ptr %15, align 8
  br label %45

37:                                               ; preds = %61, %20
  %38 = phi x86_fp80 [ %26, %20 ], [ %62, %61 ]
  %39 = fmul x86_fp80 %38, %16
  %40 = getelementptr inbounds float, ptr %17, i64 %28
  %41 = load float, ptr %40, align 4, !tbaa !95
  %42 = fpext float %41 to x86_fp80
  %43 = fdiv x86_fp80 %39, %42
  store x86_fp80 %43, ptr %25, align 16, !tbaa !128
  %44 = icmp eq i32 %23, 0
  br i1 %44, label %19, label %20

45:                                               ; preds = %33, %61
  %46 = phi i64 [ %31, %33 ], [ %64, %61 ]
  %47 = phi i32 [ %34, %33 ], [ %63, %61 ]
  %48 = phi x86_fp80 [ %26, %33 ], [ %62, %61 ]
  %49 = getelementptr inbounds i32, ptr %35, i64 %46
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %23
  br i1 %51, label %52, label %61

52:                                               ; preds = %45
  %53 = getelementptr inbounds float, ptr %36, i64 %46
  %54 = load float, ptr %53, align 4, !tbaa !95
  %55 = fpext float %54 to x86_fp80
  %56 = zext i32 %50 to i64
  %57 = getelementptr inbounds x86_fp80, ptr %11, i64 %56
  %58 = load x86_fp80, ptr %57, align 16, !tbaa !128
  %59 = fneg x86_fp80 %55
  %60 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %59, x86_fp80 %58, x86_fp80 %48)
  br label %61

61:                                               ; preds = %45, %52
  %62 = phi x86_fp80 [ %60, %52 ], [ %48, %45 ]
  %63 = add i32 %47, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %30, %64
  br i1 %65, label %45, label %37
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE19precondition_JacobiIeEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !138
  %7 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !135
  %9 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !135
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !8
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %12, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = fcmp une float %3, 1.000000e+00
  %16 = icmp eq i32 %6, 0
  br i1 %15, label %25, label %17

17:                                               ; preds = %4
  br i1 %16, label %111, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !92
  %21 = and i32 %6, 1
  %22 = icmp eq i32 %6, 1
  br i1 %22, label %99, label %23

23:                                               ; preds = %18
  %24 = and i32 %6, -2
  br label %61

25:                                               ; preds = %4
  br i1 %16, label %111, label %26

26:                                               ; preds = %25
  %27 = fpext float %3 to x86_fp80
  %28 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !92
  %30 = and i32 %6, 1
  %31 = icmp eq i32 %6, 1
  br i1 %31, label %86, label %32

32:                                               ; preds = %26
  %33 = and i32 %6, -2
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi ptr [ %14, %32 ], [ %58, %34 ]
  %36 = phi ptr [ %10, %32 ], [ %57, %34 ]
  %37 = phi ptr [ %8, %32 ], [ %56, %34 ]
  %38 = phi i32 [ 0, %32 ], [ %59, %34 ]
  %39 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %40 = fmul x86_fp80 %39, %27
  %41 = load i64, ptr %35, align 8, !tbaa !34
  %42 = getelementptr inbounds float, ptr %29, i64 %41
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = fdiv x86_fp80 %40, %44
  store x86_fp80 %45, ptr %37, align 16, !tbaa !128
  %46 = getelementptr inbounds x86_fp80, ptr %37, i64 1
  %47 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %48 = getelementptr inbounds i64, ptr %35, i64 1
  %49 = load x86_fp80, ptr %47, align 16, !tbaa !128
  %50 = fmul x86_fp80 %49, %27
  %51 = load i64, ptr %48, align 8, !tbaa !34
  %52 = getelementptr inbounds float, ptr %29, i64 %51
  %53 = load float, ptr %52, align 4, !tbaa !95
  %54 = fpext float %53 to x86_fp80
  %55 = fdiv x86_fp80 %50, %54
  store x86_fp80 %55, ptr %46, align 16, !tbaa !128
  %56 = getelementptr inbounds x86_fp80, ptr %37, i64 2
  %57 = getelementptr inbounds x86_fp80, ptr %36, i64 2
  %58 = getelementptr inbounds i64, ptr %35, i64 2
  %59 = add i32 %38, 2
  %60 = icmp eq i32 %59, %33
  br i1 %60, label %86, label %34

61:                                               ; preds = %61, %23
  %62 = phi ptr [ %14, %23 ], [ %83, %61 ]
  %63 = phi ptr [ %10, %23 ], [ %82, %61 ]
  %64 = phi ptr [ %8, %23 ], [ %81, %61 ]
  %65 = phi i32 [ 0, %23 ], [ %84, %61 ]
  %66 = load x86_fp80, ptr %63, align 16, !tbaa !128
  %67 = load i64, ptr %62, align 8, !tbaa !34
  %68 = getelementptr inbounds float, ptr %20, i64 %67
  %69 = load float, ptr %68, align 4, !tbaa !95
  %70 = fpext float %69 to x86_fp80
  %71 = fdiv x86_fp80 %66, %70
  store x86_fp80 %71, ptr %64, align 16, !tbaa !128
  %72 = getelementptr inbounds x86_fp80, ptr %64, i64 1
  %73 = getelementptr inbounds x86_fp80, ptr %63, i64 1
  %74 = getelementptr inbounds i64, ptr %62, i64 1
  %75 = load x86_fp80, ptr %73, align 16, !tbaa !128
  %76 = load i64, ptr %74, align 8, !tbaa !34
  %77 = getelementptr inbounds float, ptr %20, i64 %76
  %78 = load float, ptr %77, align 4, !tbaa !95
  %79 = fpext float %78 to x86_fp80
  %80 = fdiv x86_fp80 %75, %79
  store x86_fp80 %80, ptr %72, align 16, !tbaa !128
  %81 = getelementptr inbounds x86_fp80, ptr %64, i64 2
  %82 = getelementptr inbounds x86_fp80, ptr %63, i64 2
  %83 = getelementptr inbounds i64, ptr %62, i64 2
  %84 = add i32 %65, 2
  %85 = icmp eq i32 %84, %24
  br i1 %85, label %99, label %61

86:                                               ; preds = %34, %26
  %87 = phi ptr [ %14, %26 ], [ %58, %34 ]
  %88 = phi ptr [ %10, %26 ], [ %57, %34 ]
  %89 = phi ptr [ %8, %26 ], [ %56, %34 ]
  %90 = icmp eq i32 %30, 0
  br i1 %90, label %111, label %91

91:                                               ; preds = %86
  %92 = load x86_fp80, ptr %88, align 16, !tbaa !128
  %93 = fmul x86_fp80 %92, %27
  %94 = load i64, ptr %87, align 8, !tbaa !34
  %95 = getelementptr inbounds float, ptr %29, i64 %94
  %96 = load float, ptr %95, align 4, !tbaa !95
  %97 = fpext float %96 to x86_fp80
  %98 = fdiv x86_fp80 %93, %97
  store x86_fp80 %98, ptr %89, align 16, !tbaa !128
  br label %111

99:                                               ; preds = %61, %18
  %100 = phi ptr [ %14, %18 ], [ %83, %61 ]
  %101 = phi ptr [ %10, %18 ], [ %82, %61 ]
  %102 = phi ptr [ %8, %18 ], [ %81, %61 ]
  %103 = icmp eq i32 %21, 0
  br i1 %103, label %111, label %104

104:                                              ; preds = %99
  %105 = load x86_fp80, ptr %101, align 16, !tbaa !128
  %106 = load i64, ptr %100, align 8, !tbaa !34
  %107 = getelementptr inbounds float, ptr %20, i64 %106
  %108 = load float, ptr %107, align 4, !tbaa !95
  %109 = fpext float %108 to x86_fp80
  %110 = fdiv x86_fp80 %105, %109
  store x86_fp80 %110, ptr %102, align 16, !tbaa !128
  br label %111

111:                                              ; preds = %104, %99, %91, %86, %17, %25
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE4SSORIeEEvRNS_6VectorIT_EEf(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, float noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %82, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = fpext float %2 to x86_fp80
  %16 = load ptr, ptr %14, align 8, !tbaa !135
  %17 = load ptr, ptr %13, align 8, !tbaa !92
  %18 = zext i32 %5 to i64
  %19 = load i64, ptr %11, align 8, !tbaa !34
  br label %35

20:                                               ; preds = %71
  %21 = add i32 %5, -1
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %23, label %82

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !8
  %26 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 8
  %27 = load ptr, ptr %26, align 8, !tbaa !32
  %28 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 9
  %29 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %31 = fpext float %2 to x86_fp80
  %32 = load ptr, ptr %29, align 8, !tbaa !92
  %33 = load ptr, ptr %30, align 8, !tbaa !135
  %34 = zext i32 %21 to i64
  br label %83

35:                                               ; preds = %7, %71
  %36 = phi i64 [ %19, %7 ], [ %40, %71 ]
  %37 = phi i64 [ 0, %7 ], [ %38, %71 ]
  %38 = add nuw nsw i64 %37, 1
  %39 = getelementptr inbounds i64, ptr %11, i64 %38
  %40 = load i64, ptr %39, align 8, !tbaa !34
  %41 = and i64 %36, 4294967295
  %42 = icmp ugt i64 %40, %41
  br i1 %42, label %43, label %71

43:                                               ; preds = %35
  %44 = trunc i64 %36 to i32
  %45 = load ptr, ptr %12, align 8, !tbaa !46
  %46 = load ptr, ptr %13, align 8
  %47 = load ptr, ptr %14, align 8
  br label %48

48:                                               ; preds = %43, %66
  %49 = phi i64 [ %41, %43 ], [ %69, %66 ]
  %50 = phi i32 [ %44, %43 ], [ %68, %66 ]
  %51 = phi x86_fp80 [ 0xK00000000000000000000, %43 ], [ %67, %66 ]
  %52 = getelementptr inbounds i32, ptr %45, i64 %49
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ne i32 %53, -1
  %55 = zext i32 %50 to i64
  %56 = icmp ugt i64 %37, %55
  %57 = and i1 %56, %54
  br i1 %57, label %58, label %66

58:                                               ; preds = %48
  %59 = getelementptr inbounds float, ptr %46, i64 %49
  %60 = load float, ptr %59, align 4, !tbaa !95
  %61 = fpext float %60 to x86_fp80
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds x86_fp80, ptr %47, i64 %62
  %64 = load x86_fp80, ptr %63, align 16, !tbaa !128
  %65 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %61, x86_fp80 %64, x86_fp80 %51)
  br label %66

66:                                               ; preds = %58, %48
  %67 = phi x86_fp80 [ %65, %58 ], [ %51, %48 ]
  %68 = add i32 %50, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %40, %69
  br i1 %70, label %48, label %71

71:                                               ; preds = %66, %35
  %72 = phi x86_fp80 [ 0xK00000000000000000000, %35 ], [ %67, %66 ]
  %73 = getelementptr inbounds x86_fp80, ptr %16, i64 %37
  %74 = load x86_fp80, ptr %73, align 16, !tbaa !128
  %75 = fneg x86_fp80 %72
  %76 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %75, x86_fp80 %15, x86_fp80 %74)
  %77 = getelementptr inbounds float, ptr %17, i64 %36
  %78 = load float, ptr %77, align 4, !tbaa !95
  %79 = fpext float %78 to x86_fp80
  %80 = fdiv x86_fp80 %76, %79
  store x86_fp80 %80, ptr %73, align 16, !tbaa !128
  %81 = icmp eq i64 %38, %18
  br i1 %81, label %20, label %35

82:                                               ; preds = %121, %3, %20
  ret void

83:                                               ; preds = %23, %121
  %84 = phi i64 [ %34, %23 ], [ %131, %121 ]
  %85 = phi i32 [ %5, %23 ], [ %133, %121 ]
  %86 = getelementptr inbounds i64, ptr %27, i64 %84
  %87 = load i64, ptr %86, align 8, !tbaa !34
  %88 = sext i32 %85 to i64
  %89 = getelementptr inbounds i64, ptr %27, i64 %88
  %90 = load i64, ptr %89, align 8, !tbaa !34
  %91 = and i64 %87, 4294967295
  %92 = icmp ugt i64 %90, %91
  br i1 %92, label %93, label %121

93:                                               ; preds = %83
  %94 = trunc i64 %87 to i32
  %95 = load ptr, ptr %28, align 8, !tbaa !46
  %96 = load ptr, ptr %29, align 8
  %97 = load ptr, ptr %30, align 8
  br label %98

98:                                               ; preds = %93, %116
  %99 = phi i64 [ %91, %93 ], [ %119, %116 ]
  %100 = phi i32 [ %94, %93 ], [ %118, %116 ]
  %101 = phi x86_fp80 [ 0xK00000000000000000000, %93 ], [ %117, %116 ]
  %102 = getelementptr inbounds i32, ptr %95, i64 %99
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = icmp ne i32 %103, -1
  %105 = zext i32 %100 to i64
  %106 = icmp ult i64 %84, %105
  %107 = and i1 %106, %104
  br i1 %107, label %108, label %116

108:                                              ; preds = %98
  %109 = getelementptr inbounds float, ptr %96, i64 %99
  %110 = load float, ptr %109, align 4, !tbaa !95
  %111 = fpext float %110 to x86_fp80
  %112 = zext i32 %103 to i64
  %113 = getelementptr inbounds x86_fp80, ptr %97, i64 %112
  %114 = load x86_fp80, ptr %113, align 16, !tbaa !128
  %115 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %111, x86_fp80 %114, x86_fp80 %101)
  br label %116

116:                                              ; preds = %108, %98
  %117 = phi x86_fp80 [ %115, %108 ], [ %101, %98 ]
  %118 = add i32 %100, 1
  %119 = zext i32 %118 to i64
  %120 = icmp ugt i64 %90, %119
  br i1 %120, label %98, label %121

121:                                              ; preds = %116, %83
  %122 = phi x86_fp80 [ 0xK00000000000000000000, %83 ], [ %117, %116 ]
  %123 = fmul x86_fp80 %122, %31
  %124 = getelementptr inbounds float, ptr %32, i64 %87
  %125 = load float, ptr %124, align 4, !tbaa !95
  %126 = fpext float %125 to x86_fp80
  %127 = fdiv x86_fp80 %123, %126
  %128 = getelementptr inbounds x86_fp80, ptr %33, i64 %84
  %129 = load x86_fp80, ptr %128, align 16, !tbaa !128
  %130 = fsub x86_fp80 %129, %127
  store x86_fp80 %130, ptr %128, align 16, !tbaa !128
  %131 = add nsw i64 %84, -1
  %132 = icmp sgt i64 %84, 0
  %133 = trunc i64 %84 to i32
  br i1 %132, label %83, label %82
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE4PSORIeEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, float noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !135
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %20 = fpext float %4 to x86_fp80
  %21 = load ptr, ptr %19, align 8, !tbaa !92
  %22 = zext i32 %9 to i64
  br label %24

23:                                               ; preds = %43, %5
  ret void

24:                                               ; preds = %11, %43
  %25 = phi i64 [ 0, %11 ], [ %50, %43 ]
  %26 = getelementptr inbounds i32, ptr %12, i64 %25
  %27 = load i32, ptr %26, align 4, !tbaa !47
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds x86_fp80, ptr %14, i64 %28
  %30 = load x86_fp80, ptr %29, align 16, !tbaa !128
  %31 = getelementptr inbounds i64, ptr %16, i64 %28
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = add i32 %27, 1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i64, ptr %16, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = and i64 %32, 4294967295
  %38 = icmp ugt i64 %36, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %24
  %40 = trunc i64 %32 to i32
  %41 = load ptr, ptr %17, align 8, !tbaa !46
  %42 = load ptr, ptr %19, align 8
  br label %52

43:                                               ; preds = %71, %24
  %44 = phi x86_fp80 [ %30, %24 ], [ %72, %71 ]
  %45 = fmul x86_fp80 %44, %20
  %46 = getelementptr inbounds float, ptr %21, i64 %32
  %47 = load float, ptr %46, align 4, !tbaa !95
  %48 = fpext float %47 to x86_fp80
  %49 = fdiv x86_fp80 %45, %48
  store x86_fp80 %49, ptr %29, align 16, !tbaa !128
  %50 = add nuw nsw i64 %25, 1
  %51 = icmp eq i64 %50, %22
  br i1 %51, label %23, label %24

52:                                               ; preds = %39, %71
  %53 = phi i64 [ %37, %39 ], [ %74, %71 ]
  %54 = phi i32 [ %40, %39 ], [ %73, %71 ]
  %55 = phi x86_fp80 [ %30, %39 ], [ %72, %71 ]
  %56 = getelementptr inbounds i32, ptr %41, i64 %53
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %18, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %25, %61
  br i1 %62, label %63, label %71

63:                                               ; preds = %52
  %64 = getelementptr inbounds float, ptr %42, i64 %53
  %65 = load float, ptr %64, align 4, !tbaa !95
  %66 = fpext float %65 to x86_fp80
  %67 = getelementptr inbounds x86_fp80, ptr %14, i64 %58
  %68 = load x86_fp80, ptr %67, align 16, !tbaa !128
  %69 = fneg x86_fp80 %66
  %70 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %68, x86_fp80 %55)
  br label %71

71:                                               ; preds = %63, %52
  %72 = phi x86_fp80 [ %70, %63 ], [ %55, %52 ]
  %73 = add i32 %54, 1
  %74 = zext i32 %73 to i64
  %75 = icmp ugt i64 %36, %74
  br i1 %75, label %52, label %43
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5TPSORIeEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, float noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !135
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %20 = fpext float %4 to x86_fp80
  %21 = load ptr, ptr %19, align 8, !tbaa !92
  %22 = zext i32 %9 to i64
  br label %24

23:                                               ; preds = %46, %5
  ret void

24:                                               ; preds = %11, %46
  %25 = phi i64 [ %22, %11 ], [ %26, %46 ]
  %26 = add nsw i64 %25, -1
  %27 = trunc i64 %26 to i32
  %28 = and i64 %26, 4294967295
  %29 = getelementptr inbounds i32, ptr %12, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds x86_fp80, ptr %14, i64 %31
  %33 = load x86_fp80, ptr %32, align 16, !tbaa !128
  %34 = getelementptr inbounds i64, ptr %16, i64 %31
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = add i32 %30, 1
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i64, ptr %16, i64 %37
  %39 = load i64, ptr %38, align 8, !tbaa !34
  %40 = and i64 %35, 4294967295
  %41 = icmp ugt i64 %39, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %24
  %43 = trunc i64 %35 to i32
  %44 = load ptr, ptr %17, align 8, !tbaa !46
  %45 = load ptr, ptr %19, align 8
  br label %54

46:                                               ; preds = %72, %24
  %47 = phi x86_fp80 [ %33, %24 ], [ %73, %72 ]
  %48 = fmul x86_fp80 %47, %20
  %49 = getelementptr inbounds float, ptr %21, i64 %35
  %50 = load float, ptr %49, align 4, !tbaa !95
  %51 = fpext float %50 to x86_fp80
  %52 = fdiv x86_fp80 %48, %51
  store x86_fp80 %52, ptr %32, align 16, !tbaa !128
  %53 = icmp eq i32 %27, 0
  br i1 %53, label %23, label %24

54:                                               ; preds = %42, %72
  %55 = phi i64 [ %40, %42 ], [ %75, %72 ]
  %56 = phi i32 [ %43, %42 ], [ %74, %72 ]
  %57 = phi x86_fp80 [ %33, %42 ], [ %73, %72 ]
  %58 = getelementptr inbounds i32, ptr %44, i64 %55
  %59 = load i32, ptr %58, align 4, !tbaa !47
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i32, ptr %18, i64 %60
  %62 = load i32, ptr %61, align 4, !tbaa !47
  %63 = icmp ugt i32 %62, %27
  br i1 %63, label %64, label %72

64:                                               ; preds = %54
  %65 = getelementptr inbounds float, ptr %45, i64 %55
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fpext float %66 to x86_fp80
  %68 = getelementptr inbounds x86_fp80, ptr %14, i64 %60
  %69 = load x86_fp80, ptr %68, align 16, !tbaa !128
  %70 = fneg x86_fp80 %67
  %71 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %69, x86_fp80 %57)
  br label %72

72:                                               ; preds = %64, %54
  %73 = phi x86_fp80 [ %71, %64 ], [ %57, %54 ]
  %74 = add i32 %56, 1
  %75 = zext i32 %74 to i64
  %76 = icmp ugt i64 %39, %75
  br i1 %76, label %54, label %46
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE8SOR_stepIeEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !135
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = fpext float %3 to x86_fp80
  %21 = zext i32 %8 to i64
  %22 = load i64, ptr %14, align 8, !tbaa !34
  br label %24

23:                                               ; preds = %37, %4
  ret void

24:                                               ; preds = %10, %37
  %25 = phi i64 [ %22, %10 ], [ %31, %37 ]
  %26 = phi i64 [ 0, %10 ], [ %29, %37 ]
  %27 = getelementptr inbounds x86_fp80, ptr %12, i64 %26
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !128
  %29 = add nuw nsw i64 %26, 1
  %30 = getelementptr inbounds i64, ptr %14, i64 %29
  %31 = load i64, ptr %30, align 8, !tbaa !34
  %32 = and i64 %25, 4294967295
  %33 = icmp ugt i64 %31, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %24
  %35 = trunc i64 %25 to i32
  %36 = load ptr, ptr %17, align 8, !tbaa !46
  br label %48

37:                                               ; preds = %48, %24
  %38 = phi x86_fp80 [ %28, %24 ], [ %61, %48 ]
  %39 = fmul x86_fp80 %38, %20
  %40 = getelementptr inbounds float, ptr %16, i64 %25
  %41 = load float, ptr %40, align 4, !tbaa !95
  %42 = fpext float %41 to x86_fp80
  %43 = fdiv x86_fp80 %39, %42
  %44 = getelementptr inbounds x86_fp80, ptr %19, i64 %26
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  %46 = fadd x86_fp80 %45, %43
  store x86_fp80 %46, ptr %44, align 16, !tbaa !128
  %47 = icmp eq i64 %29, %21
  br i1 %47, label %23, label %24

48:                                               ; preds = %34, %48
  %49 = phi i64 [ %32, %34 ], [ %63, %48 ]
  %50 = phi i32 [ %35, %34 ], [ %62, %48 ]
  %51 = phi x86_fp80 [ %28, %34 ], [ %61, %48 ]
  %52 = getelementptr inbounds float, ptr %16, i64 %49
  %53 = load float, ptr %52, align 4, !tbaa !95
  %54 = fpext float %53 to x86_fp80
  %55 = getelementptr inbounds i32, ptr %36, i64 %49
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds x86_fp80, ptr %19, i64 %57
  %59 = load x86_fp80, ptr %58, align 16, !tbaa !128
  %60 = fneg x86_fp80 %54
  %61 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %60, x86_fp80 %59, x86_fp80 %51)
  %62 = add i32 %50, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %31, %63
  br i1 %64, label %48, label %37
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9TSOR_stepIeEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = add i32 %8, -1
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %23

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !135
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %19 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = fpext float %3 to x86_fp80
  %22 = zext i32 %9 to i64
  br label %24

23:                                               ; preds = %39, %4
  ret void

24:                                               ; preds = %11, %39
  %25 = phi i64 [ %22, %11 ], [ %49, %39 ]
  %26 = phi i32 [ %8, %11 ], [ %51, %39 ]
  %27 = getelementptr inbounds x86_fp80, ptr %13, i64 %25
  %28 = load x86_fp80, ptr %27, align 16, !tbaa !128
  %29 = getelementptr inbounds i64, ptr %15, i64 %25
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds i64, ptr %15, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %30, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %24
  %37 = trunc i64 %30 to i32
  %38 = load ptr, ptr %18, align 8, !tbaa !46
  br label %52

39:                                               ; preds = %52, %24
  %40 = phi x86_fp80 [ %28, %24 ], [ %65, %52 ]
  %41 = fmul x86_fp80 %40, %21
  %42 = getelementptr inbounds float, ptr %17, i64 %30
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = fdiv x86_fp80 %41, %44
  %46 = getelementptr inbounds x86_fp80, ptr %20, i64 %25
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !128
  %48 = fadd x86_fp80 %47, %45
  store x86_fp80 %48, ptr %46, align 16, !tbaa !128
  %49 = add nsw i64 %25, -1
  %50 = icmp sgt i64 %25, 0
  %51 = trunc i64 %25 to i32
  br i1 %50, label %24, label %23

52:                                               ; preds = %36, %52
  %53 = phi i64 [ %34, %36 ], [ %67, %52 ]
  %54 = phi i32 [ %37, %36 ], [ %66, %52 ]
  %55 = phi x86_fp80 [ %28, %36 ], [ %65, %52 ]
  %56 = getelementptr inbounds float, ptr %17, i64 %53
  %57 = load float, ptr %56, align 4, !tbaa !95
  %58 = fpext float %57 to x86_fp80
  %59 = getelementptr inbounds i32, ptr %38, i64 %53
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds x86_fp80, ptr %20, i64 %61
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = fneg x86_fp80 %58
  %65 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %64, x86_fp80 %63, x86_fp80 %55)
  %66 = add i32 %54, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %33, %67
  br i1 %68, label %52, label %39
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9SSOR_stepIeEEvRNS_6VectorIT_EERKS5_f(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, float noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %116, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !135
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = fpext float %3 to x86_fp80
  %21 = zext i32 %8 to i64
  %22 = load i64, ptr %14, align 8, !tbaa !34
  br label %23

23:                                               ; preds = %36, %10
  %24 = phi i64 [ %22, %10 ], [ %30, %36 ]
  %25 = phi i64 [ 0, %10 ], [ %28, %36 ]
  %26 = getelementptr inbounds x86_fp80, ptr %12, i64 %25
  %27 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %28 = add nuw nsw i64 %25, 1
  %29 = getelementptr inbounds i64, ptr %14, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %24, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = trunc i64 %24 to i32
  %35 = load ptr, ptr %17, align 8, !tbaa !46
  br label %47

36:                                               ; preds = %47, %23
  %37 = phi x86_fp80 [ %27, %23 ], [ %60, %47 ]
  %38 = fmul x86_fp80 %37, %20
  %39 = getelementptr inbounds float, ptr %16, i64 %24
  %40 = load float, ptr %39, align 4, !tbaa !95
  %41 = fpext float %40 to x86_fp80
  %42 = fdiv x86_fp80 %38, %41
  %43 = getelementptr inbounds x86_fp80, ptr %19, i64 %25
  %44 = load x86_fp80, ptr %43, align 16, !tbaa !128
  %45 = fadd x86_fp80 %44, %42
  store x86_fp80 %45, ptr %43, align 16, !tbaa !128
  %46 = icmp eq i64 %28, %21
  br i1 %46, label %64, label %23

47:                                               ; preds = %47, %33
  %48 = phi i64 [ %31, %33 ], [ %62, %47 ]
  %49 = phi i32 [ %34, %33 ], [ %61, %47 ]
  %50 = phi x86_fp80 [ %27, %33 ], [ %60, %47 ]
  %51 = getelementptr inbounds float, ptr %16, i64 %48
  %52 = load float, ptr %51, align 4, !tbaa !95
  %53 = fpext float %52 to x86_fp80
  %54 = getelementptr inbounds i32, ptr %35, i64 %48
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds x86_fp80, ptr %19, i64 %56
  %58 = load x86_fp80, ptr %57, align 16, !tbaa !128
  %59 = fneg x86_fp80 %53
  %60 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %59, x86_fp80 %58, x86_fp80 %50)
  %61 = add i32 %49, 1
  %62 = zext i32 %61 to i64
  %63 = icmp ugt i64 %30, %62
  br i1 %63, label %47, label %36

64:                                               ; preds = %36
  %65 = add i32 %8, -1
  %66 = icmp sgt i32 %65, -1
  br i1 %66, label %67, label %116

67:                                               ; preds = %64
  %68 = load ptr, ptr %15, align 8
  %69 = load ptr, ptr %18, align 8
  %70 = zext i32 %65 to i64
  br label %71

71:                                               ; preds = %86, %67
  %72 = phi i64 [ %70, %67 ], [ %96, %86 ]
  %73 = phi i32 [ %8, %67 ], [ %98, %86 ]
  %74 = getelementptr inbounds x86_fp80, ptr %12, i64 %72
  %75 = load x86_fp80, ptr %74, align 16, !tbaa !128
  %76 = getelementptr inbounds i64, ptr %14, i64 %72
  %77 = load i64, ptr %76, align 8, !tbaa !34
  %78 = sext i32 %73 to i64
  %79 = getelementptr inbounds i64, ptr %14, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %77, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %71
  %84 = trunc i64 %77 to i32
  %85 = load ptr, ptr %17, align 8, !tbaa !46
  br label %99

86:                                               ; preds = %99, %71
  %87 = phi x86_fp80 [ %75, %71 ], [ %112, %99 ]
  %88 = fmul x86_fp80 %87, %20
  %89 = getelementptr inbounds float, ptr %68, i64 %77
  %90 = load float, ptr %89, align 4, !tbaa !95
  %91 = fpext float %90 to x86_fp80
  %92 = fdiv x86_fp80 %88, %91
  %93 = getelementptr inbounds x86_fp80, ptr %69, i64 %72
  %94 = load x86_fp80, ptr %93, align 16, !tbaa !128
  %95 = fadd x86_fp80 %94, %92
  store x86_fp80 %95, ptr %93, align 16, !tbaa !128
  %96 = add nsw i64 %72, -1
  %97 = icmp sgt i64 %72, 0
  %98 = trunc i64 %72 to i32
  br i1 %97, label %71, label %116

99:                                               ; preds = %99, %83
  %100 = phi i64 [ %81, %83 ], [ %114, %99 ]
  %101 = phi i32 [ %84, %83 ], [ %113, %99 ]
  %102 = phi x86_fp80 [ %75, %83 ], [ %112, %99 ]
  %103 = getelementptr inbounds float, ptr %68, i64 %100
  %104 = load float, ptr %103, align 4, !tbaa !95
  %105 = fpext float %104 to x86_fp80
  %106 = getelementptr inbounds i32, ptr %85, i64 %100
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds x86_fp80, ptr %69, i64 %108
  %110 = load x86_fp80, ptr %109, align 16, !tbaa !128
  %111 = fneg x86_fp80 %105
  %112 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %111, x86_fp80 %110, x86_fp80 %102)
  %113 = add i32 %101, 1
  %114 = zext i32 %113 to i64
  %115 = icmp ugt i64 %80, %114
  br i1 %115, label %99, label %86

116:                                              ; preds = %86, %4, %64
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIeE18matrix_norm_squareIdEET_RKNS_6VectorIS3_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !125
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 9
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = load i64, ptr %10, align 8, !tbaa !34
  %16 = getelementptr inbounds i32, ptr %14, i64 %15
  %17 = getelementptr inbounds x86_fp80, ptr %8, i64 %15
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %6 to i64
  br label %23

21:                                               ; preds = %49, %2
  %22 = phi double [ 0.000000e+00, %2 ], [ %55, %49 ]
  ret double %22

23:                                               ; preds = %12, %49
  %24 = phi i64 [ 0, %12 ], [ %28, %49 ]
  %25 = phi double [ 0.000000e+00, %12 ], [ %55, %49 ]
  %26 = phi ptr [ %16, %12 ], [ %52, %49 ]
  %27 = phi ptr [ %17, %12 ], [ %51, %49 ]
  %28 = add nuw nsw i64 %24, 1
  %29 = getelementptr inbounds i64, ptr %10, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = getelementptr inbounds x86_fp80, ptr %8, i64 %30
  %32 = icmp eq ptr %27, %31
  br i1 %32, label %49, label %33

33:                                               ; preds = %23, %33
  %34 = phi ptr [ %39, %33 ], [ %26, %23 ]
  %35 = phi ptr [ %37, %33 ], [ %27, %23 ]
  %36 = phi double [ %47, %33 ], [ 0.000000e+00, %23 ]
  %37 = getelementptr inbounds x86_fp80, ptr %35, i64 1
  %38 = load x86_fp80, ptr %35, align 16, !tbaa !128
  %39 = getelementptr inbounds i32, ptr %34, i64 1
  %40 = load i32, ptr %34, align 4, !tbaa !47
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds double, ptr %19, i64 %41
  %43 = load double, ptr %42, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = fpext double %36 to x86_fp80
  %46 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %38, x86_fp80 %44, x86_fp80 %45)
  %47 = fptrunc x86_fp80 %46 to double
  %48 = icmp eq ptr %37, %31
  br i1 %48, label %49, label %33

49:                                               ; preds = %33, %23
  %50 = phi double [ 0.000000e+00, %23 ], [ %47, %33 ]
  %51 = phi ptr [ %27, %23 ], [ %31, %33 ]
  %52 = phi ptr [ %26, %23 ], [ %39, %33 ]
  %53 = getelementptr inbounds double, ptr %19, i64 %24
  %54 = load double, ptr %53, align 8, !tbaa !30
  %55 = tail call double @llvm.fmuladd.f64(double %54, double %50, double %25)
  %56 = icmp eq i64 %28, %20
  br i1 %56, label %21, label %23
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIeE21matrix_scalar_productIdEET_RKNS_6VectorIS3_EES7_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = load i64, ptr %11, align 8, !tbaa !34
  %17 = getelementptr inbounds i32, ptr %15, i64 %16
  %18 = getelementptr inbounds x86_fp80, ptr %9, i64 %16
  %19 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !53
  %23 = zext i32 %7 to i64
  br label %26

24:                                               ; preds = %52, %3
  %25 = phi double [ 0.000000e+00, %3 ], [ %58, %52 ]
  ret double %25

26:                                               ; preds = %13, %52
  %27 = phi i64 [ 0, %13 ], [ %31, %52 ]
  %28 = phi double [ 0.000000e+00, %13 ], [ %58, %52 ]
  %29 = phi ptr [ %17, %13 ], [ %55, %52 ]
  %30 = phi ptr [ %18, %13 ], [ %54, %52 ]
  %31 = add nuw nsw i64 %27, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = getelementptr inbounds x86_fp80, ptr %9, i64 %33
  %35 = icmp eq ptr %30, %34
  br i1 %35, label %52, label %36

36:                                               ; preds = %26, %36
  %37 = phi ptr [ %42, %36 ], [ %29, %26 ]
  %38 = phi ptr [ %40, %36 ], [ %30, %26 ]
  %39 = phi double [ %50, %36 ], [ 0.000000e+00, %26 ]
  %40 = getelementptr inbounds x86_fp80, ptr %38, i64 1
  %41 = load x86_fp80, ptr %38, align 16, !tbaa !128
  %42 = getelementptr inbounds i32, ptr %37, i64 1
  %43 = load i32, ptr %37, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds double, ptr %20, i64 %44
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = fpext double %46 to x86_fp80
  %48 = fpext double %39 to x86_fp80
  %49 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %47, x86_fp80 %48)
  %50 = fptrunc x86_fp80 %49 to double
  %51 = icmp eq ptr %40, %34
  br i1 %51, label %52, label %36

52:                                               ; preds = %36, %26
  %53 = phi double [ 0.000000e+00, %26 ], [ %50, %36 ]
  %54 = phi ptr [ %30, %26 ], [ %34, %36 ]
  %55 = phi ptr [ %29, %26 ], [ %42, %36 ]
  %56 = getelementptr inbounds double, ptr %22, i64 %27
  %57 = load double, ptr %56, align 8, !tbaa !30
  %58 = tail call double @llvm.fmuladd.f64(double %57, double %53, double %28)
  %59 = icmp eq i64 %31, %23
  br i1 %59, label %24, label %26
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii12SparseMatrixIeE8residualIdEET_RNS_6VectorIS3_EERKS5_S8_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %3, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !53
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !53
  %22 = zext i32 %8 to i64
  %23 = load i64, ptr %14, align 8, !tbaa !34
  br label %27

24:                                               ; preds = %41, %4
  %25 = phi double [ 0.000000e+00, %4 ], [ %44, %41 ]
  %26 = tail call double @sqrt(double noundef %25) #17
  ret double %26

27:                                               ; preds = %10, %41
  %28 = phi i64 [ %23, %10 ], [ %35, %41 ]
  %29 = phi i64 [ 0, %10 ], [ %33, %41 ]
  %30 = phi double [ 0.000000e+00, %10 ], [ %44, %41 ]
  %31 = getelementptr inbounds double, ptr %12, i64 %29
  %32 = load double, ptr %31, align 8, !tbaa !30
  %33 = add nuw nsw i64 %29, 1
  %34 = getelementptr inbounds i64, ptr %14, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %28, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %27
  %39 = trunc i64 %28 to i32
  %40 = load ptr, ptr %15, align 8, !tbaa !46
  br label %46

41:                                               ; preds = %46, %27
  %42 = phi double [ %32, %27 ], [ %61, %46 ]
  %43 = getelementptr inbounds double, ptr %21, i64 %29
  store double %42, ptr %43, align 8, !tbaa !30
  %44 = tail call double @llvm.fmuladd.f64(double %42, double %42, double %30)
  %45 = icmp eq i64 %33, %22
  br i1 %45, label %24, label %27

46:                                               ; preds = %38, %46
  %47 = phi i64 [ %36, %38 ], [ %63, %46 ]
  %48 = phi i32 [ %39, %38 ], [ %62, %46 ]
  %49 = phi double [ %32, %38 ], [ %61, %46 ]
  %50 = getelementptr inbounds i32, ptr %40, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = getelementptr inbounds x86_fp80, ptr %17, i64 %47
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds double, ptr %19, i64 %54
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = fpext double %56 to x86_fp80
  %58 = fpext double %49 to x86_fp80
  %59 = fneg x86_fp80 %53
  %60 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %59, x86_fp80 %57, x86_fp80 %58)
  %61 = fptrunc x86_fp80 %60 to double
  %62 = add i32 %48, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %35, %63
  br i1 %64, label %46, label %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE17precondition_SSORIdEEvRNS_6VectorIT_EERKS5_eRKSt6vectorIjSaIjEE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !56
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !53
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !195
  %16 = load ptr, ptr %4, align 8, !tbaa !197
  %17 = icmp eq ptr %15, %16
  %18 = icmp eq i32 %7, 0
  br i1 %17, label %27, label %19

19:                                               ; preds = %5
  br i1 %18, label %606, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !53
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %26 = zext i32 %7 to i64
  br label %47

27:                                               ; preds = %5
  br i1 %18, label %606, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !53
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = ptrtoint ptr %32 to i64
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %7 to i64
  %37 = load i64, ptr %11, align 8, !tbaa !34
  br label %256

38:                                               ; preds = %83
  br i1 %18, label %606, label %39

39:                                               ; preds = %38
  %40 = fsub x86_fp80 0xK40008000000000000000, %3
  %41 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !125
  %43 = and i32 %7, 1
  %44 = icmp eq i32 %7, 1
  br i1 %44, label %123, label %45

45:                                               ; preds = %39
  %46 = and i32 %7, -2
  br label %146

47:                                               ; preds = %20, %83
  %48 = phi i64 [ 0, %20 ], [ %94, %83 ]
  %49 = phi ptr [ %11, %20 ], [ %96, %83 ]
  %50 = phi ptr [ %13, %20 ], [ %95, %83 ]
  %51 = getelementptr inbounds double, ptr %22, i64 %48
  %52 = load double, ptr %51, align 8, !tbaa !30
  store double %52, ptr %50, align 8, !tbaa !30
  %53 = getelementptr inbounds i32, ptr %16, i64 %48
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = load i64, ptr %49, align 8, !tbaa !34
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, 1
  %58 = icmp ult i32 %57, %54
  br i1 %58, label %59, label %83

59:                                               ; preds = %47
  %60 = load ptr, ptr %25, align 8, !tbaa !46
  %61 = zext i32 %57 to i64
  %62 = xor i32 %56, -1
  %63 = add i32 %54, %62
  %64 = add i32 %54, -2
  %65 = and i32 %63, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %78, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds x86_fp80, ptr %24, i64 %61
  %69 = load x86_fp80, ptr %68, align 16, !tbaa !128
  %70 = getelementptr inbounds i32, ptr %60, i64 %61
  %71 = load i32, ptr %70, align 4, !tbaa !47
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds double, ptr %13, i64 %72
  %74 = load double, ptr %73, align 8, !tbaa !30
  %75 = fpext double %74 to x86_fp80
  %76 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %75, x86_fp80 0xK00000000000000000000)
  %77 = add nuw nsw i64 %61, 1
  br label %78

78:                                               ; preds = %67, %59
  %79 = phi x86_fp80 [ undef, %59 ], [ %76, %67 ]
  %80 = phi i64 [ %61, %59 ], [ %77, %67 ]
  %81 = phi x86_fp80 [ 0xK00000000000000000000, %59 ], [ %76, %67 ]
  %82 = icmp eq i32 %64, %56
  br i1 %82, label %83, label %98

83:                                               ; preds = %78, %98, %47
  %84 = phi x86_fp80 [ 0xK00000000000000000000, %47 ], [ %79, %78 ], [ %119, %98 ]
  %85 = fpext double %52 to x86_fp80
  %86 = fneg x86_fp80 %84
  %87 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %86, x86_fp80 %3, x86_fp80 %85)
  %88 = fptrunc x86_fp80 %87 to double
  %89 = getelementptr inbounds x86_fp80, ptr %24, i64 %55
  %90 = load x86_fp80, ptr %89, align 16, !tbaa !128
  %91 = fpext double %88 to x86_fp80
  %92 = fdiv x86_fp80 %91, %90
  %93 = fptrunc x86_fp80 %92 to double
  store double %93, ptr %50, align 8, !tbaa !30
  %94 = add nuw nsw i64 %48, 1
  %95 = getelementptr inbounds double, ptr %50, i64 1
  %96 = getelementptr inbounds i64, ptr %49, i64 1
  %97 = icmp eq i64 %94, %26
  br i1 %97, label %38, label %47

98:                                               ; preds = %78, %98
  %99 = phi i64 [ %120, %98 ], [ %80, %78 ]
  %100 = phi x86_fp80 [ %119, %98 ], [ %81, %78 ]
  %101 = getelementptr inbounds x86_fp80, ptr %24, i64 %99
  %102 = load x86_fp80, ptr %101, align 16, !tbaa !128
  %103 = getelementptr inbounds i32, ptr %60, i64 %99
  %104 = load i32, ptr %103, align 4, !tbaa !47
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds double, ptr %13, i64 %105
  %107 = load double, ptr %106, align 8, !tbaa !30
  %108 = fpext double %107 to x86_fp80
  %109 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %102, x86_fp80 %108, x86_fp80 %100)
  %110 = add nuw nsw i64 %99, 1
  %111 = getelementptr inbounds x86_fp80, ptr %24, i64 %110
  %112 = load x86_fp80, ptr %111, align 16, !tbaa !128
  %113 = getelementptr inbounds i32, ptr %60, i64 %110
  %114 = load i32, ptr %113, align 4, !tbaa !47
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds double, ptr %13, i64 %115
  %117 = load double, ptr %116, align 8, !tbaa !30
  %118 = fpext double %117 to x86_fp80
  %119 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %112, x86_fp80 %118, x86_fp80 %109)
  %120 = add nuw nsw i64 %99, 2
  %121 = trunc i64 %120 to i32
  %122 = icmp eq i32 %54, %121
  br i1 %122, label %83, label %98

123:                                              ; preds = %146, %39
  %124 = phi ptr [ %11, %39 ], [ %168, %146 ]
  %125 = phi ptr [ %13, %39 ], [ %169, %146 ]
  %126 = icmp eq i32 %43, 0
  br i1 %126, label %136, label %127

127:                                              ; preds = %123
  %128 = load i64, ptr %124, align 8, !tbaa !34
  %129 = getelementptr inbounds x86_fp80, ptr %42, i64 %128
  %130 = load x86_fp80, ptr %129, align 16, !tbaa !128
  %131 = fmul x86_fp80 %40, %130
  %132 = load double, ptr %125, align 8, !tbaa !30
  %133 = fpext double %132 to x86_fp80
  %134 = fmul x86_fp80 %131, %133
  %135 = fptrunc x86_fp80 %134 to double
  store double %135, ptr %125, align 8, !tbaa !30
  br label %136

136:                                              ; preds = %123, %127
  %137 = add i32 %7, -1
  %138 = icmp sgt i32 %137, -1
  br i1 %138, label %139, label %606

139:                                              ; preds = %136
  %140 = zext i32 %137 to i64
  %141 = getelementptr inbounds double, ptr %13, i64 %140
  %142 = getelementptr inbounds i64, ptr %11, i64 %140
  %143 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %144 = load ptr, ptr %143, align 8
  %145 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  br label %172

146:                                              ; preds = %146, %45
  %147 = phi ptr [ %11, %45 ], [ %168, %146 ]
  %148 = phi ptr [ %13, %45 ], [ %169, %146 ]
  %149 = phi i32 [ 0, %45 ], [ %170, %146 ]
  %150 = load i64, ptr %147, align 8, !tbaa !34
  %151 = getelementptr inbounds x86_fp80, ptr %42, i64 %150
  %152 = load x86_fp80, ptr %151, align 16, !tbaa !128
  %153 = fmul x86_fp80 %40, %152
  %154 = load double, ptr %148, align 8, !tbaa !30
  %155 = fpext double %154 to x86_fp80
  %156 = fmul x86_fp80 %153, %155
  %157 = fptrunc x86_fp80 %156 to double
  store double %157, ptr %148, align 8, !tbaa !30
  %158 = getelementptr inbounds i64, ptr %147, i64 1
  %159 = getelementptr inbounds double, ptr %148, i64 1
  %160 = load i64, ptr %158, align 8, !tbaa !34
  %161 = getelementptr inbounds x86_fp80, ptr %42, i64 %160
  %162 = load x86_fp80, ptr %161, align 16, !tbaa !128
  %163 = fmul x86_fp80 %40, %162
  %164 = load double, ptr %159, align 8, !tbaa !30
  %165 = fpext double %164 to x86_fp80
  %166 = fmul x86_fp80 %163, %165
  %167 = fptrunc x86_fp80 %166 to double
  store double %167, ptr %159, align 8, !tbaa !30
  %168 = getelementptr inbounds i64, ptr %147, i64 2
  %169 = getelementptr inbounds double, ptr %148, i64 2
  %170 = add i32 %149, 2
  %171 = icmp eq i32 %170, %46
  br i1 %171, label %123, label %146

172:                                              ; preds = %139, %206
  %173 = phi i64 [ %140, %139 ], [ %219, %206 ]
  %174 = phi ptr [ %142, %139 ], [ %220, %206 ]
  %175 = phi ptr [ %141, %139 ], [ %221, %206 ]
  %176 = getelementptr inbounds i64, ptr %174, i64 1
  %177 = load i64, ptr %176, align 8, !tbaa !34
  %178 = trunc i64 %177 to i32
  %179 = getelementptr inbounds i32, ptr %16, i64 %173
  %180 = load i32, ptr %179, align 4, !tbaa !47
  %181 = icmp ult i32 %180, %178
  br i1 %181, label %182, label %206

182:                                              ; preds = %172
  %183 = load ptr, ptr %145, align 8, !tbaa !46
  %184 = zext i32 %180 to i64
  %185 = and i64 %177, 4294967295
  %186 = sub i64 %177, %184
  %187 = add nuw nsw i64 %184, 1
  %188 = and i64 %186, 1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %201, label %190

190:                                              ; preds = %182
  %191 = getelementptr inbounds x86_fp80, ptr %144, i64 %184
  %192 = load x86_fp80, ptr %191, align 16, !tbaa !128
  %193 = getelementptr inbounds i32, ptr %183, i64 %184
  %194 = load i32, ptr %193, align 4, !tbaa !47
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds double, ptr %13, i64 %195
  %197 = load double, ptr %196, align 8, !tbaa !30
  %198 = fpext double %197 to x86_fp80
  %199 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %192, x86_fp80 %198, x86_fp80 0xK00000000000000000000)
  %200 = add nuw nsw i64 %184, 1
  br label %201

201:                                              ; preds = %190, %182
  %202 = phi x86_fp80 [ undef, %182 ], [ %199, %190 ]
  %203 = phi i64 [ %184, %182 ], [ %200, %190 ]
  %204 = phi x86_fp80 [ 0xK00000000000000000000, %182 ], [ %199, %190 ]
  %205 = icmp eq i64 %185, %187
  br i1 %205, label %206, label %223

206:                                              ; preds = %201, %223, %172
  %207 = phi x86_fp80 [ 0xK00000000000000000000, %172 ], [ %202, %201 ], [ %244, %223 ]
  %208 = load double, ptr %175, align 8, !tbaa !30
  %209 = fpext double %208 to x86_fp80
  %210 = fneg x86_fp80 %207
  %211 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %210, x86_fp80 %3, x86_fp80 %209)
  %212 = fptrunc x86_fp80 %211 to double
  %213 = load i64, ptr %174, align 8, !tbaa !34
  %214 = getelementptr inbounds x86_fp80, ptr %144, i64 %213
  %215 = load x86_fp80, ptr %214, align 16, !tbaa !128
  %216 = fpext double %212 to x86_fp80
  %217 = fdiv x86_fp80 %216, %215
  %218 = fptrunc x86_fp80 %217 to double
  store double %218, ptr %175, align 8, !tbaa !30
  %219 = add nsw i64 %173, -1
  %220 = getelementptr inbounds i64, ptr %174, i64 -1
  %221 = getelementptr inbounds double, ptr %175, i64 -1
  %222 = icmp sgt i64 %173, 0
  br i1 %222, label %172, label %606

223:                                              ; preds = %201, %223
  %224 = phi i64 [ %245, %223 ], [ %203, %201 ]
  %225 = phi x86_fp80 [ %244, %223 ], [ %204, %201 ]
  %226 = getelementptr inbounds x86_fp80, ptr %144, i64 %224
  %227 = load x86_fp80, ptr %226, align 16, !tbaa !128
  %228 = getelementptr inbounds i32, ptr %183, i64 %224
  %229 = load i32, ptr %228, align 4, !tbaa !47
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds double, ptr %13, i64 %230
  %232 = load double, ptr %231, align 8, !tbaa !30
  %233 = fpext double %232 to x86_fp80
  %234 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %227, x86_fp80 %233, x86_fp80 %225)
  %235 = add nuw nsw i64 %224, 1
  %236 = getelementptr inbounds x86_fp80, ptr %144, i64 %235
  %237 = load x86_fp80, ptr %236, align 16, !tbaa !128
  %238 = getelementptr inbounds i32, ptr %183, i64 %235
  %239 = load i32, ptr %238, align 4, !tbaa !47
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds double, ptr %13, i64 %240
  %242 = load double, ptr %241, align 8, !tbaa !30
  %243 = fpext double %242 to x86_fp80
  %244 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %237, x86_fp80 %243, x86_fp80 %234)
  %245 = add nuw nsw i64 %224, 2
  %246 = icmp eq i64 %245, %185
  br i1 %246, label %206, label %223

247:                                              ; preds = %371
  br i1 %18, label %606, label %248

248:                                              ; preds = %247
  %249 = fsub x86_fp80 0xK40008000000000000000, %3
  %250 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %251 = load ptr, ptr %250, align 8, !tbaa !125
  %252 = and i32 %7, 1
  %253 = icmp eq i32 %7, 1
  br i1 %253, label %410, label %254

254:                                              ; preds = %248
  %255 = and i32 %7, -2
  br label %435

256:                                              ; preds = %28, %371
  %257 = phi i64 [ %37, %28 ], [ %266, %371 ]
  %258 = phi i64 [ 0, %28 ], [ %382, %371 ]
  %259 = phi ptr [ %11, %28 ], [ %265, %371 ]
  %260 = phi ptr [ %13, %28 ], [ %383, %371 ]
  %261 = getelementptr inbounds double, ptr %30, i64 %258
  %262 = load double, ptr %261, align 8, !tbaa !30
  store double %262, ptr %260, align 8, !tbaa !30
  %263 = add i64 %257, 1
  %264 = getelementptr inbounds i32, ptr %32, i64 %263
  %265 = getelementptr inbounds i64, ptr %259, i64 1
  %266 = load i64, ptr %265, align 8, !tbaa !34
  %267 = getelementptr inbounds i32, ptr %32, i64 %266
  %268 = ptrtoint ptr %267 to i64
  %269 = ptrtoint ptr %264 to i64
  %270 = sub i64 %268, %269
  %271 = lshr exact i64 %270, 2
  %272 = trunc i64 %271 to i32
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %339, label %274

274:                                              ; preds = %256, %327
  %275 = phi i32 [ %337, %327 ], [ %272, %256 ]
  %276 = phi ptr [ %338, %327 ], [ %264, %256 ]
  %277 = icmp ult i32 %275, 8
  br i1 %277, label %278, label %327

278:                                              ; preds = %274
  switch i32 %275, label %327 [
    i32 7, label %279
    i32 6, label %285
    i32 5, label %292
    i32 4, label %299
    i32 3, label %306
    i32 2, label %313
    i32 1, label %320
  ]

279:                                              ; preds = %278
  %280 = load i32, ptr %276, align 4, !tbaa !47
  %281 = zext i32 %280 to i64
  %282 = icmp ugt i64 %258, %281
  br i1 %282, label %283, label %339

283:                                              ; preds = %279
  %284 = getelementptr inbounds i32, ptr %276, i64 1
  br label %285

285:                                              ; preds = %278, %283
  %286 = phi ptr [ %284, %283 ], [ %276, %278 ]
  %287 = load i32, ptr %286, align 4, !tbaa !47
  %288 = zext i32 %287 to i64
  %289 = icmp ugt i64 %258, %288
  br i1 %289, label %290, label %339

290:                                              ; preds = %285
  %291 = getelementptr inbounds i32, ptr %286, i64 1
  br label %292

292:                                              ; preds = %278, %290
  %293 = phi ptr [ %291, %290 ], [ %276, %278 ]
  %294 = load i32, ptr %293, align 4, !tbaa !47
  %295 = zext i32 %294 to i64
  %296 = icmp ugt i64 %258, %295
  br i1 %296, label %297, label %339

297:                                              ; preds = %292
  %298 = getelementptr inbounds i32, ptr %293, i64 1
  br label %299

299:                                              ; preds = %278, %297
  %300 = phi ptr [ %298, %297 ], [ %276, %278 ]
  %301 = load i32, ptr %300, align 4, !tbaa !47
  %302 = zext i32 %301 to i64
  %303 = icmp ugt i64 %258, %302
  br i1 %303, label %304, label %339

304:                                              ; preds = %299
  %305 = getelementptr inbounds i32, ptr %300, i64 1
  br label %306

306:                                              ; preds = %278, %304
  %307 = phi ptr [ %305, %304 ], [ %276, %278 ]
  %308 = load i32, ptr %307, align 4, !tbaa !47
  %309 = zext i32 %308 to i64
  %310 = icmp ugt i64 %258, %309
  br i1 %310, label %311, label %339

311:                                              ; preds = %306
  %312 = getelementptr inbounds i32, ptr %307, i64 1
  br label %313

313:                                              ; preds = %278, %311
  %314 = phi ptr [ %312, %311 ], [ %276, %278 ]
  %315 = load i32, ptr %314, align 4, !tbaa !47
  %316 = zext i32 %315 to i64
  %317 = icmp ugt i64 %258, %316
  br i1 %317, label %318, label %339

318:                                              ; preds = %313
  %319 = getelementptr inbounds i32, ptr %314, i64 1
  br label %320

320:                                              ; preds = %278, %318
  %321 = phi ptr [ %319, %318 ], [ %276, %278 ]
  %322 = load i32, ptr %321, align 4, !tbaa !47
  %323 = zext i32 %322 to i64
  %324 = icmp ugt i64 %258, %323
  %325 = zext i1 %324 to i64
  %326 = getelementptr inbounds i32, ptr %321, i64 %325
  br label %339

327:                                              ; preds = %278, %274
  %328 = lshr i32 %275, 1
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds i32, ptr %276, i64 %329
  %331 = load i32, ptr %330, align 4, !tbaa !47
  %332 = zext i32 %331 to i64
  %333 = icmp ugt i64 %258, %332
  %334 = getelementptr inbounds i32, ptr %330, i64 1
  %335 = xor i32 %328, -1
  %336 = add i32 %275, %335
  %337 = select i1 %333, i32 %336, i32 %328
  %338 = select i1 %333, ptr %334, ptr %276
  br label %274

339:                                              ; preds = %256, %279, %285, %292, %299, %306, %313, %320
  %340 = phi ptr [ %264, %256 ], [ %276, %279 ], [ %286, %285 ], [ %293, %292 ], [ %300, %299 ], [ %307, %306 ], [ %314, %313 ], [ %326, %320 ]
  %341 = ptrtoint ptr %340 to i64
  %342 = sub i64 %341, %33
  %343 = lshr exact i64 %342, 2
  %344 = trunc i64 %343 to i32
  %345 = trunc i64 %257 to i32
  %346 = add i32 %345, 1
  %347 = icmp ult i32 %346, %344
  br i1 %347, label %348, label %371

348:                                              ; preds = %339
  %349 = zext i32 %346 to i64
  %350 = xor i32 %345, -1
  %351 = add i32 %350, %344
  %352 = add i32 %344, -2
  %353 = and i32 %351, 1
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %366, label %355

355:                                              ; preds = %348
  %356 = getelementptr inbounds x86_fp80, ptr %35, i64 %349
  %357 = load x86_fp80, ptr %356, align 16, !tbaa !128
  %358 = getelementptr inbounds i32, ptr %32, i64 %349
  %359 = load i32, ptr %358, align 4, !tbaa !47
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds double, ptr %13, i64 %360
  %362 = load double, ptr %361, align 8, !tbaa !30
  %363 = fpext double %362 to x86_fp80
  %364 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %357, x86_fp80 %363, x86_fp80 0xK00000000000000000000)
  %365 = add nuw nsw i64 %349, 1
  br label %366

366:                                              ; preds = %355, %348
  %367 = phi x86_fp80 [ undef, %348 ], [ %364, %355 ]
  %368 = phi i64 [ %349, %348 ], [ %365, %355 ]
  %369 = phi x86_fp80 [ 0xK00000000000000000000, %348 ], [ %364, %355 ]
  %370 = icmp eq i32 %352, %345
  br i1 %370, label %371, label %385

371:                                              ; preds = %366, %385, %339
  %372 = phi x86_fp80 [ 0xK00000000000000000000, %339 ], [ %367, %366 ], [ %406, %385 ]
  %373 = fpext double %262 to x86_fp80
  %374 = fneg x86_fp80 %372
  %375 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %374, x86_fp80 %3, x86_fp80 %373)
  %376 = fptrunc x86_fp80 %375 to double
  %377 = getelementptr inbounds x86_fp80, ptr %35, i64 %257
  %378 = load x86_fp80, ptr %377, align 16, !tbaa !128
  %379 = fpext double %376 to x86_fp80
  %380 = fdiv x86_fp80 %379, %378
  %381 = fptrunc x86_fp80 %380 to double
  store double %381, ptr %260, align 8, !tbaa !30
  %382 = add nuw nsw i64 %258, 1
  %383 = getelementptr inbounds double, ptr %260, i64 1
  %384 = icmp eq i64 %382, %36
  br i1 %384, label %247, label %256

385:                                              ; preds = %366, %385
  %386 = phi i64 [ %407, %385 ], [ %368, %366 ]
  %387 = phi x86_fp80 [ %406, %385 ], [ %369, %366 ]
  %388 = getelementptr inbounds x86_fp80, ptr %35, i64 %386
  %389 = load x86_fp80, ptr %388, align 16, !tbaa !128
  %390 = getelementptr inbounds i32, ptr %32, i64 %386
  %391 = load i32, ptr %390, align 4, !tbaa !47
  %392 = zext i32 %391 to i64
  %393 = getelementptr inbounds double, ptr %13, i64 %392
  %394 = load double, ptr %393, align 8, !tbaa !30
  %395 = fpext double %394 to x86_fp80
  %396 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %389, x86_fp80 %395, x86_fp80 %387)
  %397 = add nuw nsw i64 %386, 1
  %398 = getelementptr inbounds x86_fp80, ptr %35, i64 %397
  %399 = load x86_fp80, ptr %398, align 16, !tbaa !128
  %400 = getelementptr inbounds i32, ptr %32, i64 %397
  %401 = load i32, ptr %400, align 4, !tbaa !47
  %402 = zext i32 %401 to i64
  %403 = getelementptr inbounds double, ptr %13, i64 %402
  %404 = load double, ptr %403, align 8, !tbaa !30
  %405 = fpext double %404 to x86_fp80
  %406 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %399, x86_fp80 %405, x86_fp80 %396)
  %407 = add nuw nsw i64 %386, 2
  %408 = trunc i64 %407 to i32
  %409 = icmp eq i32 %408, %344
  br i1 %409, label %371, label %385

410:                                              ; preds = %435, %248
  %411 = phi ptr [ %11, %248 ], [ %457, %435 ]
  %412 = phi ptr [ %13, %248 ], [ %458, %435 ]
  %413 = icmp eq i32 %252, 0
  br i1 %413, label %423, label %414

414:                                              ; preds = %410
  %415 = load i64, ptr %411, align 8, !tbaa !34
  %416 = getelementptr inbounds x86_fp80, ptr %251, i64 %415
  %417 = load x86_fp80, ptr %416, align 16, !tbaa !128
  %418 = fmul x86_fp80 %249, %417
  %419 = load double, ptr %412, align 8, !tbaa !30
  %420 = fpext double %419 to x86_fp80
  %421 = fmul x86_fp80 %418, %420
  %422 = fptrunc x86_fp80 %421 to double
  store double %422, ptr %412, align 8, !tbaa !30
  br label %423

423:                                              ; preds = %410, %414
  %424 = add i32 %7, -1
  %425 = icmp sgt i32 %424, -1
  br i1 %425, label %426, label %606

426:                                              ; preds = %423
  %427 = zext i32 %424 to i64
  %428 = getelementptr inbounds double, ptr %13, i64 %427
  %429 = getelementptr inbounds i64, ptr %11, i64 %427
  %430 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %431 = load ptr, ptr %430, align 8, !tbaa !46
  %432 = ptrtoint ptr %431 to i64
  %433 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %434 = load ptr, ptr %433, align 8
  br label %461

435:                                              ; preds = %435, %254
  %436 = phi ptr [ %11, %254 ], [ %457, %435 ]
  %437 = phi ptr [ %13, %254 ], [ %458, %435 ]
  %438 = phi i32 [ 0, %254 ], [ %459, %435 ]
  %439 = load i64, ptr %436, align 8, !tbaa !34
  %440 = getelementptr inbounds x86_fp80, ptr %251, i64 %439
  %441 = load x86_fp80, ptr %440, align 16, !tbaa !128
  %442 = fmul x86_fp80 %249, %441
  %443 = load double, ptr %437, align 8, !tbaa !30
  %444 = fpext double %443 to x86_fp80
  %445 = fmul x86_fp80 %442, %444
  %446 = fptrunc x86_fp80 %445 to double
  store double %446, ptr %437, align 8, !tbaa !30
  %447 = getelementptr inbounds i64, ptr %436, i64 1
  %448 = getelementptr inbounds double, ptr %437, i64 1
  %449 = load i64, ptr %447, align 8, !tbaa !34
  %450 = getelementptr inbounds x86_fp80, ptr %251, i64 %449
  %451 = load x86_fp80, ptr %450, align 16, !tbaa !128
  %452 = fmul x86_fp80 %249, %451
  %453 = load double, ptr %448, align 8, !tbaa !30
  %454 = fpext double %453 to x86_fp80
  %455 = fmul x86_fp80 %452, %454
  %456 = fptrunc x86_fp80 %455 to double
  store double %456, ptr %448, align 8, !tbaa !30
  %457 = getelementptr inbounds i64, ptr %436, i64 2
  %458 = getelementptr inbounds double, ptr %437, i64 2
  %459 = add i32 %438, 2
  %460 = icmp eq i32 %459, %255
  br i1 %460, label %410, label %435

461:                                              ; preds = %426, %566
  %462 = phi ptr [ %429, %426 ], [ %579, %566 ]
  %463 = phi ptr [ %428, %426 ], [ %580, %566 ]
  %464 = phi i32 [ %424, %426 ], [ %578, %566 ]
  %465 = getelementptr inbounds i64, ptr %462, i64 1
  %466 = load i64, ptr %465, align 8, !tbaa !34
  %467 = trunc i64 %466 to i32
  %468 = load i64, ptr %462, align 8, !tbaa !34
  %469 = add i64 %468, 1
  %470 = getelementptr inbounds i32, ptr %431, i64 %469
  %471 = and i64 %466, 4294967295
  %472 = getelementptr inbounds i32, ptr %431, i64 %471
  %473 = ptrtoint ptr %472 to i64
  %474 = ptrtoint ptr %470 to i64
  %475 = sub i64 %473, %474
  %476 = lshr exact i64 %475, 2
  %477 = trunc i64 %476 to i32
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %536, label %479

479:                                              ; preds = %461, %525
  %480 = phi i32 [ %534, %525 ], [ %477, %461 ]
  %481 = phi ptr [ %535, %525 ], [ %470, %461 ]
  %482 = icmp ult i32 %480, 8
  br i1 %482, label %483, label %525

483:                                              ; preds = %479
  switch i32 %480, label %525 [
    i32 7, label %484
    i32 6, label %489
    i32 5, label %495
    i32 4, label %501
    i32 3, label %507
    i32 2, label %513
    i32 1, label %519
  ]

484:                                              ; preds = %483
  %485 = load i32, ptr %481, align 4, !tbaa !47
  %486 = icmp ult i32 %485, %464
  br i1 %486, label %487, label %536

487:                                              ; preds = %484
  %488 = getelementptr inbounds i32, ptr %481, i64 1
  br label %489

489:                                              ; preds = %483, %487
  %490 = phi ptr [ %488, %487 ], [ %481, %483 ]
  %491 = load i32, ptr %490, align 4, !tbaa !47
  %492 = icmp ult i32 %491, %464
  br i1 %492, label %493, label %536

493:                                              ; preds = %489
  %494 = getelementptr inbounds i32, ptr %490, i64 1
  br label %495

495:                                              ; preds = %483, %493
  %496 = phi ptr [ %494, %493 ], [ %481, %483 ]
  %497 = load i32, ptr %496, align 4, !tbaa !47
  %498 = icmp ult i32 %497, %464
  br i1 %498, label %499, label %536

499:                                              ; preds = %495
  %500 = getelementptr inbounds i32, ptr %496, i64 1
  br label %501

501:                                              ; preds = %483, %499
  %502 = phi ptr [ %500, %499 ], [ %481, %483 ]
  %503 = load i32, ptr %502, align 4, !tbaa !47
  %504 = icmp ult i32 %503, %464
  br i1 %504, label %505, label %536

505:                                              ; preds = %501
  %506 = getelementptr inbounds i32, ptr %502, i64 1
  br label %507

507:                                              ; preds = %483, %505
  %508 = phi ptr [ %506, %505 ], [ %481, %483 ]
  %509 = load i32, ptr %508, align 4, !tbaa !47
  %510 = icmp ult i32 %509, %464
  br i1 %510, label %511, label %536

511:                                              ; preds = %507
  %512 = getelementptr inbounds i32, ptr %508, i64 1
  br label %513

513:                                              ; preds = %483, %511
  %514 = phi ptr [ %512, %511 ], [ %481, %483 ]
  %515 = load i32, ptr %514, align 4, !tbaa !47
  %516 = icmp ult i32 %515, %464
  br i1 %516, label %517, label %536

517:                                              ; preds = %513
  %518 = getelementptr inbounds i32, ptr %514, i64 1
  br label %519

519:                                              ; preds = %483, %517
  %520 = phi ptr [ %518, %517 ], [ %481, %483 ]
  %521 = load i32, ptr %520, align 4, !tbaa !47
  %522 = icmp ult i32 %521, %464
  %523 = zext i1 %522 to i64
  %524 = getelementptr inbounds i32, ptr %520, i64 %523
  br label %536

525:                                              ; preds = %483, %479
  %526 = lshr i32 %480, 1
  %527 = zext i32 %526 to i64
  %528 = getelementptr inbounds i32, ptr %481, i64 %527
  %529 = load i32, ptr %528, align 4, !tbaa !47
  %530 = icmp ult i32 %529, %464
  %531 = getelementptr inbounds i32, ptr %528, i64 1
  %532 = xor i32 %526, -1
  %533 = add i32 %480, %532
  %534 = select i1 %530, i32 %533, i32 %526
  %535 = select i1 %530, ptr %531, ptr %481
  br label %479

536:                                              ; preds = %461, %484, %489, %495, %501, %507, %513, %519
  %537 = phi ptr [ %470, %461 ], [ %481, %484 ], [ %490, %489 ], [ %496, %495 ], [ %502, %501 ], [ %508, %507 ], [ %514, %513 ], [ %524, %519 ]
  %538 = ptrtoint ptr %537 to i64
  %539 = sub i64 %538, %432
  %540 = lshr exact i64 %539, 2
  %541 = trunc i64 %540 to i32
  %542 = icmp ult i32 %541, %467
  br i1 %542, label %543, label %566

543:                                              ; preds = %536
  %544 = and i64 %540, 4294967295
  %545 = and i64 %466, 4294967295
  %546 = sub i64 %466, %540
  %547 = add nuw nsw i64 %544, 1
  %548 = and i64 %546, 1
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %561, label %550

550:                                              ; preds = %543
  %551 = getelementptr inbounds x86_fp80, ptr %434, i64 %544
  %552 = load x86_fp80, ptr %551, align 16, !tbaa !128
  %553 = getelementptr inbounds i32, ptr %431, i64 %544
  %554 = load i32, ptr %553, align 4, !tbaa !47
  %555 = zext i32 %554 to i64
  %556 = getelementptr inbounds double, ptr %13, i64 %555
  %557 = load double, ptr %556, align 8, !tbaa !30
  %558 = fpext double %557 to x86_fp80
  %559 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %552, x86_fp80 %558, x86_fp80 0xK00000000000000000000)
  %560 = add nuw nsw i64 %544, 1
  br label %561

561:                                              ; preds = %550, %543
  %562 = phi x86_fp80 [ undef, %543 ], [ %559, %550 ]
  %563 = phi i64 [ %544, %543 ], [ %560, %550 ]
  %564 = phi x86_fp80 [ 0xK00000000000000000000, %543 ], [ %559, %550 ]
  %565 = icmp eq i64 %471, %547
  br i1 %565, label %566, label %582

566:                                              ; preds = %561, %582, %536
  %567 = phi x86_fp80 [ 0xK00000000000000000000, %536 ], [ %562, %561 ], [ %603, %582 ]
  %568 = load double, ptr %463, align 8, !tbaa !30
  %569 = fpext double %568 to x86_fp80
  %570 = fneg x86_fp80 %567
  %571 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %570, x86_fp80 %3, x86_fp80 %569)
  %572 = fptrunc x86_fp80 %571 to double
  %573 = getelementptr inbounds x86_fp80, ptr %434, i64 %468
  %574 = load x86_fp80, ptr %573, align 16, !tbaa !128
  %575 = fpext double %572 to x86_fp80
  %576 = fdiv x86_fp80 %575, %574
  %577 = fptrunc x86_fp80 %576 to double
  store double %577, ptr %463, align 8, !tbaa !30
  %578 = add nsw i32 %464, -1
  %579 = getelementptr inbounds i64, ptr %462, i64 -1
  %580 = getelementptr inbounds double, ptr %463, i64 -1
  %581 = icmp sgt i32 %464, 0
  br i1 %581, label %461, label %606

582:                                              ; preds = %561, %582
  %583 = phi i64 [ %604, %582 ], [ %563, %561 ]
  %584 = phi x86_fp80 [ %603, %582 ], [ %564, %561 ]
  %585 = getelementptr inbounds x86_fp80, ptr %434, i64 %583
  %586 = load x86_fp80, ptr %585, align 16, !tbaa !128
  %587 = getelementptr inbounds i32, ptr %431, i64 %583
  %588 = load i32, ptr %587, align 4, !tbaa !47
  %589 = zext i32 %588 to i64
  %590 = getelementptr inbounds double, ptr %13, i64 %589
  %591 = load double, ptr %590, align 8, !tbaa !30
  %592 = fpext double %591 to x86_fp80
  %593 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %586, x86_fp80 %592, x86_fp80 %584)
  %594 = add nuw nsw i64 %583, 1
  %595 = getelementptr inbounds x86_fp80, ptr %434, i64 %594
  %596 = load x86_fp80, ptr %595, align 16, !tbaa !128
  %597 = getelementptr inbounds i32, ptr %431, i64 %594
  %598 = load i32, ptr %597, align 4, !tbaa !47
  %599 = zext i32 %598 to i64
  %600 = getelementptr inbounds double, ptr %13, i64 %599
  %601 = load double, ptr %600, align 8, !tbaa !30
  %602 = fpext double %601 to x86_fp80
  %603 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %596, x86_fp80 %602, x86_fp80 %593)
  %604 = add nuw nsw i64 %583, 2
  %605 = icmp eq i64 %604, %545
  br i1 %605, label %566, label %582

606:                                              ; preds = %206, %566, %27, %247, %19, %38, %136, %423
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE16precondition_SORIdEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %67, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !53
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !125
  %19 = zext i32 %9 to i64
  %20 = load i64, ptr %15, align 8, !tbaa !34
  br label %21

21:                                               ; preds = %35, %11
  %22 = phi i64 [ %20, %11 ], [ %28, %35 ]
  %23 = phi i64 [ 0, %11 ], [ %26, %35 ]
  %24 = getelementptr inbounds double, ptr %13, i64 %23
  %25 = load double, ptr %24, align 8, !tbaa !30
  %26 = add nuw nsw i64 %23, 1
  %27 = getelementptr inbounds i64, ptr %15, i64 %26
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = and i64 %22, 4294967295
  %30 = icmp ugt i64 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %21
  %32 = trunc i64 %22 to i32
  %33 = load ptr, ptr %16, align 8, !tbaa !46
  %34 = load ptr, ptr %17, align 8
  br label %44

35:                                               ; preds = %62, %21
  %36 = phi double [ %25, %21 ], [ %63, %62 ]
  %37 = fpext double %36 to x86_fp80
  %38 = fmul x86_fp80 %37, %3
  %39 = getelementptr inbounds x86_fp80, ptr %18, i64 %22
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !128
  %41 = fdiv x86_fp80 %38, %40
  %42 = fptrunc x86_fp80 %41 to double
  store double %42, ptr %24, align 8, !tbaa !30
  %43 = icmp eq i64 %26, %19
  br i1 %43, label %67, label %21

44:                                               ; preds = %62, %31
  %45 = phi i64 [ %29, %31 ], [ %65, %62 ]
  %46 = phi i32 [ %32, %31 ], [ %64, %62 ]
  %47 = phi double [ %25, %31 ], [ %63, %62 ]
  %48 = getelementptr inbounds i32, ptr %33, i64 %45
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = zext i32 %49 to i64
  %51 = icmp ugt i64 %23, %50
  br i1 %51, label %52, label %62

52:                                               ; preds = %44
  %53 = getelementptr inbounds x86_fp80, ptr %34, i64 %45
  %54 = load x86_fp80, ptr %53, align 16, !tbaa !128
  %55 = getelementptr inbounds double, ptr %13, i64 %50
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = fpext double %56 to x86_fp80
  %58 = fpext double %47 to x86_fp80
  %59 = fneg x86_fp80 %54
  %60 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %59, x86_fp80 %57, x86_fp80 %58)
  %61 = fptrunc x86_fp80 %60 to double
  br label %62

62:                                               ; preds = %52, %44
  %63 = phi double [ %61, %52 ], [ %47, %44 ]
  %64 = add i32 %46, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %28, %65
  br i1 %66, label %44, label %35

67:                                               ; preds = %35, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE3SORIdEEvRNS_6VectorIT_EEe(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, x86_fp80 noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !53
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !125
  %17 = zext i32 %7 to i64
  %18 = load i64, ptr %13, align 8, !tbaa !34
  br label %20

19:                                               ; preds = %34, %3
  ret void

20:                                               ; preds = %9, %34
  %21 = phi i64 [ %18, %9 ], [ %27, %34 ]
  %22 = phi i64 [ 0, %9 ], [ %25, %34 ]
  %23 = getelementptr inbounds double, ptr %11, i64 %22
  %24 = load double, ptr %23, align 8, !tbaa !30
  %25 = add nuw nsw i64 %22, 1
  %26 = getelementptr inbounds i64, ptr %13, i64 %25
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = and i64 %21, 4294967295
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %20
  %31 = trunc i64 %21 to i32
  %32 = load ptr, ptr %14, align 8, !tbaa !46
  %33 = load ptr, ptr %15, align 8
  br label %43

34:                                               ; preds = %61, %20
  %35 = phi double [ %24, %20 ], [ %62, %61 ]
  %36 = fpext double %35 to x86_fp80
  %37 = fmul x86_fp80 %36, %2
  %38 = getelementptr inbounds x86_fp80, ptr %16, i64 %21
  %39 = load x86_fp80, ptr %38, align 16, !tbaa !128
  %40 = fdiv x86_fp80 %37, %39
  %41 = fptrunc x86_fp80 %40 to double
  store double %41, ptr %23, align 8, !tbaa !30
  %42 = icmp eq i64 %25, %17
  br i1 %42, label %19, label %20

43:                                               ; preds = %30, %61
  %44 = phi i64 [ %28, %30 ], [ %64, %61 ]
  %45 = phi i32 [ %31, %30 ], [ %63, %61 ]
  %46 = phi double [ %24, %30 ], [ %62, %61 ]
  %47 = getelementptr inbounds i32, ptr %32, i64 %44
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %22, %49
  br i1 %50, label %51, label %61

51:                                               ; preds = %43
  %52 = getelementptr inbounds x86_fp80, ptr %33, i64 %44
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = getelementptr inbounds double, ptr %11, i64 %49
  %55 = load double, ptr %54, align 8, !tbaa !30
  %56 = fpext double %55 to x86_fp80
  %57 = fpext double %46 to x86_fp80
  %58 = fneg x86_fp80 %53
  %59 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %58, x86_fp80 %56, x86_fp80 %57)
  %60 = fptrunc x86_fp80 %59 to double
  br label %61

61:                                               ; preds = %51, %43
  %62 = phi double [ %60, %51 ], [ %46, %43 ]
  %63 = add i32 %45, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %27, %64
  br i1 %65, label %43, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE17precondition_TSORIdEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %69, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !53
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !125
  %19 = zext i32 %9 to i64
  br label %20

20:                                               ; preds = %37, %11
  %21 = phi i64 [ %19, %11 ], [ %22, %37 ]
  %22 = add nsw i64 %21, -1
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  %25 = getelementptr inbounds double, ptr %13, i64 %24
  %26 = load double, ptr %25, align 8, !tbaa !30
  %27 = getelementptr inbounds i64, ptr %15, i64 %24
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = getelementptr inbounds i64, ptr %15, i64 %21
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %28, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %20
  %34 = trunc i64 %28 to i32
  %35 = load ptr, ptr %16, align 8, !tbaa !46
  %36 = load ptr, ptr %17, align 8
  br label %46

37:                                               ; preds = %64, %20
  %38 = phi double [ %26, %20 ], [ %65, %64 ]
  %39 = fpext double %38 to x86_fp80
  %40 = fmul x86_fp80 %39, %3
  %41 = getelementptr inbounds x86_fp80, ptr %18, i64 %28
  %42 = load x86_fp80, ptr %41, align 16, !tbaa !128
  %43 = fdiv x86_fp80 %40, %42
  %44 = fptrunc x86_fp80 %43 to double
  store double %44, ptr %25, align 8, !tbaa !30
  %45 = icmp eq i32 %23, 0
  br i1 %45, label %69, label %20

46:                                               ; preds = %64, %33
  %47 = phi i64 [ %31, %33 ], [ %67, %64 ]
  %48 = phi i32 [ %34, %33 ], [ %66, %64 ]
  %49 = phi double [ %26, %33 ], [ %65, %64 ]
  %50 = getelementptr inbounds i32, ptr %35, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %23
  br i1 %52, label %53, label %64

53:                                               ; preds = %46
  %54 = getelementptr inbounds x86_fp80, ptr %36, i64 %47
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds double, ptr %13, i64 %56
  %58 = load double, ptr %57, align 8, !tbaa !30
  %59 = fpext double %58 to x86_fp80
  %60 = fpext double %49 to x86_fp80
  %61 = fneg x86_fp80 %55
  %62 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %61, x86_fp80 %59, x86_fp80 %60)
  %63 = fptrunc x86_fp80 %62 to double
  br label %64

64:                                               ; preds = %53, %46
  %65 = phi double [ %63, %53 ], [ %49, %46 ]
  %66 = add i32 %48, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %30, %67
  br i1 %68, label %46, label %37

69:                                               ; preds = %37, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE4TSORIdEEvRNS_6VectorIT_EEe(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, x86_fp80 noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !53
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !125
  %17 = zext i32 %7 to i64
  br label %19

18:                                               ; preds = %36, %3
  ret void

19:                                               ; preds = %9, %36
  %20 = phi i64 [ %17, %9 ], [ %21, %36 ]
  %21 = add nsw i64 %20, -1
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  %24 = getelementptr inbounds double, ptr %11, i64 %23
  %25 = load double, ptr %24, align 8, !tbaa !30
  %26 = getelementptr inbounds i64, ptr %13, i64 %23
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = getelementptr inbounds i64, ptr %13, i64 %20
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %27, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %19
  %33 = trunc i64 %27 to i32
  %34 = load ptr, ptr %14, align 8, !tbaa !46
  %35 = load ptr, ptr %15, align 8
  br label %45

36:                                               ; preds = %63, %19
  %37 = phi double [ %25, %19 ], [ %64, %63 ]
  %38 = fpext double %37 to x86_fp80
  %39 = fmul x86_fp80 %38, %2
  %40 = getelementptr inbounds x86_fp80, ptr %16, i64 %27
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %42 = fdiv x86_fp80 %39, %41
  %43 = fptrunc x86_fp80 %42 to double
  store double %43, ptr %24, align 8, !tbaa !30
  %44 = icmp eq i32 %22, 0
  br i1 %44, label %18, label %19

45:                                               ; preds = %32, %63
  %46 = phi i64 [ %30, %32 ], [ %66, %63 ]
  %47 = phi i32 [ %33, %32 ], [ %65, %63 ]
  %48 = phi double [ %25, %32 ], [ %64, %63 ]
  %49 = getelementptr inbounds i32, ptr %34, i64 %46
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %22
  br i1 %51, label %52, label %63

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %35, i64 %46
  %54 = load x86_fp80, ptr %53, align 16, !tbaa !128
  %55 = zext i32 %50 to i64
  %56 = getelementptr inbounds double, ptr %11, i64 %55
  %57 = load double, ptr %56, align 8, !tbaa !30
  %58 = fpext double %57 to x86_fp80
  %59 = fpext double %48 to x86_fp80
  %60 = fneg x86_fp80 %54
  %61 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %60, x86_fp80 %58, x86_fp80 %59)
  %62 = fptrunc x86_fp80 %61 to double
  br label %63

63:                                               ; preds = %45, %52
  %64 = phi double [ %62, %52 ], [ %48, %45 ]
  %65 = add i32 %47, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %29, %66
  br i1 %67, label %45, label %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE19precondition_JacobiIdEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !56
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !53
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !53
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !8
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %12, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = fcmp une x86_fp80 %3, 0xK3FFF8000000000000000
  %16 = icmp eq i32 %6, 0
  br i1 %15, label %25, label %17

17:                                               ; preds = %4
  br i1 %16, label %116, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !125
  %21 = and i32 %6, 1
  %22 = icmp eq i32 %6, 1
  br i1 %22, label %103, label %23

23:                                               ; preds = %18
  %24 = and i32 %6, -2
  br label %62

25:                                               ; preds = %4
  br i1 %16, label %116, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !125
  %29 = and i32 %6, 1
  %30 = icmp eq i32 %6, 1
  br i1 %30, label %89, label %31

31:                                               ; preds = %26
  %32 = and i32 %6, -2
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi ptr [ %14, %31 ], [ %59, %33 ]
  %35 = phi ptr [ %10, %31 ], [ %58, %33 ]
  %36 = phi ptr [ %8, %31 ], [ %57, %33 ]
  %37 = phi i32 [ 0, %31 ], [ %60, %33 ]
  %38 = load double, ptr %35, align 8, !tbaa !30
  %39 = fpext double %38 to x86_fp80
  %40 = fmul x86_fp80 %39, %3
  %41 = load i64, ptr %34, align 8, !tbaa !34
  %42 = getelementptr inbounds x86_fp80, ptr %28, i64 %41
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !128
  %44 = fdiv x86_fp80 %40, %43
  %45 = fptrunc x86_fp80 %44 to double
  store double %45, ptr %36, align 8, !tbaa !30
  %46 = getelementptr inbounds double, ptr %36, i64 1
  %47 = getelementptr inbounds double, ptr %35, i64 1
  %48 = getelementptr inbounds i64, ptr %34, i64 1
  %49 = load double, ptr %47, align 8, !tbaa !30
  %50 = fpext double %49 to x86_fp80
  %51 = fmul x86_fp80 %50, %3
  %52 = load i64, ptr %48, align 8, !tbaa !34
  %53 = getelementptr inbounds x86_fp80, ptr %28, i64 %52
  %54 = load x86_fp80, ptr %53, align 16, !tbaa !128
  %55 = fdiv x86_fp80 %51, %54
  %56 = fptrunc x86_fp80 %55 to double
  store double %56, ptr %46, align 8, !tbaa !30
  %57 = getelementptr inbounds double, ptr %36, i64 2
  %58 = getelementptr inbounds double, ptr %35, i64 2
  %59 = getelementptr inbounds i64, ptr %34, i64 2
  %60 = add i32 %37, 2
  %61 = icmp eq i32 %60, %32
  br i1 %61, label %89, label %33

62:                                               ; preds = %62, %23
  %63 = phi ptr [ %14, %23 ], [ %86, %62 ]
  %64 = phi ptr [ %10, %23 ], [ %85, %62 ]
  %65 = phi ptr [ %8, %23 ], [ %84, %62 ]
  %66 = phi i32 [ 0, %23 ], [ %87, %62 ]
  %67 = load double, ptr %64, align 8, !tbaa !30
  %68 = fpext double %67 to x86_fp80
  %69 = load i64, ptr %63, align 8, !tbaa !34
  %70 = getelementptr inbounds x86_fp80, ptr %20, i64 %69
  %71 = load x86_fp80, ptr %70, align 16, !tbaa !128
  %72 = fdiv x86_fp80 %68, %71
  %73 = fptrunc x86_fp80 %72 to double
  store double %73, ptr %65, align 8, !tbaa !30
  %74 = getelementptr inbounds double, ptr %65, i64 1
  %75 = getelementptr inbounds double, ptr %64, i64 1
  %76 = getelementptr inbounds i64, ptr %63, i64 1
  %77 = load double, ptr %75, align 8, !tbaa !30
  %78 = fpext double %77 to x86_fp80
  %79 = load i64, ptr %76, align 8, !tbaa !34
  %80 = getelementptr inbounds x86_fp80, ptr %20, i64 %79
  %81 = load x86_fp80, ptr %80, align 16, !tbaa !128
  %82 = fdiv x86_fp80 %78, %81
  %83 = fptrunc x86_fp80 %82 to double
  store double %83, ptr %74, align 8, !tbaa !30
  %84 = getelementptr inbounds double, ptr %65, i64 2
  %85 = getelementptr inbounds double, ptr %64, i64 2
  %86 = getelementptr inbounds i64, ptr %63, i64 2
  %87 = add i32 %66, 2
  %88 = icmp eq i32 %87, %24
  br i1 %88, label %103, label %62

89:                                               ; preds = %33, %26
  %90 = phi ptr [ %14, %26 ], [ %59, %33 ]
  %91 = phi ptr [ %10, %26 ], [ %58, %33 ]
  %92 = phi ptr [ %8, %26 ], [ %57, %33 ]
  %93 = icmp eq i32 %29, 0
  br i1 %93, label %116, label %94

94:                                               ; preds = %89
  %95 = load double, ptr %91, align 8, !tbaa !30
  %96 = fpext double %95 to x86_fp80
  %97 = fmul x86_fp80 %96, %3
  %98 = load i64, ptr %90, align 8, !tbaa !34
  %99 = getelementptr inbounds x86_fp80, ptr %28, i64 %98
  %100 = load x86_fp80, ptr %99, align 16, !tbaa !128
  %101 = fdiv x86_fp80 %97, %100
  %102 = fptrunc x86_fp80 %101 to double
  store double %102, ptr %92, align 8, !tbaa !30
  br label %116

103:                                              ; preds = %62, %18
  %104 = phi ptr [ %14, %18 ], [ %86, %62 ]
  %105 = phi ptr [ %10, %18 ], [ %85, %62 ]
  %106 = phi ptr [ %8, %18 ], [ %84, %62 ]
  %107 = icmp eq i32 %21, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %103
  %109 = load double, ptr %105, align 8, !tbaa !30
  %110 = fpext double %109 to x86_fp80
  %111 = load i64, ptr %104, align 8, !tbaa !34
  %112 = getelementptr inbounds x86_fp80, ptr %20, i64 %111
  %113 = load x86_fp80, ptr %112, align 16, !tbaa !128
  %114 = fdiv x86_fp80 %110, %113
  %115 = fptrunc x86_fp80 %114 to double
  store double %115, ptr %106, align 8, !tbaa !30
  br label %116

116:                                              ; preds = %108, %103, %94, %89, %17, %25
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE4SSORIdEEvRNS_6VectorIT_EEe(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, x86_fp80 noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %86, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = load ptr, ptr %13, align 8, !tbaa !125
  %17 = zext i32 %5 to i64
  %18 = load i64, ptr %11, align 8, !tbaa !34
  br label %33

19:                                               ; preds = %71
  %20 = add i32 %5, -1
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %22, label %86

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %24, i64 0, i32 8
  %26 = load ptr, ptr %25, align 8, !tbaa !32
  %27 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %24, i64 0, i32 9
  %28 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %30 = load ptr, ptr %28, align 8, !tbaa !125
  %31 = load ptr, ptr %29, align 8, !tbaa !53
  %32 = zext i32 %20 to i64
  br label %87

33:                                               ; preds = %7, %71
  %34 = phi i64 [ %18, %7 ], [ %38, %71 ]
  %35 = phi i64 [ 0, %7 ], [ %36, %71 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %11, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %71

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %12, align 8, !tbaa !46
  %44 = load ptr, ptr %13, align 8
  %45 = load ptr, ptr %14, align 8
  br label %46

46:                                               ; preds = %41, %66
  %47 = phi i64 [ %39, %41 ], [ %69, %66 ]
  %48 = phi i32 [ %42, %41 ], [ %68, %66 ]
  %49 = phi double [ 0.000000e+00, %41 ], [ %67, %66 ]
  %50 = getelementptr inbounds i32, ptr %43, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ne i32 %51, -1
  %53 = zext i32 %48 to i64
  %54 = icmp ugt i64 %35, %53
  %55 = and i1 %54, %52
  br i1 %55, label %56, label %66

56:                                               ; preds = %46
  %57 = getelementptr inbounds x86_fp80, ptr %44, i64 %47
  %58 = load x86_fp80, ptr %57, align 16, !tbaa !128
  %59 = zext i32 %51 to i64
  %60 = getelementptr inbounds double, ptr %45, i64 %59
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = fpext double %61 to x86_fp80
  %63 = fpext double %49 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %58, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to double
  br label %66

66:                                               ; preds = %56, %46
  %67 = phi double [ %65, %56 ], [ %49, %46 ]
  %68 = add i32 %48, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %38, %69
  br i1 %70, label %46, label %71

71:                                               ; preds = %66, %33
  %72 = phi double [ 0.000000e+00, %33 ], [ %67, %66 ]
  %73 = fpext double %72 to x86_fp80
  %74 = getelementptr inbounds double, ptr %15, i64 %35
  %75 = load double, ptr %74, align 8, !tbaa !30
  %76 = fpext double %75 to x86_fp80
  %77 = fneg x86_fp80 %73
  %78 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %77, x86_fp80 %2, x86_fp80 %76)
  %79 = fptrunc x86_fp80 %78 to double
  %80 = getelementptr inbounds x86_fp80, ptr %16, i64 %34
  %81 = load x86_fp80, ptr %80, align 16, !tbaa !128
  %82 = fpext double %79 to x86_fp80
  %83 = fdiv x86_fp80 %82, %81
  %84 = fptrunc x86_fp80 %83 to double
  store double %84, ptr %74, align 8, !tbaa !30
  %85 = icmp eq i64 %36, %17
  br i1 %85, label %19, label %33

86:                                               ; preds = %127, %3, %19
  ret void

87:                                               ; preds = %22, %127
  %88 = phi i64 [ %32, %22 ], [ %139, %127 ]
  %89 = phi i32 [ %5, %22 ], [ %141, %127 ]
  %90 = getelementptr inbounds i64, ptr %26, i64 %88
  %91 = load i64, ptr %90, align 8, !tbaa !34
  %92 = sext i32 %89 to i64
  %93 = getelementptr inbounds i64, ptr %26, i64 %92
  %94 = load i64, ptr %93, align 8, !tbaa !34
  %95 = and i64 %91, 4294967295
  %96 = icmp ugt i64 %94, %95
  br i1 %96, label %97, label %127

97:                                               ; preds = %87
  %98 = trunc i64 %91 to i32
  %99 = load ptr, ptr %27, align 8, !tbaa !46
  %100 = load ptr, ptr %28, align 8
  %101 = load ptr, ptr %29, align 8
  br label %102

102:                                              ; preds = %97, %122
  %103 = phi i64 [ %95, %97 ], [ %125, %122 ]
  %104 = phi i32 [ %98, %97 ], [ %124, %122 ]
  %105 = phi double [ 0.000000e+00, %97 ], [ %123, %122 ]
  %106 = getelementptr inbounds i32, ptr %99, i64 %103
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = icmp ne i32 %107, -1
  %109 = zext i32 %104 to i64
  %110 = icmp ult i64 %88, %109
  %111 = and i1 %110, %108
  br i1 %111, label %112, label %122

112:                                              ; preds = %102
  %113 = getelementptr inbounds x86_fp80, ptr %100, i64 %103
  %114 = load x86_fp80, ptr %113, align 16, !tbaa !128
  %115 = zext i32 %107 to i64
  %116 = getelementptr inbounds double, ptr %101, i64 %115
  %117 = load double, ptr %116, align 8, !tbaa !30
  %118 = fpext double %117 to x86_fp80
  %119 = fpext double %105 to x86_fp80
  %120 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %114, x86_fp80 %118, x86_fp80 %119)
  %121 = fptrunc x86_fp80 %120 to double
  br label %122

122:                                              ; preds = %112, %102
  %123 = phi double [ %121, %112 ], [ %105, %102 ]
  %124 = add i32 %104, 1
  %125 = zext i32 %124 to i64
  %126 = icmp ugt i64 %94, %125
  br i1 %126, label %102, label %127

127:                                              ; preds = %122, %87
  %128 = phi double [ 0.000000e+00, %87 ], [ %123, %122 ]
  %129 = fpext double %128 to x86_fp80
  %130 = fmul x86_fp80 %129, %2
  %131 = getelementptr inbounds x86_fp80, ptr %30, i64 %91
  %132 = load x86_fp80, ptr %131, align 16, !tbaa !128
  %133 = fdiv x86_fp80 %130, %132
  %134 = getelementptr inbounds double, ptr %31, i64 %88
  %135 = load double, ptr %134, align 8, !tbaa !30
  %136 = fpext double %135 to x86_fp80
  %137 = fsub x86_fp80 %136, %133
  %138 = fptrunc x86_fp80 %137 to double
  store double %138, ptr %134, align 8, !tbaa !30
  %139 = add nsw i64 %88, -1
  %140 = icmp sgt i64 %88, 0
  %141 = trunc i64 %88 to i32
  br i1 %140, label %87, label %86
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE4PSORIdEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, x86_fp80 noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !53
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !125
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %42, %5
  ret void

23:                                               ; preds = %11, %42
  %24 = phi i64 [ 0, %11 ], [ %50, %42 ]
  %25 = getelementptr inbounds i32, ptr %12, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !47
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds double, ptr %14, i64 %27
  %29 = load double, ptr %28, align 8, !tbaa !30
  %30 = getelementptr inbounds i64, ptr %16, i64 %27
  %31 = load i64, ptr %30, align 8, !tbaa !34
  %32 = add i32 %26, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i64, ptr %16, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %31, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %23
  %39 = trunc i64 %31 to i32
  %40 = load ptr, ptr %17, align 8, !tbaa !46
  %41 = load ptr, ptr %19, align 8
  br label %52

42:                                               ; preds = %73, %23
  %43 = phi double [ %29, %23 ], [ %74, %73 ]
  %44 = fpext double %43 to x86_fp80
  %45 = fmul x86_fp80 %44, %4
  %46 = getelementptr inbounds x86_fp80, ptr %20, i64 %31
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !128
  %48 = fdiv x86_fp80 %45, %47
  %49 = fptrunc x86_fp80 %48 to double
  store double %49, ptr %28, align 8, !tbaa !30
  %50 = add nuw nsw i64 %24, 1
  %51 = icmp eq i64 %50, %21
  br i1 %51, label %22, label %23

52:                                               ; preds = %38, %73
  %53 = phi i64 [ %36, %38 ], [ %76, %73 ]
  %54 = phi i32 [ %39, %38 ], [ %75, %73 ]
  %55 = phi double [ %29, %38 ], [ %74, %73 ]
  %56 = getelementptr inbounds i32, ptr %40, i64 %53
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %18, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %24, %61
  br i1 %62, label %63, label %73

63:                                               ; preds = %52
  %64 = getelementptr inbounds x86_fp80, ptr %41, i64 %53
  %65 = load x86_fp80, ptr %64, align 16, !tbaa !128
  %66 = getelementptr inbounds double, ptr %14, i64 %58
  %67 = load double, ptr %66, align 8, !tbaa !30
  %68 = fpext double %67 to x86_fp80
  %69 = fpext double %55 to x86_fp80
  %70 = fneg x86_fp80 %65
  %71 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %68, x86_fp80 %69)
  %72 = fptrunc x86_fp80 %71 to double
  br label %73

73:                                               ; preds = %63, %52
  %74 = phi double [ %72, %63 ], [ %55, %52 ]
  %75 = add i32 %54, 1
  %76 = zext i32 %75 to i64
  %77 = icmp ugt i64 %35, %76
  br i1 %77, label %52, label %42
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5TPSORIdEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, x86_fp80 noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !53
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !125
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %45, %5
  ret void

23:                                               ; preds = %11, %45
  %24 = phi i64 [ %21, %11 ], [ %25, %45 ]
  %25 = add nsw i64 %24, -1
  %26 = trunc i64 %25 to i32
  %27 = and i64 %25, 4294967295
  %28 = getelementptr inbounds i32, ptr %12, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !47
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds double, ptr %14, i64 %30
  %32 = load double, ptr %31, align 8, !tbaa !30
  %33 = getelementptr inbounds i64, ptr %16, i64 %30
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = add i32 %29, 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i64, ptr %16, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %23
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %17, align 8, !tbaa !46
  %44 = load ptr, ptr %19, align 8
  br label %54

45:                                               ; preds = %74, %23
  %46 = phi double [ %32, %23 ], [ %75, %74 ]
  %47 = fpext double %46 to x86_fp80
  %48 = fmul x86_fp80 %47, %4
  %49 = getelementptr inbounds x86_fp80, ptr %20, i64 %34
  %50 = load x86_fp80, ptr %49, align 16, !tbaa !128
  %51 = fdiv x86_fp80 %48, %50
  %52 = fptrunc x86_fp80 %51 to double
  store double %52, ptr %31, align 8, !tbaa !30
  %53 = icmp eq i32 %26, 0
  br i1 %53, label %22, label %23

54:                                               ; preds = %41, %74
  %55 = phi i64 [ %39, %41 ], [ %77, %74 ]
  %56 = phi i32 [ %42, %41 ], [ %76, %74 ]
  %57 = phi double [ %32, %41 ], [ %75, %74 ]
  %58 = getelementptr inbounds i32, ptr %43, i64 %55
  %59 = load i32, ptr %58, align 4, !tbaa !47
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i32, ptr %18, i64 %60
  %62 = load i32, ptr %61, align 4, !tbaa !47
  %63 = icmp ugt i32 %62, %26
  br i1 %63, label %64, label %74

64:                                               ; preds = %54
  %65 = getelementptr inbounds x86_fp80, ptr %44, i64 %55
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  %67 = getelementptr inbounds double, ptr %14, i64 %60
  %68 = load double, ptr %67, align 8, !tbaa !30
  %69 = fpext double %68 to x86_fp80
  %70 = fpext double %57 to x86_fp80
  %71 = fneg x86_fp80 %66
  %72 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %71, x86_fp80 %69, x86_fp80 %70)
  %73 = fptrunc x86_fp80 %72 to double
  br label %74

74:                                               ; preds = %64, %54
  %75 = phi double [ %73, %64 ], [ %57, %54 ]
  %76 = add i32 %56, 1
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %38, %77
  br i1 %78, label %54, label %45
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE8SOR_stepIdEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !53
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %8 to i64
  %21 = load i64, ptr %14, align 8, !tbaa !34
  br label %23

22:                                               ; preds = %36, %4
  ret void

23:                                               ; preds = %10, %36
  %24 = phi i64 [ %21, %10 ], [ %30, %36 ]
  %25 = phi i64 [ 0, %10 ], [ %28, %36 ]
  %26 = getelementptr inbounds double, ptr %12, i64 %25
  %27 = load double, ptr %26, align 8, !tbaa !30
  %28 = add nuw nsw i64 %25, 1
  %29 = getelementptr inbounds i64, ptr %14, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %24, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = trunc i64 %24 to i32
  %35 = load ptr, ptr %17, align 8, !tbaa !46
  br label %49

36:                                               ; preds = %49, %23
  %37 = phi double [ %27, %23 ], [ %64, %49 ]
  %38 = fpext double %37 to x86_fp80
  %39 = fmul x86_fp80 %38, %3
  %40 = getelementptr inbounds x86_fp80, ptr %16, i64 %24
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %42 = fdiv x86_fp80 %39, %41
  %43 = getelementptr inbounds double, ptr %19, i64 %25
  %44 = load double, ptr %43, align 8, !tbaa !30
  %45 = fpext double %44 to x86_fp80
  %46 = fadd x86_fp80 %42, %45
  %47 = fptrunc x86_fp80 %46 to double
  store double %47, ptr %43, align 8, !tbaa !30
  %48 = icmp eq i64 %28, %20
  br i1 %48, label %22, label %23

49:                                               ; preds = %33, %49
  %50 = phi i64 [ %31, %33 ], [ %66, %49 ]
  %51 = phi i32 [ %34, %33 ], [ %65, %49 ]
  %52 = phi double [ %27, %33 ], [ %64, %49 ]
  %53 = getelementptr inbounds x86_fp80, ptr %16, i64 %50
  %54 = load x86_fp80, ptr %53, align 16, !tbaa !128
  %55 = getelementptr inbounds i32, ptr %35, i64 %50
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds double, ptr %19, i64 %57
  %59 = load double, ptr %58, align 8, !tbaa !30
  %60 = fpext double %59 to x86_fp80
  %61 = fpext double %52 to x86_fp80
  %62 = fneg x86_fp80 %54
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %62, x86_fp80 %60, x86_fp80 %61)
  %64 = fptrunc x86_fp80 %63 to double
  %65 = add i32 %51, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %30, %66
  br i1 %67, label %49, label %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9TSOR_stepIdEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = add i32 %8, -1
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %22

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !53
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %19 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %38, %4
  ret void

23:                                               ; preds = %11, %38
  %24 = phi i64 [ %21, %11 ], [ %50, %38 ]
  %25 = phi i32 [ %8, %11 ], [ %52, %38 ]
  %26 = getelementptr inbounds double, ptr %13, i64 %24
  %27 = load double, ptr %26, align 8, !tbaa !30
  %28 = getelementptr inbounds i64, ptr %15, i64 %24
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = sext i32 %25 to i64
  %31 = getelementptr inbounds i64, ptr %15, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = and i64 %29, 4294967295
  %34 = icmp ugt i64 %32, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %23
  %36 = trunc i64 %29 to i32
  %37 = load ptr, ptr %18, align 8, !tbaa !46
  br label %53

38:                                               ; preds = %53, %23
  %39 = phi double [ %27, %23 ], [ %68, %53 ]
  %40 = fpext double %39 to x86_fp80
  %41 = fmul x86_fp80 %40, %3
  %42 = getelementptr inbounds x86_fp80, ptr %17, i64 %29
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !128
  %44 = fdiv x86_fp80 %41, %43
  %45 = getelementptr inbounds double, ptr %20, i64 %24
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = fpext double %46 to x86_fp80
  %48 = fadd x86_fp80 %44, %47
  %49 = fptrunc x86_fp80 %48 to double
  store double %49, ptr %45, align 8, !tbaa !30
  %50 = add nsw i64 %24, -1
  %51 = icmp sgt i64 %24, 0
  %52 = trunc i64 %24 to i32
  br i1 %51, label %23, label %22

53:                                               ; preds = %35, %53
  %54 = phi i64 [ %33, %35 ], [ %70, %53 ]
  %55 = phi i32 [ %36, %35 ], [ %69, %53 ]
  %56 = phi double [ %27, %35 ], [ %68, %53 ]
  %57 = getelementptr inbounds x86_fp80, ptr %17, i64 %54
  %58 = load x86_fp80, ptr %57, align 16, !tbaa !128
  %59 = getelementptr inbounds i32, ptr %37, i64 %54
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds double, ptr %20, i64 %61
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = fpext double %63 to x86_fp80
  %65 = fpext double %56 to x86_fp80
  %66 = fneg x86_fp80 %58
  %67 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %64, x86_fp80 %65)
  %68 = fptrunc x86_fp80 %67 to double
  %69 = add i32 %55, 1
  %70 = zext i32 %69 to i64
  %71 = icmp ugt i64 %32, %70
  br i1 %71, label %53, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9SSOR_stepIdEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %123, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !53
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %8 to i64
  %21 = load i64, ptr %14, align 8, !tbaa !34
  br label %22

22:                                               ; preds = %35, %10
  %23 = phi i64 [ %21, %10 ], [ %29, %35 ]
  %24 = phi i64 [ 0, %10 ], [ %27, %35 ]
  %25 = getelementptr inbounds double, ptr %12, i64 %24
  %26 = load double, ptr %25, align 8, !tbaa !30
  %27 = add nuw nsw i64 %24, 1
  %28 = getelementptr inbounds i64, ptr %14, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %23, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %22
  %33 = trunc i64 %23 to i32
  %34 = load ptr, ptr %17, align 8, !tbaa !46
  br label %48

35:                                               ; preds = %48, %22
  %36 = phi double [ %26, %22 ], [ %63, %48 ]
  %37 = fpext double %36 to x86_fp80
  %38 = fmul x86_fp80 %37, %3
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %23
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !128
  %41 = fdiv x86_fp80 %38, %40
  %42 = getelementptr inbounds double, ptr %19, i64 %24
  %43 = load double, ptr %42, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = fadd x86_fp80 %41, %44
  %46 = fptrunc x86_fp80 %45 to double
  store double %46, ptr %42, align 8, !tbaa !30
  %47 = icmp eq i64 %27, %20
  br i1 %47, label %67, label %22

48:                                               ; preds = %48, %32
  %49 = phi i64 [ %30, %32 ], [ %65, %48 ]
  %50 = phi i32 [ %33, %32 ], [ %64, %48 ]
  %51 = phi double [ %26, %32 ], [ %63, %48 ]
  %52 = getelementptr inbounds x86_fp80, ptr %16, i64 %49
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = getelementptr inbounds i32, ptr %34, i64 %49
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds double, ptr %19, i64 %56
  %58 = load double, ptr %57, align 8, !tbaa !30
  %59 = fpext double %58 to x86_fp80
  %60 = fpext double %51 to x86_fp80
  %61 = fneg x86_fp80 %53
  %62 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %61, x86_fp80 %59, x86_fp80 %60)
  %63 = fptrunc x86_fp80 %62 to double
  %64 = add i32 %50, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %29, %65
  br i1 %66, label %48, label %35

67:                                               ; preds = %35
  %68 = add i32 %8, -1
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %70, label %123

70:                                               ; preds = %67
  %71 = load ptr, ptr %15, align 8
  %72 = load ptr, ptr %18, align 8
  %73 = zext i32 %68 to i64
  br label %74

74:                                               ; preds = %89, %70
  %75 = phi i64 [ %73, %70 ], [ %101, %89 ]
  %76 = phi i32 [ %8, %70 ], [ %103, %89 ]
  %77 = getelementptr inbounds double, ptr %12, i64 %75
  %78 = load double, ptr %77, align 8, !tbaa !30
  %79 = getelementptr inbounds i64, ptr %14, i64 %75
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = sext i32 %76 to i64
  %82 = getelementptr inbounds i64, ptr %14, i64 %81
  %83 = load i64, ptr %82, align 8, !tbaa !34
  %84 = and i64 %80, 4294967295
  %85 = icmp ugt i64 %83, %84
  br i1 %85, label %86, label %89

86:                                               ; preds = %74
  %87 = trunc i64 %80 to i32
  %88 = load ptr, ptr %17, align 8, !tbaa !46
  br label %104

89:                                               ; preds = %104, %74
  %90 = phi double [ %78, %74 ], [ %119, %104 ]
  %91 = fpext double %90 to x86_fp80
  %92 = fmul x86_fp80 %91, %3
  %93 = getelementptr inbounds x86_fp80, ptr %71, i64 %80
  %94 = load x86_fp80, ptr %93, align 16, !tbaa !128
  %95 = fdiv x86_fp80 %92, %94
  %96 = getelementptr inbounds double, ptr %72, i64 %75
  %97 = load double, ptr %96, align 8, !tbaa !30
  %98 = fpext double %97 to x86_fp80
  %99 = fadd x86_fp80 %95, %98
  %100 = fptrunc x86_fp80 %99 to double
  store double %100, ptr %96, align 8, !tbaa !30
  %101 = add nsw i64 %75, -1
  %102 = icmp sgt i64 %75, 0
  %103 = trunc i64 %75 to i32
  br i1 %102, label %74, label %123

104:                                              ; preds = %104, %86
  %105 = phi i64 [ %84, %86 ], [ %121, %104 ]
  %106 = phi i32 [ %87, %86 ], [ %120, %104 ]
  %107 = phi double [ %78, %86 ], [ %119, %104 ]
  %108 = getelementptr inbounds x86_fp80, ptr %71, i64 %105
  %109 = load x86_fp80, ptr %108, align 16, !tbaa !128
  %110 = getelementptr inbounds i32, ptr %88, i64 %105
  %111 = load i32, ptr %110, align 4, !tbaa !47
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds double, ptr %72, i64 %112
  %114 = load double, ptr %113, align 8, !tbaa !30
  %115 = fpext double %114 to x86_fp80
  %116 = fpext double %107 to x86_fp80
  %117 = fneg x86_fp80 %109
  %118 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %117, x86_fp80 %115, x86_fp80 %116)
  %119 = fptrunc x86_fp80 %118 to double
  %120 = add i32 %106, 1
  %121 = zext i32 %120 to i64
  %122 = icmp ugt i64 %83, %121
  br i1 %122, label %104, label %89

123:                                              ; preds = %89, %4, %67
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIeE18matrix_norm_squareIfEET_RKNS_6VectorIS3_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !125
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 9
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = load i64, ptr %10, align 8, !tbaa !34
  %16 = getelementptr inbounds i32, ptr %14, i64 %15
  %17 = getelementptr inbounds x86_fp80, ptr %8, i64 %15
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %6 to i64
  br label %23

21:                                               ; preds = %49, %2
  %22 = phi float [ 0.000000e+00, %2 ], [ %55, %49 ]
  ret float %22

23:                                               ; preds = %12, %49
  %24 = phi i64 [ 0, %12 ], [ %28, %49 ]
  %25 = phi float [ 0.000000e+00, %12 ], [ %55, %49 ]
  %26 = phi ptr [ %16, %12 ], [ %52, %49 ]
  %27 = phi ptr [ %17, %12 ], [ %51, %49 ]
  %28 = add nuw nsw i64 %24, 1
  %29 = getelementptr inbounds i64, ptr %10, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = getelementptr inbounds x86_fp80, ptr %8, i64 %30
  %32 = icmp eq ptr %27, %31
  br i1 %32, label %49, label %33

33:                                               ; preds = %23, %33
  %34 = phi ptr [ %39, %33 ], [ %26, %23 ]
  %35 = phi ptr [ %37, %33 ], [ %27, %23 ]
  %36 = phi float [ %47, %33 ], [ 0.000000e+00, %23 ]
  %37 = getelementptr inbounds x86_fp80, ptr %35, i64 1
  %38 = load x86_fp80, ptr %35, align 16, !tbaa !128
  %39 = getelementptr inbounds i32, ptr %34, i64 1
  %40 = load i32, ptr %34, align 4, !tbaa !47
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds float, ptr %19, i64 %41
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = fpext float %36 to x86_fp80
  %46 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %38, x86_fp80 %44, x86_fp80 %45)
  %47 = fptrunc x86_fp80 %46 to float
  %48 = icmp eq ptr %37, %31
  br i1 %48, label %49, label %33

49:                                               ; preds = %33, %23
  %50 = phi float [ 0.000000e+00, %23 ], [ %47, %33 ]
  %51 = phi ptr [ %27, %23 ], [ %31, %33 ]
  %52 = phi ptr [ %26, %23 ], [ %39, %33 ]
  %53 = getelementptr inbounds float, ptr %19, i64 %24
  %54 = load float, ptr %53, align 4, !tbaa !95
  %55 = tail call float @llvm.fmuladd.f32(float %54, float %50, float %25)
  %56 = icmp eq i64 %28, %20
  br i1 %56, label %21, label %23
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIeE21matrix_scalar_productIfEET_RKNS_6VectorIS3_EES7_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = load i64, ptr %11, align 8, !tbaa !34
  %17 = getelementptr inbounds i32, ptr %15, i64 %16
  %18 = getelementptr inbounds x86_fp80, ptr %9, i64 %16
  %19 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !106
  %23 = zext i32 %7 to i64
  br label %26

24:                                               ; preds = %52, %3
  %25 = phi float [ 0.000000e+00, %3 ], [ %58, %52 ]
  ret float %25

26:                                               ; preds = %13, %52
  %27 = phi i64 [ 0, %13 ], [ %31, %52 ]
  %28 = phi float [ 0.000000e+00, %13 ], [ %58, %52 ]
  %29 = phi ptr [ %17, %13 ], [ %55, %52 ]
  %30 = phi ptr [ %18, %13 ], [ %54, %52 ]
  %31 = add nuw nsw i64 %27, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = getelementptr inbounds x86_fp80, ptr %9, i64 %33
  %35 = icmp eq ptr %30, %34
  br i1 %35, label %52, label %36

36:                                               ; preds = %26, %36
  %37 = phi ptr [ %42, %36 ], [ %29, %26 ]
  %38 = phi ptr [ %40, %36 ], [ %30, %26 ]
  %39 = phi float [ %50, %36 ], [ 0.000000e+00, %26 ]
  %40 = getelementptr inbounds x86_fp80, ptr %38, i64 1
  %41 = load x86_fp80, ptr %38, align 16, !tbaa !128
  %42 = getelementptr inbounds i32, ptr %37, i64 1
  %43 = load i32, ptr %37, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds float, ptr %20, i64 %44
  %46 = load float, ptr %45, align 4, !tbaa !95
  %47 = fpext float %46 to x86_fp80
  %48 = fpext float %39 to x86_fp80
  %49 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %47, x86_fp80 %48)
  %50 = fptrunc x86_fp80 %49 to float
  %51 = icmp eq ptr %40, %34
  br i1 %51, label %52, label %36

52:                                               ; preds = %36, %26
  %53 = phi float [ 0.000000e+00, %26 ], [ %50, %36 ]
  %54 = phi ptr [ %30, %26 ], [ %34, %36 ]
  %55 = phi ptr [ %29, %26 ], [ %42, %36 ]
  %56 = getelementptr inbounds float, ptr %22, i64 %27
  %57 = load float, ptr %56, align 4, !tbaa !95
  %58 = tail call float @llvm.fmuladd.f32(float %57, float %53, float %28)
  %59 = icmp eq i64 %31, %23
  br i1 %59, label %24, label %26
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef float @_ZNK6dealii12SparseMatrixIeE8residualIfEET_RNS_6VectorIS3_EERKS5_S8_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.20", ptr %3, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !106
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !106
  %22 = zext i32 %8 to i64
  %23 = load i64, ptr %14, align 8, !tbaa !34
  br label %27

24:                                               ; preds = %41, %4
  %25 = phi float [ 0.000000e+00, %4 ], [ %44, %41 ]
  %26 = tail call float @sqrtf(float noundef %25) #17
  ret float %26

27:                                               ; preds = %10, %41
  %28 = phi i64 [ %23, %10 ], [ %35, %41 ]
  %29 = phi i64 [ 0, %10 ], [ %33, %41 ]
  %30 = phi float [ 0.000000e+00, %10 ], [ %44, %41 ]
  %31 = getelementptr inbounds float, ptr %12, i64 %29
  %32 = load float, ptr %31, align 4, !tbaa !95
  %33 = add nuw nsw i64 %29, 1
  %34 = getelementptr inbounds i64, ptr %14, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %28, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %27
  %39 = trunc i64 %28 to i32
  %40 = load ptr, ptr %15, align 8, !tbaa !46
  br label %46

41:                                               ; preds = %46, %27
  %42 = phi float [ %32, %27 ], [ %61, %46 ]
  %43 = getelementptr inbounds float, ptr %21, i64 %29
  store float %42, ptr %43, align 4, !tbaa !95
  %44 = tail call float @llvm.fmuladd.f32(float %42, float %42, float %30)
  %45 = icmp eq i64 %33, %22
  br i1 %45, label %24, label %27

46:                                               ; preds = %38, %46
  %47 = phi i64 [ %36, %38 ], [ %63, %46 ]
  %48 = phi i32 [ %39, %38 ], [ %62, %46 ]
  %49 = phi float [ %32, %38 ], [ %61, %46 ]
  %50 = getelementptr inbounds i32, ptr %40, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = getelementptr inbounds x86_fp80, ptr %17, i64 %47
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds float, ptr %19, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fpext float %56 to x86_fp80
  %58 = fpext float %49 to x86_fp80
  %59 = fneg x86_fp80 %53
  %60 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %59, x86_fp80 %57, x86_fp80 %58)
  %61 = fptrunc x86_fp80 %60 to float
  %62 = add i32 %48, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %35, %63
  br i1 %64, label %46, label %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE17precondition_SSORIfEEvRNS_6VectorIT_EERKS5_eRKSt6vectorIjSaIjEE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !109
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !106
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !195
  %16 = load ptr, ptr %4, align 8, !tbaa !197
  %17 = icmp eq ptr %15, %16
  %18 = icmp eq i32 %7, 0
  br i1 %17, label %27, label %19

19:                                               ; preds = %5
  br i1 %18, label %606, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !106
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %26 = zext i32 %7 to i64
  br label %47

27:                                               ; preds = %5
  br i1 %18, label %606, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !106
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = ptrtoint ptr %32 to i64
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %7 to i64
  %37 = load i64, ptr %11, align 8, !tbaa !34
  br label %256

38:                                               ; preds = %83
  br i1 %18, label %606, label %39

39:                                               ; preds = %38
  %40 = fsub x86_fp80 0xK40008000000000000000, %3
  %41 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !125
  %43 = and i32 %7, 1
  %44 = icmp eq i32 %7, 1
  br i1 %44, label %123, label %45

45:                                               ; preds = %39
  %46 = and i32 %7, -2
  br label %146

47:                                               ; preds = %20, %83
  %48 = phi i64 [ 0, %20 ], [ %94, %83 ]
  %49 = phi ptr [ %11, %20 ], [ %96, %83 ]
  %50 = phi ptr [ %13, %20 ], [ %95, %83 ]
  %51 = getelementptr inbounds float, ptr %22, i64 %48
  %52 = load float, ptr %51, align 4, !tbaa !95
  store float %52, ptr %50, align 4, !tbaa !95
  %53 = getelementptr inbounds i32, ptr %16, i64 %48
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = load i64, ptr %49, align 8, !tbaa !34
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, 1
  %58 = icmp ult i32 %57, %54
  br i1 %58, label %59, label %83

59:                                               ; preds = %47
  %60 = load ptr, ptr %25, align 8, !tbaa !46
  %61 = zext i32 %57 to i64
  %62 = xor i32 %56, -1
  %63 = add i32 %54, %62
  %64 = add i32 %54, -2
  %65 = and i32 %63, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %78, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds x86_fp80, ptr %24, i64 %61
  %69 = load x86_fp80, ptr %68, align 16, !tbaa !128
  %70 = getelementptr inbounds i32, ptr %60, i64 %61
  %71 = load i32, ptr %70, align 4, !tbaa !47
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds float, ptr %13, i64 %72
  %74 = load float, ptr %73, align 4, !tbaa !95
  %75 = fpext float %74 to x86_fp80
  %76 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %75, x86_fp80 0xK00000000000000000000)
  %77 = add nuw nsw i64 %61, 1
  br label %78

78:                                               ; preds = %67, %59
  %79 = phi x86_fp80 [ undef, %59 ], [ %76, %67 ]
  %80 = phi i64 [ %61, %59 ], [ %77, %67 ]
  %81 = phi x86_fp80 [ 0xK00000000000000000000, %59 ], [ %76, %67 ]
  %82 = icmp eq i32 %64, %56
  br i1 %82, label %83, label %98

83:                                               ; preds = %78, %98, %47
  %84 = phi x86_fp80 [ 0xK00000000000000000000, %47 ], [ %79, %78 ], [ %119, %98 ]
  %85 = fpext float %52 to x86_fp80
  %86 = fneg x86_fp80 %84
  %87 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %86, x86_fp80 %3, x86_fp80 %85)
  %88 = fptrunc x86_fp80 %87 to float
  %89 = getelementptr inbounds x86_fp80, ptr %24, i64 %55
  %90 = load x86_fp80, ptr %89, align 16, !tbaa !128
  %91 = fpext float %88 to x86_fp80
  %92 = fdiv x86_fp80 %91, %90
  %93 = fptrunc x86_fp80 %92 to float
  store float %93, ptr %50, align 4, !tbaa !95
  %94 = add nuw nsw i64 %48, 1
  %95 = getelementptr inbounds float, ptr %50, i64 1
  %96 = getelementptr inbounds i64, ptr %49, i64 1
  %97 = icmp eq i64 %94, %26
  br i1 %97, label %38, label %47

98:                                               ; preds = %78, %98
  %99 = phi i64 [ %120, %98 ], [ %80, %78 ]
  %100 = phi x86_fp80 [ %119, %98 ], [ %81, %78 ]
  %101 = getelementptr inbounds x86_fp80, ptr %24, i64 %99
  %102 = load x86_fp80, ptr %101, align 16, !tbaa !128
  %103 = getelementptr inbounds i32, ptr %60, i64 %99
  %104 = load i32, ptr %103, align 4, !tbaa !47
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds float, ptr %13, i64 %105
  %107 = load float, ptr %106, align 4, !tbaa !95
  %108 = fpext float %107 to x86_fp80
  %109 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %102, x86_fp80 %108, x86_fp80 %100)
  %110 = add nuw nsw i64 %99, 1
  %111 = getelementptr inbounds x86_fp80, ptr %24, i64 %110
  %112 = load x86_fp80, ptr %111, align 16, !tbaa !128
  %113 = getelementptr inbounds i32, ptr %60, i64 %110
  %114 = load i32, ptr %113, align 4, !tbaa !47
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds float, ptr %13, i64 %115
  %117 = load float, ptr %116, align 4, !tbaa !95
  %118 = fpext float %117 to x86_fp80
  %119 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %112, x86_fp80 %118, x86_fp80 %109)
  %120 = add nuw nsw i64 %99, 2
  %121 = trunc i64 %120 to i32
  %122 = icmp eq i32 %54, %121
  br i1 %122, label %83, label %98

123:                                              ; preds = %146, %39
  %124 = phi ptr [ %11, %39 ], [ %168, %146 ]
  %125 = phi ptr [ %13, %39 ], [ %169, %146 ]
  %126 = icmp eq i32 %43, 0
  br i1 %126, label %136, label %127

127:                                              ; preds = %123
  %128 = load i64, ptr %124, align 8, !tbaa !34
  %129 = getelementptr inbounds x86_fp80, ptr %42, i64 %128
  %130 = load x86_fp80, ptr %129, align 16, !tbaa !128
  %131 = fmul x86_fp80 %40, %130
  %132 = load float, ptr %125, align 4, !tbaa !95
  %133 = fpext float %132 to x86_fp80
  %134 = fmul x86_fp80 %131, %133
  %135 = fptrunc x86_fp80 %134 to float
  store float %135, ptr %125, align 4, !tbaa !95
  br label %136

136:                                              ; preds = %123, %127
  %137 = add i32 %7, -1
  %138 = icmp sgt i32 %137, -1
  br i1 %138, label %139, label %606

139:                                              ; preds = %136
  %140 = zext i32 %137 to i64
  %141 = getelementptr inbounds float, ptr %13, i64 %140
  %142 = getelementptr inbounds i64, ptr %11, i64 %140
  %143 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %144 = load ptr, ptr %143, align 8
  %145 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  br label %172

146:                                              ; preds = %146, %45
  %147 = phi ptr [ %11, %45 ], [ %168, %146 ]
  %148 = phi ptr [ %13, %45 ], [ %169, %146 ]
  %149 = phi i32 [ 0, %45 ], [ %170, %146 ]
  %150 = load i64, ptr %147, align 8, !tbaa !34
  %151 = getelementptr inbounds x86_fp80, ptr %42, i64 %150
  %152 = load x86_fp80, ptr %151, align 16, !tbaa !128
  %153 = fmul x86_fp80 %40, %152
  %154 = load float, ptr %148, align 4, !tbaa !95
  %155 = fpext float %154 to x86_fp80
  %156 = fmul x86_fp80 %153, %155
  %157 = fptrunc x86_fp80 %156 to float
  store float %157, ptr %148, align 4, !tbaa !95
  %158 = getelementptr inbounds i64, ptr %147, i64 1
  %159 = getelementptr inbounds float, ptr %148, i64 1
  %160 = load i64, ptr %158, align 8, !tbaa !34
  %161 = getelementptr inbounds x86_fp80, ptr %42, i64 %160
  %162 = load x86_fp80, ptr %161, align 16, !tbaa !128
  %163 = fmul x86_fp80 %40, %162
  %164 = load float, ptr %159, align 4, !tbaa !95
  %165 = fpext float %164 to x86_fp80
  %166 = fmul x86_fp80 %163, %165
  %167 = fptrunc x86_fp80 %166 to float
  store float %167, ptr %159, align 4, !tbaa !95
  %168 = getelementptr inbounds i64, ptr %147, i64 2
  %169 = getelementptr inbounds float, ptr %148, i64 2
  %170 = add i32 %149, 2
  %171 = icmp eq i32 %170, %46
  br i1 %171, label %123, label %146

172:                                              ; preds = %139, %206
  %173 = phi i64 [ %140, %139 ], [ %219, %206 ]
  %174 = phi ptr [ %142, %139 ], [ %220, %206 ]
  %175 = phi ptr [ %141, %139 ], [ %221, %206 ]
  %176 = getelementptr inbounds i64, ptr %174, i64 1
  %177 = load i64, ptr %176, align 8, !tbaa !34
  %178 = trunc i64 %177 to i32
  %179 = getelementptr inbounds i32, ptr %16, i64 %173
  %180 = load i32, ptr %179, align 4, !tbaa !47
  %181 = icmp ult i32 %180, %178
  br i1 %181, label %182, label %206

182:                                              ; preds = %172
  %183 = load ptr, ptr %145, align 8, !tbaa !46
  %184 = zext i32 %180 to i64
  %185 = and i64 %177, 4294967295
  %186 = sub i64 %177, %184
  %187 = add nuw nsw i64 %184, 1
  %188 = and i64 %186, 1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %201, label %190

190:                                              ; preds = %182
  %191 = getelementptr inbounds x86_fp80, ptr %144, i64 %184
  %192 = load x86_fp80, ptr %191, align 16, !tbaa !128
  %193 = getelementptr inbounds i32, ptr %183, i64 %184
  %194 = load i32, ptr %193, align 4, !tbaa !47
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds float, ptr %13, i64 %195
  %197 = load float, ptr %196, align 4, !tbaa !95
  %198 = fpext float %197 to x86_fp80
  %199 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %192, x86_fp80 %198, x86_fp80 0xK00000000000000000000)
  %200 = add nuw nsw i64 %184, 1
  br label %201

201:                                              ; preds = %190, %182
  %202 = phi x86_fp80 [ undef, %182 ], [ %199, %190 ]
  %203 = phi i64 [ %184, %182 ], [ %200, %190 ]
  %204 = phi x86_fp80 [ 0xK00000000000000000000, %182 ], [ %199, %190 ]
  %205 = icmp eq i64 %185, %187
  br i1 %205, label %206, label %223

206:                                              ; preds = %201, %223, %172
  %207 = phi x86_fp80 [ 0xK00000000000000000000, %172 ], [ %202, %201 ], [ %244, %223 ]
  %208 = load float, ptr %175, align 4, !tbaa !95
  %209 = fpext float %208 to x86_fp80
  %210 = fneg x86_fp80 %207
  %211 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %210, x86_fp80 %3, x86_fp80 %209)
  %212 = fptrunc x86_fp80 %211 to float
  %213 = load i64, ptr %174, align 8, !tbaa !34
  %214 = getelementptr inbounds x86_fp80, ptr %144, i64 %213
  %215 = load x86_fp80, ptr %214, align 16, !tbaa !128
  %216 = fpext float %212 to x86_fp80
  %217 = fdiv x86_fp80 %216, %215
  %218 = fptrunc x86_fp80 %217 to float
  store float %218, ptr %175, align 4, !tbaa !95
  %219 = add nsw i64 %173, -1
  %220 = getelementptr inbounds i64, ptr %174, i64 -1
  %221 = getelementptr inbounds float, ptr %175, i64 -1
  %222 = icmp sgt i64 %173, 0
  br i1 %222, label %172, label %606

223:                                              ; preds = %201, %223
  %224 = phi i64 [ %245, %223 ], [ %203, %201 ]
  %225 = phi x86_fp80 [ %244, %223 ], [ %204, %201 ]
  %226 = getelementptr inbounds x86_fp80, ptr %144, i64 %224
  %227 = load x86_fp80, ptr %226, align 16, !tbaa !128
  %228 = getelementptr inbounds i32, ptr %183, i64 %224
  %229 = load i32, ptr %228, align 4, !tbaa !47
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds float, ptr %13, i64 %230
  %232 = load float, ptr %231, align 4, !tbaa !95
  %233 = fpext float %232 to x86_fp80
  %234 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %227, x86_fp80 %233, x86_fp80 %225)
  %235 = add nuw nsw i64 %224, 1
  %236 = getelementptr inbounds x86_fp80, ptr %144, i64 %235
  %237 = load x86_fp80, ptr %236, align 16, !tbaa !128
  %238 = getelementptr inbounds i32, ptr %183, i64 %235
  %239 = load i32, ptr %238, align 4, !tbaa !47
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds float, ptr %13, i64 %240
  %242 = load float, ptr %241, align 4, !tbaa !95
  %243 = fpext float %242 to x86_fp80
  %244 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %237, x86_fp80 %243, x86_fp80 %234)
  %245 = add nuw nsw i64 %224, 2
  %246 = icmp eq i64 %245, %185
  br i1 %246, label %206, label %223

247:                                              ; preds = %371
  br i1 %18, label %606, label %248

248:                                              ; preds = %247
  %249 = fsub x86_fp80 0xK40008000000000000000, %3
  %250 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %251 = load ptr, ptr %250, align 8, !tbaa !125
  %252 = and i32 %7, 1
  %253 = icmp eq i32 %7, 1
  br i1 %253, label %410, label %254

254:                                              ; preds = %248
  %255 = and i32 %7, -2
  br label %435

256:                                              ; preds = %28, %371
  %257 = phi i64 [ %37, %28 ], [ %266, %371 ]
  %258 = phi i64 [ 0, %28 ], [ %382, %371 ]
  %259 = phi ptr [ %11, %28 ], [ %265, %371 ]
  %260 = phi ptr [ %13, %28 ], [ %383, %371 ]
  %261 = getelementptr inbounds float, ptr %30, i64 %258
  %262 = load float, ptr %261, align 4, !tbaa !95
  store float %262, ptr %260, align 4, !tbaa !95
  %263 = add i64 %257, 1
  %264 = getelementptr inbounds i32, ptr %32, i64 %263
  %265 = getelementptr inbounds i64, ptr %259, i64 1
  %266 = load i64, ptr %265, align 8, !tbaa !34
  %267 = getelementptr inbounds i32, ptr %32, i64 %266
  %268 = ptrtoint ptr %267 to i64
  %269 = ptrtoint ptr %264 to i64
  %270 = sub i64 %268, %269
  %271 = lshr exact i64 %270, 2
  %272 = trunc i64 %271 to i32
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %339, label %274

274:                                              ; preds = %256, %327
  %275 = phi i32 [ %337, %327 ], [ %272, %256 ]
  %276 = phi ptr [ %338, %327 ], [ %264, %256 ]
  %277 = icmp ult i32 %275, 8
  br i1 %277, label %278, label %327

278:                                              ; preds = %274
  switch i32 %275, label %327 [
    i32 7, label %279
    i32 6, label %285
    i32 5, label %292
    i32 4, label %299
    i32 3, label %306
    i32 2, label %313
    i32 1, label %320
  ]

279:                                              ; preds = %278
  %280 = load i32, ptr %276, align 4, !tbaa !47
  %281 = zext i32 %280 to i64
  %282 = icmp ugt i64 %258, %281
  br i1 %282, label %283, label %339

283:                                              ; preds = %279
  %284 = getelementptr inbounds i32, ptr %276, i64 1
  br label %285

285:                                              ; preds = %278, %283
  %286 = phi ptr [ %284, %283 ], [ %276, %278 ]
  %287 = load i32, ptr %286, align 4, !tbaa !47
  %288 = zext i32 %287 to i64
  %289 = icmp ugt i64 %258, %288
  br i1 %289, label %290, label %339

290:                                              ; preds = %285
  %291 = getelementptr inbounds i32, ptr %286, i64 1
  br label %292

292:                                              ; preds = %278, %290
  %293 = phi ptr [ %291, %290 ], [ %276, %278 ]
  %294 = load i32, ptr %293, align 4, !tbaa !47
  %295 = zext i32 %294 to i64
  %296 = icmp ugt i64 %258, %295
  br i1 %296, label %297, label %339

297:                                              ; preds = %292
  %298 = getelementptr inbounds i32, ptr %293, i64 1
  br label %299

299:                                              ; preds = %278, %297
  %300 = phi ptr [ %298, %297 ], [ %276, %278 ]
  %301 = load i32, ptr %300, align 4, !tbaa !47
  %302 = zext i32 %301 to i64
  %303 = icmp ugt i64 %258, %302
  br i1 %303, label %304, label %339

304:                                              ; preds = %299
  %305 = getelementptr inbounds i32, ptr %300, i64 1
  br label %306

306:                                              ; preds = %278, %304
  %307 = phi ptr [ %305, %304 ], [ %276, %278 ]
  %308 = load i32, ptr %307, align 4, !tbaa !47
  %309 = zext i32 %308 to i64
  %310 = icmp ugt i64 %258, %309
  br i1 %310, label %311, label %339

311:                                              ; preds = %306
  %312 = getelementptr inbounds i32, ptr %307, i64 1
  br label %313

313:                                              ; preds = %278, %311
  %314 = phi ptr [ %312, %311 ], [ %276, %278 ]
  %315 = load i32, ptr %314, align 4, !tbaa !47
  %316 = zext i32 %315 to i64
  %317 = icmp ugt i64 %258, %316
  br i1 %317, label %318, label %339

318:                                              ; preds = %313
  %319 = getelementptr inbounds i32, ptr %314, i64 1
  br label %320

320:                                              ; preds = %278, %318
  %321 = phi ptr [ %319, %318 ], [ %276, %278 ]
  %322 = load i32, ptr %321, align 4, !tbaa !47
  %323 = zext i32 %322 to i64
  %324 = icmp ugt i64 %258, %323
  %325 = zext i1 %324 to i64
  %326 = getelementptr inbounds i32, ptr %321, i64 %325
  br label %339

327:                                              ; preds = %278, %274
  %328 = lshr i32 %275, 1
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds i32, ptr %276, i64 %329
  %331 = load i32, ptr %330, align 4, !tbaa !47
  %332 = zext i32 %331 to i64
  %333 = icmp ugt i64 %258, %332
  %334 = getelementptr inbounds i32, ptr %330, i64 1
  %335 = xor i32 %328, -1
  %336 = add i32 %275, %335
  %337 = select i1 %333, i32 %336, i32 %328
  %338 = select i1 %333, ptr %334, ptr %276
  br label %274

339:                                              ; preds = %256, %279, %285, %292, %299, %306, %313, %320
  %340 = phi ptr [ %264, %256 ], [ %276, %279 ], [ %286, %285 ], [ %293, %292 ], [ %300, %299 ], [ %307, %306 ], [ %314, %313 ], [ %326, %320 ]
  %341 = ptrtoint ptr %340 to i64
  %342 = sub i64 %341, %33
  %343 = lshr exact i64 %342, 2
  %344 = trunc i64 %343 to i32
  %345 = trunc i64 %257 to i32
  %346 = add i32 %345, 1
  %347 = icmp ult i32 %346, %344
  br i1 %347, label %348, label %371

348:                                              ; preds = %339
  %349 = zext i32 %346 to i64
  %350 = xor i32 %345, -1
  %351 = add i32 %350, %344
  %352 = add i32 %344, -2
  %353 = and i32 %351, 1
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %366, label %355

355:                                              ; preds = %348
  %356 = getelementptr inbounds x86_fp80, ptr %35, i64 %349
  %357 = load x86_fp80, ptr %356, align 16, !tbaa !128
  %358 = getelementptr inbounds i32, ptr %32, i64 %349
  %359 = load i32, ptr %358, align 4, !tbaa !47
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds float, ptr %13, i64 %360
  %362 = load float, ptr %361, align 4, !tbaa !95
  %363 = fpext float %362 to x86_fp80
  %364 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %357, x86_fp80 %363, x86_fp80 0xK00000000000000000000)
  %365 = add nuw nsw i64 %349, 1
  br label %366

366:                                              ; preds = %355, %348
  %367 = phi x86_fp80 [ undef, %348 ], [ %364, %355 ]
  %368 = phi i64 [ %349, %348 ], [ %365, %355 ]
  %369 = phi x86_fp80 [ 0xK00000000000000000000, %348 ], [ %364, %355 ]
  %370 = icmp eq i32 %352, %345
  br i1 %370, label %371, label %385

371:                                              ; preds = %366, %385, %339
  %372 = phi x86_fp80 [ 0xK00000000000000000000, %339 ], [ %367, %366 ], [ %406, %385 ]
  %373 = fpext float %262 to x86_fp80
  %374 = fneg x86_fp80 %372
  %375 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %374, x86_fp80 %3, x86_fp80 %373)
  %376 = fptrunc x86_fp80 %375 to float
  %377 = getelementptr inbounds x86_fp80, ptr %35, i64 %257
  %378 = load x86_fp80, ptr %377, align 16, !tbaa !128
  %379 = fpext float %376 to x86_fp80
  %380 = fdiv x86_fp80 %379, %378
  %381 = fptrunc x86_fp80 %380 to float
  store float %381, ptr %260, align 4, !tbaa !95
  %382 = add nuw nsw i64 %258, 1
  %383 = getelementptr inbounds float, ptr %260, i64 1
  %384 = icmp eq i64 %382, %36
  br i1 %384, label %247, label %256

385:                                              ; preds = %366, %385
  %386 = phi i64 [ %407, %385 ], [ %368, %366 ]
  %387 = phi x86_fp80 [ %406, %385 ], [ %369, %366 ]
  %388 = getelementptr inbounds x86_fp80, ptr %35, i64 %386
  %389 = load x86_fp80, ptr %388, align 16, !tbaa !128
  %390 = getelementptr inbounds i32, ptr %32, i64 %386
  %391 = load i32, ptr %390, align 4, !tbaa !47
  %392 = zext i32 %391 to i64
  %393 = getelementptr inbounds float, ptr %13, i64 %392
  %394 = load float, ptr %393, align 4, !tbaa !95
  %395 = fpext float %394 to x86_fp80
  %396 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %389, x86_fp80 %395, x86_fp80 %387)
  %397 = add nuw nsw i64 %386, 1
  %398 = getelementptr inbounds x86_fp80, ptr %35, i64 %397
  %399 = load x86_fp80, ptr %398, align 16, !tbaa !128
  %400 = getelementptr inbounds i32, ptr %32, i64 %397
  %401 = load i32, ptr %400, align 4, !tbaa !47
  %402 = zext i32 %401 to i64
  %403 = getelementptr inbounds float, ptr %13, i64 %402
  %404 = load float, ptr %403, align 4, !tbaa !95
  %405 = fpext float %404 to x86_fp80
  %406 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %399, x86_fp80 %405, x86_fp80 %396)
  %407 = add nuw nsw i64 %386, 2
  %408 = trunc i64 %407 to i32
  %409 = icmp eq i32 %408, %344
  br i1 %409, label %371, label %385

410:                                              ; preds = %435, %248
  %411 = phi ptr [ %11, %248 ], [ %457, %435 ]
  %412 = phi ptr [ %13, %248 ], [ %458, %435 ]
  %413 = icmp eq i32 %252, 0
  br i1 %413, label %423, label %414

414:                                              ; preds = %410
  %415 = load i64, ptr %411, align 8, !tbaa !34
  %416 = getelementptr inbounds x86_fp80, ptr %251, i64 %415
  %417 = load x86_fp80, ptr %416, align 16, !tbaa !128
  %418 = fmul x86_fp80 %249, %417
  %419 = load float, ptr %412, align 4, !tbaa !95
  %420 = fpext float %419 to x86_fp80
  %421 = fmul x86_fp80 %418, %420
  %422 = fptrunc x86_fp80 %421 to float
  store float %422, ptr %412, align 4, !tbaa !95
  br label %423

423:                                              ; preds = %410, %414
  %424 = add i32 %7, -1
  %425 = icmp sgt i32 %424, -1
  br i1 %425, label %426, label %606

426:                                              ; preds = %423
  %427 = zext i32 %424 to i64
  %428 = getelementptr inbounds float, ptr %13, i64 %427
  %429 = getelementptr inbounds i64, ptr %11, i64 %427
  %430 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %431 = load ptr, ptr %430, align 8, !tbaa !46
  %432 = ptrtoint ptr %431 to i64
  %433 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %434 = load ptr, ptr %433, align 8
  br label %461

435:                                              ; preds = %435, %254
  %436 = phi ptr [ %11, %254 ], [ %457, %435 ]
  %437 = phi ptr [ %13, %254 ], [ %458, %435 ]
  %438 = phi i32 [ 0, %254 ], [ %459, %435 ]
  %439 = load i64, ptr %436, align 8, !tbaa !34
  %440 = getelementptr inbounds x86_fp80, ptr %251, i64 %439
  %441 = load x86_fp80, ptr %440, align 16, !tbaa !128
  %442 = fmul x86_fp80 %249, %441
  %443 = load float, ptr %437, align 4, !tbaa !95
  %444 = fpext float %443 to x86_fp80
  %445 = fmul x86_fp80 %442, %444
  %446 = fptrunc x86_fp80 %445 to float
  store float %446, ptr %437, align 4, !tbaa !95
  %447 = getelementptr inbounds i64, ptr %436, i64 1
  %448 = getelementptr inbounds float, ptr %437, i64 1
  %449 = load i64, ptr %447, align 8, !tbaa !34
  %450 = getelementptr inbounds x86_fp80, ptr %251, i64 %449
  %451 = load x86_fp80, ptr %450, align 16, !tbaa !128
  %452 = fmul x86_fp80 %249, %451
  %453 = load float, ptr %448, align 4, !tbaa !95
  %454 = fpext float %453 to x86_fp80
  %455 = fmul x86_fp80 %452, %454
  %456 = fptrunc x86_fp80 %455 to float
  store float %456, ptr %448, align 4, !tbaa !95
  %457 = getelementptr inbounds i64, ptr %436, i64 2
  %458 = getelementptr inbounds float, ptr %437, i64 2
  %459 = add i32 %438, 2
  %460 = icmp eq i32 %459, %255
  br i1 %460, label %410, label %435

461:                                              ; preds = %426, %566
  %462 = phi ptr [ %429, %426 ], [ %579, %566 ]
  %463 = phi ptr [ %428, %426 ], [ %580, %566 ]
  %464 = phi i32 [ %424, %426 ], [ %578, %566 ]
  %465 = getelementptr inbounds i64, ptr %462, i64 1
  %466 = load i64, ptr %465, align 8, !tbaa !34
  %467 = trunc i64 %466 to i32
  %468 = load i64, ptr %462, align 8, !tbaa !34
  %469 = add i64 %468, 1
  %470 = getelementptr inbounds i32, ptr %431, i64 %469
  %471 = and i64 %466, 4294967295
  %472 = getelementptr inbounds i32, ptr %431, i64 %471
  %473 = ptrtoint ptr %472 to i64
  %474 = ptrtoint ptr %470 to i64
  %475 = sub i64 %473, %474
  %476 = lshr exact i64 %475, 2
  %477 = trunc i64 %476 to i32
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %536, label %479

479:                                              ; preds = %461, %525
  %480 = phi i32 [ %534, %525 ], [ %477, %461 ]
  %481 = phi ptr [ %535, %525 ], [ %470, %461 ]
  %482 = icmp ult i32 %480, 8
  br i1 %482, label %483, label %525

483:                                              ; preds = %479
  switch i32 %480, label %525 [
    i32 7, label %484
    i32 6, label %489
    i32 5, label %495
    i32 4, label %501
    i32 3, label %507
    i32 2, label %513
    i32 1, label %519
  ]

484:                                              ; preds = %483
  %485 = load i32, ptr %481, align 4, !tbaa !47
  %486 = icmp ult i32 %485, %464
  br i1 %486, label %487, label %536

487:                                              ; preds = %484
  %488 = getelementptr inbounds i32, ptr %481, i64 1
  br label %489

489:                                              ; preds = %483, %487
  %490 = phi ptr [ %488, %487 ], [ %481, %483 ]
  %491 = load i32, ptr %490, align 4, !tbaa !47
  %492 = icmp ult i32 %491, %464
  br i1 %492, label %493, label %536

493:                                              ; preds = %489
  %494 = getelementptr inbounds i32, ptr %490, i64 1
  br label %495

495:                                              ; preds = %483, %493
  %496 = phi ptr [ %494, %493 ], [ %481, %483 ]
  %497 = load i32, ptr %496, align 4, !tbaa !47
  %498 = icmp ult i32 %497, %464
  br i1 %498, label %499, label %536

499:                                              ; preds = %495
  %500 = getelementptr inbounds i32, ptr %496, i64 1
  br label %501

501:                                              ; preds = %483, %499
  %502 = phi ptr [ %500, %499 ], [ %481, %483 ]
  %503 = load i32, ptr %502, align 4, !tbaa !47
  %504 = icmp ult i32 %503, %464
  br i1 %504, label %505, label %536

505:                                              ; preds = %501
  %506 = getelementptr inbounds i32, ptr %502, i64 1
  br label %507

507:                                              ; preds = %483, %505
  %508 = phi ptr [ %506, %505 ], [ %481, %483 ]
  %509 = load i32, ptr %508, align 4, !tbaa !47
  %510 = icmp ult i32 %509, %464
  br i1 %510, label %511, label %536

511:                                              ; preds = %507
  %512 = getelementptr inbounds i32, ptr %508, i64 1
  br label %513

513:                                              ; preds = %483, %511
  %514 = phi ptr [ %512, %511 ], [ %481, %483 ]
  %515 = load i32, ptr %514, align 4, !tbaa !47
  %516 = icmp ult i32 %515, %464
  br i1 %516, label %517, label %536

517:                                              ; preds = %513
  %518 = getelementptr inbounds i32, ptr %514, i64 1
  br label %519

519:                                              ; preds = %483, %517
  %520 = phi ptr [ %518, %517 ], [ %481, %483 ]
  %521 = load i32, ptr %520, align 4, !tbaa !47
  %522 = icmp ult i32 %521, %464
  %523 = zext i1 %522 to i64
  %524 = getelementptr inbounds i32, ptr %520, i64 %523
  br label %536

525:                                              ; preds = %483, %479
  %526 = lshr i32 %480, 1
  %527 = zext i32 %526 to i64
  %528 = getelementptr inbounds i32, ptr %481, i64 %527
  %529 = load i32, ptr %528, align 4, !tbaa !47
  %530 = icmp ult i32 %529, %464
  %531 = getelementptr inbounds i32, ptr %528, i64 1
  %532 = xor i32 %526, -1
  %533 = add i32 %480, %532
  %534 = select i1 %530, i32 %533, i32 %526
  %535 = select i1 %530, ptr %531, ptr %481
  br label %479

536:                                              ; preds = %461, %484, %489, %495, %501, %507, %513, %519
  %537 = phi ptr [ %470, %461 ], [ %481, %484 ], [ %490, %489 ], [ %496, %495 ], [ %502, %501 ], [ %508, %507 ], [ %514, %513 ], [ %524, %519 ]
  %538 = ptrtoint ptr %537 to i64
  %539 = sub i64 %538, %432
  %540 = lshr exact i64 %539, 2
  %541 = trunc i64 %540 to i32
  %542 = icmp ult i32 %541, %467
  br i1 %542, label %543, label %566

543:                                              ; preds = %536
  %544 = and i64 %540, 4294967295
  %545 = and i64 %466, 4294967295
  %546 = sub i64 %466, %540
  %547 = add nuw nsw i64 %544, 1
  %548 = and i64 %546, 1
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %561, label %550

550:                                              ; preds = %543
  %551 = getelementptr inbounds x86_fp80, ptr %434, i64 %544
  %552 = load x86_fp80, ptr %551, align 16, !tbaa !128
  %553 = getelementptr inbounds i32, ptr %431, i64 %544
  %554 = load i32, ptr %553, align 4, !tbaa !47
  %555 = zext i32 %554 to i64
  %556 = getelementptr inbounds float, ptr %13, i64 %555
  %557 = load float, ptr %556, align 4, !tbaa !95
  %558 = fpext float %557 to x86_fp80
  %559 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %552, x86_fp80 %558, x86_fp80 0xK00000000000000000000)
  %560 = add nuw nsw i64 %544, 1
  br label %561

561:                                              ; preds = %550, %543
  %562 = phi x86_fp80 [ undef, %543 ], [ %559, %550 ]
  %563 = phi i64 [ %544, %543 ], [ %560, %550 ]
  %564 = phi x86_fp80 [ 0xK00000000000000000000, %543 ], [ %559, %550 ]
  %565 = icmp eq i64 %471, %547
  br i1 %565, label %566, label %582

566:                                              ; preds = %561, %582, %536
  %567 = phi x86_fp80 [ 0xK00000000000000000000, %536 ], [ %562, %561 ], [ %603, %582 ]
  %568 = load float, ptr %463, align 4, !tbaa !95
  %569 = fpext float %568 to x86_fp80
  %570 = fneg x86_fp80 %567
  %571 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %570, x86_fp80 %3, x86_fp80 %569)
  %572 = fptrunc x86_fp80 %571 to float
  %573 = getelementptr inbounds x86_fp80, ptr %434, i64 %468
  %574 = load x86_fp80, ptr %573, align 16, !tbaa !128
  %575 = fpext float %572 to x86_fp80
  %576 = fdiv x86_fp80 %575, %574
  %577 = fptrunc x86_fp80 %576 to float
  store float %577, ptr %463, align 4, !tbaa !95
  %578 = add nsw i32 %464, -1
  %579 = getelementptr inbounds i64, ptr %462, i64 -1
  %580 = getelementptr inbounds float, ptr %463, i64 -1
  %581 = icmp sgt i32 %464, 0
  br i1 %581, label %461, label %606

582:                                              ; preds = %561, %582
  %583 = phi i64 [ %604, %582 ], [ %563, %561 ]
  %584 = phi x86_fp80 [ %603, %582 ], [ %564, %561 ]
  %585 = getelementptr inbounds x86_fp80, ptr %434, i64 %583
  %586 = load x86_fp80, ptr %585, align 16, !tbaa !128
  %587 = getelementptr inbounds i32, ptr %431, i64 %583
  %588 = load i32, ptr %587, align 4, !tbaa !47
  %589 = zext i32 %588 to i64
  %590 = getelementptr inbounds float, ptr %13, i64 %589
  %591 = load float, ptr %590, align 4, !tbaa !95
  %592 = fpext float %591 to x86_fp80
  %593 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %586, x86_fp80 %592, x86_fp80 %584)
  %594 = add nuw nsw i64 %583, 1
  %595 = getelementptr inbounds x86_fp80, ptr %434, i64 %594
  %596 = load x86_fp80, ptr %595, align 16, !tbaa !128
  %597 = getelementptr inbounds i32, ptr %431, i64 %594
  %598 = load i32, ptr %597, align 4, !tbaa !47
  %599 = zext i32 %598 to i64
  %600 = getelementptr inbounds float, ptr %13, i64 %599
  %601 = load float, ptr %600, align 4, !tbaa !95
  %602 = fpext float %601 to x86_fp80
  %603 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %596, x86_fp80 %602, x86_fp80 %593)
  %604 = add nuw nsw i64 %583, 2
  %605 = icmp eq i64 %604, %545
  br i1 %605, label %566, label %582

606:                                              ; preds = %206, %566, %27, %247, %19, %38, %136, %423
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE16precondition_SORIfEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %67, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !106
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !125
  %19 = zext i32 %9 to i64
  %20 = load i64, ptr %15, align 8, !tbaa !34
  br label %21

21:                                               ; preds = %35, %11
  %22 = phi i64 [ %20, %11 ], [ %28, %35 ]
  %23 = phi i64 [ 0, %11 ], [ %26, %35 ]
  %24 = getelementptr inbounds float, ptr %13, i64 %23
  %25 = load float, ptr %24, align 4, !tbaa !95
  %26 = add nuw nsw i64 %23, 1
  %27 = getelementptr inbounds i64, ptr %15, i64 %26
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = and i64 %22, 4294967295
  %30 = icmp ugt i64 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %21
  %32 = trunc i64 %22 to i32
  %33 = load ptr, ptr %16, align 8, !tbaa !46
  %34 = load ptr, ptr %17, align 8
  br label %44

35:                                               ; preds = %62, %21
  %36 = phi float [ %25, %21 ], [ %63, %62 ]
  %37 = fpext float %36 to x86_fp80
  %38 = fmul x86_fp80 %37, %3
  %39 = getelementptr inbounds x86_fp80, ptr %18, i64 %22
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !128
  %41 = fdiv x86_fp80 %38, %40
  %42 = fptrunc x86_fp80 %41 to float
  store float %42, ptr %24, align 4, !tbaa !95
  %43 = icmp eq i64 %26, %19
  br i1 %43, label %67, label %21

44:                                               ; preds = %62, %31
  %45 = phi i64 [ %29, %31 ], [ %65, %62 ]
  %46 = phi i32 [ %32, %31 ], [ %64, %62 ]
  %47 = phi float [ %25, %31 ], [ %63, %62 ]
  %48 = getelementptr inbounds i32, ptr %33, i64 %45
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = zext i32 %49 to i64
  %51 = icmp ugt i64 %23, %50
  br i1 %51, label %52, label %62

52:                                               ; preds = %44
  %53 = getelementptr inbounds x86_fp80, ptr %34, i64 %45
  %54 = load x86_fp80, ptr %53, align 16, !tbaa !128
  %55 = getelementptr inbounds float, ptr %13, i64 %50
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fpext float %56 to x86_fp80
  %58 = fpext float %47 to x86_fp80
  %59 = fneg x86_fp80 %54
  %60 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %59, x86_fp80 %57, x86_fp80 %58)
  %61 = fptrunc x86_fp80 %60 to float
  br label %62

62:                                               ; preds = %52, %44
  %63 = phi float [ %61, %52 ], [ %47, %44 ]
  %64 = add i32 %46, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %28, %65
  br i1 %66, label %44, label %35

67:                                               ; preds = %35, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE3SORIfEEvRNS_6VectorIT_EEe(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, x86_fp80 noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !106
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !125
  %17 = zext i32 %7 to i64
  %18 = load i64, ptr %13, align 8, !tbaa !34
  br label %20

19:                                               ; preds = %34, %3
  ret void

20:                                               ; preds = %9, %34
  %21 = phi i64 [ %18, %9 ], [ %27, %34 ]
  %22 = phi i64 [ 0, %9 ], [ %25, %34 ]
  %23 = getelementptr inbounds float, ptr %11, i64 %22
  %24 = load float, ptr %23, align 4, !tbaa !95
  %25 = add nuw nsw i64 %22, 1
  %26 = getelementptr inbounds i64, ptr %13, i64 %25
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = and i64 %21, 4294967295
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %20
  %31 = trunc i64 %21 to i32
  %32 = load ptr, ptr %14, align 8, !tbaa !46
  %33 = load ptr, ptr %15, align 8
  br label %43

34:                                               ; preds = %61, %20
  %35 = phi float [ %24, %20 ], [ %62, %61 ]
  %36 = fpext float %35 to x86_fp80
  %37 = fmul x86_fp80 %36, %2
  %38 = getelementptr inbounds x86_fp80, ptr %16, i64 %21
  %39 = load x86_fp80, ptr %38, align 16, !tbaa !128
  %40 = fdiv x86_fp80 %37, %39
  %41 = fptrunc x86_fp80 %40 to float
  store float %41, ptr %23, align 4, !tbaa !95
  %42 = icmp eq i64 %25, %17
  br i1 %42, label %19, label %20

43:                                               ; preds = %30, %61
  %44 = phi i64 [ %28, %30 ], [ %64, %61 ]
  %45 = phi i32 [ %31, %30 ], [ %63, %61 ]
  %46 = phi float [ %24, %30 ], [ %62, %61 ]
  %47 = getelementptr inbounds i32, ptr %32, i64 %44
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %22, %49
  br i1 %50, label %51, label %61

51:                                               ; preds = %43
  %52 = getelementptr inbounds x86_fp80, ptr %33, i64 %44
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = getelementptr inbounds float, ptr %11, i64 %49
  %55 = load float, ptr %54, align 4, !tbaa !95
  %56 = fpext float %55 to x86_fp80
  %57 = fpext float %46 to x86_fp80
  %58 = fneg x86_fp80 %53
  %59 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %58, x86_fp80 %56, x86_fp80 %57)
  %60 = fptrunc x86_fp80 %59 to float
  br label %61

61:                                               ; preds = %51, %43
  %62 = phi float [ %60, %51 ], [ %46, %43 ]
  %63 = add i32 %45, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %27, %64
  br i1 %65, label %43, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE17precondition_TSORIfEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIfEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %69, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !106
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !125
  %19 = zext i32 %9 to i64
  br label %20

20:                                               ; preds = %37, %11
  %21 = phi i64 [ %19, %11 ], [ %22, %37 ]
  %22 = add nsw i64 %21, -1
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  %25 = getelementptr inbounds float, ptr %13, i64 %24
  %26 = load float, ptr %25, align 4, !tbaa !95
  %27 = getelementptr inbounds i64, ptr %15, i64 %24
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = getelementptr inbounds i64, ptr %15, i64 %21
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %28, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %20
  %34 = trunc i64 %28 to i32
  %35 = load ptr, ptr %16, align 8, !tbaa !46
  %36 = load ptr, ptr %17, align 8
  br label %46

37:                                               ; preds = %64, %20
  %38 = phi float [ %26, %20 ], [ %65, %64 ]
  %39 = fpext float %38 to x86_fp80
  %40 = fmul x86_fp80 %39, %3
  %41 = getelementptr inbounds x86_fp80, ptr %18, i64 %28
  %42 = load x86_fp80, ptr %41, align 16, !tbaa !128
  %43 = fdiv x86_fp80 %40, %42
  %44 = fptrunc x86_fp80 %43 to float
  store float %44, ptr %25, align 4, !tbaa !95
  %45 = icmp eq i32 %23, 0
  br i1 %45, label %69, label %20

46:                                               ; preds = %64, %33
  %47 = phi i64 [ %31, %33 ], [ %67, %64 ]
  %48 = phi i32 [ %34, %33 ], [ %66, %64 ]
  %49 = phi float [ %26, %33 ], [ %65, %64 ]
  %50 = getelementptr inbounds i32, ptr %35, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %23
  br i1 %52, label %53, label %64

53:                                               ; preds = %46
  %54 = getelementptr inbounds x86_fp80, ptr %36, i64 %47
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds float, ptr %13, i64 %56
  %58 = load float, ptr %57, align 4, !tbaa !95
  %59 = fpext float %58 to x86_fp80
  %60 = fpext float %49 to x86_fp80
  %61 = fneg x86_fp80 %55
  %62 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %61, x86_fp80 %59, x86_fp80 %60)
  %63 = fptrunc x86_fp80 %62 to float
  br label %64

64:                                               ; preds = %53, %46
  %65 = phi float [ %63, %53 ], [ %49, %46 ]
  %66 = add i32 %48, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %30, %67
  br i1 %68, label %46, label %37

69:                                               ; preds = %37, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE4TSORIfEEvRNS_6VectorIT_EEe(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, x86_fp80 noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !106
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !125
  %17 = zext i32 %7 to i64
  br label %19

18:                                               ; preds = %36, %3
  ret void

19:                                               ; preds = %9, %36
  %20 = phi i64 [ %17, %9 ], [ %21, %36 ]
  %21 = add nsw i64 %20, -1
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  %24 = getelementptr inbounds float, ptr %11, i64 %23
  %25 = load float, ptr %24, align 4, !tbaa !95
  %26 = getelementptr inbounds i64, ptr %13, i64 %23
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = getelementptr inbounds i64, ptr %13, i64 %20
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %27, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %19
  %33 = trunc i64 %27 to i32
  %34 = load ptr, ptr %14, align 8, !tbaa !46
  %35 = load ptr, ptr %15, align 8
  br label %45

36:                                               ; preds = %63, %19
  %37 = phi float [ %25, %19 ], [ %64, %63 ]
  %38 = fpext float %37 to x86_fp80
  %39 = fmul x86_fp80 %38, %2
  %40 = getelementptr inbounds x86_fp80, ptr %16, i64 %27
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %42 = fdiv x86_fp80 %39, %41
  %43 = fptrunc x86_fp80 %42 to float
  store float %43, ptr %24, align 4, !tbaa !95
  %44 = icmp eq i32 %22, 0
  br i1 %44, label %18, label %19

45:                                               ; preds = %32, %63
  %46 = phi i64 [ %30, %32 ], [ %66, %63 ]
  %47 = phi i32 [ %33, %32 ], [ %65, %63 ]
  %48 = phi float [ %25, %32 ], [ %64, %63 ]
  %49 = getelementptr inbounds i32, ptr %34, i64 %46
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %22
  br i1 %51, label %52, label %63

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %35, i64 %46
  %54 = load x86_fp80, ptr %53, align 16, !tbaa !128
  %55 = zext i32 %50 to i64
  %56 = getelementptr inbounds float, ptr %11, i64 %55
  %57 = load float, ptr %56, align 4, !tbaa !95
  %58 = fpext float %57 to x86_fp80
  %59 = fpext float %48 to x86_fp80
  %60 = fneg x86_fp80 %54
  %61 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %60, x86_fp80 %58, x86_fp80 %59)
  %62 = fptrunc x86_fp80 %61 to float
  br label %63

63:                                               ; preds = %45, %52
  %64 = phi float [ %62, %52 ], [ %48, %45 ]
  %65 = add i32 %47, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %29, %66
  br i1 %67, label %45, label %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE19precondition_JacobiIfEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !109
  %7 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !106
  %9 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !106
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !8
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %12, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = fcmp une x86_fp80 %3, 0xK3FFF8000000000000000
  %16 = icmp eq i32 %6, 0
  br i1 %15, label %25, label %17

17:                                               ; preds = %4
  br i1 %16, label %116, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !125
  %21 = and i32 %6, 1
  %22 = icmp eq i32 %6, 1
  br i1 %22, label %103, label %23

23:                                               ; preds = %18
  %24 = and i32 %6, -2
  br label %62

25:                                               ; preds = %4
  br i1 %16, label %116, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !125
  %29 = and i32 %6, 1
  %30 = icmp eq i32 %6, 1
  br i1 %30, label %89, label %31

31:                                               ; preds = %26
  %32 = and i32 %6, -2
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi ptr [ %14, %31 ], [ %59, %33 ]
  %35 = phi ptr [ %10, %31 ], [ %58, %33 ]
  %36 = phi ptr [ %8, %31 ], [ %57, %33 ]
  %37 = phi i32 [ 0, %31 ], [ %60, %33 ]
  %38 = load float, ptr %35, align 4, !tbaa !95
  %39 = fpext float %38 to x86_fp80
  %40 = fmul x86_fp80 %39, %3
  %41 = load i64, ptr %34, align 8, !tbaa !34
  %42 = getelementptr inbounds x86_fp80, ptr %28, i64 %41
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !128
  %44 = fdiv x86_fp80 %40, %43
  %45 = fptrunc x86_fp80 %44 to float
  store float %45, ptr %36, align 4, !tbaa !95
  %46 = getelementptr inbounds float, ptr %36, i64 1
  %47 = getelementptr inbounds float, ptr %35, i64 1
  %48 = getelementptr inbounds i64, ptr %34, i64 1
  %49 = load float, ptr %47, align 4, !tbaa !95
  %50 = fpext float %49 to x86_fp80
  %51 = fmul x86_fp80 %50, %3
  %52 = load i64, ptr %48, align 8, !tbaa !34
  %53 = getelementptr inbounds x86_fp80, ptr %28, i64 %52
  %54 = load x86_fp80, ptr %53, align 16, !tbaa !128
  %55 = fdiv x86_fp80 %51, %54
  %56 = fptrunc x86_fp80 %55 to float
  store float %56, ptr %46, align 4, !tbaa !95
  %57 = getelementptr inbounds float, ptr %36, i64 2
  %58 = getelementptr inbounds float, ptr %35, i64 2
  %59 = getelementptr inbounds i64, ptr %34, i64 2
  %60 = add i32 %37, 2
  %61 = icmp eq i32 %60, %32
  br i1 %61, label %89, label %33

62:                                               ; preds = %62, %23
  %63 = phi ptr [ %14, %23 ], [ %86, %62 ]
  %64 = phi ptr [ %10, %23 ], [ %85, %62 ]
  %65 = phi ptr [ %8, %23 ], [ %84, %62 ]
  %66 = phi i32 [ 0, %23 ], [ %87, %62 ]
  %67 = load float, ptr %64, align 4, !tbaa !95
  %68 = fpext float %67 to x86_fp80
  %69 = load i64, ptr %63, align 8, !tbaa !34
  %70 = getelementptr inbounds x86_fp80, ptr %20, i64 %69
  %71 = load x86_fp80, ptr %70, align 16, !tbaa !128
  %72 = fdiv x86_fp80 %68, %71
  %73 = fptrunc x86_fp80 %72 to float
  store float %73, ptr %65, align 4, !tbaa !95
  %74 = getelementptr inbounds float, ptr %65, i64 1
  %75 = getelementptr inbounds float, ptr %64, i64 1
  %76 = getelementptr inbounds i64, ptr %63, i64 1
  %77 = load float, ptr %75, align 4, !tbaa !95
  %78 = fpext float %77 to x86_fp80
  %79 = load i64, ptr %76, align 8, !tbaa !34
  %80 = getelementptr inbounds x86_fp80, ptr %20, i64 %79
  %81 = load x86_fp80, ptr %80, align 16, !tbaa !128
  %82 = fdiv x86_fp80 %78, %81
  %83 = fptrunc x86_fp80 %82 to float
  store float %83, ptr %74, align 4, !tbaa !95
  %84 = getelementptr inbounds float, ptr %65, i64 2
  %85 = getelementptr inbounds float, ptr %64, i64 2
  %86 = getelementptr inbounds i64, ptr %63, i64 2
  %87 = add i32 %66, 2
  %88 = icmp eq i32 %87, %24
  br i1 %88, label %103, label %62

89:                                               ; preds = %33, %26
  %90 = phi ptr [ %14, %26 ], [ %59, %33 ]
  %91 = phi ptr [ %10, %26 ], [ %58, %33 ]
  %92 = phi ptr [ %8, %26 ], [ %57, %33 ]
  %93 = icmp eq i32 %29, 0
  br i1 %93, label %116, label %94

94:                                               ; preds = %89
  %95 = load float, ptr %91, align 4, !tbaa !95
  %96 = fpext float %95 to x86_fp80
  %97 = fmul x86_fp80 %96, %3
  %98 = load i64, ptr %90, align 8, !tbaa !34
  %99 = getelementptr inbounds x86_fp80, ptr %28, i64 %98
  %100 = load x86_fp80, ptr %99, align 16, !tbaa !128
  %101 = fdiv x86_fp80 %97, %100
  %102 = fptrunc x86_fp80 %101 to float
  store float %102, ptr %92, align 4, !tbaa !95
  br label %116

103:                                              ; preds = %62, %18
  %104 = phi ptr [ %14, %18 ], [ %86, %62 ]
  %105 = phi ptr [ %10, %18 ], [ %85, %62 ]
  %106 = phi ptr [ %8, %18 ], [ %84, %62 ]
  %107 = icmp eq i32 %21, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %103
  %109 = load float, ptr %105, align 4, !tbaa !95
  %110 = fpext float %109 to x86_fp80
  %111 = load i64, ptr %104, align 8, !tbaa !34
  %112 = getelementptr inbounds x86_fp80, ptr %20, i64 %111
  %113 = load x86_fp80, ptr %112, align 16, !tbaa !128
  %114 = fdiv x86_fp80 %110, %113
  %115 = fptrunc x86_fp80 %114 to float
  store float %115, ptr %106, align 4, !tbaa !95
  br label %116

116:                                              ; preds = %108, %103, %94, %89, %17, %25
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE4SSORIfEEvRNS_6VectorIT_EEe(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, x86_fp80 noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %86, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = load ptr, ptr %13, align 8, !tbaa !125
  %17 = zext i32 %5 to i64
  %18 = load i64, ptr %11, align 8, !tbaa !34
  br label %33

19:                                               ; preds = %71
  %20 = add i32 %5, -1
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %22, label %86

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %24, i64 0, i32 8
  %26 = load ptr, ptr %25, align 8, !tbaa !32
  %27 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %24, i64 0, i32 9
  %28 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %30 = load ptr, ptr %28, align 8, !tbaa !125
  %31 = load ptr, ptr %29, align 8, !tbaa !106
  %32 = zext i32 %20 to i64
  br label %87

33:                                               ; preds = %7, %71
  %34 = phi i64 [ %18, %7 ], [ %38, %71 ]
  %35 = phi i64 [ 0, %7 ], [ %36, %71 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %11, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %71

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %12, align 8, !tbaa !46
  %44 = load ptr, ptr %13, align 8
  %45 = load ptr, ptr %14, align 8
  br label %46

46:                                               ; preds = %41, %66
  %47 = phi i64 [ %39, %41 ], [ %69, %66 ]
  %48 = phi i32 [ %42, %41 ], [ %68, %66 ]
  %49 = phi float [ 0.000000e+00, %41 ], [ %67, %66 ]
  %50 = getelementptr inbounds i32, ptr %43, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ne i32 %51, -1
  %53 = zext i32 %48 to i64
  %54 = icmp ugt i64 %35, %53
  %55 = and i1 %54, %52
  br i1 %55, label %56, label %66

56:                                               ; preds = %46
  %57 = getelementptr inbounds x86_fp80, ptr %44, i64 %47
  %58 = load x86_fp80, ptr %57, align 16, !tbaa !128
  %59 = zext i32 %51 to i64
  %60 = getelementptr inbounds float, ptr %45, i64 %59
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to x86_fp80
  %63 = fpext float %49 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %58, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to float
  br label %66

66:                                               ; preds = %56, %46
  %67 = phi float [ %65, %56 ], [ %49, %46 ]
  %68 = add i32 %48, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %38, %69
  br i1 %70, label %46, label %71

71:                                               ; preds = %66, %33
  %72 = phi float [ 0.000000e+00, %33 ], [ %67, %66 ]
  %73 = fpext float %72 to x86_fp80
  %74 = getelementptr inbounds float, ptr %15, i64 %35
  %75 = load float, ptr %74, align 4, !tbaa !95
  %76 = fpext float %75 to x86_fp80
  %77 = fneg x86_fp80 %73
  %78 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %77, x86_fp80 %2, x86_fp80 %76)
  %79 = fptrunc x86_fp80 %78 to float
  %80 = getelementptr inbounds x86_fp80, ptr %16, i64 %34
  %81 = load x86_fp80, ptr %80, align 16, !tbaa !128
  %82 = fpext float %79 to x86_fp80
  %83 = fdiv x86_fp80 %82, %81
  %84 = fptrunc x86_fp80 %83 to float
  store float %84, ptr %74, align 4, !tbaa !95
  %85 = icmp eq i64 %36, %17
  br i1 %85, label %19, label %33

86:                                               ; preds = %127, %3, %19
  ret void

87:                                               ; preds = %22, %127
  %88 = phi i64 [ %32, %22 ], [ %139, %127 ]
  %89 = phi i32 [ %5, %22 ], [ %141, %127 ]
  %90 = getelementptr inbounds i64, ptr %26, i64 %88
  %91 = load i64, ptr %90, align 8, !tbaa !34
  %92 = sext i32 %89 to i64
  %93 = getelementptr inbounds i64, ptr %26, i64 %92
  %94 = load i64, ptr %93, align 8, !tbaa !34
  %95 = and i64 %91, 4294967295
  %96 = icmp ugt i64 %94, %95
  br i1 %96, label %97, label %127

97:                                               ; preds = %87
  %98 = trunc i64 %91 to i32
  %99 = load ptr, ptr %27, align 8, !tbaa !46
  %100 = load ptr, ptr %28, align 8
  %101 = load ptr, ptr %29, align 8
  br label %102

102:                                              ; preds = %97, %122
  %103 = phi i64 [ %95, %97 ], [ %125, %122 ]
  %104 = phi i32 [ %98, %97 ], [ %124, %122 ]
  %105 = phi float [ 0.000000e+00, %97 ], [ %123, %122 ]
  %106 = getelementptr inbounds i32, ptr %99, i64 %103
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = icmp ne i32 %107, -1
  %109 = zext i32 %104 to i64
  %110 = icmp ult i64 %88, %109
  %111 = and i1 %110, %108
  br i1 %111, label %112, label %122

112:                                              ; preds = %102
  %113 = getelementptr inbounds x86_fp80, ptr %100, i64 %103
  %114 = load x86_fp80, ptr %113, align 16, !tbaa !128
  %115 = zext i32 %107 to i64
  %116 = getelementptr inbounds float, ptr %101, i64 %115
  %117 = load float, ptr %116, align 4, !tbaa !95
  %118 = fpext float %117 to x86_fp80
  %119 = fpext float %105 to x86_fp80
  %120 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %114, x86_fp80 %118, x86_fp80 %119)
  %121 = fptrunc x86_fp80 %120 to float
  br label %122

122:                                              ; preds = %112, %102
  %123 = phi float [ %121, %112 ], [ %105, %102 ]
  %124 = add i32 %104, 1
  %125 = zext i32 %124 to i64
  %126 = icmp ugt i64 %94, %125
  br i1 %126, label %102, label %127

127:                                              ; preds = %122, %87
  %128 = phi float [ 0.000000e+00, %87 ], [ %123, %122 ]
  %129 = fpext float %128 to x86_fp80
  %130 = fmul x86_fp80 %129, %2
  %131 = getelementptr inbounds x86_fp80, ptr %30, i64 %91
  %132 = load x86_fp80, ptr %131, align 16, !tbaa !128
  %133 = fdiv x86_fp80 %130, %132
  %134 = getelementptr inbounds float, ptr %31, i64 %88
  %135 = load float, ptr %134, align 4, !tbaa !95
  %136 = fpext float %135 to x86_fp80
  %137 = fsub x86_fp80 %136, %133
  %138 = fptrunc x86_fp80 %137 to float
  store float %138, ptr %134, align 4, !tbaa !95
  %139 = add nsw i64 %88, -1
  %140 = icmp sgt i64 %88, 0
  %141 = trunc i64 %88 to i32
  br i1 %140, label %87, label %86
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE4PSORIfEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, x86_fp80 noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !106
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !125
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %42, %5
  ret void

23:                                               ; preds = %11, %42
  %24 = phi i64 [ 0, %11 ], [ %50, %42 ]
  %25 = getelementptr inbounds i32, ptr %12, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !47
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds float, ptr %14, i64 %27
  %29 = load float, ptr %28, align 4, !tbaa !95
  %30 = getelementptr inbounds i64, ptr %16, i64 %27
  %31 = load i64, ptr %30, align 8, !tbaa !34
  %32 = add i32 %26, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i64, ptr %16, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %31, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %23
  %39 = trunc i64 %31 to i32
  %40 = load ptr, ptr %17, align 8, !tbaa !46
  %41 = load ptr, ptr %19, align 8
  br label %52

42:                                               ; preds = %73, %23
  %43 = phi float [ %29, %23 ], [ %74, %73 ]
  %44 = fpext float %43 to x86_fp80
  %45 = fmul x86_fp80 %44, %4
  %46 = getelementptr inbounds x86_fp80, ptr %20, i64 %31
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !128
  %48 = fdiv x86_fp80 %45, %47
  %49 = fptrunc x86_fp80 %48 to float
  store float %49, ptr %28, align 4, !tbaa !95
  %50 = add nuw nsw i64 %24, 1
  %51 = icmp eq i64 %50, %21
  br i1 %51, label %22, label %23

52:                                               ; preds = %38, %73
  %53 = phi i64 [ %36, %38 ], [ %76, %73 ]
  %54 = phi i32 [ %39, %38 ], [ %75, %73 ]
  %55 = phi float [ %29, %38 ], [ %74, %73 ]
  %56 = getelementptr inbounds i32, ptr %40, i64 %53
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %18, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %24, %61
  br i1 %62, label %63, label %73

63:                                               ; preds = %52
  %64 = getelementptr inbounds x86_fp80, ptr %41, i64 %53
  %65 = load x86_fp80, ptr %64, align 16, !tbaa !128
  %66 = getelementptr inbounds float, ptr %14, i64 %58
  %67 = load float, ptr %66, align 4, !tbaa !95
  %68 = fpext float %67 to x86_fp80
  %69 = fpext float %55 to x86_fp80
  %70 = fneg x86_fp80 %65
  %71 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %68, x86_fp80 %69)
  %72 = fptrunc x86_fp80 %71 to float
  br label %73

73:                                               ; preds = %63, %52
  %74 = phi float [ %72, %63 ], [ %55, %52 ]
  %75 = add i32 %54, 1
  %76 = zext i32 %75 to i64
  %77 = icmp ugt i64 %35, %76
  br i1 %77, label %52, label %42
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5TPSORIfEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, x86_fp80 noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !106
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !125
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %45, %5
  ret void

23:                                               ; preds = %11, %45
  %24 = phi i64 [ %21, %11 ], [ %25, %45 ]
  %25 = add nsw i64 %24, -1
  %26 = trunc i64 %25 to i32
  %27 = and i64 %25, 4294967295
  %28 = getelementptr inbounds i32, ptr %12, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !47
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds float, ptr %14, i64 %30
  %32 = load float, ptr %31, align 4, !tbaa !95
  %33 = getelementptr inbounds i64, ptr %16, i64 %30
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = add i32 %29, 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i64, ptr %16, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %23
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %17, align 8, !tbaa !46
  %44 = load ptr, ptr %19, align 8
  br label %54

45:                                               ; preds = %74, %23
  %46 = phi float [ %32, %23 ], [ %75, %74 ]
  %47 = fpext float %46 to x86_fp80
  %48 = fmul x86_fp80 %47, %4
  %49 = getelementptr inbounds x86_fp80, ptr %20, i64 %34
  %50 = load x86_fp80, ptr %49, align 16, !tbaa !128
  %51 = fdiv x86_fp80 %48, %50
  %52 = fptrunc x86_fp80 %51 to float
  store float %52, ptr %31, align 4, !tbaa !95
  %53 = icmp eq i32 %26, 0
  br i1 %53, label %22, label %23

54:                                               ; preds = %41, %74
  %55 = phi i64 [ %39, %41 ], [ %77, %74 ]
  %56 = phi i32 [ %42, %41 ], [ %76, %74 ]
  %57 = phi float [ %32, %41 ], [ %75, %74 ]
  %58 = getelementptr inbounds i32, ptr %43, i64 %55
  %59 = load i32, ptr %58, align 4, !tbaa !47
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i32, ptr %18, i64 %60
  %62 = load i32, ptr %61, align 4, !tbaa !47
  %63 = icmp ugt i32 %62, %26
  br i1 %63, label %64, label %74

64:                                               ; preds = %54
  %65 = getelementptr inbounds x86_fp80, ptr %44, i64 %55
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  %67 = getelementptr inbounds float, ptr %14, i64 %60
  %68 = load float, ptr %67, align 4, !tbaa !95
  %69 = fpext float %68 to x86_fp80
  %70 = fpext float %57 to x86_fp80
  %71 = fneg x86_fp80 %66
  %72 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %71, x86_fp80 %69, x86_fp80 %70)
  %73 = fptrunc x86_fp80 %72 to float
  br label %74

74:                                               ; preds = %64, %54
  %75 = phi float [ %73, %64 ], [ %57, %54 ]
  %76 = add i32 %56, 1
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %38, %77
  br i1 %78, label %54, label %45
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE8SOR_stepIfEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !106
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %8 to i64
  %21 = load i64, ptr %14, align 8, !tbaa !34
  br label %23

22:                                               ; preds = %36, %4
  ret void

23:                                               ; preds = %10, %36
  %24 = phi i64 [ %21, %10 ], [ %30, %36 ]
  %25 = phi i64 [ 0, %10 ], [ %28, %36 ]
  %26 = getelementptr inbounds float, ptr %12, i64 %25
  %27 = load float, ptr %26, align 4, !tbaa !95
  %28 = add nuw nsw i64 %25, 1
  %29 = getelementptr inbounds i64, ptr %14, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %24, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = trunc i64 %24 to i32
  %35 = load ptr, ptr %17, align 8, !tbaa !46
  br label %49

36:                                               ; preds = %49, %23
  %37 = phi float [ %27, %23 ], [ %64, %49 ]
  %38 = fpext float %37 to x86_fp80
  %39 = fmul x86_fp80 %38, %3
  %40 = getelementptr inbounds x86_fp80, ptr %16, i64 %24
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %42 = fdiv x86_fp80 %39, %41
  %43 = getelementptr inbounds float, ptr %19, i64 %25
  %44 = load float, ptr %43, align 4, !tbaa !95
  %45 = fpext float %44 to x86_fp80
  %46 = fadd x86_fp80 %42, %45
  %47 = fptrunc x86_fp80 %46 to float
  store float %47, ptr %43, align 4, !tbaa !95
  %48 = icmp eq i64 %28, %20
  br i1 %48, label %22, label %23

49:                                               ; preds = %33, %49
  %50 = phi i64 [ %31, %33 ], [ %66, %49 ]
  %51 = phi i32 [ %34, %33 ], [ %65, %49 ]
  %52 = phi float [ %27, %33 ], [ %64, %49 ]
  %53 = getelementptr inbounds x86_fp80, ptr %16, i64 %50
  %54 = load x86_fp80, ptr %53, align 16, !tbaa !128
  %55 = getelementptr inbounds i32, ptr %35, i64 %50
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds float, ptr %19, i64 %57
  %59 = load float, ptr %58, align 4, !tbaa !95
  %60 = fpext float %59 to x86_fp80
  %61 = fpext float %52 to x86_fp80
  %62 = fneg x86_fp80 %54
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %62, x86_fp80 %60, x86_fp80 %61)
  %64 = fptrunc x86_fp80 %63 to float
  %65 = add i32 %51, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %30, %66
  br i1 %67, label %49, label %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9TSOR_stepIfEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = add i32 %8, -1
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %22

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !106
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %19 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %38, %4
  ret void

23:                                               ; preds = %11, %38
  %24 = phi i64 [ %21, %11 ], [ %50, %38 ]
  %25 = phi i32 [ %8, %11 ], [ %52, %38 ]
  %26 = getelementptr inbounds float, ptr %13, i64 %24
  %27 = load float, ptr %26, align 4, !tbaa !95
  %28 = getelementptr inbounds i64, ptr %15, i64 %24
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = sext i32 %25 to i64
  %31 = getelementptr inbounds i64, ptr %15, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = and i64 %29, 4294967295
  %34 = icmp ugt i64 %32, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %23
  %36 = trunc i64 %29 to i32
  %37 = load ptr, ptr %18, align 8, !tbaa !46
  br label %53

38:                                               ; preds = %53, %23
  %39 = phi float [ %27, %23 ], [ %68, %53 ]
  %40 = fpext float %39 to x86_fp80
  %41 = fmul x86_fp80 %40, %3
  %42 = getelementptr inbounds x86_fp80, ptr %17, i64 %29
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !128
  %44 = fdiv x86_fp80 %41, %43
  %45 = getelementptr inbounds float, ptr %20, i64 %24
  %46 = load float, ptr %45, align 4, !tbaa !95
  %47 = fpext float %46 to x86_fp80
  %48 = fadd x86_fp80 %44, %47
  %49 = fptrunc x86_fp80 %48 to float
  store float %49, ptr %45, align 4, !tbaa !95
  %50 = add nsw i64 %24, -1
  %51 = icmp sgt i64 %24, 0
  %52 = trunc i64 %24 to i32
  br i1 %51, label %23, label %22

53:                                               ; preds = %35, %53
  %54 = phi i64 [ %33, %35 ], [ %70, %53 ]
  %55 = phi i32 [ %36, %35 ], [ %69, %53 ]
  %56 = phi float [ %27, %35 ], [ %68, %53 ]
  %57 = getelementptr inbounds x86_fp80, ptr %17, i64 %54
  %58 = load x86_fp80, ptr %57, align 16, !tbaa !128
  %59 = getelementptr inbounds i32, ptr %37, i64 %54
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds float, ptr %20, i64 %61
  %63 = load float, ptr %62, align 4, !tbaa !95
  %64 = fpext float %63 to x86_fp80
  %65 = fpext float %56 to x86_fp80
  %66 = fneg x86_fp80 %58
  %67 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %64, x86_fp80 %65)
  %68 = fptrunc x86_fp80 %67 to float
  %69 = add i32 %55, 1
  %70 = zext i32 %69 to i64
  %71 = icmp ugt i64 %32, %70
  br i1 %71, label %53, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9SSOR_stepIfEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %123, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !106
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %8 to i64
  %21 = load i64, ptr %14, align 8, !tbaa !34
  br label %22

22:                                               ; preds = %35, %10
  %23 = phi i64 [ %21, %10 ], [ %29, %35 ]
  %24 = phi i64 [ 0, %10 ], [ %27, %35 ]
  %25 = getelementptr inbounds float, ptr %12, i64 %24
  %26 = load float, ptr %25, align 4, !tbaa !95
  %27 = add nuw nsw i64 %24, 1
  %28 = getelementptr inbounds i64, ptr %14, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %23, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %22
  %33 = trunc i64 %23 to i32
  %34 = load ptr, ptr %17, align 8, !tbaa !46
  br label %48

35:                                               ; preds = %48, %22
  %36 = phi float [ %26, %22 ], [ %63, %48 ]
  %37 = fpext float %36 to x86_fp80
  %38 = fmul x86_fp80 %37, %3
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %23
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !128
  %41 = fdiv x86_fp80 %38, %40
  %42 = getelementptr inbounds float, ptr %19, i64 %24
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = fadd x86_fp80 %41, %44
  %46 = fptrunc x86_fp80 %45 to float
  store float %46, ptr %42, align 4, !tbaa !95
  %47 = icmp eq i64 %27, %20
  br i1 %47, label %67, label %22

48:                                               ; preds = %48, %32
  %49 = phi i64 [ %30, %32 ], [ %65, %48 ]
  %50 = phi i32 [ %33, %32 ], [ %64, %48 ]
  %51 = phi float [ %26, %32 ], [ %63, %48 ]
  %52 = getelementptr inbounds x86_fp80, ptr %16, i64 %49
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = getelementptr inbounds i32, ptr %34, i64 %49
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds float, ptr %19, i64 %56
  %58 = load float, ptr %57, align 4, !tbaa !95
  %59 = fpext float %58 to x86_fp80
  %60 = fpext float %51 to x86_fp80
  %61 = fneg x86_fp80 %53
  %62 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %61, x86_fp80 %59, x86_fp80 %60)
  %63 = fptrunc x86_fp80 %62 to float
  %64 = add i32 %50, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %29, %65
  br i1 %66, label %48, label %35

67:                                               ; preds = %35
  %68 = add i32 %8, -1
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %70, label %123

70:                                               ; preds = %67
  %71 = load ptr, ptr %15, align 8
  %72 = load ptr, ptr %18, align 8
  %73 = zext i32 %68 to i64
  br label %74

74:                                               ; preds = %89, %70
  %75 = phi i64 [ %73, %70 ], [ %101, %89 ]
  %76 = phi i32 [ %8, %70 ], [ %103, %89 ]
  %77 = getelementptr inbounds float, ptr %12, i64 %75
  %78 = load float, ptr %77, align 4, !tbaa !95
  %79 = getelementptr inbounds i64, ptr %14, i64 %75
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = sext i32 %76 to i64
  %82 = getelementptr inbounds i64, ptr %14, i64 %81
  %83 = load i64, ptr %82, align 8, !tbaa !34
  %84 = and i64 %80, 4294967295
  %85 = icmp ugt i64 %83, %84
  br i1 %85, label %86, label %89

86:                                               ; preds = %74
  %87 = trunc i64 %80 to i32
  %88 = load ptr, ptr %17, align 8, !tbaa !46
  br label %104

89:                                               ; preds = %104, %74
  %90 = phi float [ %78, %74 ], [ %119, %104 ]
  %91 = fpext float %90 to x86_fp80
  %92 = fmul x86_fp80 %91, %3
  %93 = getelementptr inbounds x86_fp80, ptr %71, i64 %80
  %94 = load x86_fp80, ptr %93, align 16, !tbaa !128
  %95 = fdiv x86_fp80 %92, %94
  %96 = getelementptr inbounds float, ptr %72, i64 %75
  %97 = load float, ptr %96, align 4, !tbaa !95
  %98 = fpext float %97 to x86_fp80
  %99 = fadd x86_fp80 %95, %98
  %100 = fptrunc x86_fp80 %99 to float
  store float %100, ptr %96, align 4, !tbaa !95
  %101 = add nsw i64 %75, -1
  %102 = icmp sgt i64 %75, 0
  %103 = trunc i64 %75 to i32
  br i1 %102, label %74, label %123

104:                                              ; preds = %104, %86
  %105 = phi i64 [ %84, %86 ], [ %121, %104 ]
  %106 = phi i32 [ %87, %86 ], [ %120, %104 ]
  %107 = phi float [ %78, %86 ], [ %119, %104 ]
  %108 = getelementptr inbounds x86_fp80, ptr %71, i64 %105
  %109 = load x86_fp80, ptr %108, align 16, !tbaa !128
  %110 = getelementptr inbounds i32, ptr %88, i64 %105
  %111 = load i32, ptr %110, align 4, !tbaa !47
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds float, ptr %72, i64 %112
  %114 = load float, ptr %113, align 4, !tbaa !95
  %115 = fpext float %114 to x86_fp80
  %116 = fpext float %107 to x86_fp80
  %117 = fneg x86_fp80 %109
  %118 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %117, x86_fp80 %115, x86_fp80 %116)
  %119 = fptrunc x86_fp80 %118 to float
  %120 = add i32 %106, 1
  %121 = zext i32 %120 to i64
  %122 = icmp ugt i64 %83, %121
  br i1 %122, label %104, label %89

123:                                              ; preds = %89, %4, %67
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIeE18matrix_norm_squareIeEET_RKNS_6VectorIS3_EE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !33
  %7 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !125
  %9 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %4, i64 0, i32 9
  %14 = load ptr, ptr %13, align 8, !tbaa !46
  %15 = load i64, ptr %10, align 8, !tbaa !34
  %16 = getelementptr inbounds i32, ptr %14, i64 %15
  %17 = getelementptr inbounds x86_fp80, ptr %8, i64 %15
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %6 to i64
  br label %23

21:                                               ; preds = %46, %2
  %22 = phi x86_fp80 [ 0xK00000000000000000000, %2 ], [ %52, %46 ]
  ret x86_fp80 %22

23:                                               ; preds = %12, %46
  %24 = phi i64 [ 0, %12 ], [ %28, %46 ]
  %25 = phi x86_fp80 [ 0xK00000000000000000000, %12 ], [ %52, %46 ]
  %26 = phi ptr [ %16, %12 ], [ %49, %46 ]
  %27 = phi ptr [ %17, %12 ], [ %48, %46 ]
  %28 = add nuw nsw i64 %24, 1
  %29 = getelementptr inbounds i64, ptr %10, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = getelementptr inbounds x86_fp80, ptr %8, i64 %30
  %32 = icmp eq ptr %27, %31
  br i1 %32, label %46, label %33

33:                                               ; preds = %23, %33
  %34 = phi ptr [ %39, %33 ], [ %26, %23 ]
  %35 = phi ptr [ %37, %33 ], [ %27, %23 ]
  %36 = phi x86_fp80 [ %44, %33 ], [ 0xK00000000000000000000, %23 ]
  %37 = getelementptr inbounds x86_fp80, ptr %35, i64 1
  %38 = load x86_fp80, ptr %35, align 16, !tbaa !128
  %39 = getelementptr inbounds i32, ptr %34, i64 1
  %40 = load i32, ptr %34, align 4, !tbaa !47
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds x86_fp80, ptr %19, i64 %41
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !128
  %44 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %38, x86_fp80 %43, x86_fp80 %36)
  %45 = icmp eq ptr %37, %31
  br i1 %45, label %46, label %33

46:                                               ; preds = %33, %23
  %47 = phi x86_fp80 [ 0xK00000000000000000000, %23 ], [ %44, %33 ]
  %48 = phi ptr [ %27, %23 ], [ %31, %33 ]
  %49 = phi ptr [ %26, %23 ], [ %39, %33 ]
  %50 = getelementptr inbounds x86_fp80, ptr %19, i64 %24
  %51 = load x86_fp80, ptr %50, align 16, !tbaa !128
  %52 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %51, x86_fp80 %47, x86_fp80 %25)
  %53 = icmp eq i64 %28, %20
  br i1 %53, label %21, label %23
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIeE21matrix_scalar_productIeEET_RKNS_6VectorIS3_EES7_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = load i64, ptr %11, align 8, !tbaa !34
  %17 = getelementptr inbounds i32, ptr %15, i64 %16
  %18 = getelementptr inbounds x86_fp80, ptr %9, i64 %16
  %19 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !135
  %23 = zext i32 %7 to i64
  br label %26

24:                                               ; preds = %49, %3
  %25 = phi x86_fp80 [ 0xK00000000000000000000, %3 ], [ %55, %49 ]
  ret x86_fp80 %25

26:                                               ; preds = %13, %49
  %27 = phi i64 [ 0, %13 ], [ %31, %49 ]
  %28 = phi x86_fp80 [ 0xK00000000000000000000, %13 ], [ %55, %49 ]
  %29 = phi ptr [ %17, %13 ], [ %52, %49 ]
  %30 = phi ptr [ %18, %13 ], [ %51, %49 ]
  %31 = add nuw nsw i64 %27, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = getelementptr inbounds x86_fp80, ptr %9, i64 %33
  %35 = icmp eq ptr %30, %34
  br i1 %35, label %49, label %36

36:                                               ; preds = %26, %36
  %37 = phi ptr [ %42, %36 ], [ %29, %26 ]
  %38 = phi ptr [ %40, %36 ], [ %30, %26 ]
  %39 = phi x86_fp80 [ %47, %36 ], [ 0xK00000000000000000000, %26 ]
  %40 = getelementptr inbounds x86_fp80, ptr %38, i64 1
  %41 = load x86_fp80, ptr %38, align 16, !tbaa !128
  %42 = getelementptr inbounds i32, ptr %37, i64 1
  %43 = load i32, ptr %37, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %20, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %39)
  %48 = icmp eq ptr %40, %34
  br i1 %48, label %49, label %36

49:                                               ; preds = %36, %26
  %50 = phi x86_fp80 [ 0xK00000000000000000000, %26 ], [ %47, %36 ]
  %51 = phi ptr [ %30, %26 ], [ %34, %36 ]
  %52 = phi ptr [ %29, %26 ], [ %42, %36 ]
  %53 = getelementptr inbounds x86_fp80, ptr %22, i64 %27
  %54 = load x86_fp80, ptr %53, align 16, !tbaa !128
  %55 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %54, x86_fp80 %50, x86_fp80 %28)
  %56 = icmp eq i64 %31, %23
  br i1 %56, label %24, label %26
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef x86_fp80 @_ZNK6dealii12SparseMatrixIeE8residualIeEET_RNS_6VectorIS3_EERKS5_S8_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.27", ptr %3, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !135
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !135
  %22 = zext i32 %8 to i64
  %23 = load i64, ptr %14, align 8, !tbaa !34
  br label %27

24:                                               ; preds = %41, %4
  %25 = phi x86_fp80 [ 0xK00000000000000000000, %4 ], [ %44, %41 ]
  %26 = tail call x86_fp80 @sqrtl(x86_fp80 noundef %25) #17
  ret x86_fp80 %26

27:                                               ; preds = %10, %41
  %28 = phi i64 [ %23, %10 ], [ %35, %41 ]
  %29 = phi i64 [ 0, %10 ], [ %33, %41 ]
  %30 = phi x86_fp80 [ 0xK00000000000000000000, %10 ], [ %44, %41 ]
  %31 = getelementptr inbounds x86_fp80, ptr %12, i64 %29
  %32 = load x86_fp80, ptr %31, align 16, !tbaa !128
  %33 = add nuw nsw i64 %29, 1
  %34 = getelementptr inbounds i64, ptr %14, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %28, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %27
  %39 = trunc i64 %28 to i32
  %40 = load ptr, ptr %15, align 8, !tbaa !46
  br label %46

41:                                               ; preds = %46, %27
  %42 = phi x86_fp80 [ %32, %27 ], [ %58, %46 ]
  %43 = getelementptr inbounds x86_fp80, ptr %21, i64 %29
  store x86_fp80 %42, ptr %43, align 16, !tbaa !128
  %44 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %42, x86_fp80 %42, x86_fp80 %30)
  %45 = icmp eq i64 %33, %22
  br i1 %45, label %24, label %27

46:                                               ; preds = %38, %46
  %47 = phi i64 [ %36, %38 ], [ %60, %46 ]
  %48 = phi i32 [ %39, %38 ], [ %59, %46 ]
  %49 = phi x86_fp80 [ %32, %38 ], [ %58, %46 ]
  %50 = getelementptr inbounds i32, ptr %40, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = getelementptr inbounds x86_fp80, ptr %17, i64 %47
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds x86_fp80, ptr %19, i64 %54
  %56 = load x86_fp80, ptr %55, align 16, !tbaa !128
  %57 = fneg x86_fp80 %53
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %57, x86_fp80 %56, x86_fp80 %49)
  %59 = add i32 %48, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %35, %60
  br i1 %61, label %46, label %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE17precondition_SSORIeEEvRNS_6VectorIT_EERKS5_eRKSt6vectorIjSaIjEE(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !138
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !135
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !195
  %16 = load ptr, ptr %4, align 8, !tbaa !197
  %17 = icmp eq ptr %15, %16
  %18 = icmp eq i32 %7, 0
  br i1 %17, label %27, label %19

19:                                               ; preds = %5
  br i1 %18, label %566, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !135
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %26 = zext i32 %7 to i64
  br label %47

27:                                               ; preds = %5
  br i1 %18, label %566, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !135
  %31 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = ptrtoint ptr %32 to i64
  %34 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %7 to i64
  %37 = load i64, ptr %11, align 8, !tbaa !34
  br label %236

38:                                               ; preds = %82
  br i1 %18, label %566, label %39

39:                                               ; preds = %38
  %40 = fsub x86_fp80 0xK40008000000000000000, %3
  %41 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !125
  %43 = and i32 %7, 1
  %44 = icmp eq i32 %7, 1
  br i1 %44, label %116, label %45

45:                                               ; preds = %39
  %46 = and i32 %7, -2
  br label %137

47:                                               ; preds = %20, %82
  %48 = phi i64 [ 0, %20 ], [ %89, %82 ]
  %49 = phi ptr [ %11, %20 ], [ %91, %82 ]
  %50 = phi ptr [ %13, %20 ], [ %90, %82 ]
  %51 = getelementptr inbounds x86_fp80, ptr %22, i64 %48
  %52 = load x86_fp80, ptr %51, align 16, !tbaa !128
  store x86_fp80 %52, ptr %50, align 16, !tbaa !128
  %53 = getelementptr inbounds i32, ptr %16, i64 %48
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = load i64, ptr %49, align 8, !tbaa !34
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, 1
  %58 = icmp ult i32 %57, %54
  br i1 %58, label %59, label %82

59:                                               ; preds = %47
  %60 = load ptr, ptr %25, align 8, !tbaa !46
  %61 = zext i32 %57 to i64
  %62 = xor i32 %56, -1
  %63 = add i32 %54, %62
  %64 = add i32 %54, -2
  %65 = and i32 %63, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %77, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds x86_fp80, ptr %24, i64 %61
  %69 = load x86_fp80, ptr %68, align 16, !tbaa !128
  %70 = getelementptr inbounds i32, ptr %60, i64 %61
  %71 = load i32, ptr %70, align 4, !tbaa !47
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds x86_fp80, ptr %13, i64 %72
  %74 = load x86_fp80, ptr %73, align 16, !tbaa !128
  %75 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %74, x86_fp80 0xK00000000000000000000)
  %76 = add nuw nsw i64 %61, 1
  br label %77

77:                                               ; preds = %67, %59
  %78 = phi x86_fp80 [ undef, %59 ], [ %75, %67 ]
  %79 = phi i64 [ %61, %59 ], [ %76, %67 ]
  %80 = phi x86_fp80 [ 0xK00000000000000000000, %59 ], [ %75, %67 ]
  %81 = icmp eq i32 %64, %56
  br i1 %81, label %82, label %93

82:                                               ; preds = %77, %93, %47
  %83 = phi x86_fp80 [ 0xK00000000000000000000, %47 ], [ %78, %77 ], [ %112, %93 ]
  %84 = fneg x86_fp80 %83
  %85 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %84, x86_fp80 %3, x86_fp80 %52)
  store x86_fp80 %85, ptr %50, align 16, !tbaa !128
  %86 = getelementptr inbounds x86_fp80, ptr %24, i64 %55
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  %88 = fdiv x86_fp80 %85, %87
  store x86_fp80 %88, ptr %50, align 16, !tbaa !128
  %89 = add nuw nsw i64 %48, 1
  %90 = getelementptr inbounds x86_fp80, ptr %50, i64 1
  %91 = getelementptr inbounds i64, ptr %49, i64 1
  %92 = icmp eq i64 %89, %26
  br i1 %92, label %38, label %47

93:                                               ; preds = %77, %93
  %94 = phi i64 [ %113, %93 ], [ %79, %77 ]
  %95 = phi x86_fp80 [ %112, %93 ], [ %80, %77 ]
  %96 = getelementptr inbounds x86_fp80, ptr %24, i64 %94
  %97 = load x86_fp80, ptr %96, align 16, !tbaa !128
  %98 = getelementptr inbounds i32, ptr %60, i64 %94
  %99 = load i32, ptr %98, align 4, !tbaa !47
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds x86_fp80, ptr %13, i64 %100
  %102 = load x86_fp80, ptr %101, align 16, !tbaa !128
  %103 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %97, x86_fp80 %102, x86_fp80 %95)
  %104 = add nuw nsw i64 %94, 1
  %105 = getelementptr inbounds x86_fp80, ptr %24, i64 %104
  %106 = load x86_fp80, ptr %105, align 16, !tbaa !128
  %107 = getelementptr inbounds i32, ptr %60, i64 %104
  %108 = load i32, ptr %107, align 4, !tbaa !47
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds x86_fp80, ptr %13, i64 %109
  %111 = load x86_fp80, ptr %110, align 16, !tbaa !128
  %112 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %106, x86_fp80 %111, x86_fp80 %103)
  %113 = add nuw nsw i64 %94, 2
  %114 = trunc i64 %113 to i32
  %115 = icmp eq i32 %54, %114
  br i1 %115, label %82, label %93

116:                                              ; preds = %137, %39
  %117 = phi ptr [ %11, %39 ], [ %155, %137 ]
  %118 = phi ptr [ %13, %39 ], [ %156, %137 ]
  %119 = icmp eq i32 %43, 0
  br i1 %119, label %127, label %120

120:                                              ; preds = %116
  %121 = load i64, ptr %117, align 8, !tbaa !34
  %122 = getelementptr inbounds x86_fp80, ptr %42, i64 %121
  %123 = load x86_fp80, ptr %122, align 16, !tbaa !128
  %124 = fmul x86_fp80 %40, %123
  %125 = load x86_fp80, ptr %118, align 16, !tbaa !128
  %126 = fmul x86_fp80 %125, %124
  store x86_fp80 %126, ptr %118, align 16, !tbaa !128
  br label %127

127:                                              ; preds = %116, %120
  %128 = add i32 %7, -1
  %129 = icmp sgt i32 %128, -1
  br i1 %129, label %130, label %566

130:                                              ; preds = %127
  %131 = zext i32 %128 to i64
  %132 = getelementptr inbounds x86_fp80, ptr %13, i64 %131
  %133 = getelementptr inbounds i64, ptr %11, i64 %131
  %134 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %135 = load ptr, ptr %134, align 8
  %136 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  br label %159

137:                                              ; preds = %137, %45
  %138 = phi ptr [ %11, %45 ], [ %155, %137 ]
  %139 = phi ptr [ %13, %45 ], [ %156, %137 ]
  %140 = phi i32 [ 0, %45 ], [ %157, %137 ]
  %141 = load i64, ptr %138, align 8, !tbaa !34
  %142 = getelementptr inbounds x86_fp80, ptr %42, i64 %141
  %143 = load x86_fp80, ptr %142, align 16, !tbaa !128
  %144 = fmul x86_fp80 %40, %143
  %145 = load x86_fp80, ptr %139, align 16, !tbaa !128
  %146 = fmul x86_fp80 %145, %144
  store x86_fp80 %146, ptr %139, align 16, !tbaa !128
  %147 = getelementptr inbounds i64, ptr %138, i64 1
  %148 = getelementptr inbounds x86_fp80, ptr %139, i64 1
  %149 = load i64, ptr %147, align 8, !tbaa !34
  %150 = getelementptr inbounds x86_fp80, ptr %42, i64 %149
  %151 = load x86_fp80, ptr %150, align 16, !tbaa !128
  %152 = fmul x86_fp80 %40, %151
  %153 = load x86_fp80, ptr %148, align 16, !tbaa !128
  %154 = fmul x86_fp80 %153, %152
  store x86_fp80 %154, ptr %148, align 16, !tbaa !128
  %155 = getelementptr inbounds i64, ptr %138, i64 2
  %156 = getelementptr inbounds x86_fp80, ptr %139, i64 2
  %157 = add i32 %140, 2
  %158 = icmp eq i32 %157, %46
  br i1 %158, label %116, label %137

159:                                              ; preds = %130, %192
  %160 = phi i64 [ %131, %130 ], [ %201, %192 ]
  %161 = phi ptr [ %133, %130 ], [ %202, %192 ]
  %162 = phi ptr [ %132, %130 ], [ %203, %192 ]
  %163 = getelementptr inbounds i64, ptr %161, i64 1
  %164 = load i64, ptr %163, align 8, !tbaa !34
  %165 = trunc i64 %164 to i32
  %166 = getelementptr inbounds i32, ptr %16, i64 %160
  %167 = load i32, ptr %166, align 4, !tbaa !47
  %168 = icmp ult i32 %167, %165
  br i1 %168, label %169, label %192

169:                                              ; preds = %159
  %170 = load ptr, ptr %136, align 8, !tbaa !46
  %171 = zext i32 %167 to i64
  %172 = and i64 %164, 4294967295
  %173 = sub i64 %164, %171
  %174 = add nuw nsw i64 %171, 1
  %175 = and i64 %173, 1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %187, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds x86_fp80, ptr %135, i64 %171
  %179 = load x86_fp80, ptr %178, align 16, !tbaa !128
  %180 = getelementptr inbounds i32, ptr %170, i64 %171
  %181 = load i32, ptr %180, align 4, !tbaa !47
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds x86_fp80, ptr %13, i64 %182
  %184 = load x86_fp80, ptr %183, align 16, !tbaa !128
  %185 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %179, x86_fp80 %184, x86_fp80 0xK00000000000000000000)
  %186 = add nuw nsw i64 %171, 1
  br label %187

187:                                              ; preds = %177, %169
  %188 = phi x86_fp80 [ undef, %169 ], [ %185, %177 ]
  %189 = phi i64 [ %171, %169 ], [ %186, %177 ]
  %190 = phi x86_fp80 [ 0xK00000000000000000000, %169 ], [ %185, %177 ]
  %191 = icmp eq i64 %172, %174
  br i1 %191, label %192, label %205

192:                                              ; preds = %187, %205, %159
  %193 = phi x86_fp80 [ 0xK00000000000000000000, %159 ], [ %188, %187 ], [ %224, %205 ]
  %194 = load x86_fp80, ptr %162, align 16, !tbaa !128
  %195 = fneg x86_fp80 %193
  %196 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %195, x86_fp80 %3, x86_fp80 %194)
  store x86_fp80 %196, ptr %162, align 16, !tbaa !128
  %197 = load i64, ptr %161, align 8, !tbaa !34
  %198 = getelementptr inbounds x86_fp80, ptr %135, i64 %197
  %199 = load x86_fp80, ptr %198, align 16, !tbaa !128
  %200 = fdiv x86_fp80 %196, %199
  store x86_fp80 %200, ptr %162, align 16, !tbaa !128
  %201 = add nsw i64 %160, -1
  %202 = getelementptr inbounds i64, ptr %161, i64 -1
  %203 = getelementptr inbounds x86_fp80, ptr %162, i64 -1
  %204 = icmp sgt i64 %160, 0
  br i1 %204, label %159, label %566

205:                                              ; preds = %187, %205
  %206 = phi i64 [ %225, %205 ], [ %189, %187 ]
  %207 = phi x86_fp80 [ %224, %205 ], [ %190, %187 ]
  %208 = getelementptr inbounds x86_fp80, ptr %135, i64 %206
  %209 = load x86_fp80, ptr %208, align 16, !tbaa !128
  %210 = getelementptr inbounds i32, ptr %170, i64 %206
  %211 = load i32, ptr %210, align 4, !tbaa !47
  %212 = zext i32 %211 to i64
  %213 = getelementptr inbounds x86_fp80, ptr %13, i64 %212
  %214 = load x86_fp80, ptr %213, align 16, !tbaa !128
  %215 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %209, x86_fp80 %214, x86_fp80 %207)
  %216 = add nuw nsw i64 %206, 1
  %217 = getelementptr inbounds x86_fp80, ptr %135, i64 %216
  %218 = load x86_fp80, ptr %217, align 16, !tbaa !128
  %219 = getelementptr inbounds i32, ptr %170, i64 %216
  %220 = load i32, ptr %219, align 4, !tbaa !47
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds x86_fp80, ptr %13, i64 %221
  %223 = load x86_fp80, ptr %222, align 16, !tbaa !128
  %224 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %218, x86_fp80 %223, x86_fp80 %215)
  %225 = add nuw nsw i64 %206, 2
  %226 = icmp eq i64 %225, %172
  br i1 %226, label %192, label %205

227:                                              ; preds = %350
  br i1 %18, label %566, label %228

228:                                              ; preds = %227
  %229 = fsub x86_fp80 0xK40008000000000000000, %3
  %230 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %231 = load ptr, ptr %230, align 8, !tbaa !125
  %232 = and i32 %7, 1
  %233 = icmp eq i32 %7, 1
  br i1 %233, label %383, label %234

234:                                              ; preds = %228
  %235 = and i32 %7, -2
  br label %406

236:                                              ; preds = %28, %350
  %237 = phi i64 [ %37, %28 ], [ %246, %350 ]
  %238 = phi i64 [ 0, %28 ], [ %357, %350 ]
  %239 = phi ptr [ %11, %28 ], [ %245, %350 ]
  %240 = phi ptr [ %13, %28 ], [ %358, %350 ]
  %241 = getelementptr inbounds x86_fp80, ptr %30, i64 %238
  %242 = load x86_fp80, ptr %241, align 16, !tbaa !128
  store x86_fp80 %242, ptr %240, align 16, !tbaa !128
  %243 = add i64 %237, 1
  %244 = getelementptr inbounds i32, ptr %32, i64 %243
  %245 = getelementptr inbounds i64, ptr %239, i64 1
  %246 = load i64, ptr %245, align 8, !tbaa !34
  %247 = getelementptr inbounds i32, ptr %32, i64 %246
  %248 = ptrtoint ptr %247 to i64
  %249 = ptrtoint ptr %244 to i64
  %250 = sub i64 %248, %249
  %251 = lshr exact i64 %250, 2
  %252 = trunc i64 %251 to i32
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %319, label %254

254:                                              ; preds = %236, %307
  %255 = phi i32 [ %317, %307 ], [ %252, %236 ]
  %256 = phi ptr [ %318, %307 ], [ %244, %236 ]
  %257 = icmp ult i32 %255, 8
  br i1 %257, label %258, label %307

258:                                              ; preds = %254
  switch i32 %255, label %307 [
    i32 7, label %259
    i32 6, label %265
    i32 5, label %272
    i32 4, label %279
    i32 3, label %286
    i32 2, label %293
    i32 1, label %300
  ]

259:                                              ; preds = %258
  %260 = load i32, ptr %256, align 4, !tbaa !47
  %261 = zext i32 %260 to i64
  %262 = icmp ugt i64 %238, %261
  br i1 %262, label %263, label %319

263:                                              ; preds = %259
  %264 = getelementptr inbounds i32, ptr %256, i64 1
  br label %265

265:                                              ; preds = %258, %263
  %266 = phi ptr [ %264, %263 ], [ %256, %258 ]
  %267 = load i32, ptr %266, align 4, !tbaa !47
  %268 = zext i32 %267 to i64
  %269 = icmp ugt i64 %238, %268
  br i1 %269, label %270, label %319

270:                                              ; preds = %265
  %271 = getelementptr inbounds i32, ptr %266, i64 1
  br label %272

272:                                              ; preds = %258, %270
  %273 = phi ptr [ %271, %270 ], [ %256, %258 ]
  %274 = load i32, ptr %273, align 4, !tbaa !47
  %275 = zext i32 %274 to i64
  %276 = icmp ugt i64 %238, %275
  br i1 %276, label %277, label %319

277:                                              ; preds = %272
  %278 = getelementptr inbounds i32, ptr %273, i64 1
  br label %279

279:                                              ; preds = %258, %277
  %280 = phi ptr [ %278, %277 ], [ %256, %258 ]
  %281 = load i32, ptr %280, align 4, !tbaa !47
  %282 = zext i32 %281 to i64
  %283 = icmp ugt i64 %238, %282
  br i1 %283, label %284, label %319

284:                                              ; preds = %279
  %285 = getelementptr inbounds i32, ptr %280, i64 1
  br label %286

286:                                              ; preds = %258, %284
  %287 = phi ptr [ %285, %284 ], [ %256, %258 ]
  %288 = load i32, ptr %287, align 4, !tbaa !47
  %289 = zext i32 %288 to i64
  %290 = icmp ugt i64 %238, %289
  br i1 %290, label %291, label %319

291:                                              ; preds = %286
  %292 = getelementptr inbounds i32, ptr %287, i64 1
  br label %293

293:                                              ; preds = %258, %291
  %294 = phi ptr [ %292, %291 ], [ %256, %258 ]
  %295 = load i32, ptr %294, align 4, !tbaa !47
  %296 = zext i32 %295 to i64
  %297 = icmp ugt i64 %238, %296
  br i1 %297, label %298, label %319

298:                                              ; preds = %293
  %299 = getelementptr inbounds i32, ptr %294, i64 1
  br label %300

300:                                              ; preds = %258, %298
  %301 = phi ptr [ %299, %298 ], [ %256, %258 ]
  %302 = load i32, ptr %301, align 4, !tbaa !47
  %303 = zext i32 %302 to i64
  %304 = icmp ugt i64 %238, %303
  %305 = zext i1 %304 to i64
  %306 = getelementptr inbounds i32, ptr %301, i64 %305
  br label %319

307:                                              ; preds = %258, %254
  %308 = lshr i32 %255, 1
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds i32, ptr %256, i64 %309
  %311 = load i32, ptr %310, align 4, !tbaa !47
  %312 = zext i32 %311 to i64
  %313 = icmp ugt i64 %238, %312
  %314 = getelementptr inbounds i32, ptr %310, i64 1
  %315 = xor i32 %308, -1
  %316 = add i32 %255, %315
  %317 = select i1 %313, i32 %316, i32 %308
  %318 = select i1 %313, ptr %314, ptr %256
  br label %254

319:                                              ; preds = %236, %259, %265, %272, %279, %286, %293, %300
  %320 = phi ptr [ %244, %236 ], [ %256, %259 ], [ %266, %265 ], [ %273, %272 ], [ %280, %279 ], [ %287, %286 ], [ %294, %293 ], [ %306, %300 ]
  %321 = ptrtoint ptr %320 to i64
  %322 = sub i64 %321, %33
  %323 = lshr exact i64 %322, 2
  %324 = trunc i64 %323 to i32
  %325 = trunc i64 %237 to i32
  %326 = add i32 %325, 1
  %327 = icmp ult i32 %326, %324
  br i1 %327, label %328, label %350

328:                                              ; preds = %319
  %329 = zext i32 %326 to i64
  %330 = xor i32 %325, -1
  %331 = add i32 %330, %324
  %332 = add i32 %324, -2
  %333 = and i32 %331, 1
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %345, label %335

335:                                              ; preds = %328
  %336 = getelementptr inbounds x86_fp80, ptr %35, i64 %329
  %337 = load x86_fp80, ptr %336, align 16, !tbaa !128
  %338 = getelementptr inbounds i32, ptr %32, i64 %329
  %339 = load i32, ptr %338, align 4, !tbaa !47
  %340 = zext i32 %339 to i64
  %341 = getelementptr inbounds x86_fp80, ptr %13, i64 %340
  %342 = load x86_fp80, ptr %341, align 16, !tbaa !128
  %343 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %337, x86_fp80 %342, x86_fp80 0xK00000000000000000000)
  %344 = add nuw nsw i64 %329, 1
  br label %345

345:                                              ; preds = %335, %328
  %346 = phi x86_fp80 [ undef, %328 ], [ %343, %335 ]
  %347 = phi i64 [ %329, %328 ], [ %344, %335 ]
  %348 = phi x86_fp80 [ 0xK00000000000000000000, %328 ], [ %343, %335 ]
  %349 = icmp eq i32 %332, %325
  br i1 %349, label %350, label %360

350:                                              ; preds = %345, %360, %319
  %351 = phi x86_fp80 [ 0xK00000000000000000000, %319 ], [ %346, %345 ], [ %379, %360 ]
  %352 = fneg x86_fp80 %351
  %353 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %352, x86_fp80 %3, x86_fp80 %242)
  store x86_fp80 %353, ptr %240, align 16, !tbaa !128
  %354 = getelementptr inbounds x86_fp80, ptr %35, i64 %237
  %355 = load x86_fp80, ptr %354, align 16, !tbaa !128
  %356 = fdiv x86_fp80 %353, %355
  store x86_fp80 %356, ptr %240, align 16, !tbaa !128
  %357 = add nuw nsw i64 %238, 1
  %358 = getelementptr inbounds x86_fp80, ptr %240, i64 1
  %359 = icmp eq i64 %357, %36
  br i1 %359, label %227, label %236

360:                                              ; preds = %345, %360
  %361 = phi i64 [ %380, %360 ], [ %347, %345 ]
  %362 = phi x86_fp80 [ %379, %360 ], [ %348, %345 ]
  %363 = getelementptr inbounds x86_fp80, ptr %35, i64 %361
  %364 = load x86_fp80, ptr %363, align 16, !tbaa !128
  %365 = getelementptr inbounds i32, ptr %32, i64 %361
  %366 = load i32, ptr %365, align 4, !tbaa !47
  %367 = zext i32 %366 to i64
  %368 = getelementptr inbounds x86_fp80, ptr %13, i64 %367
  %369 = load x86_fp80, ptr %368, align 16, !tbaa !128
  %370 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %364, x86_fp80 %369, x86_fp80 %362)
  %371 = add nuw nsw i64 %361, 1
  %372 = getelementptr inbounds x86_fp80, ptr %35, i64 %371
  %373 = load x86_fp80, ptr %372, align 16, !tbaa !128
  %374 = getelementptr inbounds i32, ptr %32, i64 %371
  %375 = load i32, ptr %374, align 4, !tbaa !47
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds x86_fp80, ptr %13, i64 %376
  %378 = load x86_fp80, ptr %377, align 16, !tbaa !128
  %379 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %373, x86_fp80 %378, x86_fp80 %370)
  %380 = add nuw nsw i64 %361, 2
  %381 = trunc i64 %380 to i32
  %382 = icmp eq i32 %381, %324
  br i1 %382, label %350, label %360

383:                                              ; preds = %406, %228
  %384 = phi ptr [ %11, %228 ], [ %424, %406 ]
  %385 = phi ptr [ %13, %228 ], [ %425, %406 ]
  %386 = icmp eq i32 %232, 0
  br i1 %386, label %394, label %387

387:                                              ; preds = %383
  %388 = load i64, ptr %384, align 8, !tbaa !34
  %389 = getelementptr inbounds x86_fp80, ptr %231, i64 %388
  %390 = load x86_fp80, ptr %389, align 16, !tbaa !128
  %391 = fmul x86_fp80 %229, %390
  %392 = load x86_fp80, ptr %385, align 16, !tbaa !128
  %393 = fmul x86_fp80 %392, %391
  store x86_fp80 %393, ptr %385, align 16, !tbaa !128
  br label %394

394:                                              ; preds = %383, %387
  %395 = add i32 %7, -1
  %396 = icmp sgt i32 %395, -1
  br i1 %396, label %397, label %566

397:                                              ; preds = %394
  %398 = zext i32 %395 to i64
  %399 = getelementptr inbounds x86_fp80, ptr %13, i64 %398
  %400 = getelementptr inbounds i64, ptr %11, i64 %398
  %401 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %402 = load ptr, ptr %401, align 8, !tbaa !46
  %403 = ptrtoint ptr %402 to i64
  %404 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %405 = load ptr, ptr %404, align 8
  br label %428

406:                                              ; preds = %406, %234
  %407 = phi ptr [ %11, %234 ], [ %424, %406 ]
  %408 = phi ptr [ %13, %234 ], [ %425, %406 ]
  %409 = phi i32 [ 0, %234 ], [ %426, %406 ]
  %410 = load i64, ptr %407, align 8, !tbaa !34
  %411 = getelementptr inbounds x86_fp80, ptr %231, i64 %410
  %412 = load x86_fp80, ptr %411, align 16, !tbaa !128
  %413 = fmul x86_fp80 %229, %412
  %414 = load x86_fp80, ptr %408, align 16, !tbaa !128
  %415 = fmul x86_fp80 %414, %413
  store x86_fp80 %415, ptr %408, align 16, !tbaa !128
  %416 = getelementptr inbounds i64, ptr %407, i64 1
  %417 = getelementptr inbounds x86_fp80, ptr %408, i64 1
  %418 = load i64, ptr %416, align 8, !tbaa !34
  %419 = getelementptr inbounds x86_fp80, ptr %231, i64 %418
  %420 = load x86_fp80, ptr %419, align 16, !tbaa !128
  %421 = fmul x86_fp80 %229, %420
  %422 = load x86_fp80, ptr %417, align 16, !tbaa !128
  %423 = fmul x86_fp80 %422, %421
  store x86_fp80 %423, ptr %417, align 16, !tbaa !128
  %424 = getelementptr inbounds i64, ptr %407, i64 2
  %425 = getelementptr inbounds x86_fp80, ptr %408, i64 2
  %426 = add i32 %409, 2
  %427 = icmp eq i32 %426, %235
  br i1 %427, label %383, label %406

428:                                              ; preds = %397, %532
  %429 = phi ptr [ %400, %397 ], [ %541, %532 ]
  %430 = phi ptr [ %399, %397 ], [ %542, %532 ]
  %431 = phi i32 [ %395, %397 ], [ %540, %532 ]
  %432 = getelementptr inbounds i64, ptr %429, i64 1
  %433 = load i64, ptr %432, align 8, !tbaa !34
  %434 = trunc i64 %433 to i32
  %435 = load i64, ptr %429, align 8, !tbaa !34
  %436 = add i64 %435, 1
  %437 = getelementptr inbounds i32, ptr %402, i64 %436
  %438 = and i64 %433, 4294967295
  %439 = getelementptr inbounds i32, ptr %402, i64 %438
  %440 = ptrtoint ptr %439 to i64
  %441 = ptrtoint ptr %437 to i64
  %442 = sub i64 %440, %441
  %443 = lshr exact i64 %442, 2
  %444 = trunc i64 %443 to i32
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %503, label %446

446:                                              ; preds = %428, %492
  %447 = phi i32 [ %501, %492 ], [ %444, %428 ]
  %448 = phi ptr [ %502, %492 ], [ %437, %428 ]
  %449 = icmp ult i32 %447, 8
  br i1 %449, label %450, label %492

450:                                              ; preds = %446
  switch i32 %447, label %492 [
    i32 7, label %451
    i32 6, label %456
    i32 5, label %462
    i32 4, label %468
    i32 3, label %474
    i32 2, label %480
    i32 1, label %486
  ]

451:                                              ; preds = %450
  %452 = load i32, ptr %448, align 4, !tbaa !47
  %453 = icmp ult i32 %452, %431
  br i1 %453, label %454, label %503

454:                                              ; preds = %451
  %455 = getelementptr inbounds i32, ptr %448, i64 1
  br label %456

456:                                              ; preds = %450, %454
  %457 = phi ptr [ %455, %454 ], [ %448, %450 ]
  %458 = load i32, ptr %457, align 4, !tbaa !47
  %459 = icmp ult i32 %458, %431
  br i1 %459, label %460, label %503

460:                                              ; preds = %456
  %461 = getelementptr inbounds i32, ptr %457, i64 1
  br label %462

462:                                              ; preds = %450, %460
  %463 = phi ptr [ %461, %460 ], [ %448, %450 ]
  %464 = load i32, ptr %463, align 4, !tbaa !47
  %465 = icmp ult i32 %464, %431
  br i1 %465, label %466, label %503

466:                                              ; preds = %462
  %467 = getelementptr inbounds i32, ptr %463, i64 1
  br label %468

468:                                              ; preds = %450, %466
  %469 = phi ptr [ %467, %466 ], [ %448, %450 ]
  %470 = load i32, ptr %469, align 4, !tbaa !47
  %471 = icmp ult i32 %470, %431
  br i1 %471, label %472, label %503

472:                                              ; preds = %468
  %473 = getelementptr inbounds i32, ptr %469, i64 1
  br label %474

474:                                              ; preds = %450, %472
  %475 = phi ptr [ %473, %472 ], [ %448, %450 ]
  %476 = load i32, ptr %475, align 4, !tbaa !47
  %477 = icmp ult i32 %476, %431
  br i1 %477, label %478, label %503

478:                                              ; preds = %474
  %479 = getelementptr inbounds i32, ptr %475, i64 1
  br label %480

480:                                              ; preds = %450, %478
  %481 = phi ptr [ %479, %478 ], [ %448, %450 ]
  %482 = load i32, ptr %481, align 4, !tbaa !47
  %483 = icmp ult i32 %482, %431
  br i1 %483, label %484, label %503

484:                                              ; preds = %480
  %485 = getelementptr inbounds i32, ptr %481, i64 1
  br label %486

486:                                              ; preds = %450, %484
  %487 = phi ptr [ %485, %484 ], [ %448, %450 ]
  %488 = load i32, ptr %487, align 4, !tbaa !47
  %489 = icmp ult i32 %488, %431
  %490 = zext i1 %489 to i64
  %491 = getelementptr inbounds i32, ptr %487, i64 %490
  br label %503

492:                                              ; preds = %450, %446
  %493 = lshr i32 %447, 1
  %494 = zext i32 %493 to i64
  %495 = getelementptr inbounds i32, ptr %448, i64 %494
  %496 = load i32, ptr %495, align 4, !tbaa !47
  %497 = icmp ult i32 %496, %431
  %498 = getelementptr inbounds i32, ptr %495, i64 1
  %499 = xor i32 %493, -1
  %500 = add i32 %447, %499
  %501 = select i1 %497, i32 %500, i32 %493
  %502 = select i1 %497, ptr %498, ptr %448
  br label %446

503:                                              ; preds = %428, %451, %456, %462, %468, %474, %480, %486
  %504 = phi ptr [ %437, %428 ], [ %448, %451 ], [ %457, %456 ], [ %463, %462 ], [ %469, %468 ], [ %475, %474 ], [ %481, %480 ], [ %491, %486 ]
  %505 = ptrtoint ptr %504 to i64
  %506 = sub i64 %505, %403
  %507 = lshr exact i64 %506, 2
  %508 = trunc i64 %507 to i32
  %509 = icmp ult i32 %508, %434
  br i1 %509, label %510, label %532

510:                                              ; preds = %503
  %511 = and i64 %507, 4294967295
  %512 = and i64 %433, 4294967295
  %513 = sub i64 %433, %507
  %514 = add nuw nsw i64 %511, 1
  %515 = and i64 %513, 1
  %516 = icmp eq i64 %515, 0
  br i1 %516, label %527, label %517

517:                                              ; preds = %510
  %518 = getelementptr inbounds x86_fp80, ptr %405, i64 %511
  %519 = load x86_fp80, ptr %518, align 16, !tbaa !128
  %520 = getelementptr inbounds i32, ptr %402, i64 %511
  %521 = load i32, ptr %520, align 4, !tbaa !47
  %522 = zext i32 %521 to i64
  %523 = getelementptr inbounds x86_fp80, ptr %13, i64 %522
  %524 = load x86_fp80, ptr %523, align 16, !tbaa !128
  %525 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %519, x86_fp80 %524, x86_fp80 0xK00000000000000000000)
  %526 = add nuw nsw i64 %511, 1
  br label %527

527:                                              ; preds = %517, %510
  %528 = phi x86_fp80 [ undef, %510 ], [ %525, %517 ]
  %529 = phi i64 [ %511, %510 ], [ %526, %517 ]
  %530 = phi x86_fp80 [ 0xK00000000000000000000, %510 ], [ %525, %517 ]
  %531 = icmp eq i64 %438, %514
  br i1 %531, label %532, label %544

532:                                              ; preds = %527, %544, %503
  %533 = phi x86_fp80 [ 0xK00000000000000000000, %503 ], [ %528, %527 ], [ %563, %544 ]
  %534 = load x86_fp80, ptr %430, align 16, !tbaa !128
  %535 = fneg x86_fp80 %533
  %536 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %535, x86_fp80 %3, x86_fp80 %534)
  store x86_fp80 %536, ptr %430, align 16, !tbaa !128
  %537 = getelementptr inbounds x86_fp80, ptr %405, i64 %435
  %538 = load x86_fp80, ptr %537, align 16, !tbaa !128
  %539 = fdiv x86_fp80 %536, %538
  store x86_fp80 %539, ptr %430, align 16, !tbaa !128
  %540 = add nsw i32 %431, -1
  %541 = getelementptr inbounds i64, ptr %429, i64 -1
  %542 = getelementptr inbounds x86_fp80, ptr %430, i64 -1
  %543 = icmp sgt i32 %431, 0
  br i1 %543, label %428, label %566

544:                                              ; preds = %527, %544
  %545 = phi i64 [ %564, %544 ], [ %529, %527 ]
  %546 = phi x86_fp80 [ %563, %544 ], [ %530, %527 ]
  %547 = getelementptr inbounds x86_fp80, ptr %405, i64 %545
  %548 = load x86_fp80, ptr %547, align 16, !tbaa !128
  %549 = getelementptr inbounds i32, ptr %402, i64 %545
  %550 = load i32, ptr %549, align 4, !tbaa !47
  %551 = zext i32 %550 to i64
  %552 = getelementptr inbounds x86_fp80, ptr %13, i64 %551
  %553 = load x86_fp80, ptr %552, align 16, !tbaa !128
  %554 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %548, x86_fp80 %553, x86_fp80 %546)
  %555 = add nuw nsw i64 %545, 1
  %556 = getelementptr inbounds x86_fp80, ptr %405, i64 %555
  %557 = load x86_fp80, ptr %556, align 16, !tbaa !128
  %558 = getelementptr inbounds i32, ptr %402, i64 %555
  %559 = load i32, ptr %558, align 4, !tbaa !47
  %560 = zext i32 %559 to i64
  %561 = getelementptr inbounds x86_fp80, ptr %13, i64 %560
  %562 = load x86_fp80, ptr %561, align 16, !tbaa !128
  %563 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %557, x86_fp80 %562, x86_fp80 %554)
  %564 = add nuw nsw i64 %545, 2
  %565 = icmp eq i64 %564, %512
  br i1 %565, label %532, label %544

566:                                              ; preds = %192, %532, %27, %227, %19, %38, %127, %394
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE16precondition_SORIeEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %62, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !135
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !125
  %19 = zext i32 %9 to i64
  %20 = load i64, ptr %15, align 8, !tbaa !34
  br label %21

21:                                               ; preds = %35, %11
  %22 = phi i64 [ %20, %11 ], [ %28, %35 ]
  %23 = phi i64 [ 0, %11 ], [ %26, %35 ]
  %24 = getelementptr inbounds x86_fp80, ptr %13, i64 %23
  %25 = load x86_fp80, ptr %24, align 16, !tbaa !128
  %26 = add nuw nsw i64 %23, 1
  %27 = getelementptr inbounds i64, ptr %15, i64 %26
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = and i64 %22, 4294967295
  %30 = icmp ugt i64 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %21
  %32 = trunc i64 %22 to i32
  %33 = load ptr, ptr %16, align 8, !tbaa !46
  %34 = load ptr, ptr %17, align 8
  br label %42

35:                                               ; preds = %57, %21
  %36 = phi x86_fp80 [ %25, %21 ], [ %58, %57 ]
  %37 = fmul x86_fp80 %36, %3
  %38 = getelementptr inbounds x86_fp80, ptr %18, i64 %22
  %39 = load x86_fp80, ptr %38, align 16, !tbaa !128
  %40 = fdiv x86_fp80 %37, %39
  store x86_fp80 %40, ptr %24, align 16, !tbaa !128
  %41 = icmp eq i64 %26, %19
  br i1 %41, label %62, label %21

42:                                               ; preds = %57, %31
  %43 = phi i64 [ %29, %31 ], [ %60, %57 ]
  %44 = phi i32 [ %32, %31 ], [ %59, %57 ]
  %45 = phi x86_fp80 [ %25, %31 ], [ %58, %57 ]
  %46 = getelementptr inbounds i32, ptr %33, i64 %43
  %47 = load i32, ptr %46, align 4, !tbaa !47
  %48 = zext i32 %47 to i64
  %49 = icmp ugt i64 %23, %48
  br i1 %49, label %50, label %57

50:                                               ; preds = %42
  %51 = getelementptr inbounds x86_fp80, ptr %34, i64 %43
  %52 = load x86_fp80, ptr %51, align 16, !tbaa !128
  %53 = getelementptr inbounds x86_fp80, ptr %13, i64 %48
  %54 = load x86_fp80, ptr %53, align 16, !tbaa !128
  %55 = fneg x86_fp80 %52
  %56 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %55, x86_fp80 %54, x86_fp80 %45)
  br label %57

57:                                               ; preds = %50, %42
  %58 = phi x86_fp80 [ %56, %50 ], [ %45, %42 ]
  %59 = add i32 %44, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %28, %60
  br i1 %61, label %42, label %35

62:                                               ; preds = %35, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE3SORIeEEvRNS_6VectorIT_EEe(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, x86_fp80 noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !135
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !125
  %17 = zext i32 %7 to i64
  %18 = load i64, ptr %13, align 8, !tbaa !34
  br label %20

19:                                               ; preds = %34, %3
  ret void

20:                                               ; preds = %9, %34
  %21 = phi i64 [ %18, %9 ], [ %27, %34 ]
  %22 = phi i64 [ 0, %9 ], [ %25, %34 ]
  %23 = getelementptr inbounds x86_fp80, ptr %11, i64 %22
  %24 = load x86_fp80, ptr %23, align 16, !tbaa !128
  %25 = add nuw nsw i64 %22, 1
  %26 = getelementptr inbounds i64, ptr %13, i64 %25
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = and i64 %21, 4294967295
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %20
  %31 = trunc i64 %21 to i32
  %32 = load ptr, ptr %14, align 8, !tbaa !46
  %33 = load ptr, ptr %15, align 8
  br label %41

34:                                               ; preds = %56, %20
  %35 = phi x86_fp80 [ %24, %20 ], [ %57, %56 ]
  %36 = fmul x86_fp80 %35, %2
  %37 = getelementptr inbounds x86_fp80, ptr %16, i64 %21
  %38 = load x86_fp80, ptr %37, align 16, !tbaa !128
  %39 = fdiv x86_fp80 %36, %38
  store x86_fp80 %39, ptr %23, align 16, !tbaa !128
  %40 = icmp eq i64 %25, %17
  br i1 %40, label %19, label %20

41:                                               ; preds = %30, %56
  %42 = phi i64 [ %28, %30 ], [ %59, %56 ]
  %43 = phi i32 [ %31, %30 ], [ %58, %56 ]
  %44 = phi x86_fp80 [ %24, %30 ], [ %57, %56 ]
  %45 = getelementptr inbounds i32, ptr %32, i64 %42
  %46 = load i32, ptr %45, align 4, !tbaa !47
  %47 = zext i32 %46 to i64
  %48 = icmp ugt i64 %22, %47
  br i1 %48, label %49, label %56

49:                                               ; preds = %41
  %50 = getelementptr inbounds x86_fp80, ptr %33, i64 %42
  %51 = load x86_fp80, ptr %50, align 16, !tbaa !128
  %52 = getelementptr inbounds x86_fp80, ptr %11, i64 %47
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = fneg x86_fp80 %51
  %55 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %54, x86_fp80 %53, x86_fp80 %44)
  br label %56

56:                                               ; preds = %49, %41
  %57 = phi x86_fp80 [ %55, %49 ], [ %44, %41 ]
  %58 = add i32 %43, 1
  %59 = zext i32 %58 to i64
  %60 = icmp ugt i64 %27, %59
  br i1 %60, label %41, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE17precondition_TSORIeEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIeEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2)
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %64, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !135
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !125
  %19 = zext i32 %9 to i64
  br label %20

20:                                               ; preds = %37, %11
  %21 = phi i64 [ %19, %11 ], [ %22, %37 ]
  %22 = add nsw i64 %21, -1
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  %25 = getelementptr inbounds x86_fp80, ptr %13, i64 %24
  %26 = load x86_fp80, ptr %25, align 16, !tbaa !128
  %27 = getelementptr inbounds i64, ptr %15, i64 %24
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = getelementptr inbounds i64, ptr %15, i64 %21
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %28, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %20
  %34 = trunc i64 %28 to i32
  %35 = load ptr, ptr %16, align 8, !tbaa !46
  %36 = load ptr, ptr %17, align 8
  br label %44

37:                                               ; preds = %59, %20
  %38 = phi x86_fp80 [ %26, %20 ], [ %60, %59 ]
  %39 = fmul x86_fp80 %38, %3
  %40 = getelementptr inbounds x86_fp80, ptr %18, i64 %28
  %41 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %42 = fdiv x86_fp80 %39, %41
  store x86_fp80 %42, ptr %25, align 16, !tbaa !128
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %64, label %20

44:                                               ; preds = %59, %33
  %45 = phi i64 [ %31, %33 ], [ %62, %59 ]
  %46 = phi i32 [ %34, %33 ], [ %61, %59 ]
  %47 = phi x86_fp80 [ %26, %33 ], [ %60, %59 ]
  %48 = getelementptr inbounds i32, ptr %35, i64 %45
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = icmp ugt i32 %49, %23
  br i1 %50, label %51, label %59

51:                                               ; preds = %44
  %52 = getelementptr inbounds x86_fp80, ptr %36, i64 %45
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds x86_fp80, ptr %13, i64 %54
  %56 = load x86_fp80, ptr %55, align 16, !tbaa !128
  %57 = fneg x86_fp80 %53
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %57, x86_fp80 %56, x86_fp80 %47)
  br label %59

59:                                               ; preds = %51, %44
  %60 = phi x86_fp80 [ %58, %51 ], [ %47, %44 ]
  %61 = add i32 %46, 1
  %62 = zext i32 %61 to i64
  %63 = icmp ugt i64 %30, %62
  br i1 %63, label %44, label %37

64:                                               ; preds = %37, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE4TSORIeEEvRNS_6VectorIT_EEe(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, x86_fp80 noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !135
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !125
  %17 = zext i32 %7 to i64
  br label %19

18:                                               ; preds = %36, %3
  ret void

19:                                               ; preds = %9, %36
  %20 = phi i64 [ %17, %9 ], [ %21, %36 ]
  %21 = add nsw i64 %20, -1
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  %24 = getelementptr inbounds x86_fp80, ptr %11, i64 %23
  %25 = load x86_fp80, ptr %24, align 16, !tbaa !128
  %26 = getelementptr inbounds i64, ptr %13, i64 %23
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = getelementptr inbounds i64, ptr %13, i64 %20
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %27, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %19
  %33 = trunc i64 %27 to i32
  %34 = load ptr, ptr %14, align 8, !tbaa !46
  %35 = load ptr, ptr %15, align 8
  br label %43

36:                                               ; preds = %58, %19
  %37 = phi x86_fp80 [ %25, %19 ], [ %59, %58 ]
  %38 = fmul x86_fp80 %37, %2
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %27
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !128
  %41 = fdiv x86_fp80 %38, %40
  store x86_fp80 %41, ptr %24, align 16, !tbaa !128
  %42 = icmp eq i32 %22, 0
  br i1 %42, label %18, label %19

43:                                               ; preds = %32, %58
  %44 = phi i64 [ %30, %32 ], [ %61, %58 ]
  %45 = phi i32 [ %33, %32 ], [ %60, %58 ]
  %46 = phi x86_fp80 [ %25, %32 ], [ %59, %58 ]
  %47 = getelementptr inbounds i32, ptr %34, i64 %44
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = icmp ugt i32 %48, %22
  br i1 %49, label %50, label %58

50:                                               ; preds = %43
  %51 = getelementptr inbounds x86_fp80, ptr %35, i64 %44
  %52 = load x86_fp80, ptr %51, align 16, !tbaa !128
  %53 = zext i32 %48 to i64
  %54 = getelementptr inbounds x86_fp80, ptr %11, i64 %53
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  %56 = fneg x86_fp80 %52
  %57 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %55, x86_fp80 %46)
  br label %58

58:                                               ; preds = %43, %50
  %59 = phi x86_fp80 [ %57, %50 ], [ %46, %43 ]
  %60 = add i32 %45, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %29, %61
  br i1 %62, label %43, label %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE19precondition_JacobiIeEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !138
  %7 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !135
  %9 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !135
  %11 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !8
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %12, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = fcmp une x86_fp80 %3, 0xK3FFF8000000000000000
  %16 = icmp eq i32 %6, 0
  br i1 %15, label %25, label %17

17:                                               ; preds = %4
  br i1 %16, label %104, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !125
  %21 = and i32 %6, 1
  %22 = icmp eq i32 %6, 1
  br i1 %22, label %93, label %23

23:                                               ; preds = %18
  %24 = and i32 %6, -2
  br label %58

25:                                               ; preds = %4
  br i1 %16, label %104, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !125
  %29 = and i32 %6, 1
  %30 = icmp eq i32 %6, 1
  br i1 %30, label %81, label %31

31:                                               ; preds = %26
  %32 = and i32 %6, -2
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi ptr [ %14, %31 ], [ %55, %33 ]
  %35 = phi ptr [ %10, %31 ], [ %54, %33 ]
  %36 = phi ptr [ %8, %31 ], [ %53, %33 ]
  %37 = phi i32 [ 0, %31 ], [ %56, %33 ]
  %38 = load x86_fp80, ptr %35, align 16, !tbaa !128
  %39 = fmul x86_fp80 %38, %3
  %40 = load i64, ptr %34, align 8, !tbaa !34
  %41 = getelementptr inbounds x86_fp80, ptr %28, i64 %40
  %42 = load x86_fp80, ptr %41, align 16, !tbaa !128
  %43 = fdiv x86_fp80 %39, %42
  store x86_fp80 %43, ptr %36, align 16, !tbaa !128
  %44 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %45 = getelementptr inbounds x86_fp80, ptr %35, i64 1
  %46 = getelementptr inbounds i64, ptr %34, i64 1
  %47 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %48 = fmul x86_fp80 %47, %3
  %49 = load i64, ptr %46, align 8, !tbaa !34
  %50 = getelementptr inbounds x86_fp80, ptr %28, i64 %49
  %51 = load x86_fp80, ptr %50, align 16, !tbaa !128
  %52 = fdiv x86_fp80 %48, %51
  store x86_fp80 %52, ptr %44, align 16, !tbaa !128
  %53 = getelementptr inbounds x86_fp80, ptr %36, i64 2
  %54 = getelementptr inbounds x86_fp80, ptr %35, i64 2
  %55 = getelementptr inbounds i64, ptr %34, i64 2
  %56 = add i32 %37, 2
  %57 = icmp eq i32 %56, %32
  br i1 %57, label %81, label %33

58:                                               ; preds = %58, %23
  %59 = phi ptr [ %14, %23 ], [ %78, %58 ]
  %60 = phi ptr [ %10, %23 ], [ %77, %58 ]
  %61 = phi ptr [ %8, %23 ], [ %76, %58 ]
  %62 = phi i32 [ 0, %23 ], [ %79, %58 ]
  %63 = load x86_fp80, ptr %60, align 16, !tbaa !128
  %64 = load i64, ptr %59, align 8, !tbaa !34
  %65 = getelementptr inbounds x86_fp80, ptr %20, i64 %64
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  %67 = fdiv x86_fp80 %63, %66
  store x86_fp80 %67, ptr %61, align 16, !tbaa !128
  %68 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %69 = getelementptr inbounds x86_fp80, ptr %60, i64 1
  %70 = getelementptr inbounds i64, ptr %59, i64 1
  %71 = load x86_fp80, ptr %69, align 16, !tbaa !128
  %72 = load i64, ptr %70, align 8, !tbaa !34
  %73 = getelementptr inbounds x86_fp80, ptr %20, i64 %72
  %74 = load x86_fp80, ptr %73, align 16, !tbaa !128
  %75 = fdiv x86_fp80 %71, %74
  store x86_fp80 %75, ptr %68, align 16, !tbaa !128
  %76 = getelementptr inbounds x86_fp80, ptr %61, i64 2
  %77 = getelementptr inbounds x86_fp80, ptr %60, i64 2
  %78 = getelementptr inbounds i64, ptr %59, i64 2
  %79 = add i32 %62, 2
  %80 = icmp eq i32 %79, %24
  br i1 %80, label %93, label %58

81:                                               ; preds = %33, %26
  %82 = phi ptr [ %14, %26 ], [ %55, %33 ]
  %83 = phi ptr [ %10, %26 ], [ %54, %33 ]
  %84 = phi ptr [ %8, %26 ], [ %53, %33 ]
  %85 = icmp eq i32 %29, 0
  br i1 %85, label %104, label %86

86:                                               ; preds = %81
  %87 = load x86_fp80, ptr %83, align 16, !tbaa !128
  %88 = fmul x86_fp80 %87, %3
  %89 = load i64, ptr %82, align 8, !tbaa !34
  %90 = getelementptr inbounds x86_fp80, ptr %28, i64 %89
  %91 = load x86_fp80, ptr %90, align 16, !tbaa !128
  %92 = fdiv x86_fp80 %88, %91
  store x86_fp80 %92, ptr %84, align 16, !tbaa !128
  br label %104

93:                                               ; preds = %58, %18
  %94 = phi ptr [ %14, %18 ], [ %78, %58 ]
  %95 = phi ptr [ %10, %18 ], [ %77, %58 ]
  %96 = phi ptr [ %8, %18 ], [ %76, %58 ]
  %97 = icmp eq i32 %21, 0
  br i1 %97, label %104, label %98

98:                                               ; preds = %93
  %99 = load x86_fp80, ptr %95, align 16, !tbaa !128
  %100 = load i64, ptr %94, align 8, !tbaa !34
  %101 = getelementptr inbounds x86_fp80, ptr %20, i64 %100
  %102 = load x86_fp80, ptr %101, align 16, !tbaa !128
  %103 = fdiv x86_fp80 %99, %102
  store x86_fp80 %103, ptr %96, align 16, !tbaa !128
  br label %104

104:                                              ; preds = %98, %93, %86, %81, %17, %25
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE4SSORIeEEvRNS_6VectorIT_EEe(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, x86_fp80 noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %78, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !8
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = load ptr, ptr %13, align 8, !tbaa !125
  %17 = zext i32 %5 to i64
  %18 = load i64, ptr %11, align 8, !tbaa !34
  br label %33

19:                                               ; preds = %68
  %20 = add i32 %5, -1
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %22, label %78

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !8
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %24, i64 0, i32 8
  %26 = load ptr, ptr %25, align 8, !tbaa !32
  %27 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %24, i64 0, i32 9
  %28 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %30 = load ptr, ptr %28, align 8, !tbaa !125
  %31 = load ptr, ptr %29, align 8, !tbaa !135
  %32 = zext i32 %20 to i64
  br label %79

33:                                               ; preds = %7, %68
  %34 = phi i64 [ %18, %7 ], [ %38, %68 ]
  %35 = phi i64 [ 0, %7 ], [ %36, %68 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %11, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %68

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %12, align 8, !tbaa !46
  %44 = load ptr, ptr %13, align 8
  %45 = load ptr, ptr %14, align 8
  br label %46

46:                                               ; preds = %41, %63
  %47 = phi i64 [ %39, %41 ], [ %66, %63 ]
  %48 = phi i32 [ %42, %41 ], [ %65, %63 ]
  %49 = phi x86_fp80 [ 0xK00000000000000000000, %41 ], [ %64, %63 ]
  %50 = getelementptr inbounds i32, ptr %43, i64 %47
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ne i32 %51, -1
  %53 = zext i32 %48 to i64
  %54 = icmp ugt i64 %35, %53
  %55 = and i1 %54, %52
  br i1 %55, label %56, label %63

56:                                               ; preds = %46
  %57 = getelementptr inbounds x86_fp80, ptr %44, i64 %47
  %58 = load x86_fp80, ptr %57, align 16, !tbaa !128
  %59 = zext i32 %51 to i64
  %60 = getelementptr inbounds x86_fp80, ptr %45, i64 %59
  %61 = load x86_fp80, ptr %60, align 16, !tbaa !128
  %62 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %58, x86_fp80 %61, x86_fp80 %49)
  br label %63

63:                                               ; preds = %56, %46
  %64 = phi x86_fp80 [ %62, %56 ], [ %49, %46 ]
  %65 = add i32 %48, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %38, %66
  br i1 %67, label %46, label %68

68:                                               ; preds = %63, %33
  %69 = phi x86_fp80 [ 0xK00000000000000000000, %33 ], [ %64, %63 ]
  %70 = getelementptr inbounds x86_fp80, ptr %15, i64 %35
  %71 = load x86_fp80, ptr %70, align 16, !tbaa !128
  %72 = fneg x86_fp80 %69
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %72, x86_fp80 %2, x86_fp80 %71)
  store x86_fp80 %73, ptr %70, align 16, !tbaa !128
  %74 = getelementptr inbounds x86_fp80, ptr %16, i64 %34
  %75 = load x86_fp80, ptr %74, align 16, !tbaa !128
  %76 = fdiv x86_fp80 %73, %75
  store x86_fp80 %76, ptr %70, align 16, !tbaa !128
  %77 = icmp eq i64 %36, %17
  br i1 %77, label %19, label %33

78:                                               ; preds = %116, %3, %19
  ret void

79:                                               ; preds = %22, %116
  %80 = phi i64 [ %32, %22 ], [ %125, %116 ]
  %81 = phi i32 [ %5, %22 ], [ %127, %116 ]
  %82 = getelementptr inbounds i64, ptr %26, i64 %80
  %83 = load i64, ptr %82, align 8, !tbaa !34
  %84 = sext i32 %81 to i64
  %85 = getelementptr inbounds i64, ptr %26, i64 %84
  %86 = load i64, ptr %85, align 8, !tbaa !34
  %87 = and i64 %83, 4294967295
  %88 = icmp ugt i64 %86, %87
  br i1 %88, label %89, label %116

89:                                               ; preds = %79
  %90 = trunc i64 %83 to i32
  %91 = load ptr, ptr %27, align 8, !tbaa !46
  %92 = load ptr, ptr %28, align 8
  %93 = load ptr, ptr %29, align 8
  br label %94

94:                                               ; preds = %89, %111
  %95 = phi i64 [ %87, %89 ], [ %114, %111 ]
  %96 = phi i32 [ %90, %89 ], [ %113, %111 ]
  %97 = phi x86_fp80 [ 0xK00000000000000000000, %89 ], [ %112, %111 ]
  %98 = getelementptr inbounds i32, ptr %91, i64 %95
  %99 = load i32, ptr %98, align 4, !tbaa !47
  %100 = icmp ne i32 %99, -1
  %101 = zext i32 %96 to i64
  %102 = icmp ult i64 %80, %101
  %103 = and i1 %102, %100
  br i1 %103, label %104, label %111

104:                                              ; preds = %94
  %105 = getelementptr inbounds x86_fp80, ptr %92, i64 %95
  %106 = load x86_fp80, ptr %105, align 16, !tbaa !128
  %107 = zext i32 %99 to i64
  %108 = getelementptr inbounds x86_fp80, ptr %93, i64 %107
  %109 = load x86_fp80, ptr %108, align 16, !tbaa !128
  %110 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %106, x86_fp80 %109, x86_fp80 %97)
  br label %111

111:                                              ; preds = %104, %94
  %112 = phi x86_fp80 [ %110, %104 ], [ %97, %94 ]
  %113 = add i32 %96, 1
  %114 = zext i32 %113 to i64
  %115 = icmp ugt i64 %86, %114
  br i1 %115, label %94, label %116

116:                                              ; preds = %111, %79
  %117 = phi x86_fp80 [ 0xK00000000000000000000, %79 ], [ %112, %111 ]
  %118 = fmul x86_fp80 %117, %2
  %119 = getelementptr inbounds x86_fp80, ptr %30, i64 %83
  %120 = load x86_fp80, ptr %119, align 16, !tbaa !128
  %121 = fdiv x86_fp80 %118, %120
  %122 = getelementptr inbounds x86_fp80, ptr %31, i64 %80
  %123 = load x86_fp80, ptr %122, align 16, !tbaa !128
  %124 = fsub x86_fp80 %123, %121
  store x86_fp80 %124, ptr %122, align 16, !tbaa !128
  %125 = add nsw i64 %80, -1
  %126 = icmp sgt i64 %80, 0
  %127 = trunc i64 %80 to i32
  br i1 %126, label %79, label %78
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE4PSORIeEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, x86_fp80 noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !135
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !125
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %42, %5
  ret void

23:                                               ; preds = %11, %42
  %24 = phi i64 [ 0, %11 ], [ %48, %42 ]
  %25 = getelementptr inbounds i32, ptr %12, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !47
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds x86_fp80, ptr %14, i64 %27
  %29 = load x86_fp80, ptr %28, align 16, !tbaa !128
  %30 = getelementptr inbounds i64, ptr %16, i64 %27
  %31 = load i64, ptr %30, align 8, !tbaa !34
  %32 = add i32 %26, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i64, ptr %16, i64 %33
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = and i64 %31, 4294967295
  %37 = icmp ugt i64 %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %23
  %39 = trunc i64 %31 to i32
  %40 = load ptr, ptr %17, align 8, !tbaa !46
  %41 = load ptr, ptr %19, align 8
  br label %50

42:                                               ; preds = %68, %23
  %43 = phi x86_fp80 [ %29, %23 ], [ %69, %68 ]
  %44 = fmul x86_fp80 %43, %4
  %45 = getelementptr inbounds x86_fp80, ptr %20, i64 %31
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = fdiv x86_fp80 %44, %46
  store x86_fp80 %47, ptr %28, align 16, !tbaa !128
  %48 = add nuw nsw i64 %24, 1
  %49 = icmp eq i64 %48, %21
  br i1 %49, label %22, label %23

50:                                               ; preds = %38, %68
  %51 = phi i64 [ %36, %38 ], [ %71, %68 ]
  %52 = phi i32 [ %39, %38 ], [ %70, %68 ]
  %53 = phi x86_fp80 [ %29, %38 ], [ %69, %68 ]
  %54 = getelementptr inbounds i32, ptr %40, i64 %51
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i32, ptr %18, i64 %56
  %58 = load i32, ptr %57, align 4, !tbaa !47
  %59 = zext i32 %58 to i64
  %60 = icmp ugt i64 %24, %59
  br i1 %60, label %61, label %68

61:                                               ; preds = %50
  %62 = getelementptr inbounds x86_fp80, ptr %41, i64 %51
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = getelementptr inbounds x86_fp80, ptr %14, i64 %56
  %65 = load x86_fp80, ptr %64, align 16, !tbaa !128
  %66 = fneg x86_fp80 %63
  %67 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %65, x86_fp80 %53)
  br label %68

68:                                               ; preds = %61, %50
  %69 = phi x86_fp80 [ %67, %61 ], [ %53, %50 ]
  %70 = add i32 %52, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %35, %71
  br i1 %72, label %50, label %42
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5TPSORIeEEvRNS_6VectorIT_EERKSt6vectorIjSaIjEESB_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, x86_fp80 noundef %4) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !8
  %8 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %2, align 8, !tbaa !197
  %13 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !135
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 9
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !125
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %45, %5
  ret void

23:                                               ; preds = %11, %45
  %24 = phi i64 [ %21, %11 ], [ %25, %45 ]
  %25 = add nsw i64 %24, -1
  %26 = trunc i64 %25 to i32
  %27 = and i64 %25, 4294967295
  %28 = getelementptr inbounds i32, ptr %12, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !47
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds x86_fp80, ptr %14, i64 %30
  %32 = load x86_fp80, ptr %31, align 16, !tbaa !128
  %33 = getelementptr inbounds i64, ptr %16, i64 %30
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = add i32 %29, 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i64, ptr %16, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %23
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %17, align 8, !tbaa !46
  %44 = load ptr, ptr %19, align 8
  br label %52

45:                                               ; preds = %69, %23
  %46 = phi x86_fp80 [ %32, %23 ], [ %70, %69 ]
  %47 = fmul x86_fp80 %46, %4
  %48 = getelementptr inbounds x86_fp80, ptr %20, i64 %34
  %49 = load x86_fp80, ptr %48, align 16, !tbaa !128
  %50 = fdiv x86_fp80 %47, %49
  store x86_fp80 %50, ptr %31, align 16, !tbaa !128
  %51 = icmp eq i32 %26, 0
  br i1 %51, label %22, label %23

52:                                               ; preds = %41, %69
  %53 = phi i64 [ %39, %41 ], [ %72, %69 ]
  %54 = phi i32 [ %42, %41 ], [ %71, %69 ]
  %55 = phi x86_fp80 [ %32, %41 ], [ %70, %69 ]
  %56 = getelementptr inbounds i32, ptr %43, i64 %53
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %18, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !47
  %61 = icmp ugt i32 %60, %26
  br i1 %61, label %62, label %69

62:                                               ; preds = %52
  %63 = getelementptr inbounds x86_fp80, ptr %44, i64 %53
  %64 = load x86_fp80, ptr %63, align 16, !tbaa !128
  %65 = getelementptr inbounds x86_fp80, ptr %14, i64 %58
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  %67 = fneg x86_fp80 %64
  %68 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %66, x86_fp80 %55)
  br label %69

69:                                               ; preds = %62, %52
  %70 = phi x86_fp80 [ %68, %62 ], [ %55, %52 ]
  %71 = add i32 %54, 1
  %72 = zext i32 %71 to i64
  %73 = icmp ugt i64 %38, %72
  br i1 %73, label %52, label %45
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE8SOR_stepIeEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !135
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %8 to i64
  %21 = load i64, ptr %14, align 8, !tbaa !34
  br label %23

22:                                               ; preds = %36, %4
  ret void

23:                                               ; preds = %10, %36
  %24 = phi i64 [ %21, %10 ], [ %30, %36 ]
  %25 = phi i64 [ 0, %10 ], [ %28, %36 ]
  %26 = getelementptr inbounds x86_fp80, ptr %12, i64 %25
  %27 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %28 = add nuw nsw i64 %25, 1
  %29 = getelementptr inbounds i64, ptr %14, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !34
  %31 = and i64 %24, 4294967295
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = trunc i64 %24 to i32
  %35 = load ptr, ptr %17, align 8, !tbaa !46
  br label %46

36:                                               ; preds = %46, %23
  %37 = phi x86_fp80 [ %27, %23 ], [ %58, %46 ]
  %38 = fmul x86_fp80 %37, %3
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %24
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !128
  %41 = fdiv x86_fp80 %38, %40
  %42 = getelementptr inbounds x86_fp80, ptr %19, i64 %25
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !128
  %44 = fadd x86_fp80 %41, %43
  store x86_fp80 %44, ptr %42, align 16, !tbaa !128
  %45 = icmp eq i64 %28, %20
  br i1 %45, label %22, label %23

46:                                               ; preds = %33, %46
  %47 = phi i64 [ %31, %33 ], [ %60, %46 ]
  %48 = phi i32 [ %34, %33 ], [ %59, %46 ]
  %49 = phi x86_fp80 [ %27, %33 ], [ %58, %46 ]
  %50 = getelementptr inbounds x86_fp80, ptr %16, i64 %47
  %51 = load x86_fp80, ptr %50, align 16, !tbaa !128
  %52 = getelementptr inbounds i32, ptr %35, i64 %47
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds x86_fp80, ptr %19, i64 %54
  %56 = load x86_fp80, ptr %55, align 16, !tbaa !128
  %57 = fneg x86_fp80 %51
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %57, x86_fp80 %56, x86_fp80 %49)
  %59 = add i32 %48, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %30, %60
  br i1 %61, label %46, label %36
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9TSOR_stepIeEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = add i32 %8, -1
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %22

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !135
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %19 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8
  %21 = zext i32 %9 to i64
  br label %23

22:                                               ; preds = %38, %4
  ret void

23:                                               ; preds = %11, %38
  %24 = phi i64 [ %21, %11 ], [ %47, %38 ]
  %25 = phi i32 [ %8, %11 ], [ %49, %38 ]
  %26 = getelementptr inbounds x86_fp80, ptr %13, i64 %24
  %27 = load x86_fp80, ptr %26, align 16, !tbaa !128
  %28 = getelementptr inbounds i64, ptr %15, i64 %24
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = sext i32 %25 to i64
  %31 = getelementptr inbounds i64, ptr %15, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = and i64 %29, 4294967295
  %34 = icmp ugt i64 %32, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %23
  %36 = trunc i64 %29 to i32
  %37 = load ptr, ptr %18, align 8, !tbaa !46
  br label %50

38:                                               ; preds = %50, %23
  %39 = phi x86_fp80 [ %27, %23 ], [ %62, %50 ]
  %40 = fmul x86_fp80 %39, %3
  %41 = getelementptr inbounds x86_fp80, ptr %17, i64 %29
  %42 = load x86_fp80, ptr %41, align 16, !tbaa !128
  %43 = fdiv x86_fp80 %40, %42
  %44 = getelementptr inbounds x86_fp80, ptr %20, i64 %24
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  %46 = fadd x86_fp80 %43, %45
  store x86_fp80 %46, ptr %44, align 16, !tbaa !128
  %47 = add nsw i64 %24, -1
  %48 = icmp sgt i64 %24, 0
  %49 = trunc i64 %24 to i32
  br i1 %48, label %23, label %22

50:                                               ; preds = %35, %50
  %51 = phi i64 [ %33, %35 ], [ %64, %50 ]
  %52 = phi i32 [ %36, %35 ], [ %63, %50 ]
  %53 = phi x86_fp80 [ %27, %35 ], [ %62, %50 ]
  %54 = getelementptr inbounds x86_fp80, ptr %17, i64 %51
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  %56 = getelementptr inbounds i32, ptr %37, i64 %51
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %20, i64 %58
  %60 = load x86_fp80, ptr %59, align 16, !tbaa !128
  %61 = fneg x86_fp80 %55
  %62 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %61, x86_fp80 %60, x86_fp80 %53)
  %63 = add i32 %52, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %32, %64
  br i1 %65, label %50, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9SSOR_stepIeEEvRNS_6VectorIT_EERKS5_e(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, x86_fp80 noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !8
  %7 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %111, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !135
  %13 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !32
  %15 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %6, i64 0, i32 9
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8
  %20 = zext i32 %8 to i64
  %21 = load i64, ptr %14, align 8, !tbaa !34
  br label %22

22:                                               ; preds = %35, %10
  %23 = phi i64 [ %21, %10 ], [ %29, %35 ]
  %24 = phi i64 [ 0, %10 ], [ %27, %35 ]
  %25 = getelementptr inbounds x86_fp80, ptr %12, i64 %24
  %26 = load x86_fp80, ptr %25, align 16, !tbaa !128
  %27 = add nuw nsw i64 %24, 1
  %28 = getelementptr inbounds i64, ptr %14, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %23, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %22
  %33 = trunc i64 %23 to i32
  %34 = load ptr, ptr %17, align 8, !tbaa !46
  br label %45

35:                                               ; preds = %45, %22
  %36 = phi x86_fp80 [ %26, %22 ], [ %57, %45 ]
  %37 = fmul x86_fp80 %36, %3
  %38 = getelementptr inbounds x86_fp80, ptr %16, i64 %23
  %39 = load x86_fp80, ptr %38, align 16, !tbaa !128
  %40 = fdiv x86_fp80 %37, %39
  %41 = getelementptr inbounds x86_fp80, ptr %19, i64 %24
  %42 = load x86_fp80, ptr %41, align 16, !tbaa !128
  %43 = fadd x86_fp80 %40, %42
  store x86_fp80 %43, ptr %41, align 16, !tbaa !128
  %44 = icmp eq i64 %27, %20
  br i1 %44, label %61, label %22

45:                                               ; preds = %45, %32
  %46 = phi i64 [ %30, %32 ], [ %59, %45 ]
  %47 = phi i32 [ %33, %32 ], [ %58, %45 ]
  %48 = phi x86_fp80 [ %26, %32 ], [ %57, %45 ]
  %49 = getelementptr inbounds x86_fp80, ptr %16, i64 %46
  %50 = load x86_fp80, ptr %49, align 16, !tbaa !128
  %51 = getelementptr inbounds i32, ptr %34, i64 %46
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds x86_fp80, ptr %19, i64 %53
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  %56 = fneg x86_fp80 %50
  %57 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %55, x86_fp80 %48)
  %58 = add i32 %47, 1
  %59 = zext i32 %58 to i64
  %60 = icmp ugt i64 %29, %59
  br i1 %60, label %45, label %35

61:                                               ; preds = %35
  %62 = add i32 %8, -1
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %64, label %111

64:                                               ; preds = %61
  %65 = load ptr, ptr %15, align 8
  %66 = load ptr, ptr %18, align 8
  %67 = zext i32 %62 to i64
  br label %68

68:                                               ; preds = %83, %64
  %69 = phi i64 [ %67, %64 ], [ %92, %83 ]
  %70 = phi i32 [ %8, %64 ], [ %94, %83 ]
  %71 = getelementptr inbounds x86_fp80, ptr %12, i64 %69
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = getelementptr inbounds i64, ptr %14, i64 %69
  %74 = load i64, ptr %73, align 8, !tbaa !34
  %75 = sext i32 %70 to i64
  %76 = getelementptr inbounds i64, ptr %14, i64 %75
  %77 = load i64, ptr %76, align 8, !tbaa !34
  %78 = and i64 %74, 4294967295
  %79 = icmp ugt i64 %77, %78
  br i1 %79, label %80, label %83

80:                                               ; preds = %68
  %81 = trunc i64 %74 to i32
  %82 = load ptr, ptr %17, align 8, !tbaa !46
  br label %95

83:                                               ; preds = %95, %68
  %84 = phi x86_fp80 [ %72, %68 ], [ %107, %95 ]
  %85 = fmul x86_fp80 %84, %3
  %86 = getelementptr inbounds x86_fp80, ptr %65, i64 %74
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  %88 = fdiv x86_fp80 %85, %87
  %89 = getelementptr inbounds x86_fp80, ptr %66, i64 %69
  %90 = load x86_fp80, ptr %89, align 16, !tbaa !128
  %91 = fadd x86_fp80 %88, %90
  store x86_fp80 %91, ptr %89, align 16, !tbaa !128
  %92 = add nsw i64 %69, -1
  %93 = icmp sgt i64 %69, 0
  %94 = trunc i64 %69 to i32
  br i1 %93, label %68, label %111

95:                                               ; preds = %95, %80
  %96 = phi i64 [ %78, %80 ], [ %109, %95 ]
  %97 = phi i32 [ %81, %80 ], [ %108, %95 ]
  %98 = phi x86_fp80 [ %72, %80 ], [ %107, %95 ]
  %99 = getelementptr inbounds x86_fp80, ptr %65, i64 %96
  %100 = load x86_fp80, ptr %99, align 16, !tbaa !128
  %101 = getelementptr inbounds i32, ptr %82, i64 %96
  %102 = load i32, ptr %101, align 4, !tbaa !47
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds x86_fp80, ptr %66, i64 %103
  %105 = load x86_fp80, ptr %104, align 16, !tbaa !128
  %106 = fneg x86_fp80 %100
  %107 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %106, x86_fp80 %105, x86_fp80 %98)
  %108 = add i32 %97, 1
  %109 = zext i32 %108 to i64
  %110 = icmp ugt i64 %77, %109
  br i1 %110, label %95, label %83

111:                                              ; preds = %83, %4, %61
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %48, %3
  ret void

25:                                               ; preds = %13, %48
  %26 = phi i64 [ 0, %13 ], [ %30, %48 ]
  %27 = phi ptr [ %20, %13 ], [ %51, %48 ]
  %28 = phi ptr [ %15, %13 ], [ %52, %48 ]
  %29 = phi ptr [ %19, %13 ], [ %49, %48 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %48, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %46, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, ptr %22, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = tail call double @llvm.fmuladd.f64(double %40, double %45, double %37)
  %47 = icmp eq ptr %39, %33
  br i1 %47, label %48, label %35

48:                                               ; preds = %35, %25
  %49 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %50 = phi double [ 0.000000e+00, %25 ], [ %46, %35 ]
  %51 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %52 = getelementptr inbounds double, ptr %28, i64 1
  store double %50, ptr %28, align 8, !tbaa !30
  %53 = icmp eq i64 %30, %23
  br i1 %53, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %45, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds double, ptr %25, i64 %35
  br label %45

45:                                               ; preds = %41, %45
  %46 = phi i64 [ %39, %41 ], [ %58, %45 ]
  %47 = phi i32 [ %42, %41 ], [ %57, %45 ]
  %48 = getelementptr inbounds i32, ptr %43, i64 %46
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = getelementptr inbounds double, ptr %23, i64 %46
  %51 = load double, ptr %50, align 8, !tbaa !30
  %52 = load double, ptr %44, align 8, !tbaa !30
  %53 = zext i32 %49 to i64
  %54 = getelementptr inbounds double, ptr %27, i64 %53
  %55 = load double, ptr %54, align 8, !tbaa !30
  %56 = tail call double @llvm.fmuladd.f64(double %51, double %52, double %55)
  store double %56, ptr %54, align 8, !tbaa !30
  %57 = add i32 %47, 1
  %58 = zext i32 %57 to i64
  %59 = icmp ugt i64 %38, %58
  br i1 %59, label %45, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %48, %3
  ret void

25:                                               ; preds = %13, %48
  %26 = phi i64 [ 0, %13 ], [ %30, %48 ]
  %27 = phi ptr [ %20, %13 ], [ %51, %48 ]
  %28 = phi ptr [ %15, %13 ], [ %52, %48 ]
  %29 = phi ptr [ %19, %13 ], [ %49, %48 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %48, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %46, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, ptr %22, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = tail call double @llvm.fmuladd.f64(double %40, double %45, double %37)
  %47 = icmp eq ptr %39, %33
  br i1 %47, label %48, label %35

48:                                               ; preds = %35, %25
  %49 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %50 = phi double [ 0.000000e+00, %25 ], [ %46, %35 ]
  %51 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %52 = getelementptr inbounds double, ptr %28, i64 1
  %53 = load double, ptr %28, align 8, !tbaa !30
  %54 = fadd double %50, %53
  store double %54, ptr %28, align 8, !tbaa !30
  %55 = icmp eq i64 %30, %23
  br i1 %55, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %36, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds double, ptr %16, i64 %26
  br label %36

36:                                               ; preds = %32, %36
  %37 = phi i64 [ %30, %32 ], [ %49, %36 ]
  %38 = phi i32 [ %33, %32 ], [ %48, %36 ]
  %39 = getelementptr inbounds i32, ptr %34, i64 %37
  %40 = load i32, ptr %39, align 4, !tbaa !47
  %41 = getelementptr inbounds double, ptr %14, i64 %37
  %42 = load double, ptr %41, align 8, !tbaa !30
  %43 = load double, ptr %35, align 8, !tbaa !30
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds double, ptr %18, i64 %44
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = tail call double @llvm.fmuladd.f64(double %42, double %43, double %46)
  store double %47, ptr %45, align 8, !tbaa !30
  %48 = add i32 %38, 1
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %29, %49
  br i1 %50, label %36, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %64, %3
  ret void

29:                                               ; preds = %13, %64
  %30 = phi i64 [ 0, %13 ], [ %34, %64 ]
  %31 = phi ptr [ %20, %13 ], [ %67, %64 ]
  %32 = phi ptr [ %15, %13 ], [ %68, %64 ]
  %33 = phi ptr [ %19, %13 ], [ %65, %64 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %64, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi double [ %62, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !53
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = tail call double @llvm.fmuladd.f64(double %43, double %61, double %41)
  %63 = icmp eq ptr %53, %37
  br i1 %63, label %64, label %39

64:                                               ; preds = %52, %29
  %65 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %66 = phi double [ 0.000000e+00, %29 ], [ %62, %52 ]
  %67 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %68 = getelementptr inbounds double, ptr %32, i64 1
  store double %66, ptr %32, align 8, !tbaa !30
  %69 = icmp eq i64 %34, %27
  br i1 %69, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %77, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %76, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds double, ptr %23, i64 %50
  %55 = load double, ptr %54, align 8, !tbaa !30
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = sub i32 %48, %61
  %66 = zext i32 %65 to i64
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"class.dealii::Vector", ptr %29, i64 %67, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !53
  %70 = getelementptr inbounds double, ptr %69, i64 %66
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = zext i32 %53 to i64
  %73 = getelementptr inbounds double, ptr %31, i64 %72
  %74 = load double, ptr %73, align 8, !tbaa !30
  %75 = tail call double @llvm.fmuladd.f64(double %55, double %71, double %74)
  store double %75, ptr %73, align 8, !tbaa !30
  %76 = add i32 %51, 1
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %42, %77
  br i1 %78, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %64, %3
  ret void

29:                                               ; preds = %13, %64
  %30 = phi i64 [ 0, %13 ], [ %34, %64 ]
  %31 = phi ptr [ %20, %13 ], [ %67, %64 ]
  %32 = phi ptr [ %15, %13 ], [ %68, %64 ]
  %33 = phi ptr [ %19, %13 ], [ %65, %64 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %64, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi double [ %62, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !53
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = tail call double @llvm.fmuladd.f64(double %43, double %61, double %41)
  %63 = icmp eq ptr %53, %37
  br i1 %63, label %64, label %39

64:                                               ; preds = %52, %29
  %65 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %66 = phi double [ 0.000000e+00, %29 ], [ %62, %52 ]
  %67 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %68 = getelementptr inbounds double, ptr %32, i64 1
  %69 = load double, ptr %32, align 8, !tbaa !30
  %70 = fadd double %66, %69
  store double %70, ptr %32, align 8, !tbaa !30
  %71 = icmp eq i64 %34, %27
  br i1 %71, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %68, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %67, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds double, ptr %14, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !30
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = zext i32 %44 to i64
  %64 = getelementptr inbounds double, ptr %22, i64 %63
  %65 = load double, ptr %64, align 8, !tbaa !30
  %66 = tail call double @llvm.fmuladd.f64(double %46, double %62, double %65)
  store double %66, ptr %64, align 8, !tbaa !30
  %67 = add i32 %42, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !222
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !222
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !222
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %94, %37
  ret void

48:                                               ; preds = %41, %94
  %49 = phi i64 [ 0, %41 ], [ %56, %94 ]
  %50 = phi ptr [ %13, %41 ], [ %77, %94 ]
  %51 = phi ptr [ %16, %41 ], [ %75, %94 ]
  %52 = phi i32 [ %39, %41 ], [ %97, %94 ]
  %53 = phi i32 [ 0, %41 ], [ %96, %94 ]
  %54 = phi i32 [ %38, %41 ], [ %95, %94 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %74, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %72, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds double, ptr %43, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = tail call double @llvm.fmuladd.f64(double %66, double %71, double %63)
  %73 = icmp eq ptr %65, %59
  br i1 %73, label %74, label %61

74:                                               ; preds = %61, %48
  %75 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %76 = phi double [ 0.000000e+00, %48 ], [ %72, %61 ]
  %77 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %78 = icmp eq i32 %52, %55
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = add i32 %53, 1
  br label %94

81:                                               ; preds = %74
  %82 = add i32 %54, 1
  %83 = icmp ult i32 %82, %19
  br i1 %83, label %84, label %94

84:                                               ; preds = %81
  %85 = add i32 %54, 2
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i32, ptr %21, i64 %86
  %88 = load i32, ptr %87, align 4, !tbaa !47, !noalias !227
  %89 = zext i32 %82 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !227
  %92 = add i32 %88, %52
  %93 = sub i32 %92, %91
  br label %94

94:                                               ; preds = %81, %79, %84
  %95 = phi i32 [ %82, %84 ], [ %54, %79 ], [ %82, %81 ]
  %96 = phi i32 [ 0, %84 ], [ %80, %79 ], [ 0, %81 ]
  %97 = phi i32 [ %93, %84 ], [ %52, %79 ], [ -1, %81 ]
  %98 = zext i32 %54 to i64
  %99 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %98, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !53
  %101 = zext i32 %53 to i64
  %102 = getelementptr inbounds double, ptr %100, i64 %101
  store double %76, ptr %102, align 8, !tbaa !30
  %103 = icmp eq i64 %56, %46
  br i1 %103, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds double, ptr %65, i64 %77
  br label %87

87:                                               ; preds = %83, %102
  %88 = phi i64 [ %81, %83 ], [ %112, %102 ]
  %89 = phi i32 [ %84, %83 ], [ %111, %102 ]
  %90 = getelementptr inbounds i32, ptr %85, i64 %88
  %91 = load i32, ptr %90, align 4, !tbaa !47
  %92 = getelementptr inbounds double, ptr %63, i64 %88
  %93 = load double, ptr %92, align 8, !tbaa !30
  %94 = load double, ptr %86, align 8, !tbaa !30
  br label %95

95:                                               ; preds = %95, %87
  %96 = phi i32 [ %5, %87 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %91
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = sub i32 %91, %100
  %104 = zext i32 %103 to i64
  %105 = zext i32 %97 to i64
  %106 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %105, i32 3
  %107 = load ptr, ptr %106, align 8, !tbaa !53
  %108 = getelementptr inbounds double, ptr %107, i64 %104
  %109 = load double, ptr %108, align 8, !tbaa !30
  %110 = tail call double @llvm.fmuladd.f64(double %93, double %94, double %109)
  store double %110, ptr %108, align 8, !tbaa !30
  %111 = add i32 %89, 1
  %112 = zext i32 %111 to i64
  %113 = icmp ugt i64 %80, %112
  br i1 %113, label %87, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !230
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !230
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !230
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %94, %37
  ret void

48:                                               ; preds = %41, %94
  %49 = phi i64 [ 0, %41 ], [ %56, %94 ]
  %50 = phi ptr [ %13, %41 ], [ %77, %94 ]
  %51 = phi ptr [ %16, %41 ], [ %75, %94 ]
  %52 = phi i32 [ %39, %41 ], [ %97, %94 ]
  %53 = phi i32 [ 0, %41 ], [ %96, %94 ]
  %54 = phi i32 [ %38, %41 ], [ %95, %94 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %74, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %72, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds double, ptr %43, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = tail call double @llvm.fmuladd.f64(double %66, double %71, double %63)
  %73 = icmp eq ptr %65, %59
  br i1 %73, label %74, label %61

74:                                               ; preds = %61, %48
  %75 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %76 = phi double [ 0.000000e+00, %48 ], [ %72, %61 ]
  %77 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %78 = icmp eq i32 %52, %55
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = add i32 %53, 1
  br label %94

81:                                               ; preds = %74
  %82 = add i32 %54, 1
  %83 = icmp ult i32 %82, %19
  br i1 %83, label %84, label %94

84:                                               ; preds = %81
  %85 = add i32 %54, 2
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i32, ptr %21, i64 %86
  %88 = load i32, ptr %87, align 4, !tbaa !47, !noalias !233
  %89 = zext i32 %82 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !233
  %92 = add i32 %88, %52
  %93 = sub i32 %92, %91
  br label %94

94:                                               ; preds = %81, %79, %84
  %95 = phi i32 [ %82, %84 ], [ %54, %79 ], [ %82, %81 ]
  %96 = phi i32 [ 0, %84 ], [ %80, %79 ], [ 0, %81 ]
  %97 = phi i32 [ %93, %84 ], [ %52, %79 ], [ -1, %81 ]
  %98 = zext i32 %54 to i64
  %99 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %98, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !53
  %101 = zext i32 %53 to i64
  %102 = getelementptr inbounds double, ptr %100, i64 %101
  %103 = load double, ptr %102, align 8, !tbaa !30
  %104 = fadd double %76, %103
  store double %104, ptr %102, align 8, !tbaa !30
  %105 = icmp eq i64 %56, %46
  br i1 %105, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds double, ptr %16, i64 %30
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %65, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %64, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds double, ptr %14, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = load double, ptr %39, align 8, !tbaa !30
  br label %48

48:                                               ; preds = %48, %40
  %49 = phi i32 [ %18, %40 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %44
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = sub i32 %44, %53
  %57 = zext i32 %56 to i64
  %58 = zext i32 %50 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %22, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = tail call double @llvm.fmuladd.f64(double %46, double %47, double %62)
  store double %63, ptr %61, align 8, !tbaa !30
  %64 = add i32 %42, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %33, %65
  br i1 %66, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !236
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !236
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !236
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %110, %37
  ret void

52:                                               ; preds = %41, %110
  %53 = phi i64 [ 0, %41 ], [ %60, %110 ]
  %54 = phi ptr [ %13, %41 ], [ %93, %110 ]
  %55 = phi ptr [ %16, %41 ], [ %91, %110 ]
  %56 = phi i32 [ %39, %41 ], [ %113, %110 ]
  %57 = phi i32 [ 0, %41 ], [ %112, %110 ]
  %58 = phi i32 [ %38, %41 ], [ %111, %110 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %90, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi double [ %88, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds double, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !53
  %86 = getelementptr inbounds double, ptr %85, i64 %82
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = tail call double @llvm.fmuladd.f64(double %69, double %87, double %67)
  %89 = icmp eq ptr %79, %63
  br i1 %89, label %90, label %65

90:                                               ; preds = %78, %52
  %91 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %92 = phi double [ 0.000000e+00, %52 ], [ %88, %78 ]
  %93 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %94 = icmp eq i32 %56, %59
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  %96 = add i32 %57, 1
  br label %110

97:                                               ; preds = %90
  %98 = add i32 %58, 1
  %99 = icmp ult i32 %98, %19
  br i1 %99, label %100, label %110

100:                                              ; preds = %97
  %101 = add i32 %58, 2
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i32, ptr %21, i64 %102
  %104 = load i32, ptr %103, align 4, !tbaa !47, !noalias !239
  %105 = zext i32 %98 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !239
  %108 = add i32 %104, %56
  %109 = sub i32 %108, %107
  br label %110

110:                                              ; preds = %97, %95, %100
  %111 = phi i32 [ %98, %100 ], [ %58, %95 ], [ %98, %97 ]
  %112 = phi i32 [ 0, %100 ], [ %96, %95 ], [ 0, %97 ]
  %113 = phi i32 [ %109, %100 ], [ %56, %95 ], [ -1, %97 ]
  %114 = zext i32 %58 to i64
  %115 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %114, i32 3
  %116 = load ptr, ptr %115, align 8, !tbaa !53
  %117 = zext i32 %57 to i64
  %118 = getelementptr inbounds double, ptr %116, i64 %117
  store double %92, ptr %118, align 8, !tbaa !30
  %119 = icmp eq i64 %60, %50
  br i1 %119, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %131, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %130, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds double, ptr %63, i64 %92
  %97 = load double, ptr %96, align 8, !tbaa !30
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !53
  %112 = getelementptr inbounds double, ptr %111, i64 %108
  %113 = load double, ptr %112, align 8, !tbaa !30
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = sub i32 %95, %119
  %123 = zext i32 %122 to i64
  %124 = zext i32 %116 to i64
  %125 = getelementptr inbounds %"class.dealii::Vector", ptr %73, i64 %124, i32 3
  %126 = load ptr, ptr %125, align 8, !tbaa !53
  %127 = getelementptr inbounds double, ptr %126, i64 %123
  %128 = load double, ptr %127, align 8, !tbaa !30
  %129 = tail call double @llvm.fmuladd.f64(double %97, double %113, double %128)
  store double %129, ptr %127, align 8, !tbaa !30
  %130 = add i32 %93, 1
  %131 = zext i32 %130 to i64
  %132 = icmp ugt i64 %84, %131
  br i1 %132, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !242
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !242
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !242
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %110, %37
  ret void

52:                                               ; preds = %41, %110
  %53 = phi i64 [ 0, %41 ], [ %60, %110 ]
  %54 = phi ptr [ %13, %41 ], [ %93, %110 ]
  %55 = phi ptr [ %16, %41 ], [ %91, %110 ]
  %56 = phi i32 [ %39, %41 ], [ %113, %110 ]
  %57 = phi i32 [ 0, %41 ], [ %112, %110 ]
  %58 = phi i32 [ %38, %41 ], [ %111, %110 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %90, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi double [ %88, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds double, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !53
  %86 = getelementptr inbounds double, ptr %85, i64 %82
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = tail call double @llvm.fmuladd.f64(double %69, double %87, double %67)
  %89 = icmp eq ptr %79, %63
  br i1 %89, label %90, label %65

90:                                               ; preds = %78, %52
  %91 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %92 = phi double [ 0.000000e+00, %52 ], [ %88, %78 ]
  %93 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %94 = icmp eq i32 %56, %59
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  %96 = add i32 %57, 1
  br label %110

97:                                               ; preds = %90
  %98 = add i32 %58, 1
  %99 = icmp ult i32 %98, %19
  br i1 %99, label %100, label %110

100:                                              ; preds = %97
  %101 = add i32 %58, 2
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i32, ptr %21, i64 %102
  %104 = load i32, ptr %103, align 4, !tbaa !47, !noalias !245
  %105 = zext i32 %98 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !245
  %108 = add i32 %104, %56
  %109 = sub i32 %108, %107
  br label %110

110:                                              ; preds = %97, %95, %100
  %111 = phi i32 [ %98, %100 ], [ %58, %95 ], [ %98, %97 ]
  %112 = phi i32 [ 0, %100 ], [ %96, %95 ], [ 0, %97 ]
  %113 = phi i32 [ %109, %100 ], [ %56, %95 ], [ -1, %97 ]
  %114 = zext i32 %58 to i64
  %115 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %114, i32 3
  %116 = load ptr, ptr %115, align 8, !tbaa !53
  %117 = zext i32 %57 to i64
  %118 = getelementptr inbounds double, ptr %116, i64 %117
  %119 = load double, ptr %118, align 8, !tbaa !30
  %120 = fadd double %92, %119
  store double %120, ptr %118, align 8, !tbaa !30
  %121 = icmp eq i64 %60, %50
  br i1 %121, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %84, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %83, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds double, ptr %14, i64 %45
  %50 = load double, ptr %49, align 8, !tbaa !30
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !53
  %65 = getelementptr inbounds double, ptr %64, i64 %61
  %66 = load double, ptr %65, align 8, !tbaa !30
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = sub i32 %48, %72
  %76 = zext i32 %75 to i64
  %77 = zext i32 %69 to i64
  %78 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %77, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !53
  %80 = getelementptr inbounds double, ptr %79, i64 %76
  %81 = load double, ptr %80, align 8, !tbaa !30
  %82 = tail call double @llvm.fmuladd.f64(double %50, double %66, double %81)
  store double %82, ptr %80, align 8, !tbaa !30
  %83 = add i32 %46, 1
  %84 = zext i32 %83 to i64
  %85 = icmp ugt i64 %37, %84
  br i1 %85, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %49, %3
  ret void

25:                                               ; preds = %13, %49
  %26 = phi i64 [ 0, %13 ], [ %30, %49 ]
  %27 = phi ptr [ %20, %13 ], [ %52, %49 ]
  %28 = phi ptr [ %15, %13 ], [ %53, %49 ]
  %29 = phi ptr [ %19, %13 ], [ %50, %49 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %47, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to double
  %47 = tail call double @llvm.fmuladd.f64(double %40, double %46, double %37)
  %48 = icmp eq ptr %39, %33
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %25
  %50 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %51 = phi double [ 0.000000e+00, %25 ], [ %47, %35 ]
  %52 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %53 = getelementptr inbounds double, ptr %28, i64 1
  store double %51, ptr %28, align 8, !tbaa !30
  %54 = icmp eq i64 %30, %23
  br i1 %54, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %47, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds float, ptr %25, i64 %35
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to double
  br label %47

47:                                               ; preds = %41, %47
  %48 = phi i64 [ %39, %41 ], [ %59, %47 ]
  %49 = phi i32 [ %42, %41 ], [ %58, %47 ]
  %50 = getelementptr inbounds i32, ptr %43, i64 %48
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = getelementptr inbounds double, ptr %23, i64 %48
  %53 = load double, ptr %52, align 8, !tbaa !30
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds double, ptr %27, i64 %54
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = tail call double @llvm.fmuladd.f64(double %53, double %46, double %56)
  store double %57, ptr %55, align 8, !tbaa !30
  %58 = add i32 %49, 1
  %59 = zext i32 %58 to i64
  %60 = icmp ugt i64 %38, %59
  br i1 %60, label %47, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %49, %3
  ret void

25:                                               ; preds = %13, %49
  %26 = phi i64 [ 0, %13 ], [ %30, %49 ]
  %27 = phi ptr [ %20, %13 ], [ %52, %49 ]
  %28 = phi ptr [ %15, %13 ], [ %53, %49 ]
  %29 = phi ptr [ %19, %13 ], [ %50, %49 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %47, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to double
  %47 = tail call double @llvm.fmuladd.f64(double %40, double %46, double %37)
  %48 = icmp eq ptr %39, %33
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %25
  %50 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %51 = phi double [ 0.000000e+00, %25 ], [ %47, %35 ]
  %52 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %53 = getelementptr inbounds double, ptr %28, i64 1
  %54 = load double, ptr %28, align 8, !tbaa !30
  %55 = fadd double %51, %54
  store double %55, ptr %28, align 8, !tbaa !30
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %38, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds float, ptr %16, i64 %26
  %36 = load float, ptr %35, align 4, !tbaa !95
  %37 = fpext float %36 to double
  br label %38

38:                                               ; preds = %32, %38
  %39 = phi i64 [ %30, %32 ], [ %50, %38 ]
  %40 = phi i32 [ %33, %32 ], [ %49, %38 ]
  %41 = getelementptr inbounds i32, ptr %34, i64 %39
  %42 = load i32, ptr %41, align 4, !tbaa !47
  %43 = getelementptr inbounds double, ptr %14, i64 %39
  %44 = load double, ptr %43, align 8, !tbaa !30
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds double, ptr %18, i64 %45
  %47 = load double, ptr %46, align 8, !tbaa !30
  %48 = tail call double @llvm.fmuladd.f64(double %44, double %37, double %47)
  store double %48, ptr %46, align 8, !tbaa !30
  %49 = add i32 %40, 1
  %50 = zext i32 %49 to i64
  %51 = icmp ugt i64 %29, %50
  br i1 %51, label %38, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %65, %3
  ret void

29:                                               ; preds = %13, %65
  %30 = phi i64 [ 0, %13 ], [ %34, %65 ]
  %31 = phi ptr [ %20, %13 ], [ %68, %65 ]
  %32 = phi ptr [ %15, %13 ], [ %69, %65 ]
  %33 = phi ptr [ %19, %13 ], [ %66, %65 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %65, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi double [ %63, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to double
  %63 = tail call double @llvm.fmuladd.f64(double %43, double %62, double %41)
  %64 = icmp eq ptr %53, %37
  br i1 %64, label %65, label %39

65:                                               ; preds = %52, %29
  %66 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %67 = phi double [ 0.000000e+00, %29 ], [ %63, %52 ]
  %68 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %69 = getelementptr inbounds double, ptr %32, i64 1
  store double %67, ptr %32, align 8, !tbaa !30
  %70 = icmp eq i64 %34, %27
  br i1 %70, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %78, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %77, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds double, ptr %23, i64 %50
  %55 = load double, ptr %54, align 8, !tbaa !30
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = sub i32 %48, %61
  %66 = zext i32 %65 to i64
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"class.dealii::Vector.20", ptr %29, i64 %67, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !106
  %70 = getelementptr inbounds float, ptr %69, i64 %66
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to double
  %73 = zext i32 %53 to i64
  %74 = getelementptr inbounds double, ptr %31, i64 %73
  %75 = load double, ptr %74, align 8, !tbaa !30
  %76 = tail call double @llvm.fmuladd.f64(double %55, double %72, double %75)
  store double %76, ptr %74, align 8, !tbaa !30
  %77 = add i32 %51, 1
  %78 = zext i32 %77 to i64
  %79 = icmp ugt i64 %42, %78
  br i1 %79, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %65, %3
  ret void

29:                                               ; preds = %13, %65
  %30 = phi i64 [ 0, %13 ], [ %34, %65 ]
  %31 = phi ptr [ %20, %13 ], [ %68, %65 ]
  %32 = phi ptr [ %15, %13 ], [ %69, %65 ]
  %33 = phi ptr [ %19, %13 ], [ %66, %65 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %65, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi double [ %63, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to double
  %63 = tail call double @llvm.fmuladd.f64(double %43, double %62, double %41)
  %64 = icmp eq ptr %53, %37
  br i1 %64, label %65, label %39

65:                                               ; preds = %52, %29
  %66 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %67 = phi double [ 0.000000e+00, %29 ], [ %63, %52 ]
  %68 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %69 = getelementptr inbounds double, ptr %32, i64 1
  %70 = load double, ptr %32, align 8, !tbaa !30
  %71 = fadd double %67, %70
  store double %71, ptr %32, align 8, !tbaa !30
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %69, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %68, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds double, ptr %14, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !30
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = getelementptr inbounds float, ptr %60, i64 %57
  %62 = load float, ptr %61, align 4, !tbaa !95
  %63 = fpext float %62 to double
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds double, ptr %22, i64 %64
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = tail call double @llvm.fmuladd.f64(double %46, double %63, double %66)
  store double %67, ptr %65, align 8, !tbaa !30
  %68 = add i32 %42, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %33, %69
  br i1 %70, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !248
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !248
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !248
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %95, %37
  ret void

48:                                               ; preds = %41, %95
  %49 = phi i64 [ 0, %41 ], [ %56, %95 ]
  %50 = phi ptr [ %13, %41 ], [ %78, %95 ]
  %51 = phi ptr [ %16, %41 ], [ %76, %95 ]
  %52 = phi i32 [ %39, %41 ], [ %98, %95 ]
  %53 = phi i32 [ 0, %41 ], [ %97, %95 ]
  %54 = phi i32 [ %38, %41 ], [ %96, %95 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %73, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to double
  %73 = tail call double @llvm.fmuladd.f64(double %66, double %72, double %63)
  %74 = icmp eq ptr %65, %59
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %48
  %76 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %77 = phi double [ 0.000000e+00, %48 ], [ %73, %61 ]
  %78 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %79 = icmp eq i32 %52, %55
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = add i32 %53, 1
  br label %95

82:                                               ; preds = %75
  %83 = add i32 %54, 1
  %84 = icmp ult i32 %83, %19
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = add i32 %54, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %21, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !47, !noalias !251
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i32, ptr %21, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !47, !noalias !251
  %93 = add i32 %89, %52
  %94 = sub i32 %93, %92
  br label %95

95:                                               ; preds = %82, %80, %85
  %96 = phi i32 [ %83, %85 ], [ %54, %80 ], [ %83, %82 ]
  %97 = phi i32 [ 0, %85 ], [ %81, %80 ], [ 0, %82 ]
  %98 = phi i32 [ %94, %85 ], [ %52, %80 ], [ -1, %82 ]
  %99 = zext i32 %54 to i64
  %100 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %99, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !53
  %102 = zext i32 %53 to i64
  %103 = getelementptr inbounds double, ptr %101, i64 %102
  store double %77, ptr %103, align 8, !tbaa !30
  %104 = icmp eq i64 %56, %46
  br i1 %104, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %103, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds float, ptr %65, i64 %77
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to double
  br label %89

89:                                               ; preds = %83, %103
  %90 = phi i64 [ %81, %83 ], [ %113, %103 ]
  %91 = phi i32 [ %84, %83 ], [ %112, %103 ]
  %92 = getelementptr inbounds i32, ptr %85, i64 %90
  %93 = load i32, ptr %92, align 4, !tbaa !47
  %94 = getelementptr inbounds double, ptr %63, i64 %90
  %95 = load double, ptr %94, align 8, !tbaa !30
  br label %96

96:                                               ; preds = %96, %89
  %97 = phi i32 [ %5, %89 ], [ %98, %96 ]
  %98 = add i32 %97, -1
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i32, ptr %67, i64 %99
  %101 = load i32, ptr %100, align 4, !tbaa !47
  %102 = icmp ugt i32 %101, %93
  br i1 %102, label %96, label %103

103:                                              ; preds = %96
  %104 = sub i32 %93, %101
  %105 = zext i32 %104 to i64
  %106 = zext i32 %98 to i64
  %107 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %106, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !53
  %109 = getelementptr inbounds double, ptr %108, i64 %105
  %110 = load double, ptr %109, align 8, !tbaa !30
  %111 = tail call double @llvm.fmuladd.f64(double %95, double %88, double %110)
  store double %111, ptr %109, align 8, !tbaa !30
  %112 = add i32 %91, 1
  %113 = zext i32 %112 to i64
  %114 = icmp ugt i64 %80, %113
  br i1 %114, label %89, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !254
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !254
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !254
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %95, %37
  ret void

48:                                               ; preds = %41, %95
  %49 = phi i64 [ 0, %41 ], [ %56, %95 ]
  %50 = phi ptr [ %13, %41 ], [ %78, %95 ]
  %51 = phi ptr [ %16, %41 ], [ %76, %95 ]
  %52 = phi i32 [ %39, %41 ], [ %98, %95 ]
  %53 = phi i32 [ 0, %41 ], [ %97, %95 ]
  %54 = phi i32 [ %38, %41 ], [ %96, %95 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %73, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to double
  %73 = tail call double @llvm.fmuladd.f64(double %66, double %72, double %63)
  %74 = icmp eq ptr %65, %59
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %48
  %76 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %77 = phi double [ 0.000000e+00, %48 ], [ %73, %61 ]
  %78 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %79 = icmp eq i32 %52, %55
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = add i32 %53, 1
  br label %95

82:                                               ; preds = %75
  %83 = add i32 %54, 1
  %84 = icmp ult i32 %83, %19
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = add i32 %54, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %21, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !47, !noalias !257
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i32, ptr %21, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !47, !noalias !257
  %93 = add i32 %89, %52
  %94 = sub i32 %93, %92
  br label %95

95:                                               ; preds = %82, %80, %85
  %96 = phi i32 [ %83, %85 ], [ %54, %80 ], [ %83, %82 ]
  %97 = phi i32 [ 0, %85 ], [ %81, %80 ], [ 0, %82 ]
  %98 = phi i32 [ %94, %85 ], [ %52, %80 ], [ -1, %82 ]
  %99 = zext i32 %54 to i64
  %100 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %99, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !53
  %102 = zext i32 %53 to i64
  %103 = getelementptr inbounds double, ptr %101, i64 %102
  %104 = load double, ptr %103, align 8, !tbaa !30
  %105 = fadd double %77, %104
  store double %105, ptr %103, align 8, !tbaa !30
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %56, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds float, ptr %16, i64 %30
  %40 = load float, ptr %39, align 4, !tbaa !95
  %41 = fpext float %40 to double
  br label %42

42:                                               ; preds = %36, %56
  %43 = phi i64 [ %34, %36 ], [ %66, %56 ]
  %44 = phi i32 [ %37, %36 ], [ %65, %56 ]
  %45 = getelementptr inbounds i32, ptr %38, i64 %43
  %46 = load i32, ptr %45, align 4, !tbaa !47
  %47 = getelementptr inbounds double, ptr %14, i64 %43
  %48 = load double, ptr %47, align 8, !tbaa !30
  br label %49

49:                                               ; preds = %49, %42
  %50 = phi i32 [ %18, %42 ], [ %51, %49 ]
  %51 = add i32 %50, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, ptr %20, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = icmp ugt i32 %54, %46
  br i1 %55, label %49, label %56

56:                                               ; preds = %49
  %57 = sub i32 %46, %54
  %58 = zext i32 %57 to i64
  %59 = zext i32 %51 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !53
  %62 = getelementptr inbounds double, ptr %61, i64 %58
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = tail call double @llvm.fmuladd.f64(double %48, double %41, double %63)
  store double %64, ptr %62, align 8, !tbaa !30
  %65 = add i32 %44, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %33, %66
  br i1 %67, label %42, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !260
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !260
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !260
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %111, %37
  ret void

52:                                               ; preds = %41, %111
  %53 = phi i64 [ 0, %41 ], [ %60, %111 ]
  %54 = phi ptr [ %13, %41 ], [ %94, %111 ]
  %55 = phi ptr [ %16, %41 ], [ %92, %111 ]
  %56 = phi i32 [ %39, %41 ], [ %114, %111 ]
  %57 = phi i32 [ 0, %41 ], [ %113, %111 ]
  %58 = phi i32 [ %38, %41 ], [ %112, %111 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %91, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi double [ %89, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds double, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to double
  %89 = tail call double @llvm.fmuladd.f64(double %69, double %88, double %67)
  %90 = icmp eq ptr %79, %63
  br i1 %90, label %91, label %65

91:                                               ; preds = %78, %52
  %92 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %93 = phi double [ 0.000000e+00, %52 ], [ %89, %78 ]
  %94 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %95 = icmp eq i32 %56, %59
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = add i32 %57, 1
  br label %111

98:                                               ; preds = %91
  %99 = add i32 %58, 1
  %100 = icmp ult i32 %99, %19
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = add i32 %58, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %21, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !47, !noalias !263
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds i32, ptr %21, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !47, !noalias !263
  %109 = add i32 %105, %56
  %110 = sub i32 %109, %108
  br label %111

111:                                              ; preds = %98, %96, %101
  %112 = phi i32 [ %99, %101 ], [ %58, %96 ], [ %99, %98 ]
  %113 = phi i32 [ 0, %101 ], [ %97, %96 ], [ 0, %98 ]
  %114 = phi i32 [ %110, %101 ], [ %56, %96 ], [ -1, %98 ]
  %115 = zext i32 %58 to i64
  %116 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %115, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !53
  %118 = zext i32 %57 to i64
  %119 = getelementptr inbounds double, ptr %117, i64 %118
  store double %93, ptr %119, align 8, !tbaa !30
  %120 = icmp eq i64 %60, %50
  br i1 %120, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %132, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %131, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds double, ptr %63, i64 %92
  %97 = load double, ptr %96, align 8, !tbaa !30
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !106
  %112 = getelementptr inbounds float, ptr %111, i64 %108
  %113 = load float, ptr %112, align 4, !tbaa !95
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = fpext float %113 to double
  %123 = sub i32 %95, %119
  %124 = zext i32 %123 to i64
  %125 = zext i32 %116 to i64
  %126 = getelementptr inbounds %"class.dealii::Vector", ptr %73, i64 %125, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !53
  %128 = getelementptr inbounds double, ptr %127, i64 %124
  %129 = load double, ptr %128, align 8, !tbaa !30
  %130 = tail call double @llvm.fmuladd.f64(double %97, double %122, double %129)
  store double %130, ptr %128, align 8, !tbaa !30
  %131 = add i32 %93, 1
  %132 = zext i32 %131 to i64
  %133 = icmp ugt i64 %84, %132
  br i1 %133, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !266
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !266
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !266
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %111, %37
  ret void

52:                                               ; preds = %41, %111
  %53 = phi i64 [ 0, %41 ], [ %60, %111 ]
  %54 = phi ptr [ %13, %41 ], [ %94, %111 ]
  %55 = phi ptr [ %16, %41 ], [ %92, %111 ]
  %56 = phi i32 [ %39, %41 ], [ %114, %111 ]
  %57 = phi i32 [ 0, %41 ], [ %113, %111 ]
  %58 = phi i32 [ %38, %41 ], [ %112, %111 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %91, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi double [ %89, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds double, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to double
  %89 = tail call double @llvm.fmuladd.f64(double %69, double %88, double %67)
  %90 = icmp eq ptr %79, %63
  br i1 %90, label %91, label %65

91:                                               ; preds = %78, %52
  %92 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %93 = phi double [ 0.000000e+00, %52 ], [ %89, %78 ]
  %94 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %95 = icmp eq i32 %56, %59
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = add i32 %57, 1
  br label %111

98:                                               ; preds = %91
  %99 = add i32 %58, 1
  %100 = icmp ult i32 %99, %19
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = add i32 %58, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %21, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !47, !noalias !269
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds i32, ptr %21, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !47, !noalias !269
  %109 = add i32 %105, %56
  %110 = sub i32 %109, %108
  br label %111

111:                                              ; preds = %98, %96, %101
  %112 = phi i32 [ %99, %101 ], [ %58, %96 ], [ %99, %98 ]
  %113 = phi i32 [ 0, %101 ], [ %97, %96 ], [ 0, %98 ]
  %114 = phi i32 [ %110, %101 ], [ %56, %96 ], [ -1, %98 ]
  %115 = zext i32 %58 to i64
  %116 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %115, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !53
  %118 = zext i32 %57 to i64
  %119 = getelementptr inbounds double, ptr %117, i64 %118
  %120 = load double, ptr %119, align 8, !tbaa !30
  %121 = fadd double %93, %120
  store double %121, ptr %119, align 8, !tbaa !30
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %85, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %84, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds double, ptr %14, i64 %45
  %50 = load double, ptr %49, align 8, !tbaa !30
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !106
  %65 = getelementptr inbounds float, ptr %64, i64 %61
  %66 = load float, ptr %65, align 4, !tbaa !95
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext float %66 to double
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !53
  %81 = getelementptr inbounds double, ptr %80, i64 %77
  %82 = load double, ptr %81, align 8, !tbaa !30
  %83 = tail call double @llvm.fmuladd.f64(double %50, double %75, double %82)
  store double %83, ptr %81, align 8, !tbaa !30
  %84 = add i32 %46, 1
  %85 = zext i32 %84 to i64
  %86 = icmp ugt i64 %37, %85
  br i1 %86, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = fpext double %40 to x86_fp80
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %22, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = fpext double %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to double
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %42, %35 ]
  %53 = phi double [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds double, ptr %28, i64 1
  store double %53, ptr %28, align 8, !tbaa !30
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %46, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds x86_fp80, ptr %25, i64 %35
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  br label %46

46:                                               ; preds = %41, %46
  %47 = phi i64 [ %39, %41 ], [ %61, %46 ]
  %48 = phi i32 [ %42, %41 ], [ %60, %46 ]
  %49 = getelementptr inbounds i32, ptr %43, i64 %47
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = getelementptr inbounds double, ptr %23, i64 %47
  %52 = load double, ptr %51, align 8, !tbaa !30
  %53 = fpext double %52 to x86_fp80
  %54 = zext i32 %50 to i64
  %55 = getelementptr inbounds double, ptr %27, i64 %54
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = fpext double %56 to x86_fp80
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %53, x86_fp80 %45, x86_fp80 %57)
  %59 = fptrunc x86_fp80 %58 to double
  store double %59, ptr %55, align 8, !tbaa !30
  %60 = add i32 %48, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %38, %61
  br i1 %62, label %46, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = fpext double %40 to x86_fp80
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %22, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = fpext double %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to double
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %42, %35 ]
  %53 = phi double [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds double, ptr %28, i64 1
  %56 = load double, ptr %28, align 8, !tbaa !30
  %57 = fadd double %53, %56
  store double %57, ptr %28, align 8, !tbaa !30
  %58 = icmp eq i64 %30, %23
  br i1 %58, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %37, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds x86_fp80, ptr %16, i64 %26
  %36 = load x86_fp80, ptr %35, align 16, !tbaa !128
  br label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %30, %32 ], [ %52, %37 ]
  %39 = phi i32 [ %33, %32 ], [ %51, %37 ]
  %40 = getelementptr inbounds i32, ptr %34, i64 %38
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds double, ptr %14, i64 %38
  %43 = load double, ptr %42, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = zext i32 %41 to i64
  %46 = getelementptr inbounds double, ptr %18, i64 %45
  %47 = load double, ptr %46, align 8, !tbaa !30
  %48 = fpext double %47 to x86_fp80
  %49 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %36, x86_fp80 %48)
  %50 = fptrunc x86_fp80 %49 to double
  store double %50, ptr %46, align 8, !tbaa !30
  %51 = add i32 %39, 1
  %52 = zext i32 %51 to i64
  %53 = icmp ugt i64 %29, %52
  br i1 %53, label %37, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi double [ %65, %53 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %33, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds double, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = fpext double %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to double
  %66 = icmp eq ptr %54, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %53, %29
  %68 = phi ptr [ %33, %29 ], [ %55, %53 ]
  %69 = phi double [ 0.000000e+00, %29 ], [ %65, %53 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %71 = getelementptr inbounds double, ptr %32, i64 1
  store double %69, ptr %32, align 8, !tbaa !30
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %80, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %79, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds double, ptr %23, i64 %50
  %55 = load double, ptr %54, align 8, !tbaa !30
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = fpext double %55 to x86_fp80
  %66 = sub i32 %48, %61
  %67 = zext i32 %66 to i64
  %68 = zext i32 %58 to i64
  %69 = getelementptr inbounds %"class.dealii::Vector.27", ptr %29, i64 %68, i32 3
  %70 = load ptr, ptr %69, align 8, !tbaa !135
  %71 = getelementptr inbounds x86_fp80, ptr %70, i64 %67
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = zext i32 %53 to i64
  %74 = getelementptr inbounds double, ptr %31, i64 %73
  %75 = load double, ptr %74, align 8, !tbaa !30
  %76 = fpext double %75 to x86_fp80
  %77 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %65, x86_fp80 %72, x86_fp80 %76)
  %78 = fptrunc x86_fp80 %77 to double
  store double %78, ptr %74, align 8, !tbaa !30
  %79 = add i32 %51, 1
  %80 = zext i32 %79 to i64
  %81 = icmp ugt i64 %42, %80
  br i1 %81, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi double [ %65, %53 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %33, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds double, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = fpext double %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to double
  %66 = icmp eq ptr %54, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %53, %29
  %68 = phi ptr [ %33, %29 ], [ %55, %53 ]
  %69 = phi double [ 0.000000e+00, %29 ], [ %65, %53 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %71 = getelementptr inbounds double, ptr %32, i64 1
  %72 = load double, ptr %32, align 8, !tbaa !30
  %73 = fadd double %69, %72
  store double %73, ptr %32, align 8, !tbaa !30
  %74 = icmp eq i64 %34, %27
  br i1 %74, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %71, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %70, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds double, ptr %14, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !30
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = fpext double %46 to x86_fp80
  %57 = sub i32 %39, %52
  %58 = zext i32 %57 to i64
  %59 = zext i32 %49 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !135
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 %58
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds double, ptr %22, i64 %64
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = fpext double %66 to x86_fp80
  %68 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %63, x86_fp80 %67)
  %69 = fptrunc x86_fp80 %68 to double
  store double %69, ptr %65, align 8, !tbaa !30
  %70 = add i32 %42, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %33, %71
  br i1 %72, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !272
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !272
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !272
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = fpext double %66 to x86_fp80
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds x86_fp80, ptr %43, i64 %70
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = fpext double %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to double
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %79 = phi double [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !275
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !275
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !53
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds double, ptr %103, i64 %104
  store double %79, ptr %105, align 8, !tbaa !30
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds x86_fp80, ptr %65, i64 %77
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  br label %88

88:                                               ; preds = %83, %102
  %89 = phi i64 [ %81, %83 ], [ %115, %102 ]
  %90 = phi i32 [ %84, %83 ], [ %114, %102 ]
  %91 = getelementptr inbounds i32, ptr %85, i64 %89
  %92 = load i32, ptr %91, align 4, !tbaa !47
  %93 = getelementptr inbounds double, ptr %63, i64 %89
  %94 = load double, ptr %93, align 8, !tbaa !30
  br label %95

95:                                               ; preds = %95, %88
  %96 = phi i32 [ %5, %88 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %92
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = fpext double %94 to x86_fp80
  %104 = sub i32 %92, %100
  %105 = zext i32 %104 to i64
  %106 = zext i32 %97 to i64
  %107 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %106, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !53
  %109 = getelementptr inbounds double, ptr %108, i64 %105
  %110 = load double, ptr %109, align 8, !tbaa !30
  %111 = fpext double %110 to x86_fp80
  %112 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %103, x86_fp80 %87, x86_fp80 %111)
  %113 = fptrunc x86_fp80 %112 to double
  store double %113, ptr %109, align 8, !tbaa !30
  %114 = add i32 %90, 1
  %115 = zext i32 %114 to i64
  %116 = icmp ugt i64 %80, %115
  br i1 %116, label %88, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !278
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !278
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !278
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = fpext double %66 to x86_fp80
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds x86_fp80, ptr %43, i64 %70
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = fpext double %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to double
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %79 = phi double [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !281
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !281
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !53
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds double, ptr %103, i64 %104
  %106 = load double, ptr %105, align 8, !tbaa !30
  %107 = fadd double %79, %106
  store double %107, ptr %105, align 8, !tbaa !30
  %108 = icmp eq i64 %56, %46
  br i1 %108, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %30
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !128
  br label %41

41:                                               ; preds = %36, %55
  %42 = phi i64 [ %34, %36 ], [ %68, %55 ]
  %43 = phi i32 [ %37, %36 ], [ %67, %55 ]
  %44 = getelementptr inbounds i32, ptr %38, i64 %42
  %45 = load i32, ptr %44, align 4, !tbaa !47
  %46 = getelementptr inbounds double, ptr %14, i64 %42
  %47 = load double, ptr %46, align 8, !tbaa !30
  br label %48

48:                                               ; preds = %48, %41
  %49 = phi i32 [ %18, %41 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %45
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = fpext double %47 to x86_fp80
  %57 = sub i32 %45, %53
  %58 = zext i32 %57 to i64
  %59 = zext i32 %50 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !53
  %62 = getelementptr inbounds double, ptr %61, i64 %58
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = fpext double %63 to x86_fp80
  %65 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %40, x86_fp80 %64)
  %66 = fptrunc x86_fp80 %65 to double
  store double %66, ptr %62, align 8, !tbaa !30
  %67 = add i32 %43, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %41, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !284
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !284
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !284
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi double [ %91, %79 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = fpext double %69 to x86_fp80
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds double, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !135
  %87 = getelementptr inbounds x86_fp80, ptr %86, i64 %83
  %88 = load x86_fp80, ptr %87, align 16, !tbaa !128
  %89 = fpext double %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to double
  %92 = icmp eq ptr %80, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %79, %52
  %94 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %95 = phi double [ 0.000000e+00, %52 ], [ %91, %79 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !287
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !287
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !53
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds double, ptr %119, i64 %120
  store double %95, ptr %121, align 8, !tbaa !30
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %134, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %133, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds double, ptr %63, i64 %92
  %97 = load double, ptr %96, align 8, !tbaa !30
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector.27", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !135
  %112 = getelementptr inbounds x86_fp80, ptr %111, i64 %108
  %113 = load x86_fp80, ptr %112, align 16, !tbaa !128
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = fpext double %97 to x86_fp80
  %123 = sub i32 %95, %119
  %124 = zext i32 %123 to i64
  %125 = zext i32 %116 to i64
  %126 = getelementptr inbounds %"class.dealii::Vector", ptr %73, i64 %125, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !53
  %128 = getelementptr inbounds double, ptr %127, i64 %124
  %129 = load double, ptr %128, align 8, !tbaa !30
  %130 = fpext double %129 to x86_fp80
  %131 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %122, x86_fp80 %113, x86_fp80 %130)
  %132 = fptrunc x86_fp80 %131 to double
  store double %132, ptr %128, align 8, !tbaa !30
  %133 = add i32 %93, 1
  %134 = zext i32 %133 to i64
  %135 = icmp ugt i64 %84, %134
  br i1 %135, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !290
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !290
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !290
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi double [ %91, %79 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = fpext double %69 to x86_fp80
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds double, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !135
  %87 = getelementptr inbounds x86_fp80, ptr %86, i64 %83
  %88 = load x86_fp80, ptr %87, align 16, !tbaa !128
  %89 = fpext double %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to double
  %92 = icmp eq ptr %80, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %79, %52
  %94 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %95 = phi double [ 0.000000e+00, %52 ], [ %91, %79 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !293
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !293
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !53
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds double, ptr %119, i64 %120
  %122 = load double, ptr %121, align 8, !tbaa !30
  %123 = fadd double %95, %122
  store double %123, ptr %121, align 8, !tbaa !30
  %124 = icmp eq i64 %60, %50
  br i1 %124, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %87, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %86, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds double, ptr %14, i64 %45
  %50 = load double, ptr %49, align 8, !tbaa !30
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !135
  %65 = getelementptr inbounds x86_fp80, ptr %64, i64 %61
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext double %50 to x86_fp80
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !53
  %81 = getelementptr inbounds double, ptr %80, i64 %77
  %82 = load double, ptr %81, align 8, !tbaa !30
  %83 = fpext double %82 to x86_fp80
  %84 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %75, x86_fp80 %66, x86_fp80 %83)
  %85 = fptrunc x86_fp80 %84 to double
  store double %85, ptr %81, align 8, !tbaa !30
  %86 = add i32 %46, 1
  %87 = zext i32 %86 to i64
  %88 = icmp ugt i64 %37, %87
  br i1 %88, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %50, %3
  ret void

25:                                               ; preds = %13, %50
  %26 = phi i64 [ 0, %13 ], [ %30, %50 ]
  %27 = phi ptr [ %20, %13 ], [ %53, %50 ]
  %28 = phi ptr [ %15, %13 ], [ %54, %50 ]
  %29 = phi ptr [ %19, %13 ], [ %51, %50 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %48, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, ptr %22, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fpext float %37 to double
  %47 = tail call double @llvm.fmuladd.f64(double %40, double %45, double %46)
  %48 = fptrunc double %47 to float
  %49 = icmp eq ptr %39, %33
  br i1 %49, label %50, label %35

50:                                               ; preds = %35, %25
  %51 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %52 = phi float [ 0.000000e+00, %25 ], [ %48, %35 ]
  %53 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %54 = getelementptr inbounds float, ptr %28, i64 1
  store float %52, ptr %28, align 4, !tbaa !95
  %55 = icmp eq i64 %30, %23
  br i1 %55, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %46, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds double, ptr %25, i64 %35
  %45 = load double, ptr %44, align 8, !tbaa !30
  br label %46

46:                                               ; preds = %41, %46
  %47 = phi i64 [ %39, %41 ], [ %60, %46 ]
  %48 = phi i32 [ %42, %41 ], [ %59, %46 ]
  %49 = getelementptr inbounds i32, ptr %43, i64 %47
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = getelementptr inbounds double, ptr %23, i64 %47
  %52 = load double, ptr %51, align 8, !tbaa !30
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds float, ptr %27, i64 %53
  %55 = load float, ptr %54, align 4, !tbaa !95
  %56 = fpext float %55 to double
  %57 = tail call double @llvm.fmuladd.f64(double %52, double %45, double %56)
  %58 = fptrunc double %57 to float
  store float %58, ptr %54, align 4, !tbaa !95
  %59 = add i32 %48, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %38, %60
  br i1 %61, label %46, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %50, %3
  ret void

25:                                               ; preds = %13, %50
  %26 = phi i64 [ 0, %13 ], [ %30, %50 ]
  %27 = phi ptr [ %20, %13 ], [ %53, %50 ]
  %28 = phi ptr [ %15, %13 ], [ %54, %50 ]
  %29 = phi ptr [ %19, %13 ], [ %51, %50 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %48, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, ptr %22, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fpext float %37 to double
  %47 = tail call double @llvm.fmuladd.f64(double %40, double %45, double %46)
  %48 = fptrunc double %47 to float
  %49 = icmp eq ptr %39, %33
  br i1 %49, label %50, label %35

50:                                               ; preds = %35, %25
  %51 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %52 = phi float [ 0.000000e+00, %25 ], [ %48, %35 ]
  %53 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %54 = getelementptr inbounds float, ptr %28, i64 1
  %55 = load float, ptr %28, align 4, !tbaa !95
  %56 = fadd float %52, %55
  store float %56, ptr %28, align 4, !tbaa !95
  %57 = icmp eq i64 %30, %23
  br i1 %57, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %37, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds double, ptr %16, i64 %26
  %36 = load double, ptr %35, align 8, !tbaa !30
  br label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %30, %32 ], [ %51, %37 ]
  %39 = phi i32 [ %33, %32 ], [ %50, %37 ]
  %40 = getelementptr inbounds i32, ptr %34, i64 %38
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds double, ptr %14, i64 %38
  %43 = load double, ptr %42, align 8, !tbaa !30
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds float, ptr %18, i64 %44
  %46 = load float, ptr %45, align 4, !tbaa !95
  %47 = fpext float %46 to double
  %48 = tail call double @llvm.fmuladd.f64(double %43, double %36, double %47)
  %49 = fptrunc double %48 to float
  store float %49, ptr %45, align 4, !tbaa !95
  %50 = add i32 %39, 1
  %51 = zext i32 %50 to i64
  %52 = icmp ugt i64 %29, %51
  br i1 %52, label %37, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %66, %3
  ret void

29:                                               ; preds = %13, %66
  %30 = phi i64 [ 0, %13 ], [ %34, %66 ]
  %31 = phi ptr [ %20, %13 ], [ %69, %66 ]
  %32 = phi ptr [ %15, %13 ], [ %70, %66 ]
  %33 = phi ptr [ %19, %13 ], [ %67, %66 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi float [ %64, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !53
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = fpext float %41 to double
  %63 = tail call double @llvm.fmuladd.f64(double %43, double %61, double %62)
  %64 = fptrunc double %63 to float
  %65 = icmp eq ptr %53, %37
  br i1 %65, label %66, label %39

66:                                               ; preds = %52, %29
  %67 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %68 = phi float [ 0.000000e+00, %29 ], [ %64, %52 ]
  %69 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %70 = getelementptr inbounds float, ptr %32, i64 1
  store float %68, ptr %32, align 4, !tbaa !95
  %71 = icmp eq i64 %34, %27
  br i1 %71, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %79, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %78, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds double, ptr %23, i64 %50
  %55 = load double, ptr %54, align 8, !tbaa !30
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = sub i32 %48, %61
  %66 = zext i32 %65 to i64
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"class.dealii::Vector", ptr %29, i64 %67, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !53
  %70 = getelementptr inbounds double, ptr %69, i64 %66
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = zext i32 %53 to i64
  %73 = getelementptr inbounds float, ptr %31, i64 %72
  %74 = load float, ptr %73, align 4, !tbaa !95
  %75 = fpext float %74 to double
  %76 = tail call double @llvm.fmuladd.f64(double %55, double %71, double %75)
  %77 = fptrunc double %76 to float
  store float %77, ptr %73, align 4, !tbaa !95
  %78 = add i32 %51, 1
  %79 = zext i32 %78 to i64
  %80 = icmp ugt i64 %42, %79
  br i1 %80, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %66, %3
  ret void

29:                                               ; preds = %13, %66
  %30 = phi i64 [ 0, %13 ], [ %34, %66 ]
  %31 = phi ptr [ %20, %13 ], [ %69, %66 ]
  %32 = phi ptr [ %15, %13 ], [ %70, %66 ]
  %33 = phi ptr [ %19, %13 ], [ %67, %66 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi float [ %64, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !53
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = fpext float %41 to double
  %63 = tail call double @llvm.fmuladd.f64(double %43, double %61, double %62)
  %64 = fptrunc double %63 to float
  %65 = icmp eq ptr %53, %37
  br i1 %65, label %66, label %39

66:                                               ; preds = %52, %29
  %67 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %68 = phi float [ 0.000000e+00, %29 ], [ %64, %52 ]
  %69 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %70 = getelementptr inbounds float, ptr %32, i64 1
  %71 = load float, ptr %32, align 4, !tbaa !95
  %72 = fadd float %68, %71
  store float %72, ptr %32, align 4, !tbaa !95
  %73 = icmp eq i64 %34, %27
  br i1 %73, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %70, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %69, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds double, ptr %14, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !30
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = zext i32 %44 to i64
  %64 = getelementptr inbounds float, ptr %22, i64 %63
  %65 = load float, ptr %64, align 4, !tbaa !95
  %66 = fpext float %65 to double
  %67 = tail call double @llvm.fmuladd.f64(double %46, double %62, double %66)
  %68 = fptrunc double %67 to float
  store float %68, ptr %64, align 4, !tbaa !95
  %69 = add i32 %42, 1
  %70 = zext i32 %69 to i64
  %71 = icmp ugt i64 %33, %70
  br i1 %71, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !296
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !296
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !296
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %96, %37
  ret void

48:                                               ; preds = %41, %96
  %49 = phi i64 [ 0, %41 ], [ %56, %96 ]
  %50 = phi ptr [ %13, %41 ], [ %79, %96 ]
  %51 = phi ptr [ %16, %41 ], [ %77, %96 ]
  %52 = phi i32 [ %39, %41 ], [ %99, %96 ]
  %53 = phi i32 [ 0, %41 ], [ %98, %96 ]
  %54 = phi i32 [ %38, %41 ], [ %97, %96 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %74, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds double, ptr %43, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fpext float %63 to double
  %73 = tail call double @llvm.fmuladd.f64(double %66, double %71, double %72)
  %74 = fptrunc double %73 to float
  %75 = icmp eq ptr %65, %59
  br i1 %75, label %76, label %61

76:                                               ; preds = %61, %48
  %77 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %78 = phi float [ 0.000000e+00, %48 ], [ %74, %61 ]
  %79 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %80 = icmp eq i32 %52, %55
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = add i32 %53, 1
  br label %96

83:                                               ; preds = %76
  %84 = add i32 %54, 1
  %85 = icmp ult i32 %84, %19
  br i1 %85, label %86, label %96

86:                                               ; preds = %83
  %87 = add i32 %54, 2
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, ptr %21, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !47, !noalias !301
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, ptr %21, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47, !noalias !301
  %94 = add i32 %90, %52
  %95 = sub i32 %94, %93
  br label %96

96:                                               ; preds = %83, %81, %86
  %97 = phi i32 [ %84, %86 ], [ %54, %81 ], [ %84, %83 ]
  %98 = phi i32 [ 0, %86 ], [ %82, %81 ], [ 0, %83 ]
  %99 = phi i32 [ %95, %86 ], [ %52, %81 ], [ -1, %83 ]
  %100 = zext i32 %54 to i64
  %101 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %100, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !106
  %103 = zext i32 %53 to i64
  %104 = getelementptr inbounds float, ptr %102, i64 %103
  store float %78, ptr %104, align 4, !tbaa !95
  %105 = icmp eq i64 %56, %46
  br i1 %105, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds double, ptr %65, i64 %77
  %87 = load double, ptr %86, align 8, !tbaa !30
  br label %88

88:                                               ; preds = %83, %102
  %89 = phi i64 [ %81, %83 ], [ %114, %102 ]
  %90 = phi i32 [ %84, %83 ], [ %113, %102 ]
  %91 = getelementptr inbounds i32, ptr %85, i64 %89
  %92 = load i32, ptr %91, align 4, !tbaa !47
  %93 = getelementptr inbounds double, ptr %63, i64 %89
  %94 = load double, ptr %93, align 8, !tbaa !30
  br label %95

95:                                               ; preds = %95, %88
  %96 = phi i32 [ %5, %88 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %92
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = sub i32 %92, %100
  %104 = zext i32 %103 to i64
  %105 = zext i32 %97 to i64
  %106 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %105, i32 3
  %107 = load ptr, ptr %106, align 8, !tbaa !106
  %108 = getelementptr inbounds float, ptr %107, i64 %104
  %109 = load float, ptr %108, align 4, !tbaa !95
  %110 = fpext float %109 to double
  %111 = tail call double @llvm.fmuladd.f64(double %94, double %87, double %110)
  %112 = fptrunc double %111 to float
  store float %112, ptr %108, align 4, !tbaa !95
  %113 = add i32 %90, 1
  %114 = zext i32 %113 to i64
  %115 = icmp ugt i64 %80, %114
  br i1 %115, label %88, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !304
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !304
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !304
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %96, %37
  ret void

48:                                               ; preds = %41, %96
  %49 = phi i64 [ 0, %41 ], [ %56, %96 ]
  %50 = phi ptr [ %13, %41 ], [ %79, %96 ]
  %51 = phi ptr [ %16, %41 ], [ %77, %96 ]
  %52 = phi i32 [ %39, %41 ], [ %99, %96 ]
  %53 = phi i32 [ 0, %41 ], [ %98, %96 ]
  %54 = phi i32 [ %38, %41 ], [ %97, %96 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %74, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds double, ptr %43, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fpext float %63 to double
  %73 = tail call double @llvm.fmuladd.f64(double %66, double %71, double %72)
  %74 = fptrunc double %73 to float
  %75 = icmp eq ptr %65, %59
  br i1 %75, label %76, label %61

76:                                               ; preds = %61, %48
  %77 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %78 = phi float [ 0.000000e+00, %48 ], [ %74, %61 ]
  %79 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %80 = icmp eq i32 %52, %55
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = add i32 %53, 1
  br label %96

83:                                               ; preds = %76
  %84 = add i32 %54, 1
  %85 = icmp ult i32 %84, %19
  br i1 %85, label %86, label %96

86:                                               ; preds = %83
  %87 = add i32 %54, 2
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, ptr %21, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !47, !noalias !307
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, ptr %21, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47, !noalias !307
  %94 = add i32 %90, %52
  %95 = sub i32 %94, %93
  br label %96

96:                                               ; preds = %83, %81, %86
  %97 = phi i32 [ %84, %86 ], [ %54, %81 ], [ %84, %83 ]
  %98 = phi i32 [ 0, %86 ], [ %82, %81 ], [ 0, %83 ]
  %99 = phi i32 [ %95, %86 ], [ %52, %81 ], [ -1, %83 ]
  %100 = zext i32 %54 to i64
  %101 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %100, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !106
  %103 = zext i32 %53 to i64
  %104 = getelementptr inbounds float, ptr %102, i64 %103
  %105 = load float, ptr %104, align 4, !tbaa !95
  %106 = fadd float %78, %105
  store float %106, ptr %104, align 4, !tbaa !95
  %107 = icmp eq i64 %56, %46
  br i1 %107, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds double, ptr %16, i64 %30
  %40 = load double, ptr %39, align 8, !tbaa !30
  br label %41

41:                                               ; preds = %36, %55
  %42 = phi i64 [ %34, %36 ], [ %67, %55 ]
  %43 = phi i32 [ %37, %36 ], [ %66, %55 ]
  %44 = getelementptr inbounds i32, ptr %38, i64 %42
  %45 = load i32, ptr %44, align 4, !tbaa !47
  %46 = getelementptr inbounds double, ptr %14, i64 %42
  %47 = load double, ptr %46, align 8, !tbaa !30
  br label %48

48:                                               ; preds = %48, %41
  %49 = phi i32 [ %18, %41 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %45
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = sub i32 %45, %53
  %57 = zext i32 %56 to i64
  %58 = zext i32 %50 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.20", ptr %22, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = getelementptr inbounds float, ptr %60, i64 %57
  %62 = load float, ptr %61, align 4, !tbaa !95
  %63 = fpext float %62 to double
  %64 = tail call double @llvm.fmuladd.f64(double %47, double %40, double %63)
  %65 = fptrunc double %64 to float
  store float %65, ptr %61, align 4, !tbaa !95
  %66 = add i32 %43, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %33, %67
  br i1 %68, label %41, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !310
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !310
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !310
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %112, %37
  ret void

52:                                               ; preds = %41, %112
  %53 = phi i64 [ 0, %41 ], [ %60, %112 ]
  %54 = phi ptr [ %13, %41 ], [ %95, %112 ]
  %55 = phi ptr [ %16, %41 ], [ %93, %112 ]
  %56 = phi i32 [ %39, %41 ], [ %115, %112 ]
  %57 = phi i32 [ 0, %41 ], [ %114, %112 ]
  %58 = phi i32 [ %38, %41 ], [ %113, %112 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi float [ %90, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds double, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !53
  %86 = getelementptr inbounds double, ptr %85, i64 %82
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = fpext float %67 to double
  %89 = tail call double @llvm.fmuladd.f64(double %69, double %87, double %88)
  %90 = fptrunc double %89 to float
  %91 = icmp eq ptr %79, %63
  br i1 %91, label %92, label %65

92:                                               ; preds = %78, %52
  %93 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %94 = phi float [ 0.000000e+00, %52 ], [ %90, %78 ]
  %95 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %96 = icmp eq i32 %56, %59
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = add i32 %57, 1
  br label %112

99:                                               ; preds = %92
  %100 = add i32 %58, 1
  %101 = icmp ult i32 %100, %19
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = add i32 %58, 2
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %21, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !47, !noalias !313
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %21, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !47, !noalias !313
  %110 = add i32 %106, %56
  %111 = sub i32 %110, %109
  br label %112

112:                                              ; preds = %99, %97, %102
  %113 = phi i32 [ %100, %102 ], [ %58, %97 ], [ %100, %99 ]
  %114 = phi i32 [ 0, %102 ], [ %98, %97 ], [ 0, %99 ]
  %115 = phi i32 [ %111, %102 ], [ %56, %97 ], [ -1, %99 ]
  %116 = zext i32 %58 to i64
  %117 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %116, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !106
  %119 = zext i32 %57 to i64
  %120 = getelementptr inbounds float, ptr %118, i64 %119
  store float %94, ptr %120, align 4, !tbaa !95
  %121 = icmp eq i64 %60, %50
  br i1 %121, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %133, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %132, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds double, ptr %63, i64 %92
  %97 = load double, ptr %96, align 8, !tbaa !30
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !53
  %112 = getelementptr inbounds double, ptr %111, i64 %108
  %113 = load double, ptr %112, align 8, !tbaa !30
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = sub i32 %95, %119
  %123 = zext i32 %122 to i64
  %124 = zext i32 %116 to i64
  %125 = getelementptr inbounds %"class.dealii::Vector.20", ptr %73, i64 %124, i32 3
  %126 = load ptr, ptr %125, align 8, !tbaa !106
  %127 = getelementptr inbounds float, ptr %126, i64 %123
  %128 = load float, ptr %127, align 4, !tbaa !95
  %129 = fpext float %128 to double
  %130 = tail call double @llvm.fmuladd.f64(double %97, double %113, double %129)
  %131 = fptrunc double %130 to float
  store float %131, ptr %127, align 4, !tbaa !95
  %132 = add i32 %93, 1
  %133 = zext i32 %132 to i64
  %134 = icmp ugt i64 %84, %133
  br i1 %134, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !316
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !316
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !316
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %112, %37
  ret void

52:                                               ; preds = %41, %112
  %53 = phi i64 [ 0, %41 ], [ %60, %112 ]
  %54 = phi ptr [ %13, %41 ], [ %95, %112 ]
  %55 = phi ptr [ %16, %41 ], [ %93, %112 ]
  %56 = phi i32 [ %39, %41 ], [ %115, %112 ]
  %57 = phi i32 [ 0, %41 ], [ %114, %112 ]
  %58 = phi i32 [ %38, %41 ], [ %113, %112 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi float [ %90, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds double, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !53
  %86 = getelementptr inbounds double, ptr %85, i64 %82
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = fpext float %67 to double
  %89 = tail call double @llvm.fmuladd.f64(double %69, double %87, double %88)
  %90 = fptrunc double %89 to float
  %91 = icmp eq ptr %79, %63
  br i1 %91, label %92, label %65

92:                                               ; preds = %78, %52
  %93 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %94 = phi float [ 0.000000e+00, %52 ], [ %90, %78 ]
  %95 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %96 = icmp eq i32 %56, %59
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = add i32 %57, 1
  br label %112

99:                                               ; preds = %92
  %100 = add i32 %58, 1
  %101 = icmp ult i32 %100, %19
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = add i32 %58, 2
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %21, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !47, !noalias !319
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %21, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !47, !noalias !319
  %110 = add i32 %106, %56
  %111 = sub i32 %110, %109
  br label %112

112:                                              ; preds = %99, %97, %102
  %113 = phi i32 [ %100, %102 ], [ %58, %97 ], [ %100, %99 ]
  %114 = phi i32 [ 0, %102 ], [ %98, %97 ], [ 0, %99 ]
  %115 = phi i32 [ %111, %102 ], [ %56, %97 ], [ -1, %99 ]
  %116 = zext i32 %58 to i64
  %117 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %116, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !106
  %119 = zext i32 %57 to i64
  %120 = getelementptr inbounds float, ptr %118, i64 %119
  %121 = load float, ptr %120, align 4, !tbaa !95
  %122 = fadd float %94, %121
  store float %122, ptr %120, align 4, !tbaa !95
  %123 = icmp eq i64 %60, %50
  br i1 %123, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %86, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %85, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds double, ptr %14, i64 %45
  %50 = load double, ptr %49, align 8, !tbaa !30
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !53
  %65 = getelementptr inbounds double, ptr %64, i64 %61
  %66 = load double, ptr %65, align 8, !tbaa !30
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = sub i32 %48, %72
  %76 = zext i32 %75 to i64
  %77 = zext i32 %69 to i64
  %78 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %77, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !106
  %80 = getelementptr inbounds float, ptr %79, i64 %76
  %81 = load float, ptr %80, align 4, !tbaa !95
  %82 = fpext float %81 to double
  %83 = tail call double @llvm.fmuladd.f64(double %50, double %66, double %82)
  %84 = fptrunc double %83 to float
  store float %84, ptr %80, align 4, !tbaa !95
  %85 = add i32 %46, 1
  %86 = zext i32 %85 to i64
  %87 = icmp ugt i64 %37, %86
  br i1 %87, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to double
  %47 = fpext float %37 to double
  %48 = tail call double @llvm.fmuladd.f64(double %40, double %46, double %47)
  %49 = fptrunc double %48 to float
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds float, ptr %28, i64 1
  store float %53, ptr %28, align 4, !tbaa !95
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %45, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds float, ptr %25, i64 %35
  br label %45

45:                                               ; preds = %41, %45
  %46 = phi i64 [ %39, %41 ], [ %61, %45 ]
  %47 = phi i32 [ %42, %41 ], [ %60, %45 ]
  %48 = getelementptr inbounds i32, ptr %43, i64 %46
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = getelementptr inbounds double, ptr %23, i64 %46
  %51 = load double, ptr %50, align 8, !tbaa !30
  %52 = load float, ptr %44, align 4, !tbaa !95
  %53 = fpext float %52 to double
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds float, ptr %27, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fpext float %56 to double
  %58 = tail call double @llvm.fmuladd.f64(double %51, double %53, double %57)
  %59 = fptrunc double %58 to float
  store float %59, ptr %55, align 4, !tbaa !95
  %60 = add i32 %47, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %38, %61
  br i1 %62, label %45, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to double
  %47 = fpext float %37 to double
  %48 = tail call double @llvm.fmuladd.f64(double %40, double %46, double %47)
  %49 = fptrunc double %48 to float
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds float, ptr %28, i64 1
  %56 = load float, ptr %28, align 4, !tbaa !95
  %57 = fadd float %53, %56
  store float %57, ptr %28, align 4, !tbaa !95
  %58 = icmp eq i64 %30, %23
  br i1 %58, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %36, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds float, ptr %16, i64 %26
  br label %36

36:                                               ; preds = %32, %36
  %37 = phi i64 [ %30, %32 ], [ %52, %36 ]
  %38 = phi i32 [ %33, %32 ], [ %51, %36 ]
  %39 = getelementptr inbounds i32, ptr %34, i64 %37
  %40 = load i32, ptr %39, align 4, !tbaa !47
  %41 = getelementptr inbounds double, ptr %14, i64 %37
  %42 = load double, ptr %41, align 8, !tbaa !30
  %43 = load float, ptr %35, align 4, !tbaa !95
  %44 = fpext float %43 to double
  %45 = zext i32 %40 to i64
  %46 = getelementptr inbounds float, ptr %18, i64 %45
  %47 = load float, ptr %46, align 4, !tbaa !95
  %48 = fpext float %47 to double
  %49 = tail call double @llvm.fmuladd.f64(double %42, double %44, double %48)
  %50 = fptrunc double %49 to float
  store float %50, ptr %46, align 4, !tbaa !95
  %51 = add i32 %38, 1
  %52 = zext i32 %51 to i64
  %53 = icmp ugt i64 %29, %52
  br i1 %53, label %36, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi float [ %65, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to double
  %63 = fpext float %41 to double
  %64 = tail call double @llvm.fmuladd.f64(double %43, double %62, double %63)
  %65 = fptrunc double %64 to float
  %66 = icmp eq ptr %53, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %52, %29
  %68 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %69 = phi float [ 0.000000e+00, %29 ], [ %65, %52 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %71 = getelementptr inbounds float, ptr %32, i64 1
  store float %69, ptr %32, align 4, !tbaa !95
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %80, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %79, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds double, ptr %23, i64 %50
  %55 = load double, ptr %54, align 8, !tbaa !30
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = sub i32 %48, %61
  %66 = zext i32 %65 to i64
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"class.dealii::Vector.20", ptr %29, i64 %67, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !106
  %70 = getelementptr inbounds float, ptr %69, i64 %66
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to double
  %73 = zext i32 %53 to i64
  %74 = getelementptr inbounds float, ptr %31, i64 %73
  %75 = load float, ptr %74, align 4, !tbaa !95
  %76 = fpext float %75 to double
  %77 = tail call double @llvm.fmuladd.f64(double %55, double %72, double %76)
  %78 = fptrunc double %77 to float
  store float %78, ptr %74, align 4, !tbaa !95
  %79 = add i32 %51, 1
  %80 = zext i32 %79 to i64
  %81 = icmp ugt i64 %42, %80
  br i1 %81, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi float [ %65, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to double
  %63 = fpext float %41 to double
  %64 = tail call double @llvm.fmuladd.f64(double %43, double %62, double %63)
  %65 = fptrunc double %64 to float
  %66 = icmp eq ptr %53, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %52, %29
  %68 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %69 = phi float [ 0.000000e+00, %29 ], [ %65, %52 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %71 = getelementptr inbounds float, ptr %32, i64 1
  %72 = load float, ptr %32, align 4, !tbaa !95
  %73 = fadd float %69, %72
  store float %73, ptr %32, align 4, !tbaa !95
  %74 = icmp eq i64 %34, %27
  br i1 %74, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %71, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %70, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds double, ptr %14, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !30
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = getelementptr inbounds float, ptr %60, i64 %57
  %62 = load float, ptr %61, align 4, !tbaa !95
  %63 = fpext float %62 to double
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds float, ptr %22, i64 %64
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fpext float %66 to double
  %68 = tail call double @llvm.fmuladd.f64(double %46, double %63, double %67)
  %69 = fptrunc double %68 to float
  store float %69, ptr %65, align 4, !tbaa !95
  %70 = add i32 %42, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %33, %71
  br i1 %72, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !322
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !322
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !322
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to double
  %73 = fpext float %63 to double
  %74 = tail call double @llvm.fmuladd.f64(double %66, double %72, double %73)
  %75 = fptrunc double %74 to float
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %79 = phi float [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !325
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !325
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !106
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds float, ptr %103, i64 %104
  store float %79, ptr %105, align 4, !tbaa !95
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds float, ptr %65, i64 %77
  br label %87

87:                                               ; preds = %83, %102
  %88 = phi i64 [ %81, %83 ], [ %115, %102 ]
  %89 = phi i32 [ %84, %83 ], [ %114, %102 ]
  %90 = getelementptr inbounds i32, ptr %85, i64 %88
  %91 = load i32, ptr %90, align 4, !tbaa !47
  %92 = getelementptr inbounds double, ptr %63, i64 %88
  %93 = load double, ptr %92, align 8, !tbaa !30
  %94 = load float, ptr %86, align 4, !tbaa !95
  br label %95

95:                                               ; preds = %95, %87
  %96 = phi i32 [ %5, %87 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %91
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = fpext float %94 to double
  %104 = sub i32 %91, %100
  %105 = zext i32 %104 to i64
  %106 = zext i32 %97 to i64
  %107 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %106, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !106
  %109 = getelementptr inbounds float, ptr %108, i64 %105
  %110 = load float, ptr %109, align 4, !tbaa !95
  %111 = fpext float %110 to double
  %112 = tail call double @llvm.fmuladd.f64(double %93, double %103, double %111)
  %113 = fptrunc double %112 to float
  store float %113, ptr %109, align 4, !tbaa !95
  %114 = add i32 %89, 1
  %115 = zext i32 %114 to i64
  %116 = icmp ugt i64 %80, %115
  br i1 %116, label %87, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !328
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !328
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !328
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to double
  %73 = fpext float %63 to double
  %74 = tail call double @llvm.fmuladd.f64(double %66, double %72, double %73)
  %75 = fptrunc double %74 to float
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %79 = phi float [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !331
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !331
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !106
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds float, ptr %103, i64 %104
  %106 = load float, ptr %105, align 4, !tbaa !95
  %107 = fadd float %79, %106
  store float %107, ptr %105, align 4, !tbaa !95
  %108 = icmp eq i64 %56, %46
  br i1 %108, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds float, ptr %16, i64 %30
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %68, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %67, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds double, ptr %14, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = load float, ptr %39, align 4, !tbaa !95
  br label %48

48:                                               ; preds = %48, %40
  %49 = phi i32 [ %18, %40 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %44
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = fpext float %47 to double
  %57 = sub i32 %44, %53
  %58 = zext i32 %57 to i64
  %59 = zext i32 %50 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.20", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !106
  %62 = getelementptr inbounds float, ptr %61, i64 %58
  %63 = load float, ptr %62, align 4, !tbaa !95
  %64 = fpext float %63 to double
  %65 = tail call double @llvm.fmuladd.f64(double %46, double %56, double %64)
  %66 = fptrunc double %65 to float
  store float %66, ptr %62, align 4, !tbaa !95
  %67 = add i32 %42, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !334
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !334
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !334
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi float [ %91, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds double, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to double
  %89 = fpext float %67 to double
  %90 = tail call double @llvm.fmuladd.f64(double %69, double %88, double %89)
  %91 = fptrunc double %90 to float
  %92 = icmp eq ptr %79, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %78, %52
  %94 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %95 = phi float [ 0.000000e+00, %52 ], [ %91, %78 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !337
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !337
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !106
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds float, ptr %119, i64 %120
  store float %95, ptr %121, align 4, !tbaa !95
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %134, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %133, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds double, ptr %63, i64 %92
  %97 = load double, ptr %96, align 8, !tbaa !30
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !106
  %112 = getelementptr inbounds float, ptr %111, i64 %108
  %113 = load float, ptr %112, align 4, !tbaa !95
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = fpext float %113 to double
  %123 = sub i32 %95, %119
  %124 = zext i32 %123 to i64
  %125 = zext i32 %116 to i64
  %126 = getelementptr inbounds %"class.dealii::Vector.20", ptr %73, i64 %125, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !106
  %128 = getelementptr inbounds float, ptr %127, i64 %124
  %129 = load float, ptr %128, align 4, !tbaa !95
  %130 = fpext float %129 to double
  %131 = tail call double @llvm.fmuladd.f64(double %97, double %122, double %130)
  %132 = fptrunc double %131 to float
  store float %132, ptr %128, align 4, !tbaa !95
  %133 = add i32 %93, 1
  %134 = zext i32 %133 to i64
  %135 = icmp ugt i64 %84, %134
  br i1 %135, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !340
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !340
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !340
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi float [ %91, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds double, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to double
  %89 = fpext float %67 to double
  %90 = tail call double @llvm.fmuladd.f64(double %69, double %88, double %89)
  %91 = fptrunc double %90 to float
  %92 = icmp eq ptr %79, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %78, %52
  %94 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %95 = phi float [ 0.000000e+00, %52 ], [ %91, %78 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !343
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !343
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !106
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds float, ptr %119, i64 %120
  %122 = load float, ptr %121, align 4, !tbaa !95
  %123 = fadd float %95, %122
  store float %123, ptr %121, align 4, !tbaa !95
  %124 = icmp eq i64 %60, %50
  br i1 %124, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %87, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %86, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds double, ptr %14, i64 %45
  %50 = load double, ptr %49, align 8, !tbaa !30
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !106
  %65 = getelementptr inbounds float, ptr %64, i64 %61
  %66 = load float, ptr %65, align 4, !tbaa !95
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext float %66 to double
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !106
  %81 = getelementptr inbounds float, ptr %80, i64 %77
  %82 = load float, ptr %81, align 4, !tbaa !95
  %83 = fpext float %82 to double
  %84 = tail call double @llvm.fmuladd.f64(double %50, double %75, double %83)
  %85 = fptrunc double %84 to float
  store float %85, ptr %81, align 4, !tbaa !95
  %86 = add i32 %46, 1
  %87 = zext i32 %86 to i64
  %88 = icmp ugt i64 %37, %87
  br i1 %88, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = fpext double %40 to x86_fp80
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %22, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = fpext float %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to float
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %42, %35 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds float, ptr %28, i64 1
  store float %53, ptr %28, align 4, !tbaa !95
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %46, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds x86_fp80, ptr %25, i64 %35
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  br label %46

46:                                               ; preds = %41, %46
  %47 = phi i64 [ %39, %41 ], [ %61, %46 ]
  %48 = phi i32 [ %42, %41 ], [ %60, %46 ]
  %49 = getelementptr inbounds i32, ptr %43, i64 %47
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = getelementptr inbounds double, ptr %23, i64 %47
  %52 = load double, ptr %51, align 8, !tbaa !30
  %53 = fpext double %52 to x86_fp80
  %54 = zext i32 %50 to i64
  %55 = getelementptr inbounds float, ptr %27, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fpext float %56 to x86_fp80
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %53, x86_fp80 %45, x86_fp80 %57)
  %59 = fptrunc x86_fp80 %58 to float
  store float %59, ptr %55, align 4, !tbaa !95
  %60 = add i32 %48, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %38, %61
  br i1 %62, label %46, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = fpext double %40 to x86_fp80
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %22, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = fpext float %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to float
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %42, %35 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds float, ptr %28, i64 1
  %56 = load float, ptr %28, align 4, !tbaa !95
  %57 = fadd float %53, %56
  store float %57, ptr %28, align 4, !tbaa !95
  %58 = icmp eq i64 %30, %23
  br i1 %58, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %37, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds x86_fp80, ptr %16, i64 %26
  %36 = load x86_fp80, ptr %35, align 16, !tbaa !128
  br label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %30, %32 ], [ %52, %37 ]
  %39 = phi i32 [ %33, %32 ], [ %51, %37 ]
  %40 = getelementptr inbounds i32, ptr %34, i64 %38
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds double, ptr %14, i64 %38
  %43 = load double, ptr %42, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = zext i32 %41 to i64
  %46 = getelementptr inbounds float, ptr %18, i64 %45
  %47 = load float, ptr %46, align 4, !tbaa !95
  %48 = fpext float %47 to x86_fp80
  %49 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %36, x86_fp80 %48)
  %50 = fptrunc x86_fp80 %49 to float
  store float %50, ptr %46, align 4, !tbaa !95
  %51 = add i32 %39, 1
  %52 = zext i32 %51 to i64
  %53 = icmp ugt i64 %29, %52
  br i1 %53, label %37, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi float [ %65, %53 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %33, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds double, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = fpext float %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to float
  %66 = icmp eq ptr %54, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %53, %29
  %68 = phi ptr [ %33, %29 ], [ %55, %53 ]
  %69 = phi float [ 0.000000e+00, %29 ], [ %65, %53 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %71 = getelementptr inbounds float, ptr %32, i64 1
  store float %69, ptr %32, align 4, !tbaa !95
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %80, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %79, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds double, ptr %23, i64 %50
  %55 = load double, ptr %54, align 8, !tbaa !30
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = fpext double %55 to x86_fp80
  %66 = sub i32 %48, %61
  %67 = zext i32 %66 to i64
  %68 = zext i32 %58 to i64
  %69 = getelementptr inbounds %"class.dealii::Vector.27", ptr %29, i64 %68, i32 3
  %70 = load ptr, ptr %69, align 8, !tbaa !135
  %71 = getelementptr inbounds x86_fp80, ptr %70, i64 %67
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = zext i32 %53 to i64
  %74 = getelementptr inbounds float, ptr %31, i64 %73
  %75 = load float, ptr %74, align 4, !tbaa !95
  %76 = fpext float %75 to x86_fp80
  %77 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %65, x86_fp80 %72, x86_fp80 %76)
  %78 = fptrunc x86_fp80 %77 to float
  store float %78, ptr %74, align 4, !tbaa !95
  %79 = add i32 %51, 1
  %80 = zext i32 %79 to i64
  %81 = icmp ugt i64 %42, %80
  br i1 %81, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi float [ %65, %53 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %33, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds double, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = fpext float %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to float
  %66 = icmp eq ptr %54, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %53, %29
  %68 = phi ptr [ %33, %29 ], [ %55, %53 ]
  %69 = phi float [ 0.000000e+00, %29 ], [ %65, %53 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %71 = getelementptr inbounds float, ptr %32, i64 1
  %72 = load float, ptr %32, align 4, !tbaa !95
  %73 = fadd float %69, %72
  store float %73, ptr %32, align 4, !tbaa !95
  %74 = icmp eq i64 %34, %27
  br i1 %74, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %71, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %70, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds double, ptr %14, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !30
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = fpext double %46 to x86_fp80
  %57 = sub i32 %39, %52
  %58 = zext i32 %57 to i64
  %59 = zext i32 %49 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !135
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 %58
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds float, ptr %22, i64 %64
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fpext float %66 to x86_fp80
  %68 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %63, x86_fp80 %67)
  %69 = fptrunc x86_fp80 %68 to float
  store float %69, ptr %65, align 4, !tbaa !95
  %70 = add i32 %42, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %33, %71
  br i1 %72, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !346
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !346
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !346
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = fpext double %66 to x86_fp80
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds x86_fp80, ptr %43, i64 %70
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = fpext float %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to float
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %79 = phi float [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !349
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !349
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !106
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds float, ptr %103, i64 %104
  store float %79, ptr %105, align 4, !tbaa !95
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds x86_fp80, ptr %65, i64 %77
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  br label %88

88:                                               ; preds = %83, %102
  %89 = phi i64 [ %81, %83 ], [ %115, %102 ]
  %90 = phi i32 [ %84, %83 ], [ %114, %102 ]
  %91 = getelementptr inbounds i32, ptr %85, i64 %89
  %92 = load i32, ptr %91, align 4, !tbaa !47
  %93 = getelementptr inbounds double, ptr %63, i64 %89
  %94 = load double, ptr %93, align 8, !tbaa !30
  br label %95

95:                                               ; preds = %95, %88
  %96 = phi i32 [ %5, %88 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %92
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = fpext double %94 to x86_fp80
  %104 = sub i32 %92, %100
  %105 = zext i32 %104 to i64
  %106 = zext i32 %97 to i64
  %107 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %106, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !106
  %109 = getelementptr inbounds float, ptr %108, i64 %105
  %110 = load float, ptr %109, align 4, !tbaa !95
  %111 = fpext float %110 to x86_fp80
  %112 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %103, x86_fp80 %87, x86_fp80 %111)
  %113 = fptrunc x86_fp80 %112 to float
  store float %113, ptr %109, align 4, !tbaa !95
  %114 = add i32 %90, 1
  %115 = zext i32 %114 to i64
  %116 = icmp ugt i64 %80, %115
  br i1 %116, label %88, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !352
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !352
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !352
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = fpext double %66 to x86_fp80
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds x86_fp80, ptr %43, i64 %70
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = fpext float %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to float
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %79 = phi float [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !355
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !355
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !106
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds float, ptr %103, i64 %104
  %106 = load float, ptr %105, align 4, !tbaa !95
  %107 = fadd float %79, %106
  store float %107, ptr %105, align 4, !tbaa !95
  %108 = icmp eq i64 %56, %46
  br i1 %108, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %30
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !128
  br label %41

41:                                               ; preds = %36, %55
  %42 = phi i64 [ %34, %36 ], [ %68, %55 ]
  %43 = phi i32 [ %37, %36 ], [ %67, %55 ]
  %44 = getelementptr inbounds i32, ptr %38, i64 %42
  %45 = load i32, ptr %44, align 4, !tbaa !47
  %46 = getelementptr inbounds double, ptr %14, i64 %42
  %47 = load double, ptr %46, align 8, !tbaa !30
  br label %48

48:                                               ; preds = %48, %41
  %49 = phi i32 [ %18, %41 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %45
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = fpext double %47 to x86_fp80
  %57 = sub i32 %45, %53
  %58 = zext i32 %57 to i64
  %59 = zext i32 %50 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.20", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !106
  %62 = getelementptr inbounds float, ptr %61, i64 %58
  %63 = load float, ptr %62, align 4, !tbaa !95
  %64 = fpext float %63 to x86_fp80
  %65 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %40, x86_fp80 %64)
  %66 = fptrunc x86_fp80 %65 to float
  store float %66, ptr %62, align 4, !tbaa !95
  %67 = add i32 %43, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %41, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !358
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !358
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !358
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi float [ %91, %79 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = fpext double %69 to x86_fp80
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds double, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !135
  %87 = getelementptr inbounds x86_fp80, ptr %86, i64 %83
  %88 = load x86_fp80, ptr %87, align 16, !tbaa !128
  %89 = fpext float %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to float
  %92 = icmp eq ptr %80, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %79, %52
  %94 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %95 = phi float [ 0.000000e+00, %52 ], [ %91, %79 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !361
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !361
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !106
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds float, ptr %119, i64 %120
  store float %95, ptr %121, align 4, !tbaa !95
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %134, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %133, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds double, ptr %63, i64 %92
  %97 = load double, ptr %96, align 8, !tbaa !30
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector.27", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !135
  %112 = getelementptr inbounds x86_fp80, ptr %111, i64 %108
  %113 = load x86_fp80, ptr %112, align 16, !tbaa !128
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = fpext double %97 to x86_fp80
  %123 = sub i32 %95, %119
  %124 = zext i32 %123 to i64
  %125 = zext i32 %116 to i64
  %126 = getelementptr inbounds %"class.dealii::Vector.20", ptr %73, i64 %125, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !106
  %128 = getelementptr inbounds float, ptr %127, i64 %124
  %129 = load float, ptr %128, align 4, !tbaa !95
  %130 = fpext float %129 to x86_fp80
  %131 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %122, x86_fp80 %113, x86_fp80 %130)
  %132 = fptrunc x86_fp80 %131 to float
  store float %132, ptr %128, align 4, !tbaa !95
  %133 = add i32 %93, 1
  %134 = zext i32 %133 to i64
  %135 = icmp ugt i64 %84, %134
  br i1 %135, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !364
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !364
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !364
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi float [ %91, %79 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = fpext double %69 to x86_fp80
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds double, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !135
  %87 = getelementptr inbounds x86_fp80, ptr %86, i64 %83
  %88 = load x86_fp80, ptr %87, align 16, !tbaa !128
  %89 = fpext float %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to float
  %92 = icmp eq ptr %80, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %79, %52
  %94 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %95 = phi float [ 0.000000e+00, %52 ], [ %91, %79 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !367
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !367
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !106
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds float, ptr %119, i64 %120
  %122 = load float, ptr %121, align 4, !tbaa !95
  %123 = fadd float %95, %122
  store float %123, ptr %121, align 4, !tbaa !95
  %124 = icmp eq i64 %60, %50
  br i1 %124, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %87, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %86, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds double, ptr %14, i64 %45
  %50 = load double, ptr %49, align 8, !tbaa !30
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !135
  %65 = getelementptr inbounds x86_fp80, ptr %64, i64 %61
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext double %50 to x86_fp80
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !106
  %81 = getelementptr inbounds float, ptr %80, i64 %77
  %82 = load float, ptr %81, align 4, !tbaa !95
  %83 = fpext float %82 to x86_fp80
  %84 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %75, x86_fp80 %66, x86_fp80 %83)
  %85 = fptrunc x86_fp80 %84 to float
  store float %85, ptr %81, align 4, !tbaa !95
  %86 = add i32 %46, 1
  %87 = zext i32 %86 to i64
  %88 = icmp ugt i64 %37, %87
  br i1 %88, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %50, %3
  ret void

25:                                               ; preds = %13, %50
  %26 = phi i64 [ 0, %13 ], [ %30, %50 ]
  %27 = phi ptr [ %20, %13 ], [ %53, %50 ]
  %28 = phi ptr [ %19, %13 ], [ %51, %50 ]
  %29 = phi ptr [ %15, %13 ], [ %54, %50 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %48, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, ptr %22, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fmul double %40, %45
  %47 = fpext double %46 to x86_fp80
  %48 = fadd x86_fp80 %37, %47
  %49 = icmp eq ptr %39, %33
  br i1 %49, label %50, label %35

50:                                               ; preds = %35, %25
  %51 = phi ptr [ %28, %25 ], [ %41, %35 ]
  %52 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %48, %35 ]
  %53 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %54 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  store x86_fp80 %52, ptr %29, align 16, !tbaa !128
  %55 = icmp eq i64 %30, %23
  br i1 %55, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %20 to i64
  %33 = load i64, ptr %24, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %50, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %16
  ret void

37:                                               ; preds = %22, %34
  %38 = phi i64 [ %33, %22 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %22 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %24, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %25, align 8, !tbaa !46
  %48 = getelementptr inbounds double, ptr %29, i64 %39
  %49 = load double, ptr %48, align 8, !tbaa !30
  br label %50

50:                                               ; preds = %45, %50
  %51 = phi i64 [ %43, %45 ], [ %64, %50 ]
  %52 = phi i32 [ %46, %45 ], [ %63, %50 ]
  %53 = getelementptr inbounds i32, ptr %47, i64 %51
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = getelementptr inbounds double, ptr %27, i64 %51
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = fmul double %56, %49
  %58 = fpext double %57 to x86_fp80
  %59 = zext i32 %54 to i64
  %60 = getelementptr inbounds x86_fp80, ptr %31, i64 %59
  %61 = load x86_fp80, ptr %60, align 16, !tbaa !128
  %62 = fadd x86_fp80 %61, %58
  store x86_fp80 %62, ptr %60, align 16, !tbaa !128
  %63 = add i32 %52, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %42, %64
  br i1 %65, label %50, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %50, %3
  ret void

25:                                               ; preds = %13, %50
  %26 = phi i64 [ 0, %13 ], [ %30, %50 ]
  %27 = phi ptr [ %20, %13 ], [ %53, %50 ]
  %28 = phi ptr [ %19, %13 ], [ %51, %50 ]
  %29 = phi ptr [ %15, %13 ], [ %54, %50 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %48, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, ptr %22, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fmul double %40, %45
  %47 = fpext double %46 to x86_fp80
  %48 = fadd x86_fp80 %37, %47
  %49 = icmp eq ptr %39, %33
  br i1 %49, label %50, label %35

50:                                               ; preds = %35, %25
  %51 = phi ptr [ %28, %25 ], [ %41, %35 ]
  %52 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %48, %35 ]
  %53 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %54 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  %55 = load x86_fp80, ptr %29, align 16, !tbaa !128
  %56 = fadd x86_fp80 %52, %55
  store x86_fp80 %56, ptr %29, align 16, !tbaa !128
  %57 = icmp eq i64 %30, %23
  br i1 %57, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %37, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds double, ptr %16, i64 %26
  %36 = load double, ptr %35, align 8, !tbaa !30
  br label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %30, %32 ], [ %51, %37 ]
  %39 = phi i32 [ %33, %32 ], [ %50, %37 ]
  %40 = getelementptr inbounds i32, ptr %34, i64 %38
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds double, ptr %14, i64 %38
  %43 = load double, ptr %42, align 8, !tbaa !30
  %44 = fmul double %43, %36
  %45 = fpext double %44 to x86_fp80
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds x86_fp80, ptr %18, i64 %46
  %48 = load x86_fp80, ptr %47, align 16, !tbaa !128
  %49 = fadd x86_fp80 %48, %45
  store x86_fp80 %49, ptr %47, align 16, !tbaa !128
  %50 = add i32 %39, 1
  %51 = zext i32 %50 to i64
  %52 = icmp ugt i64 %29, %51
  br i1 %52, label %37, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %66, %3
  ret void

29:                                               ; preds = %13, %66
  %30 = phi i64 [ 0, %13 ], [ %34, %66 ]
  %31 = phi ptr [ %20, %13 ], [ %69, %66 ]
  %32 = phi ptr [ %19, %13 ], [ %67, %66 ]
  %33 = phi ptr [ %15, %13 ], [ %70, %66 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %64, %52 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %32, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !53
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = fmul double %43, %61
  %63 = fpext double %62 to x86_fp80
  %64 = fadd x86_fp80 %41, %63
  %65 = icmp eq ptr %53, %37
  br i1 %65, label %66, label %39

66:                                               ; preds = %52, %29
  %67 = phi ptr [ %32, %29 ], [ %54, %52 ]
  %68 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %64, %52 ]
  %69 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %70 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  store x86_fp80 %68, ptr %33, align 16, !tbaa !128
  %71 = icmp eq i64 %34, %27
  br i1 %71, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %20 to i64
  %37 = load i64, ptr %24, align 8, !tbaa !34
  br label %41

38:                                               ; preds = %68, %41
  %39 = icmp eq i64 %44, %36
  br i1 %39, label %40, label %41

40:                                               ; preds = %38, %16
  ret void

41:                                               ; preds = %22, %38
  %42 = phi i64 [ %37, %22 ], [ %46, %38 ]
  %43 = phi i64 [ 0, %22 ], [ %44, %38 ]
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr inbounds i64, ptr %24, i64 %44
  %46 = load i64, ptr %45, align 8, !tbaa !34
  %47 = and i64 %42, 4294967295
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %49, label %38

49:                                               ; preds = %41
  %50 = trunc i64 %42 to i32
  %51 = load ptr, ptr %25, align 8, !tbaa !46
  %52 = trunc i64 %43 to i32
  br label %53

53:                                               ; preds = %49, %68
  %54 = phi i64 [ %47, %49 ], [ %83, %68 ]
  %55 = phi i32 [ %50, %49 ], [ %82, %68 ]
  %56 = getelementptr inbounds i32, ptr %51, i64 %54
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = getelementptr inbounds double, ptr %27, i64 %54
  %59 = load double, ptr %58, align 8, !tbaa !30
  br label %60

60:                                               ; preds = %60, %53
  %61 = phi i32 [ %29, %53 ], [ %62, %60 ]
  %62 = add i32 %61, -1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, ptr %31, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !47
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %43, %66
  br i1 %67, label %60, label %68

68:                                               ; preds = %60
  %69 = sub i32 %52, %65
  %70 = zext i32 %69 to i64
  %71 = zext i32 %62 to i64
  %72 = getelementptr inbounds %"class.dealii::Vector", ptr %33, i64 %71, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !53
  %74 = getelementptr inbounds double, ptr %73, i64 %70
  %75 = load double, ptr %74, align 8, !tbaa !30
  %76 = fmul double %59, %75
  %77 = fpext double %76 to x86_fp80
  %78 = zext i32 %57 to i64
  %79 = getelementptr inbounds x86_fp80, ptr %35, i64 %78
  %80 = load x86_fp80, ptr %79, align 16, !tbaa !128
  %81 = fadd x86_fp80 %80, %77
  store x86_fp80 %81, ptr %79, align 16, !tbaa !128
  %82 = add i32 %55, 1
  %83 = zext i32 %82 to i64
  %84 = icmp ugt i64 %46, %83
  br i1 %84, label %53, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %66, %3
  ret void

29:                                               ; preds = %13, %66
  %30 = phi i64 [ 0, %13 ], [ %34, %66 ]
  %31 = phi ptr [ %20, %13 ], [ %69, %66 ]
  %32 = phi ptr [ %19, %13 ], [ %67, %66 ]
  %33 = phi ptr [ %15, %13 ], [ %70, %66 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %64, %52 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %32, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !53
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = fmul double %43, %61
  %63 = fpext double %62 to x86_fp80
  %64 = fadd x86_fp80 %41, %63
  %65 = icmp eq ptr %53, %37
  br i1 %65, label %66, label %39

66:                                               ; preds = %52, %29
  %67 = phi ptr [ %32, %29 ], [ %54, %52 ]
  %68 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %64, %52 ]
  %69 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %70 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  %71 = load x86_fp80, ptr %33, align 16, !tbaa !128
  %72 = fadd x86_fp80 %68, %71
  store x86_fp80 %72, ptr %33, align 16, !tbaa !128
  %73 = icmp eq i64 %34, %27
  br i1 %73, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %70, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %69, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds double, ptr %14, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !30
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = fmul double %46, %62
  %64 = fpext double %63 to x86_fp80
  %65 = zext i32 %44 to i64
  %66 = getelementptr inbounds x86_fp80, ptr %22, i64 %65
  %67 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %68 = fadd x86_fp80 %67, %64
  store x86_fp80 %68, ptr %66, align 16, !tbaa !128
  %69 = add i32 %42, 1
  %70 = zext i32 %69 to i64
  %71 = icmp ugt i64 %33, %70
  br i1 %71, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !370
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !370
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !370
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %96, %37
  ret void

48:                                               ; preds = %41, %96
  %49 = phi i64 [ 0, %41 ], [ %56, %96 ]
  %50 = phi ptr [ %13, %41 ], [ %79, %96 ]
  %51 = phi ptr [ %16, %41 ], [ %77, %96 ]
  %52 = phi i32 [ %39, %41 ], [ %99, %96 ]
  %53 = phi i32 [ 0, %41 ], [ %98, %96 ]
  %54 = phi i32 [ %38, %41 ], [ %97, %96 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %74, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds double, ptr %43, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fmul double %66, %71
  %73 = fpext double %72 to x86_fp80
  %74 = fadd x86_fp80 %63, %73
  %75 = icmp eq ptr %65, %59
  br i1 %75, label %76, label %61

76:                                               ; preds = %61, %48
  %77 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %78 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %74, %61 ]
  %79 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %80 = icmp eq i32 %52, %55
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = add i32 %53, 1
  br label %96

83:                                               ; preds = %76
  %84 = add i32 %54, 1
  %85 = icmp ult i32 %84, %19
  br i1 %85, label %86, label %96

86:                                               ; preds = %83
  %87 = add i32 %54, 2
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, ptr %21, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !47, !noalias !375
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, ptr %21, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47, !noalias !375
  %94 = add i32 %90, %52
  %95 = sub i32 %94, %93
  br label %96

96:                                               ; preds = %83, %81, %86
  %97 = phi i32 [ %84, %86 ], [ %54, %81 ], [ %84, %83 ]
  %98 = phi i32 [ 0, %86 ], [ %82, %81 ], [ 0, %83 ]
  %99 = phi i32 [ %95, %86 ], [ %52, %81 ], [ -1, %83 ]
  %100 = zext i32 %54 to i64
  %101 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %100, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !135
  %103 = zext i32 %53 to i64
  %104 = getelementptr inbounds x86_fp80, ptr %102, i64 %103
  store x86_fp80 %78, ptr %104, align 16, !tbaa !128
  %105 = icmp eq i64 %56, %46
  br i1 %105, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %77 = load ptr, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = zext i32 %68 to i64
  %83 = load i64, ptr %72, align 8, !tbaa !34
  br label %87

84:                                               ; preds = %115, %87
  %85 = icmp eq i64 %90, %82
  br i1 %85, label %86, label %87

86:                                               ; preds = %84, %64
  ret void

87:                                               ; preds = %70, %84
  %88 = phi i64 [ %83, %70 ], [ %92, %84 ]
  %89 = phi i64 [ 0, %70 ], [ %90, %84 ]
  %90 = add nuw nsw i64 %89, 1
  %91 = getelementptr inbounds i64, ptr %72, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !34
  %93 = and i64 %88, 4294967295
  %94 = icmp ugt i64 %92, %93
  br i1 %94, label %95, label %84

95:                                               ; preds = %87
  %96 = trunc i64 %88 to i32
  %97 = load ptr, ptr %73, align 8, !tbaa !46
  %98 = getelementptr inbounds double, ptr %77, i64 %89
  %99 = load double, ptr %98, align 8, !tbaa !30
  br label %100

100:                                              ; preds = %95, %115
  %101 = phi i64 [ %93, %95 ], [ %126, %115 ]
  %102 = phi i32 [ %96, %95 ], [ %125, %115 ]
  %103 = getelementptr inbounds i32, ptr %97, i64 %101
  %104 = load i32, ptr %103, align 4, !tbaa !47
  %105 = getelementptr inbounds double, ptr %75, i64 %101
  %106 = load double, ptr %105, align 8, !tbaa !30
  %107 = fmul double %106, %99
  br label %108

108:                                              ; preds = %108, %100
  %109 = phi i32 [ %5, %100 ], [ %110, %108 ]
  %110 = add i32 %109, -1
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i32, ptr %79, i64 %111
  %113 = load i32, ptr %112, align 4, !tbaa !47
  %114 = icmp ugt i32 %113, %104
  br i1 %114, label %108, label %115

115:                                              ; preds = %108
  %116 = fpext double %107 to x86_fp80
  %117 = sub i32 %104, %113
  %118 = zext i32 %117 to i64
  %119 = zext i32 %110 to i64
  %120 = getelementptr inbounds %"class.dealii::Vector.27", ptr %81, i64 %119, i32 3
  %121 = load ptr, ptr %120, align 8, !tbaa !135
  %122 = getelementptr inbounds x86_fp80, ptr %121, i64 %118
  %123 = load x86_fp80, ptr %122, align 16, !tbaa !128
  %124 = fadd x86_fp80 %123, %116
  store x86_fp80 %124, ptr %122, align 16, !tbaa !128
  %125 = add i32 %102, 1
  %126 = zext i32 %125 to i64
  %127 = icmp ugt i64 %92, %126
  br i1 %127, label %100, label %84
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !378
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !378
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !378
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %96, %37
  ret void

48:                                               ; preds = %41, %96
  %49 = phi i64 [ 0, %41 ], [ %56, %96 ]
  %50 = phi ptr [ %13, %41 ], [ %79, %96 ]
  %51 = phi ptr [ %16, %41 ], [ %77, %96 ]
  %52 = phi i32 [ %39, %41 ], [ %99, %96 ]
  %53 = phi i32 [ 0, %41 ], [ %98, %96 ]
  %54 = phi i32 [ %38, %41 ], [ %97, %96 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %74, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds double, ptr %43, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fmul double %66, %71
  %73 = fpext double %72 to x86_fp80
  %74 = fadd x86_fp80 %63, %73
  %75 = icmp eq ptr %65, %59
  br i1 %75, label %76, label %61

76:                                               ; preds = %61, %48
  %77 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %78 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %74, %61 ]
  %79 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %80 = icmp eq i32 %52, %55
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = add i32 %53, 1
  br label %96

83:                                               ; preds = %76
  %84 = add i32 %54, 1
  %85 = icmp ult i32 %84, %19
  br i1 %85, label %86, label %96

86:                                               ; preds = %83
  %87 = add i32 %54, 2
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, ptr %21, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !47, !noalias !381
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, ptr %21, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47, !noalias !381
  %94 = add i32 %90, %52
  %95 = sub i32 %94, %93
  br label %96

96:                                               ; preds = %83, %81, %86
  %97 = phi i32 [ %84, %86 ], [ %54, %81 ], [ %84, %83 ]
  %98 = phi i32 [ 0, %86 ], [ %82, %81 ], [ 0, %83 ]
  %99 = phi i32 [ %95, %86 ], [ %52, %81 ], [ -1, %83 ]
  %100 = zext i32 %54 to i64
  %101 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %100, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !135
  %103 = zext i32 %53 to i64
  %104 = getelementptr inbounds x86_fp80, ptr %102, i64 %103
  %105 = load x86_fp80, ptr %104, align 16, !tbaa !128
  %106 = fadd x86_fp80 %78, %105
  store x86_fp80 %106, ptr %104, align 16, !tbaa !128
  %107 = icmp eq i64 %56, %46
  br i1 %107, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %56, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds double, ptr %16, i64 %30
  %40 = load double, ptr %39, align 8, !tbaa !30
  br label %41

41:                                               ; preds = %36, %56
  %42 = phi i64 [ %34, %36 ], [ %67, %56 ]
  %43 = phi i32 [ %37, %36 ], [ %66, %56 ]
  %44 = getelementptr inbounds i32, ptr %38, i64 %42
  %45 = load i32, ptr %44, align 4, !tbaa !47
  %46 = getelementptr inbounds double, ptr %14, i64 %42
  %47 = load double, ptr %46, align 8, !tbaa !30
  %48 = fmul double %47, %40
  br label %49

49:                                               ; preds = %49, %41
  %50 = phi i32 [ %18, %41 ], [ %51, %49 ]
  %51 = add i32 %50, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, ptr %20, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = icmp ugt i32 %54, %45
  br i1 %55, label %49, label %56

56:                                               ; preds = %49
  %57 = fpext double %48 to x86_fp80
  %58 = sub i32 %45, %54
  %59 = zext i32 %58 to i64
  %60 = zext i32 %51 to i64
  %61 = getelementptr inbounds %"class.dealii::Vector.27", ptr %22, i64 %60, i32 3
  %62 = load ptr, ptr %61, align 8, !tbaa !135
  %63 = getelementptr inbounds x86_fp80, ptr %62, i64 %59
  %64 = load x86_fp80, ptr %63, align 16, !tbaa !128
  %65 = fadd x86_fp80 %64, %57
  store x86_fp80 %65, ptr %63, align 16, !tbaa !128
  %66 = add i32 %43, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %33, %67
  br i1 %68, label %41, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !384
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !384
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !384
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %112, %37
  ret void

52:                                               ; preds = %41, %112
  %53 = phi i64 [ 0, %41 ], [ %60, %112 ]
  %54 = phi ptr [ %13, %41 ], [ %95, %112 ]
  %55 = phi ptr [ %16, %41 ], [ %93, %112 ]
  %56 = phi i32 [ %39, %41 ], [ %115, %112 ]
  %57 = phi i32 [ 0, %41 ], [ %114, %112 ]
  %58 = phi i32 [ %38, %41 ], [ %113, %112 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %90, %78 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds double, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !53
  %86 = getelementptr inbounds double, ptr %85, i64 %82
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = fmul double %69, %87
  %89 = fpext double %88 to x86_fp80
  %90 = fadd x86_fp80 %67, %89
  %91 = icmp eq ptr %79, %63
  br i1 %91, label %92, label %65

92:                                               ; preds = %78, %52
  %93 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %94 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %90, %78 ]
  %95 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %96 = icmp eq i32 %56, %59
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = add i32 %57, 1
  br label %112

99:                                               ; preds = %92
  %100 = add i32 %58, 1
  %101 = icmp ult i32 %100, %19
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = add i32 %58, 2
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %21, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !47, !noalias !387
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %21, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !47, !noalias !387
  %110 = add i32 %106, %56
  %111 = sub i32 %110, %109
  br label %112

112:                                              ; preds = %99, %97, %102
  %113 = phi i32 [ %100, %102 ], [ %58, %97 ], [ %100, %99 ]
  %114 = phi i32 [ 0, %102 ], [ %98, %97 ], [ 0, %99 ]
  %115 = phi i32 [ %111, %102 ], [ %56, %97 ], [ -1, %99 ]
  %116 = zext i32 %58 to i64
  %117 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %116, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !135
  %119 = zext i32 %57 to i64
  %120 = getelementptr inbounds x86_fp80, ptr %118, i64 %119
  store x86_fp80 %94, ptr %120, align 16, !tbaa !128
  %121 = icmp eq i64 %60, %50
  br i1 %121, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %90, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %77 = load i32, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8
  %86 = zext i32 %68 to i64
  %87 = load i64, ptr %72, align 8, !tbaa !34
  br label %91

88:                                               ; preds = %134, %91
  %89 = icmp eq i64 %94, %86
  br i1 %89, label %90, label %91

90:                                               ; preds = %88, %64
  ret void

91:                                               ; preds = %70, %88
  %92 = phi i64 [ %87, %70 ], [ %96, %88 ]
  %93 = phi i64 [ 0, %70 ], [ %94, %88 ]
  %94 = add nuw nsw i64 %93, 1
  %95 = getelementptr inbounds i64, ptr %72, i64 %94
  %96 = load i64, ptr %95, align 8, !tbaa !34
  %97 = and i64 %92, 4294967295
  %98 = icmp ugt i64 %96, %97
  br i1 %98, label %99, label %88

99:                                               ; preds = %91
  %100 = trunc i64 %92 to i32
  %101 = load ptr, ptr %73, align 8, !tbaa !46
  %102 = trunc i64 %93 to i32
  br label %103

103:                                              ; preds = %99, %134
  %104 = phi i64 [ %97, %99 ], [ %145, %134 ]
  %105 = phi i32 [ %100, %99 ], [ %144, %134 ]
  %106 = getelementptr inbounds i32, ptr %101, i64 %104
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = getelementptr inbounds double, ptr %75, i64 %104
  %109 = load double, ptr %108, align 8, !tbaa !30
  br label %110

110:                                              ; preds = %110, %103
  %111 = phi i32 [ %77, %103 ], [ %112, %110 ]
  %112 = add i32 %111, -1
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %79, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !47
  %116 = zext i32 %115 to i64
  %117 = icmp ult i64 %93, %116
  br i1 %117, label %110, label %118

118:                                              ; preds = %110
  %119 = sub i32 %102, %115
  %120 = zext i32 %119 to i64
  %121 = zext i32 %112 to i64
  %122 = getelementptr inbounds %"class.dealii::Vector", ptr %81, i64 %121, i32 3
  %123 = load ptr, ptr %122, align 8, !tbaa !53
  %124 = getelementptr inbounds double, ptr %123, i64 %120
  %125 = load double, ptr %124, align 8, !tbaa !30
  %126 = fmul double %109, %125
  br label %127

127:                                              ; preds = %127, %118
  %128 = phi i32 [ %5, %118 ], [ %129, %127 ]
  %129 = add i32 %128, -1
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i32, ptr %83, i64 %130
  %132 = load i32, ptr %131, align 4, !tbaa !47
  %133 = icmp ugt i32 %132, %107
  br i1 %133, label %127, label %134

134:                                              ; preds = %127
  %135 = fpext double %126 to x86_fp80
  %136 = sub i32 %107, %132
  %137 = zext i32 %136 to i64
  %138 = zext i32 %129 to i64
  %139 = getelementptr inbounds %"class.dealii::Vector.27", ptr %85, i64 %138, i32 3
  %140 = load ptr, ptr %139, align 8, !tbaa !135
  %141 = getelementptr inbounds x86_fp80, ptr %140, i64 %137
  %142 = load x86_fp80, ptr %141, align 16, !tbaa !128
  %143 = fadd x86_fp80 %142, %135
  store x86_fp80 %143, ptr %141, align 16, !tbaa !128
  %144 = add i32 %105, 1
  %145 = zext i32 %144 to i64
  %146 = icmp ugt i64 %96, %145
  br i1 %146, label %103, label %88
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !390
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !390
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !390
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %112, %37
  ret void

52:                                               ; preds = %41, %112
  %53 = phi i64 [ 0, %41 ], [ %60, %112 ]
  %54 = phi ptr [ %13, %41 ], [ %95, %112 ]
  %55 = phi ptr [ %16, %41 ], [ %93, %112 ]
  %56 = phi i32 [ %39, %41 ], [ %115, %112 ]
  %57 = phi i32 [ 0, %41 ], [ %114, %112 ]
  %58 = phi i32 [ %38, %41 ], [ %113, %112 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %90, %78 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds double, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !53
  %86 = getelementptr inbounds double, ptr %85, i64 %82
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = fmul double %69, %87
  %89 = fpext double %88 to x86_fp80
  %90 = fadd x86_fp80 %67, %89
  %91 = icmp eq ptr %79, %63
  br i1 %91, label %92, label %65

92:                                               ; preds = %78, %52
  %93 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %94 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %90, %78 ]
  %95 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %96 = icmp eq i32 %56, %59
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = add i32 %57, 1
  br label %112

99:                                               ; preds = %92
  %100 = add i32 %58, 1
  %101 = icmp ult i32 %100, %19
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = add i32 %58, 2
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %21, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !47, !noalias !393
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %21, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !47, !noalias !393
  %110 = add i32 %106, %56
  %111 = sub i32 %110, %109
  br label %112

112:                                              ; preds = %99, %97, %102
  %113 = phi i32 [ %100, %102 ], [ %58, %97 ], [ %100, %99 ]
  %114 = phi i32 [ 0, %102 ], [ %98, %97 ], [ 0, %99 ]
  %115 = phi i32 [ %111, %102 ], [ %56, %97 ], [ -1, %99 ]
  %116 = zext i32 %58 to i64
  %117 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %116, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !135
  %119 = zext i32 %57 to i64
  %120 = getelementptr inbounds x86_fp80, ptr %118, i64 %119
  %121 = load x86_fp80, ptr %120, align 16, !tbaa !128
  %122 = fadd x86_fp80 %94, %121
  store x86_fp80 %122, ptr %120, align 16, !tbaa !128
  %123 = icmp eq i64 %60, %50
  br i1 %123, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %75, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %75
  %45 = phi i64 [ %38, %40 ], [ %86, %75 ]
  %46 = phi i32 [ %41, %40 ], [ %85, %75 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds double, ptr %14, i64 %45
  %50 = load double, ptr %49, align 8, !tbaa !30
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !53
  %65 = getelementptr inbounds double, ptr %64, i64 %61
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = fmul double %50, %66
  br label %68

68:                                               ; preds = %68, %59
  %69 = phi i32 [ %22, %59 ], [ %70, %68 ]
  %70 = add i32 %69, -1
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i32, ptr %24, i64 %71
  %73 = load i32, ptr %72, align 4, !tbaa !47
  %74 = icmp ugt i32 %73, %48
  br i1 %74, label %68, label %75

75:                                               ; preds = %68
  %76 = fpext double %67 to x86_fp80
  %77 = sub i32 %48, %73
  %78 = zext i32 %77 to i64
  %79 = zext i32 %70 to i64
  %80 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %79, i32 3
  %81 = load ptr, ptr %80, align 8, !tbaa !135
  %82 = getelementptr inbounds x86_fp80, ptr %81, i64 %78
  %83 = load x86_fp80, ptr %82, align 16, !tbaa !128
  %84 = fadd x86_fp80 %83, %76
  store x86_fp80 %84, ptr %82, align 16, !tbaa !128
  %85 = add i32 %46, 1
  %86 = zext i32 %85 to i64
  %87 = icmp ugt i64 %37, %86
  br i1 %87, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %29 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %49, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to double
  %47 = fmul double %40, %46
  %48 = fpext double %47 to x86_fp80
  %49 = fadd x86_fp80 %37, %48
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %28, %25 ], [ %41, %35 ]
  %53 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  store x86_fp80 %53, ptr %29, align 16, !tbaa !128
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %20 to i64
  %33 = load i64, ptr %24, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %51, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %16
  ret void

37:                                               ; preds = %22, %34
  %38 = phi i64 [ %33, %22 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %22 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %24, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %25, align 8, !tbaa !46
  %48 = getelementptr inbounds float, ptr %29, i64 %39
  %49 = load float, ptr %48, align 4, !tbaa !95
  %50 = fpext float %49 to double
  br label %51

51:                                               ; preds = %45, %51
  %52 = phi i64 [ %43, %45 ], [ %65, %51 ]
  %53 = phi i32 [ %46, %45 ], [ %64, %51 ]
  %54 = getelementptr inbounds i32, ptr %47, i64 %52
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = getelementptr inbounds double, ptr %27, i64 %52
  %57 = load double, ptr %56, align 8, !tbaa !30
  %58 = fmul double %57, %50
  %59 = fpext double %58 to x86_fp80
  %60 = zext i32 %55 to i64
  %61 = getelementptr inbounds x86_fp80, ptr %31, i64 %60
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = fadd x86_fp80 %62, %59
  store x86_fp80 %63, ptr %61, align 16, !tbaa !128
  %64 = add i32 %53, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %42, %65
  br i1 %66, label %51, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %29 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %49, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to double
  %47 = fmul double %40, %46
  %48 = fpext double %47 to x86_fp80
  %49 = fadd x86_fp80 %37, %48
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %28, %25 ], [ %41, %35 ]
  %53 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  %56 = load x86_fp80, ptr %29, align 16, !tbaa !128
  %57 = fadd x86_fp80 %53, %56
  store x86_fp80 %57, ptr %29, align 16, !tbaa !128
  %58 = icmp eq i64 %30, %23
  br i1 %58, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %38, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds float, ptr %16, i64 %26
  %36 = load float, ptr %35, align 4, !tbaa !95
  %37 = fpext float %36 to double
  br label %38

38:                                               ; preds = %32, %38
  %39 = phi i64 [ %30, %32 ], [ %52, %38 ]
  %40 = phi i32 [ %33, %32 ], [ %51, %38 ]
  %41 = getelementptr inbounds i32, ptr %34, i64 %39
  %42 = load i32, ptr %41, align 4, !tbaa !47
  %43 = getelementptr inbounds double, ptr %14, i64 %39
  %44 = load double, ptr %43, align 8, !tbaa !30
  %45 = fmul double %44, %37
  %46 = fpext double %45 to x86_fp80
  %47 = zext i32 %42 to i64
  %48 = getelementptr inbounds x86_fp80, ptr %18, i64 %47
  %49 = load x86_fp80, ptr %48, align 16, !tbaa !128
  %50 = fadd x86_fp80 %49, %46
  store x86_fp80 %50, ptr %48, align 16, !tbaa !128
  %51 = add i32 %40, 1
  %52 = zext i32 %51 to i64
  %53 = icmp ugt i64 %29, %52
  br i1 %53, label %38, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %33 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %65, %52 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %32, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to double
  %63 = fmul double %43, %62
  %64 = fpext double %63 to x86_fp80
  %65 = fadd x86_fp80 %41, %64
  %66 = icmp eq ptr %53, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %52, %29
  %68 = phi ptr [ %32, %29 ], [ %54, %52 ]
  %69 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %65, %52 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %71 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  store x86_fp80 %69, ptr %33, align 16, !tbaa !128
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %20 to i64
  %37 = load i64, ptr %24, align 8, !tbaa !34
  br label %41

38:                                               ; preds = %68, %41
  %39 = icmp eq i64 %44, %36
  br i1 %39, label %40, label %41

40:                                               ; preds = %38, %16
  ret void

41:                                               ; preds = %22, %38
  %42 = phi i64 [ %37, %22 ], [ %46, %38 ]
  %43 = phi i64 [ 0, %22 ], [ %44, %38 ]
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr inbounds i64, ptr %24, i64 %44
  %46 = load i64, ptr %45, align 8, !tbaa !34
  %47 = and i64 %42, 4294967295
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %49, label %38

49:                                               ; preds = %41
  %50 = trunc i64 %42 to i32
  %51 = load ptr, ptr %25, align 8, !tbaa !46
  %52 = trunc i64 %43 to i32
  br label %53

53:                                               ; preds = %49, %68
  %54 = phi i64 [ %47, %49 ], [ %84, %68 ]
  %55 = phi i32 [ %50, %49 ], [ %83, %68 ]
  %56 = getelementptr inbounds i32, ptr %51, i64 %54
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = getelementptr inbounds double, ptr %27, i64 %54
  %59 = load double, ptr %58, align 8, !tbaa !30
  br label %60

60:                                               ; preds = %60, %53
  %61 = phi i32 [ %29, %53 ], [ %62, %60 ]
  %62 = add i32 %61, -1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, ptr %31, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !47
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %43, %66
  br i1 %67, label %60, label %68

68:                                               ; preds = %60
  %69 = sub i32 %52, %65
  %70 = zext i32 %69 to i64
  %71 = zext i32 %62 to i64
  %72 = getelementptr inbounds %"class.dealii::Vector.20", ptr %33, i64 %71, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !106
  %74 = getelementptr inbounds float, ptr %73, i64 %70
  %75 = load float, ptr %74, align 4, !tbaa !95
  %76 = fpext float %75 to double
  %77 = fmul double %59, %76
  %78 = fpext double %77 to x86_fp80
  %79 = zext i32 %57 to i64
  %80 = getelementptr inbounds x86_fp80, ptr %35, i64 %79
  %81 = load x86_fp80, ptr %80, align 16, !tbaa !128
  %82 = fadd x86_fp80 %81, %78
  store x86_fp80 %82, ptr %80, align 16, !tbaa !128
  %83 = add i32 %55, 1
  %84 = zext i32 %83 to i64
  %85 = icmp ugt i64 %46, %84
  br i1 %85, label %53, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %33 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %65, %52 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %32, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds double, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to double
  %63 = fmul double %43, %62
  %64 = fpext double %63 to x86_fp80
  %65 = fadd x86_fp80 %41, %64
  %66 = icmp eq ptr %53, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %52, %29
  %68 = phi ptr [ %32, %29 ], [ %54, %52 ]
  %69 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %65, %52 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %71 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  %72 = load x86_fp80, ptr %33, align 16, !tbaa !128
  %73 = fadd x86_fp80 %69, %72
  store x86_fp80 %73, ptr %33, align 16, !tbaa !128
  %74 = icmp eq i64 %34, %27
  br i1 %74, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %71, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %70, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds double, ptr %14, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !30
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = getelementptr inbounds float, ptr %60, i64 %57
  %62 = load float, ptr %61, align 4, !tbaa !95
  %63 = fpext float %62 to double
  %64 = fmul double %46, %63
  %65 = fpext double %64 to x86_fp80
  %66 = zext i32 %44 to i64
  %67 = getelementptr inbounds x86_fp80, ptr %22, i64 %66
  %68 = load x86_fp80, ptr %67, align 16, !tbaa !128
  %69 = fadd x86_fp80 %68, %65
  store x86_fp80 %69, ptr %67, align 16, !tbaa !128
  %70 = add i32 %42, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %33, %71
  br i1 %72, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !396
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !396
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !396
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %75, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to double
  %73 = fmul double %66, %72
  %74 = fpext double %73 to x86_fp80
  %75 = fadd x86_fp80 %63, %74
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %79 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !399
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !399
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !135
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds x86_fp80, ptr %103, i64 %104
  store x86_fp80 %79, ptr %105, align 16, !tbaa !128
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %77 = load ptr, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = zext i32 %68 to i64
  %83 = load i64, ptr %72, align 8, !tbaa !34
  br label %87

84:                                               ; preds = %116, %87
  %85 = icmp eq i64 %90, %82
  br i1 %85, label %86, label %87

86:                                               ; preds = %84, %64
  ret void

87:                                               ; preds = %70, %84
  %88 = phi i64 [ %83, %70 ], [ %92, %84 ]
  %89 = phi i64 [ 0, %70 ], [ %90, %84 ]
  %90 = add nuw nsw i64 %89, 1
  %91 = getelementptr inbounds i64, ptr %72, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !34
  %93 = and i64 %88, 4294967295
  %94 = icmp ugt i64 %92, %93
  br i1 %94, label %95, label %84

95:                                               ; preds = %87
  %96 = trunc i64 %88 to i32
  %97 = load ptr, ptr %73, align 8, !tbaa !46
  %98 = getelementptr inbounds float, ptr %77, i64 %89
  %99 = load float, ptr %98, align 4, !tbaa !95
  %100 = fpext float %99 to double
  br label %101

101:                                              ; preds = %95, %116
  %102 = phi i64 [ %93, %95 ], [ %127, %116 ]
  %103 = phi i32 [ %96, %95 ], [ %126, %116 ]
  %104 = getelementptr inbounds i32, ptr %97, i64 %102
  %105 = load i32, ptr %104, align 4, !tbaa !47
  %106 = getelementptr inbounds double, ptr %75, i64 %102
  %107 = load double, ptr %106, align 8, !tbaa !30
  %108 = fmul double %107, %100
  br label %109

109:                                              ; preds = %109, %101
  %110 = phi i32 [ %5, %101 ], [ %111, %109 ]
  %111 = add i32 %110, -1
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i32, ptr %79, i64 %112
  %114 = load i32, ptr %113, align 4, !tbaa !47
  %115 = icmp ugt i32 %114, %105
  br i1 %115, label %109, label %116

116:                                              ; preds = %109
  %117 = fpext double %108 to x86_fp80
  %118 = sub i32 %105, %114
  %119 = zext i32 %118 to i64
  %120 = zext i32 %111 to i64
  %121 = getelementptr inbounds %"class.dealii::Vector.27", ptr %81, i64 %120, i32 3
  %122 = load ptr, ptr %121, align 8, !tbaa !135
  %123 = getelementptr inbounds x86_fp80, ptr %122, i64 %119
  %124 = load x86_fp80, ptr %123, align 16, !tbaa !128
  %125 = fadd x86_fp80 %124, %117
  store x86_fp80 %125, ptr %123, align 16, !tbaa !128
  %126 = add i32 %103, 1
  %127 = zext i32 %126 to i64
  %128 = icmp ugt i64 %92, %127
  br i1 %128, label %101, label %84
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !402
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !402
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !402
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %75, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to double
  %73 = fmul double %66, %72
  %74 = fpext double %73 to x86_fp80
  %75 = fadd x86_fp80 %63, %74
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %79 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !405
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !405
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !135
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds x86_fp80, ptr %103, i64 %104
  %106 = load x86_fp80, ptr %105, align 16, !tbaa !128
  %107 = fadd x86_fp80 %79, %106
  store x86_fp80 %107, ptr %105, align 16, !tbaa !128
  %108 = icmp eq i64 %56, %46
  br i1 %108, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %57, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds float, ptr %16, i64 %30
  %40 = load float, ptr %39, align 4, !tbaa !95
  %41 = fpext float %40 to double
  br label %42

42:                                               ; preds = %36, %57
  %43 = phi i64 [ %34, %36 ], [ %68, %57 ]
  %44 = phi i32 [ %37, %36 ], [ %67, %57 ]
  %45 = getelementptr inbounds i32, ptr %38, i64 %43
  %46 = load i32, ptr %45, align 4, !tbaa !47
  %47 = getelementptr inbounds double, ptr %14, i64 %43
  %48 = load double, ptr %47, align 8, !tbaa !30
  %49 = fmul double %48, %41
  br label %50

50:                                               ; preds = %50, %42
  %51 = phi i32 [ %18, %42 ], [ %52, %50 ]
  %52 = add i32 %51, -1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, ptr %20, i64 %53
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = icmp ugt i32 %55, %46
  br i1 %56, label %50, label %57

57:                                               ; preds = %50
  %58 = fpext double %49 to x86_fp80
  %59 = sub i32 %46, %55
  %60 = zext i32 %59 to i64
  %61 = zext i32 %52 to i64
  %62 = getelementptr inbounds %"class.dealii::Vector.27", ptr %22, i64 %61, i32 3
  %63 = load ptr, ptr %62, align 8, !tbaa !135
  %64 = getelementptr inbounds x86_fp80, ptr %63, i64 %60
  %65 = load x86_fp80, ptr %64, align 16, !tbaa !128
  %66 = fadd x86_fp80 %65, %58
  store x86_fp80 %66, ptr %64, align 16, !tbaa !128
  %67 = add i32 %44, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %42, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !408
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !408
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !408
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %91, %78 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds double, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to double
  %89 = fmul double %69, %88
  %90 = fpext double %89 to x86_fp80
  %91 = fadd x86_fp80 %67, %90
  %92 = icmp eq ptr %79, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %78, %52
  %94 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %95 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %91, %78 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !411
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !411
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !135
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds x86_fp80, ptr %119, i64 %120
  store x86_fp80 %95, ptr %121, align 16, !tbaa !128
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %90, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %77 = load i32, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8
  %86 = zext i32 %68 to i64
  %87 = load i64, ptr %72, align 8, !tbaa !34
  br label %91

88:                                               ; preds = %135, %91
  %89 = icmp eq i64 %94, %86
  br i1 %89, label %90, label %91

90:                                               ; preds = %88, %64
  ret void

91:                                               ; preds = %70, %88
  %92 = phi i64 [ %87, %70 ], [ %96, %88 ]
  %93 = phi i64 [ 0, %70 ], [ %94, %88 ]
  %94 = add nuw nsw i64 %93, 1
  %95 = getelementptr inbounds i64, ptr %72, i64 %94
  %96 = load i64, ptr %95, align 8, !tbaa !34
  %97 = and i64 %92, 4294967295
  %98 = icmp ugt i64 %96, %97
  br i1 %98, label %99, label %88

99:                                               ; preds = %91
  %100 = trunc i64 %92 to i32
  %101 = load ptr, ptr %73, align 8, !tbaa !46
  %102 = trunc i64 %93 to i32
  br label %103

103:                                              ; preds = %99, %135
  %104 = phi i64 [ %97, %99 ], [ %146, %135 ]
  %105 = phi i32 [ %100, %99 ], [ %145, %135 ]
  %106 = getelementptr inbounds i32, ptr %101, i64 %104
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = getelementptr inbounds double, ptr %75, i64 %104
  %109 = load double, ptr %108, align 8, !tbaa !30
  br label %110

110:                                              ; preds = %110, %103
  %111 = phi i32 [ %77, %103 ], [ %112, %110 ]
  %112 = add i32 %111, -1
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %79, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !47
  %116 = zext i32 %115 to i64
  %117 = icmp ult i64 %93, %116
  br i1 %117, label %110, label %118

118:                                              ; preds = %110
  %119 = sub i32 %102, %115
  %120 = zext i32 %119 to i64
  %121 = zext i32 %112 to i64
  %122 = getelementptr inbounds %"class.dealii::Vector.20", ptr %81, i64 %121, i32 3
  %123 = load ptr, ptr %122, align 8, !tbaa !106
  %124 = getelementptr inbounds float, ptr %123, i64 %120
  %125 = load float, ptr %124, align 4, !tbaa !95
  %126 = fpext float %125 to double
  %127 = fmul double %109, %126
  br label %128

128:                                              ; preds = %128, %118
  %129 = phi i32 [ %5, %118 ], [ %130, %128 ]
  %130 = add i32 %129, -1
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i32, ptr %83, i64 %131
  %133 = load i32, ptr %132, align 4, !tbaa !47
  %134 = icmp ugt i32 %133, %107
  br i1 %134, label %128, label %135

135:                                              ; preds = %128
  %136 = fpext double %127 to x86_fp80
  %137 = sub i32 %107, %133
  %138 = zext i32 %137 to i64
  %139 = zext i32 %130 to i64
  %140 = getelementptr inbounds %"class.dealii::Vector.27", ptr %85, i64 %139, i32 3
  %141 = load ptr, ptr %140, align 8, !tbaa !135
  %142 = getelementptr inbounds x86_fp80, ptr %141, i64 %138
  %143 = load x86_fp80, ptr %142, align 16, !tbaa !128
  %144 = fadd x86_fp80 %143, %136
  store x86_fp80 %144, ptr %142, align 16, !tbaa !128
  %145 = add i32 %105, 1
  %146 = zext i32 %145 to i64
  %147 = icmp ugt i64 %96, %146
  br i1 %147, label %103, label %88
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !414
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !414
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !414
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %91, %78 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds double, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to double
  %89 = fmul double %69, %88
  %90 = fpext double %89 to x86_fp80
  %91 = fadd x86_fp80 %67, %90
  %92 = icmp eq ptr %79, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %78, %52
  %94 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %95 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %91, %78 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !417
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !417
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !135
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds x86_fp80, ptr %119, i64 %120
  %122 = load x86_fp80, ptr %121, align 16, !tbaa !128
  %123 = fadd x86_fp80 %95, %122
  store x86_fp80 %123, ptr %121, align 16, !tbaa !128
  %124 = icmp eq i64 %60, %50
  br i1 %124, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %76, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %76
  %45 = phi i64 [ %38, %40 ], [ %87, %76 ]
  %46 = phi i32 [ %41, %40 ], [ %86, %76 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds double, ptr %14, i64 %45
  %50 = load double, ptr %49, align 8, !tbaa !30
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !106
  %65 = getelementptr inbounds float, ptr %64, i64 %61
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fpext float %66 to double
  %68 = fmul double %50, %67
  br label %69

69:                                               ; preds = %69, %59
  %70 = phi i32 [ %22, %59 ], [ %71, %69 ]
  %71 = add i32 %70, -1
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, ptr %24, i64 %72
  %74 = load i32, ptr %73, align 4, !tbaa !47
  %75 = icmp ugt i32 %74, %48
  br i1 %75, label %69, label %76

76:                                               ; preds = %69
  %77 = fpext double %68 to x86_fp80
  %78 = sub i32 %48, %74
  %79 = zext i32 %78 to i64
  %80 = zext i32 %71 to i64
  %81 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %80, i32 3
  %82 = load ptr, ptr %81, align 8, !tbaa !135
  %83 = getelementptr inbounds x86_fp80, ptr %82, i64 %79
  %84 = load x86_fp80, ptr %83, align 16, !tbaa !128
  %85 = fadd x86_fp80 %84, %77
  store x86_fp80 %85, ptr %83, align 16, !tbaa !128
  %86 = add i32 %46, 1
  %87 = zext i32 %86 to i64
  %88 = icmp ugt i64 %37, %87
  br i1 %88, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %49, %3
  ret void

25:                                               ; preds = %13, %49
  %26 = phi i64 [ 0, %13 ], [ %30, %49 ]
  %27 = phi ptr [ %20, %13 ], [ %52, %49 ]
  %28 = phi ptr [ %19, %13 ], [ %50, %49 ]
  %29 = phi ptr [ %15, %13 ], [ %53, %49 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %47, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = fpext double %40 to x86_fp80
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %22, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %37)
  %48 = icmp eq ptr %39, %33
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %25
  %50 = phi ptr [ %28, %25 ], [ %42, %35 ]
  %51 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %47, %35 ]
  %52 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %53 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  store x86_fp80 %51, ptr %29, align 16, !tbaa !128
  %54 = icmp eq i64 %30, %23
  br i1 %54, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %20 to i64
  %33 = load i64, ptr %24, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %49, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %16
  ret void

37:                                               ; preds = %22, %34
  %38 = phi i64 [ %33, %22 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %22 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %24, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %25, align 8, !tbaa !46
  %48 = getelementptr inbounds x86_fp80, ptr %29, i64 %39
  br label %49

49:                                               ; preds = %45, %49
  %50 = phi i64 [ %43, %45 ], [ %63, %49 ]
  %51 = phi i32 [ %46, %45 ], [ %62, %49 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds double, ptr %27, i64 %50
  %55 = load double, ptr %54, align 8, !tbaa !30
  %56 = fpext double %55 to x86_fp80
  %57 = load x86_fp80, ptr %48, align 16, !tbaa !128
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %31, i64 %58
  %60 = load x86_fp80, ptr %59, align 16, !tbaa !128
  %61 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %57, x86_fp80 %60)
  store x86_fp80 %61, ptr %59, align 16, !tbaa !128
  %62 = add i32 %51, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %42, %63
  br i1 %64, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %49, %3
  ret void

25:                                               ; preds = %13, %49
  %26 = phi i64 [ 0, %13 ], [ %30, %49 ]
  %27 = phi ptr [ %20, %13 ], [ %52, %49 ]
  %28 = phi ptr [ %19, %13 ], [ %50, %49 ]
  %29 = phi ptr [ %15, %13 ], [ %53, %49 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds double, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %47, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds double, ptr %36, i64 1
  %40 = load double, ptr %36, align 8, !tbaa !30
  %41 = fpext double %40 to x86_fp80
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %22, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %37)
  %48 = icmp eq ptr %39, %33
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %25
  %50 = phi ptr [ %28, %25 ], [ %42, %35 ]
  %51 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %47, %35 ]
  %52 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %53 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  %54 = load x86_fp80, ptr %29, align 16, !tbaa !128
  %55 = fadd x86_fp80 %51, %54
  store x86_fp80 %55, ptr %29, align 16, !tbaa !128
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %36, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds x86_fp80, ptr %16, i64 %26
  br label %36

36:                                               ; preds = %32, %36
  %37 = phi i64 [ %30, %32 ], [ %50, %36 ]
  %38 = phi i32 [ %33, %32 ], [ %49, %36 ]
  %39 = getelementptr inbounds i32, ptr %34, i64 %37
  %40 = load i32, ptr %39, align 4, !tbaa !47
  %41 = getelementptr inbounds double, ptr %14, i64 %37
  %42 = load double, ptr %41, align 8, !tbaa !30
  %43 = fpext double %42 to x86_fp80
  %44 = load x86_fp80, ptr %35, align 16, !tbaa !128
  %45 = zext i32 %40 to i64
  %46 = getelementptr inbounds x86_fp80, ptr %18, i64 %45
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !128
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %44, x86_fp80 %47)
  store x86_fp80 %48, ptr %46, align 16, !tbaa !128
  %49 = add i32 %38, 1
  %50 = zext i32 %49 to i64
  %51 = icmp ugt i64 %29, %50
  br i1 %51, label %36, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %65, %3
  ret void

29:                                               ; preds = %13, %65
  %30 = phi i64 [ 0, %13 ], [ %34, %65 ]
  %31 = phi ptr [ %20, %13 ], [ %68, %65 ]
  %32 = phi ptr [ %19, %13 ], [ %66, %65 ]
  %33 = phi ptr [ %15, %13 ], [ %69, %65 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %65, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %63, %53 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %32, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds double, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %62, x86_fp80 %41)
  %64 = icmp eq ptr %54, %37
  br i1 %64, label %65, label %39

65:                                               ; preds = %53, %29
  %66 = phi ptr [ %32, %29 ], [ %55, %53 ]
  %67 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %63, %53 ]
  %68 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %69 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  store x86_fp80 %67, ptr %33, align 16, !tbaa !128
  %70 = icmp eq i64 %34, %27
  br i1 %70, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %20 to i64
  %37 = load i64, ptr %24, align 8, !tbaa !34
  br label %41

38:                                               ; preds = %68, %41
  %39 = icmp eq i64 %44, %36
  br i1 %39, label %40, label %41

40:                                               ; preds = %38, %16
  ret void

41:                                               ; preds = %22, %38
  %42 = phi i64 [ %37, %22 ], [ %46, %38 ]
  %43 = phi i64 [ 0, %22 ], [ %44, %38 ]
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr inbounds i64, ptr %24, i64 %44
  %46 = load i64, ptr %45, align 8, !tbaa !34
  %47 = and i64 %42, 4294967295
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %49, label %38

49:                                               ; preds = %41
  %50 = trunc i64 %42 to i32
  %51 = load ptr, ptr %25, align 8, !tbaa !46
  %52 = trunc i64 %43 to i32
  br label %53

53:                                               ; preds = %49, %68
  %54 = phi i64 [ %47, %49 ], [ %82, %68 ]
  %55 = phi i32 [ %50, %49 ], [ %81, %68 ]
  %56 = getelementptr inbounds i32, ptr %51, i64 %54
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = getelementptr inbounds double, ptr %27, i64 %54
  %59 = load double, ptr %58, align 8, !tbaa !30
  br label %60

60:                                               ; preds = %60, %53
  %61 = phi i32 [ %29, %53 ], [ %62, %60 ]
  %62 = add i32 %61, -1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, ptr %31, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !47
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %43, %66
  br i1 %67, label %60, label %68

68:                                               ; preds = %60
  %69 = fpext double %59 to x86_fp80
  %70 = sub i32 %52, %65
  %71 = zext i32 %70 to i64
  %72 = zext i32 %62 to i64
  %73 = getelementptr inbounds %"class.dealii::Vector.27", ptr %33, i64 %72, i32 3
  %74 = load ptr, ptr %73, align 8, !tbaa !135
  %75 = getelementptr inbounds x86_fp80, ptr %74, i64 %71
  %76 = load x86_fp80, ptr %75, align 16, !tbaa !128
  %77 = zext i32 %57 to i64
  %78 = getelementptr inbounds x86_fp80, ptr %35, i64 %77
  %79 = load x86_fp80, ptr %78, align 16, !tbaa !128
  %80 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %76, x86_fp80 %79)
  store x86_fp80 %80, ptr %78, align 16, !tbaa !128
  %81 = add i32 %55, 1
  %82 = zext i32 %81 to i64
  %83 = icmp ugt i64 %46, %82
  br i1 %83, label %53, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds double, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %65, %3
  ret void

29:                                               ; preds = %13, %65
  %30 = phi i64 [ 0, %13 ], [ %34, %65 ]
  %31 = phi ptr [ %20, %13 ], [ %68, %65 ]
  %32 = phi ptr [ %19, %13 ], [ %66, %65 ]
  %33 = phi ptr [ %15, %13 ], [ %69, %65 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds double, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %65, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %63, %53 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %32, %29 ]
  %43 = load double, ptr %40, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds double, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %62, x86_fp80 %41)
  %64 = icmp eq ptr %54, %37
  br i1 %64, label %65, label %39

65:                                               ; preds = %53, %29
  %66 = phi ptr [ %32, %29 ], [ %55, %53 ]
  %67 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %63, %53 ]
  %68 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %69 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  %70 = load x86_fp80, ptr %33, align 16, !tbaa !128
  %71 = fadd x86_fp80 %67, %70
  store x86_fp80 %71, ptr %33, align 16, !tbaa !128
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %69, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %68, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds double, ptr %14, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !30
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = fpext double %46 to x86_fp80
  %57 = sub i32 %39, %52
  %58 = zext i32 %57 to i64
  %59 = zext i32 %49 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !135
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 %58
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds x86_fp80, ptr %22, i64 %64
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  %67 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %63, x86_fp80 %66)
  store x86_fp80 %67, ptr %65, align 16, !tbaa !128
  %68 = add i32 %42, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %33, %69
  br i1 %70, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !420
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !420
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !420
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %95, %37
  ret void

48:                                               ; preds = %41, %95
  %49 = phi i64 [ 0, %41 ], [ %56, %95 ]
  %50 = phi ptr [ %13, %41 ], [ %78, %95 ]
  %51 = phi ptr [ %16, %41 ], [ %76, %95 ]
  %52 = phi i32 [ %39, %41 ], [ %98, %95 ]
  %53 = phi i32 [ 0, %41 ], [ %97, %95 ]
  %54 = phi i32 [ %38, %41 ], [ %96, %95 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %73, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = fpext double %66 to x86_fp80
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds x86_fp80, ptr %43, i64 %70
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %72, x86_fp80 %63)
  %74 = icmp eq ptr %65, %59
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %48
  %76 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %77 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %73, %61 ]
  %78 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %79 = icmp eq i32 %52, %55
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = add i32 %53, 1
  br label %95

82:                                               ; preds = %75
  %83 = add i32 %54, 1
  %84 = icmp ult i32 %83, %19
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = add i32 %54, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %21, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !47, !noalias !423
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i32, ptr %21, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !47, !noalias !423
  %93 = add i32 %89, %52
  %94 = sub i32 %93, %92
  br label %95

95:                                               ; preds = %82, %80, %85
  %96 = phi i32 [ %83, %85 ], [ %54, %80 ], [ %83, %82 ]
  %97 = phi i32 [ 0, %85 ], [ %81, %80 ], [ 0, %82 ]
  %98 = phi i32 [ %94, %85 ], [ %52, %80 ], [ -1, %82 ]
  %99 = zext i32 %54 to i64
  %100 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %99, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !135
  %102 = zext i32 %53 to i64
  %103 = getelementptr inbounds x86_fp80, ptr %101, i64 %102
  store x86_fp80 %77, ptr %103, align 16, !tbaa !128
  %104 = icmp eq i64 %56, %46
  br i1 %104, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %77 = load ptr, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = zext i32 %68 to i64
  %83 = load i64, ptr %72, align 8, !tbaa !34
  br label %87

84:                                               ; preds = %114, %87
  %85 = icmp eq i64 %90, %82
  br i1 %85, label %86, label %87

86:                                               ; preds = %84, %64
  ret void

87:                                               ; preds = %70, %84
  %88 = phi i64 [ %83, %70 ], [ %92, %84 ]
  %89 = phi i64 [ 0, %70 ], [ %90, %84 ]
  %90 = add nuw nsw i64 %89, 1
  %91 = getelementptr inbounds i64, ptr %72, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !34
  %93 = and i64 %88, 4294967295
  %94 = icmp ugt i64 %92, %93
  br i1 %94, label %95, label %84

95:                                               ; preds = %87
  %96 = trunc i64 %88 to i32
  %97 = load ptr, ptr %73, align 8, !tbaa !46
  %98 = getelementptr inbounds x86_fp80, ptr %77, i64 %89
  br label %99

99:                                               ; preds = %95, %114
  %100 = phi i64 [ %93, %95 ], [ %125, %114 ]
  %101 = phi i32 [ %96, %95 ], [ %124, %114 ]
  %102 = getelementptr inbounds i32, ptr %97, i64 %100
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = getelementptr inbounds double, ptr %75, i64 %100
  %105 = load double, ptr %104, align 8, !tbaa !30
  %106 = load x86_fp80, ptr %98, align 16, !tbaa !128
  br label %107

107:                                              ; preds = %107, %99
  %108 = phi i32 [ %5, %99 ], [ %109, %107 ]
  %109 = add i32 %108, -1
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, ptr %79, i64 %110
  %112 = load i32, ptr %111, align 4, !tbaa !47
  %113 = icmp ugt i32 %112, %103
  br i1 %113, label %107, label %114

114:                                              ; preds = %107
  %115 = fpext double %105 to x86_fp80
  %116 = sub i32 %103, %112
  %117 = zext i32 %116 to i64
  %118 = zext i32 %109 to i64
  %119 = getelementptr inbounds %"class.dealii::Vector.27", ptr %81, i64 %118, i32 3
  %120 = load ptr, ptr %119, align 8, !tbaa !135
  %121 = getelementptr inbounds x86_fp80, ptr %120, i64 %117
  %122 = load x86_fp80, ptr %121, align 16, !tbaa !128
  %123 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %115, x86_fp80 %106, x86_fp80 %122)
  store x86_fp80 %123, ptr %121, align 16, !tbaa !128
  %124 = add i32 %101, 1
  %125 = zext i32 %124 to i64
  %126 = icmp ugt i64 %92, %125
  br i1 %126, label %99, label %84
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !426
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !426
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !426
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %95, %37
  ret void

48:                                               ; preds = %41, %95
  %49 = phi i64 [ 0, %41 ], [ %56, %95 ]
  %50 = phi ptr [ %13, %41 ], [ %78, %95 ]
  %51 = phi ptr [ %16, %41 ], [ %76, %95 ]
  %52 = phi i32 [ %39, %41 ], [ %98, %95 ]
  %53 = phi i32 [ 0, %41 ], [ %97, %95 ]
  %54 = phi i32 [ %38, %41 ], [ %96, %95 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds double, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %73, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds double, ptr %62, i64 1
  %66 = load double, ptr %62, align 8, !tbaa !30
  %67 = fpext double %66 to x86_fp80
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds x86_fp80, ptr %43, i64 %70
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %72, x86_fp80 %63)
  %74 = icmp eq ptr %65, %59
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %48
  %76 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %77 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %73, %61 ]
  %78 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %79 = icmp eq i32 %52, %55
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = add i32 %53, 1
  br label %95

82:                                               ; preds = %75
  %83 = add i32 %54, 1
  %84 = icmp ult i32 %83, %19
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = add i32 %54, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %21, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !47, !noalias !429
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i32, ptr %21, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !47, !noalias !429
  %93 = add i32 %89, %52
  %94 = sub i32 %93, %92
  br label %95

95:                                               ; preds = %82, %80, %85
  %96 = phi i32 [ %83, %85 ], [ %54, %80 ], [ %83, %82 ]
  %97 = phi i32 [ 0, %85 ], [ %81, %80 ], [ 0, %82 ]
  %98 = phi i32 [ %94, %85 ], [ %52, %80 ], [ -1, %82 ]
  %99 = zext i32 %54 to i64
  %100 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %99, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !135
  %102 = zext i32 %53 to i64
  %103 = getelementptr inbounds x86_fp80, ptr %101, i64 %102
  %104 = load x86_fp80, ptr %103, align 16, !tbaa !128
  %105 = fadd x86_fp80 %77, %104
  store x86_fp80 %105, ptr %103, align 16, !tbaa !128
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %30
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %66, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %65, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds double, ptr %14, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = load x86_fp80, ptr %39, align 16, !tbaa !128
  br label %48

48:                                               ; preds = %48, %40
  %49 = phi i32 [ %18, %40 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %44
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = fpext double %46 to x86_fp80
  %57 = sub i32 %44, %53
  %58 = zext i32 %57 to i64
  %59 = zext i32 %50 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.27", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !135
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 %58
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %47, x86_fp80 %63)
  store x86_fp80 %64, ptr %62, align 16, !tbaa !128
  %65 = add i32 %42, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %33, %66
  br i1 %67, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE5vmultINS_11BlockVectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !432
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !432
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !432
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %111, %37
  ret void

52:                                               ; preds = %41, %111
  %53 = phi i64 [ 0, %41 ], [ %60, %111 ]
  %54 = phi ptr [ %13, %41 ], [ %94, %111 ]
  %55 = phi ptr [ %16, %41 ], [ %92, %111 ]
  %56 = phi i32 [ %39, %41 ], [ %114, %111 ]
  %57 = phi i32 [ 0, %41 ], [ %113, %111 ]
  %58 = phi i32 [ %38, %41 ], [ %112, %111 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %91, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %89, %79 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = fpext double %69 to x86_fp80
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds double, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !135
  %87 = getelementptr inbounds x86_fp80, ptr %86, i64 %83
  %88 = load x86_fp80, ptr %87, align 16, !tbaa !128
  %89 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %88, x86_fp80 %67)
  %90 = icmp eq ptr %80, %63
  br i1 %90, label %91, label %65

91:                                               ; preds = %79, %52
  %92 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %93 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %89, %79 ]
  %94 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %95 = icmp eq i32 %56, %59
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = add i32 %57, 1
  br label %111

98:                                               ; preds = %91
  %99 = add i32 %58, 1
  %100 = icmp ult i32 %99, %19
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = add i32 %58, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %21, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !47, !noalias !435
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds i32, ptr %21, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !47, !noalias !435
  %109 = add i32 %105, %56
  %110 = sub i32 %109, %108
  br label %111

111:                                              ; preds = %98, %96, %101
  %112 = phi i32 [ %99, %101 ], [ %58, %96 ], [ %99, %98 ]
  %113 = phi i32 [ 0, %101 ], [ %97, %96 ], [ 0, %98 ]
  %114 = phi i32 [ %110, %101 ], [ %56, %96 ], [ -1, %98 ]
  %115 = zext i32 %58 to i64
  %116 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %115, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !135
  %118 = zext i32 %57 to i64
  %119 = getelementptr inbounds x86_fp80, ptr %117, i64 %118
  store x86_fp80 %93, ptr %119, align 16, !tbaa !128
  %120 = icmp eq i64 %60, %50
  br i1 %120, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE6TvmultINS_11BlockVectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %90, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %77 = load i32, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8
  %86 = zext i32 %68 to i64
  %87 = load i64, ptr %72, align 8, !tbaa !34
  br label %91

88:                                               ; preds = %133, %91
  %89 = icmp eq i64 %94, %86
  br i1 %89, label %90, label %91

90:                                               ; preds = %88, %64
  ret void

91:                                               ; preds = %70, %88
  %92 = phi i64 [ %87, %70 ], [ %96, %88 ]
  %93 = phi i64 [ 0, %70 ], [ %94, %88 ]
  %94 = add nuw nsw i64 %93, 1
  %95 = getelementptr inbounds i64, ptr %72, i64 %94
  %96 = load i64, ptr %95, align 8, !tbaa !34
  %97 = and i64 %92, 4294967295
  %98 = icmp ugt i64 %96, %97
  br i1 %98, label %99, label %88

99:                                               ; preds = %91
  %100 = trunc i64 %92 to i32
  %101 = load ptr, ptr %73, align 8, !tbaa !46
  %102 = trunc i64 %93 to i32
  br label %103

103:                                              ; preds = %99, %133
  %104 = phi i64 [ %97, %99 ], [ %144, %133 ]
  %105 = phi i32 [ %100, %99 ], [ %143, %133 ]
  %106 = getelementptr inbounds i32, ptr %101, i64 %104
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = getelementptr inbounds double, ptr %75, i64 %104
  %109 = load double, ptr %108, align 8, !tbaa !30
  br label %110

110:                                              ; preds = %110, %103
  %111 = phi i32 [ %77, %103 ], [ %112, %110 ]
  %112 = add i32 %111, -1
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %79, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !47
  %116 = zext i32 %115 to i64
  %117 = icmp ult i64 %93, %116
  br i1 %117, label %110, label %118

118:                                              ; preds = %110
  %119 = sub i32 %102, %115
  %120 = zext i32 %119 to i64
  %121 = zext i32 %112 to i64
  %122 = getelementptr inbounds %"class.dealii::Vector.27", ptr %81, i64 %121, i32 3
  %123 = load ptr, ptr %122, align 8, !tbaa !135
  %124 = getelementptr inbounds x86_fp80, ptr %123, i64 %120
  %125 = load x86_fp80, ptr %124, align 16, !tbaa !128
  br label %126

126:                                              ; preds = %126, %118
  %127 = phi i32 [ %5, %118 ], [ %128, %126 ]
  %128 = add i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, ptr %83, i64 %129
  %131 = load i32, ptr %130, align 4, !tbaa !47
  %132 = icmp ugt i32 %131, %107
  br i1 %132, label %126, label %133

133:                                              ; preds = %126
  %134 = fpext double %109 to x86_fp80
  %135 = sub i32 %107, %131
  %136 = zext i32 %135 to i64
  %137 = zext i32 %128 to i64
  %138 = getelementptr inbounds %"class.dealii::Vector.27", ptr %85, i64 %137, i32 3
  %139 = load ptr, ptr %138, align 8, !tbaa !135
  %140 = getelementptr inbounds x86_fp80, ptr %139, i64 %136
  %141 = load x86_fp80, ptr %140, align 16, !tbaa !128
  %142 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %134, x86_fp80 %125, x86_fp80 %141)
  store x86_fp80 %142, ptr %140, align 16, !tbaa !128
  %143 = add i32 %105, 1
  %144 = zext i32 %143 to i64
  %145 = icmp ugt i64 %96, %144
  br i1 %145, label %103, label %88
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE9vmult_addINS_11BlockVectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds double, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !438
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !438
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !438
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %111, %37
  ret void

52:                                               ; preds = %41, %111
  %53 = phi i64 [ 0, %41 ], [ %60, %111 ]
  %54 = phi ptr [ %13, %41 ], [ %94, %111 ]
  %55 = phi ptr [ %16, %41 ], [ %92, %111 ]
  %56 = phi i32 [ %39, %41 ], [ %114, %111 ]
  %57 = phi i32 [ 0, %41 ], [ %113, %111 ]
  %58 = phi i32 [ %38, %41 ], [ %112, %111 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds double, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %91, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %89, %79 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load double, ptr %66, align 8, !tbaa !30
  %70 = fpext double %69 to x86_fp80
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds double, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !135
  %87 = getelementptr inbounds x86_fp80, ptr %86, i64 %83
  %88 = load x86_fp80, ptr %87, align 16, !tbaa !128
  %89 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %88, x86_fp80 %67)
  %90 = icmp eq ptr %80, %63
  br i1 %90, label %91, label %65

91:                                               ; preds = %79, %52
  %92 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %93 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %89, %79 ]
  %94 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %95 = icmp eq i32 %56, %59
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = add i32 %57, 1
  br label %111

98:                                               ; preds = %91
  %99 = add i32 %58, 1
  %100 = icmp ult i32 %99, %19
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = add i32 %58, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %21, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !47, !noalias !441
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds i32, ptr %21, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !47, !noalias !441
  %109 = add i32 %105, %56
  %110 = sub i32 %109, %108
  br label %111

111:                                              ; preds = %98, %96, %101
  %112 = phi i32 [ %99, %101 ], [ %58, %96 ], [ %99, %98 ]
  %113 = phi i32 [ 0, %101 ], [ %97, %96 ], [ 0, %98 ]
  %114 = phi i32 [ %110, %101 ], [ %56, %96 ], [ -1, %98 ]
  %115 = zext i32 %58 to i64
  %116 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %115, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !135
  %118 = zext i32 %57 to i64
  %119 = getelementptr inbounds x86_fp80, ptr %117, i64 %118
  %120 = load x86_fp80, ptr %119, align 16, !tbaa !128
  %121 = fadd x86_fp80 %93, %120
  store x86_fp80 %121, ptr %119, align 16, !tbaa !128
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIdE10Tvmult_addINS_11BlockVectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %85, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %84, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds double, ptr %14, i64 %45
  %50 = load double, ptr %49, align 8, !tbaa !30
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !135
  %65 = getelementptr inbounds x86_fp80, ptr %64, i64 %61
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext double %50 to x86_fp80
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !135
  %81 = getelementptr inbounds x86_fp80, ptr %80, i64 %77
  %82 = load x86_fp80, ptr %81, align 16, !tbaa !128
  %83 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %75, x86_fp80 %66, x86_fp80 %82)
  store x86_fp80 %83, ptr %81, align 16, !tbaa !128
  %84 = add i32 %46, 1
  %85 = zext i32 %84 to i64
  %86 = icmp ugt i64 %37, %85
  br i1 %86, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %49, %3
  ret void

25:                                               ; preds = %13, %49
  %26 = phi i64 [ 0, %13 ], [ %30, %49 ]
  %27 = phi ptr [ %20, %13 ], [ %52, %49 ]
  %28 = phi ptr [ %15, %13 ], [ %53, %49 ]
  %29 = phi ptr [ %19, %13 ], [ %50, %49 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %47, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = fpext float %40 to double
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds double, ptr %22, i64 %44
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = tail call double @llvm.fmuladd.f64(double %41, double %46, double %37)
  %48 = icmp eq ptr %39, %33
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %25
  %50 = phi ptr [ %29, %25 ], [ %42, %35 ]
  %51 = phi double [ 0.000000e+00, %25 ], [ %47, %35 ]
  %52 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %53 = getelementptr inbounds double, ptr %28, i64 1
  store double %51, ptr %28, align 8, !tbaa !30
  %54 = icmp eq i64 %30, %23
  br i1 %54, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %45, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds double, ptr %25, i64 %35
  br label %45

45:                                               ; preds = %41, %45
  %46 = phi i64 [ %39, %41 ], [ %59, %45 ]
  %47 = phi i32 [ %42, %41 ], [ %58, %45 ]
  %48 = getelementptr inbounds i32, ptr %43, i64 %46
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = getelementptr inbounds float, ptr %23, i64 %46
  %51 = load float, ptr %50, align 4, !tbaa !95
  %52 = fpext float %51 to double
  %53 = load double, ptr %44, align 8, !tbaa !30
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds double, ptr %27, i64 %54
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = tail call double @llvm.fmuladd.f64(double %52, double %53, double %56)
  store double %57, ptr %55, align 8, !tbaa !30
  %58 = add i32 %47, 1
  %59 = zext i32 %58 to i64
  %60 = icmp ugt i64 %38, %59
  br i1 %60, label %45, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %49, %3
  ret void

25:                                               ; preds = %13, %49
  %26 = phi i64 [ 0, %13 ], [ %30, %49 ]
  %27 = phi ptr [ %20, %13 ], [ %52, %49 ]
  %28 = phi ptr [ %15, %13 ], [ %53, %49 ]
  %29 = phi ptr [ %19, %13 ], [ %50, %49 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %47, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = fpext float %40 to double
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds double, ptr %22, i64 %44
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = tail call double @llvm.fmuladd.f64(double %41, double %46, double %37)
  %48 = icmp eq ptr %39, %33
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %25
  %50 = phi ptr [ %29, %25 ], [ %42, %35 ]
  %51 = phi double [ 0.000000e+00, %25 ], [ %47, %35 ]
  %52 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %53 = getelementptr inbounds double, ptr %28, i64 1
  %54 = load double, ptr %28, align 8, !tbaa !30
  %55 = fadd double %51, %54
  store double %55, ptr %28, align 8, !tbaa !30
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %36, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds double, ptr %16, i64 %26
  br label %36

36:                                               ; preds = %32, %36
  %37 = phi i64 [ %30, %32 ], [ %50, %36 ]
  %38 = phi i32 [ %33, %32 ], [ %49, %36 ]
  %39 = getelementptr inbounds i32, ptr %34, i64 %37
  %40 = load i32, ptr %39, align 4, !tbaa !47
  %41 = getelementptr inbounds float, ptr %14, i64 %37
  %42 = load float, ptr %41, align 4, !tbaa !95
  %43 = fpext float %42 to double
  %44 = load double, ptr %35, align 8, !tbaa !30
  %45 = zext i32 %40 to i64
  %46 = getelementptr inbounds double, ptr %18, i64 %45
  %47 = load double, ptr %46, align 8, !tbaa !30
  %48 = tail call double @llvm.fmuladd.f64(double %43, double %44, double %47)
  store double %48, ptr %46, align 8, !tbaa !30
  %49 = add i32 %38, 1
  %50 = zext i32 %49 to i64
  %51 = icmp ugt i64 %29, %50
  br i1 %51, label %36, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %65, %3
  ret void

29:                                               ; preds = %13, %65
  %30 = phi i64 [ 0, %13 ], [ %34, %65 ]
  %31 = phi ptr [ %20, %13 ], [ %68, %65 ]
  %32 = phi ptr [ %15, %13 ], [ %69, %65 ]
  %33 = phi ptr [ %19, %13 ], [ %66, %65 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %65, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi double [ %63, %53 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %33, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = fpext float %43 to double
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = tail call double @llvm.fmuladd.f64(double %44, double %62, double %41)
  %64 = icmp eq ptr %54, %37
  br i1 %64, label %65, label %39

65:                                               ; preds = %53, %29
  %66 = phi ptr [ %33, %29 ], [ %55, %53 ]
  %67 = phi double [ 0.000000e+00, %29 ], [ %63, %53 ]
  %68 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %69 = getelementptr inbounds double, ptr %32, i64 1
  store double %67, ptr %32, align 8, !tbaa !30
  %70 = icmp eq i64 %34, %27
  br i1 %70, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %78, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %77, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds float, ptr %23, i64 %50
  %55 = load float, ptr %54, align 4, !tbaa !95
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = fpext float %55 to double
  %66 = sub i32 %48, %61
  %67 = zext i32 %66 to i64
  %68 = zext i32 %58 to i64
  %69 = getelementptr inbounds %"class.dealii::Vector", ptr %29, i64 %68, i32 3
  %70 = load ptr, ptr %69, align 8, !tbaa !53
  %71 = getelementptr inbounds double, ptr %70, i64 %67
  %72 = load double, ptr %71, align 8, !tbaa !30
  %73 = zext i32 %53 to i64
  %74 = getelementptr inbounds double, ptr %31, i64 %73
  %75 = load double, ptr %74, align 8, !tbaa !30
  %76 = tail call double @llvm.fmuladd.f64(double %65, double %72, double %75)
  store double %76, ptr %74, align 8, !tbaa !30
  %77 = add i32 %51, 1
  %78 = zext i32 %77 to i64
  %79 = icmp ugt i64 %42, %78
  br i1 %79, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %65, %3
  ret void

29:                                               ; preds = %13, %65
  %30 = phi i64 [ 0, %13 ], [ %34, %65 ]
  %31 = phi ptr [ %20, %13 ], [ %68, %65 ]
  %32 = phi ptr [ %15, %13 ], [ %69, %65 ]
  %33 = phi ptr [ %19, %13 ], [ %66, %65 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %65, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi double [ %63, %53 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %33, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = fpext float %43 to double
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = tail call double @llvm.fmuladd.f64(double %44, double %62, double %41)
  %64 = icmp eq ptr %54, %37
  br i1 %64, label %65, label %39

65:                                               ; preds = %53, %29
  %66 = phi ptr [ %33, %29 ], [ %55, %53 ]
  %67 = phi double [ 0.000000e+00, %29 ], [ %63, %53 ]
  %68 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %69 = getelementptr inbounds double, ptr %32, i64 1
  %70 = load double, ptr %32, align 8, !tbaa !30
  %71 = fadd double %67, %70
  store double %71, ptr %32, align 8, !tbaa !30
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %69, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %68, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds float, ptr %14, i64 %41
  %46 = load float, ptr %45, align 4, !tbaa !95
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = fpext float %46 to double
  %57 = sub i32 %39, %52
  %58 = zext i32 %57 to i64
  %59 = zext i32 %49 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !53
  %62 = getelementptr inbounds double, ptr %61, i64 %58
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds double, ptr %22, i64 %64
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = tail call double @llvm.fmuladd.f64(double %56, double %63, double %66)
  store double %67, ptr %65, align 8, !tbaa !30
  %68 = add i32 %42, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %33, %69
  br i1 %70, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !444
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !444
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !444
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %95, %37
  ret void

48:                                               ; preds = %41, %95
  %49 = phi i64 [ 0, %41 ], [ %56, %95 ]
  %50 = phi ptr [ %13, %41 ], [ %78, %95 ]
  %51 = phi ptr [ %16, %41 ], [ %76, %95 ]
  %52 = phi i32 [ %39, %41 ], [ %98, %95 ]
  %53 = phi i32 [ 0, %41 ], [ %97, %95 ]
  %54 = phi i32 [ %38, %41 ], [ %96, %95 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %73, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = fpext float %66 to double
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds double, ptr %43, i64 %70
  %72 = load double, ptr %71, align 8, !tbaa !30
  %73 = tail call double @llvm.fmuladd.f64(double %67, double %72, double %63)
  %74 = icmp eq ptr %65, %59
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %48
  %76 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %77 = phi double [ 0.000000e+00, %48 ], [ %73, %61 ]
  %78 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %79 = icmp eq i32 %52, %55
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = add i32 %53, 1
  br label %95

82:                                               ; preds = %75
  %83 = add i32 %54, 1
  %84 = icmp ult i32 %83, %19
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = add i32 %54, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %21, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !47, !noalias !447
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i32, ptr %21, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !47, !noalias !447
  %93 = add i32 %89, %52
  %94 = sub i32 %93, %92
  br label %95

95:                                               ; preds = %82, %80, %85
  %96 = phi i32 [ %83, %85 ], [ %54, %80 ], [ %83, %82 ]
  %97 = phi i32 [ 0, %85 ], [ %81, %80 ], [ 0, %82 ]
  %98 = phi i32 [ %94, %85 ], [ %52, %80 ], [ -1, %82 ]
  %99 = zext i32 %54 to i64
  %100 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %99, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !53
  %102 = zext i32 %53 to i64
  %103 = getelementptr inbounds double, ptr %101, i64 %102
  store double %77, ptr %103, align 8, !tbaa !30
  %104 = icmp eq i64 %56, %46
  br i1 %104, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds double, ptr %65, i64 %77
  br label %87

87:                                               ; preds = %83, %102
  %88 = phi i64 [ %81, %83 ], [ %113, %102 ]
  %89 = phi i32 [ %84, %83 ], [ %112, %102 ]
  %90 = getelementptr inbounds i32, ptr %85, i64 %88
  %91 = load i32, ptr %90, align 4, !tbaa !47
  %92 = getelementptr inbounds float, ptr %63, i64 %88
  %93 = load float, ptr %92, align 4, !tbaa !95
  %94 = load double, ptr %86, align 8, !tbaa !30
  br label %95

95:                                               ; preds = %95, %87
  %96 = phi i32 [ %5, %87 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %91
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = fpext float %93 to double
  %104 = sub i32 %91, %100
  %105 = zext i32 %104 to i64
  %106 = zext i32 %97 to i64
  %107 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %106, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !53
  %109 = getelementptr inbounds double, ptr %108, i64 %105
  %110 = load double, ptr %109, align 8, !tbaa !30
  %111 = tail call double @llvm.fmuladd.f64(double %103, double %94, double %110)
  store double %111, ptr %109, align 8, !tbaa !30
  %112 = add i32 %89, 1
  %113 = zext i32 %112 to i64
  %114 = icmp ugt i64 %80, %113
  br i1 %114, label %87, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !450
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !450
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !450
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %95, %37
  ret void

48:                                               ; preds = %41, %95
  %49 = phi i64 [ 0, %41 ], [ %56, %95 ]
  %50 = phi ptr [ %13, %41 ], [ %78, %95 ]
  %51 = phi ptr [ %16, %41 ], [ %76, %95 ]
  %52 = phi i32 [ %39, %41 ], [ %98, %95 ]
  %53 = phi i32 [ 0, %41 ], [ %97, %95 ]
  %54 = phi i32 [ %38, %41 ], [ %96, %95 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %73, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = fpext float %66 to double
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds double, ptr %43, i64 %70
  %72 = load double, ptr %71, align 8, !tbaa !30
  %73 = tail call double @llvm.fmuladd.f64(double %67, double %72, double %63)
  %74 = icmp eq ptr %65, %59
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %48
  %76 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %77 = phi double [ 0.000000e+00, %48 ], [ %73, %61 ]
  %78 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %79 = icmp eq i32 %52, %55
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = add i32 %53, 1
  br label %95

82:                                               ; preds = %75
  %83 = add i32 %54, 1
  %84 = icmp ult i32 %83, %19
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = add i32 %54, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %21, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !47, !noalias !453
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i32, ptr %21, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !47, !noalias !453
  %93 = add i32 %89, %52
  %94 = sub i32 %93, %92
  br label %95

95:                                               ; preds = %82, %80, %85
  %96 = phi i32 [ %83, %85 ], [ %54, %80 ], [ %83, %82 ]
  %97 = phi i32 [ 0, %85 ], [ %81, %80 ], [ 0, %82 ]
  %98 = phi i32 [ %94, %85 ], [ %52, %80 ], [ -1, %82 ]
  %99 = zext i32 %54 to i64
  %100 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %99, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !53
  %102 = zext i32 %53 to i64
  %103 = getelementptr inbounds double, ptr %101, i64 %102
  %104 = load double, ptr %103, align 8, !tbaa !30
  %105 = fadd double %77, %104
  store double %105, ptr %103, align 8, !tbaa !30
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds double, ptr %16, i64 %30
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %66, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %65, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds float, ptr %14, i64 %41
  %46 = load float, ptr %45, align 4, !tbaa !95
  %47 = load double, ptr %39, align 8, !tbaa !30
  br label %48

48:                                               ; preds = %48, %40
  %49 = phi i32 [ %18, %40 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %44
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = fpext float %46 to double
  %57 = sub i32 %44, %53
  %58 = zext i32 %57 to i64
  %59 = zext i32 %50 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !53
  %62 = getelementptr inbounds double, ptr %61, i64 %58
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = tail call double @llvm.fmuladd.f64(double %56, double %47, double %63)
  store double %64, ptr %62, align 8, !tbaa !30
  %65 = add i32 %42, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %33, %66
  br i1 %67, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !456
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !456
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !456
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %111, %37
  ret void

52:                                               ; preds = %41, %111
  %53 = phi i64 [ 0, %41 ], [ %60, %111 ]
  %54 = phi ptr [ %13, %41 ], [ %94, %111 ]
  %55 = phi ptr [ %16, %41 ], [ %92, %111 ]
  %56 = phi i32 [ %39, %41 ], [ %114, %111 ]
  %57 = phi i32 [ 0, %41 ], [ %113, %111 ]
  %58 = phi i32 [ %38, %41 ], [ %112, %111 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %91, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi double [ %89, %79 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = fpext float %69 to double
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !53
  %87 = getelementptr inbounds double, ptr %86, i64 %83
  %88 = load double, ptr %87, align 8, !tbaa !30
  %89 = tail call double @llvm.fmuladd.f64(double %70, double %88, double %67)
  %90 = icmp eq ptr %80, %63
  br i1 %90, label %91, label %65

91:                                               ; preds = %79, %52
  %92 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %93 = phi double [ 0.000000e+00, %52 ], [ %89, %79 ]
  %94 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %95 = icmp eq i32 %56, %59
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = add i32 %57, 1
  br label %111

98:                                               ; preds = %91
  %99 = add i32 %58, 1
  %100 = icmp ult i32 %99, %19
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = add i32 %58, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %21, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !47, !noalias !459
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds i32, ptr %21, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !47, !noalias !459
  %109 = add i32 %105, %56
  %110 = sub i32 %109, %108
  br label %111

111:                                              ; preds = %98, %96, %101
  %112 = phi i32 [ %99, %101 ], [ %58, %96 ], [ %99, %98 ]
  %113 = phi i32 [ 0, %101 ], [ %97, %96 ], [ 0, %98 ]
  %114 = phi i32 [ %110, %101 ], [ %56, %96 ], [ -1, %98 ]
  %115 = zext i32 %58 to i64
  %116 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %115, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !53
  %118 = zext i32 %57 to i64
  %119 = getelementptr inbounds double, ptr %117, i64 %118
  store double %93, ptr %119, align 8, !tbaa !30
  %120 = icmp eq i64 %60, %50
  br i1 %120, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %132, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %131, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds float, ptr %63, i64 %92
  %97 = load float, ptr %96, align 4, !tbaa !95
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !53
  %112 = getelementptr inbounds double, ptr %111, i64 %108
  %113 = load double, ptr %112, align 8, !tbaa !30
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = fpext float %97 to double
  %123 = sub i32 %95, %119
  %124 = zext i32 %123 to i64
  %125 = zext i32 %116 to i64
  %126 = getelementptr inbounds %"class.dealii::Vector", ptr %73, i64 %125, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !53
  %128 = getelementptr inbounds double, ptr %127, i64 %124
  %129 = load double, ptr %128, align 8, !tbaa !30
  %130 = tail call double @llvm.fmuladd.f64(double %122, double %113, double %129)
  store double %130, ptr %128, align 8, !tbaa !30
  %131 = add i32 %93, 1
  %132 = zext i32 %131 to i64
  %133 = icmp ugt i64 %84, %132
  br i1 %133, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !462
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !462
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !462
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %111, %37
  ret void

52:                                               ; preds = %41, %111
  %53 = phi i64 [ 0, %41 ], [ %60, %111 ]
  %54 = phi ptr [ %13, %41 ], [ %94, %111 ]
  %55 = phi ptr [ %16, %41 ], [ %92, %111 ]
  %56 = phi i32 [ %39, %41 ], [ %114, %111 ]
  %57 = phi i32 [ 0, %41 ], [ %113, %111 ]
  %58 = phi i32 [ %38, %41 ], [ %112, %111 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %91, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi double [ %89, %79 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = fpext float %69 to double
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !53
  %87 = getelementptr inbounds double, ptr %86, i64 %83
  %88 = load double, ptr %87, align 8, !tbaa !30
  %89 = tail call double @llvm.fmuladd.f64(double %70, double %88, double %67)
  %90 = icmp eq ptr %80, %63
  br i1 %90, label %91, label %65

91:                                               ; preds = %79, %52
  %92 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %93 = phi double [ 0.000000e+00, %52 ], [ %89, %79 ]
  %94 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %95 = icmp eq i32 %56, %59
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = add i32 %57, 1
  br label %111

98:                                               ; preds = %91
  %99 = add i32 %58, 1
  %100 = icmp ult i32 %99, %19
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = add i32 %58, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %21, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !47, !noalias !465
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds i32, ptr %21, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !47, !noalias !465
  %109 = add i32 %105, %56
  %110 = sub i32 %109, %108
  br label %111

111:                                              ; preds = %98, %96, %101
  %112 = phi i32 [ %99, %101 ], [ %58, %96 ], [ %99, %98 ]
  %113 = phi i32 [ 0, %101 ], [ %97, %96 ], [ 0, %98 ]
  %114 = phi i32 [ %110, %101 ], [ %56, %96 ], [ -1, %98 ]
  %115 = zext i32 %58 to i64
  %116 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %115, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !53
  %118 = zext i32 %57 to i64
  %119 = getelementptr inbounds double, ptr %117, i64 %118
  %120 = load double, ptr %119, align 8, !tbaa !30
  %121 = fadd double %93, %120
  store double %121, ptr %119, align 8, !tbaa !30
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %85, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %84, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds float, ptr %14, i64 %45
  %50 = load float, ptr %49, align 4, !tbaa !95
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !53
  %65 = getelementptr inbounds double, ptr %64, i64 %61
  %66 = load double, ptr %65, align 8, !tbaa !30
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext float %50 to double
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !53
  %81 = getelementptr inbounds double, ptr %80, i64 %77
  %82 = load double, ptr %81, align 8, !tbaa !30
  %83 = tail call double @llvm.fmuladd.f64(double %75, double %66, double %82)
  store double %83, ptr %81, align 8, !tbaa !30
  %84 = add i32 %46, 1
  %85 = zext i32 %84 to i64
  %86 = icmp ugt i64 %37, %85
  br i1 %86, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %50, %3
  ret void

25:                                               ; preds = %13, %50
  %26 = phi i64 [ 0, %13 ], [ %30, %50 ]
  %27 = phi ptr [ %20, %13 ], [ %53, %50 ]
  %28 = phi ptr [ %15, %13 ], [ %54, %50 ]
  %29 = phi ptr [ %19, %13 ], [ %51, %50 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %48, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fmul float %40, %45
  %47 = fpext float %46 to double
  %48 = fadd double %37, %47
  %49 = icmp eq ptr %39, %33
  br i1 %49, label %50, label %35

50:                                               ; preds = %35, %25
  %51 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %52 = phi double [ 0.000000e+00, %25 ], [ %48, %35 ]
  %53 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %54 = getelementptr inbounds double, ptr %28, i64 1
  store double %52, ptr %28, align 8, !tbaa !30
  %55 = icmp eq i64 %30, %23
  br i1 %55, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %46, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds float, ptr %25, i64 %35
  %45 = load float, ptr %44, align 4, !tbaa !95
  br label %46

46:                                               ; preds = %41, %46
  %47 = phi i64 [ %39, %41 ], [ %60, %46 ]
  %48 = phi i32 [ %42, %41 ], [ %59, %46 ]
  %49 = getelementptr inbounds i32, ptr %43, i64 %47
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = getelementptr inbounds float, ptr %23, i64 %47
  %52 = load float, ptr %51, align 4, !tbaa !95
  %53 = fmul float %52, %45
  %54 = fpext float %53 to double
  %55 = zext i32 %50 to i64
  %56 = getelementptr inbounds double, ptr %27, i64 %55
  %57 = load double, ptr %56, align 8, !tbaa !30
  %58 = fadd double %57, %54
  store double %58, ptr %56, align 8, !tbaa !30
  %59 = add i32 %48, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %38, %60
  br i1 %61, label %46, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %50, %3
  ret void

25:                                               ; preds = %13, %50
  %26 = phi i64 [ 0, %13 ], [ %30, %50 ]
  %27 = phi ptr [ %20, %13 ], [ %53, %50 ]
  %28 = phi ptr [ %15, %13 ], [ %54, %50 ]
  %29 = phi ptr [ %19, %13 ], [ %51, %50 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %48, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fmul float %40, %45
  %47 = fpext float %46 to double
  %48 = fadd double %37, %47
  %49 = icmp eq ptr %39, %33
  br i1 %49, label %50, label %35

50:                                               ; preds = %35, %25
  %51 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %52 = phi double [ 0.000000e+00, %25 ], [ %48, %35 ]
  %53 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %54 = getelementptr inbounds double, ptr %28, i64 1
  %55 = load double, ptr %28, align 8, !tbaa !30
  %56 = fadd double %52, %55
  store double %56, ptr %28, align 8, !tbaa !30
  %57 = icmp eq i64 %30, %23
  br i1 %57, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %37, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds float, ptr %16, i64 %26
  %36 = load float, ptr %35, align 4, !tbaa !95
  br label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %30, %32 ], [ %51, %37 ]
  %39 = phi i32 [ %33, %32 ], [ %50, %37 ]
  %40 = getelementptr inbounds i32, ptr %34, i64 %38
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds float, ptr %14, i64 %38
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fmul float %43, %36
  %45 = fpext float %44 to double
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds double, ptr %18, i64 %46
  %48 = load double, ptr %47, align 8, !tbaa !30
  %49 = fadd double %48, %45
  store double %49, ptr %47, align 8, !tbaa !30
  %50 = add i32 %39, 1
  %51 = zext i32 %50 to i64
  %52 = icmp ugt i64 %29, %51
  br i1 %52, label %37, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %66, %3
  ret void

29:                                               ; preds = %13, %66
  %30 = phi i64 [ 0, %13 ], [ %34, %66 ]
  %31 = phi ptr [ %20, %13 ], [ %69, %66 ]
  %32 = phi ptr [ %15, %13 ], [ %70, %66 ]
  %33 = phi ptr [ %19, %13 ], [ %67, %66 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi double [ %64, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds float, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fmul float %43, %61
  %63 = fpext float %62 to double
  %64 = fadd double %41, %63
  %65 = icmp eq ptr %53, %37
  br i1 %65, label %66, label %39

66:                                               ; preds = %52, %29
  %67 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %68 = phi double [ 0.000000e+00, %29 ], [ %64, %52 ]
  %69 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %70 = getelementptr inbounds double, ptr %32, i64 1
  store double %68, ptr %32, align 8, !tbaa !30
  %71 = icmp eq i64 %34, %27
  br i1 %71, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %79, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %78, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds float, ptr %23, i64 %50
  %55 = load float, ptr %54, align 4, !tbaa !95
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = sub i32 %48, %61
  %66 = zext i32 %65 to i64
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"class.dealii::Vector.20", ptr %29, i64 %67, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !106
  %70 = getelementptr inbounds float, ptr %69, i64 %66
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fmul float %55, %71
  %73 = fpext float %72 to double
  %74 = zext i32 %53 to i64
  %75 = getelementptr inbounds double, ptr %31, i64 %74
  %76 = load double, ptr %75, align 8, !tbaa !30
  %77 = fadd double %76, %73
  store double %77, ptr %75, align 8, !tbaa !30
  %78 = add i32 %51, 1
  %79 = zext i32 %78 to i64
  %80 = icmp ugt i64 %42, %79
  br i1 %80, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %66, %3
  ret void

29:                                               ; preds = %13, %66
  %30 = phi i64 [ 0, %13 ], [ %34, %66 ]
  %31 = phi ptr [ %20, %13 ], [ %69, %66 ]
  %32 = phi ptr [ %15, %13 ], [ %70, %66 ]
  %33 = phi ptr [ %19, %13 ], [ %67, %66 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi double [ %64, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds float, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fmul float %43, %61
  %63 = fpext float %62 to double
  %64 = fadd double %41, %63
  %65 = icmp eq ptr %53, %37
  br i1 %65, label %66, label %39

66:                                               ; preds = %52, %29
  %67 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %68 = phi double [ 0.000000e+00, %29 ], [ %64, %52 ]
  %69 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %70 = getelementptr inbounds double, ptr %32, i64 1
  %71 = load double, ptr %32, align 8, !tbaa !30
  %72 = fadd double %68, %71
  store double %72, ptr %32, align 8, !tbaa !30
  %73 = icmp eq i64 %34, %27
  br i1 %73, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %70, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %69, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds float, ptr %14, i64 %41
  %46 = load float, ptr %45, align 4, !tbaa !95
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = getelementptr inbounds float, ptr %60, i64 %57
  %62 = load float, ptr %61, align 4, !tbaa !95
  %63 = fmul float %46, %62
  %64 = fpext float %63 to double
  %65 = zext i32 %44 to i64
  %66 = getelementptr inbounds double, ptr %22, i64 %65
  %67 = load double, ptr %66, align 8, !tbaa !30
  %68 = fadd double %67, %64
  store double %68, ptr %66, align 8, !tbaa !30
  %69 = add i32 %42, 1
  %70 = zext i32 %69 to i64
  %71 = icmp ugt i64 %33, %70
  br i1 %71, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !468
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !468
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !468
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %96, %37
  ret void

48:                                               ; preds = %41, %96
  %49 = phi i64 [ 0, %41 ], [ %56, %96 ]
  %50 = phi ptr [ %13, %41 ], [ %79, %96 ]
  %51 = phi ptr [ %16, %41 ], [ %77, %96 ]
  %52 = phi i32 [ %39, %41 ], [ %99, %96 ]
  %53 = phi i32 [ 0, %41 ], [ %98, %96 ]
  %54 = phi i32 [ %38, %41 ], [ %97, %96 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %74, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fmul float %66, %71
  %73 = fpext float %72 to double
  %74 = fadd double %63, %73
  %75 = icmp eq ptr %65, %59
  br i1 %75, label %76, label %61

76:                                               ; preds = %61, %48
  %77 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %78 = phi double [ 0.000000e+00, %48 ], [ %74, %61 ]
  %79 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %80 = icmp eq i32 %52, %55
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = add i32 %53, 1
  br label %96

83:                                               ; preds = %76
  %84 = add i32 %54, 1
  %85 = icmp ult i32 %84, %19
  br i1 %85, label %86, label %96

86:                                               ; preds = %83
  %87 = add i32 %54, 2
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, ptr %21, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !47, !noalias !471
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, ptr %21, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47, !noalias !471
  %94 = add i32 %90, %52
  %95 = sub i32 %94, %93
  br label %96

96:                                               ; preds = %83, %81, %86
  %97 = phi i32 [ %84, %86 ], [ %54, %81 ], [ %84, %83 ]
  %98 = phi i32 [ 0, %86 ], [ %82, %81 ], [ 0, %83 ]
  %99 = phi i32 [ %95, %86 ], [ %52, %81 ], [ -1, %83 ]
  %100 = zext i32 %54 to i64
  %101 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %100, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !53
  %103 = zext i32 %53 to i64
  %104 = getelementptr inbounds double, ptr %102, i64 %103
  store double %78, ptr %104, align 8, !tbaa !30
  %105 = icmp eq i64 %56, %46
  br i1 %105, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %103, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds float, ptr %65, i64 %77
  %87 = load float, ptr %86, align 4, !tbaa !95
  br label %88

88:                                               ; preds = %83, %103
  %89 = phi i64 [ %81, %83 ], [ %114, %103 ]
  %90 = phi i32 [ %84, %83 ], [ %113, %103 ]
  %91 = getelementptr inbounds i32, ptr %85, i64 %89
  %92 = load i32, ptr %91, align 4, !tbaa !47
  %93 = getelementptr inbounds float, ptr %63, i64 %89
  %94 = load float, ptr %93, align 4, !tbaa !95
  %95 = fmul float %94, %87
  br label %96

96:                                               ; preds = %96, %88
  %97 = phi i32 [ %5, %88 ], [ %98, %96 ]
  %98 = add i32 %97, -1
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i32, ptr %67, i64 %99
  %101 = load i32, ptr %100, align 4, !tbaa !47
  %102 = icmp ugt i32 %101, %92
  br i1 %102, label %96, label %103

103:                                              ; preds = %96
  %104 = fpext float %95 to double
  %105 = sub i32 %92, %101
  %106 = zext i32 %105 to i64
  %107 = zext i32 %98 to i64
  %108 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %107, i32 3
  %109 = load ptr, ptr %108, align 8, !tbaa !53
  %110 = getelementptr inbounds double, ptr %109, i64 %106
  %111 = load double, ptr %110, align 8, !tbaa !30
  %112 = fadd double %111, %104
  store double %112, ptr %110, align 8, !tbaa !30
  %113 = add i32 %90, 1
  %114 = zext i32 %113 to i64
  %115 = icmp ugt i64 %80, %114
  br i1 %115, label %88, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !474
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !474
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !474
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %96, %37
  ret void

48:                                               ; preds = %41, %96
  %49 = phi i64 [ 0, %41 ], [ %56, %96 ]
  %50 = phi ptr [ %13, %41 ], [ %79, %96 ]
  %51 = phi ptr [ %16, %41 ], [ %77, %96 ]
  %52 = phi i32 [ %39, %41 ], [ %99, %96 ]
  %53 = phi i32 [ 0, %41 ], [ %98, %96 ]
  %54 = phi i32 [ %38, %41 ], [ %97, %96 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %74, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fmul float %66, %71
  %73 = fpext float %72 to double
  %74 = fadd double %63, %73
  %75 = icmp eq ptr %65, %59
  br i1 %75, label %76, label %61

76:                                               ; preds = %61, %48
  %77 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %78 = phi double [ 0.000000e+00, %48 ], [ %74, %61 ]
  %79 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %80 = icmp eq i32 %52, %55
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = add i32 %53, 1
  br label %96

83:                                               ; preds = %76
  %84 = add i32 %54, 1
  %85 = icmp ult i32 %84, %19
  br i1 %85, label %86, label %96

86:                                               ; preds = %83
  %87 = add i32 %54, 2
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, ptr %21, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !47, !noalias !477
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, ptr %21, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47, !noalias !477
  %94 = add i32 %90, %52
  %95 = sub i32 %94, %93
  br label %96

96:                                               ; preds = %83, %81, %86
  %97 = phi i32 [ %84, %86 ], [ %54, %81 ], [ %84, %83 ]
  %98 = phi i32 [ 0, %86 ], [ %82, %81 ], [ 0, %83 ]
  %99 = phi i32 [ %95, %86 ], [ %52, %81 ], [ -1, %83 ]
  %100 = zext i32 %54 to i64
  %101 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %100, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !53
  %103 = zext i32 %53 to i64
  %104 = getelementptr inbounds double, ptr %102, i64 %103
  %105 = load double, ptr %104, align 8, !tbaa !30
  %106 = fadd double %78, %105
  store double %106, ptr %104, align 8, !tbaa !30
  %107 = icmp eq i64 %56, %46
  br i1 %107, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %56, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds float, ptr %16, i64 %30
  %40 = load float, ptr %39, align 4, !tbaa !95
  br label %41

41:                                               ; preds = %36, %56
  %42 = phi i64 [ %34, %36 ], [ %67, %56 ]
  %43 = phi i32 [ %37, %36 ], [ %66, %56 ]
  %44 = getelementptr inbounds i32, ptr %38, i64 %42
  %45 = load i32, ptr %44, align 4, !tbaa !47
  %46 = getelementptr inbounds float, ptr %14, i64 %42
  %47 = load float, ptr %46, align 4, !tbaa !95
  %48 = fmul float %47, %40
  br label %49

49:                                               ; preds = %49, %41
  %50 = phi i32 [ %18, %41 ], [ %51, %49 ]
  %51 = add i32 %50, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, ptr %20, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = icmp ugt i32 %54, %45
  br i1 %55, label %49, label %56

56:                                               ; preds = %49
  %57 = fpext float %48 to double
  %58 = sub i32 %45, %54
  %59 = zext i32 %58 to i64
  %60 = zext i32 %51 to i64
  %61 = getelementptr inbounds %"class.dealii::Vector", ptr %22, i64 %60, i32 3
  %62 = load ptr, ptr %61, align 8, !tbaa !53
  %63 = getelementptr inbounds double, ptr %62, i64 %59
  %64 = load double, ptr %63, align 8, !tbaa !30
  %65 = fadd double %64, %57
  store double %65, ptr %63, align 8, !tbaa !30
  %66 = add i32 %43, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %33, %67
  br i1 %68, label %41, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !480
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !480
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !480
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %112, %37
  ret void

52:                                               ; preds = %41, %112
  %53 = phi i64 [ 0, %41 ], [ %60, %112 ]
  %54 = phi ptr [ %13, %41 ], [ %95, %112 ]
  %55 = phi ptr [ %16, %41 ], [ %93, %112 ]
  %56 = phi i32 [ %39, %41 ], [ %115, %112 ]
  %57 = phi i32 [ 0, %41 ], [ %114, %112 ]
  %58 = phi i32 [ %38, %41 ], [ %113, %112 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi double [ %90, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds float, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fmul float %69, %87
  %89 = fpext float %88 to double
  %90 = fadd double %67, %89
  %91 = icmp eq ptr %79, %63
  br i1 %91, label %92, label %65

92:                                               ; preds = %78, %52
  %93 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %94 = phi double [ 0.000000e+00, %52 ], [ %90, %78 ]
  %95 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %96 = icmp eq i32 %56, %59
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = add i32 %57, 1
  br label %112

99:                                               ; preds = %92
  %100 = add i32 %58, 1
  %101 = icmp ult i32 %100, %19
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = add i32 %58, 2
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %21, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !47, !noalias !483
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %21, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !47, !noalias !483
  %110 = add i32 %106, %56
  %111 = sub i32 %110, %109
  br label %112

112:                                              ; preds = %99, %97, %102
  %113 = phi i32 [ %100, %102 ], [ %58, %97 ], [ %100, %99 ]
  %114 = phi i32 [ 0, %102 ], [ %98, %97 ], [ 0, %99 ]
  %115 = phi i32 [ %111, %102 ], [ %56, %97 ], [ -1, %99 ]
  %116 = zext i32 %58 to i64
  %117 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %116, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !53
  %119 = zext i32 %57 to i64
  %120 = getelementptr inbounds double, ptr %118, i64 %119
  store double %94, ptr %120, align 8, !tbaa !30
  %121 = icmp eq i64 %60, %50
  br i1 %121, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %122, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %122
  %92 = phi i64 [ %85, %87 ], [ %133, %122 ]
  %93 = phi i32 [ %88, %87 ], [ %132, %122 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds float, ptr %63, i64 %92
  %97 = load float, ptr %96, align 4, !tbaa !95
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !106
  %112 = getelementptr inbounds float, ptr %111, i64 %108
  %113 = load float, ptr %112, align 4, !tbaa !95
  %114 = fmul float %97, %113
  br label %115

115:                                              ; preds = %115, %106
  %116 = phi i32 [ %5, %106 ], [ %117, %115 ]
  %117 = add i32 %116, -1
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i32, ptr %71, i64 %118
  %120 = load i32, ptr %119, align 4, !tbaa !47
  %121 = icmp ugt i32 %120, %95
  br i1 %121, label %115, label %122

122:                                              ; preds = %115
  %123 = fpext float %114 to double
  %124 = sub i32 %95, %120
  %125 = zext i32 %124 to i64
  %126 = zext i32 %117 to i64
  %127 = getelementptr inbounds %"class.dealii::Vector", ptr %73, i64 %126, i32 3
  %128 = load ptr, ptr %127, align 8, !tbaa !53
  %129 = getelementptr inbounds double, ptr %128, i64 %125
  %130 = load double, ptr %129, align 8, !tbaa !30
  %131 = fadd double %130, %123
  store double %131, ptr %129, align 8, !tbaa !30
  %132 = add i32 %93, 1
  %133 = zext i32 %132 to i64
  %134 = icmp ugt i64 %84, %133
  br i1 %134, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !486
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !486
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !486
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %112, %37
  ret void

52:                                               ; preds = %41, %112
  %53 = phi i64 [ 0, %41 ], [ %60, %112 ]
  %54 = phi ptr [ %13, %41 ], [ %95, %112 ]
  %55 = phi ptr [ %16, %41 ], [ %93, %112 ]
  %56 = phi i32 [ %39, %41 ], [ %115, %112 ]
  %57 = phi i32 [ 0, %41 ], [ %114, %112 ]
  %58 = phi i32 [ %38, %41 ], [ %113, %112 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi double [ %90, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds float, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fmul float %69, %87
  %89 = fpext float %88 to double
  %90 = fadd double %67, %89
  %91 = icmp eq ptr %79, %63
  br i1 %91, label %92, label %65

92:                                               ; preds = %78, %52
  %93 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %94 = phi double [ 0.000000e+00, %52 ], [ %90, %78 ]
  %95 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %96 = icmp eq i32 %56, %59
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = add i32 %57, 1
  br label %112

99:                                               ; preds = %92
  %100 = add i32 %58, 1
  %101 = icmp ult i32 %100, %19
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = add i32 %58, 2
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %21, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !47, !noalias !489
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %21, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !47, !noalias !489
  %110 = add i32 %106, %56
  %111 = sub i32 %110, %109
  br label %112

112:                                              ; preds = %99, %97, %102
  %113 = phi i32 [ %100, %102 ], [ %58, %97 ], [ %100, %99 ]
  %114 = phi i32 [ 0, %102 ], [ %98, %97 ], [ 0, %99 ]
  %115 = phi i32 [ %111, %102 ], [ %56, %97 ], [ -1, %99 ]
  %116 = zext i32 %58 to i64
  %117 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %116, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !53
  %119 = zext i32 %57 to i64
  %120 = getelementptr inbounds double, ptr %118, i64 %119
  %121 = load double, ptr %120, align 8, !tbaa !30
  %122 = fadd double %94, %121
  store double %122, ptr %120, align 8, !tbaa !30
  %123 = icmp eq i64 %60, %50
  br i1 %123, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %75, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %75
  %45 = phi i64 [ %38, %40 ], [ %86, %75 ]
  %46 = phi i32 [ %41, %40 ], [ %85, %75 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds float, ptr %14, i64 %45
  %50 = load float, ptr %49, align 4, !tbaa !95
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !106
  %65 = getelementptr inbounds float, ptr %64, i64 %61
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fmul float %50, %66
  br label %68

68:                                               ; preds = %68, %59
  %69 = phi i32 [ %22, %59 ], [ %70, %68 ]
  %70 = add i32 %69, -1
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i32, ptr %24, i64 %71
  %73 = load i32, ptr %72, align 4, !tbaa !47
  %74 = icmp ugt i32 %73, %48
  br i1 %74, label %68, label %75

75:                                               ; preds = %68
  %76 = fpext float %67 to double
  %77 = sub i32 %48, %73
  %78 = zext i32 %77 to i64
  %79 = zext i32 %70 to i64
  %80 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %79, i32 3
  %81 = load ptr, ptr %80, align 8, !tbaa !53
  %82 = getelementptr inbounds double, ptr %81, i64 %78
  %83 = load double, ptr %82, align 8, !tbaa !30
  %84 = fadd double %83, %76
  store double %84, ptr %82, align 8, !tbaa !30
  %85 = add i32 %46, 1
  %86 = zext i32 %85 to i64
  %87 = icmp ugt i64 %37, %86
  br i1 %87, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = fpext float %40 to x86_fp80
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %22, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = fpext double %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to double
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %42, %35 ]
  %53 = phi double [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds double, ptr %28, i64 1
  store double %53, ptr %28, align 8, !tbaa !30
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %46, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds x86_fp80, ptr %25, i64 %35
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  br label %46

46:                                               ; preds = %41, %46
  %47 = phi i64 [ %39, %41 ], [ %61, %46 ]
  %48 = phi i32 [ %42, %41 ], [ %60, %46 ]
  %49 = getelementptr inbounds i32, ptr %43, i64 %47
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = getelementptr inbounds float, ptr %23, i64 %47
  %52 = load float, ptr %51, align 4, !tbaa !95
  %53 = fpext float %52 to x86_fp80
  %54 = zext i32 %50 to i64
  %55 = getelementptr inbounds double, ptr %27, i64 %54
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = fpext double %56 to x86_fp80
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %53, x86_fp80 %45, x86_fp80 %57)
  %59 = fptrunc x86_fp80 %58 to double
  store double %59, ptr %55, align 8, !tbaa !30
  %60 = add i32 %48, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %38, %61
  br i1 %62, label %46, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = fpext float %40 to x86_fp80
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %22, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = fpext double %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to double
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %42, %35 ]
  %53 = phi double [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds double, ptr %28, i64 1
  %56 = load double, ptr %28, align 8, !tbaa !30
  %57 = fadd double %53, %56
  store double %57, ptr %28, align 8, !tbaa !30
  %58 = icmp eq i64 %30, %23
  br i1 %58, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %37, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds x86_fp80, ptr %16, i64 %26
  %36 = load x86_fp80, ptr %35, align 16, !tbaa !128
  br label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %30, %32 ], [ %52, %37 ]
  %39 = phi i32 [ %33, %32 ], [ %51, %37 ]
  %40 = getelementptr inbounds i32, ptr %34, i64 %38
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds float, ptr %14, i64 %38
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = zext i32 %41 to i64
  %46 = getelementptr inbounds double, ptr %18, i64 %45
  %47 = load double, ptr %46, align 8, !tbaa !30
  %48 = fpext double %47 to x86_fp80
  %49 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %36, x86_fp80 %48)
  %50 = fptrunc x86_fp80 %49 to double
  store double %50, ptr %46, align 8, !tbaa !30
  %51 = add i32 %39, 1
  %52 = zext i32 %51 to i64
  %53 = icmp ugt i64 %29, %52
  br i1 %53, label %37, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi double [ %65, %53 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %33, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = fpext double %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to double
  %66 = icmp eq ptr %54, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %53, %29
  %68 = phi ptr [ %33, %29 ], [ %55, %53 ]
  %69 = phi double [ 0.000000e+00, %29 ], [ %65, %53 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %71 = getelementptr inbounds double, ptr %32, i64 1
  store double %69, ptr %32, align 8, !tbaa !30
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %80, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %79, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds float, ptr %23, i64 %50
  %55 = load float, ptr %54, align 4, !tbaa !95
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = fpext float %55 to x86_fp80
  %66 = sub i32 %48, %61
  %67 = zext i32 %66 to i64
  %68 = zext i32 %58 to i64
  %69 = getelementptr inbounds %"class.dealii::Vector.27", ptr %29, i64 %68, i32 3
  %70 = load ptr, ptr %69, align 8, !tbaa !135
  %71 = getelementptr inbounds x86_fp80, ptr %70, i64 %67
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = zext i32 %53 to i64
  %74 = getelementptr inbounds double, ptr %31, i64 %73
  %75 = load double, ptr %74, align 8, !tbaa !30
  %76 = fpext double %75 to x86_fp80
  %77 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %65, x86_fp80 %72, x86_fp80 %76)
  %78 = fptrunc x86_fp80 %77 to double
  store double %78, ptr %74, align 8, !tbaa !30
  %79 = add i32 %51, 1
  %80 = zext i32 %79 to i64
  %81 = icmp ugt i64 %42, %80
  br i1 %81, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi double [ %65, %53 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %33, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = fpext double %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to double
  %66 = icmp eq ptr %54, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %53, %29
  %68 = phi ptr [ %33, %29 ], [ %55, %53 ]
  %69 = phi double [ 0.000000e+00, %29 ], [ %65, %53 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %71 = getelementptr inbounds double, ptr %32, i64 1
  %72 = load double, ptr %32, align 8, !tbaa !30
  %73 = fadd double %69, %72
  store double %73, ptr %32, align 8, !tbaa !30
  %74 = icmp eq i64 %34, %27
  br i1 %74, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %71, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %70, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds float, ptr %14, i64 %41
  %46 = load float, ptr %45, align 4, !tbaa !95
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = fpext float %46 to x86_fp80
  %57 = sub i32 %39, %52
  %58 = zext i32 %57 to i64
  %59 = zext i32 %49 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !135
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 %58
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds double, ptr %22, i64 %64
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = fpext double %66 to x86_fp80
  %68 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %63, x86_fp80 %67)
  %69 = fptrunc x86_fp80 %68 to double
  store double %69, ptr %65, align 8, !tbaa !30
  %70 = add i32 %42, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %33, %71
  br i1 %72, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !492
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !492
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !492
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = fpext float %66 to x86_fp80
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds x86_fp80, ptr %43, i64 %70
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = fpext double %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to double
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %79 = phi double [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !495
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !495
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !53
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds double, ptr %103, i64 %104
  store double %79, ptr %105, align 8, !tbaa !30
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds x86_fp80, ptr %65, i64 %77
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  br label %88

88:                                               ; preds = %83, %102
  %89 = phi i64 [ %81, %83 ], [ %115, %102 ]
  %90 = phi i32 [ %84, %83 ], [ %114, %102 ]
  %91 = getelementptr inbounds i32, ptr %85, i64 %89
  %92 = load i32, ptr %91, align 4, !tbaa !47
  %93 = getelementptr inbounds float, ptr %63, i64 %89
  %94 = load float, ptr %93, align 4, !tbaa !95
  br label %95

95:                                               ; preds = %95, %88
  %96 = phi i32 [ %5, %88 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %92
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = fpext float %94 to x86_fp80
  %104 = sub i32 %92, %100
  %105 = zext i32 %104 to i64
  %106 = zext i32 %97 to i64
  %107 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %106, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !53
  %109 = getelementptr inbounds double, ptr %108, i64 %105
  %110 = load double, ptr %109, align 8, !tbaa !30
  %111 = fpext double %110 to x86_fp80
  %112 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %103, x86_fp80 %87, x86_fp80 %111)
  %113 = fptrunc x86_fp80 %112 to double
  store double %113, ptr %109, align 8, !tbaa !30
  %114 = add i32 %90, 1
  %115 = zext i32 %114 to i64
  %116 = icmp ugt i64 %80, %115
  br i1 %116, label %88, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !498
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !498
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !498
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = fpext float %66 to x86_fp80
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds x86_fp80, ptr %43, i64 %70
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = fpext double %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to double
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %79 = phi double [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !501
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !501
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !53
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds double, ptr %103, i64 %104
  %106 = load double, ptr %105, align 8, !tbaa !30
  %107 = fadd double %79, %106
  store double %107, ptr %105, align 8, !tbaa !30
  %108 = icmp eq i64 %56, %46
  br i1 %108, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %30
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !128
  br label %41

41:                                               ; preds = %36, %55
  %42 = phi i64 [ %34, %36 ], [ %68, %55 ]
  %43 = phi i32 [ %37, %36 ], [ %67, %55 ]
  %44 = getelementptr inbounds i32, ptr %38, i64 %42
  %45 = load i32, ptr %44, align 4, !tbaa !47
  %46 = getelementptr inbounds float, ptr %14, i64 %42
  %47 = load float, ptr %46, align 4, !tbaa !95
  br label %48

48:                                               ; preds = %48, %41
  %49 = phi i32 [ %18, %41 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %45
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = fpext float %47 to x86_fp80
  %57 = sub i32 %45, %53
  %58 = zext i32 %57 to i64
  %59 = zext i32 %50 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !53
  %62 = getelementptr inbounds double, ptr %61, i64 %58
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = fpext double %63 to x86_fp80
  %65 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %40, x86_fp80 %64)
  %66 = fptrunc x86_fp80 %65 to double
  store double %66, ptr %62, align 8, !tbaa !30
  %67 = add i32 %43, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %41, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !504
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !504
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !504
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi double [ %91, %79 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = fpext float %69 to x86_fp80
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !135
  %87 = getelementptr inbounds x86_fp80, ptr %86, i64 %83
  %88 = load x86_fp80, ptr %87, align 16, !tbaa !128
  %89 = fpext double %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to double
  %92 = icmp eq ptr %80, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %79, %52
  %94 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %95 = phi double [ 0.000000e+00, %52 ], [ %91, %79 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !507
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !507
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !53
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds double, ptr %119, i64 %120
  store double %95, ptr %121, align 8, !tbaa !30
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %134, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %133, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds float, ptr %63, i64 %92
  %97 = load float, ptr %96, align 4, !tbaa !95
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector.27", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !135
  %112 = getelementptr inbounds x86_fp80, ptr %111, i64 %108
  %113 = load x86_fp80, ptr %112, align 16, !tbaa !128
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = fpext float %97 to x86_fp80
  %123 = sub i32 %95, %119
  %124 = zext i32 %123 to i64
  %125 = zext i32 %116 to i64
  %126 = getelementptr inbounds %"class.dealii::Vector", ptr %73, i64 %125, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !53
  %128 = getelementptr inbounds double, ptr %127, i64 %124
  %129 = load double, ptr %128, align 8, !tbaa !30
  %130 = fpext double %129 to x86_fp80
  %131 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %122, x86_fp80 %113, x86_fp80 %130)
  %132 = fptrunc x86_fp80 %131 to double
  store double %132, ptr %128, align 8, !tbaa !30
  %133 = add i32 %93, 1
  %134 = zext i32 %133 to i64
  %135 = icmp ugt i64 %84, %134
  br i1 %135, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !510
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !510
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !510
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi double [ %91, %79 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = fpext float %69 to x86_fp80
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !135
  %87 = getelementptr inbounds x86_fp80, ptr %86, i64 %83
  %88 = load x86_fp80, ptr %87, align 16, !tbaa !128
  %89 = fpext double %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to double
  %92 = icmp eq ptr %80, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %79, %52
  %94 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %95 = phi double [ 0.000000e+00, %52 ], [ %91, %79 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !513
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !513
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !53
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds double, ptr %119, i64 %120
  %122 = load double, ptr %121, align 8, !tbaa !30
  %123 = fadd double %95, %122
  store double %123, ptr %121, align 8, !tbaa !30
  %124 = icmp eq i64 %60, %50
  br i1 %124, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %87, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %86, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds float, ptr %14, i64 %45
  %50 = load float, ptr %49, align 4, !tbaa !95
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !135
  %65 = getelementptr inbounds x86_fp80, ptr %64, i64 %61
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext float %50 to x86_fp80
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !53
  %81 = getelementptr inbounds double, ptr %80, i64 %77
  %82 = load double, ptr %81, align 8, !tbaa !30
  %83 = fpext double %82 to x86_fp80
  %84 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %75, x86_fp80 %66, x86_fp80 %83)
  %85 = fptrunc x86_fp80 %84 to double
  store double %85, ptr %81, align 8, !tbaa !30
  %86 = add i32 %46, 1
  %87 = zext i32 %86 to i64
  %88 = icmp ugt i64 %37, %87
  br i1 %88, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = fpext float %40 to double
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds double, ptr %22, i64 %44
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = fpext float %37 to double
  %48 = tail call double @llvm.fmuladd.f64(double %41, double %46, double %47)
  %49 = fptrunc double %48 to float
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %42, %35 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds float, ptr %28, i64 1
  store float %53, ptr %28, align 4, !tbaa !95
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %46, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds double, ptr %25, i64 %35
  %45 = load double, ptr %44, align 8, !tbaa !30
  br label %46

46:                                               ; preds = %41, %46
  %47 = phi i64 [ %39, %41 ], [ %61, %46 ]
  %48 = phi i32 [ %42, %41 ], [ %60, %46 ]
  %49 = getelementptr inbounds i32, ptr %43, i64 %47
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = getelementptr inbounds float, ptr %23, i64 %47
  %52 = load float, ptr %51, align 4, !tbaa !95
  %53 = fpext float %52 to double
  %54 = zext i32 %50 to i64
  %55 = getelementptr inbounds float, ptr %27, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fpext float %56 to double
  %58 = tail call double @llvm.fmuladd.f64(double %53, double %45, double %57)
  %59 = fptrunc double %58 to float
  store float %59, ptr %55, align 4, !tbaa !95
  %60 = add i32 %48, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %38, %61
  br i1 %62, label %46, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = fpext float %40 to double
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds double, ptr %22, i64 %44
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = fpext float %37 to double
  %48 = tail call double @llvm.fmuladd.f64(double %41, double %46, double %47)
  %49 = fptrunc double %48 to float
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %42, %35 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds float, ptr %28, i64 1
  %56 = load float, ptr %28, align 4, !tbaa !95
  %57 = fadd float %53, %56
  store float %57, ptr %28, align 4, !tbaa !95
  %58 = icmp eq i64 %30, %23
  br i1 %58, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %37, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds double, ptr %16, i64 %26
  %36 = load double, ptr %35, align 8, !tbaa !30
  br label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %30, %32 ], [ %52, %37 ]
  %39 = phi i32 [ %33, %32 ], [ %51, %37 ]
  %40 = getelementptr inbounds i32, ptr %34, i64 %38
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds float, ptr %14, i64 %38
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fpext float %43 to double
  %45 = zext i32 %41 to i64
  %46 = getelementptr inbounds float, ptr %18, i64 %45
  %47 = load float, ptr %46, align 4, !tbaa !95
  %48 = fpext float %47 to double
  %49 = tail call double @llvm.fmuladd.f64(double %44, double %36, double %48)
  %50 = fptrunc double %49 to float
  store float %50, ptr %46, align 4, !tbaa !95
  %51 = add i32 %39, 1
  %52 = zext i32 %51 to i64
  %53 = icmp ugt i64 %29, %52
  br i1 %53, label %37, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi float [ %65, %53 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %33, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = fpext float %43 to double
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = fpext float %41 to double
  %64 = tail call double @llvm.fmuladd.f64(double %44, double %62, double %63)
  %65 = fptrunc double %64 to float
  %66 = icmp eq ptr %54, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %53, %29
  %68 = phi ptr [ %33, %29 ], [ %55, %53 ]
  %69 = phi float [ 0.000000e+00, %29 ], [ %65, %53 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %71 = getelementptr inbounds float, ptr %32, i64 1
  store float %69, ptr %32, align 4, !tbaa !95
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %80, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %79, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds float, ptr %23, i64 %50
  %55 = load float, ptr %54, align 4, !tbaa !95
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = fpext float %55 to double
  %66 = sub i32 %48, %61
  %67 = zext i32 %66 to i64
  %68 = zext i32 %58 to i64
  %69 = getelementptr inbounds %"class.dealii::Vector", ptr %29, i64 %68, i32 3
  %70 = load ptr, ptr %69, align 8, !tbaa !53
  %71 = getelementptr inbounds double, ptr %70, i64 %67
  %72 = load double, ptr %71, align 8, !tbaa !30
  %73 = zext i32 %53 to i64
  %74 = getelementptr inbounds float, ptr %31, i64 %73
  %75 = load float, ptr %74, align 4, !tbaa !95
  %76 = fpext float %75 to double
  %77 = tail call double @llvm.fmuladd.f64(double %65, double %72, double %76)
  %78 = fptrunc double %77 to float
  store float %78, ptr %74, align 4, !tbaa !95
  %79 = add i32 %51, 1
  %80 = zext i32 %79 to i64
  %81 = icmp ugt i64 %42, %80
  br i1 %81, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi float [ %65, %53 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %33, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = fpext float %43 to double
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = fpext float %41 to double
  %64 = tail call double @llvm.fmuladd.f64(double %44, double %62, double %63)
  %65 = fptrunc double %64 to float
  %66 = icmp eq ptr %54, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %53, %29
  %68 = phi ptr [ %33, %29 ], [ %55, %53 ]
  %69 = phi float [ 0.000000e+00, %29 ], [ %65, %53 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %71 = getelementptr inbounds float, ptr %32, i64 1
  %72 = load float, ptr %32, align 4, !tbaa !95
  %73 = fadd float %69, %72
  store float %73, ptr %32, align 4, !tbaa !95
  %74 = icmp eq i64 %34, %27
  br i1 %74, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %71, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %70, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds float, ptr %14, i64 %41
  %46 = load float, ptr %45, align 4, !tbaa !95
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = fpext float %46 to double
  %57 = sub i32 %39, %52
  %58 = zext i32 %57 to i64
  %59 = zext i32 %49 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !53
  %62 = getelementptr inbounds double, ptr %61, i64 %58
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds float, ptr %22, i64 %64
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fpext float %66 to double
  %68 = tail call double @llvm.fmuladd.f64(double %56, double %63, double %67)
  %69 = fptrunc double %68 to float
  store float %69, ptr %65, align 4, !tbaa !95
  %70 = add i32 %42, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %33, %71
  br i1 %72, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !516
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !516
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !516
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = fpext float %66 to double
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds double, ptr %43, i64 %70
  %72 = load double, ptr %71, align 8, !tbaa !30
  %73 = fpext float %63 to double
  %74 = tail call double @llvm.fmuladd.f64(double %67, double %72, double %73)
  %75 = fptrunc double %74 to float
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %79 = phi float [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !519
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !519
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !106
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds float, ptr %103, i64 %104
  store float %79, ptr %105, align 4, !tbaa !95
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds double, ptr %65, i64 %77
  %87 = load double, ptr %86, align 8, !tbaa !30
  br label %88

88:                                               ; preds = %83, %102
  %89 = phi i64 [ %81, %83 ], [ %115, %102 ]
  %90 = phi i32 [ %84, %83 ], [ %114, %102 ]
  %91 = getelementptr inbounds i32, ptr %85, i64 %89
  %92 = load i32, ptr %91, align 4, !tbaa !47
  %93 = getelementptr inbounds float, ptr %63, i64 %89
  %94 = load float, ptr %93, align 4, !tbaa !95
  br label %95

95:                                               ; preds = %95, %88
  %96 = phi i32 [ %5, %88 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %92
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = fpext float %94 to double
  %104 = sub i32 %92, %100
  %105 = zext i32 %104 to i64
  %106 = zext i32 %97 to i64
  %107 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %106, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !106
  %109 = getelementptr inbounds float, ptr %108, i64 %105
  %110 = load float, ptr %109, align 4, !tbaa !95
  %111 = fpext float %110 to double
  %112 = tail call double @llvm.fmuladd.f64(double %103, double %87, double %111)
  %113 = fptrunc double %112 to float
  store float %113, ptr %109, align 4, !tbaa !95
  %114 = add i32 %90, 1
  %115 = zext i32 %114 to i64
  %116 = icmp ugt i64 %80, %115
  br i1 %116, label %88, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !522
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !522
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !522
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = fpext float %66 to double
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds double, ptr %43, i64 %70
  %72 = load double, ptr %71, align 8, !tbaa !30
  %73 = fpext float %63 to double
  %74 = tail call double @llvm.fmuladd.f64(double %67, double %72, double %73)
  %75 = fptrunc double %74 to float
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %79 = phi float [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !525
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !525
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !106
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds float, ptr %103, i64 %104
  %106 = load float, ptr %105, align 4, !tbaa !95
  %107 = fadd float %79, %106
  store float %107, ptr %105, align 4, !tbaa !95
  %108 = icmp eq i64 %56, %46
  br i1 %108, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds double, ptr %16, i64 %30
  %40 = load double, ptr %39, align 8, !tbaa !30
  br label %41

41:                                               ; preds = %36, %55
  %42 = phi i64 [ %34, %36 ], [ %68, %55 ]
  %43 = phi i32 [ %37, %36 ], [ %67, %55 ]
  %44 = getelementptr inbounds i32, ptr %38, i64 %42
  %45 = load i32, ptr %44, align 4, !tbaa !47
  %46 = getelementptr inbounds float, ptr %14, i64 %42
  %47 = load float, ptr %46, align 4, !tbaa !95
  br label %48

48:                                               ; preds = %48, %41
  %49 = phi i32 [ %18, %41 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %45
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = fpext float %47 to double
  %57 = sub i32 %45, %53
  %58 = zext i32 %57 to i64
  %59 = zext i32 %50 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.20", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !106
  %62 = getelementptr inbounds float, ptr %61, i64 %58
  %63 = load float, ptr %62, align 4, !tbaa !95
  %64 = fpext float %63 to double
  %65 = tail call double @llvm.fmuladd.f64(double %56, double %40, double %64)
  %66 = fptrunc double %65 to float
  store float %66, ptr %62, align 4, !tbaa !95
  %67 = add i32 %43, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %41, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !528
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !528
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !528
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi float [ %91, %79 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = fpext float %69 to double
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !53
  %87 = getelementptr inbounds double, ptr %86, i64 %83
  %88 = load double, ptr %87, align 8, !tbaa !30
  %89 = fpext float %67 to double
  %90 = tail call double @llvm.fmuladd.f64(double %70, double %88, double %89)
  %91 = fptrunc double %90 to float
  %92 = icmp eq ptr %80, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %79, %52
  %94 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %95 = phi float [ 0.000000e+00, %52 ], [ %91, %79 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !531
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !531
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !106
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds float, ptr %119, i64 %120
  store float %95, ptr %121, align 4, !tbaa !95
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %134, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %133, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds float, ptr %63, i64 %92
  %97 = load float, ptr %96, align 4, !tbaa !95
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !53
  %112 = getelementptr inbounds double, ptr %111, i64 %108
  %113 = load double, ptr %112, align 8, !tbaa !30
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = fpext float %97 to double
  %123 = sub i32 %95, %119
  %124 = zext i32 %123 to i64
  %125 = zext i32 %116 to i64
  %126 = getelementptr inbounds %"class.dealii::Vector.20", ptr %73, i64 %125, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !106
  %128 = getelementptr inbounds float, ptr %127, i64 %124
  %129 = load float, ptr %128, align 4, !tbaa !95
  %130 = fpext float %129 to double
  %131 = tail call double @llvm.fmuladd.f64(double %122, double %113, double %130)
  %132 = fptrunc double %131 to float
  store float %132, ptr %128, align 4, !tbaa !95
  %133 = add i32 %93, 1
  %134 = zext i32 %133 to i64
  %135 = icmp ugt i64 %84, %134
  br i1 %135, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !534
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !534
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !534
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi float [ %91, %79 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = fpext float %69 to double
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !53
  %87 = getelementptr inbounds double, ptr %86, i64 %83
  %88 = load double, ptr %87, align 8, !tbaa !30
  %89 = fpext float %67 to double
  %90 = tail call double @llvm.fmuladd.f64(double %70, double %88, double %89)
  %91 = fptrunc double %90 to float
  %92 = icmp eq ptr %80, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %79, %52
  %94 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %95 = phi float [ 0.000000e+00, %52 ], [ %91, %79 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !537
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !537
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !106
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds float, ptr %119, i64 %120
  %122 = load float, ptr %121, align 4, !tbaa !95
  %123 = fadd float %95, %122
  store float %123, ptr %121, align 4, !tbaa !95
  %124 = icmp eq i64 %60, %50
  br i1 %124, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %87, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %86, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds float, ptr %14, i64 %45
  %50 = load float, ptr %49, align 4, !tbaa !95
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !53
  %65 = getelementptr inbounds double, ptr %64, i64 %61
  %66 = load double, ptr %65, align 8, !tbaa !30
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext float %50 to double
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !106
  %81 = getelementptr inbounds float, ptr %80, i64 %77
  %82 = load float, ptr %81, align 4, !tbaa !95
  %83 = fpext float %82 to double
  %84 = tail call double @llvm.fmuladd.f64(double %75, double %66, double %83)
  %85 = fptrunc double %84 to float
  store float %85, ptr %81, align 4, !tbaa !95
  %86 = add i32 %46, 1
  %87 = zext i32 %86 to i64
  %88 = icmp ugt i64 %37, %87
  br i1 %88, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %48, %3
  ret void

25:                                               ; preds = %13, %48
  %26 = phi i64 [ 0, %13 ], [ %30, %48 ]
  %27 = phi ptr [ %20, %13 ], [ %51, %48 ]
  %28 = phi ptr [ %15, %13 ], [ %52, %48 ]
  %29 = phi ptr [ %19, %13 ], [ %49, %48 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %48, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %46, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = tail call float @llvm.fmuladd.f32(float %40, float %45, float %37)
  %47 = icmp eq ptr %39, %33
  br i1 %47, label %48, label %35

48:                                               ; preds = %35, %25
  %49 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %50 = phi float [ 0.000000e+00, %25 ], [ %46, %35 ]
  %51 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %52 = getelementptr inbounds float, ptr %28, i64 1
  store float %50, ptr %28, align 4, !tbaa !95
  %53 = icmp eq i64 %30, %23
  br i1 %53, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %45, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds float, ptr %25, i64 %35
  br label %45

45:                                               ; preds = %41, %45
  %46 = phi i64 [ %39, %41 ], [ %58, %45 ]
  %47 = phi i32 [ %42, %41 ], [ %57, %45 ]
  %48 = getelementptr inbounds i32, ptr %43, i64 %46
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = getelementptr inbounds float, ptr %23, i64 %46
  %51 = load float, ptr %50, align 4, !tbaa !95
  %52 = load float, ptr %44, align 4, !tbaa !95
  %53 = zext i32 %49 to i64
  %54 = getelementptr inbounds float, ptr %27, i64 %53
  %55 = load float, ptr %54, align 4, !tbaa !95
  %56 = tail call float @llvm.fmuladd.f32(float %51, float %52, float %55)
  store float %56, ptr %54, align 4, !tbaa !95
  %57 = add i32 %47, 1
  %58 = zext i32 %57 to i64
  %59 = icmp ugt i64 %38, %58
  br i1 %59, label %45, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %48, %3
  ret void

25:                                               ; preds = %13, %48
  %26 = phi i64 [ 0, %13 ], [ %30, %48 ]
  %27 = phi ptr [ %20, %13 ], [ %51, %48 ]
  %28 = phi ptr [ %15, %13 ], [ %52, %48 ]
  %29 = phi ptr [ %19, %13 ], [ %49, %48 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %48, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %46, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = tail call float @llvm.fmuladd.f32(float %40, float %45, float %37)
  %47 = icmp eq ptr %39, %33
  br i1 %47, label %48, label %35

48:                                               ; preds = %35, %25
  %49 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %50 = phi float [ 0.000000e+00, %25 ], [ %46, %35 ]
  %51 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %52 = getelementptr inbounds float, ptr %28, i64 1
  %53 = load float, ptr %28, align 4, !tbaa !95
  %54 = fadd float %50, %53
  store float %54, ptr %28, align 4, !tbaa !95
  %55 = icmp eq i64 %30, %23
  br i1 %55, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %36, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds float, ptr %16, i64 %26
  br label %36

36:                                               ; preds = %32, %36
  %37 = phi i64 [ %30, %32 ], [ %49, %36 ]
  %38 = phi i32 [ %33, %32 ], [ %48, %36 ]
  %39 = getelementptr inbounds i32, ptr %34, i64 %37
  %40 = load i32, ptr %39, align 4, !tbaa !47
  %41 = getelementptr inbounds float, ptr %14, i64 %37
  %42 = load float, ptr %41, align 4, !tbaa !95
  %43 = load float, ptr %35, align 4, !tbaa !95
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds float, ptr %18, i64 %44
  %46 = load float, ptr %45, align 4, !tbaa !95
  %47 = tail call float @llvm.fmuladd.f32(float %42, float %43, float %46)
  store float %47, ptr %45, align 4, !tbaa !95
  %48 = add i32 %38, 1
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %29, %49
  br i1 %50, label %36, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %64, %3
  ret void

29:                                               ; preds = %13, %64
  %30 = phi i64 [ 0, %13 ], [ %34, %64 ]
  %31 = phi ptr [ %20, %13 ], [ %67, %64 ]
  %32 = phi ptr [ %15, %13 ], [ %68, %64 ]
  %33 = phi ptr [ %19, %13 ], [ %65, %64 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %64, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi float [ %62, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds float, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = tail call float @llvm.fmuladd.f32(float %43, float %61, float %41)
  %63 = icmp eq ptr %53, %37
  br i1 %63, label %64, label %39

64:                                               ; preds = %52, %29
  %65 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %66 = phi float [ 0.000000e+00, %29 ], [ %62, %52 ]
  %67 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %68 = getelementptr inbounds float, ptr %32, i64 1
  store float %66, ptr %32, align 4, !tbaa !95
  %69 = icmp eq i64 %34, %27
  br i1 %69, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %77, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %76, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds float, ptr %23, i64 %50
  %55 = load float, ptr %54, align 4, !tbaa !95
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = sub i32 %48, %61
  %66 = zext i32 %65 to i64
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"class.dealii::Vector.20", ptr %29, i64 %67, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !106
  %70 = getelementptr inbounds float, ptr %69, i64 %66
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = zext i32 %53 to i64
  %73 = getelementptr inbounds float, ptr %31, i64 %72
  %74 = load float, ptr %73, align 4, !tbaa !95
  %75 = tail call float @llvm.fmuladd.f32(float %55, float %71, float %74)
  store float %75, ptr %73, align 4, !tbaa !95
  %76 = add i32 %51, 1
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %42, %77
  br i1 %78, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %64, %3
  ret void

29:                                               ; preds = %13, %64
  %30 = phi i64 [ 0, %13 ], [ %34, %64 ]
  %31 = phi ptr [ %20, %13 ], [ %67, %64 ]
  %32 = phi ptr [ %15, %13 ], [ %68, %64 ]
  %33 = phi ptr [ %19, %13 ], [ %65, %64 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %64, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi float [ %62, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds float, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = tail call float @llvm.fmuladd.f32(float %43, float %61, float %41)
  %63 = icmp eq ptr %53, %37
  br i1 %63, label %64, label %39

64:                                               ; preds = %52, %29
  %65 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %66 = phi float [ 0.000000e+00, %29 ], [ %62, %52 ]
  %67 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %68 = getelementptr inbounds float, ptr %32, i64 1
  %69 = load float, ptr %32, align 4, !tbaa !95
  %70 = fadd float %66, %69
  store float %70, ptr %32, align 4, !tbaa !95
  %71 = icmp eq i64 %34, %27
  br i1 %71, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %68, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %67, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds float, ptr %14, i64 %41
  %46 = load float, ptr %45, align 4, !tbaa !95
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = getelementptr inbounds float, ptr %60, i64 %57
  %62 = load float, ptr %61, align 4, !tbaa !95
  %63 = zext i32 %44 to i64
  %64 = getelementptr inbounds float, ptr %22, i64 %63
  %65 = load float, ptr %64, align 4, !tbaa !95
  %66 = tail call float @llvm.fmuladd.f32(float %46, float %62, float %65)
  store float %66, ptr %64, align 4, !tbaa !95
  %67 = add i32 %42, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !540
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !540
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !540
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %94, %37
  ret void

48:                                               ; preds = %41, %94
  %49 = phi i64 [ 0, %41 ], [ %56, %94 ]
  %50 = phi ptr [ %13, %41 ], [ %77, %94 ]
  %51 = phi ptr [ %16, %41 ], [ %75, %94 ]
  %52 = phi i32 [ %39, %41 ], [ %97, %94 ]
  %53 = phi i32 [ 0, %41 ], [ %96, %94 ]
  %54 = phi i32 [ %38, %41 ], [ %95, %94 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %74, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %72, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = tail call float @llvm.fmuladd.f32(float %66, float %71, float %63)
  %73 = icmp eq ptr %65, %59
  br i1 %73, label %74, label %61

74:                                               ; preds = %61, %48
  %75 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %76 = phi float [ 0.000000e+00, %48 ], [ %72, %61 ]
  %77 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %78 = icmp eq i32 %52, %55
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = add i32 %53, 1
  br label %94

81:                                               ; preds = %74
  %82 = add i32 %54, 1
  %83 = icmp ult i32 %82, %19
  br i1 %83, label %84, label %94

84:                                               ; preds = %81
  %85 = add i32 %54, 2
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i32, ptr %21, i64 %86
  %88 = load i32, ptr %87, align 4, !tbaa !47, !noalias !543
  %89 = zext i32 %82 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !543
  %92 = add i32 %88, %52
  %93 = sub i32 %92, %91
  br label %94

94:                                               ; preds = %81, %79, %84
  %95 = phi i32 [ %82, %84 ], [ %54, %79 ], [ %82, %81 ]
  %96 = phi i32 [ 0, %84 ], [ %80, %79 ], [ 0, %81 ]
  %97 = phi i32 [ %93, %84 ], [ %52, %79 ], [ -1, %81 ]
  %98 = zext i32 %54 to i64
  %99 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %98, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !106
  %101 = zext i32 %53 to i64
  %102 = getelementptr inbounds float, ptr %100, i64 %101
  store float %76, ptr %102, align 4, !tbaa !95
  %103 = icmp eq i64 %56, %46
  br i1 %103, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds float, ptr %65, i64 %77
  br label %87

87:                                               ; preds = %83, %102
  %88 = phi i64 [ %81, %83 ], [ %112, %102 ]
  %89 = phi i32 [ %84, %83 ], [ %111, %102 ]
  %90 = getelementptr inbounds i32, ptr %85, i64 %88
  %91 = load i32, ptr %90, align 4, !tbaa !47
  %92 = getelementptr inbounds float, ptr %63, i64 %88
  %93 = load float, ptr %92, align 4, !tbaa !95
  %94 = load float, ptr %86, align 4, !tbaa !95
  br label %95

95:                                               ; preds = %95, %87
  %96 = phi i32 [ %5, %87 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %91
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = sub i32 %91, %100
  %104 = zext i32 %103 to i64
  %105 = zext i32 %97 to i64
  %106 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %105, i32 3
  %107 = load ptr, ptr %106, align 8, !tbaa !106
  %108 = getelementptr inbounds float, ptr %107, i64 %104
  %109 = load float, ptr %108, align 4, !tbaa !95
  %110 = tail call float @llvm.fmuladd.f32(float %93, float %94, float %109)
  store float %110, ptr %108, align 4, !tbaa !95
  %111 = add i32 %89, 1
  %112 = zext i32 %111 to i64
  %113 = icmp ugt i64 %80, %112
  br i1 %113, label %87, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !546
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !546
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !546
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %94, %37
  ret void

48:                                               ; preds = %41, %94
  %49 = phi i64 [ 0, %41 ], [ %56, %94 ]
  %50 = phi ptr [ %13, %41 ], [ %77, %94 ]
  %51 = phi ptr [ %16, %41 ], [ %75, %94 ]
  %52 = phi i32 [ %39, %41 ], [ %97, %94 ]
  %53 = phi i32 [ 0, %41 ], [ %96, %94 ]
  %54 = phi i32 [ %38, %41 ], [ %95, %94 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %74, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %72, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = tail call float @llvm.fmuladd.f32(float %66, float %71, float %63)
  %73 = icmp eq ptr %65, %59
  br i1 %73, label %74, label %61

74:                                               ; preds = %61, %48
  %75 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %76 = phi float [ 0.000000e+00, %48 ], [ %72, %61 ]
  %77 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %78 = icmp eq i32 %52, %55
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = add i32 %53, 1
  br label %94

81:                                               ; preds = %74
  %82 = add i32 %54, 1
  %83 = icmp ult i32 %82, %19
  br i1 %83, label %84, label %94

84:                                               ; preds = %81
  %85 = add i32 %54, 2
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i32, ptr %21, i64 %86
  %88 = load i32, ptr %87, align 4, !tbaa !47, !noalias !549
  %89 = zext i32 %82 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !549
  %92 = add i32 %88, %52
  %93 = sub i32 %92, %91
  br label %94

94:                                               ; preds = %81, %79, %84
  %95 = phi i32 [ %82, %84 ], [ %54, %79 ], [ %82, %81 ]
  %96 = phi i32 [ 0, %84 ], [ %80, %79 ], [ 0, %81 ]
  %97 = phi i32 [ %93, %84 ], [ %52, %79 ], [ -1, %81 ]
  %98 = zext i32 %54 to i64
  %99 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %98, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !106
  %101 = zext i32 %53 to i64
  %102 = getelementptr inbounds float, ptr %100, i64 %101
  %103 = load float, ptr %102, align 4, !tbaa !95
  %104 = fadd float %76, %103
  store float %104, ptr %102, align 4, !tbaa !95
  %105 = icmp eq i64 %56, %46
  br i1 %105, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds float, ptr %16, i64 %30
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %65, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %64, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds float, ptr %14, i64 %41
  %46 = load float, ptr %45, align 4, !tbaa !95
  %47 = load float, ptr %39, align 4, !tbaa !95
  br label %48

48:                                               ; preds = %48, %40
  %49 = phi i32 [ %18, %40 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %44
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = sub i32 %44, %53
  %57 = zext i32 %56 to i64
  %58 = zext i32 %50 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.20", ptr %22, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = getelementptr inbounds float, ptr %60, i64 %57
  %62 = load float, ptr %61, align 4, !tbaa !95
  %63 = tail call float @llvm.fmuladd.f32(float %46, float %47, float %62)
  store float %63, ptr %61, align 4, !tbaa !95
  %64 = add i32 %42, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %33, %65
  br i1 %66, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !552
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !552
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !552
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %110, %37
  ret void

52:                                               ; preds = %41, %110
  %53 = phi i64 [ 0, %41 ], [ %60, %110 ]
  %54 = phi ptr [ %13, %41 ], [ %93, %110 ]
  %55 = phi ptr [ %16, %41 ], [ %91, %110 ]
  %56 = phi i32 [ %39, %41 ], [ %113, %110 ]
  %57 = phi i32 [ 0, %41 ], [ %112, %110 ]
  %58 = phi i32 [ %38, %41 ], [ %111, %110 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %90, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi float [ %88, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds float, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = tail call float @llvm.fmuladd.f32(float %69, float %87, float %67)
  %89 = icmp eq ptr %79, %63
  br i1 %89, label %90, label %65

90:                                               ; preds = %78, %52
  %91 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %92 = phi float [ 0.000000e+00, %52 ], [ %88, %78 ]
  %93 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %94 = icmp eq i32 %56, %59
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  %96 = add i32 %57, 1
  br label %110

97:                                               ; preds = %90
  %98 = add i32 %58, 1
  %99 = icmp ult i32 %98, %19
  br i1 %99, label %100, label %110

100:                                              ; preds = %97
  %101 = add i32 %58, 2
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i32, ptr %21, i64 %102
  %104 = load i32, ptr %103, align 4, !tbaa !47, !noalias !555
  %105 = zext i32 %98 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !555
  %108 = add i32 %104, %56
  %109 = sub i32 %108, %107
  br label %110

110:                                              ; preds = %97, %95, %100
  %111 = phi i32 [ %98, %100 ], [ %58, %95 ], [ %98, %97 ]
  %112 = phi i32 [ 0, %100 ], [ %96, %95 ], [ 0, %97 ]
  %113 = phi i32 [ %109, %100 ], [ %56, %95 ], [ -1, %97 ]
  %114 = zext i32 %58 to i64
  %115 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %114, i32 3
  %116 = load ptr, ptr %115, align 8, !tbaa !106
  %117 = zext i32 %57 to i64
  %118 = getelementptr inbounds float, ptr %116, i64 %117
  store float %92, ptr %118, align 4, !tbaa !95
  %119 = icmp eq i64 %60, %50
  br i1 %119, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %131, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %130, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds float, ptr %63, i64 %92
  %97 = load float, ptr %96, align 4, !tbaa !95
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !106
  %112 = getelementptr inbounds float, ptr %111, i64 %108
  %113 = load float, ptr %112, align 4, !tbaa !95
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = sub i32 %95, %119
  %123 = zext i32 %122 to i64
  %124 = zext i32 %116 to i64
  %125 = getelementptr inbounds %"class.dealii::Vector.20", ptr %73, i64 %124, i32 3
  %126 = load ptr, ptr %125, align 8, !tbaa !106
  %127 = getelementptr inbounds float, ptr %126, i64 %123
  %128 = load float, ptr %127, align 4, !tbaa !95
  %129 = tail call float @llvm.fmuladd.f32(float %97, float %113, float %128)
  store float %129, ptr %127, align 4, !tbaa !95
  %130 = add i32 %93, 1
  %131 = zext i32 %130 to i64
  %132 = icmp ugt i64 %84, %131
  br i1 %132, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !558
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !558
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !558
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %110, %37
  ret void

52:                                               ; preds = %41, %110
  %53 = phi i64 [ 0, %41 ], [ %60, %110 ]
  %54 = phi ptr [ %13, %41 ], [ %93, %110 ]
  %55 = phi ptr [ %16, %41 ], [ %91, %110 ]
  %56 = phi i32 [ %39, %41 ], [ %113, %110 ]
  %57 = phi i32 [ 0, %41 ], [ %112, %110 ]
  %58 = phi i32 [ %38, %41 ], [ %111, %110 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %90, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi float [ %88, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds float, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = tail call float @llvm.fmuladd.f32(float %69, float %87, float %67)
  %89 = icmp eq ptr %79, %63
  br i1 %89, label %90, label %65

90:                                               ; preds = %78, %52
  %91 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %92 = phi float [ 0.000000e+00, %52 ], [ %88, %78 ]
  %93 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %94 = icmp eq i32 %56, %59
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  %96 = add i32 %57, 1
  br label %110

97:                                               ; preds = %90
  %98 = add i32 %58, 1
  %99 = icmp ult i32 %98, %19
  br i1 %99, label %100, label %110

100:                                              ; preds = %97
  %101 = add i32 %58, 2
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i32, ptr %21, i64 %102
  %104 = load i32, ptr %103, align 4, !tbaa !47, !noalias !561
  %105 = zext i32 %98 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !561
  %108 = add i32 %104, %56
  %109 = sub i32 %108, %107
  br label %110

110:                                              ; preds = %97, %95, %100
  %111 = phi i32 [ %98, %100 ], [ %58, %95 ], [ %98, %97 ]
  %112 = phi i32 [ 0, %100 ], [ %96, %95 ], [ 0, %97 ]
  %113 = phi i32 [ %109, %100 ], [ %56, %95 ], [ -1, %97 ]
  %114 = zext i32 %58 to i64
  %115 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %114, i32 3
  %116 = load ptr, ptr %115, align 8, !tbaa !106
  %117 = zext i32 %57 to i64
  %118 = getelementptr inbounds float, ptr %116, i64 %117
  %119 = load float, ptr %118, align 4, !tbaa !95
  %120 = fadd float %92, %119
  store float %120, ptr %118, align 4, !tbaa !95
  %121 = icmp eq i64 %60, %50
  br i1 %121, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %84, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %83, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds float, ptr %14, i64 %45
  %50 = load float, ptr %49, align 4, !tbaa !95
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !106
  %65 = getelementptr inbounds float, ptr %64, i64 %61
  %66 = load float, ptr %65, align 4, !tbaa !95
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = sub i32 %48, %72
  %76 = zext i32 %75 to i64
  %77 = zext i32 %69 to i64
  %78 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %77, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !106
  %80 = getelementptr inbounds float, ptr %79, i64 %76
  %81 = load float, ptr %80, align 4, !tbaa !95
  %82 = tail call float @llvm.fmuladd.f32(float %50, float %66, float %81)
  store float %82, ptr %80, align 4, !tbaa !95
  %83 = add i32 %46, 1
  %84 = zext i32 %83 to i64
  %85 = icmp ugt i64 %37, %84
  br i1 %85, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = fpext float %40 to x86_fp80
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %22, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = fpext float %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to float
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %42, %35 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds float, ptr %28, i64 1
  store float %53, ptr %28, align 4, !tbaa !95
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %46, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds x86_fp80, ptr %25, i64 %35
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  br label %46

46:                                               ; preds = %41, %46
  %47 = phi i64 [ %39, %41 ], [ %61, %46 ]
  %48 = phi i32 [ %42, %41 ], [ %60, %46 ]
  %49 = getelementptr inbounds i32, ptr %43, i64 %47
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = getelementptr inbounds float, ptr %23, i64 %47
  %52 = load float, ptr %51, align 4, !tbaa !95
  %53 = fpext float %52 to x86_fp80
  %54 = zext i32 %50 to i64
  %55 = getelementptr inbounds float, ptr %27, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fpext float %56 to x86_fp80
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %53, x86_fp80 %45, x86_fp80 %57)
  %59 = fptrunc x86_fp80 %58 to float
  store float %59, ptr %55, align 4, !tbaa !95
  %60 = add i32 %48, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %38, %61
  br i1 %62, label %46, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = fpext float %40 to x86_fp80
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %22, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = fpext float %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to float
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %42, %35 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds float, ptr %28, i64 1
  %56 = load float, ptr %28, align 4, !tbaa !95
  %57 = fadd float %53, %56
  store float %57, ptr %28, align 4, !tbaa !95
  %58 = icmp eq i64 %30, %23
  br i1 %58, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %37, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds x86_fp80, ptr %16, i64 %26
  %36 = load x86_fp80, ptr %35, align 16, !tbaa !128
  br label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %30, %32 ], [ %52, %37 ]
  %39 = phi i32 [ %33, %32 ], [ %51, %37 ]
  %40 = getelementptr inbounds i32, ptr %34, i64 %38
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds float, ptr %14, i64 %38
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = zext i32 %41 to i64
  %46 = getelementptr inbounds float, ptr %18, i64 %45
  %47 = load float, ptr %46, align 4, !tbaa !95
  %48 = fpext float %47 to x86_fp80
  %49 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %36, x86_fp80 %48)
  %50 = fptrunc x86_fp80 %49 to float
  store float %50, ptr %46, align 4, !tbaa !95
  %51 = add i32 %39, 1
  %52 = zext i32 %51 to i64
  %53 = icmp ugt i64 %29, %52
  br i1 %53, label %37, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi float [ %65, %53 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %33, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = fpext float %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to float
  %66 = icmp eq ptr %54, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %53, %29
  %68 = phi ptr [ %33, %29 ], [ %55, %53 ]
  %69 = phi float [ 0.000000e+00, %29 ], [ %65, %53 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %71 = getelementptr inbounds float, ptr %32, i64 1
  store float %69, ptr %32, align 4, !tbaa !95
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %80, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %79, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds float, ptr %23, i64 %50
  %55 = load float, ptr %54, align 4, !tbaa !95
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = fpext float %55 to x86_fp80
  %66 = sub i32 %48, %61
  %67 = zext i32 %66 to i64
  %68 = zext i32 %58 to i64
  %69 = getelementptr inbounds %"class.dealii::Vector.27", ptr %29, i64 %68, i32 3
  %70 = load ptr, ptr %69, align 8, !tbaa !135
  %71 = getelementptr inbounds x86_fp80, ptr %70, i64 %67
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = zext i32 %53 to i64
  %74 = getelementptr inbounds float, ptr %31, i64 %73
  %75 = load float, ptr %74, align 4, !tbaa !95
  %76 = fpext float %75 to x86_fp80
  %77 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %65, x86_fp80 %72, x86_fp80 %76)
  %78 = fptrunc x86_fp80 %77 to float
  store float %78, ptr %74, align 4, !tbaa !95
  %79 = add i32 %51, 1
  %80 = zext i32 %79 to i64
  %81 = icmp ugt i64 %42, %80
  br i1 %81, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi float [ %65, %53 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %33, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = fpext float %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to float
  %66 = icmp eq ptr %54, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %53, %29
  %68 = phi ptr [ %33, %29 ], [ %55, %53 ]
  %69 = phi float [ 0.000000e+00, %29 ], [ %65, %53 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %71 = getelementptr inbounds float, ptr %32, i64 1
  %72 = load float, ptr %32, align 4, !tbaa !95
  %73 = fadd float %69, %72
  store float %73, ptr %32, align 4, !tbaa !95
  %74 = icmp eq i64 %34, %27
  br i1 %74, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %71, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %70, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds float, ptr %14, i64 %41
  %46 = load float, ptr %45, align 4, !tbaa !95
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = fpext float %46 to x86_fp80
  %57 = sub i32 %39, %52
  %58 = zext i32 %57 to i64
  %59 = zext i32 %49 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !135
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 %58
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds float, ptr %22, i64 %64
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fpext float %66 to x86_fp80
  %68 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %63, x86_fp80 %67)
  %69 = fptrunc x86_fp80 %68 to float
  store float %69, ptr %65, align 4, !tbaa !95
  %70 = add i32 %42, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %33, %71
  br i1 %72, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !564
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !564
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !564
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = fpext float %66 to x86_fp80
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds x86_fp80, ptr %43, i64 %70
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = fpext float %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to float
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %79 = phi float [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !567
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !567
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !106
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds float, ptr %103, i64 %104
  store float %79, ptr %105, align 4, !tbaa !95
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds x86_fp80, ptr %65, i64 %77
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  br label %88

88:                                               ; preds = %83, %102
  %89 = phi i64 [ %81, %83 ], [ %115, %102 ]
  %90 = phi i32 [ %84, %83 ], [ %114, %102 ]
  %91 = getelementptr inbounds i32, ptr %85, i64 %89
  %92 = load i32, ptr %91, align 4, !tbaa !47
  %93 = getelementptr inbounds float, ptr %63, i64 %89
  %94 = load float, ptr %93, align 4, !tbaa !95
  br label %95

95:                                               ; preds = %95, %88
  %96 = phi i32 [ %5, %88 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %92
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = fpext float %94 to x86_fp80
  %104 = sub i32 %92, %100
  %105 = zext i32 %104 to i64
  %106 = zext i32 %97 to i64
  %107 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %106, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !106
  %109 = getelementptr inbounds float, ptr %108, i64 %105
  %110 = load float, ptr %109, align 4, !tbaa !95
  %111 = fpext float %110 to x86_fp80
  %112 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %103, x86_fp80 %87, x86_fp80 %111)
  %113 = fptrunc x86_fp80 %112 to float
  store float %113, ptr %109, align 4, !tbaa !95
  %114 = add i32 %90, 1
  %115 = zext i32 %114 to i64
  %116 = icmp ugt i64 %80, %115
  br i1 %116, label %88, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !570
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !570
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !570
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = fpext float %66 to x86_fp80
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds x86_fp80, ptr %43, i64 %70
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = fpext float %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to float
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %79 = phi float [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !573
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !573
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !106
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds float, ptr %103, i64 %104
  %106 = load float, ptr %105, align 4, !tbaa !95
  %107 = fadd float %79, %106
  store float %107, ptr %105, align 4, !tbaa !95
  %108 = icmp eq i64 %56, %46
  br i1 %108, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %30
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !128
  br label %41

41:                                               ; preds = %36, %55
  %42 = phi i64 [ %34, %36 ], [ %68, %55 ]
  %43 = phi i32 [ %37, %36 ], [ %67, %55 ]
  %44 = getelementptr inbounds i32, ptr %38, i64 %42
  %45 = load i32, ptr %44, align 4, !tbaa !47
  %46 = getelementptr inbounds float, ptr %14, i64 %42
  %47 = load float, ptr %46, align 4, !tbaa !95
  br label %48

48:                                               ; preds = %48, %41
  %49 = phi i32 [ %18, %41 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %45
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = fpext float %47 to x86_fp80
  %57 = sub i32 %45, %53
  %58 = zext i32 %57 to i64
  %59 = zext i32 %50 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.20", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !106
  %62 = getelementptr inbounds float, ptr %61, i64 %58
  %63 = load float, ptr %62, align 4, !tbaa !95
  %64 = fpext float %63 to x86_fp80
  %65 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %40, x86_fp80 %64)
  %66 = fptrunc x86_fp80 %65 to float
  store float %66, ptr %62, align 4, !tbaa !95
  %67 = add i32 %43, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %41, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !576
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !576
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !576
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi float [ %91, %79 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = fpext float %69 to x86_fp80
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !135
  %87 = getelementptr inbounds x86_fp80, ptr %86, i64 %83
  %88 = load x86_fp80, ptr %87, align 16, !tbaa !128
  %89 = fpext float %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to float
  %92 = icmp eq ptr %80, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %79, %52
  %94 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %95 = phi float [ 0.000000e+00, %52 ], [ %91, %79 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !579
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !579
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !106
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds float, ptr %119, i64 %120
  store float %95, ptr %121, align 4, !tbaa !95
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %134, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %133, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds float, ptr %63, i64 %92
  %97 = load float, ptr %96, align 4, !tbaa !95
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector.27", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !135
  %112 = getelementptr inbounds x86_fp80, ptr %111, i64 %108
  %113 = load x86_fp80, ptr %112, align 16, !tbaa !128
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = fpext float %97 to x86_fp80
  %123 = sub i32 %95, %119
  %124 = zext i32 %123 to i64
  %125 = zext i32 %116 to i64
  %126 = getelementptr inbounds %"class.dealii::Vector.20", ptr %73, i64 %125, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !106
  %128 = getelementptr inbounds float, ptr %127, i64 %124
  %129 = load float, ptr %128, align 4, !tbaa !95
  %130 = fpext float %129 to x86_fp80
  %131 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %122, x86_fp80 %113, x86_fp80 %130)
  %132 = fptrunc x86_fp80 %131 to float
  store float %132, ptr %128, align 4, !tbaa !95
  %133 = add i32 %93, 1
  %134 = zext i32 %133 to i64
  %135 = icmp ugt i64 %84, %134
  br i1 %135, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !582
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !582
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !582
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi float [ %91, %79 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = fpext float %69 to x86_fp80
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !135
  %87 = getelementptr inbounds x86_fp80, ptr %86, i64 %83
  %88 = load x86_fp80, ptr %87, align 16, !tbaa !128
  %89 = fpext float %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to float
  %92 = icmp eq ptr %80, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %79, %52
  %94 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %95 = phi float [ 0.000000e+00, %52 ], [ %91, %79 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !585
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !585
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !106
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds float, ptr %119, i64 %120
  %122 = load float, ptr %121, align 4, !tbaa !95
  %123 = fadd float %95, %122
  store float %123, ptr %121, align 4, !tbaa !95
  %124 = icmp eq i64 %60, %50
  br i1 %124, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %87, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %86, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds float, ptr %14, i64 %45
  %50 = load float, ptr %49, align 4, !tbaa !95
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !135
  %65 = getelementptr inbounds x86_fp80, ptr %64, i64 %61
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext float %50 to x86_fp80
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !106
  %81 = getelementptr inbounds float, ptr %80, i64 %77
  %82 = load float, ptr %81, align 4, !tbaa !95
  %83 = fpext float %82 to x86_fp80
  %84 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %75, x86_fp80 %66, x86_fp80 %83)
  %85 = fptrunc x86_fp80 %84 to float
  store float %85, ptr %81, align 4, !tbaa !95
  %86 = add i32 %46, 1
  %87 = zext i32 %86 to i64
  %88 = icmp ugt i64 %37, %87
  br i1 %88, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %29 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %49, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = fpext float %40 to double
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds double, ptr %22, i64 %44
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = fmul double %46, %41
  %48 = fpext double %47 to x86_fp80
  %49 = fadd x86_fp80 %37, %48
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %28, %25 ], [ %42, %35 ]
  %53 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  store x86_fp80 %53, ptr %29, align 16, !tbaa !128
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %20 to i64
  %33 = load i64, ptr %24, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %50, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %16
  ret void

37:                                               ; preds = %22, %34
  %38 = phi i64 [ %33, %22 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %22 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %24, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %25, align 8, !tbaa !46
  %48 = getelementptr inbounds double, ptr %29, i64 %39
  %49 = load double, ptr %48, align 8, !tbaa !30
  br label %50

50:                                               ; preds = %45, %50
  %51 = phi i64 [ %43, %45 ], [ %65, %50 ]
  %52 = phi i32 [ %46, %45 ], [ %64, %50 ]
  %53 = getelementptr inbounds i32, ptr %47, i64 %51
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = getelementptr inbounds float, ptr %27, i64 %51
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fpext float %56 to double
  %58 = fmul double %49, %57
  %59 = fpext double %58 to x86_fp80
  %60 = zext i32 %54 to i64
  %61 = getelementptr inbounds x86_fp80, ptr %31, i64 %60
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = fadd x86_fp80 %62, %59
  store x86_fp80 %63, ptr %61, align 16, !tbaa !128
  %64 = add i32 %52, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %42, %65
  br i1 %66, label %50, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %29 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %49, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = fpext float %40 to double
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds double, ptr %22, i64 %44
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = fmul double %46, %41
  %48 = fpext double %47 to x86_fp80
  %49 = fadd x86_fp80 %37, %48
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %28, %25 ], [ %42, %35 ]
  %53 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  %56 = load x86_fp80, ptr %29, align 16, !tbaa !128
  %57 = fadd x86_fp80 %53, %56
  store x86_fp80 %57, ptr %29, align 16, !tbaa !128
  %58 = icmp eq i64 %30, %23
  br i1 %58, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %37, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds double, ptr %16, i64 %26
  %36 = load double, ptr %35, align 8, !tbaa !30
  br label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %30, %32 ], [ %52, %37 ]
  %39 = phi i32 [ %33, %32 ], [ %51, %37 ]
  %40 = getelementptr inbounds i32, ptr %34, i64 %38
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds float, ptr %14, i64 %38
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fpext float %43 to double
  %45 = fmul double %36, %44
  %46 = fpext double %45 to x86_fp80
  %47 = zext i32 %41 to i64
  %48 = getelementptr inbounds x86_fp80, ptr %18, i64 %47
  %49 = load x86_fp80, ptr %48, align 16, !tbaa !128
  %50 = fadd x86_fp80 %49, %46
  store x86_fp80 %50, ptr %48, align 16, !tbaa !128
  %51 = add i32 %39, 1
  %52 = zext i32 %51 to i64
  %53 = icmp ugt i64 %29, %52
  br i1 %53, label %37, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %33 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %65, %53 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %32, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = fpext float %43 to double
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = fmul double %62, %44
  %64 = fpext double %63 to x86_fp80
  %65 = fadd x86_fp80 %41, %64
  %66 = icmp eq ptr %54, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %53, %29
  %68 = phi ptr [ %32, %29 ], [ %55, %53 ]
  %69 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %65, %53 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %71 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  store x86_fp80 %69, ptr %33, align 16, !tbaa !128
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %20 to i64
  %37 = load i64, ptr %24, align 8, !tbaa !34
  br label %41

38:                                               ; preds = %68, %41
  %39 = icmp eq i64 %44, %36
  br i1 %39, label %40, label %41

40:                                               ; preds = %38, %16
  ret void

41:                                               ; preds = %22, %38
  %42 = phi i64 [ %37, %22 ], [ %46, %38 ]
  %43 = phi i64 [ 0, %22 ], [ %44, %38 ]
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr inbounds i64, ptr %24, i64 %44
  %46 = load i64, ptr %45, align 8, !tbaa !34
  %47 = and i64 %42, 4294967295
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %49, label %38

49:                                               ; preds = %41
  %50 = trunc i64 %42 to i32
  %51 = load ptr, ptr %25, align 8, !tbaa !46
  %52 = trunc i64 %43 to i32
  br label %53

53:                                               ; preds = %49, %68
  %54 = phi i64 [ %47, %49 ], [ %84, %68 ]
  %55 = phi i32 [ %50, %49 ], [ %83, %68 ]
  %56 = getelementptr inbounds i32, ptr %51, i64 %54
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = getelementptr inbounds float, ptr %27, i64 %54
  %59 = load float, ptr %58, align 4, !tbaa !95
  br label %60

60:                                               ; preds = %60, %53
  %61 = phi i32 [ %29, %53 ], [ %62, %60 ]
  %62 = add i32 %61, -1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, ptr %31, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !47
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %43, %66
  br i1 %67, label %60, label %68

68:                                               ; preds = %60
  %69 = fpext float %59 to double
  %70 = sub i32 %52, %65
  %71 = zext i32 %70 to i64
  %72 = zext i32 %62 to i64
  %73 = getelementptr inbounds %"class.dealii::Vector", ptr %33, i64 %72, i32 3
  %74 = load ptr, ptr %73, align 8, !tbaa !53
  %75 = getelementptr inbounds double, ptr %74, i64 %71
  %76 = load double, ptr %75, align 8, !tbaa !30
  %77 = fmul double %76, %69
  %78 = fpext double %77 to x86_fp80
  %79 = zext i32 %57 to i64
  %80 = getelementptr inbounds x86_fp80, ptr %35, i64 %79
  %81 = load x86_fp80, ptr %80, align 16, !tbaa !128
  %82 = fadd x86_fp80 %81, %78
  store x86_fp80 %82, ptr %80, align 16, !tbaa !128
  %83 = add i32 %55, 1
  %84 = zext i32 %83 to i64
  %85 = icmp ugt i64 %46, %84
  br i1 %85, label %53, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %33 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %65, %53 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %32, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = fpext float %43 to double
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = fmul double %62, %44
  %64 = fpext double %63 to x86_fp80
  %65 = fadd x86_fp80 %41, %64
  %66 = icmp eq ptr %54, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %53, %29
  %68 = phi ptr [ %32, %29 ], [ %55, %53 ]
  %69 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %65, %53 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %71 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  %72 = load x86_fp80, ptr %33, align 16, !tbaa !128
  %73 = fadd x86_fp80 %69, %72
  store x86_fp80 %73, ptr %33, align 16, !tbaa !128
  %74 = icmp eq i64 %34, %27
  br i1 %74, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %71, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %70, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds float, ptr %14, i64 %41
  %46 = load float, ptr %45, align 4, !tbaa !95
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = fpext float %46 to double
  %57 = sub i32 %39, %52
  %58 = zext i32 %57 to i64
  %59 = zext i32 %49 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !53
  %62 = getelementptr inbounds double, ptr %61, i64 %58
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = fmul double %63, %56
  %65 = fpext double %64 to x86_fp80
  %66 = zext i32 %44 to i64
  %67 = getelementptr inbounds x86_fp80, ptr %22, i64 %66
  %68 = load x86_fp80, ptr %67, align 16, !tbaa !128
  %69 = fadd x86_fp80 %68, %65
  store x86_fp80 %69, ptr %67, align 16, !tbaa !128
  %70 = add i32 %42, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %33, %71
  br i1 %72, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !588
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !588
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !588
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %75, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = fpext float %66 to double
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds double, ptr %43, i64 %70
  %72 = load double, ptr %71, align 8, !tbaa !30
  %73 = fmul double %72, %67
  %74 = fpext double %73 to x86_fp80
  %75 = fadd x86_fp80 %63, %74
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %79 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !591
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !591
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !135
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds x86_fp80, ptr %103, i64 %104
  store x86_fp80 %79, ptr %105, align 16, !tbaa !128
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %77 = load ptr, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = zext i32 %68 to i64
  %83 = load i64, ptr %72, align 8, !tbaa !34
  br label %87

84:                                               ; preds = %116, %87
  %85 = icmp eq i64 %90, %82
  br i1 %85, label %86, label %87

86:                                               ; preds = %84, %64
  ret void

87:                                               ; preds = %70, %84
  %88 = phi i64 [ %83, %70 ], [ %92, %84 ]
  %89 = phi i64 [ 0, %70 ], [ %90, %84 ]
  %90 = add nuw nsw i64 %89, 1
  %91 = getelementptr inbounds i64, ptr %72, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !34
  %93 = and i64 %88, 4294967295
  %94 = icmp ugt i64 %92, %93
  br i1 %94, label %95, label %84

95:                                               ; preds = %87
  %96 = trunc i64 %88 to i32
  %97 = load ptr, ptr %73, align 8, !tbaa !46
  %98 = getelementptr inbounds double, ptr %77, i64 %89
  %99 = load double, ptr %98, align 8, !tbaa !30
  br label %100

100:                                              ; preds = %95, %116
  %101 = phi i64 [ %93, %95 ], [ %127, %116 ]
  %102 = phi i32 [ %96, %95 ], [ %126, %116 ]
  %103 = getelementptr inbounds i32, ptr %97, i64 %101
  %104 = load i32, ptr %103, align 4, !tbaa !47
  %105 = getelementptr inbounds float, ptr %75, i64 %101
  %106 = load float, ptr %105, align 4, !tbaa !95
  %107 = fpext float %106 to double
  %108 = fmul double %99, %107
  br label %109

109:                                              ; preds = %109, %100
  %110 = phi i32 [ %5, %100 ], [ %111, %109 ]
  %111 = add i32 %110, -1
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i32, ptr %79, i64 %112
  %114 = load i32, ptr %113, align 4, !tbaa !47
  %115 = icmp ugt i32 %114, %104
  br i1 %115, label %109, label %116

116:                                              ; preds = %109
  %117 = fpext double %108 to x86_fp80
  %118 = sub i32 %104, %114
  %119 = zext i32 %118 to i64
  %120 = zext i32 %111 to i64
  %121 = getelementptr inbounds %"class.dealii::Vector.27", ptr %81, i64 %120, i32 3
  %122 = load ptr, ptr %121, align 8, !tbaa !135
  %123 = getelementptr inbounds x86_fp80, ptr %122, i64 %119
  %124 = load x86_fp80, ptr %123, align 16, !tbaa !128
  %125 = fadd x86_fp80 %124, %117
  store x86_fp80 %125, ptr %123, align 16, !tbaa !128
  %126 = add i32 %102, 1
  %127 = zext i32 %126 to i64
  %128 = icmp ugt i64 %92, %127
  br i1 %128, label %100, label %84
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !594
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !594
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !594
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %75, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = fpext float %66 to double
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds double, ptr %43, i64 %70
  %72 = load double, ptr %71, align 8, !tbaa !30
  %73 = fmul double %72, %67
  %74 = fpext double %73 to x86_fp80
  %75 = fadd x86_fp80 %63, %74
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %79 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !597
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !597
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !135
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds x86_fp80, ptr %103, i64 %104
  %106 = load x86_fp80, ptr %105, align 16, !tbaa !128
  %107 = fadd x86_fp80 %79, %106
  store x86_fp80 %107, ptr %105, align 16, !tbaa !128
  %108 = icmp eq i64 %56, %46
  br i1 %108, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %57, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds double, ptr %16, i64 %30
  %40 = load double, ptr %39, align 8, !tbaa !30
  br label %41

41:                                               ; preds = %36, %57
  %42 = phi i64 [ %34, %36 ], [ %68, %57 ]
  %43 = phi i32 [ %37, %36 ], [ %67, %57 ]
  %44 = getelementptr inbounds i32, ptr %38, i64 %42
  %45 = load i32, ptr %44, align 4, !tbaa !47
  %46 = getelementptr inbounds float, ptr %14, i64 %42
  %47 = load float, ptr %46, align 4, !tbaa !95
  %48 = fpext float %47 to double
  %49 = fmul double %40, %48
  br label %50

50:                                               ; preds = %50, %41
  %51 = phi i32 [ %18, %41 ], [ %52, %50 ]
  %52 = add i32 %51, -1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, ptr %20, i64 %53
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = icmp ugt i32 %55, %45
  br i1 %56, label %50, label %57

57:                                               ; preds = %50
  %58 = fpext double %49 to x86_fp80
  %59 = sub i32 %45, %55
  %60 = zext i32 %59 to i64
  %61 = zext i32 %52 to i64
  %62 = getelementptr inbounds %"class.dealii::Vector.27", ptr %22, i64 %61, i32 3
  %63 = load ptr, ptr %62, align 8, !tbaa !135
  %64 = getelementptr inbounds x86_fp80, ptr %63, i64 %60
  %65 = load x86_fp80, ptr %64, align 16, !tbaa !128
  %66 = fadd x86_fp80 %65, %58
  store x86_fp80 %66, ptr %64, align 16, !tbaa !128
  %67 = add i32 %43, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %41, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !600
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !600
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !600
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %91, %79 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = fpext float %69 to double
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !53
  %87 = getelementptr inbounds double, ptr %86, i64 %83
  %88 = load double, ptr %87, align 8, !tbaa !30
  %89 = fmul double %88, %70
  %90 = fpext double %89 to x86_fp80
  %91 = fadd x86_fp80 %67, %90
  %92 = icmp eq ptr %80, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %79, %52
  %94 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %95 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %91, %79 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !603
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !603
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !135
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds x86_fp80, ptr %119, i64 %120
  store x86_fp80 %95, ptr %121, align 16, !tbaa !128
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %90, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %77 = load i32, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8
  %86 = zext i32 %68 to i64
  %87 = load i64, ptr %72, align 8, !tbaa !34
  br label %91

88:                                               ; preds = %135, %91
  %89 = icmp eq i64 %94, %86
  br i1 %89, label %90, label %91

90:                                               ; preds = %88, %64
  ret void

91:                                               ; preds = %70, %88
  %92 = phi i64 [ %87, %70 ], [ %96, %88 ]
  %93 = phi i64 [ 0, %70 ], [ %94, %88 ]
  %94 = add nuw nsw i64 %93, 1
  %95 = getelementptr inbounds i64, ptr %72, i64 %94
  %96 = load i64, ptr %95, align 8, !tbaa !34
  %97 = and i64 %92, 4294967295
  %98 = icmp ugt i64 %96, %97
  br i1 %98, label %99, label %88

99:                                               ; preds = %91
  %100 = trunc i64 %92 to i32
  %101 = load ptr, ptr %73, align 8, !tbaa !46
  %102 = trunc i64 %93 to i32
  br label %103

103:                                              ; preds = %99, %135
  %104 = phi i64 [ %97, %99 ], [ %146, %135 ]
  %105 = phi i32 [ %100, %99 ], [ %145, %135 ]
  %106 = getelementptr inbounds i32, ptr %101, i64 %104
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = getelementptr inbounds float, ptr %75, i64 %104
  %109 = load float, ptr %108, align 4, !tbaa !95
  br label %110

110:                                              ; preds = %110, %103
  %111 = phi i32 [ %77, %103 ], [ %112, %110 ]
  %112 = add i32 %111, -1
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %79, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !47
  %116 = zext i32 %115 to i64
  %117 = icmp ult i64 %93, %116
  br i1 %117, label %110, label %118

118:                                              ; preds = %110
  %119 = fpext float %109 to double
  %120 = sub i32 %102, %115
  %121 = zext i32 %120 to i64
  %122 = zext i32 %112 to i64
  %123 = getelementptr inbounds %"class.dealii::Vector", ptr %81, i64 %122, i32 3
  %124 = load ptr, ptr %123, align 8, !tbaa !53
  %125 = getelementptr inbounds double, ptr %124, i64 %121
  %126 = load double, ptr %125, align 8, !tbaa !30
  %127 = fmul double %126, %119
  br label %128

128:                                              ; preds = %128, %118
  %129 = phi i32 [ %5, %118 ], [ %130, %128 ]
  %130 = add i32 %129, -1
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i32, ptr %83, i64 %131
  %133 = load i32, ptr %132, align 4, !tbaa !47
  %134 = icmp ugt i32 %133, %107
  br i1 %134, label %128, label %135

135:                                              ; preds = %128
  %136 = fpext double %127 to x86_fp80
  %137 = sub i32 %107, %133
  %138 = zext i32 %137 to i64
  %139 = zext i32 %130 to i64
  %140 = getelementptr inbounds %"class.dealii::Vector.27", ptr %85, i64 %139, i32 3
  %141 = load ptr, ptr %140, align 8, !tbaa !135
  %142 = getelementptr inbounds x86_fp80, ptr %141, i64 %138
  %143 = load x86_fp80, ptr %142, align 16, !tbaa !128
  %144 = fadd x86_fp80 %143, %136
  store x86_fp80 %144, ptr %142, align 16, !tbaa !128
  %145 = add i32 %105, 1
  %146 = zext i32 %145 to i64
  %147 = icmp ugt i64 %96, %146
  br i1 %147, label %103, label %88
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !606
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !606
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !606
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %91, %79 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = fpext float %69 to double
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !53
  %87 = getelementptr inbounds double, ptr %86, i64 %83
  %88 = load double, ptr %87, align 8, !tbaa !30
  %89 = fmul double %88, %70
  %90 = fpext double %89 to x86_fp80
  %91 = fadd x86_fp80 %67, %90
  %92 = icmp eq ptr %80, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %79, %52
  %94 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %95 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %91, %79 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !609
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !609
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !135
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds x86_fp80, ptr %119, i64 %120
  %122 = load x86_fp80, ptr %121, align 16, !tbaa !128
  %123 = fadd x86_fp80 %95, %122
  store x86_fp80 %123, ptr %121, align 16, !tbaa !128
  %124 = icmp eq i64 %60, %50
  br i1 %124, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %76, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %76
  %45 = phi i64 [ %38, %40 ], [ %87, %76 ]
  %46 = phi i32 [ %41, %40 ], [ %86, %76 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds float, ptr %14, i64 %45
  %50 = load float, ptr %49, align 4, !tbaa !95
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = fpext float %50 to double
  %61 = sub i32 %43, %56
  %62 = zext i32 %61 to i64
  %63 = zext i32 %53 to i64
  %64 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %63, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !53
  %66 = getelementptr inbounds double, ptr %65, i64 %62
  %67 = load double, ptr %66, align 8, !tbaa !30
  %68 = fmul double %67, %60
  br label %69

69:                                               ; preds = %69, %59
  %70 = phi i32 [ %22, %59 ], [ %71, %69 ]
  %71 = add i32 %70, -1
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, ptr %24, i64 %72
  %74 = load i32, ptr %73, align 4, !tbaa !47
  %75 = icmp ugt i32 %74, %48
  br i1 %75, label %69, label %76

76:                                               ; preds = %69
  %77 = fpext double %68 to x86_fp80
  %78 = sub i32 %48, %74
  %79 = zext i32 %78 to i64
  %80 = zext i32 %71 to i64
  %81 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %80, i32 3
  %82 = load ptr, ptr %81, align 8, !tbaa !135
  %83 = getelementptr inbounds x86_fp80, ptr %82, i64 %79
  %84 = load x86_fp80, ptr %83, align 16, !tbaa !128
  %85 = fadd x86_fp80 %84, %77
  store x86_fp80 %85, ptr %83, align 16, !tbaa !128
  %86 = add i32 %46, 1
  %87 = zext i32 %86 to i64
  %88 = icmp ugt i64 %37, %87
  br i1 %88, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %50, %3
  ret void

25:                                               ; preds = %13, %50
  %26 = phi i64 [ 0, %13 ], [ %30, %50 ]
  %27 = phi ptr [ %20, %13 ], [ %53, %50 ]
  %28 = phi ptr [ %19, %13 ], [ %51, %50 ]
  %29 = phi ptr [ %15, %13 ], [ %54, %50 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %48, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fmul float %40, %45
  %47 = fpext float %46 to x86_fp80
  %48 = fadd x86_fp80 %37, %47
  %49 = icmp eq ptr %39, %33
  br i1 %49, label %50, label %35

50:                                               ; preds = %35, %25
  %51 = phi ptr [ %28, %25 ], [ %41, %35 ]
  %52 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %48, %35 ]
  %53 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %54 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  store x86_fp80 %52, ptr %29, align 16, !tbaa !128
  %55 = icmp eq i64 %30, %23
  br i1 %55, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %20 to i64
  %33 = load i64, ptr %24, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %50, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %16
  ret void

37:                                               ; preds = %22, %34
  %38 = phi i64 [ %33, %22 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %22 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %24, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %25, align 8, !tbaa !46
  %48 = getelementptr inbounds float, ptr %29, i64 %39
  %49 = load float, ptr %48, align 4, !tbaa !95
  br label %50

50:                                               ; preds = %45, %50
  %51 = phi i64 [ %43, %45 ], [ %64, %50 ]
  %52 = phi i32 [ %46, %45 ], [ %63, %50 ]
  %53 = getelementptr inbounds i32, ptr %47, i64 %51
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = getelementptr inbounds float, ptr %27, i64 %51
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fmul float %56, %49
  %58 = fpext float %57 to x86_fp80
  %59 = zext i32 %54 to i64
  %60 = getelementptr inbounds x86_fp80, ptr %31, i64 %59
  %61 = load x86_fp80, ptr %60, align 16, !tbaa !128
  %62 = fadd x86_fp80 %61, %58
  store x86_fp80 %62, ptr %60, align 16, !tbaa !128
  %63 = add i32 %52, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %42, %64
  br i1 %65, label %50, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %50, %3
  ret void

25:                                               ; preds = %13, %50
  %26 = phi i64 [ 0, %13 ], [ %30, %50 ]
  %27 = phi ptr [ %20, %13 ], [ %53, %50 ]
  %28 = phi ptr [ %19, %13 ], [ %51, %50 ]
  %29 = phi ptr [ %15, %13 ], [ %54, %50 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %48, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fmul float %40, %45
  %47 = fpext float %46 to x86_fp80
  %48 = fadd x86_fp80 %37, %47
  %49 = icmp eq ptr %39, %33
  br i1 %49, label %50, label %35

50:                                               ; preds = %35, %25
  %51 = phi ptr [ %28, %25 ], [ %41, %35 ]
  %52 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %48, %35 ]
  %53 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %54 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  %55 = load x86_fp80, ptr %29, align 16, !tbaa !128
  %56 = fadd x86_fp80 %52, %55
  store x86_fp80 %56, ptr %29, align 16, !tbaa !128
  %57 = icmp eq i64 %30, %23
  br i1 %57, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %37, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds float, ptr %16, i64 %26
  %36 = load float, ptr %35, align 4, !tbaa !95
  br label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %30, %32 ], [ %51, %37 ]
  %39 = phi i32 [ %33, %32 ], [ %50, %37 ]
  %40 = getelementptr inbounds i32, ptr %34, i64 %38
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds float, ptr %14, i64 %38
  %43 = load float, ptr %42, align 4, !tbaa !95
  %44 = fmul float %43, %36
  %45 = fpext float %44 to x86_fp80
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds x86_fp80, ptr %18, i64 %46
  %48 = load x86_fp80, ptr %47, align 16, !tbaa !128
  %49 = fadd x86_fp80 %48, %45
  store x86_fp80 %49, ptr %47, align 16, !tbaa !128
  %50 = add i32 %39, 1
  %51 = zext i32 %50 to i64
  %52 = icmp ugt i64 %29, %51
  br i1 %52, label %37, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %66, %3
  ret void

29:                                               ; preds = %13, %66
  %30 = phi i64 [ 0, %13 ], [ %34, %66 ]
  %31 = phi ptr [ %20, %13 ], [ %69, %66 ]
  %32 = phi ptr [ %19, %13 ], [ %67, %66 ]
  %33 = phi ptr [ %15, %13 ], [ %70, %66 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %64, %52 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %32, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds float, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fmul float %43, %61
  %63 = fpext float %62 to x86_fp80
  %64 = fadd x86_fp80 %41, %63
  %65 = icmp eq ptr %53, %37
  br i1 %65, label %66, label %39

66:                                               ; preds = %52, %29
  %67 = phi ptr [ %32, %29 ], [ %54, %52 ]
  %68 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %64, %52 ]
  %69 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %70 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  store x86_fp80 %68, ptr %33, align 16, !tbaa !128
  %71 = icmp eq i64 %34, %27
  br i1 %71, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %20 to i64
  %37 = load i64, ptr %24, align 8, !tbaa !34
  br label %41

38:                                               ; preds = %68, %41
  %39 = icmp eq i64 %44, %36
  br i1 %39, label %40, label %41

40:                                               ; preds = %38, %16
  ret void

41:                                               ; preds = %22, %38
  %42 = phi i64 [ %37, %22 ], [ %46, %38 ]
  %43 = phi i64 [ 0, %22 ], [ %44, %38 ]
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr inbounds i64, ptr %24, i64 %44
  %46 = load i64, ptr %45, align 8, !tbaa !34
  %47 = and i64 %42, 4294967295
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %49, label %38

49:                                               ; preds = %41
  %50 = trunc i64 %42 to i32
  %51 = load ptr, ptr %25, align 8, !tbaa !46
  %52 = trunc i64 %43 to i32
  br label %53

53:                                               ; preds = %49, %68
  %54 = phi i64 [ %47, %49 ], [ %83, %68 ]
  %55 = phi i32 [ %50, %49 ], [ %82, %68 ]
  %56 = getelementptr inbounds i32, ptr %51, i64 %54
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = getelementptr inbounds float, ptr %27, i64 %54
  %59 = load float, ptr %58, align 4, !tbaa !95
  br label %60

60:                                               ; preds = %60, %53
  %61 = phi i32 [ %29, %53 ], [ %62, %60 ]
  %62 = add i32 %61, -1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, ptr %31, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !47
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %43, %66
  br i1 %67, label %60, label %68

68:                                               ; preds = %60
  %69 = sub i32 %52, %65
  %70 = zext i32 %69 to i64
  %71 = zext i32 %62 to i64
  %72 = getelementptr inbounds %"class.dealii::Vector.20", ptr %33, i64 %71, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !106
  %74 = getelementptr inbounds float, ptr %73, i64 %70
  %75 = load float, ptr %74, align 4, !tbaa !95
  %76 = fmul float %59, %75
  %77 = fpext float %76 to x86_fp80
  %78 = zext i32 %57 to i64
  %79 = getelementptr inbounds x86_fp80, ptr %35, i64 %78
  %80 = load x86_fp80, ptr %79, align 16, !tbaa !128
  %81 = fadd x86_fp80 %80, %77
  store x86_fp80 %81, ptr %79, align 16, !tbaa !128
  %82 = add i32 %55, 1
  %83 = zext i32 %82 to i64
  %84 = icmp ugt i64 %46, %83
  br i1 %84, label %53, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %66, %3
  ret void

29:                                               ; preds = %13, %66
  %30 = phi i64 [ 0, %13 ], [ %34, %66 ]
  %31 = phi ptr [ %20, %13 ], [ %69, %66 ]
  %32 = phi ptr [ %19, %13 ], [ %67, %66 ]
  %33 = phi ptr [ %15, %13 ], [ %70, %66 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %64, %52 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %32, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds float, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fmul float %43, %61
  %63 = fpext float %62 to x86_fp80
  %64 = fadd x86_fp80 %41, %63
  %65 = icmp eq ptr %53, %37
  br i1 %65, label %66, label %39

66:                                               ; preds = %52, %29
  %67 = phi ptr [ %32, %29 ], [ %54, %52 ]
  %68 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %64, %52 ]
  %69 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %70 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  %71 = load x86_fp80, ptr %33, align 16, !tbaa !128
  %72 = fadd x86_fp80 %68, %71
  store x86_fp80 %72, ptr %33, align 16, !tbaa !128
  %73 = icmp eq i64 %34, %27
  br i1 %73, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %70, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %69, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds float, ptr %14, i64 %41
  %46 = load float, ptr %45, align 4, !tbaa !95
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = getelementptr inbounds float, ptr %60, i64 %57
  %62 = load float, ptr %61, align 4, !tbaa !95
  %63 = fmul float %46, %62
  %64 = fpext float %63 to x86_fp80
  %65 = zext i32 %44 to i64
  %66 = getelementptr inbounds x86_fp80, ptr %22, i64 %65
  %67 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %68 = fadd x86_fp80 %67, %64
  store x86_fp80 %68, ptr %66, align 16, !tbaa !128
  %69 = add i32 %42, 1
  %70 = zext i32 %69 to i64
  %71 = icmp ugt i64 %33, %70
  br i1 %71, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !612
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !612
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !612
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %96, %37
  ret void

48:                                               ; preds = %41, %96
  %49 = phi i64 [ 0, %41 ], [ %56, %96 ]
  %50 = phi ptr [ %13, %41 ], [ %79, %96 ]
  %51 = phi ptr [ %16, %41 ], [ %77, %96 ]
  %52 = phi i32 [ %39, %41 ], [ %99, %96 ]
  %53 = phi i32 [ 0, %41 ], [ %98, %96 ]
  %54 = phi i32 [ %38, %41 ], [ %97, %96 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %74, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fmul float %66, %71
  %73 = fpext float %72 to x86_fp80
  %74 = fadd x86_fp80 %63, %73
  %75 = icmp eq ptr %65, %59
  br i1 %75, label %76, label %61

76:                                               ; preds = %61, %48
  %77 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %78 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %74, %61 ]
  %79 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %80 = icmp eq i32 %52, %55
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = add i32 %53, 1
  br label %96

83:                                               ; preds = %76
  %84 = add i32 %54, 1
  %85 = icmp ult i32 %84, %19
  br i1 %85, label %86, label %96

86:                                               ; preds = %83
  %87 = add i32 %54, 2
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, ptr %21, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !47, !noalias !615
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, ptr %21, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47, !noalias !615
  %94 = add i32 %90, %52
  %95 = sub i32 %94, %93
  br label %96

96:                                               ; preds = %83, %81, %86
  %97 = phi i32 [ %84, %86 ], [ %54, %81 ], [ %84, %83 ]
  %98 = phi i32 [ 0, %86 ], [ %82, %81 ], [ 0, %83 ]
  %99 = phi i32 [ %95, %86 ], [ %52, %81 ], [ -1, %83 ]
  %100 = zext i32 %54 to i64
  %101 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %100, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !135
  %103 = zext i32 %53 to i64
  %104 = getelementptr inbounds x86_fp80, ptr %102, i64 %103
  store x86_fp80 %78, ptr %104, align 16, !tbaa !128
  %105 = icmp eq i64 %56, %46
  br i1 %105, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %77 = load ptr, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = zext i32 %68 to i64
  %83 = load i64, ptr %72, align 8, !tbaa !34
  br label %87

84:                                               ; preds = %115, %87
  %85 = icmp eq i64 %90, %82
  br i1 %85, label %86, label %87

86:                                               ; preds = %84, %64
  ret void

87:                                               ; preds = %70, %84
  %88 = phi i64 [ %83, %70 ], [ %92, %84 ]
  %89 = phi i64 [ 0, %70 ], [ %90, %84 ]
  %90 = add nuw nsw i64 %89, 1
  %91 = getelementptr inbounds i64, ptr %72, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !34
  %93 = and i64 %88, 4294967295
  %94 = icmp ugt i64 %92, %93
  br i1 %94, label %95, label %84

95:                                               ; preds = %87
  %96 = trunc i64 %88 to i32
  %97 = load ptr, ptr %73, align 8, !tbaa !46
  %98 = getelementptr inbounds float, ptr %77, i64 %89
  %99 = load float, ptr %98, align 4, !tbaa !95
  br label %100

100:                                              ; preds = %95, %115
  %101 = phi i64 [ %93, %95 ], [ %126, %115 ]
  %102 = phi i32 [ %96, %95 ], [ %125, %115 ]
  %103 = getelementptr inbounds i32, ptr %97, i64 %101
  %104 = load i32, ptr %103, align 4, !tbaa !47
  %105 = getelementptr inbounds float, ptr %75, i64 %101
  %106 = load float, ptr %105, align 4, !tbaa !95
  %107 = fmul float %106, %99
  br label %108

108:                                              ; preds = %108, %100
  %109 = phi i32 [ %5, %100 ], [ %110, %108 ]
  %110 = add i32 %109, -1
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i32, ptr %79, i64 %111
  %113 = load i32, ptr %112, align 4, !tbaa !47
  %114 = icmp ugt i32 %113, %104
  br i1 %114, label %108, label %115

115:                                              ; preds = %108
  %116 = fpext float %107 to x86_fp80
  %117 = sub i32 %104, %113
  %118 = zext i32 %117 to i64
  %119 = zext i32 %110 to i64
  %120 = getelementptr inbounds %"class.dealii::Vector.27", ptr %81, i64 %119, i32 3
  %121 = load ptr, ptr %120, align 8, !tbaa !135
  %122 = getelementptr inbounds x86_fp80, ptr %121, i64 %118
  %123 = load x86_fp80, ptr %122, align 16, !tbaa !128
  %124 = fadd x86_fp80 %123, %116
  store x86_fp80 %124, ptr %122, align 16, !tbaa !128
  %125 = add i32 %102, 1
  %126 = zext i32 %125 to i64
  %127 = icmp ugt i64 %92, %126
  br i1 %127, label %100, label %84
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !618
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !618
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !618
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %96, %37
  ret void

48:                                               ; preds = %41, %96
  %49 = phi i64 [ 0, %41 ], [ %56, %96 ]
  %50 = phi ptr [ %13, %41 ], [ %79, %96 ]
  %51 = phi ptr [ %16, %41 ], [ %77, %96 ]
  %52 = phi i32 [ %39, %41 ], [ %99, %96 ]
  %53 = phi i32 [ 0, %41 ], [ %98, %96 ]
  %54 = phi i32 [ %38, %41 ], [ %97, %96 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %74, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fmul float %66, %71
  %73 = fpext float %72 to x86_fp80
  %74 = fadd x86_fp80 %63, %73
  %75 = icmp eq ptr %65, %59
  br i1 %75, label %76, label %61

76:                                               ; preds = %61, %48
  %77 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %78 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %74, %61 ]
  %79 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %80 = icmp eq i32 %52, %55
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = add i32 %53, 1
  br label %96

83:                                               ; preds = %76
  %84 = add i32 %54, 1
  %85 = icmp ult i32 %84, %19
  br i1 %85, label %86, label %96

86:                                               ; preds = %83
  %87 = add i32 %54, 2
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, ptr %21, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !47, !noalias !621
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, ptr %21, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47, !noalias !621
  %94 = add i32 %90, %52
  %95 = sub i32 %94, %93
  br label %96

96:                                               ; preds = %83, %81, %86
  %97 = phi i32 [ %84, %86 ], [ %54, %81 ], [ %84, %83 ]
  %98 = phi i32 [ 0, %86 ], [ %82, %81 ], [ 0, %83 ]
  %99 = phi i32 [ %95, %86 ], [ %52, %81 ], [ -1, %83 ]
  %100 = zext i32 %54 to i64
  %101 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %100, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !135
  %103 = zext i32 %53 to i64
  %104 = getelementptr inbounds x86_fp80, ptr %102, i64 %103
  %105 = load x86_fp80, ptr %104, align 16, !tbaa !128
  %106 = fadd x86_fp80 %78, %105
  store x86_fp80 %106, ptr %104, align 16, !tbaa !128
  %107 = icmp eq i64 %56, %46
  br i1 %107, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %56, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds float, ptr %16, i64 %30
  %40 = load float, ptr %39, align 4, !tbaa !95
  br label %41

41:                                               ; preds = %36, %56
  %42 = phi i64 [ %34, %36 ], [ %67, %56 ]
  %43 = phi i32 [ %37, %36 ], [ %66, %56 ]
  %44 = getelementptr inbounds i32, ptr %38, i64 %42
  %45 = load i32, ptr %44, align 4, !tbaa !47
  %46 = getelementptr inbounds float, ptr %14, i64 %42
  %47 = load float, ptr %46, align 4, !tbaa !95
  %48 = fmul float %47, %40
  br label %49

49:                                               ; preds = %49, %41
  %50 = phi i32 [ %18, %41 ], [ %51, %49 ]
  %51 = add i32 %50, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, ptr %20, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = icmp ugt i32 %54, %45
  br i1 %55, label %49, label %56

56:                                               ; preds = %49
  %57 = fpext float %48 to x86_fp80
  %58 = sub i32 %45, %54
  %59 = zext i32 %58 to i64
  %60 = zext i32 %51 to i64
  %61 = getelementptr inbounds %"class.dealii::Vector.27", ptr %22, i64 %60, i32 3
  %62 = load ptr, ptr %61, align 8, !tbaa !135
  %63 = getelementptr inbounds x86_fp80, ptr %62, i64 %59
  %64 = load x86_fp80, ptr %63, align 16, !tbaa !128
  %65 = fadd x86_fp80 %64, %57
  store x86_fp80 %65, ptr %63, align 16, !tbaa !128
  %66 = add i32 %43, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %33, %67
  br i1 %68, label %41, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !624
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !624
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !624
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %112, %37
  ret void

52:                                               ; preds = %41, %112
  %53 = phi i64 [ 0, %41 ], [ %60, %112 ]
  %54 = phi ptr [ %13, %41 ], [ %95, %112 ]
  %55 = phi ptr [ %16, %41 ], [ %93, %112 ]
  %56 = phi i32 [ %39, %41 ], [ %115, %112 ]
  %57 = phi i32 [ 0, %41 ], [ %114, %112 ]
  %58 = phi i32 [ %38, %41 ], [ %113, %112 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %90, %78 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds float, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fmul float %69, %87
  %89 = fpext float %88 to x86_fp80
  %90 = fadd x86_fp80 %67, %89
  %91 = icmp eq ptr %79, %63
  br i1 %91, label %92, label %65

92:                                               ; preds = %78, %52
  %93 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %94 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %90, %78 ]
  %95 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %96 = icmp eq i32 %56, %59
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = add i32 %57, 1
  br label %112

99:                                               ; preds = %92
  %100 = add i32 %58, 1
  %101 = icmp ult i32 %100, %19
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = add i32 %58, 2
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %21, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !47, !noalias !627
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %21, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !47, !noalias !627
  %110 = add i32 %106, %56
  %111 = sub i32 %110, %109
  br label %112

112:                                              ; preds = %99, %97, %102
  %113 = phi i32 [ %100, %102 ], [ %58, %97 ], [ %100, %99 ]
  %114 = phi i32 [ 0, %102 ], [ %98, %97 ], [ 0, %99 ]
  %115 = phi i32 [ %111, %102 ], [ %56, %97 ], [ -1, %99 ]
  %116 = zext i32 %58 to i64
  %117 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %116, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !135
  %119 = zext i32 %57 to i64
  %120 = getelementptr inbounds x86_fp80, ptr %118, i64 %119
  store x86_fp80 %94, ptr %120, align 16, !tbaa !128
  %121 = icmp eq i64 %60, %50
  br i1 %121, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %90, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %77 = load i32, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8
  %86 = zext i32 %68 to i64
  %87 = load i64, ptr %72, align 8, !tbaa !34
  br label %91

88:                                               ; preds = %134, %91
  %89 = icmp eq i64 %94, %86
  br i1 %89, label %90, label %91

90:                                               ; preds = %88, %64
  ret void

91:                                               ; preds = %70, %88
  %92 = phi i64 [ %87, %70 ], [ %96, %88 ]
  %93 = phi i64 [ 0, %70 ], [ %94, %88 ]
  %94 = add nuw nsw i64 %93, 1
  %95 = getelementptr inbounds i64, ptr %72, i64 %94
  %96 = load i64, ptr %95, align 8, !tbaa !34
  %97 = and i64 %92, 4294967295
  %98 = icmp ugt i64 %96, %97
  br i1 %98, label %99, label %88

99:                                               ; preds = %91
  %100 = trunc i64 %92 to i32
  %101 = load ptr, ptr %73, align 8, !tbaa !46
  %102 = trunc i64 %93 to i32
  br label %103

103:                                              ; preds = %99, %134
  %104 = phi i64 [ %97, %99 ], [ %145, %134 ]
  %105 = phi i32 [ %100, %99 ], [ %144, %134 ]
  %106 = getelementptr inbounds i32, ptr %101, i64 %104
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = getelementptr inbounds float, ptr %75, i64 %104
  %109 = load float, ptr %108, align 4, !tbaa !95
  br label %110

110:                                              ; preds = %110, %103
  %111 = phi i32 [ %77, %103 ], [ %112, %110 ]
  %112 = add i32 %111, -1
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %79, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !47
  %116 = zext i32 %115 to i64
  %117 = icmp ult i64 %93, %116
  br i1 %117, label %110, label %118

118:                                              ; preds = %110
  %119 = sub i32 %102, %115
  %120 = zext i32 %119 to i64
  %121 = zext i32 %112 to i64
  %122 = getelementptr inbounds %"class.dealii::Vector.20", ptr %81, i64 %121, i32 3
  %123 = load ptr, ptr %122, align 8, !tbaa !106
  %124 = getelementptr inbounds float, ptr %123, i64 %120
  %125 = load float, ptr %124, align 4, !tbaa !95
  %126 = fmul float %109, %125
  br label %127

127:                                              ; preds = %127, %118
  %128 = phi i32 [ %5, %118 ], [ %129, %127 ]
  %129 = add i32 %128, -1
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i32, ptr %83, i64 %130
  %132 = load i32, ptr %131, align 4, !tbaa !47
  %133 = icmp ugt i32 %132, %107
  br i1 %133, label %127, label %134

134:                                              ; preds = %127
  %135 = fpext float %126 to x86_fp80
  %136 = sub i32 %107, %132
  %137 = zext i32 %136 to i64
  %138 = zext i32 %129 to i64
  %139 = getelementptr inbounds %"class.dealii::Vector.27", ptr %85, i64 %138, i32 3
  %140 = load ptr, ptr %139, align 8, !tbaa !135
  %141 = getelementptr inbounds x86_fp80, ptr %140, i64 %137
  %142 = load x86_fp80, ptr %141, align 16, !tbaa !128
  %143 = fadd x86_fp80 %142, %135
  store x86_fp80 %143, ptr %141, align 16, !tbaa !128
  %144 = add i32 %105, 1
  %145 = zext i32 %144 to i64
  %146 = icmp ugt i64 %96, %145
  br i1 %146, label %103, label %88
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !630
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !630
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !630
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %112, %37
  ret void

52:                                               ; preds = %41, %112
  %53 = phi i64 [ 0, %41 ], [ %60, %112 ]
  %54 = phi ptr [ %13, %41 ], [ %95, %112 ]
  %55 = phi ptr [ %16, %41 ], [ %93, %112 ]
  %56 = phi i32 [ %39, %41 ], [ %115, %112 ]
  %57 = phi i32 [ 0, %41 ], [ %114, %112 ]
  %58 = phi i32 [ %38, %41 ], [ %113, %112 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %90, %78 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds float, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fmul float %69, %87
  %89 = fpext float %88 to x86_fp80
  %90 = fadd x86_fp80 %67, %89
  %91 = icmp eq ptr %79, %63
  br i1 %91, label %92, label %65

92:                                               ; preds = %78, %52
  %93 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %94 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %90, %78 ]
  %95 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %96 = icmp eq i32 %56, %59
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = add i32 %57, 1
  br label %112

99:                                               ; preds = %92
  %100 = add i32 %58, 1
  %101 = icmp ult i32 %100, %19
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = add i32 %58, 2
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %21, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !47, !noalias !633
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %21, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !47, !noalias !633
  %110 = add i32 %106, %56
  %111 = sub i32 %110, %109
  br label %112

112:                                              ; preds = %99, %97, %102
  %113 = phi i32 [ %100, %102 ], [ %58, %97 ], [ %100, %99 ]
  %114 = phi i32 [ 0, %102 ], [ %98, %97 ], [ 0, %99 ]
  %115 = phi i32 [ %111, %102 ], [ %56, %97 ], [ -1, %99 ]
  %116 = zext i32 %58 to i64
  %117 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %116, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !135
  %119 = zext i32 %57 to i64
  %120 = getelementptr inbounds x86_fp80, ptr %118, i64 %119
  %121 = load x86_fp80, ptr %120, align 16, !tbaa !128
  %122 = fadd x86_fp80 %94, %121
  store x86_fp80 %122, ptr %120, align 16, !tbaa !128
  %123 = icmp eq i64 %60, %50
  br i1 %123, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %75, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %75
  %45 = phi i64 [ %38, %40 ], [ %86, %75 ]
  %46 = phi i32 [ %41, %40 ], [ %85, %75 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds float, ptr %14, i64 %45
  %50 = load float, ptr %49, align 4, !tbaa !95
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !106
  %65 = getelementptr inbounds float, ptr %64, i64 %61
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fmul float %50, %66
  br label %68

68:                                               ; preds = %68, %59
  %69 = phi i32 [ %22, %59 ], [ %70, %68 ]
  %70 = add i32 %69, -1
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i32, ptr %24, i64 %71
  %73 = load i32, ptr %72, align 4, !tbaa !47
  %74 = icmp ugt i32 %73, %48
  br i1 %74, label %68, label %75

75:                                               ; preds = %68
  %76 = fpext float %67 to x86_fp80
  %77 = sub i32 %48, %73
  %78 = zext i32 %77 to i64
  %79 = zext i32 %70 to i64
  %80 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %79, i32 3
  %81 = load ptr, ptr %80, align 8, !tbaa !135
  %82 = getelementptr inbounds x86_fp80, ptr %81, i64 %78
  %83 = load x86_fp80, ptr %82, align 16, !tbaa !128
  %84 = fadd x86_fp80 %83, %76
  store x86_fp80 %84, ptr %82, align 16, !tbaa !128
  %85 = add i32 %46, 1
  %86 = zext i32 %85 to i64
  %87 = icmp ugt i64 %37, %86
  br i1 %87, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %49, %3
  ret void

25:                                               ; preds = %13, %49
  %26 = phi i64 [ 0, %13 ], [ %30, %49 ]
  %27 = phi ptr [ %20, %13 ], [ %52, %49 ]
  %28 = phi ptr [ %19, %13 ], [ %50, %49 ]
  %29 = phi ptr [ %15, %13 ], [ %53, %49 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %47, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = fpext float %40 to x86_fp80
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %22, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %37)
  %48 = icmp eq ptr %39, %33
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %25
  %50 = phi ptr [ %28, %25 ], [ %42, %35 ]
  %51 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %47, %35 ]
  %52 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %53 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  store x86_fp80 %51, ptr %29, align 16, !tbaa !128
  %54 = icmp eq i64 %30, %23
  br i1 %54, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %20 to i64
  %33 = load i64, ptr %24, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %49, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %16
  ret void

37:                                               ; preds = %22, %34
  %38 = phi i64 [ %33, %22 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %22 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %24, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %25, align 8, !tbaa !46
  %48 = getelementptr inbounds x86_fp80, ptr %29, i64 %39
  br label %49

49:                                               ; preds = %45, %49
  %50 = phi i64 [ %43, %45 ], [ %63, %49 ]
  %51 = phi i32 [ %46, %45 ], [ %62, %49 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds float, ptr %27, i64 %50
  %55 = load float, ptr %54, align 4, !tbaa !95
  %56 = fpext float %55 to x86_fp80
  %57 = load x86_fp80, ptr %48, align 16, !tbaa !128
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %31, i64 %58
  %60 = load x86_fp80, ptr %59, align 16, !tbaa !128
  %61 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %57, x86_fp80 %60)
  store x86_fp80 %61, ptr %59, align 16, !tbaa !128
  %62 = add i32 %51, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %42, %63
  br i1 %64, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %49, %3
  ret void

25:                                               ; preds = %13, %49
  %26 = phi i64 [ 0, %13 ], [ %30, %49 ]
  %27 = phi ptr [ %20, %13 ], [ %52, %49 ]
  %28 = phi ptr [ %19, %13 ], [ %50, %49 ]
  %29 = phi ptr [ %15, %13 ], [ %53, %49 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds float, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %47, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %42, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds float, ptr %36, i64 1
  %40 = load float, ptr %36, align 4, !tbaa !95
  %41 = fpext float %40 to x86_fp80
  %42 = getelementptr inbounds i32, ptr %38, i64 1
  %43 = load i32, ptr %38, align 4, !tbaa !47
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %22, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %41, x86_fp80 %46, x86_fp80 %37)
  %48 = icmp eq ptr %39, %33
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %25
  %50 = phi ptr [ %28, %25 ], [ %42, %35 ]
  %51 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %47, %35 ]
  %52 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %53 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  %54 = load x86_fp80, ptr %29, align 16, !tbaa !128
  %55 = fadd x86_fp80 %51, %54
  store x86_fp80 %55, ptr %29, align 16, !tbaa !128
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %36, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds x86_fp80, ptr %16, i64 %26
  br label %36

36:                                               ; preds = %32, %36
  %37 = phi i64 [ %30, %32 ], [ %50, %36 ]
  %38 = phi i32 [ %33, %32 ], [ %49, %36 ]
  %39 = getelementptr inbounds i32, ptr %34, i64 %37
  %40 = load i32, ptr %39, align 4, !tbaa !47
  %41 = getelementptr inbounds float, ptr %14, i64 %37
  %42 = load float, ptr %41, align 4, !tbaa !95
  %43 = fpext float %42 to x86_fp80
  %44 = load x86_fp80, ptr %35, align 16, !tbaa !128
  %45 = zext i32 %40 to i64
  %46 = getelementptr inbounds x86_fp80, ptr %18, i64 %45
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !128
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %44, x86_fp80 %47)
  store x86_fp80 %48, ptr %46, align 16, !tbaa !128
  %49 = add i32 %38, 1
  %50 = zext i32 %49 to i64
  %51 = icmp ugt i64 %29, %50
  br i1 %51, label %36, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %65, %3
  ret void

29:                                               ; preds = %13, %65
  %30 = phi i64 [ 0, %13 ], [ %34, %65 ]
  %31 = phi ptr [ %20, %13 ], [ %68, %65 ]
  %32 = phi ptr [ %19, %13 ], [ %66, %65 ]
  %33 = phi ptr [ %15, %13 ], [ %69, %65 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %65, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %63, %53 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %32, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %62, x86_fp80 %41)
  %64 = icmp eq ptr %54, %37
  br i1 %64, label %65, label %39

65:                                               ; preds = %53, %29
  %66 = phi ptr [ %32, %29 ], [ %55, %53 ]
  %67 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %63, %53 ]
  %68 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %69 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  store x86_fp80 %67, ptr %33, align 16, !tbaa !128
  %70 = icmp eq i64 %34, %27
  br i1 %70, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %20 to i64
  %37 = load i64, ptr %24, align 8, !tbaa !34
  br label %41

38:                                               ; preds = %68, %41
  %39 = icmp eq i64 %44, %36
  br i1 %39, label %40, label %41

40:                                               ; preds = %38, %16
  ret void

41:                                               ; preds = %22, %38
  %42 = phi i64 [ %37, %22 ], [ %46, %38 ]
  %43 = phi i64 [ 0, %22 ], [ %44, %38 ]
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr inbounds i64, ptr %24, i64 %44
  %46 = load i64, ptr %45, align 8, !tbaa !34
  %47 = and i64 %42, 4294967295
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %49, label %38

49:                                               ; preds = %41
  %50 = trunc i64 %42 to i32
  %51 = load ptr, ptr %25, align 8, !tbaa !46
  %52 = trunc i64 %43 to i32
  br label %53

53:                                               ; preds = %49, %68
  %54 = phi i64 [ %47, %49 ], [ %82, %68 ]
  %55 = phi i32 [ %50, %49 ], [ %81, %68 ]
  %56 = getelementptr inbounds i32, ptr %51, i64 %54
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = getelementptr inbounds float, ptr %27, i64 %54
  %59 = load float, ptr %58, align 4, !tbaa !95
  br label %60

60:                                               ; preds = %60, %53
  %61 = phi i32 [ %29, %53 ], [ %62, %60 ]
  %62 = add i32 %61, -1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, ptr %31, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !47
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %43, %66
  br i1 %67, label %60, label %68

68:                                               ; preds = %60
  %69 = fpext float %59 to x86_fp80
  %70 = sub i32 %52, %65
  %71 = zext i32 %70 to i64
  %72 = zext i32 %62 to i64
  %73 = getelementptr inbounds %"class.dealii::Vector.27", ptr %33, i64 %72, i32 3
  %74 = load ptr, ptr %73, align 8, !tbaa !135
  %75 = getelementptr inbounds x86_fp80, ptr %74, i64 %71
  %76 = load x86_fp80, ptr %75, align 16, !tbaa !128
  %77 = zext i32 %57 to i64
  %78 = getelementptr inbounds x86_fp80, ptr %35, i64 %77
  %79 = load x86_fp80, ptr %78, align 16, !tbaa !128
  %80 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %76, x86_fp80 %79)
  store x86_fp80 %80, ptr %78, align 16, !tbaa !128
  %81 = add i32 %55, 1
  %82 = zext i32 %81 to i64
  %83 = icmp ugt i64 %46, %82
  br i1 %83, label %53, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds float, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %65, %3
  ret void

29:                                               ; preds = %13, %65
  %30 = phi i64 [ 0, %13 ], [ %34, %65 ]
  %31 = phi ptr [ %20, %13 ], [ %68, %65 ]
  %32 = phi ptr [ %19, %13 ], [ %66, %65 ]
  %33 = phi ptr [ %15, %13 ], [ %69, %65 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds float, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %65, label %39

39:                                               ; preds = %29, %53
  %40 = phi ptr [ %54, %53 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %63, %53 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %55, %53 ], [ %32, %29 ]
  %43 = load float, ptr %40, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = load i32, ptr %42, align 4, !tbaa !47
  br label %46

46:                                               ; preds = %46, %39
  %47 = phi i32 [ %22, %39 ], [ %48, %46 ]
  %48 = add i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %24, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %46, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds float, ptr %40, i64 1
  %55 = getelementptr inbounds i32, ptr %42, i64 1
  %56 = sub i32 %45, %51
  %57 = zext i32 %56 to i64
  %58 = zext i32 %48 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %62, x86_fp80 %41)
  %64 = icmp eq ptr %54, %37
  br i1 %64, label %65, label %39

65:                                               ; preds = %53, %29
  %66 = phi ptr [ %32, %29 ], [ %55, %53 ]
  %67 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %63, %53 ]
  %68 = phi ptr [ %31, %29 ], [ %37, %53 ]
  %69 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  %70 = load x86_fp80, ptr %33, align 16, !tbaa !128
  %71 = fadd x86_fp80 %67, %70
  store x86_fp80 %71, ptr %33, align 16, !tbaa !128
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %69, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %68, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds float, ptr %14, i64 %41
  %46 = load float, ptr %45, align 4, !tbaa !95
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = fpext float %46 to x86_fp80
  %57 = sub i32 %39, %52
  %58 = zext i32 %57 to i64
  %59 = zext i32 %49 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !135
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 %58
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds x86_fp80, ptr %22, i64 %64
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  %67 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %63, x86_fp80 %66)
  store x86_fp80 %67, ptr %65, align 16, !tbaa !128
  %68 = add i32 %42, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %33, %69
  br i1 %70, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !636
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !636
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !636
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %95, %37
  ret void

48:                                               ; preds = %41, %95
  %49 = phi i64 [ 0, %41 ], [ %56, %95 ]
  %50 = phi ptr [ %13, %41 ], [ %78, %95 ]
  %51 = phi ptr [ %16, %41 ], [ %76, %95 ]
  %52 = phi i32 [ %39, %41 ], [ %98, %95 ]
  %53 = phi i32 [ 0, %41 ], [ %97, %95 ]
  %54 = phi i32 [ %38, %41 ], [ %96, %95 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %73, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = fpext float %66 to x86_fp80
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds x86_fp80, ptr %43, i64 %70
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %72, x86_fp80 %63)
  %74 = icmp eq ptr %65, %59
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %48
  %76 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %77 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %73, %61 ]
  %78 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %79 = icmp eq i32 %52, %55
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = add i32 %53, 1
  br label %95

82:                                               ; preds = %75
  %83 = add i32 %54, 1
  %84 = icmp ult i32 %83, %19
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = add i32 %54, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %21, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !47, !noalias !639
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i32, ptr %21, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !47, !noalias !639
  %93 = add i32 %89, %52
  %94 = sub i32 %93, %92
  br label %95

95:                                               ; preds = %82, %80, %85
  %96 = phi i32 [ %83, %85 ], [ %54, %80 ], [ %83, %82 ]
  %97 = phi i32 [ 0, %85 ], [ %81, %80 ], [ 0, %82 ]
  %98 = phi i32 [ %94, %85 ], [ %52, %80 ], [ -1, %82 ]
  %99 = zext i32 %54 to i64
  %100 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %99, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !135
  %102 = zext i32 %53 to i64
  %103 = getelementptr inbounds x86_fp80, ptr %101, i64 %102
  store x86_fp80 %77, ptr %103, align 16, !tbaa !128
  %104 = icmp eq i64 %56, %46
  br i1 %104, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %77 = load ptr, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = zext i32 %68 to i64
  %83 = load i64, ptr %72, align 8, !tbaa !34
  br label %87

84:                                               ; preds = %114, %87
  %85 = icmp eq i64 %90, %82
  br i1 %85, label %86, label %87

86:                                               ; preds = %84, %64
  ret void

87:                                               ; preds = %70, %84
  %88 = phi i64 [ %83, %70 ], [ %92, %84 ]
  %89 = phi i64 [ 0, %70 ], [ %90, %84 ]
  %90 = add nuw nsw i64 %89, 1
  %91 = getelementptr inbounds i64, ptr %72, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !34
  %93 = and i64 %88, 4294967295
  %94 = icmp ugt i64 %92, %93
  br i1 %94, label %95, label %84

95:                                               ; preds = %87
  %96 = trunc i64 %88 to i32
  %97 = load ptr, ptr %73, align 8, !tbaa !46
  %98 = getelementptr inbounds x86_fp80, ptr %77, i64 %89
  br label %99

99:                                               ; preds = %95, %114
  %100 = phi i64 [ %93, %95 ], [ %125, %114 ]
  %101 = phi i32 [ %96, %95 ], [ %124, %114 ]
  %102 = getelementptr inbounds i32, ptr %97, i64 %100
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = getelementptr inbounds float, ptr %75, i64 %100
  %105 = load float, ptr %104, align 4, !tbaa !95
  %106 = load x86_fp80, ptr %98, align 16, !tbaa !128
  br label %107

107:                                              ; preds = %107, %99
  %108 = phi i32 [ %5, %99 ], [ %109, %107 ]
  %109 = add i32 %108, -1
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, ptr %79, i64 %110
  %112 = load i32, ptr %111, align 4, !tbaa !47
  %113 = icmp ugt i32 %112, %103
  br i1 %113, label %107, label %114

114:                                              ; preds = %107
  %115 = fpext float %105 to x86_fp80
  %116 = sub i32 %103, %112
  %117 = zext i32 %116 to i64
  %118 = zext i32 %109 to i64
  %119 = getelementptr inbounds %"class.dealii::Vector.27", ptr %81, i64 %118, i32 3
  %120 = load ptr, ptr %119, align 8, !tbaa !135
  %121 = getelementptr inbounds x86_fp80, ptr %120, i64 %117
  %122 = load x86_fp80, ptr %121, align 16, !tbaa !128
  %123 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %115, x86_fp80 %106, x86_fp80 %122)
  store x86_fp80 %123, ptr %121, align 16, !tbaa !128
  %124 = add i32 %101, 1
  %125 = zext i32 %124 to i64
  %126 = icmp ugt i64 %92, %125
  br i1 %126, label %99, label %84
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !642
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !642
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !642
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %95, %37
  ret void

48:                                               ; preds = %41, %95
  %49 = phi i64 [ 0, %41 ], [ %56, %95 ]
  %50 = phi ptr [ %13, %41 ], [ %78, %95 ]
  %51 = phi ptr [ %16, %41 ], [ %76, %95 ]
  %52 = phi i32 [ %39, %41 ], [ %98, %95 ]
  %53 = phi i32 [ 0, %41 ], [ %97, %95 ]
  %54 = phi i32 [ %38, %41 ], [ %96, %95 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds float, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %73, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %68, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds float, ptr %62, i64 1
  %66 = load float, ptr %62, align 4, !tbaa !95
  %67 = fpext float %66 to x86_fp80
  %68 = getelementptr inbounds i32, ptr %64, i64 1
  %69 = load i32, ptr %64, align 4, !tbaa !47
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds x86_fp80, ptr %43, i64 %70
  %72 = load x86_fp80, ptr %71, align 16, !tbaa !128
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %67, x86_fp80 %72, x86_fp80 %63)
  %74 = icmp eq ptr %65, %59
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %48
  %76 = phi ptr [ %51, %48 ], [ %68, %61 ]
  %77 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %73, %61 ]
  %78 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %79 = icmp eq i32 %52, %55
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = add i32 %53, 1
  br label %95

82:                                               ; preds = %75
  %83 = add i32 %54, 1
  %84 = icmp ult i32 %83, %19
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = add i32 %54, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %21, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !47, !noalias !645
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i32, ptr %21, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !47, !noalias !645
  %93 = add i32 %89, %52
  %94 = sub i32 %93, %92
  br label %95

95:                                               ; preds = %82, %80, %85
  %96 = phi i32 [ %83, %85 ], [ %54, %80 ], [ %83, %82 ]
  %97 = phi i32 [ 0, %85 ], [ %81, %80 ], [ 0, %82 ]
  %98 = phi i32 [ %94, %85 ], [ %52, %80 ], [ -1, %82 ]
  %99 = zext i32 %54 to i64
  %100 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %99, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !135
  %102 = zext i32 %53 to i64
  %103 = getelementptr inbounds x86_fp80, ptr %101, i64 %102
  %104 = load x86_fp80, ptr %103, align 16, !tbaa !128
  %105 = fadd x86_fp80 %77, %104
  store x86_fp80 %105, ptr %103, align 16, !tbaa !128
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %30
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %66, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %65, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds float, ptr %14, i64 %41
  %46 = load float, ptr %45, align 4, !tbaa !95
  %47 = load x86_fp80, ptr %39, align 16, !tbaa !128
  br label %48

48:                                               ; preds = %48, %40
  %49 = phi i32 [ %18, %40 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %44
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = fpext float %46 to x86_fp80
  %57 = sub i32 %44, %53
  %58 = zext i32 %57 to i64
  %59 = zext i32 %50 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.27", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !135
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 %58
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %56, x86_fp80 %47, x86_fp80 %63)
  store x86_fp80 %64, ptr %62, align 16, !tbaa !128
  %65 = add i32 %42, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %33, %66
  br i1 %67, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE5vmultINS_11BlockVectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !648
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !648
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !648
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %111, %37
  ret void

52:                                               ; preds = %41, %111
  %53 = phi i64 [ 0, %41 ], [ %60, %111 ]
  %54 = phi ptr [ %13, %41 ], [ %94, %111 ]
  %55 = phi ptr [ %16, %41 ], [ %92, %111 ]
  %56 = phi i32 [ %39, %41 ], [ %114, %111 ]
  %57 = phi i32 [ 0, %41 ], [ %113, %111 ]
  %58 = phi i32 [ %38, %41 ], [ %112, %111 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %91, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %89, %79 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = fpext float %69 to x86_fp80
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !135
  %87 = getelementptr inbounds x86_fp80, ptr %86, i64 %83
  %88 = load x86_fp80, ptr %87, align 16, !tbaa !128
  %89 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %88, x86_fp80 %67)
  %90 = icmp eq ptr %80, %63
  br i1 %90, label %91, label %65

91:                                               ; preds = %79, %52
  %92 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %93 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %89, %79 ]
  %94 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %95 = icmp eq i32 %56, %59
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = add i32 %57, 1
  br label %111

98:                                               ; preds = %91
  %99 = add i32 %58, 1
  %100 = icmp ult i32 %99, %19
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = add i32 %58, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %21, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !47, !noalias !651
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds i32, ptr %21, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !47, !noalias !651
  %109 = add i32 %105, %56
  %110 = sub i32 %109, %108
  br label %111

111:                                              ; preds = %98, %96, %101
  %112 = phi i32 [ %99, %101 ], [ %58, %96 ], [ %99, %98 ]
  %113 = phi i32 [ 0, %101 ], [ %97, %96 ], [ 0, %98 ]
  %114 = phi i32 [ %110, %101 ], [ %56, %96 ], [ -1, %98 ]
  %115 = zext i32 %58 to i64
  %116 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %115, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !135
  %118 = zext i32 %57 to i64
  %119 = getelementptr inbounds x86_fp80, ptr %117, i64 %118
  store x86_fp80 %93, ptr %119, align 16, !tbaa !128
  %120 = icmp eq i64 %60, %50
  br i1 %120, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE6TvmultINS_11BlockVectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %90, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %77 = load i32, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8
  %86 = zext i32 %68 to i64
  %87 = load i64, ptr %72, align 8, !tbaa !34
  br label %91

88:                                               ; preds = %133, %91
  %89 = icmp eq i64 %94, %86
  br i1 %89, label %90, label %91

90:                                               ; preds = %88, %64
  ret void

91:                                               ; preds = %70, %88
  %92 = phi i64 [ %87, %70 ], [ %96, %88 ]
  %93 = phi i64 [ 0, %70 ], [ %94, %88 ]
  %94 = add nuw nsw i64 %93, 1
  %95 = getelementptr inbounds i64, ptr %72, i64 %94
  %96 = load i64, ptr %95, align 8, !tbaa !34
  %97 = and i64 %92, 4294967295
  %98 = icmp ugt i64 %96, %97
  br i1 %98, label %99, label %88

99:                                               ; preds = %91
  %100 = trunc i64 %92 to i32
  %101 = load ptr, ptr %73, align 8, !tbaa !46
  %102 = trunc i64 %93 to i32
  br label %103

103:                                              ; preds = %99, %133
  %104 = phi i64 [ %97, %99 ], [ %144, %133 ]
  %105 = phi i32 [ %100, %99 ], [ %143, %133 ]
  %106 = getelementptr inbounds i32, ptr %101, i64 %104
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = getelementptr inbounds float, ptr %75, i64 %104
  %109 = load float, ptr %108, align 4, !tbaa !95
  br label %110

110:                                              ; preds = %110, %103
  %111 = phi i32 [ %77, %103 ], [ %112, %110 ]
  %112 = add i32 %111, -1
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %79, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !47
  %116 = zext i32 %115 to i64
  %117 = icmp ult i64 %93, %116
  br i1 %117, label %110, label %118

118:                                              ; preds = %110
  %119 = sub i32 %102, %115
  %120 = zext i32 %119 to i64
  %121 = zext i32 %112 to i64
  %122 = getelementptr inbounds %"class.dealii::Vector.27", ptr %81, i64 %121, i32 3
  %123 = load ptr, ptr %122, align 8, !tbaa !135
  %124 = getelementptr inbounds x86_fp80, ptr %123, i64 %120
  %125 = load x86_fp80, ptr %124, align 16, !tbaa !128
  br label %126

126:                                              ; preds = %126, %118
  %127 = phi i32 [ %5, %118 ], [ %128, %126 ]
  %128 = add i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, ptr %83, i64 %129
  %131 = load i32, ptr %130, align 4, !tbaa !47
  %132 = icmp ugt i32 %131, %107
  br i1 %132, label %126, label %133

133:                                              ; preds = %126
  %134 = fpext float %109 to x86_fp80
  %135 = sub i32 %107, %131
  %136 = zext i32 %135 to i64
  %137 = zext i32 %128 to i64
  %138 = getelementptr inbounds %"class.dealii::Vector.27", ptr %85, i64 %137, i32 3
  %139 = load ptr, ptr %138, align 8, !tbaa !135
  %140 = getelementptr inbounds x86_fp80, ptr %139, i64 %136
  %141 = load x86_fp80, ptr %140, align 16, !tbaa !128
  %142 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %134, x86_fp80 %125, x86_fp80 %141)
  store x86_fp80 %142, ptr %140, align 16, !tbaa !128
  %143 = add i32 %105, 1
  %144 = zext i32 %143 to i64
  %145 = icmp ugt i64 %96, %144
  br i1 %145, label %103, label %88
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE9vmult_addINS_11BlockVectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds float, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !654
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !654
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !654
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %111, %37
  ret void

52:                                               ; preds = %41, %111
  %53 = phi i64 [ 0, %41 ], [ %60, %111 ]
  %54 = phi ptr [ %13, %41 ], [ %94, %111 ]
  %55 = phi ptr [ %16, %41 ], [ %92, %111 ]
  %56 = phi i32 [ %39, %41 ], [ %114, %111 ]
  %57 = phi i32 [ 0, %41 ], [ %113, %111 ]
  %58 = phi i32 [ %38, %41 ], [ %112, %111 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds float, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %91, label %65

65:                                               ; preds = %52, %79
  %66 = phi ptr [ %80, %79 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %89, %79 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %81, %79 ], [ %55, %52 ]
  %69 = load float, ptr %66, align 4, !tbaa !95
  %70 = fpext float %69 to x86_fp80
  %71 = load i32, ptr %68, align 4, !tbaa !47
  br label %72

72:                                               ; preds = %72, %65
  %73 = phi i32 [ %43, %65 ], [ %74, %72 ]
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %45, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !47
  %78 = icmp ugt i32 %77, %71
  br i1 %78, label %72, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds float, ptr %66, i64 1
  %81 = getelementptr inbounds i32, ptr %68, i64 1
  %82 = sub i32 %71, %77
  %83 = zext i32 %82 to i64
  %84 = zext i32 %74 to i64
  %85 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %84, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !135
  %87 = getelementptr inbounds x86_fp80, ptr %86, i64 %83
  %88 = load x86_fp80, ptr %87, align 16, !tbaa !128
  %89 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %70, x86_fp80 %88, x86_fp80 %67)
  %90 = icmp eq ptr %80, %63
  br i1 %90, label %91, label %65

91:                                               ; preds = %79, %52
  %92 = phi ptr [ %55, %52 ], [ %81, %79 ]
  %93 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %89, %79 ]
  %94 = phi ptr [ %54, %52 ], [ %63, %79 ]
  %95 = icmp eq i32 %56, %59
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = add i32 %57, 1
  br label %111

98:                                               ; preds = %91
  %99 = add i32 %58, 1
  %100 = icmp ult i32 %99, %19
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = add i32 %58, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %21, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !47, !noalias !657
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds i32, ptr %21, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !47, !noalias !657
  %109 = add i32 %105, %56
  %110 = sub i32 %109, %108
  br label %111

111:                                              ; preds = %98, %96, %101
  %112 = phi i32 [ %99, %101 ], [ %58, %96 ], [ %99, %98 ]
  %113 = phi i32 [ 0, %101 ], [ %97, %96 ], [ 0, %98 ]
  %114 = phi i32 [ %110, %101 ], [ %56, %96 ], [ -1, %98 ]
  %115 = zext i32 %58 to i64
  %116 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %115, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !135
  %118 = zext i32 %57 to i64
  %119 = getelementptr inbounds x86_fp80, ptr %117, i64 %118
  %120 = load x86_fp80, ptr %119, align 16, !tbaa !128
  %121 = fadd x86_fp80 %93, %120
  store x86_fp80 %121, ptr %119, align 16, !tbaa !128
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIfE10Tvmult_addINS_11BlockVectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.18", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %85, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %84, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds float, ptr %14, i64 %45
  %50 = load float, ptr %49, align 4, !tbaa !95
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !135
  %65 = getelementptr inbounds x86_fp80, ptr %64, i64 %61
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext float %50 to x86_fp80
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !135
  %81 = getelementptr inbounds x86_fp80, ptr %80, i64 %77
  %82 = load x86_fp80, ptr %81, align 16, !tbaa !128
  %83 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %75, x86_fp80 %66, x86_fp80 %82)
  store x86_fp80 %83, ptr %81, align 16, !tbaa !128
  %84 = add i32 %46, 1
  %85 = zext i32 %84 to i64
  %86 = icmp ugt i64 %37, %85
  br i1 %86, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, ptr %22, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fpext double %45 to x86_fp80
  %47 = fpext double %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to double
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %53 = phi double [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds double, ptr %28, i64 1
  store double %53, ptr %28, align 8, !tbaa !30
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %45, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds double, ptr %25, i64 %35
  br label %45

45:                                               ; preds = %41, %45
  %46 = phi i64 [ %39, %41 ], [ %61, %45 ]
  %47 = phi i32 [ %42, %41 ], [ %60, %45 ]
  %48 = getelementptr inbounds i32, ptr %43, i64 %46
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = getelementptr inbounds x86_fp80, ptr %23, i64 %46
  %51 = load x86_fp80, ptr %50, align 16, !tbaa !128
  %52 = load double, ptr %44, align 8, !tbaa !30
  %53 = fpext double %52 to x86_fp80
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds double, ptr %27, i64 %54
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = fpext double %56 to x86_fp80
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %51, x86_fp80 %53, x86_fp80 %57)
  %59 = fptrunc x86_fp80 %58 to double
  store double %59, ptr %55, align 8, !tbaa !30
  %60 = add i32 %47, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %38, %61
  br i1 %62, label %45, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, ptr %22, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fpext double %45 to x86_fp80
  %47 = fpext double %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to double
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %53 = phi double [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds double, ptr %28, i64 1
  %56 = load double, ptr %28, align 8, !tbaa !30
  %57 = fadd double %53, %56
  store double %57, ptr %28, align 8, !tbaa !30
  %58 = icmp eq i64 %30, %23
  br i1 %58, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %36, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds double, ptr %16, i64 %26
  br label %36

36:                                               ; preds = %32, %36
  %37 = phi i64 [ %30, %32 ], [ %52, %36 ]
  %38 = phi i32 [ %33, %32 ], [ %51, %36 ]
  %39 = getelementptr inbounds i32, ptr %34, i64 %37
  %40 = load i32, ptr %39, align 4, !tbaa !47
  %41 = getelementptr inbounds x86_fp80, ptr %14, i64 %37
  %42 = load x86_fp80, ptr %41, align 16, !tbaa !128
  %43 = load double, ptr %35, align 8, !tbaa !30
  %44 = fpext double %43 to x86_fp80
  %45 = zext i32 %40 to i64
  %46 = getelementptr inbounds double, ptr %18, i64 %45
  %47 = load double, ptr %46, align 8, !tbaa !30
  %48 = fpext double %47 to x86_fp80
  %49 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %42, x86_fp80 %44, x86_fp80 %48)
  %50 = fptrunc x86_fp80 %49 to double
  store double %50, ptr %46, align 8, !tbaa !30
  %51 = add i32 %38, 1
  %52 = zext i32 %51 to i64
  %53 = icmp ugt i64 %29, %52
  br i1 %53, label %36, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi double [ %65, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !53
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = fpext double %61 to x86_fp80
  %63 = fpext double %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to double
  %66 = icmp eq ptr %53, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %52, %29
  %68 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %69 = phi double [ 0.000000e+00, %29 ], [ %65, %52 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %71 = getelementptr inbounds double, ptr %32, i64 1
  store double %69, ptr %32, align 8, !tbaa !30
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %80, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %79, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds x86_fp80, ptr %23, i64 %50
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = sub i32 %48, %61
  %66 = zext i32 %65 to i64
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"class.dealii::Vector", ptr %29, i64 %67, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !53
  %70 = getelementptr inbounds double, ptr %69, i64 %66
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fpext double %71 to x86_fp80
  %73 = zext i32 %53 to i64
  %74 = getelementptr inbounds double, ptr %31, i64 %73
  %75 = load double, ptr %74, align 8, !tbaa !30
  %76 = fpext double %75 to x86_fp80
  %77 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %55, x86_fp80 %72, x86_fp80 %76)
  %78 = fptrunc x86_fp80 %77 to double
  store double %78, ptr %74, align 8, !tbaa !30
  %79 = add i32 %51, 1
  %80 = zext i32 %79 to i64
  %81 = icmp ugt i64 %42, %80
  br i1 %81, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi double [ %65, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !53
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = fpext double %61 to x86_fp80
  %63 = fpext double %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to double
  %66 = icmp eq ptr %53, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %52, %29
  %68 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %69 = phi double [ 0.000000e+00, %29 ], [ %65, %52 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %71 = getelementptr inbounds double, ptr %32, i64 1
  %72 = load double, ptr %32, align 8, !tbaa !30
  %73 = fadd double %69, %72
  store double %73, ptr %32, align 8, !tbaa !30
  %74 = icmp eq i64 %34, %27
  br i1 %74, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %71, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %70, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = fpext double %62 to x86_fp80
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds double, ptr %22, i64 %64
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = fpext double %66 to x86_fp80
  %68 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %63, x86_fp80 %67)
  %69 = fptrunc x86_fp80 %68 to double
  store double %69, ptr %65, align 8, !tbaa !30
  %70 = add i32 %42, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %33, %71
  br i1 %72, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !660
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !660
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !660
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds double, ptr %43, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fpext double %71 to x86_fp80
  %73 = fpext double %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to double
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %79 = phi double [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !663
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !663
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !53
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds double, ptr %103, i64 %104
  store double %79, ptr %105, align 8, !tbaa !30
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds double, ptr %65, i64 %77
  br label %87

87:                                               ; preds = %83, %102
  %88 = phi i64 [ %81, %83 ], [ %115, %102 ]
  %89 = phi i32 [ %84, %83 ], [ %114, %102 ]
  %90 = getelementptr inbounds i32, ptr %85, i64 %88
  %91 = load i32, ptr %90, align 4, !tbaa !47
  %92 = getelementptr inbounds x86_fp80, ptr %63, i64 %88
  %93 = load x86_fp80, ptr %92, align 16, !tbaa !128
  %94 = load double, ptr %86, align 8, !tbaa !30
  br label %95

95:                                               ; preds = %95, %87
  %96 = phi i32 [ %5, %87 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %91
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = fpext double %94 to x86_fp80
  %104 = sub i32 %91, %100
  %105 = zext i32 %104 to i64
  %106 = zext i32 %97 to i64
  %107 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %106, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !53
  %109 = getelementptr inbounds double, ptr %108, i64 %105
  %110 = load double, ptr %109, align 8, !tbaa !30
  %111 = fpext double %110 to x86_fp80
  %112 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %93, x86_fp80 %103, x86_fp80 %111)
  %113 = fptrunc x86_fp80 %112 to double
  store double %113, ptr %109, align 8, !tbaa !30
  %114 = add i32 %89, 1
  %115 = zext i32 %114 to i64
  %116 = icmp ugt i64 %80, %115
  br i1 %116, label %87, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !666
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !666
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !666
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds double, ptr %43, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fpext double %71 to x86_fp80
  %73 = fpext double %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to double
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %79 = phi double [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !669
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !669
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !53
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds double, ptr %103, i64 %104
  %106 = load double, ptr %105, align 8, !tbaa !30
  %107 = fadd double %79, %106
  store double %107, ptr %105, align 8, !tbaa !30
  %108 = icmp eq i64 %56, %46
  br i1 %108, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds double, ptr %16, i64 %30
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %68, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %67, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = load double, ptr %39, align 8, !tbaa !30
  br label %48

48:                                               ; preds = %48, %40
  %49 = phi i32 [ %18, %40 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %44
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = fpext double %47 to x86_fp80
  %57 = sub i32 %44, %53
  %58 = zext i32 %57 to i64
  %59 = zext i32 %50 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !53
  %62 = getelementptr inbounds double, ptr %61, i64 %58
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = fpext double %63 to x86_fp80
  %65 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %56, x86_fp80 %64)
  %66 = fptrunc x86_fp80 %65 to double
  store double %66, ptr %62, align 8, !tbaa !30
  %67 = add i32 %42, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !672
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !672
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !672
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi double [ %91, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !53
  %86 = getelementptr inbounds double, ptr %85, i64 %82
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = fpext double %87 to x86_fp80
  %89 = fpext double %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to double
  %92 = icmp eq ptr %79, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %78, %52
  %94 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %95 = phi double [ 0.000000e+00, %52 ], [ %91, %78 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !675
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !675
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !53
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds double, ptr %119, i64 %120
  store double %95, ptr %121, align 8, !tbaa !30
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %134, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %133, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds x86_fp80, ptr %63, i64 %92
  %97 = load x86_fp80, ptr %96, align 16, !tbaa !128
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !53
  %112 = getelementptr inbounds double, ptr %111, i64 %108
  %113 = load double, ptr %112, align 8, !tbaa !30
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = fpext double %113 to x86_fp80
  %123 = sub i32 %95, %119
  %124 = zext i32 %123 to i64
  %125 = zext i32 %116 to i64
  %126 = getelementptr inbounds %"class.dealii::Vector", ptr %73, i64 %125, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !53
  %128 = getelementptr inbounds double, ptr %127, i64 %124
  %129 = load double, ptr %128, align 8, !tbaa !30
  %130 = fpext double %129 to x86_fp80
  %131 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %97, x86_fp80 %122, x86_fp80 %130)
  %132 = fptrunc x86_fp80 %131 to double
  store double %132, ptr %128, align 8, !tbaa !30
  %133 = add i32 %93, 1
  %134 = zext i32 %133 to i64
  %135 = icmp ugt i64 %84, %134
  br i1 %135, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !678
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !678
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !678
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi double [ %91, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !53
  %86 = getelementptr inbounds double, ptr %85, i64 %82
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = fpext double %87 to x86_fp80
  %89 = fpext double %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to double
  %92 = icmp eq ptr %79, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %78, %52
  %94 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %95 = phi double [ 0.000000e+00, %52 ], [ %91, %78 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !681
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !681
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !53
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds double, ptr %119, i64 %120
  %122 = load double, ptr %121, align 8, !tbaa !30
  %123 = fadd double %95, %122
  store double %123, ptr %121, align 8, !tbaa !30
  %124 = icmp eq i64 %60, %50
  br i1 %124, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIdEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %87, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %86, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds x86_fp80, ptr %14, i64 %45
  %50 = load x86_fp80, ptr %49, align 16, !tbaa !128
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !53
  %65 = getelementptr inbounds double, ptr %64, i64 %61
  %66 = load double, ptr %65, align 8, !tbaa !30
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext double %66 to x86_fp80
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !53
  %81 = getelementptr inbounds double, ptr %80, i64 %77
  %82 = load double, ptr %81, align 8, !tbaa !30
  %83 = fpext double %82 to x86_fp80
  %84 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %50, x86_fp80 %75, x86_fp80 %83)
  %85 = fptrunc x86_fp80 %84 to double
  store double %85, ptr %81, align 8, !tbaa !30
  %86 = add i32 %46, 1
  %87 = zext i32 %86 to i64
  %88 = icmp ugt i64 %37, %87
  br i1 %88, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to x86_fp80
  %47 = fpext double %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to double
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %53 = phi double [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds double, ptr %28, i64 1
  store double %53, ptr %28, align 8, !tbaa !30
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %47, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds float, ptr %25, i64 %35
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to x86_fp80
  br label %47

47:                                               ; preds = %41, %47
  %48 = phi i64 [ %39, %41 ], [ %61, %47 ]
  %49 = phi i32 [ %42, %41 ], [ %60, %47 ]
  %50 = getelementptr inbounds i32, ptr %43, i64 %48
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = getelementptr inbounds x86_fp80, ptr %23, i64 %48
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds double, ptr %27, i64 %54
  %56 = load double, ptr %55, align 8, !tbaa !30
  %57 = fpext double %56 to x86_fp80
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %53, x86_fp80 %46, x86_fp80 %57)
  %59 = fptrunc x86_fp80 %58 to double
  store double %59, ptr %55, align 8, !tbaa !30
  %60 = add i32 %49, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %38, %61
  br i1 %62, label %47, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to x86_fp80
  %47 = fpext double %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to double
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %53 = phi double [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds double, ptr %28, i64 1
  %56 = load double, ptr %28, align 8, !tbaa !30
  %57 = fadd double %53, %56
  store double %57, ptr %28, align 8, !tbaa !30
  %58 = icmp eq i64 %30, %23
  br i1 %58, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %38, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds float, ptr %16, i64 %26
  %36 = load float, ptr %35, align 4, !tbaa !95
  %37 = fpext float %36 to x86_fp80
  br label %38

38:                                               ; preds = %32, %38
  %39 = phi i64 [ %30, %32 ], [ %52, %38 ]
  %40 = phi i32 [ %33, %32 ], [ %51, %38 ]
  %41 = getelementptr inbounds i32, ptr %34, i64 %39
  %42 = load i32, ptr %41, align 4, !tbaa !47
  %43 = getelementptr inbounds x86_fp80, ptr %14, i64 %39
  %44 = load x86_fp80, ptr %43, align 16, !tbaa !128
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds double, ptr %18, i64 %45
  %47 = load double, ptr %46, align 8, !tbaa !30
  %48 = fpext double %47 to x86_fp80
  %49 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %37, x86_fp80 %48)
  %50 = fptrunc x86_fp80 %49 to double
  store double %50, ptr %46, align 8, !tbaa !30
  %51 = add i32 %40, 1
  %52 = zext i32 %51 to i64
  %53 = icmp ugt i64 %29, %52
  br i1 %53, label %38, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi double [ %65, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to x86_fp80
  %63 = fpext double %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to double
  %66 = icmp eq ptr %53, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %52, %29
  %68 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %69 = phi double [ 0.000000e+00, %29 ], [ %65, %52 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %71 = getelementptr inbounds double, ptr %32, i64 1
  store double %69, ptr %32, align 8, !tbaa !30
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %80, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %79, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds x86_fp80, ptr %23, i64 %50
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = sub i32 %48, %61
  %66 = zext i32 %65 to i64
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"class.dealii::Vector.20", ptr %29, i64 %67, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !106
  %70 = getelementptr inbounds float, ptr %69, i64 %66
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to x86_fp80
  %73 = zext i32 %53 to i64
  %74 = getelementptr inbounds double, ptr %31, i64 %73
  %75 = load double, ptr %74, align 8, !tbaa !30
  %76 = fpext double %75 to x86_fp80
  %77 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %55, x86_fp80 %72, x86_fp80 %76)
  %78 = fptrunc x86_fp80 %77 to double
  store double %78, ptr %74, align 8, !tbaa !30
  %79 = add i32 %51, 1
  %80 = zext i32 %79 to i64
  %81 = icmp ugt i64 %42, %80
  br i1 %81, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi double [ %65, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to x86_fp80
  %63 = fpext double %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to double
  %66 = icmp eq ptr %53, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %52, %29
  %68 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %69 = phi double [ 0.000000e+00, %29 ], [ %65, %52 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %71 = getelementptr inbounds double, ptr %32, i64 1
  %72 = load double, ptr %32, align 8, !tbaa !30
  %73 = fadd double %69, %72
  store double %73, ptr %32, align 8, !tbaa !30
  %74 = icmp eq i64 %34, %27
  br i1 %74, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %71, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %70, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = getelementptr inbounds float, ptr %60, i64 %57
  %62 = load float, ptr %61, align 4, !tbaa !95
  %63 = fpext float %62 to x86_fp80
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds double, ptr %22, i64 %64
  %66 = load double, ptr %65, align 8, !tbaa !30
  %67 = fpext double %66 to x86_fp80
  %68 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %63, x86_fp80 %67)
  %69 = fptrunc x86_fp80 %68 to double
  store double %69, ptr %65, align 8, !tbaa !30
  %70 = add i32 %42, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %33, %71
  br i1 %72, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !684
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !684
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !684
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to x86_fp80
  %73 = fpext double %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to double
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %79 = phi double [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !687
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !687
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !53
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds double, ptr %103, i64 %104
  store double %79, ptr %105, align 8, !tbaa !30
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %103, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds float, ptr %65, i64 %77
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to x86_fp80
  br label %89

89:                                               ; preds = %83, %103
  %90 = phi i64 [ %81, %83 ], [ %115, %103 ]
  %91 = phi i32 [ %84, %83 ], [ %114, %103 ]
  %92 = getelementptr inbounds i32, ptr %85, i64 %90
  %93 = load i32, ptr %92, align 4, !tbaa !47
  %94 = getelementptr inbounds x86_fp80, ptr %63, i64 %90
  %95 = load x86_fp80, ptr %94, align 16, !tbaa !128
  br label %96

96:                                               ; preds = %96, %89
  %97 = phi i32 [ %5, %89 ], [ %98, %96 ]
  %98 = add i32 %97, -1
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i32, ptr %67, i64 %99
  %101 = load i32, ptr %100, align 4, !tbaa !47
  %102 = icmp ugt i32 %101, %93
  br i1 %102, label %96, label %103

103:                                              ; preds = %96
  %104 = sub i32 %93, %101
  %105 = zext i32 %104 to i64
  %106 = zext i32 %98 to i64
  %107 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %106, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !53
  %109 = getelementptr inbounds double, ptr %108, i64 %105
  %110 = load double, ptr %109, align 8, !tbaa !30
  %111 = fpext double %110 to x86_fp80
  %112 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %95, x86_fp80 %88, x86_fp80 %111)
  %113 = fptrunc x86_fp80 %112 to double
  store double %113, ptr %109, align 8, !tbaa !30
  %114 = add i32 %91, 1
  %115 = zext i32 %114 to i64
  %116 = icmp ugt i64 %80, %115
  br i1 %116, label %89, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !690
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !690
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !690
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to x86_fp80
  %73 = fpext double %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to double
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %79 = phi double [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !693
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !693
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !53
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds double, ptr %103, i64 %104
  %106 = load double, ptr %105, align 8, !tbaa !30
  %107 = fadd double %79, %106
  store double %107, ptr %105, align 8, !tbaa !30
  %108 = icmp eq i64 %56, %46
  br i1 %108, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %56, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds float, ptr %16, i64 %30
  %40 = load float, ptr %39, align 4, !tbaa !95
  %41 = fpext float %40 to x86_fp80
  br label %42

42:                                               ; preds = %36, %56
  %43 = phi i64 [ %34, %36 ], [ %68, %56 ]
  %44 = phi i32 [ %37, %36 ], [ %67, %56 ]
  %45 = getelementptr inbounds i32, ptr %38, i64 %43
  %46 = load i32, ptr %45, align 4, !tbaa !47
  %47 = getelementptr inbounds x86_fp80, ptr %14, i64 %43
  %48 = load x86_fp80, ptr %47, align 16, !tbaa !128
  br label %49

49:                                               ; preds = %49, %42
  %50 = phi i32 [ %18, %42 ], [ %51, %49 ]
  %51 = add i32 %50, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, ptr %20, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = icmp ugt i32 %54, %46
  br i1 %55, label %49, label %56

56:                                               ; preds = %49
  %57 = sub i32 %46, %54
  %58 = zext i32 %57 to i64
  %59 = zext i32 %51 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !53
  %62 = getelementptr inbounds double, ptr %61, i64 %58
  %63 = load double, ptr %62, align 8, !tbaa !30
  %64 = fpext double %63 to x86_fp80
  %65 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %48, x86_fp80 %41, x86_fp80 %64)
  %66 = fptrunc x86_fp80 %65 to double
  store double %66, ptr %62, align 8, !tbaa !30
  %67 = add i32 %44, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %42, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !696
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !696
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !696
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi double [ %91, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to x86_fp80
  %89 = fpext double %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to double
  %92 = icmp eq ptr %79, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %78, %52
  %94 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %95 = phi double [ 0.000000e+00, %52 ], [ %91, %78 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !699
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !699
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !53
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds double, ptr %119, i64 %120
  store double %95, ptr %121, align 8, !tbaa !30
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %134, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %133, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds x86_fp80, ptr %63, i64 %92
  %97 = load x86_fp80, ptr %96, align 16, !tbaa !128
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !106
  %112 = getelementptr inbounds float, ptr %111, i64 %108
  %113 = load float, ptr %112, align 4, !tbaa !95
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = fpext float %113 to x86_fp80
  %123 = sub i32 %95, %119
  %124 = zext i32 %123 to i64
  %125 = zext i32 %116 to i64
  %126 = getelementptr inbounds %"class.dealii::Vector", ptr %73, i64 %125, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !53
  %128 = getelementptr inbounds double, ptr %127, i64 %124
  %129 = load double, ptr %128, align 8, !tbaa !30
  %130 = fpext double %129 to x86_fp80
  %131 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %97, x86_fp80 %122, x86_fp80 %130)
  %132 = fptrunc x86_fp80 %131 to double
  store double %132, ptr %128, align 8, !tbaa !30
  %133 = add i32 %93, 1
  %134 = zext i32 %133 to i64
  %135 = icmp ugt i64 %84, %134
  br i1 %135, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !702
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !702
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !702
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi double [ %91, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to x86_fp80
  %89 = fpext double %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to double
  %92 = icmp eq ptr %79, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %78, %52
  %94 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %95 = phi double [ 0.000000e+00, %52 ], [ %91, %78 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !705
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !705
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !53
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds double, ptr %119, i64 %120
  %122 = load double, ptr %121, align 8, !tbaa !30
  %123 = fadd double %95, %122
  store double %123, ptr %121, align 8, !tbaa !30
  %124 = icmp eq i64 %60, %50
  br i1 %124, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIdEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %87, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %86, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds x86_fp80, ptr %14, i64 %45
  %50 = load x86_fp80, ptr %49, align 16, !tbaa !128
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !106
  %65 = getelementptr inbounds float, ptr %64, i64 %61
  %66 = load float, ptr %65, align 4, !tbaa !95
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext float %66 to x86_fp80
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !53
  %81 = getelementptr inbounds double, ptr %80, i64 %77
  %82 = load double, ptr %81, align 8, !tbaa !30
  %83 = fpext double %82 to x86_fp80
  %84 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %50, x86_fp80 %75, x86_fp80 %83)
  %85 = fptrunc x86_fp80 %84 to double
  store double %85, ptr %81, align 8, !tbaa !30
  %86 = add i32 %46, 1
  %87 = zext i32 %86 to i64
  %88 = icmp ugt i64 %37, %87
  br i1 %88, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %50, %3
  ret void

25:                                               ; preds = %13, %50
  %26 = phi i64 [ 0, %13 ], [ %30, %50 ]
  %27 = phi ptr [ %20, %13 ], [ %53, %50 ]
  %28 = phi ptr [ %15, %13 ], [ %54, %50 ]
  %29 = phi ptr [ %19, %13 ], [ %51, %50 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %48, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds x86_fp80, ptr %22, i64 %43
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  %46 = fpext double %37 to x86_fp80
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %45, x86_fp80 %46)
  %48 = fptrunc x86_fp80 %47 to double
  %49 = icmp eq ptr %39, %33
  br i1 %49, label %50, label %35

50:                                               ; preds = %35, %25
  %51 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %52 = phi double [ 0.000000e+00, %25 ], [ %48, %35 ]
  %53 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %54 = getelementptr inbounds double, ptr %28, i64 1
  store double %52, ptr %28, align 8, !tbaa !30
  %55 = icmp eq i64 %30, %23
  br i1 %55, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %46, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds x86_fp80, ptr %25, i64 %35
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  br label %46

46:                                               ; preds = %41, %46
  %47 = phi i64 [ %39, %41 ], [ %60, %46 ]
  %48 = phi i32 [ %42, %41 ], [ %59, %46 ]
  %49 = getelementptr inbounds i32, ptr %43, i64 %47
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = getelementptr inbounds x86_fp80, ptr %23, i64 %47
  %52 = load x86_fp80, ptr %51, align 16, !tbaa !128
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds double, ptr %27, i64 %53
  %55 = load double, ptr %54, align 8, !tbaa !30
  %56 = fpext double %55 to x86_fp80
  %57 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %52, x86_fp80 %45, x86_fp80 %56)
  %58 = fptrunc x86_fp80 %57 to double
  store double %58, ptr %54, align 8, !tbaa !30
  %59 = add i32 %48, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %38, %60
  br i1 %61, label %46, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %50, %3
  ret void

25:                                               ; preds = %13, %50
  %26 = phi i64 [ 0, %13 ], [ %30, %50 ]
  %27 = phi ptr [ %20, %13 ], [ %53, %50 ]
  %28 = phi ptr [ %15, %13 ], [ %54, %50 ]
  %29 = phi ptr [ %19, %13 ], [ %51, %50 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi double [ %48, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds x86_fp80, ptr %22, i64 %43
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  %46 = fpext double %37 to x86_fp80
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %45, x86_fp80 %46)
  %48 = fptrunc x86_fp80 %47 to double
  %49 = icmp eq ptr %39, %33
  br i1 %49, label %50, label %35

50:                                               ; preds = %35, %25
  %51 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %52 = phi double [ 0.000000e+00, %25 ], [ %48, %35 ]
  %53 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %54 = getelementptr inbounds double, ptr %28, i64 1
  %55 = load double, ptr %28, align 8, !tbaa !30
  %56 = fadd double %52, %55
  store double %56, ptr %28, align 8, !tbaa !30
  %57 = icmp eq i64 %30, %23
  br i1 %57, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %37, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds x86_fp80, ptr %16, i64 %26
  %36 = load x86_fp80, ptr %35, align 16, !tbaa !128
  br label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %30, %32 ], [ %51, %37 ]
  %39 = phi i32 [ %33, %32 ], [ %50, %37 ]
  %40 = getelementptr inbounds i32, ptr %34, i64 %38
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds x86_fp80, ptr %14, i64 %38
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !128
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds double, ptr %18, i64 %44
  %46 = load double, ptr %45, align 8, !tbaa !30
  %47 = fpext double %46 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %36, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to double
  store double %49, ptr %45, align 8, !tbaa !30
  %50 = add i32 %39, 1
  %51 = zext i32 %50 to i64
  %52 = icmp ugt i64 %29, %51
  br i1 %52, label %37, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %66, %3
  ret void

29:                                               ; preds = %13, %66
  %30 = phi i64 [ 0, %13 ], [ %34, %66 ]
  %31 = phi ptr [ %20, %13 ], [ %69, %66 ]
  %32 = phi ptr [ %15, %13 ], [ %70, %66 ]
  %33 = phi ptr [ %19, %13 ], [ %67, %66 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi double [ %64, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !135
  %60 = getelementptr inbounds x86_fp80, ptr %59, i64 %56
  %61 = load x86_fp80, ptr %60, align 16, !tbaa !128
  %62 = fpext double %41 to x86_fp80
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %61, x86_fp80 %62)
  %64 = fptrunc x86_fp80 %63 to double
  %65 = icmp eq ptr %53, %37
  br i1 %65, label %66, label %39

66:                                               ; preds = %52, %29
  %67 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %68 = phi double [ 0.000000e+00, %29 ], [ %64, %52 ]
  %69 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %70 = getelementptr inbounds double, ptr %32, i64 1
  store double %68, ptr %32, align 8, !tbaa !30
  %71 = icmp eq i64 %34, %27
  br i1 %71, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !56
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !53
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %9, i8 0, i64 %11, i1 false), !tbaa !30
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %79, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %78, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds x86_fp80, ptr %23, i64 %50
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = sub i32 %48, %61
  %66 = zext i32 %65 to i64
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"class.dealii::Vector.27", ptr %29, i64 %67, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !135
  %70 = getelementptr inbounds x86_fp80, ptr %69, i64 %66
  %71 = load x86_fp80, ptr %70, align 16, !tbaa !128
  %72 = zext i32 %53 to i64
  %73 = getelementptr inbounds double, ptr %31, i64 %72
  %74 = load double, ptr %73, align 8, !tbaa !30
  %75 = fpext double %74 to x86_fp80
  %76 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %55, x86_fp80 %71, x86_fp80 %75)
  %77 = fptrunc x86_fp80 %76 to double
  store double %77, ptr %73, align 8, !tbaa !30
  %78 = add i32 %51, 1
  %79 = zext i32 %78 to i64
  %80 = icmp ugt i64 %42, %79
  br i1 %80, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !53
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %66, %3
  ret void

29:                                               ; preds = %13, %66
  %30 = phi i64 [ 0, %13 ], [ %34, %66 ]
  %31 = phi ptr [ %20, %13 ], [ %69, %66 ]
  %32 = phi ptr [ %15, %13 ], [ %70, %66 ]
  %33 = phi ptr [ %19, %13 ], [ %67, %66 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi double [ %64, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !135
  %60 = getelementptr inbounds x86_fp80, ptr %59, i64 %56
  %61 = load x86_fp80, ptr %60, align 16, !tbaa !128
  %62 = fpext double %41 to x86_fp80
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %61, x86_fp80 %62)
  %64 = fptrunc x86_fp80 %63 to double
  %65 = icmp eq ptr %53, %37
  br i1 %65, label %66, label %39

66:                                               ; preds = %52, %29
  %67 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %68 = phi double [ 0.000000e+00, %29 ], [ %64, %52 ]
  %69 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %70 = getelementptr inbounds double, ptr %32, i64 1
  %71 = load double, ptr %32, align 8, !tbaa !30
  %72 = fadd double %68, %71
  store double %72, ptr %32, align 8, !tbaa !30
  %73 = icmp eq i64 %34, %27
  br i1 %73, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIdEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %70, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %69, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = zext i32 %44 to i64
  %64 = getelementptr inbounds double, ptr %22, i64 %63
  %65 = load double, ptr %64, align 8, !tbaa !30
  %66 = fpext double %65 to x86_fp80
  %67 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %62, x86_fp80 %66)
  %68 = fptrunc x86_fp80 %67 to double
  store double %68, ptr %64, align 8, !tbaa !30
  %69 = add i32 %42, 1
  %70 = zext i32 %69 to i64
  %71 = icmp ugt i64 %33, %70
  br i1 %71, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !708
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !708
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !708
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %96, %37
  ret void

48:                                               ; preds = %41, %96
  %49 = phi i64 [ 0, %41 ], [ %56, %96 ]
  %50 = phi ptr [ %13, %41 ], [ %79, %96 ]
  %51 = phi ptr [ %16, %41 ], [ %77, %96 ]
  %52 = phi i32 [ %39, %41 ], [ %99, %96 ]
  %53 = phi i32 [ 0, %41 ], [ %98, %96 ]
  %54 = phi i32 [ %38, %41 ], [ %97, %96 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %74, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds x86_fp80, ptr %43, i64 %69
  %71 = load x86_fp80, ptr %70, align 16, !tbaa !128
  %72 = fpext double %63 to x86_fp80
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %71, x86_fp80 %72)
  %74 = fptrunc x86_fp80 %73 to double
  %75 = icmp eq ptr %65, %59
  br i1 %75, label %76, label %61

76:                                               ; preds = %61, %48
  %77 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %78 = phi double [ 0.000000e+00, %48 ], [ %74, %61 ]
  %79 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %80 = icmp eq i32 %52, %55
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = add i32 %53, 1
  br label %96

83:                                               ; preds = %76
  %84 = add i32 %54, 1
  %85 = icmp ult i32 %84, %19
  br i1 %85, label %86, label %96

86:                                               ; preds = %83
  %87 = add i32 %54, 2
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, ptr %21, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !47, !noalias !711
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, ptr %21, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47, !noalias !711
  %94 = add i32 %90, %52
  %95 = sub i32 %94, %93
  br label %96

96:                                               ; preds = %83, %81, %86
  %97 = phi i32 [ %84, %86 ], [ %54, %81 ], [ %84, %83 ]
  %98 = phi i32 [ 0, %86 ], [ %82, %81 ], [ 0, %83 ]
  %99 = phi i32 [ %95, %86 ], [ %52, %81 ], [ -1, %83 ]
  %100 = zext i32 %54 to i64
  %101 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %100, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !53
  %103 = zext i32 %53 to i64
  %104 = getelementptr inbounds double, ptr %102, i64 %103
  store double %78, ptr %104, align 8, !tbaa !30
  %105 = icmp eq i64 %56, %46
  br i1 %105, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds x86_fp80, ptr %65, i64 %77
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  br label %88

88:                                               ; preds = %83, %102
  %89 = phi i64 [ %81, %83 ], [ %114, %102 ]
  %90 = phi i32 [ %84, %83 ], [ %113, %102 ]
  %91 = getelementptr inbounds i32, ptr %85, i64 %89
  %92 = load i32, ptr %91, align 4, !tbaa !47
  %93 = getelementptr inbounds x86_fp80, ptr %63, i64 %89
  %94 = load x86_fp80, ptr %93, align 16, !tbaa !128
  br label %95

95:                                               ; preds = %95, %88
  %96 = phi i32 [ %5, %88 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %92
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = sub i32 %92, %100
  %104 = zext i32 %103 to i64
  %105 = zext i32 %97 to i64
  %106 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %105, i32 3
  %107 = load ptr, ptr %106, align 8, !tbaa !53
  %108 = getelementptr inbounds double, ptr %107, i64 %104
  %109 = load double, ptr %108, align 8, !tbaa !30
  %110 = fpext double %109 to x86_fp80
  %111 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %94, x86_fp80 %87, x86_fp80 %110)
  %112 = fptrunc x86_fp80 %111 to double
  store double %112, ptr %108, align 8, !tbaa !30
  %113 = add i32 %90, 1
  %114 = zext i32 %113 to i64
  %115 = icmp ugt i64 %80, %114
  br i1 %115, label %88, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !714
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !714
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !714
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !225
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %96, %37
  ret void

48:                                               ; preds = %41, %96
  %49 = phi i64 [ 0, %41 ], [ %56, %96 ]
  %50 = phi ptr [ %13, %41 ], [ %79, %96 ]
  %51 = phi ptr [ %16, %41 ], [ %77, %96 ]
  %52 = phi i32 [ %39, %41 ], [ %99, %96 ]
  %53 = phi i32 [ 0, %41 ], [ %98, %96 ]
  %54 = phi i32 [ %38, %41 ], [ %97, %96 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi double [ %74, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds x86_fp80, ptr %43, i64 %69
  %71 = load x86_fp80, ptr %70, align 16, !tbaa !128
  %72 = fpext double %63 to x86_fp80
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %71, x86_fp80 %72)
  %74 = fptrunc x86_fp80 %73 to double
  %75 = icmp eq ptr %65, %59
  br i1 %75, label %76, label %61

76:                                               ; preds = %61, %48
  %77 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %78 = phi double [ 0.000000e+00, %48 ], [ %74, %61 ]
  %79 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %80 = icmp eq i32 %52, %55
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = add i32 %53, 1
  br label %96

83:                                               ; preds = %76
  %84 = add i32 %54, 1
  %85 = icmp ult i32 %84, %19
  br i1 %85, label %86, label %96

86:                                               ; preds = %83
  %87 = add i32 %54, 2
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, ptr %21, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !47, !noalias !717
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, ptr %21, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47, !noalias !717
  %94 = add i32 %90, %52
  %95 = sub i32 %94, %93
  br label %96

96:                                               ; preds = %83, %81, %86
  %97 = phi i32 [ %84, %86 ], [ %54, %81 ], [ %84, %83 ]
  %98 = phi i32 [ 0, %86 ], [ %82, %81 ], [ 0, %83 ]
  %99 = phi i32 [ %95, %86 ], [ %52, %81 ], [ -1, %83 ]
  %100 = zext i32 %54 to i64
  %101 = getelementptr inbounds %"class.dealii::Vector", ptr %45, i64 %100, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !53
  %103 = zext i32 %53 to i64
  %104 = getelementptr inbounds double, ptr %102, i64 %103
  %105 = load double, ptr %104, align 8, !tbaa !30
  %106 = fadd double %78, %105
  store double %106, ptr %104, align 8, !tbaa !30
  %107 = icmp eq i64 %56, %46
  br i1 %107, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIdEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %30
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !128
  br label %41

41:                                               ; preds = %36, %55
  %42 = phi i64 [ %34, %36 ], [ %67, %55 ]
  %43 = phi i32 [ %37, %36 ], [ %66, %55 ]
  %44 = getelementptr inbounds i32, ptr %38, i64 %42
  %45 = load i32, ptr %44, align 4, !tbaa !47
  %46 = getelementptr inbounds x86_fp80, ptr %14, i64 %42
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !128
  br label %48

48:                                               ; preds = %48, %41
  %49 = phi i32 [ %18, %41 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %45
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = sub i32 %45, %53
  %57 = zext i32 %56 to i64
  %58 = zext i32 %50 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %22, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = fpext double %62 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %47, x86_fp80 %40, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to double
  store double %65, ptr %61, align 8, !tbaa !30
  %66 = add i32 %43, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %33, %67
  br i1 %68, label %41, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !720
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !720
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !720
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %112, %37
  ret void

52:                                               ; preds = %41, %112
  %53 = phi i64 [ 0, %41 ], [ %60, %112 ]
  %54 = phi ptr [ %13, %41 ], [ %95, %112 ]
  %55 = phi ptr [ %16, %41 ], [ %93, %112 ]
  %56 = phi i32 [ %39, %41 ], [ %115, %112 ]
  %57 = phi i32 [ 0, %41 ], [ %114, %112 ]
  %58 = phi i32 [ %38, %41 ], [ %113, %112 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi double [ %90, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !135
  %86 = getelementptr inbounds x86_fp80, ptr %85, i64 %82
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  %88 = fpext double %67 to x86_fp80
  %89 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %87, x86_fp80 %88)
  %90 = fptrunc x86_fp80 %89 to double
  %91 = icmp eq ptr %79, %63
  br i1 %91, label %92, label %65

92:                                               ; preds = %78, %52
  %93 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %94 = phi double [ 0.000000e+00, %52 ], [ %90, %78 ]
  %95 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %96 = icmp eq i32 %56, %59
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = add i32 %57, 1
  br label %112

99:                                               ; preds = %92
  %100 = add i32 %58, 1
  %101 = icmp ult i32 %100, %19
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = add i32 %58, 2
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %21, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !47, !noalias !723
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %21, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !47, !noalias !723
  %110 = add i32 %106, %56
  %111 = sub i32 %110, %109
  br label %112

112:                                              ; preds = %99, %97, %102
  %113 = phi i32 [ %100, %102 ], [ %58, %97 ], [ %100, %99 ]
  %114 = phi i32 [ 0, %102 ], [ %98, %97 ], [ 0, %99 ]
  %115 = phi i32 [ %111, %102 ], [ %56, %97 ], [ -1, %99 ]
  %116 = zext i32 %58 to i64
  %117 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %116, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !53
  %119 = zext i32 %57 to i64
  %120 = getelementptr inbounds double, ptr %118, i64 %119
  store double %94, ptr %120, align 8, !tbaa !30
  %121 = icmp eq i64 %60, %50
  br i1 %121, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !225
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !56
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !53
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %23, i8 0, i64 %25, i1 false), !tbaa !30
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !56
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !53
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !30
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !56
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !53
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %49, i8 0, i64 %51, i1 false), !tbaa !30
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %133, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %132, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds x86_fp80, ptr %63, i64 %92
  %97 = load x86_fp80, ptr %96, align 16, !tbaa !128
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector.27", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !135
  %112 = getelementptr inbounds x86_fp80, ptr %111, i64 %108
  %113 = load x86_fp80, ptr %112, align 16, !tbaa !128
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = sub i32 %95, %119
  %123 = zext i32 %122 to i64
  %124 = zext i32 %116 to i64
  %125 = getelementptr inbounds %"class.dealii::Vector", ptr %73, i64 %124, i32 3
  %126 = load ptr, ptr %125, align 8, !tbaa !53
  %127 = getelementptr inbounds double, ptr %126, i64 %123
  %128 = load double, ptr %127, align 8, !tbaa !30
  %129 = fpext double %128 to x86_fp80
  %130 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %97, x86_fp80 %113, x86_fp80 %129)
  %131 = fptrunc x86_fp80 %130 to double
  store double %131, ptr %127, align 8, !tbaa !30
  %132 = add i32 %93, 1
  %133 = zext i32 %132 to i64
  %134 = icmp ugt i64 %84, %133
  br i1 %134, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !726
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !726
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !726
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !225
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %112, %37
  ret void

52:                                               ; preds = %41, %112
  %53 = phi i64 [ 0, %41 ], [ %60, %112 ]
  %54 = phi ptr [ %13, %41 ], [ %95, %112 ]
  %55 = phi ptr [ %16, %41 ], [ %93, %112 ]
  %56 = phi i32 [ %39, %41 ], [ %115, %112 ]
  %57 = phi i32 [ 0, %41 ], [ %114, %112 ]
  %58 = phi i32 [ %38, %41 ], [ %113, %112 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi double [ %90, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !135
  %86 = getelementptr inbounds x86_fp80, ptr %85, i64 %82
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  %88 = fpext double %67 to x86_fp80
  %89 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %87, x86_fp80 %88)
  %90 = fptrunc x86_fp80 %89 to double
  %91 = icmp eq ptr %79, %63
  br i1 %91, label %92, label %65

92:                                               ; preds = %78, %52
  %93 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %94 = phi double [ 0.000000e+00, %52 ], [ %90, %78 ]
  %95 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %96 = icmp eq i32 %56, %59
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = add i32 %57, 1
  br label %112

99:                                               ; preds = %92
  %100 = add i32 %58, 1
  %101 = icmp ult i32 %100, %19
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = add i32 %58, 2
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %21, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !47, !noalias !729
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %21, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !47, !noalias !729
  %110 = add i32 %106, %56
  %111 = sub i32 %110, %109
  br label %112

112:                                              ; preds = %99, %97, %102
  %113 = phi i32 [ %100, %102 ], [ %58, %97 ], [ %100, %99 ]
  %114 = phi i32 [ 0, %102 ], [ %98, %97 ], [ 0, %99 ]
  %115 = phi i32 [ %111, %102 ], [ %56, %97 ], [ -1, %99 ]
  %116 = zext i32 %58 to i64
  %117 = getelementptr inbounds %"class.dealii::Vector", ptr %49, i64 %116, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !53
  %119 = zext i32 %57 to i64
  %120 = getelementptr inbounds double, ptr %118, i64 %119
  %121 = load double, ptr %120, align 8, !tbaa !30
  %122 = fadd double %94, %121
  store double %122, ptr %120, align 8, !tbaa !30
  %123 = icmp eq i64 %60, %50
  br i1 %123, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIdEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %86, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %85, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds x86_fp80, ptr %14, i64 %45
  %50 = load x86_fp80, ptr %49, align 16, !tbaa !128
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !135
  %65 = getelementptr inbounds x86_fp80, ptr %64, i64 %61
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = sub i32 %48, %72
  %76 = zext i32 %75 to i64
  %77 = zext i32 %69 to i64
  %78 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %77, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !53
  %80 = getelementptr inbounds double, ptr %79, i64 %76
  %81 = load double, ptr %80, align 8, !tbaa !30
  %82 = fpext double %81 to x86_fp80
  %83 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %50, x86_fp80 %66, x86_fp80 %82)
  %84 = fptrunc x86_fp80 %83 to double
  store double %84, ptr %80, align 8, !tbaa !30
  %85 = add i32 %46, 1
  %86 = zext i32 %85 to i64
  %87 = icmp ugt i64 %37, %86
  br i1 %87, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, ptr %22, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fpext double %45 to x86_fp80
  %47 = fpext float %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to float
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds float, ptr %28, i64 1
  store float %53, ptr %28, align 4, !tbaa !95
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %47, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds double, ptr %25, i64 %35
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fpext double %45 to x86_fp80
  br label %47

47:                                               ; preds = %41, %47
  %48 = phi i64 [ %39, %41 ], [ %61, %47 ]
  %49 = phi i32 [ %42, %41 ], [ %60, %47 ]
  %50 = getelementptr inbounds i32, ptr %43, i64 %48
  %51 = load i32, ptr %50, align 4, !tbaa !47
  %52 = getelementptr inbounds x86_fp80, ptr %23, i64 %48
  %53 = load x86_fp80, ptr %52, align 16, !tbaa !128
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds float, ptr %27, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fpext float %56 to x86_fp80
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %53, x86_fp80 %46, x86_fp80 %57)
  %59 = fptrunc x86_fp80 %58 to float
  store float %59, ptr %55, align 4, !tbaa !95
  %60 = add i32 %49, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %38, %61
  br i1 %62, label %47, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, ptr %22, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fpext double %45 to x86_fp80
  %47 = fpext float %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to float
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds float, ptr %28, i64 1
  %56 = load float, ptr %28, align 4, !tbaa !95
  %57 = fadd float %53, %56
  store float %57, ptr %28, align 4, !tbaa !95
  %58 = icmp eq i64 %30, %23
  br i1 %58, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %38, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds double, ptr %16, i64 %26
  %36 = load double, ptr %35, align 8, !tbaa !30
  %37 = fpext double %36 to x86_fp80
  br label %38

38:                                               ; preds = %32, %38
  %39 = phi i64 [ %30, %32 ], [ %52, %38 ]
  %40 = phi i32 [ %33, %32 ], [ %51, %38 ]
  %41 = getelementptr inbounds i32, ptr %34, i64 %39
  %42 = load i32, ptr %41, align 4, !tbaa !47
  %43 = getelementptr inbounds x86_fp80, ptr %14, i64 %39
  %44 = load x86_fp80, ptr %43, align 16, !tbaa !128
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds float, ptr %18, i64 %45
  %47 = load float, ptr %46, align 4, !tbaa !95
  %48 = fpext float %47 to x86_fp80
  %49 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %37, x86_fp80 %48)
  %50 = fptrunc x86_fp80 %49 to float
  store float %50, ptr %46, align 4, !tbaa !95
  %51 = add i32 %40, 1
  %52 = zext i32 %51 to i64
  %53 = icmp ugt i64 %29, %52
  br i1 %53, label %38, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi float [ %65, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !53
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = fpext double %61 to x86_fp80
  %63 = fpext float %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to float
  %66 = icmp eq ptr %53, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %52, %29
  %68 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %69 = phi float [ 0.000000e+00, %29 ], [ %65, %52 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %71 = getelementptr inbounds float, ptr %32, i64 1
  store float %69, ptr %32, align 4, !tbaa !95
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %80, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %79, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds x86_fp80, ptr %23, i64 %50
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = sub i32 %48, %61
  %66 = zext i32 %65 to i64
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"class.dealii::Vector", ptr %29, i64 %67, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !53
  %70 = getelementptr inbounds double, ptr %69, i64 %66
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fpext double %71 to x86_fp80
  %73 = zext i32 %53 to i64
  %74 = getelementptr inbounds float, ptr %31, i64 %73
  %75 = load float, ptr %74, align 4, !tbaa !95
  %76 = fpext float %75 to x86_fp80
  %77 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %55, x86_fp80 %72, x86_fp80 %76)
  %78 = fptrunc x86_fp80 %77 to float
  store float %78, ptr %74, align 4, !tbaa !95
  %79 = add i32 %51, 1
  %80 = zext i32 %79 to i64
  %81 = icmp ugt i64 %42, %80
  br i1 %81, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi float [ %65, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !53
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = fpext double %61 to x86_fp80
  %63 = fpext float %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to float
  %66 = icmp eq ptr %53, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %52, %29
  %68 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %69 = phi float [ 0.000000e+00, %29 ], [ %65, %52 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %71 = getelementptr inbounds float, ptr %32, i64 1
  %72 = load float, ptr %32, align 4, !tbaa !95
  %73 = fadd float %69, %72
  store float %73, ptr %32, align 4, !tbaa !95
  %74 = icmp eq i64 %34, %27
  br i1 %74, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %71, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %70, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = fpext double %62 to x86_fp80
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds float, ptr %22, i64 %64
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fpext float %66 to x86_fp80
  %68 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %63, x86_fp80 %67)
  %69 = fptrunc x86_fp80 %68 to float
  store float %69, ptr %65, align 4, !tbaa !95
  %70 = add i32 %42, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %33, %71
  br i1 %72, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !732
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !732
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !732
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds double, ptr %43, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fpext double %71 to x86_fp80
  %73 = fpext float %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to float
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %79 = phi float [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !735
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !735
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !106
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds float, ptr %103, i64 %104
  store float %79, ptr %105, align 4, !tbaa !95
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %103, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds double, ptr %65, i64 %77
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = fpext double %87 to x86_fp80
  br label %89

89:                                               ; preds = %83, %103
  %90 = phi i64 [ %81, %83 ], [ %115, %103 ]
  %91 = phi i32 [ %84, %83 ], [ %114, %103 ]
  %92 = getelementptr inbounds i32, ptr %85, i64 %90
  %93 = load i32, ptr %92, align 4, !tbaa !47
  %94 = getelementptr inbounds x86_fp80, ptr %63, i64 %90
  %95 = load x86_fp80, ptr %94, align 16, !tbaa !128
  br label %96

96:                                               ; preds = %96, %89
  %97 = phi i32 [ %5, %89 ], [ %98, %96 ]
  %98 = add i32 %97, -1
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i32, ptr %67, i64 %99
  %101 = load i32, ptr %100, align 4, !tbaa !47
  %102 = icmp ugt i32 %101, %93
  br i1 %102, label %96, label %103

103:                                              ; preds = %96
  %104 = sub i32 %93, %101
  %105 = zext i32 %104 to i64
  %106 = zext i32 %98 to i64
  %107 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %106, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !106
  %109 = getelementptr inbounds float, ptr %108, i64 %105
  %110 = load float, ptr %109, align 4, !tbaa !95
  %111 = fpext float %110 to x86_fp80
  %112 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %95, x86_fp80 %88, x86_fp80 %111)
  %113 = fptrunc x86_fp80 %112 to float
  store float %113, ptr %109, align 4, !tbaa !95
  %114 = add i32 %91, 1
  %115 = zext i32 %114 to i64
  %116 = icmp ugt i64 %80, %115
  br i1 %116, label %89, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !738
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !738
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !738
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds double, ptr %43, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fpext double %71 to x86_fp80
  %73 = fpext float %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to float
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %79 = phi float [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !741
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !741
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !106
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds float, ptr %103, i64 %104
  %106 = load float, ptr %105, align 4, !tbaa !95
  %107 = fadd float %79, %106
  store float %107, ptr %105, align 4, !tbaa !95
  %108 = icmp eq i64 %56, %46
  br i1 %108, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %56, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds double, ptr %16, i64 %30
  %40 = load double, ptr %39, align 8, !tbaa !30
  %41 = fpext double %40 to x86_fp80
  br label %42

42:                                               ; preds = %36, %56
  %43 = phi i64 [ %34, %36 ], [ %68, %56 ]
  %44 = phi i32 [ %37, %36 ], [ %67, %56 ]
  %45 = getelementptr inbounds i32, ptr %38, i64 %43
  %46 = load i32, ptr %45, align 4, !tbaa !47
  %47 = getelementptr inbounds x86_fp80, ptr %14, i64 %43
  %48 = load x86_fp80, ptr %47, align 16, !tbaa !128
  br label %49

49:                                               ; preds = %49, %42
  %50 = phi i32 [ %18, %42 ], [ %51, %49 ]
  %51 = add i32 %50, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, ptr %20, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = icmp ugt i32 %54, %46
  br i1 %55, label %49, label %56

56:                                               ; preds = %49
  %57 = sub i32 %46, %54
  %58 = zext i32 %57 to i64
  %59 = zext i32 %51 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.20", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !106
  %62 = getelementptr inbounds float, ptr %61, i64 %58
  %63 = load float, ptr %62, align 4, !tbaa !95
  %64 = fpext float %63 to x86_fp80
  %65 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %48, x86_fp80 %41, x86_fp80 %64)
  %66 = fptrunc x86_fp80 %65 to float
  store float %66, ptr %62, align 4, !tbaa !95
  %67 = add i32 %44, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %42, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !744
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !744
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !744
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi float [ %91, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !53
  %86 = getelementptr inbounds double, ptr %85, i64 %82
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = fpext double %87 to x86_fp80
  %89 = fpext float %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to float
  %92 = icmp eq ptr %79, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %78, %52
  %94 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %95 = phi float [ 0.000000e+00, %52 ], [ %91, %78 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !747
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !747
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !106
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds float, ptr %119, i64 %120
  store float %95, ptr %121, align 4, !tbaa !95
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %134, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %133, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds x86_fp80, ptr %63, i64 %92
  %97 = load x86_fp80, ptr %96, align 16, !tbaa !128
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !53
  %112 = getelementptr inbounds double, ptr %111, i64 %108
  %113 = load double, ptr %112, align 8, !tbaa !30
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = fpext double %113 to x86_fp80
  %123 = sub i32 %95, %119
  %124 = zext i32 %123 to i64
  %125 = zext i32 %116 to i64
  %126 = getelementptr inbounds %"class.dealii::Vector.20", ptr %73, i64 %125, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !106
  %128 = getelementptr inbounds float, ptr %127, i64 %124
  %129 = load float, ptr %128, align 4, !tbaa !95
  %130 = fpext float %129 to x86_fp80
  %131 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %97, x86_fp80 %122, x86_fp80 %130)
  %132 = fptrunc x86_fp80 %131 to float
  store float %132, ptr %128, align 4, !tbaa !95
  %133 = add i32 %93, 1
  %134 = zext i32 %133 to i64
  %135 = icmp ugt i64 %84, %134
  br i1 %135, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !750
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !750
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !750
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi float [ %91, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !53
  %86 = getelementptr inbounds double, ptr %85, i64 %82
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = fpext double %87 to x86_fp80
  %89 = fpext float %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to float
  %92 = icmp eq ptr %79, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %78, %52
  %94 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %95 = phi float [ 0.000000e+00, %52 ], [ %91, %78 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !753
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !753
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !106
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds float, ptr %119, i64 %120
  %122 = load float, ptr %121, align 4, !tbaa !95
  %123 = fadd float %95, %122
  store float %123, ptr %121, align 4, !tbaa !95
  %124 = icmp eq i64 %60, %50
  br i1 %124, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIfEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %87, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %86, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds x86_fp80, ptr %14, i64 %45
  %50 = load x86_fp80, ptr %49, align 16, !tbaa !128
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !53
  %65 = getelementptr inbounds double, ptr %64, i64 %61
  %66 = load double, ptr %65, align 8, !tbaa !30
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext double %66 to x86_fp80
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !106
  %81 = getelementptr inbounds float, ptr %80, i64 %77
  %82 = load float, ptr %81, align 4, !tbaa !95
  %83 = fpext float %82 to x86_fp80
  %84 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %50, x86_fp80 %75, x86_fp80 %83)
  %85 = fptrunc x86_fp80 %84 to float
  store float %85, ptr %81, align 4, !tbaa !95
  %86 = add i32 %46, 1
  %87 = zext i32 %86 to i64
  %88 = icmp ugt i64 %37, %87
  br i1 %88, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to x86_fp80
  %47 = fpext float %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to float
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds float, ptr %28, i64 1
  store float %53, ptr %28, align 4, !tbaa !95
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %45, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds float, ptr %25, i64 %35
  br label %45

45:                                               ; preds = %41, %45
  %46 = phi i64 [ %39, %41 ], [ %61, %45 ]
  %47 = phi i32 [ %42, %41 ], [ %60, %45 ]
  %48 = getelementptr inbounds i32, ptr %43, i64 %46
  %49 = load i32, ptr %48, align 4, !tbaa !47
  %50 = getelementptr inbounds x86_fp80, ptr %23, i64 %46
  %51 = load x86_fp80, ptr %50, align 16, !tbaa !128
  %52 = load float, ptr %44, align 4, !tbaa !95
  %53 = fpext float %52 to x86_fp80
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds float, ptr %27, i64 %54
  %56 = load float, ptr %55, align 4, !tbaa !95
  %57 = fpext float %56 to x86_fp80
  %58 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %51, x86_fp80 %53, x86_fp80 %57)
  %59 = fptrunc x86_fp80 %58 to float
  store float %59, ptr %55, align 4, !tbaa !95
  %60 = add i32 %47, 1
  %61 = zext i32 %60 to i64
  %62 = icmp ugt i64 %38, %61
  br i1 %62, label %45, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %51, %3
  ret void

25:                                               ; preds = %13, %51
  %26 = phi i64 [ 0, %13 ], [ %30, %51 ]
  %27 = phi ptr [ %20, %13 ], [ %54, %51 ]
  %28 = phi ptr [ %15, %13 ], [ %55, %51 ]
  %29 = phi ptr [ %19, %13 ], [ %52, %51 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %49, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to x86_fp80
  %47 = fpext float %37 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %46, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to float
  %50 = icmp eq ptr %39, %33
  br i1 %50, label %51, label %35

51:                                               ; preds = %35, %25
  %52 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %49, %35 ]
  %54 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %55 = getelementptr inbounds float, ptr %28, i64 1
  %56 = load float, ptr %28, align 4, !tbaa !95
  %57 = fadd float %53, %56
  store float %57, ptr %28, align 4, !tbaa !95
  %58 = icmp eq i64 %30, %23
  br i1 %58, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %36, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds float, ptr %16, i64 %26
  br label %36

36:                                               ; preds = %32, %36
  %37 = phi i64 [ %30, %32 ], [ %52, %36 ]
  %38 = phi i32 [ %33, %32 ], [ %51, %36 ]
  %39 = getelementptr inbounds i32, ptr %34, i64 %37
  %40 = load i32, ptr %39, align 4, !tbaa !47
  %41 = getelementptr inbounds x86_fp80, ptr %14, i64 %37
  %42 = load x86_fp80, ptr %41, align 16, !tbaa !128
  %43 = load float, ptr %35, align 4, !tbaa !95
  %44 = fpext float %43 to x86_fp80
  %45 = zext i32 %40 to i64
  %46 = getelementptr inbounds float, ptr %18, i64 %45
  %47 = load float, ptr %46, align 4, !tbaa !95
  %48 = fpext float %47 to x86_fp80
  %49 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %42, x86_fp80 %44, x86_fp80 %48)
  %50 = fptrunc x86_fp80 %49 to float
  store float %50, ptr %46, align 4, !tbaa !95
  %51 = add i32 %38, 1
  %52 = zext i32 %51 to i64
  %53 = icmp ugt i64 %29, %52
  br i1 %53, label %36, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi float [ %65, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to x86_fp80
  %63 = fpext float %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to float
  %66 = icmp eq ptr %53, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %52, %29
  %68 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %69 = phi float [ 0.000000e+00, %29 ], [ %65, %52 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %71 = getelementptr inbounds float, ptr %32, i64 1
  store float %69, ptr %32, align 4, !tbaa !95
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %80, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %79, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds x86_fp80, ptr %23, i64 %50
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = sub i32 %48, %61
  %66 = zext i32 %65 to i64
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"class.dealii::Vector.20", ptr %29, i64 %67, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !106
  %70 = getelementptr inbounds float, ptr %69, i64 %66
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to x86_fp80
  %73 = zext i32 %53 to i64
  %74 = getelementptr inbounds float, ptr %31, i64 %73
  %75 = load float, ptr %74, align 4, !tbaa !95
  %76 = fpext float %75 to x86_fp80
  %77 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %55, x86_fp80 %72, x86_fp80 %76)
  %78 = fptrunc x86_fp80 %77 to float
  store float %78, ptr %74, align 4, !tbaa !95
  %79 = add i32 %51, 1
  %80 = zext i32 %79 to i64
  %81 = icmp ugt i64 %42, %80
  br i1 %81, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %67, %3
  ret void

29:                                               ; preds = %13, %67
  %30 = phi i64 [ 0, %13 ], [ %34, %67 ]
  %31 = phi ptr [ %20, %13 ], [ %70, %67 ]
  %32 = phi ptr [ %15, %13 ], [ %71, %67 ]
  %33 = phi ptr [ %19, %13 ], [ %68, %67 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi float [ %65, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to x86_fp80
  %63 = fpext float %41 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %62, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to float
  %66 = icmp eq ptr %53, %37
  br i1 %66, label %67, label %39

67:                                               ; preds = %52, %29
  %68 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %69 = phi float [ 0.000000e+00, %29 ], [ %65, %52 ]
  %70 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %71 = getelementptr inbounds float, ptr %32, i64 1
  %72 = load float, ptr %32, align 4, !tbaa !95
  %73 = fadd float %69, %72
  store float %73, ptr %32, align 4, !tbaa !95
  %74 = icmp eq i64 %34, %27
  br i1 %74, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %71, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %70, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = getelementptr inbounds float, ptr %60, i64 %57
  %62 = load float, ptr %61, align 4, !tbaa !95
  %63 = fpext float %62 to x86_fp80
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds float, ptr %22, i64 %64
  %66 = load float, ptr %65, align 4, !tbaa !95
  %67 = fpext float %66 to x86_fp80
  %68 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %63, x86_fp80 %67)
  %69 = fptrunc x86_fp80 %68 to float
  store float %69, ptr %65, align 4, !tbaa !95
  %70 = add i32 %42, 1
  %71 = zext i32 %70 to i64
  %72 = icmp ugt i64 %33, %71
  br i1 %72, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !756
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !756
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !756
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to x86_fp80
  %73 = fpext float %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to float
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %79 = phi float [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !759
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !759
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !106
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds float, ptr %103, i64 %104
  store float %79, ptr %105, align 4, !tbaa !95
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds float, ptr %65, i64 %77
  br label %87

87:                                               ; preds = %83, %102
  %88 = phi i64 [ %81, %83 ], [ %115, %102 ]
  %89 = phi i32 [ %84, %83 ], [ %114, %102 ]
  %90 = getelementptr inbounds i32, ptr %85, i64 %88
  %91 = load i32, ptr %90, align 4, !tbaa !47
  %92 = getelementptr inbounds x86_fp80, ptr %63, i64 %88
  %93 = load x86_fp80, ptr %92, align 16, !tbaa !128
  %94 = load float, ptr %86, align 4, !tbaa !95
  br label %95

95:                                               ; preds = %95, %87
  %96 = phi i32 [ %5, %87 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %91
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = fpext float %94 to x86_fp80
  %104 = sub i32 %91, %100
  %105 = zext i32 %104 to i64
  %106 = zext i32 %97 to i64
  %107 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %106, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !106
  %109 = getelementptr inbounds float, ptr %108, i64 %105
  %110 = load float, ptr %109, align 4, !tbaa !95
  %111 = fpext float %110 to x86_fp80
  %112 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %93, x86_fp80 %103, x86_fp80 %111)
  %113 = fptrunc x86_fp80 %112 to float
  store float %113, ptr %109, align 4, !tbaa !95
  %114 = add i32 %89, 1
  %115 = zext i32 %114 to i64
  %116 = icmp ugt i64 %80, %115
  br i1 %116, label %87, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !762
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !762
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !762
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %97, %37
  ret void

48:                                               ; preds = %41, %97
  %49 = phi i64 [ 0, %41 ], [ %56, %97 ]
  %50 = phi ptr [ %13, %41 ], [ %80, %97 ]
  %51 = phi ptr [ %16, %41 ], [ %78, %97 ]
  %52 = phi i32 [ %39, %41 ], [ %100, %97 ]
  %53 = phi i32 [ 0, %41 ], [ %99, %97 ]
  %54 = phi i32 [ %38, %41 ], [ %98, %97 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %77, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %75, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to x86_fp80
  %73 = fpext float %63 to x86_fp80
  %74 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %72, x86_fp80 %73)
  %75 = fptrunc x86_fp80 %74 to float
  %76 = icmp eq ptr %65, %59
  br i1 %76, label %77, label %61

77:                                               ; preds = %61, %48
  %78 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %79 = phi float [ 0.000000e+00, %48 ], [ %75, %61 ]
  %80 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %81 = icmp eq i32 %52, %55
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = add i32 %53, 1
  br label %97

84:                                               ; preds = %77
  %85 = add i32 %54, 1
  %86 = icmp ult i32 %85, %19
  br i1 %86, label %87, label %97

87:                                               ; preds = %84
  %88 = add i32 %54, 2
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !765
  %92 = zext i32 %85 to i64
  %93 = getelementptr inbounds i32, ptr %21, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !47, !noalias !765
  %95 = add i32 %91, %52
  %96 = sub i32 %95, %94
  br label %97

97:                                               ; preds = %84, %82, %87
  %98 = phi i32 [ %85, %87 ], [ %54, %82 ], [ %85, %84 ]
  %99 = phi i32 [ 0, %87 ], [ %83, %82 ], [ 0, %84 ]
  %100 = phi i32 [ %96, %87 ], [ %52, %82 ], [ -1, %84 ]
  %101 = zext i32 %54 to i64
  %102 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %101, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !106
  %104 = zext i32 %53 to i64
  %105 = getelementptr inbounds float, ptr %103, i64 %104
  %106 = load float, ptr %105, align 4, !tbaa !95
  %107 = fadd float %79, %106
  store float %107, ptr %105, align 4, !tbaa !95
  %108 = icmp eq i64 %56, %46
  br i1 %108, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds float, ptr %16, i64 %30
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %68, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %67, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = load float, ptr %39, align 4, !tbaa !95
  br label %48

48:                                               ; preds = %48, %40
  %49 = phi i32 [ %18, %40 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %44
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = fpext float %47 to x86_fp80
  %57 = sub i32 %44, %53
  %58 = zext i32 %57 to i64
  %59 = zext i32 %50 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.20", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !106
  %62 = getelementptr inbounds float, ptr %61, i64 %58
  %63 = load float, ptr %62, align 4, !tbaa !95
  %64 = fpext float %63 to x86_fp80
  %65 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %56, x86_fp80 %64)
  %66 = fptrunc x86_fp80 %65 to float
  store float %66, ptr %62, align 4, !tbaa !95
  %67 = add i32 %42, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !768
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !768
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !768
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi float [ %91, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to x86_fp80
  %89 = fpext float %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to float
  %92 = icmp eq ptr %79, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %78, %52
  %94 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %95 = phi float [ 0.000000e+00, %52 ], [ %91, %78 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !771
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !771
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !106
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds float, ptr %119, i64 %120
  store float %95, ptr %121, align 4, !tbaa !95
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %134, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %133, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds x86_fp80, ptr %63, i64 %92
  %97 = load x86_fp80, ptr %96, align 16, !tbaa !128
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !106
  %112 = getelementptr inbounds float, ptr %111, i64 %108
  %113 = load float, ptr %112, align 4, !tbaa !95
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = fpext float %113 to x86_fp80
  %123 = sub i32 %95, %119
  %124 = zext i32 %123 to i64
  %125 = zext i32 %116 to i64
  %126 = getelementptr inbounds %"class.dealii::Vector.20", ptr %73, i64 %125, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !106
  %128 = getelementptr inbounds float, ptr %127, i64 %124
  %129 = load float, ptr %128, align 4, !tbaa !95
  %130 = fpext float %129 to x86_fp80
  %131 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %97, x86_fp80 %122, x86_fp80 %130)
  %132 = fptrunc x86_fp80 %131 to float
  store float %132, ptr %128, align 4, !tbaa !95
  %133 = add i32 %93, 1
  %134 = zext i32 %133 to i64
  %135 = icmp ugt i64 %84, %134
  br i1 %135, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !774
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !774
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !774
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %113, %37
  ret void

52:                                               ; preds = %41, %113
  %53 = phi i64 [ 0, %41 ], [ %60, %113 ]
  %54 = phi ptr [ %13, %41 ], [ %96, %113 ]
  %55 = phi ptr [ %16, %41 ], [ %94, %113 ]
  %56 = phi i32 [ %39, %41 ], [ %116, %113 ]
  %57 = phi i32 [ 0, %41 ], [ %115, %113 ]
  %58 = phi i32 [ %38, %41 ], [ %114, %113 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi float [ %91, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to x86_fp80
  %89 = fpext float %67 to x86_fp80
  %90 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %88, x86_fp80 %89)
  %91 = fptrunc x86_fp80 %90 to float
  %92 = icmp eq ptr %79, %63
  br i1 %92, label %93, label %65

93:                                               ; preds = %78, %52
  %94 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %95 = phi float [ 0.000000e+00, %52 ], [ %91, %78 ]
  %96 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %97 = icmp eq i32 %56, %59
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add i32 %57, 1
  br label %113

100:                                              ; preds = %93
  %101 = add i32 %58, 1
  %102 = icmp ult i32 %101, %19
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = add i32 %58, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !777
  %108 = zext i32 %101 to i64
  %109 = getelementptr inbounds i32, ptr %21, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !47, !noalias !777
  %111 = add i32 %107, %56
  %112 = sub i32 %111, %110
  br label %113

113:                                              ; preds = %100, %98, %103
  %114 = phi i32 [ %101, %103 ], [ %58, %98 ], [ %101, %100 ]
  %115 = phi i32 [ 0, %103 ], [ %99, %98 ], [ 0, %100 ]
  %116 = phi i32 [ %112, %103 ], [ %56, %98 ], [ -1, %100 ]
  %117 = zext i32 %58 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !106
  %120 = zext i32 %57 to i64
  %121 = getelementptr inbounds float, ptr %119, i64 %120
  %122 = load float, ptr %121, align 4, !tbaa !95
  %123 = fadd float %95, %122
  store float %123, ptr %121, align 4, !tbaa !95
  %124 = icmp eq i64 %60, %50
  br i1 %124, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIfEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %87, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %86, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds x86_fp80, ptr %14, i64 %45
  %50 = load x86_fp80, ptr %49, align 16, !tbaa !128
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !106
  %65 = getelementptr inbounds float, ptr %64, i64 %61
  %66 = load float, ptr %65, align 4, !tbaa !95
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext float %66 to x86_fp80
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !106
  %81 = getelementptr inbounds float, ptr %80, i64 %77
  %82 = load float, ptr %81, align 4, !tbaa !95
  %83 = fpext float %82 to x86_fp80
  %84 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %50, x86_fp80 %75, x86_fp80 %83)
  %85 = fptrunc x86_fp80 %84 to float
  store float %85, ptr %81, align 4, !tbaa !95
  %86 = add i32 %46, 1
  %87 = zext i32 %86 to i64
  %88 = icmp ugt i64 %37, %87
  br i1 %88, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %50, %3
  ret void

25:                                               ; preds = %13, %50
  %26 = phi i64 [ 0, %13 ], [ %30, %50 ]
  %27 = phi ptr [ %20, %13 ], [ %53, %50 ]
  %28 = phi ptr [ %15, %13 ], [ %54, %50 ]
  %29 = phi ptr [ %19, %13 ], [ %51, %50 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %48, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds x86_fp80, ptr %22, i64 %43
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  %46 = fpext float %37 to x86_fp80
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %45, x86_fp80 %46)
  %48 = fptrunc x86_fp80 %47 to float
  %49 = icmp eq ptr %39, %33
  br i1 %49, label %50, label %35

50:                                               ; preds = %35, %25
  %51 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %52 = phi float [ 0.000000e+00, %25 ], [ %48, %35 ]
  %53 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %54 = getelementptr inbounds float, ptr %28, i64 1
  store float %52, ptr %28, align 4, !tbaa !95
  %55 = icmp eq i64 %30, %23
  br i1 %55, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = zext i32 %16 to i64
  %29 = load i64, ptr %20, align 8, !tbaa !34
  br label %33

30:                                               ; preds = %46, %33
  %31 = icmp eq i64 %36, %28
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  ret void

33:                                               ; preds = %18, %30
  %34 = phi i64 [ %29, %18 ], [ %38, %30 ]
  %35 = phi i64 [ 0, %18 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i64, ptr %20, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !34
  %39 = and i64 %34, 4294967295
  %40 = icmp ugt i64 %38, %39
  br i1 %40, label %41, label %30

41:                                               ; preds = %33
  %42 = trunc i64 %34 to i32
  %43 = load ptr, ptr %21, align 8, !tbaa !46
  %44 = getelementptr inbounds x86_fp80, ptr %25, i64 %35
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  br label %46

46:                                               ; preds = %41, %46
  %47 = phi i64 [ %39, %41 ], [ %60, %46 ]
  %48 = phi i32 [ %42, %41 ], [ %59, %46 ]
  %49 = getelementptr inbounds i32, ptr %43, i64 %47
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = getelementptr inbounds x86_fp80, ptr %23, i64 %47
  %52 = load x86_fp80, ptr %51, align 16, !tbaa !128
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds float, ptr %27, i64 %53
  %55 = load float, ptr %54, align 4, !tbaa !95
  %56 = fpext float %55 to x86_fp80
  %57 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %52, x86_fp80 %45, x86_fp80 %56)
  %58 = fptrunc x86_fp80 %57 to float
  store float %58, ptr %54, align 4, !tbaa !95
  %59 = add i32 %48, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %38, %60
  br i1 %61, label %46, label %30
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %50, %3
  ret void

25:                                               ; preds = %13, %50
  %26 = phi i64 [ 0, %13 ], [ %30, %50 ]
  %27 = phi ptr [ %20, %13 ], [ %53, %50 ]
  %28 = phi ptr [ %15, %13 ], [ %54, %50 ]
  %29 = phi ptr [ %19, %13 ], [ %51, %50 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi float [ %48, %35 ], [ 0.000000e+00, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %29, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds x86_fp80, ptr %22, i64 %43
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  %46 = fpext float %37 to x86_fp80
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %45, x86_fp80 %46)
  %48 = fptrunc x86_fp80 %47 to float
  %49 = icmp eq ptr %39, %33
  br i1 %49, label %50, label %35

50:                                               ; preds = %35, %25
  %51 = phi ptr [ %29, %25 ], [ %41, %35 ]
  %52 = phi float [ 0.000000e+00, %25 ], [ %48, %35 ]
  %53 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %54 = getelementptr inbounds float, ptr %28, i64 1
  %55 = load float, ptr %28, align 4, !tbaa !95
  %56 = fadd float %52, %55
  store float %56, ptr %28, align 4, !tbaa !95
  %57 = icmp eq i64 %30, %23
  br i1 %57, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %37, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds x86_fp80, ptr %16, i64 %26
  %36 = load x86_fp80, ptr %35, align 16, !tbaa !128
  br label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %30, %32 ], [ %51, %37 ]
  %39 = phi i32 [ %33, %32 ], [ %50, %37 ]
  %40 = getelementptr inbounds i32, ptr %34, i64 %38
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = getelementptr inbounds x86_fp80, ptr %14, i64 %38
  %43 = load x86_fp80, ptr %42, align 16, !tbaa !128
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds float, ptr %18, i64 %44
  %46 = load float, ptr %45, align 4, !tbaa !95
  %47 = fpext float %46 to x86_fp80
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %36, x86_fp80 %47)
  %49 = fptrunc x86_fp80 %48 to float
  store float %49, ptr %45, align 4, !tbaa !95
  %50 = add i32 %39, 1
  %51 = zext i32 %50 to i64
  %52 = icmp ugt i64 %29, %51
  br i1 %52, label %37, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %66, %3
  ret void

29:                                               ; preds = %13, %66
  %30 = phi i64 [ 0, %13 ], [ %34, %66 ]
  %31 = phi ptr [ %20, %13 ], [ %69, %66 ]
  %32 = phi ptr [ %15, %13 ], [ %70, %66 ]
  %33 = phi ptr [ %19, %13 ], [ %67, %66 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi float [ %64, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !135
  %60 = getelementptr inbounds x86_fp80, ptr %59, i64 %56
  %61 = load x86_fp80, ptr %60, align 16, !tbaa !128
  %62 = fpext float %41 to x86_fp80
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %61, x86_fp80 %62)
  %64 = fptrunc x86_fp80 %63 to float
  %65 = icmp eq ptr %53, %37
  br i1 %65, label %66, label %39

66:                                               ; preds = %52, %29
  %67 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %68 = phi float [ 0.000000e+00, %29 ], [ %64, %52 ]
  %69 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %70 = getelementptr inbounds float, ptr %32, i64 1
  store float %68, ptr %32, align 4, !tbaa !95
  %71 = icmp eq i64 %34, %27
  br i1 %71, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !109
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !106
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %9, i8 0, i64 %11, i1 false), !tbaa !95
  br label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !8
  %15 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %14, i64 0, i32 9
  %22 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %16 to i64
  %33 = load i64, ptr %20, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %64, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %12
  ret void

37:                                               ; preds = %18, %34
  %38 = phi i64 [ %33, %18 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %18 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %20, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %21, align 8, !tbaa !46
  %48 = trunc i64 %39 to i32
  br label %49

49:                                               ; preds = %45, %64
  %50 = phi i64 [ %43, %45 ], [ %79, %64 ]
  %51 = phi i32 [ %46, %45 ], [ %78, %64 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds x86_fp80, ptr %23, i64 %50
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i32 [ %25, %49 ], [ %58, %56 ]
  %58 = add i32 %57, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %27, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !47
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %39, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56
  %65 = sub i32 %48, %61
  %66 = zext i32 %65 to i64
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"class.dealii::Vector.27", ptr %29, i64 %67, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !135
  %70 = getelementptr inbounds x86_fp80, ptr %69, i64 %66
  %71 = load x86_fp80, ptr %70, align 16, !tbaa !128
  %72 = zext i32 %53 to i64
  %73 = getelementptr inbounds float, ptr %31, i64 %72
  %74 = load float, ptr %73, align 4, !tbaa !95
  %75 = fpext float %74 to x86_fp80
  %76 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %55, x86_fp80 %71, x86_fp80 %75)
  %77 = fptrunc x86_fp80 %76 to float
  store float %77, ptr %73, align 4, !tbaa !95
  %78 = add i32 %51, 1
  %79 = zext i32 %78 to i64
  %80 = icmp ugt i64 %42, %79
  br i1 %80, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !106
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %66, %3
  ret void

29:                                               ; preds = %13, %66
  %30 = phi i64 [ 0, %13 ], [ %34, %66 ]
  %31 = phi ptr [ %20, %13 ], [ %69, %66 ]
  %32 = phi ptr [ %15, %13 ], [ %70, %66 ]
  %33 = phi ptr [ %19, %13 ], [ %67, %66 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi float [ %64, %52 ], [ 0.000000e+00, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %33, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !135
  %60 = getelementptr inbounds x86_fp80, ptr %59, i64 %56
  %61 = load x86_fp80, ptr %60, align 16, !tbaa !128
  %62 = fpext float %41 to x86_fp80
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %61, x86_fp80 %62)
  %64 = fptrunc x86_fp80 %63 to float
  %65 = icmp eq ptr %53, %37
  br i1 %65, label %66, label %39

66:                                               ; preds = %52, %29
  %67 = phi ptr [ %33, %29 ], [ %54, %52 ]
  %68 = phi float [ 0.000000e+00, %29 ], [ %64, %52 ]
  %69 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %70 = getelementptr inbounds float, ptr %32, i64 1
  %71 = load float, ptr %32, align 4, !tbaa !95
  %72 = fadd float %68, %71
  store float %72, ptr %32, align 4, !tbaa !95
  %73 = icmp eq i64 %34, %27
  br i1 %73, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIfEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %70, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %69, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = zext i32 %44 to i64
  %64 = getelementptr inbounds float, ptr %22, i64 %63
  %65 = load float, ptr %64, align 4, !tbaa !95
  %66 = fpext float %65 to x86_fp80
  %67 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %62, x86_fp80 %66)
  %68 = fptrunc x86_fp80 %67 to float
  store float %68, ptr %64, align 4, !tbaa !95
  %69 = add i32 %42, 1
  %70 = zext i32 %69 to i64
  %71 = icmp ugt i64 %33, %70
  br i1 %71, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !780
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !780
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !780
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %96, %37
  ret void

48:                                               ; preds = %41, %96
  %49 = phi i64 [ 0, %41 ], [ %56, %96 ]
  %50 = phi ptr [ %13, %41 ], [ %79, %96 ]
  %51 = phi ptr [ %16, %41 ], [ %77, %96 ]
  %52 = phi i32 [ %39, %41 ], [ %99, %96 ]
  %53 = phi i32 [ 0, %41 ], [ %98, %96 ]
  %54 = phi i32 [ %38, %41 ], [ %97, %96 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %74, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds x86_fp80, ptr %43, i64 %69
  %71 = load x86_fp80, ptr %70, align 16, !tbaa !128
  %72 = fpext float %63 to x86_fp80
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %71, x86_fp80 %72)
  %74 = fptrunc x86_fp80 %73 to float
  %75 = icmp eq ptr %65, %59
  br i1 %75, label %76, label %61

76:                                               ; preds = %61, %48
  %77 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %78 = phi float [ 0.000000e+00, %48 ], [ %74, %61 ]
  %79 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %80 = icmp eq i32 %52, %55
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = add i32 %53, 1
  br label %96

83:                                               ; preds = %76
  %84 = add i32 %54, 1
  %85 = icmp ult i32 %84, %19
  br i1 %85, label %86, label %96

86:                                               ; preds = %83
  %87 = add i32 %54, 2
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, ptr %21, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !47, !noalias !783
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, ptr %21, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47, !noalias !783
  %94 = add i32 %90, %52
  %95 = sub i32 %94, %93
  br label %96

96:                                               ; preds = %83, %81, %86
  %97 = phi i32 [ %84, %86 ], [ %54, %81 ], [ %84, %83 ]
  %98 = phi i32 [ 0, %86 ], [ %82, %81 ], [ 0, %83 ]
  %99 = phi i32 [ %95, %86 ], [ %52, %81 ], [ -1, %83 ]
  %100 = zext i32 %54 to i64
  %101 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %100, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !106
  %103 = zext i32 %53 to i64
  %104 = getelementptr inbounds float, ptr %102, i64 %103
  store float %78, ptr %104, align 4, !tbaa !95
  %105 = icmp eq i64 %56, %46
  br i1 %105, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = zext i32 %56 to i64
  %71 = load i64, ptr %60, align 8, !tbaa !34
  br label %75

72:                                               ; preds = %102, %75
  %73 = icmp eq i64 %78, %70
  br i1 %73, label %74, label %75

74:                                               ; preds = %72, %52
  ret void

75:                                               ; preds = %58, %72
  %76 = phi i64 [ %71, %58 ], [ %80, %72 ]
  %77 = phi i64 [ 0, %58 ], [ %78, %72 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = getelementptr inbounds i64, ptr %60, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = and i64 %76, 4294967295
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %83, label %72

83:                                               ; preds = %75
  %84 = trunc i64 %76 to i32
  %85 = load ptr, ptr %61, align 8, !tbaa !46
  %86 = getelementptr inbounds x86_fp80, ptr %65, i64 %77
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  br label %88

88:                                               ; preds = %83, %102
  %89 = phi i64 [ %81, %83 ], [ %114, %102 ]
  %90 = phi i32 [ %84, %83 ], [ %113, %102 ]
  %91 = getelementptr inbounds i32, ptr %85, i64 %89
  %92 = load i32, ptr %91, align 4, !tbaa !47
  %93 = getelementptr inbounds x86_fp80, ptr %63, i64 %89
  %94 = load x86_fp80, ptr %93, align 16, !tbaa !128
  br label %95

95:                                               ; preds = %95, %88
  %96 = phi i32 [ %5, %88 ], [ %97, %95 ]
  %97 = add i32 %96, -1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i32, ptr %67, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !47
  %101 = icmp ugt i32 %100, %92
  br i1 %101, label %95, label %102

102:                                              ; preds = %95
  %103 = sub i32 %92, %100
  %104 = zext i32 %103 to i64
  %105 = zext i32 %97 to i64
  %106 = getelementptr inbounds %"class.dealii::Vector.20", ptr %69, i64 %105, i32 3
  %107 = load ptr, ptr %106, align 8, !tbaa !106
  %108 = getelementptr inbounds float, ptr %107, i64 %104
  %109 = load float, ptr %108, align 4, !tbaa !95
  %110 = fpext float %109 to x86_fp80
  %111 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %94, x86_fp80 %87, x86_fp80 %110)
  %112 = fptrunc x86_fp80 %111 to float
  store float %112, ptr %108, align 4, !tbaa !95
  %113 = add i32 %90, 1
  %114 = zext i32 %113 to i64
  %115 = icmp ugt i64 %80, %114
  br i1 %115, label %88, label %72
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !786
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !786
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !786
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !299
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %96, %37
  ret void

48:                                               ; preds = %41, %96
  %49 = phi i64 [ 0, %41 ], [ %56, %96 ]
  %50 = phi ptr [ %13, %41 ], [ %79, %96 ]
  %51 = phi ptr [ %16, %41 ], [ %77, %96 ]
  %52 = phi i32 [ %39, %41 ], [ %99, %96 ]
  %53 = phi i32 [ 0, %41 ], [ %98, %96 ]
  %54 = phi i32 [ %38, %41 ], [ %97, %96 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %76, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi float [ %74, %61 ], [ 0.000000e+00, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds x86_fp80, ptr %43, i64 %69
  %71 = load x86_fp80, ptr %70, align 16, !tbaa !128
  %72 = fpext float %63 to x86_fp80
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %71, x86_fp80 %72)
  %74 = fptrunc x86_fp80 %73 to float
  %75 = icmp eq ptr %65, %59
  br i1 %75, label %76, label %61

76:                                               ; preds = %61, %48
  %77 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %78 = phi float [ 0.000000e+00, %48 ], [ %74, %61 ]
  %79 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %80 = icmp eq i32 %52, %55
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = add i32 %53, 1
  br label %96

83:                                               ; preds = %76
  %84 = add i32 %54, 1
  %85 = icmp ult i32 %84, %19
  br i1 %85, label %86, label %96

86:                                               ; preds = %83
  %87 = add i32 %54, 2
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, ptr %21, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !47, !noalias !789
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, ptr %21, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !47, !noalias !789
  %94 = add i32 %90, %52
  %95 = sub i32 %94, %93
  br label %96

96:                                               ; preds = %83, %81, %86
  %97 = phi i32 [ %84, %86 ], [ %54, %81 ], [ %84, %83 ]
  %98 = phi i32 [ 0, %86 ], [ %82, %81 ], [ 0, %83 ]
  %99 = phi i32 [ %95, %86 ], [ %52, %81 ], [ -1, %83 ]
  %100 = zext i32 %54 to i64
  %101 = getelementptr inbounds %"class.dealii::Vector.20", ptr %45, i64 %100, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !106
  %103 = zext i32 %53 to i64
  %104 = getelementptr inbounds float, ptr %102, i64 %103
  %105 = load float, ptr %104, align 4, !tbaa !95
  %106 = fadd float %78, %105
  store float %106, ptr %104, align 4, !tbaa !95
  %107 = icmp eq i64 %56, %46
  br i1 %107, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIfEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %30
  %40 = load x86_fp80, ptr %39, align 16, !tbaa !128
  br label %41

41:                                               ; preds = %36, %55
  %42 = phi i64 [ %34, %36 ], [ %67, %55 ]
  %43 = phi i32 [ %37, %36 ], [ %66, %55 ]
  %44 = getelementptr inbounds i32, ptr %38, i64 %42
  %45 = load i32, ptr %44, align 4, !tbaa !47
  %46 = getelementptr inbounds x86_fp80, ptr %14, i64 %42
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !128
  br label %48

48:                                               ; preds = %48, %41
  %49 = phi i32 [ %18, %41 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %45
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = sub i32 %45, %53
  %57 = zext i32 %56 to i64
  %58 = zext i32 %50 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.20", ptr %22, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = getelementptr inbounds float, ptr %60, i64 %57
  %62 = load float, ptr %61, align 4, !tbaa !95
  %63 = fpext float %62 to x86_fp80
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %47, x86_fp80 %40, x86_fp80 %63)
  %65 = fptrunc x86_fp80 %64 to float
  store float %65, ptr %61, align 4, !tbaa !95
  %66 = add i32 %43, 1
  %67 = zext i32 %66 to i64
  %68 = icmp ugt i64 %33, %67
  br i1 %68, label %41, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !792
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !792
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !792
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %112, %37
  ret void

52:                                               ; preds = %41, %112
  %53 = phi i64 [ 0, %41 ], [ %60, %112 ]
  %54 = phi ptr [ %13, %41 ], [ %95, %112 ]
  %55 = phi ptr [ %16, %41 ], [ %93, %112 ]
  %56 = phi i32 [ %39, %41 ], [ %115, %112 ]
  %57 = phi i32 [ 0, %41 ], [ %114, %112 ]
  %58 = phi i32 [ %38, %41 ], [ %113, %112 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi float [ %90, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !135
  %86 = getelementptr inbounds x86_fp80, ptr %85, i64 %82
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  %88 = fpext float %67 to x86_fp80
  %89 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %87, x86_fp80 %88)
  %90 = fptrunc x86_fp80 %89 to float
  %91 = icmp eq ptr %79, %63
  br i1 %91, label %92, label %65

92:                                               ; preds = %78, %52
  %93 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %94 = phi float [ 0.000000e+00, %52 ], [ %90, %78 ]
  %95 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %96 = icmp eq i32 %56, %59
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = add i32 %57, 1
  br label %112

99:                                               ; preds = %92
  %100 = add i32 %58, 1
  %101 = icmp ult i32 %100, %19
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = add i32 %58, 2
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %21, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !47, !noalias !795
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %21, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !47, !noalias !795
  %110 = add i32 %106, %56
  %111 = sub i32 %110, %109
  br label %112

112:                                              ; preds = %99, %97, %102
  %113 = phi i32 [ %100, %102 ], [ %58, %97 ], [ %100, %99 ]
  %114 = phi i32 [ 0, %102 ], [ %98, %97 ], [ 0, %99 ]
  %115 = phi i32 [ %111, %102 ], [ %56, %97 ], [ -1, %99 ]
  %116 = zext i32 %58 to i64
  %117 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %116, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !106
  %119 = zext i32 %57 to i64
  %120 = getelementptr inbounds float, ptr %118, i64 %119
  store float %94, ptr %120, align 4, !tbaa !95
  %121 = icmp eq i64 %60, %50
  br i1 %121, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !299
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %36, %13
  %16 = phi i64 [ 0, %13 ], [ %37, %36 ]
  %17 = phi i64 [ 0, %13 ], [ %38, %36 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !109
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = zext i32 %19 to i64
  %25 = shl nuw nsw i64 %24, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %23, i8 0, i64 %25, i1 false), !tbaa !95
  br label %26

26:                                               ; preds = %21, %15
  %27 = or i64 %16, 1
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !109
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %27, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !106
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !95
  br label %36

36:                                               ; preds = %31, %26
  %37 = add nuw nsw i64 %16, 2
  %38 = add i64 %17, 2
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %40, label %15

40:                                               ; preds = %36, %7
  %41 = phi i64 [ 0, %7 ], [ %37, %36 ]
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !109
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector.20", ptr %9, i64 %41, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !106
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %49, i8 0, i64 %51, i1 false), !tbaa !95
  br label %52

52:                                               ; preds = %40, %47, %43, %3
  %53 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !33
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !32
  %61 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %54, i64 0, i32 9
  %62 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = zext i32 %56 to i64
  %75 = load i64, ptr %60, align 8, !tbaa !34
  br label %79

76:                                               ; preds = %121, %79
  %77 = icmp eq i64 %82, %74
  br i1 %77, label %78, label %79

78:                                               ; preds = %76, %52
  ret void

79:                                               ; preds = %58, %76
  %80 = phi i64 [ %75, %58 ], [ %84, %76 ]
  %81 = phi i64 [ 0, %58 ], [ %82, %76 ]
  %82 = add nuw nsw i64 %81, 1
  %83 = getelementptr inbounds i64, ptr %60, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !34
  %85 = and i64 %80, 4294967295
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %76

87:                                               ; preds = %79
  %88 = trunc i64 %80 to i32
  %89 = load ptr, ptr %61, align 8, !tbaa !46
  %90 = trunc i64 %81 to i32
  br label %91

91:                                               ; preds = %87, %121
  %92 = phi i64 [ %85, %87 ], [ %133, %121 ]
  %93 = phi i32 [ %88, %87 ], [ %132, %121 ]
  %94 = getelementptr inbounds i32, ptr %89, i64 %92
  %95 = load i32, ptr %94, align 4, !tbaa !47
  %96 = getelementptr inbounds x86_fp80, ptr %63, i64 %92
  %97 = load x86_fp80, ptr %96, align 16, !tbaa !128
  br label %98

98:                                               ; preds = %98, %91
  %99 = phi i32 [ %65, %91 ], [ %100, %98 ]
  %100 = add i32 %99, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %67, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %81, %104
  br i1 %105, label %98, label %106

106:                                              ; preds = %98
  %107 = sub i32 %90, %103
  %108 = zext i32 %107 to i64
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.dealii::Vector.27", ptr %69, i64 %109, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !135
  %112 = getelementptr inbounds x86_fp80, ptr %111, i64 %108
  %113 = load x86_fp80, ptr %112, align 16, !tbaa !128
  br label %114

114:                                              ; preds = %114, %106
  %115 = phi i32 [ %5, %106 ], [ %116, %114 ]
  %116 = add i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %71, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !47
  %120 = icmp ugt i32 %119, %95
  br i1 %120, label %114, label %121

121:                                              ; preds = %114
  %122 = sub i32 %95, %119
  %123 = zext i32 %122 to i64
  %124 = zext i32 %116 to i64
  %125 = getelementptr inbounds %"class.dealii::Vector.20", ptr %73, i64 %124, i32 3
  %126 = load ptr, ptr %125, align 8, !tbaa !106
  %127 = getelementptr inbounds float, ptr %126, i64 %123
  %128 = load float, ptr %127, align 4, !tbaa !95
  %129 = fpext float %128 to x86_fp80
  %130 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %97, x86_fp80 %113, x86_fp80 %129)
  %131 = fptrunc x86_fp80 %130 to float
  store float %131, ptr %127, align 4, !tbaa !95
  %132 = add i32 %93, 1
  %133 = zext i32 %132 to i64
  %134 = icmp ugt i64 %84, %133
  br i1 %134, label %91, label %76
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !798
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !798
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !798
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !299
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %112, %37
  ret void

52:                                               ; preds = %41, %112
  %53 = phi i64 [ 0, %41 ], [ %60, %112 ]
  %54 = phi ptr [ %13, %41 ], [ %95, %112 ]
  %55 = phi ptr [ %16, %41 ], [ %93, %112 ]
  %56 = phi i32 [ %39, %41 ], [ %115, %112 ]
  %57 = phi i32 [ 0, %41 ], [ %114, %112 ]
  %58 = phi i32 [ %38, %41 ], [ %113, %112 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi float [ %90, %78 ], [ 0.000000e+00, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !135
  %86 = getelementptr inbounds x86_fp80, ptr %85, i64 %82
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  %88 = fpext float %67 to x86_fp80
  %89 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %87, x86_fp80 %88)
  %90 = fptrunc x86_fp80 %89 to float
  %91 = icmp eq ptr %79, %63
  br i1 %91, label %92, label %65

92:                                               ; preds = %78, %52
  %93 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %94 = phi float [ 0.000000e+00, %52 ], [ %90, %78 ]
  %95 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %96 = icmp eq i32 %56, %59
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = add i32 %57, 1
  br label %112

99:                                               ; preds = %92
  %100 = add i32 %58, 1
  %101 = icmp ult i32 %100, %19
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = add i32 %58, 2
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %21, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !47, !noalias !801
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %21, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !47, !noalias !801
  %110 = add i32 %106, %56
  %111 = sub i32 %110, %109
  br label %112

112:                                              ; preds = %99, %97, %102
  %113 = phi i32 [ %100, %102 ], [ %58, %97 ], [ %100, %99 ]
  %114 = phi i32 [ 0, %102 ], [ %98, %97 ], [ 0, %99 ]
  %115 = phi i32 [ %111, %102 ], [ %56, %97 ], [ -1, %99 ]
  %116 = zext i32 %58 to i64
  %117 = getelementptr inbounds %"class.dealii::Vector.20", ptr %49, i64 %116, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !106
  %119 = zext i32 %57 to i64
  %120 = getelementptr inbounds float, ptr %118, i64 %119
  %121 = load float, ptr %120, align 4, !tbaa !95
  %122 = fadd float %94, %121
  store float %122, ptr %120, align 4, !tbaa !95
  %123 = icmp eq i64 %60, %50
  br i1 %123, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIfEENS3_IeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %86, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %85, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds x86_fp80, ptr %14, i64 %45
  %50 = load x86_fp80, ptr %49, align 16, !tbaa !128
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !135
  %65 = getelementptr inbounds x86_fp80, ptr %64, i64 %61
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = sub i32 %48, %72
  %76 = zext i32 %75 to i64
  %77 = zext i32 %69 to i64
  %78 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %77, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !106
  %80 = getelementptr inbounds float, ptr %79, i64 %76
  %81 = load float, ptr %80, align 4, !tbaa !95
  %82 = fpext float %81 to x86_fp80
  %83 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %50, x86_fp80 %66, x86_fp80 %82)
  %84 = fptrunc x86_fp80 %83 to float
  store float %84, ptr %80, align 4, !tbaa !95
  %85 = add i32 %46, 1
  %86 = zext i32 %85 to i64
  %87 = icmp ugt i64 %37, %86
  br i1 %87, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %49, %3
  ret void

25:                                               ; preds = %13, %49
  %26 = phi i64 [ 0, %13 ], [ %30, %49 ]
  %27 = phi ptr [ %20, %13 ], [ %52, %49 ]
  %28 = phi ptr [ %19, %13 ], [ %50, %49 ]
  %29 = phi ptr [ %15, %13 ], [ %53, %49 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %47, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, ptr %22, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fpext double %45 to x86_fp80
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %46, x86_fp80 %37)
  %48 = icmp eq ptr %39, %33
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %25
  %50 = phi ptr [ %28, %25 ], [ %41, %35 ]
  %51 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %47, %35 ]
  %52 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %53 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  store x86_fp80 %51, ptr %29, align 16, !tbaa !128
  %54 = icmp eq i64 %30, %23
  br i1 %54, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %20 to i64
  %33 = load i64, ptr %24, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %51, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %16
  ret void

37:                                               ; preds = %22, %34
  %38 = phi i64 [ %33, %22 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %22 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %24, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %25, align 8, !tbaa !46
  %48 = getelementptr inbounds double, ptr %29, i64 %39
  %49 = load double, ptr %48, align 8, !tbaa !30
  %50 = fpext double %49 to x86_fp80
  br label %51

51:                                               ; preds = %45, %51
  %52 = phi i64 [ %43, %45 ], [ %63, %51 ]
  %53 = phi i32 [ %46, %45 ], [ %62, %51 ]
  %54 = getelementptr inbounds i32, ptr %47, i64 %52
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = getelementptr inbounds x86_fp80, ptr %27, i64 %52
  %57 = load x86_fp80, ptr %56, align 16, !tbaa !128
  %58 = zext i32 %55 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %31, i64 %58
  %60 = load x86_fp80, ptr %59, align 16, !tbaa !128
  %61 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %57, x86_fp80 %50, x86_fp80 %60)
  store x86_fp80 %61, ptr %59, align 16, !tbaa !128
  %62 = add i32 %53, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %42, %63
  br i1 %64, label %51, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %49, %3
  ret void

25:                                               ; preds = %13, %49
  %26 = phi i64 [ 0, %13 ], [ %30, %49 ]
  %27 = phi ptr [ %20, %13 ], [ %52, %49 ]
  %28 = phi ptr [ %19, %13 ], [ %50, %49 ]
  %29 = phi ptr [ %15, %13 ], [ %53, %49 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %47, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds double, ptr %22, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !30
  %46 = fpext double %45 to x86_fp80
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %46, x86_fp80 %37)
  %48 = icmp eq ptr %39, %33
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %25
  %50 = phi ptr [ %28, %25 ], [ %41, %35 ]
  %51 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %47, %35 ]
  %52 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %53 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  %54 = load x86_fp80, ptr %29, align 16, !tbaa !128
  %55 = fadd x86_fp80 %51, %54
  store x86_fp80 %55, ptr %29, align 16, !tbaa !128
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %38, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds double, ptr %16, i64 %26
  %36 = load double, ptr %35, align 8, !tbaa !30
  %37 = fpext double %36 to x86_fp80
  br label %38

38:                                               ; preds = %32, %38
  %39 = phi i64 [ %30, %32 ], [ %50, %38 ]
  %40 = phi i32 [ %33, %32 ], [ %49, %38 ]
  %41 = getelementptr inbounds i32, ptr %34, i64 %39
  %42 = load i32, ptr %41, align 4, !tbaa !47
  %43 = getelementptr inbounds x86_fp80, ptr %14, i64 %39
  %44 = load x86_fp80, ptr %43, align 16, !tbaa !128
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds x86_fp80, ptr %18, i64 %45
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !128
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %37, x86_fp80 %47)
  store x86_fp80 %48, ptr %46, align 16, !tbaa !128
  %49 = add i32 %40, 1
  %50 = zext i32 %49 to i64
  %51 = icmp ugt i64 %29, %50
  br i1 %51, label %38, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %65, %3
  ret void

29:                                               ; preds = %13, %65
  %30 = phi i64 [ 0, %13 ], [ %34, %65 ]
  %31 = phi ptr [ %20, %13 ], [ %68, %65 ]
  %32 = phi ptr [ %19, %13 ], [ %66, %65 ]
  %33 = phi ptr [ %15, %13 ], [ %69, %65 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %65, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %63, %52 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %32, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !53
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = fpext double %61 to x86_fp80
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %62, x86_fp80 %41)
  %64 = icmp eq ptr %53, %37
  br i1 %64, label %65, label %39

65:                                               ; preds = %52, %29
  %66 = phi ptr [ %32, %29 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %63, %52 ]
  %68 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %69 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  store x86_fp80 %67, ptr %33, align 16, !tbaa !128
  %70 = icmp eq i64 %34, %27
  br i1 %70, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %20 to i64
  %37 = load i64, ptr %24, align 8, !tbaa !34
  br label %41

38:                                               ; preds = %68, %41
  %39 = icmp eq i64 %44, %36
  br i1 %39, label %40, label %41

40:                                               ; preds = %38, %16
  ret void

41:                                               ; preds = %22, %38
  %42 = phi i64 [ %37, %22 ], [ %46, %38 ]
  %43 = phi i64 [ 0, %22 ], [ %44, %38 ]
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr inbounds i64, ptr %24, i64 %44
  %46 = load i64, ptr %45, align 8, !tbaa !34
  %47 = and i64 %42, 4294967295
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %49, label %38

49:                                               ; preds = %41
  %50 = trunc i64 %42 to i32
  %51 = load ptr, ptr %25, align 8, !tbaa !46
  %52 = trunc i64 %43 to i32
  br label %53

53:                                               ; preds = %49, %68
  %54 = phi i64 [ %47, %49 ], [ %82, %68 ]
  %55 = phi i32 [ %50, %49 ], [ %81, %68 ]
  %56 = getelementptr inbounds i32, ptr %51, i64 %54
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = getelementptr inbounds x86_fp80, ptr %27, i64 %54
  %59 = load x86_fp80, ptr %58, align 16, !tbaa !128
  br label %60

60:                                               ; preds = %60, %53
  %61 = phi i32 [ %29, %53 ], [ %62, %60 ]
  %62 = add i32 %61, -1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, ptr %31, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !47
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %43, %66
  br i1 %67, label %60, label %68

68:                                               ; preds = %60
  %69 = sub i32 %52, %65
  %70 = zext i32 %69 to i64
  %71 = zext i32 %62 to i64
  %72 = getelementptr inbounds %"class.dealii::Vector", ptr %33, i64 %71, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !53
  %74 = getelementptr inbounds double, ptr %73, i64 %70
  %75 = load double, ptr %74, align 8, !tbaa !30
  %76 = fpext double %75 to x86_fp80
  %77 = zext i32 %57 to i64
  %78 = getelementptr inbounds x86_fp80, ptr %35, i64 %77
  %79 = load x86_fp80, ptr %78, align 16, !tbaa !128
  %80 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %59, x86_fp80 %76, x86_fp80 %79)
  store x86_fp80 %80, ptr %78, align 16, !tbaa !128
  %81 = add i32 %55, 1
  %82 = zext i32 %81 to i64
  %83 = icmp ugt i64 %46, %82
  br i1 %83, label %53, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %65, %3
  ret void

29:                                               ; preds = %13, %65
  %30 = phi i64 [ 0, %13 ], [ %34, %65 ]
  %31 = phi ptr [ %20, %13 ], [ %68, %65 ]
  %32 = phi ptr [ %19, %13 ], [ %66, %65 ]
  %33 = phi ptr [ %15, %13 ], [ %69, %65 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %65, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %63, %52 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %32, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !53
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !30
  %62 = fpext double %61 to x86_fp80
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %62, x86_fp80 %41)
  %64 = icmp eq ptr %53, %37
  br i1 %64, label %65, label %39

65:                                               ; preds = %52, %29
  %66 = phi ptr [ %32, %29 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %63, %52 ]
  %68 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %69 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  %70 = load x86_fp80, ptr %33, align 16, !tbaa !128
  %71 = fadd x86_fp80 %67, %70
  store x86_fp80 %71, ptr %33, align 16, !tbaa !128
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %69, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %68, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !53
  %61 = getelementptr inbounds double, ptr %60, i64 %57
  %62 = load double, ptr %61, align 8, !tbaa !30
  %63 = fpext double %62 to x86_fp80
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds x86_fp80, ptr %22, i64 %64
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  %67 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %63, x86_fp80 %66)
  store x86_fp80 %67, ptr %65, align 16, !tbaa !128
  %68 = add i32 %42, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %33, %69
  br i1 %70, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !804
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !804
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !804
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %95, %37
  ret void

48:                                               ; preds = %41, %95
  %49 = phi i64 [ 0, %41 ], [ %56, %95 ]
  %50 = phi ptr [ %13, %41 ], [ %78, %95 ]
  %51 = phi ptr [ %16, %41 ], [ %76, %95 ]
  %52 = phi i32 [ %39, %41 ], [ %98, %95 ]
  %53 = phi i32 [ 0, %41 ], [ %97, %95 ]
  %54 = phi i32 [ %38, %41 ], [ %96, %95 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %73, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds double, ptr %43, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fpext double %71 to x86_fp80
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %72, x86_fp80 %63)
  %74 = icmp eq ptr %65, %59
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %48
  %76 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %77 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %73, %61 ]
  %78 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %79 = icmp eq i32 %52, %55
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = add i32 %53, 1
  br label %95

82:                                               ; preds = %75
  %83 = add i32 %54, 1
  %84 = icmp ult i32 %83, %19
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = add i32 %54, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %21, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !47, !noalias !807
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i32, ptr %21, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !47, !noalias !807
  %93 = add i32 %89, %52
  %94 = sub i32 %93, %92
  br label %95

95:                                               ; preds = %82, %80, %85
  %96 = phi i32 [ %83, %85 ], [ %54, %80 ], [ %83, %82 ]
  %97 = phi i32 [ 0, %85 ], [ %81, %80 ], [ 0, %82 ]
  %98 = phi i32 [ %94, %85 ], [ %52, %80 ], [ -1, %82 ]
  %99 = zext i32 %54 to i64
  %100 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %99, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !135
  %102 = zext i32 %53 to i64
  %103 = getelementptr inbounds x86_fp80, ptr %101, i64 %102
  store x86_fp80 %77, ptr %103, align 16, !tbaa !128
  %104 = icmp eq i64 %56, %46
  br i1 %104, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %77 = load ptr, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = zext i32 %68 to i64
  %83 = load i64, ptr %72, align 8, !tbaa !34
  br label %87

84:                                               ; preds = %115, %87
  %85 = icmp eq i64 %90, %82
  br i1 %85, label %86, label %87

86:                                               ; preds = %84, %64
  ret void

87:                                               ; preds = %70, %84
  %88 = phi i64 [ %83, %70 ], [ %92, %84 ]
  %89 = phi i64 [ 0, %70 ], [ %90, %84 ]
  %90 = add nuw nsw i64 %89, 1
  %91 = getelementptr inbounds i64, ptr %72, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !34
  %93 = and i64 %88, 4294967295
  %94 = icmp ugt i64 %92, %93
  br i1 %94, label %95, label %84

95:                                               ; preds = %87
  %96 = trunc i64 %88 to i32
  %97 = load ptr, ptr %73, align 8, !tbaa !46
  %98 = getelementptr inbounds double, ptr %77, i64 %89
  %99 = load double, ptr %98, align 8, !tbaa !30
  %100 = fpext double %99 to x86_fp80
  br label %101

101:                                              ; preds = %95, %115
  %102 = phi i64 [ %93, %95 ], [ %125, %115 ]
  %103 = phi i32 [ %96, %95 ], [ %124, %115 ]
  %104 = getelementptr inbounds i32, ptr %97, i64 %102
  %105 = load i32, ptr %104, align 4, !tbaa !47
  %106 = getelementptr inbounds x86_fp80, ptr %75, i64 %102
  %107 = load x86_fp80, ptr %106, align 16, !tbaa !128
  br label %108

108:                                              ; preds = %108, %101
  %109 = phi i32 [ %5, %101 ], [ %110, %108 ]
  %110 = add i32 %109, -1
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i32, ptr %79, i64 %111
  %113 = load i32, ptr %112, align 4, !tbaa !47
  %114 = icmp ugt i32 %113, %105
  br i1 %114, label %108, label %115

115:                                              ; preds = %108
  %116 = sub i32 %105, %113
  %117 = zext i32 %116 to i64
  %118 = zext i32 %110 to i64
  %119 = getelementptr inbounds %"class.dealii::Vector.27", ptr %81, i64 %118, i32 3
  %120 = load ptr, ptr %119, align 8, !tbaa !135
  %121 = getelementptr inbounds x86_fp80, ptr %120, i64 %117
  %122 = load x86_fp80, ptr %121, align 16, !tbaa !128
  %123 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %107, x86_fp80 %100, x86_fp80 %122)
  store x86_fp80 %123, ptr %121, align 16, !tbaa !128
  %124 = add i32 %103, 1
  %125 = zext i32 %124 to i64
  %126 = icmp ugt i64 %92, %125
  br i1 %126, label %101, label %84
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !810
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !810
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !810
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %95, %37
  ret void

48:                                               ; preds = %41, %95
  %49 = phi i64 [ 0, %41 ], [ %56, %95 ]
  %50 = phi ptr [ %13, %41 ], [ %78, %95 ]
  %51 = phi ptr [ %16, %41 ], [ %76, %95 ]
  %52 = phi i32 [ %39, %41 ], [ %98, %95 ]
  %53 = phi i32 [ 0, %41 ], [ %97, %95 ]
  %54 = phi i32 [ %38, %41 ], [ %96, %95 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %73, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds double, ptr %43, i64 %69
  %71 = load double, ptr %70, align 8, !tbaa !30
  %72 = fpext double %71 to x86_fp80
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %72, x86_fp80 %63)
  %74 = icmp eq ptr %65, %59
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %48
  %76 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %77 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %73, %61 ]
  %78 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %79 = icmp eq i32 %52, %55
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = add i32 %53, 1
  br label %95

82:                                               ; preds = %75
  %83 = add i32 %54, 1
  %84 = icmp ult i32 %83, %19
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = add i32 %54, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %21, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !47, !noalias !813
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i32, ptr %21, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !47, !noalias !813
  %93 = add i32 %89, %52
  %94 = sub i32 %93, %92
  br label %95

95:                                               ; preds = %82, %80, %85
  %96 = phi i32 [ %83, %85 ], [ %54, %80 ], [ %83, %82 ]
  %97 = phi i32 [ 0, %85 ], [ %81, %80 ], [ 0, %82 ]
  %98 = phi i32 [ %94, %85 ], [ %52, %80 ], [ -1, %82 ]
  %99 = zext i32 %54 to i64
  %100 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %99, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !135
  %102 = zext i32 %53 to i64
  %103 = getelementptr inbounds x86_fp80, ptr %101, i64 %102
  %104 = load x86_fp80, ptr %103, align 16, !tbaa !128
  %105 = fadd x86_fp80 %77, %104
  store x86_fp80 %105, ptr %103, align 16, !tbaa !128
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %56, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds double, ptr %16, i64 %30
  %40 = load double, ptr %39, align 8, !tbaa !30
  %41 = fpext double %40 to x86_fp80
  br label %42

42:                                               ; preds = %36, %56
  %43 = phi i64 [ %34, %36 ], [ %66, %56 ]
  %44 = phi i32 [ %37, %36 ], [ %65, %56 ]
  %45 = getelementptr inbounds i32, ptr %38, i64 %43
  %46 = load i32, ptr %45, align 4, !tbaa !47
  %47 = getelementptr inbounds x86_fp80, ptr %14, i64 %43
  %48 = load x86_fp80, ptr %47, align 16, !tbaa !128
  br label %49

49:                                               ; preds = %49, %42
  %50 = phi i32 [ %18, %42 ], [ %51, %49 ]
  %51 = add i32 %50, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, ptr %20, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = icmp ugt i32 %54, %46
  br i1 %55, label %49, label %56

56:                                               ; preds = %49
  %57 = sub i32 %46, %54
  %58 = zext i32 %57 to i64
  %59 = zext i32 %51 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.27", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !135
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 %58
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %48, x86_fp80 %41, x86_fp80 %63)
  store x86_fp80 %64, ptr %62, align 16, !tbaa !128
  %65 = add i32 %44, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %33, %66
  br i1 %67, label %42, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !816
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !816
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !816
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %111, %37
  ret void

52:                                               ; preds = %41, %111
  %53 = phi i64 [ 0, %41 ], [ %60, %111 ]
  %54 = phi ptr [ %13, %41 ], [ %94, %111 ]
  %55 = phi ptr [ %16, %41 ], [ %92, %111 ]
  %56 = phi i32 [ %39, %41 ], [ %114, %111 ]
  %57 = phi i32 [ 0, %41 ], [ %113, %111 ]
  %58 = phi i32 [ %38, %41 ], [ %112, %111 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %91, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %89, %78 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !53
  %86 = getelementptr inbounds double, ptr %85, i64 %82
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = fpext double %87 to x86_fp80
  %89 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %88, x86_fp80 %67)
  %90 = icmp eq ptr %79, %63
  br i1 %90, label %91, label %65

91:                                               ; preds = %78, %52
  %92 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %93 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %89, %78 ]
  %94 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %95 = icmp eq i32 %56, %59
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = add i32 %57, 1
  br label %111

98:                                               ; preds = %91
  %99 = add i32 %58, 1
  %100 = icmp ult i32 %99, %19
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = add i32 %58, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %21, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !47, !noalias !819
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds i32, ptr %21, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !47, !noalias !819
  %109 = add i32 %105, %56
  %110 = sub i32 %109, %108
  br label %111

111:                                              ; preds = %98, %96, %101
  %112 = phi i32 [ %99, %101 ], [ %58, %96 ], [ %99, %98 ]
  %113 = phi i32 [ 0, %101 ], [ %97, %96 ], [ 0, %98 ]
  %114 = phi i32 [ %110, %101 ], [ %56, %96 ], [ -1, %98 ]
  %115 = zext i32 %58 to i64
  %116 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %115, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !135
  %118 = zext i32 %57 to i64
  %119 = getelementptr inbounds x86_fp80, ptr %117, i64 %118
  store x86_fp80 %93, ptr %119, align 16, !tbaa !128
  %120 = icmp eq i64 %60, %50
  br i1 %120, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %90, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %77 = load i32, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8
  %86 = zext i32 %68 to i64
  %87 = load i64, ptr %72, align 8, !tbaa !34
  br label %91

88:                                               ; preds = %133, %91
  %89 = icmp eq i64 %94, %86
  br i1 %89, label %90, label %91

90:                                               ; preds = %88, %64
  ret void

91:                                               ; preds = %70, %88
  %92 = phi i64 [ %87, %70 ], [ %96, %88 ]
  %93 = phi i64 [ 0, %70 ], [ %94, %88 ]
  %94 = add nuw nsw i64 %93, 1
  %95 = getelementptr inbounds i64, ptr %72, i64 %94
  %96 = load i64, ptr %95, align 8, !tbaa !34
  %97 = and i64 %92, 4294967295
  %98 = icmp ugt i64 %96, %97
  br i1 %98, label %99, label %88

99:                                               ; preds = %91
  %100 = trunc i64 %92 to i32
  %101 = load ptr, ptr %73, align 8, !tbaa !46
  %102 = trunc i64 %93 to i32
  br label %103

103:                                              ; preds = %99, %133
  %104 = phi i64 [ %97, %99 ], [ %144, %133 ]
  %105 = phi i32 [ %100, %99 ], [ %143, %133 ]
  %106 = getelementptr inbounds i32, ptr %101, i64 %104
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = getelementptr inbounds x86_fp80, ptr %75, i64 %104
  %109 = load x86_fp80, ptr %108, align 16, !tbaa !128
  br label %110

110:                                              ; preds = %110, %103
  %111 = phi i32 [ %77, %103 ], [ %112, %110 ]
  %112 = add i32 %111, -1
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %79, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !47
  %116 = zext i32 %115 to i64
  %117 = icmp ult i64 %93, %116
  br i1 %117, label %110, label %118

118:                                              ; preds = %110
  %119 = sub i32 %102, %115
  %120 = zext i32 %119 to i64
  %121 = zext i32 %112 to i64
  %122 = getelementptr inbounds %"class.dealii::Vector", ptr %81, i64 %121, i32 3
  %123 = load ptr, ptr %122, align 8, !tbaa !53
  %124 = getelementptr inbounds double, ptr %123, i64 %120
  %125 = load double, ptr %124, align 8, !tbaa !30
  br label %126

126:                                              ; preds = %126, %118
  %127 = phi i32 [ %5, %118 ], [ %128, %126 ]
  %128 = add i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, ptr %83, i64 %129
  %131 = load i32, ptr %130, align 4, !tbaa !47
  %132 = icmp ugt i32 %131, %107
  br i1 %132, label %126, label %133

133:                                              ; preds = %126
  %134 = fpext double %125 to x86_fp80
  %135 = sub i32 %107, %131
  %136 = zext i32 %135 to i64
  %137 = zext i32 %128 to i64
  %138 = getelementptr inbounds %"class.dealii::Vector.27", ptr %85, i64 %137, i32 3
  %139 = load ptr, ptr %138, align 8, !tbaa !135
  %140 = getelementptr inbounds x86_fp80, ptr %139, i64 %136
  %141 = load x86_fp80, ptr %140, align 16, !tbaa !128
  %142 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %109, x86_fp80 %134, x86_fp80 %141)
  store x86_fp80 %142, ptr %140, align 16, !tbaa !128
  %143 = add i32 %105, 1
  %144 = zext i32 %143 to i64
  %145 = icmp ugt i64 %96, %144
  br i1 %145, label %103, label %88
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !822
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !822
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !822
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %111, %37
  ret void

52:                                               ; preds = %41, %111
  %53 = phi i64 [ 0, %41 ], [ %60, %111 ]
  %54 = phi ptr [ %13, %41 ], [ %94, %111 ]
  %55 = phi ptr [ %16, %41 ], [ %92, %111 ]
  %56 = phi i32 [ %39, %41 ], [ %114, %111 ]
  %57 = phi i32 [ 0, %41 ], [ %113, %111 ]
  %58 = phi i32 [ %38, %41 ], [ %112, %111 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %91, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %89, %78 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !53
  %86 = getelementptr inbounds double, ptr %85, i64 %82
  %87 = load double, ptr %86, align 8, !tbaa !30
  %88 = fpext double %87 to x86_fp80
  %89 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %88, x86_fp80 %67)
  %90 = icmp eq ptr %79, %63
  br i1 %90, label %91, label %65

91:                                               ; preds = %78, %52
  %92 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %93 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %89, %78 ]
  %94 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %95 = icmp eq i32 %56, %59
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = add i32 %57, 1
  br label %111

98:                                               ; preds = %91
  %99 = add i32 %58, 1
  %100 = icmp ult i32 %99, %19
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = add i32 %58, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %21, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !47, !noalias !825
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds i32, ptr %21, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !47, !noalias !825
  %109 = add i32 %105, %56
  %110 = sub i32 %109, %108
  br label %111

111:                                              ; preds = %98, %96, %101
  %112 = phi i32 [ %99, %101 ], [ %58, %96 ], [ %99, %98 ]
  %113 = phi i32 [ 0, %101 ], [ %97, %96 ], [ 0, %98 ]
  %114 = phi i32 [ %110, %101 ], [ %56, %96 ], [ -1, %98 ]
  %115 = zext i32 %58 to i64
  %116 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %115, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !135
  %118 = zext i32 %57 to i64
  %119 = getelementptr inbounds x86_fp80, ptr %117, i64 %118
  %120 = load x86_fp80, ptr %119, align 16, !tbaa !128
  %121 = fadd x86_fp80 %93, %120
  store x86_fp80 %121, ptr %119, align 16, !tbaa !128
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIeEENS3_IdEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %85, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %84, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds x86_fp80, ptr %14, i64 %45
  %50 = load x86_fp80, ptr %49, align 16, !tbaa !128
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !53
  %65 = getelementptr inbounds double, ptr %64, i64 %61
  %66 = load double, ptr %65, align 8, !tbaa !30
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext double %66 to x86_fp80
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !135
  %81 = getelementptr inbounds x86_fp80, ptr %80, i64 %77
  %82 = load x86_fp80, ptr %81, align 16, !tbaa !128
  %83 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %50, x86_fp80 %75, x86_fp80 %82)
  store x86_fp80 %83, ptr %81, align 16, !tbaa !128
  %84 = add i32 %46, 1
  %85 = zext i32 %84 to i64
  %86 = icmp ugt i64 %37, %85
  br i1 %86, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %49, %3
  ret void

25:                                               ; preds = %13, %49
  %26 = phi i64 [ 0, %13 ], [ %30, %49 ]
  %27 = phi ptr [ %20, %13 ], [ %52, %49 ]
  %28 = phi ptr [ %19, %13 ], [ %50, %49 ]
  %29 = phi ptr [ %15, %13 ], [ %53, %49 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %47, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to x86_fp80
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %46, x86_fp80 %37)
  %48 = icmp eq ptr %39, %33
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %25
  %50 = phi ptr [ %28, %25 ], [ %41, %35 ]
  %51 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %47, %35 ]
  %52 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %53 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  store x86_fp80 %51, ptr %29, align 16, !tbaa !128
  %54 = icmp eq i64 %30, %23
  br i1 %54, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %20 to i64
  %33 = load i64, ptr %24, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %51, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %16
  ret void

37:                                               ; preds = %22, %34
  %38 = phi i64 [ %33, %22 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %22 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %24, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %25, align 8, !tbaa !46
  %48 = getelementptr inbounds float, ptr %29, i64 %39
  %49 = load float, ptr %48, align 4, !tbaa !95
  %50 = fpext float %49 to x86_fp80
  br label %51

51:                                               ; preds = %45, %51
  %52 = phi i64 [ %43, %45 ], [ %63, %51 ]
  %53 = phi i32 [ %46, %45 ], [ %62, %51 ]
  %54 = getelementptr inbounds i32, ptr %47, i64 %52
  %55 = load i32, ptr %54, align 4, !tbaa !47
  %56 = getelementptr inbounds x86_fp80, ptr %27, i64 %52
  %57 = load x86_fp80, ptr %56, align 16, !tbaa !128
  %58 = zext i32 %55 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %31, i64 %58
  %60 = load x86_fp80, ptr %59, align 16, !tbaa !128
  %61 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %57, x86_fp80 %50, x86_fp80 %60)
  store x86_fp80 %61, ptr %59, align 16, !tbaa !128
  %62 = add i32 %53, 1
  %63 = zext i32 %62 to i64
  %64 = icmp ugt i64 %42, %63
  br i1 %64, label %51, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %49, %3
  ret void

25:                                               ; preds = %13, %49
  %26 = phi i64 [ 0, %13 ], [ %30, %49 ]
  %27 = phi ptr [ %20, %13 ], [ %52, %49 ]
  %28 = phi ptr [ %19, %13 ], [ %50, %49 ]
  %29 = phi ptr [ %15, %13 ], [ %53, %49 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %47, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds float, ptr %22, i64 %43
  %45 = load float, ptr %44, align 4, !tbaa !95
  %46 = fpext float %45 to x86_fp80
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %46, x86_fp80 %37)
  %48 = icmp eq ptr %39, %33
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %25
  %50 = phi ptr [ %28, %25 ], [ %41, %35 ]
  %51 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %47, %35 ]
  %52 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %53 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  %54 = load x86_fp80, ptr %29, align 16, !tbaa !128
  %55 = fadd x86_fp80 %51, %54
  store x86_fp80 %55, ptr %29, align 16, !tbaa !128
  %56 = icmp eq i64 %30, %23
  br i1 %56, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %38, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds float, ptr %16, i64 %26
  %36 = load float, ptr %35, align 4, !tbaa !95
  %37 = fpext float %36 to x86_fp80
  br label %38

38:                                               ; preds = %32, %38
  %39 = phi i64 [ %30, %32 ], [ %50, %38 ]
  %40 = phi i32 [ %33, %32 ], [ %49, %38 ]
  %41 = getelementptr inbounds i32, ptr %34, i64 %39
  %42 = load i32, ptr %41, align 4, !tbaa !47
  %43 = getelementptr inbounds x86_fp80, ptr %14, i64 %39
  %44 = load x86_fp80, ptr %43, align 16, !tbaa !128
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds x86_fp80, ptr %18, i64 %45
  %47 = load x86_fp80, ptr %46, align 16, !tbaa !128
  %48 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %44, x86_fp80 %37, x86_fp80 %47)
  store x86_fp80 %48, ptr %46, align 16, !tbaa !128
  %49 = add i32 %40, 1
  %50 = zext i32 %49 to i64
  %51 = icmp ugt i64 %29, %50
  br i1 %51, label %38, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %65, %3
  ret void

29:                                               ; preds = %13, %65
  %30 = phi i64 [ 0, %13 ], [ %34, %65 ]
  %31 = phi ptr [ %20, %13 ], [ %68, %65 ]
  %32 = phi ptr [ %19, %13 ], [ %66, %65 ]
  %33 = phi ptr [ %15, %13 ], [ %69, %65 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %65, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %63, %52 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %32, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to x86_fp80
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %62, x86_fp80 %41)
  %64 = icmp eq ptr %53, %37
  br i1 %64, label %65, label %39

65:                                               ; preds = %52, %29
  %66 = phi ptr [ %32, %29 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %63, %52 ]
  %68 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %69 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  store x86_fp80 %67, ptr %33, align 16, !tbaa !128
  %70 = icmp eq i64 %34, %27
  br i1 %70, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %20 to i64
  %37 = load i64, ptr %24, align 8, !tbaa !34
  br label %41

38:                                               ; preds = %68, %41
  %39 = icmp eq i64 %44, %36
  br i1 %39, label %40, label %41

40:                                               ; preds = %38, %16
  ret void

41:                                               ; preds = %22, %38
  %42 = phi i64 [ %37, %22 ], [ %46, %38 ]
  %43 = phi i64 [ 0, %22 ], [ %44, %38 ]
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr inbounds i64, ptr %24, i64 %44
  %46 = load i64, ptr %45, align 8, !tbaa !34
  %47 = and i64 %42, 4294967295
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %49, label %38

49:                                               ; preds = %41
  %50 = trunc i64 %42 to i32
  %51 = load ptr, ptr %25, align 8, !tbaa !46
  %52 = trunc i64 %43 to i32
  br label %53

53:                                               ; preds = %49, %68
  %54 = phi i64 [ %47, %49 ], [ %82, %68 ]
  %55 = phi i32 [ %50, %49 ], [ %81, %68 ]
  %56 = getelementptr inbounds i32, ptr %51, i64 %54
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = getelementptr inbounds x86_fp80, ptr %27, i64 %54
  %59 = load x86_fp80, ptr %58, align 16, !tbaa !128
  br label %60

60:                                               ; preds = %60, %53
  %61 = phi i32 [ %29, %53 ], [ %62, %60 ]
  %62 = add i32 %61, -1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, ptr %31, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !47
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %43, %66
  br i1 %67, label %60, label %68

68:                                               ; preds = %60
  %69 = sub i32 %52, %65
  %70 = zext i32 %69 to i64
  %71 = zext i32 %62 to i64
  %72 = getelementptr inbounds %"class.dealii::Vector.20", ptr %33, i64 %71, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !106
  %74 = getelementptr inbounds float, ptr %73, i64 %70
  %75 = load float, ptr %74, align 4, !tbaa !95
  %76 = fpext float %75 to x86_fp80
  %77 = zext i32 %57 to i64
  %78 = getelementptr inbounds x86_fp80, ptr %35, i64 %77
  %79 = load x86_fp80, ptr %78, align 16, !tbaa !128
  %80 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %59, x86_fp80 %76, x86_fp80 %79)
  store x86_fp80 %80, ptr %78, align 16, !tbaa !128
  %81 = add i32 %55, 1
  %82 = zext i32 %81 to i64
  %83 = icmp ugt i64 %46, %82
  br i1 %83, label %53, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %65, %3
  ret void

29:                                               ; preds = %13, %65
  %30 = phi i64 [ 0, %13 ], [ %34, %65 ]
  %31 = phi ptr [ %20, %13 ], [ %68, %65 ]
  %32 = phi ptr [ %19, %13 ], [ %66, %65 ]
  %33 = phi ptr [ %15, %13 ], [ %69, %65 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %65, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %63, %52 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %32, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.20", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !106
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !95
  %62 = fpext float %61 to x86_fp80
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %62, x86_fp80 %41)
  %64 = icmp eq ptr %53, %37
  br i1 %64, label %65, label %39

65:                                               ; preds = %52, %29
  %66 = phi ptr [ %32, %29 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %63, %52 ]
  %68 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %69 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  %70 = load x86_fp80, ptr %33, align 16, !tbaa !128
  %71 = fadd x86_fp80 %67, %70
  store x86_fp80 %71, ptr %33, align 16, !tbaa !128
  %72 = icmp eq i64 %34, %27
  br i1 %72, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %69, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %68, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = getelementptr inbounds float, ptr %60, i64 %57
  %62 = load float, ptr %61, align 4, !tbaa !95
  %63 = fpext float %62 to x86_fp80
  %64 = zext i32 %44 to i64
  %65 = getelementptr inbounds x86_fp80, ptr %22, i64 %64
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  %67 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %63, x86_fp80 %66)
  store x86_fp80 %67, ptr %65, align 16, !tbaa !128
  %68 = add i32 %42, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %33, %69
  br i1 %70, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !828
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !828
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !828
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %95, %37
  ret void

48:                                               ; preds = %41, %95
  %49 = phi i64 [ 0, %41 ], [ %56, %95 ]
  %50 = phi ptr [ %13, %41 ], [ %78, %95 ]
  %51 = phi ptr [ %16, %41 ], [ %76, %95 ]
  %52 = phi i32 [ %39, %41 ], [ %98, %95 ]
  %53 = phi i32 [ 0, %41 ], [ %97, %95 ]
  %54 = phi i32 [ %38, %41 ], [ %96, %95 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %73, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to x86_fp80
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %72, x86_fp80 %63)
  %74 = icmp eq ptr %65, %59
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %48
  %76 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %77 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %73, %61 ]
  %78 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %79 = icmp eq i32 %52, %55
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = add i32 %53, 1
  br label %95

82:                                               ; preds = %75
  %83 = add i32 %54, 1
  %84 = icmp ult i32 %83, %19
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = add i32 %54, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %21, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !47, !noalias !831
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i32, ptr %21, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !47, !noalias !831
  %93 = add i32 %89, %52
  %94 = sub i32 %93, %92
  br label %95

95:                                               ; preds = %82, %80, %85
  %96 = phi i32 [ %83, %85 ], [ %54, %80 ], [ %83, %82 ]
  %97 = phi i32 [ 0, %85 ], [ %81, %80 ], [ 0, %82 ]
  %98 = phi i32 [ %94, %85 ], [ %52, %80 ], [ -1, %82 ]
  %99 = zext i32 %54 to i64
  %100 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %99, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !135
  %102 = zext i32 %53 to i64
  %103 = getelementptr inbounds x86_fp80, ptr %101, i64 %102
  store x86_fp80 %77, ptr %103, align 16, !tbaa !128
  %104 = icmp eq i64 %56, %46
  br i1 %104, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %77 = load ptr, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = zext i32 %68 to i64
  %83 = load i64, ptr %72, align 8, !tbaa !34
  br label %87

84:                                               ; preds = %115, %87
  %85 = icmp eq i64 %90, %82
  br i1 %85, label %86, label %87

86:                                               ; preds = %84, %64
  ret void

87:                                               ; preds = %70, %84
  %88 = phi i64 [ %83, %70 ], [ %92, %84 ]
  %89 = phi i64 [ 0, %70 ], [ %90, %84 ]
  %90 = add nuw nsw i64 %89, 1
  %91 = getelementptr inbounds i64, ptr %72, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !34
  %93 = and i64 %88, 4294967295
  %94 = icmp ugt i64 %92, %93
  br i1 %94, label %95, label %84

95:                                               ; preds = %87
  %96 = trunc i64 %88 to i32
  %97 = load ptr, ptr %73, align 8, !tbaa !46
  %98 = getelementptr inbounds float, ptr %77, i64 %89
  %99 = load float, ptr %98, align 4, !tbaa !95
  %100 = fpext float %99 to x86_fp80
  br label %101

101:                                              ; preds = %95, %115
  %102 = phi i64 [ %93, %95 ], [ %125, %115 ]
  %103 = phi i32 [ %96, %95 ], [ %124, %115 ]
  %104 = getelementptr inbounds i32, ptr %97, i64 %102
  %105 = load i32, ptr %104, align 4, !tbaa !47
  %106 = getelementptr inbounds x86_fp80, ptr %75, i64 %102
  %107 = load x86_fp80, ptr %106, align 16, !tbaa !128
  br label %108

108:                                              ; preds = %108, %101
  %109 = phi i32 [ %5, %101 ], [ %110, %108 ]
  %110 = add i32 %109, -1
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i32, ptr %79, i64 %111
  %113 = load i32, ptr %112, align 4, !tbaa !47
  %114 = icmp ugt i32 %113, %105
  br i1 %114, label %108, label %115

115:                                              ; preds = %108
  %116 = sub i32 %105, %113
  %117 = zext i32 %116 to i64
  %118 = zext i32 %110 to i64
  %119 = getelementptr inbounds %"class.dealii::Vector.27", ptr %81, i64 %118, i32 3
  %120 = load ptr, ptr %119, align 8, !tbaa !135
  %121 = getelementptr inbounds x86_fp80, ptr %120, i64 %117
  %122 = load x86_fp80, ptr %121, align 16, !tbaa !128
  %123 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %107, x86_fp80 %100, x86_fp80 %122)
  store x86_fp80 %123, ptr %121, align 16, !tbaa !128
  %124 = add i32 %103, 1
  %125 = zext i32 %124 to i64
  %126 = icmp ugt i64 %92, %125
  br i1 %126, label %101, label %84
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !834
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !834
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !834
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %95, %37
  ret void

48:                                               ; preds = %41, %95
  %49 = phi i64 [ 0, %41 ], [ %56, %95 ]
  %50 = phi ptr [ %13, %41 ], [ %78, %95 ]
  %51 = phi ptr [ %16, %41 ], [ %76, %95 ]
  %52 = phi i32 [ %39, %41 ], [ %98, %95 ]
  %53 = phi i32 [ 0, %41 ], [ %97, %95 ]
  %54 = phi i32 [ %38, %41 ], [ %96, %95 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %73, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds float, ptr %43, i64 %69
  %71 = load float, ptr %70, align 4, !tbaa !95
  %72 = fpext float %71 to x86_fp80
  %73 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %72, x86_fp80 %63)
  %74 = icmp eq ptr %65, %59
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %48
  %76 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %77 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %73, %61 ]
  %78 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %79 = icmp eq i32 %52, %55
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = add i32 %53, 1
  br label %95

82:                                               ; preds = %75
  %83 = add i32 %54, 1
  %84 = icmp ult i32 %83, %19
  br i1 %84, label %85, label %95

85:                                               ; preds = %82
  %86 = add i32 %54, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %21, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !47, !noalias !837
  %90 = zext i32 %83 to i64
  %91 = getelementptr inbounds i32, ptr %21, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !47, !noalias !837
  %93 = add i32 %89, %52
  %94 = sub i32 %93, %92
  br label %95

95:                                               ; preds = %82, %80, %85
  %96 = phi i32 [ %83, %85 ], [ %54, %80 ], [ %83, %82 ]
  %97 = phi i32 [ 0, %85 ], [ %81, %80 ], [ 0, %82 ]
  %98 = phi i32 [ %94, %85 ], [ %52, %80 ], [ -1, %82 ]
  %99 = zext i32 %54 to i64
  %100 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %99, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !135
  %102 = zext i32 %53 to i64
  %103 = getelementptr inbounds x86_fp80, ptr %101, i64 %102
  %104 = load x86_fp80, ptr %103, align 16, !tbaa !128
  %105 = fadd x86_fp80 %77, %104
  store x86_fp80 %105, ptr %103, align 16, !tbaa !128
  %106 = icmp eq i64 %56, %46
  br i1 %106, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.20", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %56, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds float, ptr %16, i64 %30
  %40 = load float, ptr %39, align 4, !tbaa !95
  %41 = fpext float %40 to x86_fp80
  br label %42

42:                                               ; preds = %36, %56
  %43 = phi i64 [ %34, %36 ], [ %66, %56 ]
  %44 = phi i32 [ %37, %36 ], [ %65, %56 ]
  %45 = getelementptr inbounds i32, ptr %38, i64 %43
  %46 = load i32, ptr %45, align 4, !tbaa !47
  %47 = getelementptr inbounds x86_fp80, ptr %14, i64 %43
  %48 = load x86_fp80, ptr %47, align 16, !tbaa !128
  br label %49

49:                                               ; preds = %49, %42
  %50 = phi i32 [ %18, %42 ], [ %51, %49 ]
  %51 = add i32 %50, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, ptr %20, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !47
  %55 = icmp ugt i32 %54, %46
  br i1 %55, label %49, label %56

56:                                               ; preds = %49
  %57 = sub i32 %46, %54
  %58 = zext i32 %57 to i64
  %59 = zext i32 %51 to i64
  %60 = getelementptr inbounds %"class.dealii::Vector.27", ptr %22, i64 %59, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !135
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 %58
  %63 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %64 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %48, x86_fp80 %41, x86_fp80 %63)
  store x86_fp80 %64, ptr %62, align 16, !tbaa !128
  %65 = add i32 %44, 1
  %66 = zext i32 %65 to i64
  %67 = icmp ugt i64 %33, %66
  br i1 %67, label %42, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !840
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !840
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !840
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %111, %37
  ret void

52:                                               ; preds = %41, %111
  %53 = phi i64 [ 0, %41 ], [ %60, %111 ]
  %54 = phi ptr [ %13, %41 ], [ %94, %111 ]
  %55 = phi ptr [ %16, %41 ], [ %92, %111 ]
  %56 = phi i32 [ %39, %41 ], [ %114, %111 ]
  %57 = phi i32 [ 0, %41 ], [ %113, %111 ]
  %58 = phi i32 [ %38, %41 ], [ %112, %111 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %91, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %89, %78 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to x86_fp80
  %89 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %88, x86_fp80 %67)
  %90 = icmp eq ptr %79, %63
  br i1 %90, label %91, label %65

91:                                               ; preds = %78, %52
  %92 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %93 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %89, %78 ]
  %94 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %95 = icmp eq i32 %56, %59
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = add i32 %57, 1
  br label %111

98:                                               ; preds = %91
  %99 = add i32 %58, 1
  %100 = icmp ult i32 %99, %19
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = add i32 %58, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %21, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !47, !noalias !843
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds i32, ptr %21, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !47, !noalias !843
  %109 = add i32 %105, %56
  %110 = sub i32 %109, %108
  br label %111

111:                                              ; preds = %98, %96, %101
  %112 = phi i32 [ %99, %101 ], [ %58, %96 ], [ %99, %98 ]
  %113 = phi i32 [ 0, %101 ], [ %97, %96 ], [ 0, %98 ]
  %114 = phi i32 [ %110, %101 ], [ %56, %96 ], [ -1, %98 ]
  %115 = zext i32 %58 to i64
  %116 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %115, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !135
  %118 = zext i32 %57 to i64
  %119 = getelementptr inbounds x86_fp80, ptr %117, i64 %118
  store x86_fp80 %93, ptr %119, align 16, !tbaa !128
  %120 = icmp eq i64 %60, %50
  br i1 %120, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %90, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %77 = load i32, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8
  %86 = zext i32 %68 to i64
  %87 = load i64, ptr %72, align 8, !tbaa !34
  br label %91

88:                                               ; preds = %133, %91
  %89 = icmp eq i64 %94, %86
  br i1 %89, label %90, label %91

90:                                               ; preds = %88, %64
  ret void

91:                                               ; preds = %70, %88
  %92 = phi i64 [ %87, %70 ], [ %96, %88 ]
  %93 = phi i64 [ 0, %70 ], [ %94, %88 ]
  %94 = add nuw nsw i64 %93, 1
  %95 = getelementptr inbounds i64, ptr %72, i64 %94
  %96 = load i64, ptr %95, align 8, !tbaa !34
  %97 = and i64 %92, 4294967295
  %98 = icmp ugt i64 %96, %97
  br i1 %98, label %99, label %88

99:                                               ; preds = %91
  %100 = trunc i64 %92 to i32
  %101 = load ptr, ptr %73, align 8, !tbaa !46
  %102 = trunc i64 %93 to i32
  br label %103

103:                                              ; preds = %99, %133
  %104 = phi i64 [ %97, %99 ], [ %144, %133 ]
  %105 = phi i32 [ %100, %99 ], [ %143, %133 ]
  %106 = getelementptr inbounds i32, ptr %101, i64 %104
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = getelementptr inbounds x86_fp80, ptr %75, i64 %104
  %109 = load x86_fp80, ptr %108, align 16, !tbaa !128
  br label %110

110:                                              ; preds = %110, %103
  %111 = phi i32 [ %77, %103 ], [ %112, %110 ]
  %112 = add i32 %111, -1
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %79, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !47
  %116 = zext i32 %115 to i64
  %117 = icmp ult i64 %93, %116
  br i1 %117, label %110, label %118

118:                                              ; preds = %110
  %119 = sub i32 %102, %115
  %120 = zext i32 %119 to i64
  %121 = zext i32 %112 to i64
  %122 = getelementptr inbounds %"class.dealii::Vector.20", ptr %81, i64 %121, i32 3
  %123 = load ptr, ptr %122, align 8, !tbaa !106
  %124 = getelementptr inbounds float, ptr %123, i64 %120
  %125 = load float, ptr %124, align 4, !tbaa !95
  br label %126

126:                                              ; preds = %126, %118
  %127 = phi i32 [ %5, %118 ], [ %128, %126 ]
  %128 = add i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, ptr %83, i64 %129
  %131 = load i32, ptr %130, align 4, !tbaa !47
  %132 = icmp ugt i32 %131, %107
  br i1 %132, label %126, label %133

133:                                              ; preds = %126
  %134 = fpext float %125 to x86_fp80
  %135 = sub i32 %107, %131
  %136 = zext i32 %135 to i64
  %137 = zext i32 %128 to i64
  %138 = getelementptr inbounds %"class.dealii::Vector.27", ptr %85, i64 %137, i32 3
  %139 = load ptr, ptr %138, align 8, !tbaa !135
  %140 = getelementptr inbounds x86_fp80, ptr %139, i64 %136
  %141 = load x86_fp80, ptr %140, align 16, !tbaa !128
  %142 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %109, x86_fp80 %134, x86_fp80 %141)
  store x86_fp80 %142, ptr %140, align 16, !tbaa !128
  %143 = add i32 %105, 1
  %144 = zext i32 %143 to i64
  %145 = icmp ugt i64 %96, %144
  br i1 %145, label %103, label %88
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !846
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !846
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !846
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %111, %37
  ret void

52:                                               ; preds = %41, %111
  %53 = phi i64 [ 0, %41 ], [ %60, %111 ]
  %54 = phi ptr [ %13, %41 ], [ %94, %111 ]
  %55 = phi ptr [ %16, %41 ], [ %92, %111 ]
  %56 = phi i32 [ %39, %41 ], [ %114, %111 ]
  %57 = phi i32 [ 0, %41 ], [ %113, %111 ]
  %58 = phi i32 [ %38, %41 ], [ %112, %111 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %91, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %89, %78 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.20", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !106
  %86 = getelementptr inbounds float, ptr %85, i64 %82
  %87 = load float, ptr %86, align 4, !tbaa !95
  %88 = fpext float %87 to x86_fp80
  %89 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %88, x86_fp80 %67)
  %90 = icmp eq ptr %79, %63
  br i1 %90, label %91, label %65

91:                                               ; preds = %78, %52
  %92 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %93 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %89, %78 ]
  %94 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %95 = icmp eq i32 %56, %59
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = add i32 %57, 1
  br label %111

98:                                               ; preds = %91
  %99 = add i32 %58, 1
  %100 = icmp ult i32 %99, %19
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = add i32 %58, 2
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %21, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !47, !noalias !849
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds i32, ptr %21, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !47, !noalias !849
  %109 = add i32 %105, %56
  %110 = sub i32 %109, %108
  br label %111

111:                                              ; preds = %98, %96, %101
  %112 = phi i32 [ %99, %101 ], [ %58, %96 ], [ %99, %98 ]
  %113 = phi i32 [ 0, %101 ], [ %97, %96 ], [ 0, %98 ]
  %114 = phi i32 [ %110, %101 ], [ %56, %96 ], [ -1, %98 ]
  %115 = zext i32 %58 to i64
  %116 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %115, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !135
  %118 = zext i32 %57 to i64
  %119 = getelementptr inbounds x86_fp80, ptr %117, i64 %118
  %120 = load x86_fp80, ptr %119, align 16, !tbaa !128
  %121 = fadd x86_fp80 %93, %120
  store x86_fp80 %121, ptr %119, align 16, !tbaa !128
  %122 = icmp eq i64 %60, %50
  br i1 %122, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIeEENS3_IfEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.53", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %85, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %84, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds x86_fp80, ptr %14, i64 %45
  %50 = load x86_fp80, ptr %49, align 16, !tbaa !128
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.20", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !106
  %65 = getelementptr inbounds float, ptr %64, i64 %61
  %66 = load float, ptr %65, align 4, !tbaa !95
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = fpext float %66 to x86_fp80
  %76 = sub i32 %48, %72
  %77 = zext i32 %76 to i64
  %78 = zext i32 %69 to i64
  %79 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %78, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !135
  %81 = getelementptr inbounds x86_fp80, ptr %80, i64 %77
  %82 = load x86_fp80, ptr %81, align 16, !tbaa !128
  %83 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %50, x86_fp80 %75, x86_fp80 %82)
  store x86_fp80 %83, ptr %81, align 16, !tbaa !128
  %84 = add i32 %46, 1
  %85 = zext i32 %84 to i64
  %86 = icmp ugt i64 %37, %85
  br i1 %86, label %44, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %48, %3
  ret void

25:                                               ; preds = %13, %48
  %26 = phi i64 [ 0, %13 ], [ %30, %48 ]
  %27 = phi ptr [ %20, %13 ], [ %51, %48 ]
  %28 = phi ptr [ %19, %13 ], [ %49, %48 ]
  %29 = phi ptr [ %15, %13 ], [ %52, %48 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %48, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %46, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds x86_fp80, ptr %22, i64 %43
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  %46 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %45, x86_fp80 %37)
  %47 = icmp eq ptr %39, %33
  br i1 %47, label %48, label %35

48:                                               ; preds = %35, %25
  %49 = phi ptr [ %28, %25 ], [ %41, %35 ]
  %50 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %46, %35 ]
  %51 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %52 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  store x86_fp80 %50, ptr %29, align 16, !tbaa !128
  %53 = icmp eq i64 %30, %23
  br i1 %53, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %20 to i64
  %33 = load i64, ptr %24, align 8, !tbaa !34
  br label %37

34:                                               ; preds = %49, %37
  %35 = icmp eq i64 %40, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %34, %16
  ret void

37:                                               ; preds = %22, %34
  %38 = phi i64 [ %33, %22 ], [ %42, %34 ]
  %39 = phi i64 [ 0, %22 ], [ %40, %34 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr inbounds i64, ptr %24, i64 %40
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = and i64 %38, 4294967295
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %34

45:                                               ; preds = %37
  %46 = trunc i64 %38 to i32
  %47 = load ptr, ptr %25, align 8, !tbaa !46
  %48 = getelementptr inbounds x86_fp80, ptr %29, i64 %39
  br label %49

49:                                               ; preds = %45, %49
  %50 = phi i64 [ %43, %45 ], [ %62, %49 ]
  %51 = phi i32 [ %46, %45 ], [ %61, %49 ]
  %52 = getelementptr inbounds i32, ptr %47, i64 %50
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = getelementptr inbounds x86_fp80, ptr %27, i64 %50
  %55 = load x86_fp80, ptr %54, align 16, !tbaa !128
  %56 = load x86_fp80, ptr %48, align 16, !tbaa !128
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds x86_fp80, ptr %31, i64 %57
  %59 = load x86_fp80, ptr %58, align 16, !tbaa !128
  %60 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %55, x86_fp80 %56, x86_fp80 %59)
  store x86_fp80 %60, ptr %58, align 16, !tbaa !128
  %61 = add i32 %51, 1
  %62 = zext i32 %61 to i64
  %63 = icmp ugt i64 %42, %62
  br i1 %63, label %49, label %34
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  br label %25

24:                                               ; preds = %48, %3
  ret void

25:                                               ; preds = %13, %48
  %26 = phi i64 [ 0, %13 ], [ %30, %48 ]
  %27 = phi ptr [ %20, %13 ], [ %51, %48 ]
  %28 = phi ptr [ %19, %13 ], [ %49, %48 ]
  %29 = phi ptr [ %15, %13 ], [ %52, %48 ]
  %30 = add nuw nsw i64 %26, 1
  %31 = getelementptr inbounds i64, ptr %11, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !34
  %33 = getelementptr inbounds x86_fp80, ptr %9, i64 %32
  %34 = icmp eq ptr %27, %33
  br i1 %34, label %48, label %35

35:                                               ; preds = %25, %35
  %36 = phi ptr [ %39, %35 ], [ %27, %25 ]
  %37 = phi x86_fp80 [ %46, %35 ], [ 0xK00000000000000000000, %25 ]
  %38 = phi ptr [ %41, %35 ], [ %28, %25 ]
  %39 = getelementptr inbounds x86_fp80, ptr %36, i64 1
  %40 = load x86_fp80, ptr %36, align 16, !tbaa !128
  %41 = getelementptr inbounds i32, ptr %38, i64 1
  %42 = load i32, ptr %38, align 4, !tbaa !47
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds x86_fp80, ptr %22, i64 %43
  %45 = load x86_fp80, ptr %44, align 16, !tbaa !128
  %46 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %40, x86_fp80 %45, x86_fp80 %37)
  %47 = icmp eq ptr %39, %33
  br i1 %47, label %48, label %35

48:                                               ; preds = %35, %25
  %49 = phi ptr [ %28, %25 ], [ %41, %35 ]
  %50 = phi x86_fp80 [ 0xK00000000000000000000, %25 ], [ %46, %35 ]
  %51 = phi ptr [ %27, %25 ], [ %33, %35 ]
  %52 = getelementptr inbounds x86_fp80, ptr %29, i64 1
  %53 = load x86_fp80, ptr %29, align 16, !tbaa !128
  %54 = fadd x86_fp80 %50, %53
  store x86_fp80 %54, ptr %29, align 16, !tbaa !128
  %55 = icmp eq i64 %30, %23
  br i1 %55, label %24, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = zext i32 %7 to i64
  %20 = load i64, ptr %11, align 8, !tbaa !34
  br label %24

21:                                               ; preds = %36, %24
  %22 = icmp eq i64 %27, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %21, %3
  ret void

24:                                               ; preds = %9, %21
  %25 = phi i64 [ %20, %9 ], [ %29, %21 ]
  %26 = phi i64 [ 0, %9 ], [ %27, %21 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = getelementptr inbounds i64, ptr %11, i64 %27
  %29 = load i64, ptr %28, align 8, !tbaa !34
  %30 = and i64 %25, 4294967295
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %21

32:                                               ; preds = %24
  %33 = trunc i64 %25 to i32
  %34 = load ptr, ptr %12, align 8, !tbaa !46
  %35 = getelementptr inbounds x86_fp80, ptr %16, i64 %26
  br label %36

36:                                               ; preds = %32, %36
  %37 = phi i64 [ %30, %32 ], [ %49, %36 ]
  %38 = phi i32 [ %33, %32 ], [ %48, %36 ]
  %39 = getelementptr inbounds i32, ptr %34, i64 %37
  %40 = load i32, ptr %39, align 4, !tbaa !47
  %41 = getelementptr inbounds x86_fp80, ptr %14, i64 %37
  %42 = load x86_fp80, ptr %41, align 16, !tbaa !128
  %43 = load x86_fp80, ptr %35, align 16, !tbaa !128
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds x86_fp80, ptr %18, i64 %44
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %42, x86_fp80 %43, x86_fp80 %46)
  store x86_fp80 %47, ptr %45, align 16, !tbaa !128
  %48 = add i32 %38, 1
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %29, %49
  br i1 %50, label %36, label %21
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %64, %3
  ret void

29:                                               ; preds = %13, %64
  %30 = phi i64 [ 0, %13 ], [ %34, %64 ]
  %31 = phi ptr [ %20, %13 ], [ %67, %64 ]
  %32 = phi ptr [ %19, %13 ], [ %65, %64 ]
  %33 = phi ptr [ %15, %13 ], [ %68, %64 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %64, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %62, %52 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %32, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !135
  %60 = getelementptr inbounds x86_fp80, ptr %59, i64 %56
  %61 = load x86_fp80, ptr %60, align 16, !tbaa !128
  %62 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %61, x86_fp80 %41)
  %63 = icmp eq ptr %53, %37
  br i1 %63, label %64, label %39

64:                                               ; preds = %52, %29
  %65 = phi ptr [ %32, %29 ], [ %54, %52 ]
  %66 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %62, %52 ]
  %67 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %68 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  store x86_fp80 %66, ptr %33, align 16, !tbaa !128
  %69 = icmp eq i64 %34, %27
  br i1 %69, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !138
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !135
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds x86_fp80, ptr %9, i64 %10
  br label %12

12:                                               ; preds = %12, %7
  %13 = phi ptr [ %14, %12 ], [ %9, %7 ]
  store x86_fp80 0xK00000000000000000000, ptr %13, align 16, !tbaa !128
  %14 = getelementptr inbounds x86_fp80, ptr %13, i64 1
  %15 = icmp eq ptr %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !33
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %18, i64 0, i32 9
  %26 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8
  %36 = zext i32 %20 to i64
  %37 = load i64, ptr %24, align 8, !tbaa !34
  br label %41

38:                                               ; preds = %68, %41
  %39 = icmp eq i64 %44, %36
  br i1 %39, label %40, label %41

40:                                               ; preds = %38, %16
  ret void

41:                                               ; preds = %22, %38
  %42 = phi i64 [ %37, %22 ], [ %46, %38 ]
  %43 = phi i64 [ 0, %22 ], [ %44, %38 ]
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr inbounds i64, ptr %24, i64 %44
  %46 = load i64, ptr %45, align 8, !tbaa !34
  %47 = and i64 %42, 4294967295
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %49, label %38

49:                                               ; preds = %41
  %50 = trunc i64 %42 to i32
  %51 = load ptr, ptr %25, align 8, !tbaa !46
  %52 = trunc i64 %43 to i32
  br label %53

53:                                               ; preds = %49, %68
  %54 = phi i64 [ %47, %49 ], [ %81, %68 ]
  %55 = phi i32 [ %50, %49 ], [ %80, %68 ]
  %56 = getelementptr inbounds i32, ptr %51, i64 %54
  %57 = load i32, ptr %56, align 4, !tbaa !47
  %58 = getelementptr inbounds x86_fp80, ptr %27, i64 %54
  %59 = load x86_fp80, ptr %58, align 16, !tbaa !128
  br label %60

60:                                               ; preds = %60, %53
  %61 = phi i32 [ %29, %53 ], [ %62, %60 ]
  %62 = add i32 %61, -1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, ptr %31, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !47
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %43, %66
  br i1 %67, label %60, label %68

68:                                               ; preds = %60
  %69 = sub i32 %52, %65
  %70 = zext i32 %69 to i64
  %71 = zext i32 %62 to i64
  %72 = getelementptr inbounds %"class.dealii::Vector.27", ptr %33, i64 %71, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !135
  %74 = getelementptr inbounds x86_fp80, ptr %73, i64 %70
  %75 = load x86_fp80, ptr %74, align 16, !tbaa !128
  %76 = zext i32 %57 to i64
  %77 = getelementptr inbounds x86_fp80, ptr %35, i64 %76
  %78 = load x86_fp80, ptr %77, align 16, !tbaa !128
  %79 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %59, x86_fp80 %75, x86_fp80 %78)
  store x86_fp80 %79, ptr %77, align 16, !tbaa !128
  %80 = add i32 %55, 1
  %81 = zext i32 %80 to i64
  %82 = icmp ugt i64 %46, %81
  br i1 %82, label %53, label %38
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq i32 %7, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !135
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !46
  %18 = load i64, ptr %11, align 8, !tbaa !34
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = getelementptr inbounds x86_fp80, ptr %9, i64 %18
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  br label %29

28:                                               ; preds = %64, %3
  ret void

29:                                               ; preds = %13, %64
  %30 = phi i64 [ 0, %13 ], [ %34, %64 ]
  %31 = phi ptr [ %20, %13 ], [ %67, %64 ]
  %32 = phi ptr [ %19, %13 ], [ %65, %64 ]
  %33 = phi ptr [ %15, %13 ], [ %68, %64 ]
  %34 = add nuw nsw i64 %30, 1
  %35 = getelementptr inbounds i64, ptr %11, i64 %34
  %36 = load i64, ptr %35, align 8, !tbaa !34
  %37 = getelementptr inbounds x86_fp80, ptr %9, i64 %36
  %38 = icmp eq ptr %31, %37
  br i1 %38, label %64, label %39

39:                                               ; preds = %29, %52
  %40 = phi ptr [ %53, %52 ], [ %31, %29 ]
  %41 = phi x86_fp80 [ %62, %52 ], [ 0xK00000000000000000000, %29 ]
  %42 = phi ptr [ %54, %52 ], [ %32, %29 ]
  %43 = load x86_fp80, ptr %40, align 16, !tbaa !128
  %44 = load i32, ptr %42, align 4, !tbaa !47
  br label %45

45:                                               ; preds = %45, %39
  %46 = phi i32 [ %22, %39 ], [ %47, %45 ]
  %47 = add i32 %46, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %24, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !47
  %51 = icmp ugt i32 %50, %44
  br i1 %51, label %45, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds x86_fp80, ptr %40, i64 1
  %54 = getelementptr inbounds i32, ptr %42, i64 1
  %55 = sub i32 %44, %50
  %56 = zext i32 %55 to i64
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !135
  %60 = getelementptr inbounds x86_fp80, ptr %59, i64 %56
  %61 = load x86_fp80, ptr %60, align 16, !tbaa !128
  %62 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %43, x86_fp80 %61, x86_fp80 %41)
  %63 = icmp eq ptr %53, %37
  br i1 %63, label %64, label %39

64:                                               ; preds = %52, %29
  %65 = phi ptr [ %32, %29 ], [ %54, %52 ]
  %66 = phi x86_fp80 [ 0xK00000000000000000000, %29 ], [ %62, %52 ]
  %67 = phi ptr [ %31, %29 ], [ %37, %52 ]
  %68 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  %69 = load x86_fp80, ptr %33, align 16, !tbaa !128
  %70 = fadd x86_fp80 %66, %69
  store x86_fp80 %70, ptr %33, align 16, !tbaa !128
  %71 = icmp eq i64 %34, %27
  br i1 %71, label %28, label %29
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_6VectorIeEENS_11BlockVectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %68, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %67, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  br label %47

47:                                               ; preds = %47, %40
  %48 = phi i32 [ %16, %40 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %18, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !47
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %30, %53
  br i1 %54, label %47, label %55

55:                                               ; preds = %47
  %56 = sub i32 %39, %52
  %57 = zext i32 %56 to i64
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = zext i32 %44 to i64
  %64 = getelementptr inbounds x86_fp80, ptr %22, i64 %63
  %65 = load x86_fp80, ptr %64, align 16, !tbaa !128
  %66 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %62, x86_fp80 %65)
  store x86_fp80 %66, ptr %64, align 16, !tbaa !128
  %67 = add i32 %42, 1
  %68 = zext i32 %67 to i64
  %69 = icmp ugt i64 %33, %68
  br i1 %69, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !852
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !852
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !852
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %94, %37
  ret void

48:                                               ; preds = %41, %94
  %49 = phi i64 [ 0, %41 ], [ %56, %94 ]
  %50 = phi ptr [ %13, %41 ], [ %77, %94 ]
  %51 = phi ptr [ %16, %41 ], [ %75, %94 ]
  %52 = phi i32 [ %39, %41 ], [ %97, %94 ]
  %53 = phi i32 [ 0, %41 ], [ %96, %94 ]
  %54 = phi i32 [ %38, %41 ], [ %95, %94 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %74, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %72, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds x86_fp80, ptr %43, i64 %69
  %71 = load x86_fp80, ptr %70, align 16, !tbaa !128
  %72 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %71, x86_fp80 %63)
  %73 = icmp eq ptr %65, %59
  br i1 %73, label %74, label %61

74:                                               ; preds = %61, %48
  %75 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %76 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %72, %61 ]
  %77 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %78 = icmp eq i32 %52, %55
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = add i32 %53, 1
  br label %94

81:                                               ; preds = %74
  %82 = add i32 %54, 1
  %83 = icmp ult i32 %82, %19
  br i1 %83, label %84, label %94

84:                                               ; preds = %81
  %85 = add i32 %54, 2
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i32, ptr %21, i64 %86
  %88 = load i32, ptr %87, align 4, !tbaa !47, !noalias !855
  %89 = zext i32 %82 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !855
  %92 = add i32 %88, %52
  %93 = sub i32 %92, %91
  br label %94

94:                                               ; preds = %81, %79, %84
  %95 = phi i32 [ %82, %84 ], [ %54, %79 ], [ %82, %81 ]
  %96 = phi i32 [ 0, %84 ], [ %80, %79 ], [ 0, %81 ]
  %97 = phi i32 [ %93, %84 ], [ %52, %79 ], [ -1, %81 ]
  %98 = zext i32 %54 to i64
  %99 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %98, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !135
  %101 = zext i32 %53 to i64
  %102 = getelementptr inbounds x86_fp80, ptr %100, i64 %101
  store x86_fp80 %76, ptr %102, align 16, !tbaa !128
  %103 = icmp eq i64 %56, %46
  br i1 %103, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %77 = load ptr, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = zext i32 %68 to i64
  %83 = load i64, ptr %72, align 8, !tbaa !34
  br label %87

84:                                               ; preds = %114, %87
  %85 = icmp eq i64 %90, %82
  br i1 %85, label %86, label %87

86:                                               ; preds = %84, %64
  ret void

87:                                               ; preds = %70, %84
  %88 = phi i64 [ %83, %70 ], [ %92, %84 ]
  %89 = phi i64 [ 0, %70 ], [ %90, %84 ]
  %90 = add nuw nsw i64 %89, 1
  %91 = getelementptr inbounds i64, ptr %72, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !34
  %93 = and i64 %88, 4294967295
  %94 = icmp ugt i64 %92, %93
  br i1 %94, label %95, label %84

95:                                               ; preds = %87
  %96 = trunc i64 %88 to i32
  %97 = load ptr, ptr %73, align 8, !tbaa !46
  %98 = getelementptr inbounds x86_fp80, ptr %77, i64 %89
  br label %99

99:                                               ; preds = %95, %114
  %100 = phi i64 [ %93, %95 ], [ %124, %114 ]
  %101 = phi i32 [ %96, %95 ], [ %123, %114 ]
  %102 = getelementptr inbounds i32, ptr %97, i64 %100
  %103 = load i32, ptr %102, align 4, !tbaa !47
  %104 = getelementptr inbounds x86_fp80, ptr %75, i64 %100
  %105 = load x86_fp80, ptr %104, align 16, !tbaa !128
  %106 = load x86_fp80, ptr %98, align 16, !tbaa !128
  br label %107

107:                                              ; preds = %107, %99
  %108 = phi i32 [ %5, %99 ], [ %109, %107 ]
  %109 = add i32 %108, -1
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, ptr %79, i64 %110
  %112 = load i32, ptr %111, align 4, !tbaa !47
  %113 = icmp ugt i32 %112, %103
  br i1 %113, label %107, label %114

114:                                              ; preds = %107
  %115 = sub i32 %103, %112
  %116 = zext i32 %115 to i64
  %117 = zext i32 %109 to i64
  %118 = getelementptr inbounds %"class.dealii::Vector.27", ptr %81, i64 %117, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !135
  %120 = getelementptr inbounds x86_fp80, ptr %119, i64 %116
  %121 = load x86_fp80, ptr %120, align 16, !tbaa !128
  %122 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %105, x86_fp80 %106, x86_fp80 %121)
  store x86_fp80 %122, ptr %120, align 16, !tbaa !128
  %123 = add i32 %101, 1
  %124 = zext i32 %123 to i64
  %125 = icmp ugt i64 %92, %124
  br i1 %125, label %99, label %84
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !858
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !858
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !858
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !373
  %46 = zext i32 %7 to i64
  br label %48

47:                                               ; preds = %94, %37
  ret void

48:                                               ; preds = %41, %94
  %49 = phi i64 [ 0, %41 ], [ %56, %94 ]
  %50 = phi ptr [ %13, %41 ], [ %77, %94 ]
  %51 = phi ptr [ %16, %41 ], [ %75, %94 ]
  %52 = phi i32 [ %39, %41 ], [ %97, %94 ]
  %53 = phi i32 [ 0, %41 ], [ %96, %94 ]
  %54 = phi i32 [ %38, %41 ], [ %95, %94 ]
  %55 = trunc i64 %49 to i32
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds i64, ptr %11, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds x86_fp80, ptr %9, i64 %58
  %60 = icmp eq ptr %50, %59
  br i1 %60, label %74, label %61

61:                                               ; preds = %48, %61
  %62 = phi ptr [ %65, %61 ], [ %50, %48 ]
  %63 = phi x86_fp80 [ %72, %61 ], [ 0xK00000000000000000000, %48 ]
  %64 = phi ptr [ %67, %61 ], [ %51, %48 ]
  %65 = getelementptr inbounds x86_fp80, ptr %62, i64 1
  %66 = load x86_fp80, ptr %62, align 16, !tbaa !128
  %67 = getelementptr inbounds i32, ptr %64, i64 1
  %68 = load i32, ptr %64, align 4, !tbaa !47
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds x86_fp80, ptr %43, i64 %69
  %71 = load x86_fp80, ptr %70, align 16, !tbaa !128
  %72 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %66, x86_fp80 %71, x86_fp80 %63)
  %73 = icmp eq ptr %65, %59
  br i1 %73, label %74, label %61

74:                                               ; preds = %61, %48
  %75 = phi ptr [ %51, %48 ], [ %67, %61 ]
  %76 = phi x86_fp80 [ 0xK00000000000000000000, %48 ], [ %72, %61 ]
  %77 = phi ptr [ %50, %48 ], [ %59, %61 ]
  %78 = icmp eq i32 %52, %55
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = add i32 %53, 1
  br label %94

81:                                               ; preds = %74
  %82 = add i32 %54, 1
  %83 = icmp ult i32 %82, %19
  br i1 %83, label %84, label %94

84:                                               ; preds = %81
  %85 = add i32 %54, 2
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i32, ptr %21, i64 %86
  %88 = load i32, ptr %87, align 4, !tbaa !47, !noalias !861
  %89 = zext i32 %82 to i64
  %90 = getelementptr inbounds i32, ptr %21, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !47, !noalias !861
  %92 = add i32 %88, %52
  %93 = sub i32 %92, %91
  br label %94

94:                                               ; preds = %81, %79, %84
  %95 = phi i32 [ %82, %84 ], [ %54, %79 ], [ %82, %81 ]
  %96 = phi i32 [ 0, %84 ], [ %80, %79 ], [ 0, %81 ]
  %97 = phi i32 [ %93, %84 ], [ %52, %79 ], [ -1, %81 ]
  %98 = zext i32 %54 to i64
  %99 = getelementptr inbounds %"class.dealii::Vector.27", ptr %45, i64 %98, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !135
  %101 = zext i32 %53 to i64
  %102 = getelementptr inbounds x86_fp80, ptr %100, i64 %101
  %103 = load x86_fp80, ptr %102, align 16, !tbaa !128
  %104 = fadd x86_fp80 %76, %103
  store x86_fp80 %104, ptr %102, align 16, !tbaa !128
  %105 = icmp eq i64 %56, %46
  br i1 %105, label %47, label %48
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIeEENS_6VectorIeEEEEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::Vector.27", ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = zext i32 %7 to i64
  %24 = load i64, ptr %11, align 8, !tbaa !34
  br label %28

25:                                               ; preds = %55, %28
  %26 = icmp eq i64 %31, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %9, %25
  %29 = phi i64 [ %24, %9 ], [ %33, %25 ]
  %30 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %31 = add nuw nsw i64 %30, 1
  %32 = getelementptr inbounds i64, ptr %11, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = and i64 %29, 4294967295
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %28
  %37 = trunc i64 %29 to i32
  %38 = load ptr, ptr %12, align 8, !tbaa !46
  %39 = getelementptr inbounds x86_fp80, ptr %16, i64 %30
  br label %40

40:                                               ; preds = %36, %55
  %41 = phi i64 [ %34, %36 ], [ %65, %55 ]
  %42 = phi i32 [ %37, %36 ], [ %64, %55 ]
  %43 = getelementptr inbounds i32, ptr %38, i64 %41
  %44 = load i32, ptr %43, align 4, !tbaa !47
  %45 = getelementptr inbounds x86_fp80, ptr %14, i64 %41
  %46 = load x86_fp80, ptr %45, align 16, !tbaa !128
  %47 = load x86_fp80, ptr %39, align 16, !tbaa !128
  br label %48

48:                                               ; preds = %48, %40
  %49 = phi i32 [ %18, %40 ], [ %50, %48 ]
  %50 = add i32 %49, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %20, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !47
  %54 = icmp ugt i32 %53, %44
  br i1 %54, label %48, label %55

55:                                               ; preds = %48
  %56 = sub i32 %44, %53
  %57 = zext i32 %56 to i64
  %58 = zext i32 %50 to i64
  %59 = getelementptr inbounds %"class.dealii::Vector.27", ptr %22, i64 %58, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !135
  %61 = getelementptr inbounds x86_fp80, ptr %60, i64 %57
  %62 = load x86_fp80, ptr %61, align 16, !tbaa !128
  %63 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %46, x86_fp80 %47, x86_fp80 %62)
  store x86_fp80 %63, ptr %61, align 16, !tbaa !128
  %64 = add i32 %42, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %33, %65
  br i1 %66, label %40, label %25
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE5vmultINS_11BlockVectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !864
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !864
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !864
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %110, %37
  ret void

52:                                               ; preds = %41, %110
  %53 = phi i64 [ 0, %41 ], [ %60, %110 ]
  %54 = phi ptr [ %13, %41 ], [ %93, %110 ]
  %55 = phi ptr [ %16, %41 ], [ %91, %110 ]
  %56 = phi i32 [ %39, %41 ], [ %113, %110 ]
  %57 = phi i32 [ 0, %41 ], [ %112, %110 ]
  %58 = phi i32 [ %38, %41 ], [ %111, %110 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %90, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %88, %78 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !135
  %86 = getelementptr inbounds x86_fp80, ptr %85, i64 %82
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  %88 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %87, x86_fp80 %67)
  %89 = icmp eq ptr %79, %63
  br i1 %89, label %90, label %65

90:                                               ; preds = %78, %52
  %91 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %92 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %88, %78 ]
  %93 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %94 = icmp eq i32 %56, %59
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  %96 = add i32 %57, 1
  br label %110

97:                                               ; preds = %90
  %98 = add i32 %58, 1
  %99 = icmp ult i32 %98, %19
  br i1 %99, label %100, label %110

100:                                              ; preds = %97
  %101 = add i32 %58, 2
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i32, ptr %21, i64 %102
  %104 = load i32, ptr %103, align 4, !tbaa !47, !noalias !867
  %105 = zext i32 %98 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !867
  %108 = add i32 %104, %56
  %109 = sub i32 %108, %107
  br label %110

110:                                              ; preds = %97, %95, %100
  %111 = phi i32 [ %98, %100 ], [ %58, %95 ], [ %98, %97 ]
  %112 = phi i32 [ 0, %100 ], [ %96, %95 ], [ 0, %97 ]
  %113 = phi i32 [ %109, %100 ], [ %56, %95 ], [ -1, %97 ]
  %114 = zext i32 %58 to i64
  %115 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %114, i32 3
  %116 = load ptr, ptr %115, align 8, !tbaa !135
  %117 = zext i32 %57 to i64
  %118 = getelementptr inbounds x86_fp80, ptr %116, i64 %117
  store x86_fp80 %92, ptr %118, align 16, !tbaa !128
  %119 = icmp eq i64 %60, %50
  br i1 %119, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE6TvmultINS_11BlockVectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !217
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %64, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !373
  %10 = zext i32 %5 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = and i64 %10, 4294967294
  br label %15

15:                                               ; preds = %44, %13
  %16 = phi i64 [ 0, %13 ], [ %45, %44 ]
  %17 = phi i64 [ 0, %13 ], [ %46, %44 ]
  %18 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !138
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %16, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !135
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds x86_fp80, ptr %23, i64 %24
  br label %26

26:                                               ; preds = %26, %21
  %27 = phi ptr [ %28, %26 ], [ %23, %21 ]
  store x86_fp80 0xK00000000000000000000, ptr %27, align 16, !tbaa !128
  %28 = getelementptr inbounds x86_fp80, ptr %27, i64 1
  %29 = icmp eq ptr %28, %25
  br i1 %29, label %30, label %26

30:                                               ; preds = %26, %15
  %31 = or i64 %16, 1
  %32 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !138
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %31, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !135
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds x86_fp80, ptr %37, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi ptr [ %42, %40 ], [ %37, %35 ]
  store x86_fp80 0xK00000000000000000000, ptr %41, align 16, !tbaa !128
  %42 = getelementptr inbounds x86_fp80, ptr %41, i64 1
  %43 = icmp eq ptr %42, %39
  br i1 %43, label %44, label %40

44:                                               ; preds = %40, %30
  %45 = add nuw nsw i64 %16, 2
  %46 = add i64 %17, 2
  %47 = icmp eq i64 %46, %14
  br i1 %47, label %48, label %15

48:                                               ; preds = %44, %7
  %49 = phi i64 [ 0, %7 ], [ %45, %44 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !138
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector.27", ptr %9, i64 %49, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !135
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds x86_fp80, ptr %57, i64 %58
  br label %60

60:                                               ; preds = %60, %55
  %61 = phi ptr [ %62, %60 ], [ %57, %55 ]
  store x86_fp80 0xK00000000000000000000, ptr %61, align 16, !tbaa !128
  %62 = getelementptr inbounds x86_fp80, ptr %61, i64 1
  %63 = icmp eq ptr %62, %59
  br i1 %63, label %64, label %60

64:                                               ; preds = %48, %60, %51, %3
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %90, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 8
  %72 = load ptr, ptr %71, align 8, !tbaa !32
  %73 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %66, i64 0, i32 9
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %77 = load i32, ptr %76, align 8
  %78 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8
  %86 = zext i32 %68 to i64
  %87 = load i64, ptr %72, align 8, !tbaa !34
  br label %91

88:                                               ; preds = %133, %91
  %89 = icmp eq i64 %94, %86
  br i1 %89, label %90, label %91

90:                                               ; preds = %88, %64
  ret void

91:                                               ; preds = %70, %88
  %92 = phi i64 [ %87, %70 ], [ %96, %88 ]
  %93 = phi i64 [ 0, %70 ], [ %94, %88 ]
  %94 = add nuw nsw i64 %93, 1
  %95 = getelementptr inbounds i64, ptr %72, i64 %94
  %96 = load i64, ptr %95, align 8, !tbaa !34
  %97 = and i64 %92, 4294967295
  %98 = icmp ugt i64 %96, %97
  br i1 %98, label %99, label %88

99:                                               ; preds = %91
  %100 = trunc i64 %92 to i32
  %101 = load ptr, ptr %73, align 8, !tbaa !46
  %102 = trunc i64 %93 to i32
  br label %103

103:                                              ; preds = %99, %133
  %104 = phi i64 [ %97, %99 ], [ %143, %133 ]
  %105 = phi i32 [ %100, %99 ], [ %142, %133 ]
  %106 = getelementptr inbounds i32, ptr %101, i64 %104
  %107 = load i32, ptr %106, align 4, !tbaa !47
  %108 = getelementptr inbounds x86_fp80, ptr %75, i64 %104
  %109 = load x86_fp80, ptr %108, align 16, !tbaa !128
  br label %110

110:                                              ; preds = %110, %103
  %111 = phi i32 [ %77, %103 ], [ %112, %110 ]
  %112 = add i32 %111, -1
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %79, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !47
  %116 = zext i32 %115 to i64
  %117 = icmp ult i64 %93, %116
  br i1 %117, label %110, label %118

118:                                              ; preds = %110
  %119 = sub i32 %102, %115
  %120 = zext i32 %119 to i64
  %121 = zext i32 %112 to i64
  %122 = getelementptr inbounds %"class.dealii::Vector.27", ptr %81, i64 %121, i32 3
  %123 = load ptr, ptr %122, align 8, !tbaa !135
  %124 = getelementptr inbounds x86_fp80, ptr %123, i64 %120
  %125 = load x86_fp80, ptr %124, align 16, !tbaa !128
  br label %126

126:                                              ; preds = %126, %118
  %127 = phi i32 [ %5, %118 ], [ %128, %126 ]
  %128 = add i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, ptr %83, i64 %129
  %131 = load i32, ptr %130, align 4, !tbaa !47
  %132 = icmp ugt i32 %131, %107
  br i1 %132, label %126, label %133

133:                                              ; preds = %126
  %134 = sub i32 %107, %131
  %135 = zext i32 %134 to i64
  %136 = zext i32 %128 to i64
  %137 = getelementptr inbounds %"class.dealii::Vector.27", ptr %85, i64 %136, i32 3
  %138 = load ptr, ptr %137, align 8, !tbaa !135
  %139 = getelementptr inbounds x86_fp80, ptr %138, i64 %135
  %140 = load x86_fp80, ptr %139, align 16, !tbaa !128
  %141 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %109, x86_fp80 %125, x86_fp80 %140)
  store x86_fp80 %141, ptr %139, align 16, !tbaa !128
  %142 = add i32 %105, 1
  %143 = zext i32 %142 to i64
  %144 = icmp ugt i64 %96, %143
  br i1 %144, label %103, label %88
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE9vmult_addINS_11BlockVectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !125
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds x86_fp80, ptr %9, i64 %12
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !46
  %16 = getelementptr inbounds i32, ptr %15, i64 %12
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %19 = load i32, ptr %17, align 8, !tbaa !217, !noalias !45
  %20 = zext i32 %19 to i64
  %21 = load ptr, ptr %18, align 8, !tbaa !197, !noalias !45
  %22 = getelementptr inbounds i32, ptr %21, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !47, !noalias !870
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %3, %25
  %26 = phi i32 [ %27, %25 ], [ %19, %3 ]
  %27 = add i32 %26, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %21, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !47, !noalias !870
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds i32, ptr %21, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !47, !noalias !870
  %36 = add i32 %35, -1
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i32 [ %27, %32 ], [ %19, %3 ]
  %39 = phi i32 [ %36, %32 ], [ -1, %3 ]
  %40 = icmp eq i32 %7, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %45 = load ptr, ptr %44, align 8
  %46 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !373
  %50 = zext i32 %7 to i64
  br label %52

51:                                               ; preds = %110, %37
  ret void

52:                                               ; preds = %41, %110
  %53 = phi i64 [ 0, %41 ], [ %60, %110 ]
  %54 = phi ptr [ %13, %41 ], [ %93, %110 ]
  %55 = phi ptr [ %16, %41 ], [ %91, %110 ]
  %56 = phi i32 [ %39, %41 ], [ %113, %110 ]
  %57 = phi i32 [ 0, %41 ], [ %112, %110 ]
  %58 = phi i32 [ %38, %41 ], [ %111, %110 ]
  %59 = trunc i64 %53 to i32
  %60 = add nuw nsw i64 %53, 1
  %61 = getelementptr inbounds i64, ptr %11, i64 %60
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds x86_fp80, ptr %9, i64 %62
  %64 = icmp eq ptr %54, %63
  br i1 %64, label %90, label %65

65:                                               ; preds = %52, %78
  %66 = phi ptr [ %79, %78 ], [ %54, %52 ]
  %67 = phi x86_fp80 [ %88, %78 ], [ 0xK00000000000000000000, %52 ]
  %68 = phi ptr [ %80, %78 ], [ %55, %52 ]
  %69 = load x86_fp80, ptr %66, align 16, !tbaa !128
  %70 = load i32, ptr %68, align 4, !tbaa !47
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i32 [ %43, %65 ], [ %73, %71 ]
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %45, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !47
  %77 = icmp ugt i32 %76, %70
  br i1 %77, label %71, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds x86_fp80, ptr %66, i64 1
  %80 = getelementptr inbounds i32, ptr %68, i64 1
  %81 = sub i32 %70, %76
  %82 = zext i32 %81 to i64
  %83 = zext i32 %73 to i64
  %84 = getelementptr inbounds %"class.dealii::Vector.27", ptr %47, i64 %83, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !135
  %86 = getelementptr inbounds x86_fp80, ptr %85, i64 %82
  %87 = load x86_fp80, ptr %86, align 16, !tbaa !128
  %88 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %69, x86_fp80 %87, x86_fp80 %67)
  %89 = icmp eq ptr %79, %63
  br i1 %89, label %90, label %65

90:                                               ; preds = %78, %52
  %91 = phi ptr [ %55, %52 ], [ %80, %78 ]
  %92 = phi x86_fp80 [ 0xK00000000000000000000, %52 ], [ %88, %78 ]
  %93 = phi ptr [ %54, %52 ], [ %63, %78 ]
  %94 = icmp eq i32 %56, %59
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  %96 = add i32 %57, 1
  br label %110

97:                                               ; preds = %90
  %98 = add i32 %58, 1
  %99 = icmp ult i32 %98, %19
  br i1 %99, label %100, label %110

100:                                              ; preds = %97
  %101 = add i32 %58, 2
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i32, ptr %21, i64 %102
  %104 = load i32, ptr %103, align 4, !tbaa !47, !noalias !873
  %105 = zext i32 %98 to i64
  %106 = getelementptr inbounds i32, ptr %21, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !47, !noalias !873
  %108 = add i32 %104, %56
  %109 = sub i32 %108, %107
  br label %110

110:                                              ; preds = %97, %95, %100
  %111 = phi i32 [ %98, %100 ], [ %58, %95 ], [ %98, %97 ]
  %112 = phi i32 [ 0, %100 ], [ %96, %95 ], [ 0, %97 ]
  %113 = phi i32 [ %109, %100 ], [ %56, %95 ], [ -1, %97 ]
  %114 = zext i32 %58 to i64
  %115 = getelementptr inbounds %"class.dealii::Vector.27", ptr %49, i64 %114, i32 3
  %116 = load ptr, ptr %115, align 8, !tbaa !135
  %117 = zext i32 %57 to i64
  %118 = getelementptr inbounds x86_fp80, ptr %116, i64 %117
  %119 = load x86_fp80, ptr %118, align 16, !tbaa !128
  %120 = fadd x86_fp80 %92, %119
  store x86_fp80 %120, ptr %118, align 16, !tbaa !128
  %121 = icmp eq i64 %60, %50
  br i1 %121, label %51, label %52
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii12SparseMatrixIeE10Tvmult_addINS_11BlockVectorIeEES4_EEvRT_RKT0_(ptr noundef nonnull align 8 dereferenceable(36) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !8
  %6 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %5, i64 0, i32 9
  %13 = getelementptr inbounds %"class.dealii::SparseMatrix.25", ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 2, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %"class.dealii::BlockVectorBase.60", ptr %1, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8
  %27 = zext i32 %7 to i64
  %28 = load i64, ptr %11, align 8, !tbaa !34
  br label %32

29:                                               ; preds = %74, %32
  %30 = icmp eq i64 %35, %27
  br i1 %30, label %31, label %32

31:                                               ; preds = %29, %3
  ret void

32:                                               ; preds = %9, %29
  %33 = phi i64 [ %28, %9 ], [ %37, %29 ]
  %34 = phi i64 [ 0, %9 ], [ %35, %29 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr inbounds i64, ptr %11, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = and i64 %33, 4294967295
  %39 = icmp ugt i64 %37, %38
  br i1 %39, label %40, label %29

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = load ptr, ptr %12, align 8, !tbaa !46
  %43 = trunc i64 %34 to i32
  br label %44

44:                                               ; preds = %40, %74
  %45 = phi i64 [ %38, %40 ], [ %84, %74 ]
  %46 = phi i32 [ %41, %40 ], [ %83, %74 ]
  %47 = getelementptr inbounds i32, ptr %42, i64 %45
  %48 = load i32, ptr %47, align 4, !tbaa !47
  %49 = getelementptr inbounds x86_fp80, ptr %14, i64 %45
  %50 = load x86_fp80, ptr %49, align 16, !tbaa !128
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i32 [ %16, %44 ], [ %53, %51 ]
  %53 = add i32 %52, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %18, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !47
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %34, %57
  br i1 %58, label %51, label %59

59:                                               ; preds = %51
  %60 = sub i32 %43, %56
  %61 = zext i32 %60 to i64
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.dealii::Vector.27", ptr %20, i64 %62, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !135
  %65 = getelementptr inbounds x86_fp80, ptr %64, i64 %61
  %66 = load x86_fp80, ptr %65, align 16, !tbaa !128
  br label %67

67:                                               ; preds = %67, %59
  %68 = phi i32 [ %22, %59 ], [ %69, %67 ]
  %69 = add i32 %68, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, ptr %24, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !47
  %73 = icmp ugt i32 %72, %48
  br i1 %73, label %67, label %74

74:                                               ; preds = %67
  %75 = sub i32 %48, %72
  %76 = zext i32 %75 to i64
  %77 = zext i32 %69 to i64
  %78 = getelementptr inbounds %"class.dealii::Vector.27", ptr %26, i64 %77, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !135
  %80 = getelementptr inbounds x86_fp80, ptr %79, i64 %76
  %81 = load x86_fp80, ptr %80, align 16, !tbaa !128
  %82 = tail call x86_fp80 @llvm.fmuladd.f80(x86_fp80 %50, x86_fp80 %66, x86_fp80 %81)
  store x86_fp80 %82, ptr %80, align 16, !tbaa !128
  %83 = add i32 %46, 1
  %84 = zext i32 %83 to i64
  %85 = icmp ugt i64 %37, %84
  br i1 %85, label %44, label %29
}

; Function Attrs: nounwind
declare noundef ptr @_ZNK6dealii13ExceptionBase4whatEv(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #12

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii12SparseMatrixIdE28ExcDifferentSparsityPatternsD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #9 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

declare void @_ZNK6dealii13ExceptionBase10print_infoERSo(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii12SparseMatrixIdE26ExcSourceEqualsDestinationD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #9 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii12SparseMatrixIfE28ExcDifferentSparsityPatternsD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #9 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii12SparseMatrixIfE26ExcSourceEqualsDestinationD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #9 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii12SparseMatrixIeE28ExcDifferentSparsityPatternsD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #9 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #12

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii12SparseMatrixIeE26ExcSourceEqualsDestinationD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #9 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii18StandardExceptions5ExcIOD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #9 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #17
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #8

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare float @sqrtf(float noundef) local_unnamed_addr #10

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare x86_fp80 @llvm.fabs.f80(x86_fp80) #8

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare x86_fp80 @sqrtl(x86_fp80 noundef) local_unnamed_addr #10

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, i64 noundef) local_unnamed_addr #1

declare void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(ptr noundef nonnull align 8 dereferenceable(264), i32 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #13

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8), i8 noundef signext) local_unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZSt16__throw_bad_castv() local_unnamed_addr #14

declare void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570)) local_unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), double noundef) local_unnamed_addr #1

declare void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @__cxa_allocate_exception(i64) local_unnamed_addr

declare void @__cxa_free_exception(ptr) local_unnamed_addr

declare void @__cxa_throw(ptr, ptr, ptr) local_unnamed_addr

declare void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIdED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !53
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #19
  store ptr null, ptr %2, align 8, !tbaa !53
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  resume { ptr, i32 } %9
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIdE6reinitEjb(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #4 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !53
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(ptr noundef nonnull %7) #19
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  br label %32

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !55
  %15 = icmp ult i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !53
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %18) #19
  br label %21

21:                                               ; preds = %20, %16
  %22 = zext i32 %1 to i64
  %23 = shl nuw nsw i64 %22, 3
  %24 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %23) #20
  store ptr %24, ptr %17, align 8, !tbaa !53
  store i32 %1, ptr %13, align 4, !tbaa !55
  br label %25

25:                                               ; preds = %21, %12
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  store i32 %1, ptr %26, align 8, !tbaa !56
  br i1 %2, label %32, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !53
  %30 = zext i32 %1 to i64
  %31 = shl nuw nsw i64 %30, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %29, i8 0, i64 %31, i1 false), !tbaa !30
  br label %32

32:                                               ; preds = %27, %10, %25
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIdE4swapERS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !47
  %6 = load i32, ptr %4, align 8, !tbaa !47
  store i32 %6, ptr %3, align 8, !tbaa !47
  store i32 %5, ptr %4, align 8, !tbaa !47
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 2
  %9 = load i32, ptr %7, align 4, !tbaa !47
  %10 = load i32, ptr %8, align 4, !tbaa !47
  store i32 %10, ptr %7, align 4, !tbaa !47
  store i32 %9, ptr %8, align 4, !tbaa !47
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %11, align 8, !tbaa !876
  %14 = load ptr, ptr %12, align 8, !tbaa !876
  store ptr %14, ptr %11, align 8, !tbaa !876
  store ptr %13, ptr %12, align 8, !tbaa !876
  ret void
}

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(16) ptr @_ZNSi10_M_extractIjEERSiRT_(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef nonnull align 4 dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIfED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.20", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !106
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #19
  store ptr null, ptr %2, align 8, !tbaa !106
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  resume { ptr, i32 } %9
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIfE6reinitEjb(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #4 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector.20", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !106
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(ptr noundef nonnull %7) #19
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.dealii::Vector.20", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  br label %32

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector.20", ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !108
  %15 = icmp ult i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector.20", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !106
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %18) #19
  br label %21

21:                                               ; preds = %20, %16
  %22 = zext i32 %1 to i64
  %23 = shl nuw nsw i64 %22, 2
  %24 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %23) #20
  store ptr %24, ptr %17, align 8, !tbaa !106
  store i32 %1, ptr %13, align 4, !tbaa !108
  br label %25

25:                                               ; preds = %21, %12
  %26 = getelementptr inbounds %"class.dealii::Vector.20", ptr %0, i64 0, i32 1
  store i32 %1, ptr %26, align 8, !tbaa !109
  br i1 %2, label %32, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::Vector.20", ptr %0, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !106
  %30 = zext i32 %1 to i64
  %31 = shl nuw nsw i64 %30, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %29, i8 0, i64 %31, i1 false), !tbaa !95
  br label %32

32:                                               ; preds = %27, %10, %25
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIfE4swapERS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.20", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !47
  %6 = load i32, ptr %4, align 8, !tbaa !47
  store i32 %6, ptr %3, align 8, !tbaa !47
  store i32 %5, ptr %4, align 8, !tbaa !47
  %7 = getelementptr inbounds %"class.dealii::Vector.20", ptr %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 2
  %9 = load i32, ptr %7, align 4, !tbaa !47
  %10 = load i32, ptr %8, align 4, !tbaa !47
  store i32 %10, ptr %7, align 4, !tbaa !47
  store i32 %9, ptr %8, align 4, !tbaa !47
  %11 = getelementptr inbounds %"class.dealii::Vector.20", ptr %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dealii::Vector.20", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %11, align 8, !tbaa !876
  %14 = load ptr, ptr %12, align 8, !tbaa !876
  store ptr %14, ptr %11, align 8, !tbaa !876
  store ptr %13, ptr %12, align 8, !tbaa !876
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIeED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIeEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::Vector.27", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !135
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #19
  store ptr null, ptr %2, align 8, !tbaa !135
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #19
  resume { ptr, i32 } %9
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIeE6reinitEjb(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #4 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector.27", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !135
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(ptr noundef nonnull %7) #19
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.dealii::Vector.27", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  br label %36

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector.27", ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !137
  %15 = icmp ult i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector.27", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !135
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %18) #19
  br label %21

21:                                               ; preds = %20, %16
  %22 = zext i32 %1 to i64
  %23 = shl nuw nsw i64 %22, 4
  %24 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %23) #20
  store ptr %24, ptr %17, align 8, !tbaa !135
  store i32 %1, ptr %13, align 4, !tbaa !137
  br label %25

25:                                               ; preds = %21, %12
  %26 = getelementptr inbounds %"class.dealii::Vector.27", ptr %0, i64 0, i32 1
  store i32 %1, ptr %26, align 8, !tbaa !138
  br i1 %2, label %36, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::Vector.27", ptr %0, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !135
  %30 = zext i32 %1 to i64
  %31 = getelementptr inbounds x86_fp80, ptr %29, i64 %30
  br label %32

32:                                               ; preds = %32, %27
  %33 = phi ptr [ %34, %32 ], [ %29, %27 ]
  store x86_fp80 0xK00000000000000000000, ptr %33, align 16, !tbaa !128
  %34 = getelementptr inbounds x86_fp80, ptr %33, i64 1
  %35 = icmp eq ptr %34, %31
  br i1 %35, label %36, label %32

36:                                               ; preds = %32, %10, %25
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIeE4swapERS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.27", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !47
  %6 = load i32, ptr %4, align 8, !tbaa !47
  store i32 %6, ptr %3, align 8, !tbaa !47
  store i32 %5, ptr %4, align 8, !tbaa !47
  %7 = getelementptr inbounds %"class.dealii::Vector.27", ptr %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 2
  %9 = load i32, ptr %7, align 4, !tbaa !47
  %10 = load i32, ptr %8, align 4, !tbaa !47
  store i32 %10, ptr %7, align 4, !tbaa !47
  store i32 %9, ptr %8, align 4, !tbaa !47
  %11 = getelementptr inbounds %"class.dealii::Vector.27", ptr %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dealii::Vector.27", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %11, align 8, !tbaa !876
  %14 = load ptr, ptr %12, align 8, !tbaa !876
  store ptr %14, ptr %11, align 8, !tbaa !876
  store ptr %13, ptr %12, align 8, !tbaa !876
  ret void
}

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIeEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), x86_fp80 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x x86_fp80> @llvm.fabs.v2f80(<2 x x86_fp80>) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v2i32(<2 x i32>) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x double> @llvm.fmuladd.v4f64(<4 x double>, <4 x double>, <4 x double>) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x float> @llvm.fmuladd.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

attributes #0 = { sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #2 = { noinline noreturn nounwind sspstrong uwtable "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { inlinehint sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #5 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #6 = { nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #7 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #8 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #9 = { inlinehint nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #10 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #11 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #12 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #13 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #14 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #15 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #16 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { builtin allocsize(0) }
attributes #21 = { noreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"vtable pointer", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 0}
!9 = !{!"_ZTSN6dealii12SmartPointerIKNS_15SparsityPatternEEE", !10, i64 0, !10, i64 8}
!10 = !{!"any pointer", !11, i64 0}
!11 = !{!"omnipotent char", !7, i64 0}
!12 = !{!9, !10, i64 8}
!13 = !{!14, !10, i64 24}
!14 = !{!"_ZTSN6dealii12SparseMatrixIdEE", !9, i64 8, !10, i64 24, !15, i64 32}
!15 = !{!"int", !11, i64 0}
!16 = !{!14, !15, i64 32}
!17 = !{!18, !15, i64 80}
!18 = !{!"_ZTSN6dealii15SparsityPatternE", !19, i64 0, !15, i64 72, !15, i64 76, !15, i64 80, !28, i64 88, !15, i64 96, !10, i64 104, !10, i64 112, !29, i64 120, !29, i64 121}
!19 = !{!"_ZTSN6dealii11SubscriptorE", !15, i64 8, !20, i64 16, !10, i64 64}
!20 = !{!"_ZTSSt3mapIPKcjSt4lessIS1_ESaISt4pairIKS1_jEEE", !21, i64 0}
!21 = !{!"_ZTSSt8_Rb_treeIPKcSt4pairIKS1_jESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE", !22, i64 0}
!22 = !{!"_ZTSNSt8_Rb_treeIPKcSt4pairIKS1_jESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb0EEE", !23, i64 0, !25, i64 8}
!23 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessIPKcEE", !24, i64 0}
!24 = !{!"_ZTSSt4lessIPKcE"}
!25 = !{!"_ZTSSt15_Rb_tree_header", !26, i64 0, !28, i64 32}
!26 = !{!"_ZTSSt18_Rb_tree_node_base", !27, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}
!27 = !{!"_ZTSSt14_Rb_tree_color", !11, i64 0}
!28 = !{!"long", !11, i64 0}
!29 = !{!"bool", !11, i64 0}
!30 = !{!31, !31, i64 0}
!31 = !{!"double", !11, i64 0}
!32 = !{!18, !10, i64 104}
!33 = !{!18, !15, i64 76}
!34 = !{!28, !28, i64 0}
!35 = distinct !{!35, !36, !37}
!36 = !{!"llvm.loop.isvectorized", i32 1}
!37 = !{!"llvm.loop.unroll.runtime.disable"}
!38 = distinct !{!38, !37, !36}
!39 = distinct !{!39, !36, !37}
!40 = distinct !{!40, !37, !36}
!41 = distinct !{!41, !36, !37}
!42 = distinct !{!42, !37, !36}
!43 = !{!18, !29, i64 121}
!44 = !{i8 0, i8 2}
!45 = !{}
!46 = !{!18, !10, i64 112}
!47 = !{!15, !15, i64 0}
!48 = !{!49, !15, i64 60}
!49 = !{!"_ZTSN6dealii12SparseMatrixIdE15ExcInvalidIndexE", !50, i64 0, !15, i64 60, !15, i64 64}
!50 = !{!"_ZTSN6dealii13ExceptionBaseE", !51, i64 0, !10, i64 8, !15, i64 16, !10, i64 24, !10, i64 32, !10, i64 40, !10, i64 48, !15, i64 56}
!51 = !{!"_ZTSSt9exception"}
!52 = !{!49, !15, i64 64}
!53 = !{!54, !10, i64 80}
!54 = !{!"_ZTSN6dealii6VectorIdEE", !19, i64 0, !15, i64 72, !15, i64 76, !10, i64 80}
!55 = !{!54, !15, i64 76}
!56 = !{!54, !15, i64 72}
!57 = !{!58, !10, i64 0}
!58 = !{!"_ZTSN6dealii9internals24SparsityPatternIterators8AccessorE", !10, i64 0, !15, i64 8, !15, i64 12}
!59 = !{!58, !15, i64 8}
!60 = !{!58, !15, i64 12}
!61 = !{!62, !10, i64 16}
!62 = !{!"_ZTSN6dealii9internals21SparseMatrixIterators8AccessorIdLb1EEE", !58, i64 0, !10, i64 16}
!63 = !{!64, !10, i64 16}
!64 = !{!"_ZTSN6dealii9internals21SparseMatrixIterators8AccessorIdLb0EEE", !58, i64 0, !10, i64 16}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNK6dealii12SparseMatrixIdE3endEj: argument 0"}
!67 = distinct !{!67, !"_ZNK6dealii12SparseMatrixIdE3endEj"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!70 = distinct !{!70, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!71 = !{!72, !74, i64 32}
!72 = !{!"_ZTSSt8ios_base", !28, i64 8, !28, i64 16, !73, i64 24, !74, i64 28, !74, i64 32, !10, i64 40, !75, i64 48, !11, i64 64, !15, i64 192, !10, i64 200, !76, i64 208}
!73 = !{!"_ZTSSt13_Ios_Fmtflags", !11, i64 0}
!74 = !{!"_ZTSSt12_Ios_Iostate", !11, i64 0}
!75 = !{!"_ZTSNSt8ios_base6_WordsE", !10, i64 0, !28, i64 8}
!76 = !{!"_ZTSSt6locale", !10, i64 0}
!77 = !{!78, !10, i64 240}
!78 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !72, i64 0, !10, i64 216, !11, i64 224, !29, i64 225, !10, i64 232, !10, i64 240, !10, i64 248, !10, i64 256}
!79 = !{!80, !11, i64 56}
!80 = !{!"_ZTSSt5ctypeIcE", !81, i64 0, !10, i64 16, !29, i64 24, !10, i64 32, !10, i64 40, !10, i64 48, !11, i64 56, !11, i64 57, !11, i64 313, !11, i64 569}
!81 = !{!"_ZTSNSt6locale5facetE", !15, i64 8}
!82 = !{!11, !11, i64 0}
!83 = !{!72, !73, i64 24}
!84 = !{!72, !28, i64 8}
!85 = !{!73, !73, i64 0}
!86 = !{!72, !28, i64 16}
!87 = !{!88, !15, i64 60}
!88 = !{!"_ZTSN6dealii12SparseMatrixIdE16ExcInvalidIndex1E", !50, i64 0, !15, i64 60}
!89 = !{!90, !15, i64 60}
!90 = !{!"_ZTSN6dealii12SparseMatrixIdE16ExcIteratorRangeE", !50, i64 0, !15, i64 60, !15, i64 64}
!91 = !{!90, !15, i64 64}
!92 = !{!93, !10, i64 24}
!93 = !{!"_ZTSN6dealii12SparseMatrixIfEE", !9, i64 8, !10, i64 24, !15, i64 32}
!94 = !{!93, !15, i64 32}
!95 = !{!96, !96, i64 0}
!96 = !{!"float", !11, i64 0}
!97 = distinct !{!97, !36, !37}
!98 = distinct !{!98, !37, !36}
!99 = distinct !{!99, !36, !37}
!100 = distinct !{!100, !37, !36}
!101 = distinct !{!101, !36, !37}
!102 = distinct !{!102, !37, !36}
!103 = !{!104, !15, i64 60}
!104 = !{!"_ZTSN6dealii12SparseMatrixIfE15ExcInvalidIndexE", !50, i64 0, !15, i64 60, !15, i64 64}
!105 = !{!104, !15, i64 64}
!106 = !{!107, !10, i64 80}
!107 = !{!"_ZTSN6dealii6VectorIfEE", !19, i64 0, !15, i64 72, !15, i64 76, !10, i64 80}
!108 = !{!107, !15, i64 76}
!109 = !{!107, !15, i64 72}
!110 = !{!111, !10, i64 16}
!111 = !{!"_ZTSN6dealii9internals21SparseMatrixIterators8AccessorIfLb1EEE", !58, i64 0, !10, i64 16}
!112 = !{!113, !10, i64 16}
!113 = !{!"_ZTSN6dealii9internals21SparseMatrixIterators8AccessorIfLb0EEE", !58, i64 0, !10, i64 16}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZNK6dealii12SparseMatrixIfE3endEj: argument 0"}
!116 = distinct !{!116, !"_ZNK6dealii12SparseMatrixIfE3endEj"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!119 = distinct !{!119, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!120 = !{!121, !15, i64 60}
!121 = !{!"_ZTSN6dealii12SparseMatrixIfE16ExcInvalidIndex1E", !50, i64 0, !15, i64 60}
!122 = !{!123, !15, i64 60}
!123 = !{!"_ZTSN6dealii12SparseMatrixIfE16ExcIteratorRangeE", !50, i64 0, !15, i64 60, !15, i64 64}
!124 = !{!123, !15, i64 64}
!125 = !{!126, !10, i64 24}
!126 = !{!"_ZTSN6dealii12SparseMatrixIeEE", !9, i64 8, !10, i64 24, !15, i64 32}
!127 = !{!126, !15, i64 32}
!128 = !{!129, !129, i64 0}
!129 = !{!"long double", !11, i64 0}
!130 = distinct !{!130, !36, !37}
!131 = distinct !{!131, !37, !36}
!132 = !{!133, !15, i64 60}
!133 = !{!"_ZTSN6dealii12SparseMatrixIeE15ExcInvalidIndexE", !50, i64 0, !15, i64 60, !15, i64 64}
!134 = !{!133, !15, i64 64}
!135 = !{!136, !10, i64 80}
!136 = !{!"_ZTSN6dealii6VectorIeEE", !19, i64 0, !15, i64 72, !15, i64 76, !10, i64 80}
!137 = !{!136, !15, i64 76}
!138 = !{!136, !15, i64 72}
!139 = !{!140, !10, i64 16}
!140 = !{!"_ZTSN6dealii9internals21SparseMatrixIterators8AccessorIeLb1EEE", !58, i64 0, !10, i64 16}
!141 = !{!142, !10, i64 16}
!142 = !{!"_ZTSN6dealii9internals21SparseMatrixIterators8AccessorIeLb0EEE", !58, i64 0, !10, i64 16}
!143 = !{!144}
!144 = distinct !{!144, !145, !"_ZNK6dealii12SparseMatrixIeE3endEj: argument 0"}
!145 = distinct !{!145, !"_ZNK6dealii12SparseMatrixIeE3endEj"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZN6dealii12SparseMatrixIeE3endEj: argument 0"}
!148 = distinct !{!148, !"_ZN6dealii12SparseMatrixIeE3endEj"}
!149 = !{!150, !15, i64 60}
!150 = !{!"_ZTSN6dealii12SparseMatrixIeE16ExcInvalidIndex1E", !50, i64 0, !15, i64 60}
!151 = !{!152, !15, i64 60}
!152 = !{!"_ZTSN6dealii12SparseMatrixIeE16ExcIteratorRangeE", !50, i64 0, !15, i64 60, !15, i64 64}
!153 = !{!152, !15, i64 64}
!154 = !{!"branch_weights", i32 2000, i32 1}
!155 = distinct !{!155, !156}
!156 = !{!"llvm.loop.unswitch.partial.disable"}
!157 = !{!158, !10, i64 72}
!158 = !{!"_ZTSN6dealii9TableBaseILi2EdEE", !19, i64 0, !10, i64 72, !15, i64 80, !159, i64 84}
!159 = !{!"_ZTSN6dealii12TableIndicesILi2EEE", !160, i64 0}
!160 = !{!"_ZTSN6dealii16TableIndicesBaseILi2EEE", !11, i64 0}
!161 = !{!162}
!162 = distinct !{!162, !163}
!163 = distinct !{!163, !"LVerDomain"}
!164 = !{!165}
!165 = distinct !{!165, !163}
!166 = distinct !{!166, !36, !37}
!167 = distinct !{!167, !36}
!168 = distinct !{!168, !36, !37}
!169 = distinct !{!169, !37, !36}
!170 = distinct !{!170, !156}
!171 = !{!172, !10, i64 72}
!172 = !{!"_ZTSN6dealii9TableBaseILi2EfEE", !19, i64 0, !10, i64 72, !15, i64 80, !159, i64 84}
!173 = distinct !{!173, !36, !37}
!174 = distinct !{!174, !37, !36}
!175 = distinct !{!175, !156}
!176 = !{!177, !10, i64 72}
!177 = !{!"_ZTSN6dealii9TableBaseILi2EeEE", !19, i64 0, !10, i64 72, !15, i64 80, !159, i64 84}
!178 = distinct !{!178, !36, !37}
!179 = distinct !{!179, !37, !36}
!180 = distinct !{!180, !156}
!181 = distinct !{!181, !36, !37}
!182 = distinct !{!182, !37, !36}
!183 = distinct !{!183, !156}
!184 = !{!185}
!185 = distinct !{!185, !186}
!186 = distinct !{!186, !"LVerDomain"}
!187 = !{!188}
!188 = distinct !{!188, !186}
!189 = distinct !{!189, !36, !37}
!190 = distinct !{!190, !36}
!191 = distinct !{!191, !156}
!192 = distinct !{!192, !156}
!193 = distinct !{!193, !156}
!194 = distinct !{!194, !156}
!195 = !{!196, !10, i64 8}
!196 = !{!"_ZTSNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataE", !10, i64 0, !10, i64 8, !10, i64 16}
!197 = !{!196, !10, i64 0}
!198 = distinct !{!198, !199}
!199 = !{!"llvm.loop.unroll.disable"}
!200 = distinct !{!200, !199}
!201 = distinct !{!201, !199}
!202 = distinct !{!202, !199}
!203 = distinct !{!203, !199}
!204 = distinct !{!204, !36, !37}
!205 = distinct !{!205, !36, !37}
!206 = distinct !{!206, !36}
!207 = distinct !{!207, !36}
!208 = distinct !{!208, !36, !37}
!209 = distinct !{!209, !36, !37}
!210 = distinct !{!210, !36}
!211 = distinct !{!211, !36}
!212 = distinct !{!212, !199}
!213 = distinct !{!213, !199}
!214 = distinct !{!214, !199}
!215 = distinct !{!215, !199}
!216 = distinct !{!216, !199}
!217 = !{!218, !15, i64 0}
!218 = !{!"_ZTSN6dealii12BlockIndicesE", !15, i64 0, !219, i64 8}
!219 = !{!"_ZTSSt6vectorIjSaIjEE", !220, i64 0}
!220 = !{!"_ZTSSt12_Vector_baseIjSaIjEE", !221, i64 0}
!221 = !{!"_ZTSNSt12_Vector_baseIjSaIjEE12_Vector_implE", !196, i64 0}
!222 = !{!223}
!223 = distinct !{!223, !224, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!224 = distinct !{!224, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!225 = !{!226, !10, i64 0}
!226 = !{!"_ZTSNSt12_Vector_baseIN6dealii6VectorIdEESaIS2_EE17_Vector_impl_dataE", !10, i64 0, !10, i64 8, !10, i64 16}
!227 = !{!228}
!228 = distinct !{!228, !229, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!229 = distinct !{!229, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!230 = !{!231}
!231 = distinct !{!231, !232, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!232 = distinct !{!232, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!233 = !{!234}
!234 = distinct !{!234, !235, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!235 = distinct !{!235, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!236 = !{!237}
!237 = distinct !{!237, !238, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!238 = distinct !{!238, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!239 = !{!240}
!240 = distinct !{!240, !241, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!241 = distinct !{!241, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!242 = !{!243}
!243 = distinct !{!243, !244, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!244 = distinct !{!244, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!245 = !{!246}
!246 = distinct !{!246, !247, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!247 = distinct !{!247, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!248 = !{!249}
!249 = distinct !{!249, !250, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!250 = distinct !{!250, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!251 = !{!252}
!252 = distinct !{!252, !253, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!253 = distinct !{!253, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!254 = !{!255}
!255 = distinct !{!255, !256, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!256 = distinct !{!256, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!257 = !{!258}
!258 = distinct !{!258, !259, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!259 = distinct !{!259, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!260 = !{!261}
!261 = distinct !{!261, !262, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!262 = distinct !{!262, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!263 = !{!264}
!264 = distinct !{!264, !265, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!265 = distinct !{!265, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!266 = !{!267}
!267 = distinct !{!267, !268, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!268 = distinct !{!268, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!269 = !{!270}
!270 = distinct !{!270, !271, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!271 = distinct !{!271, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!272 = !{!273}
!273 = distinct !{!273, !274, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!274 = distinct !{!274, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!275 = !{!276}
!276 = distinct !{!276, !277, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!277 = distinct !{!277, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!278 = !{!279}
!279 = distinct !{!279, !280, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!280 = distinct !{!280, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!281 = !{!282}
!282 = distinct !{!282, !283, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!283 = distinct !{!283, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!284 = !{!285}
!285 = distinct !{!285, !286, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!286 = distinct !{!286, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!287 = !{!288}
!288 = distinct !{!288, !289, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!289 = distinct !{!289, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!290 = !{!291}
!291 = distinct !{!291, !292, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!292 = distinct !{!292, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!293 = !{!294}
!294 = distinct !{!294, !295, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!295 = distinct !{!295, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!296 = !{!297}
!297 = distinct !{!297, !298, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!298 = distinct !{!298, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!299 = !{!300, !10, i64 0}
!300 = !{!"_ZTSNSt12_Vector_baseIN6dealii6VectorIfEESaIS2_EE17_Vector_impl_dataE", !10, i64 0, !10, i64 8, !10, i64 16}
!301 = !{!302}
!302 = distinct !{!302, !303, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!303 = distinct !{!303, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!304 = !{!305}
!305 = distinct !{!305, !306, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!306 = distinct !{!306, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!307 = !{!308}
!308 = distinct !{!308, !309, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!309 = distinct !{!309, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!310 = !{!311}
!311 = distinct !{!311, !312, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!312 = distinct !{!312, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!313 = !{!314}
!314 = distinct !{!314, !315, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!315 = distinct !{!315, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!316 = !{!317}
!317 = distinct !{!317, !318, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!318 = distinct !{!318, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!319 = !{!320}
!320 = distinct !{!320, !321, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!321 = distinct !{!321, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!322 = !{!323}
!323 = distinct !{!323, !324, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!324 = distinct !{!324, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!325 = !{!326}
!326 = distinct !{!326, !327, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!327 = distinct !{!327, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!328 = !{!329}
!329 = distinct !{!329, !330, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!330 = distinct !{!330, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!331 = !{!332}
!332 = distinct !{!332, !333, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!333 = distinct !{!333, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!334 = !{!335}
!335 = distinct !{!335, !336, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!336 = distinct !{!336, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!337 = !{!338}
!338 = distinct !{!338, !339, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!339 = distinct !{!339, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!340 = !{!341}
!341 = distinct !{!341, !342, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!342 = distinct !{!342, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!343 = !{!344}
!344 = distinct !{!344, !345, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!345 = distinct !{!345, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!346 = !{!347}
!347 = distinct !{!347, !348, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!348 = distinct !{!348, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!349 = !{!350}
!350 = distinct !{!350, !351, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!351 = distinct !{!351, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!352 = !{!353}
!353 = distinct !{!353, !354, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!354 = distinct !{!354, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!355 = !{!356}
!356 = distinct !{!356, !357, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!357 = distinct !{!357, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!358 = !{!359}
!359 = distinct !{!359, !360, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!360 = distinct !{!360, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!361 = !{!362}
!362 = distinct !{!362, !363, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!363 = distinct !{!363, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!364 = !{!365}
!365 = distinct !{!365, !366, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!366 = distinct !{!366, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!367 = !{!368}
!368 = distinct !{!368, !369, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!369 = distinct !{!369, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!370 = !{!371}
!371 = distinct !{!371, !372, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!372 = distinct !{!372, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!373 = !{!374, !10, i64 0}
!374 = !{!"_ZTSNSt12_Vector_baseIN6dealii6VectorIeEESaIS2_EE17_Vector_impl_dataE", !10, i64 0, !10, i64 8, !10, i64 16}
!375 = !{!376}
!376 = distinct !{!376, !377, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!377 = distinct !{!377, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!378 = !{!379}
!379 = distinct !{!379, !380, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!380 = distinct !{!380, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!381 = !{!382}
!382 = distinct !{!382, !383, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!383 = distinct !{!383, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!384 = !{!385}
!385 = distinct !{!385, !386, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!386 = distinct !{!386, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!387 = !{!388}
!388 = distinct !{!388, !389, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!389 = distinct !{!389, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!390 = !{!391}
!391 = distinct !{!391, !392, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!392 = distinct !{!392, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!393 = !{!394}
!394 = distinct !{!394, !395, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!395 = distinct !{!395, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!396 = !{!397}
!397 = distinct !{!397, !398, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!398 = distinct !{!398, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!399 = !{!400}
!400 = distinct !{!400, !401, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!401 = distinct !{!401, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!402 = !{!403}
!403 = distinct !{!403, !404, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!404 = distinct !{!404, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!405 = !{!406}
!406 = distinct !{!406, !407, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!407 = distinct !{!407, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!408 = !{!409}
!409 = distinct !{!409, !410, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!410 = distinct !{!410, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!411 = !{!412}
!412 = distinct !{!412, !413, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!413 = distinct !{!413, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!414 = !{!415}
!415 = distinct !{!415, !416, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!416 = distinct !{!416, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!417 = !{!418}
!418 = distinct !{!418, !419, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!419 = distinct !{!419, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!420 = !{!421}
!421 = distinct !{!421, !422, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!422 = distinct !{!422, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!423 = !{!424}
!424 = distinct !{!424, !425, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!425 = distinct !{!425, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!426 = !{!427}
!427 = distinct !{!427, !428, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!428 = distinct !{!428, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!429 = !{!430}
!430 = distinct !{!430, !431, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!431 = distinct !{!431, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!432 = !{!433}
!433 = distinct !{!433, !434, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!434 = distinct !{!434, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!435 = !{!436}
!436 = distinct !{!436, !437, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!437 = distinct !{!437, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!438 = !{!439}
!439 = distinct !{!439, !440, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!440 = distinct !{!440, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!441 = !{!442}
!442 = distinct !{!442, !443, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!443 = distinct !{!443, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!444 = !{!445}
!445 = distinct !{!445, !446, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!446 = distinct !{!446, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!447 = !{!448}
!448 = distinct !{!448, !449, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!449 = distinct !{!449, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!450 = !{!451}
!451 = distinct !{!451, !452, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!452 = distinct !{!452, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!453 = !{!454}
!454 = distinct !{!454, !455, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!455 = distinct !{!455, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!456 = !{!457}
!457 = distinct !{!457, !458, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!458 = distinct !{!458, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!459 = !{!460}
!460 = distinct !{!460, !461, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!461 = distinct !{!461, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!462 = !{!463}
!463 = distinct !{!463, !464, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!464 = distinct !{!464, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!465 = !{!466}
!466 = distinct !{!466, !467, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!467 = distinct !{!467, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!468 = !{!469}
!469 = distinct !{!469, !470, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!470 = distinct !{!470, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!471 = !{!472}
!472 = distinct !{!472, !473, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!473 = distinct !{!473, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!474 = !{!475}
!475 = distinct !{!475, !476, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!476 = distinct !{!476, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!477 = !{!478}
!478 = distinct !{!478, !479, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!479 = distinct !{!479, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!480 = !{!481}
!481 = distinct !{!481, !482, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!482 = distinct !{!482, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!483 = !{!484}
!484 = distinct !{!484, !485, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!485 = distinct !{!485, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!486 = !{!487}
!487 = distinct !{!487, !488, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!488 = distinct !{!488, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!489 = !{!490}
!490 = distinct !{!490, !491, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!491 = distinct !{!491, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!492 = !{!493}
!493 = distinct !{!493, !494, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!494 = distinct !{!494, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!495 = !{!496}
!496 = distinct !{!496, !497, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!497 = distinct !{!497, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!498 = !{!499}
!499 = distinct !{!499, !500, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!500 = distinct !{!500, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!501 = !{!502}
!502 = distinct !{!502, !503, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!503 = distinct !{!503, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!504 = !{!505}
!505 = distinct !{!505, !506, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!506 = distinct !{!506, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!507 = !{!508}
!508 = distinct !{!508, !509, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!509 = distinct !{!509, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!510 = !{!511}
!511 = distinct !{!511, !512, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!512 = distinct !{!512, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!513 = !{!514}
!514 = distinct !{!514, !515, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!515 = distinct !{!515, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!516 = !{!517}
!517 = distinct !{!517, !518, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!518 = distinct !{!518, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!519 = !{!520}
!520 = distinct !{!520, !521, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!521 = distinct !{!521, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!522 = !{!523}
!523 = distinct !{!523, !524, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!524 = distinct !{!524, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!525 = !{!526}
!526 = distinct !{!526, !527, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!527 = distinct !{!527, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!528 = !{!529}
!529 = distinct !{!529, !530, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!530 = distinct !{!530, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!531 = !{!532}
!532 = distinct !{!532, !533, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!533 = distinct !{!533, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!534 = !{!535}
!535 = distinct !{!535, !536, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!536 = distinct !{!536, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!537 = !{!538}
!538 = distinct !{!538, !539, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!539 = distinct !{!539, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!540 = !{!541}
!541 = distinct !{!541, !542, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!542 = distinct !{!542, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!543 = !{!544}
!544 = distinct !{!544, !545, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!545 = distinct !{!545, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!546 = !{!547}
!547 = distinct !{!547, !548, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!548 = distinct !{!548, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!549 = !{!550}
!550 = distinct !{!550, !551, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!551 = distinct !{!551, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!552 = !{!553}
!553 = distinct !{!553, !554, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!554 = distinct !{!554, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!555 = !{!556}
!556 = distinct !{!556, !557, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!557 = distinct !{!557, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!558 = !{!559}
!559 = distinct !{!559, !560, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!560 = distinct !{!560, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!561 = !{!562}
!562 = distinct !{!562, !563, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!563 = distinct !{!563, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!564 = !{!565}
!565 = distinct !{!565, !566, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!566 = distinct !{!566, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!567 = !{!568}
!568 = distinct !{!568, !569, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!569 = distinct !{!569, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!570 = !{!571}
!571 = distinct !{!571, !572, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!572 = distinct !{!572, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!573 = !{!574}
!574 = distinct !{!574, !575, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!575 = distinct !{!575, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!576 = !{!577}
!577 = distinct !{!577, !578, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!578 = distinct !{!578, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!579 = !{!580}
!580 = distinct !{!580, !581, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!581 = distinct !{!581, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!582 = !{!583}
!583 = distinct !{!583, !584, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!584 = distinct !{!584, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!585 = !{!586}
!586 = distinct !{!586, !587, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!587 = distinct !{!587, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!588 = !{!589}
!589 = distinct !{!589, !590, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!590 = distinct !{!590, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!591 = !{!592}
!592 = distinct !{!592, !593, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!593 = distinct !{!593, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!594 = !{!595}
!595 = distinct !{!595, !596, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!596 = distinct !{!596, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!597 = !{!598}
!598 = distinct !{!598, !599, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!599 = distinct !{!599, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!600 = !{!601}
!601 = distinct !{!601, !602, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!602 = distinct !{!602, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!603 = !{!604}
!604 = distinct !{!604, !605, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!605 = distinct !{!605, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!606 = !{!607}
!607 = distinct !{!607, !608, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!608 = distinct !{!608, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!609 = !{!610}
!610 = distinct !{!610, !611, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!611 = distinct !{!611, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!612 = !{!613}
!613 = distinct !{!613, !614, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!614 = distinct !{!614, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!615 = !{!616}
!616 = distinct !{!616, !617, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!617 = distinct !{!617, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!618 = !{!619}
!619 = distinct !{!619, !620, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!620 = distinct !{!620, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!621 = !{!622}
!622 = distinct !{!622, !623, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!623 = distinct !{!623, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!624 = !{!625}
!625 = distinct !{!625, !626, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!626 = distinct !{!626, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!627 = !{!628}
!628 = distinct !{!628, !629, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!629 = distinct !{!629, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!630 = !{!631}
!631 = distinct !{!631, !632, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!632 = distinct !{!632, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!633 = !{!634}
!634 = distinct !{!634, !635, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!635 = distinct !{!635, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!636 = !{!637}
!637 = distinct !{!637, !638, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!638 = distinct !{!638, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!639 = !{!640}
!640 = distinct !{!640, !641, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!641 = distinct !{!641, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!642 = !{!643}
!643 = distinct !{!643, !644, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!644 = distinct !{!644, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!645 = !{!646}
!646 = distinct !{!646, !647, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!647 = distinct !{!647, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!648 = !{!649}
!649 = distinct !{!649, !650, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!650 = distinct !{!650, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!651 = !{!652}
!652 = distinct !{!652, !653, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!653 = distinct !{!653, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!654 = !{!655}
!655 = distinct !{!655, !656, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!656 = distinct !{!656, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!657 = !{!658}
!658 = distinct !{!658, !659, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!659 = distinct !{!659, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!660 = !{!661}
!661 = distinct !{!661, !662, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!662 = distinct !{!662, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!663 = !{!664}
!664 = distinct !{!664, !665, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!665 = distinct !{!665, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!666 = !{!667}
!667 = distinct !{!667, !668, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!668 = distinct !{!668, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!669 = !{!670}
!670 = distinct !{!670, !671, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!671 = distinct !{!671, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!672 = !{!673}
!673 = distinct !{!673, !674, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!674 = distinct !{!674, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!675 = !{!676}
!676 = distinct !{!676, !677, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!677 = distinct !{!677, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!678 = !{!679}
!679 = distinct !{!679, !680, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!680 = distinct !{!680, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!681 = !{!682}
!682 = distinct !{!682, !683, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!683 = distinct !{!683, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!684 = !{!685}
!685 = distinct !{!685, !686, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!686 = distinct !{!686, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!687 = !{!688}
!688 = distinct !{!688, !689, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!689 = distinct !{!689, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!690 = !{!691}
!691 = distinct !{!691, !692, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!692 = distinct !{!692, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!693 = !{!694}
!694 = distinct !{!694, !695, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!695 = distinct !{!695, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!696 = !{!697}
!697 = distinct !{!697, !698, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!698 = distinct !{!698, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!699 = !{!700}
!700 = distinct !{!700, !701, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!701 = distinct !{!701, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!702 = !{!703}
!703 = distinct !{!703, !704, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!704 = distinct !{!704, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!705 = !{!706}
!706 = distinct !{!706, !707, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!707 = distinct !{!707, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!708 = !{!709}
!709 = distinct !{!709, !710, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!710 = distinct !{!710, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!711 = !{!712}
!712 = distinct !{!712, !713, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!713 = distinct !{!713, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!714 = !{!715}
!715 = distinct !{!715, !716, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!716 = distinct !{!716, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!717 = !{!718}
!718 = distinct !{!718, !719, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!719 = distinct !{!719, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!720 = !{!721}
!721 = distinct !{!721, !722, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!722 = distinct !{!722, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!723 = !{!724}
!724 = distinct !{!724, !725, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!725 = distinct !{!725, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!726 = !{!727}
!727 = distinct !{!727, !728, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv: argument 0"}
!728 = distinct !{!728, !"_ZN6dealii15BlockVectorBaseINS_6VectorIdEEE5beginEv"}
!729 = !{!730}
!730 = distinct !{!730, !731, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi: argument 0"}
!731 = distinct !{!731, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIdEEEELb0EEppEi"}
!732 = !{!733}
!733 = distinct !{!733, !734, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!734 = distinct !{!734, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!735 = !{!736}
!736 = distinct !{!736, !737, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!737 = distinct !{!737, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!738 = !{!739}
!739 = distinct !{!739, !740, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!740 = distinct !{!740, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!741 = !{!742}
!742 = distinct !{!742, !743, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!743 = distinct !{!743, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!744 = !{!745}
!745 = distinct !{!745, !746, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!746 = distinct !{!746, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!747 = !{!748}
!748 = distinct !{!748, !749, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!749 = distinct !{!749, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!750 = !{!751}
!751 = distinct !{!751, !752, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!752 = distinct !{!752, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!753 = !{!754}
!754 = distinct !{!754, !755, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!755 = distinct !{!755, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!756 = !{!757}
!757 = distinct !{!757, !758, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!758 = distinct !{!758, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!759 = !{!760}
!760 = distinct !{!760, !761, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!761 = distinct !{!761, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!762 = !{!763}
!763 = distinct !{!763, !764, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!764 = distinct !{!764, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!765 = !{!766}
!766 = distinct !{!766, !767, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!767 = distinct !{!767, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!768 = !{!769}
!769 = distinct !{!769, !770, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!770 = distinct !{!770, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!771 = !{!772}
!772 = distinct !{!772, !773, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!773 = distinct !{!773, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!774 = !{!775}
!775 = distinct !{!775, !776, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!776 = distinct !{!776, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!777 = !{!778}
!778 = distinct !{!778, !779, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!779 = distinct !{!779, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!780 = !{!781}
!781 = distinct !{!781, !782, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!782 = distinct !{!782, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!783 = !{!784}
!784 = distinct !{!784, !785, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!785 = distinct !{!785, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!786 = !{!787}
!787 = distinct !{!787, !788, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!788 = distinct !{!788, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!789 = !{!790}
!790 = distinct !{!790, !791, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!791 = distinct !{!791, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!792 = !{!793}
!793 = distinct !{!793, !794, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!794 = distinct !{!794, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!795 = !{!796}
!796 = distinct !{!796, !797, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!797 = distinct !{!797, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!798 = !{!799}
!799 = distinct !{!799, !800, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv: argument 0"}
!800 = distinct !{!800, !"_ZN6dealii15BlockVectorBaseINS_6VectorIfEEE5beginEv"}
!801 = !{!802}
!802 = distinct !{!802, !803, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi: argument 0"}
!803 = distinct !{!803, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIfEEEELb0EEppEi"}
!804 = !{!805}
!805 = distinct !{!805, !806, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!806 = distinct !{!806, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!807 = !{!808}
!808 = distinct !{!808, !809, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!809 = distinct !{!809, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!810 = !{!811}
!811 = distinct !{!811, !812, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!812 = distinct !{!812, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!813 = !{!814}
!814 = distinct !{!814, !815, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!815 = distinct !{!815, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!816 = !{!817}
!817 = distinct !{!817, !818, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!818 = distinct !{!818, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!819 = !{!820}
!820 = distinct !{!820, !821, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!821 = distinct !{!821, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!822 = !{!823}
!823 = distinct !{!823, !824, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!824 = distinct !{!824, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!825 = !{!826}
!826 = distinct !{!826, !827, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!827 = distinct !{!827, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!828 = !{!829}
!829 = distinct !{!829, !830, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!830 = distinct !{!830, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!831 = !{!832}
!832 = distinct !{!832, !833, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!833 = distinct !{!833, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!834 = !{!835}
!835 = distinct !{!835, !836, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!836 = distinct !{!836, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!837 = !{!838}
!838 = distinct !{!838, !839, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!839 = distinct !{!839, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!840 = !{!841}
!841 = distinct !{!841, !842, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!842 = distinct !{!842, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!843 = !{!844}
!844 = distinct !{!844, !845, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!845 = distinct !{!845, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!846 = !{!847}
!847 = distinct !{!847, !848, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!848 = distinct !{!848, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!849 = !{!850}
!850 = distinct !{!850, !851, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!851 = distinct !{!851, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!852 = !{!853}
!853 = distinct !{!853, !854, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!854 = distinct !{!854, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!855 = !{!856}
!856 = distinct !{!856, !857, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!857 = distinct !{!857, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!858 = !{!859}
!859 = distinct !{!859, !860, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!860 = distinct !{!860, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!861 = !{!862}
!862 = distinct !{!862, !863, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!863 = distinct !{!863, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!864 = !{!865}
!865 = distinct !{!865, !866, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!866 = distinct !{!866, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!867 = !{!868}
!868 = distinct !{!868, !869, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!869 = distinct !{!869, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!870 = !{!871}
!871 = distinct !{!871, !872, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv: argument 0"}
!872 = distinct !{!872, !"_ZN6dealii15BlockVectorBaseINS_6VectorIeEEE5beginEv"}
!873 = !{!874}
!874 = distinct !{!874, !875, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi: argument 0"}
!875 = distinct !{!875, !"_ZN6dealii8internal20BlockVectorIterators8IteratorINS_15BlockVectorBaseINS_6VectorIeEEEELb0EEppEi"}
!876 = !{!10, !10, i64 0}
