; ModuleID = 'source/lac/constraint_matrix.cc'
source_filename = "source/lac/constraint_matrix.cc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

module asm ".globl _ZSt21ios_base_library_initv"

%"class.dealii::Table.105" = type { %"class.dealii::TableBase.base.107", [4 x i8] }
%"class.dealii::TableBase.base.107" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices" }>
%"class.dealii::Subscriptor" = type { ptr, i32, %"class.std::map", ptr }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<const char *, std::pair<const char *const, unsigned int>, std::_Select1st<std::pair<const char *const, unsigned int> >, std::less<const char *> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<const char *, std::pair<const char *const, unsigned int>, std::_Select1st<std::pair<const char *const, unsigned int> >, std::less<const char *> >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.dealii::TableIndices" = type { %"class.dealii::TableIndicesBase" }
%"class.dealii::TableIndicesBase" = type { [2 x i32] }
%"class.dealii::Vector" = type { %"class.dealii::Subscriptor", i32, i32, ptr }
%"class.dealii::ConstraintMatrix" = type <{ %"class.dealii::Subscriptor", %"class.std::vector.19", %"class.std::vector.24", i8, %"class.dealii::Threads::DummyThreadMutex", [6 x i8] }>
%"class.std::vector.19" = type { %"struct.std::_Vector_base.20" }
%"struct.std::_Vector_base.20" = type { %"struct.std::_Vector_base<dealii::ConstraintMatrix::ConstraintLine, std::allocator<dealii::ConstraintMatrix::ConstraintLine> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::ConstraintMatrix::ConstraintLine, std::allocator<dealii::ConstraintMatrix::ConstraintLine> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::ConstraintMatrix::ConstraintLine, std::allocator<dealii::ConstraintMatrix::ConstraintLine> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::ConstraintMatrix::ConstraintLine, std::allocator<dealii::ConstraintMatrix::ConstraintLine> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.24" = type { %"struct.std::_Bvector_base" }
%"struct.std::_Bvector_base" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", ptr }
%"struct.std::_Bit_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base.base" = type <{ ptr, i32 }>
%"class.dealii::Threads::DummyThreadMutex" = type { i8 }
%"struct.dealii::ConstraintMatrix::ConstraintLine" = type { i32, %"class.std::vector.28", double }
%"class.std::vector.28" = type { %"struct.std::_Vector_base.29" }
%"struct.std::_Vector_base.29" = type { %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.std::pair" = type { i32, double }
%"class.dealii::SparsityPattern" = type <{ %"class.dealii::Subscriptor", i32, i32, i32, [4 x i8], i64, i32, [4 x i8], ptr, ptr, i8, i8, [6 x i8] }>
%"class.dealii::SparseMatrix" = type <{ ptr, %"class.dealii::SmartPointer", ptr, i32, [4 x i8], %"class.dealii::Subscriptor" }>
%"class.dealii::SmartPointer" = type { ptr, ptr }
%"class.dealii::SparseMatrix.33" = type <{ ptr, %"class.dealii::SmartPointer", ptr, i32, [4 x i8], %"class.dealii::Subscriptor" }>
%"class.dealii::Vector.35" = type { %"class.dealii::Subscriptor", i32, i32, ptr }
%"class.dealii::BlockVectorBase" = type { %"class.dealii::Subscriptor", %"class.std::vector.41", %"class.dealii::BlockIndices" }
%"class.std::vector.41" = type { %"struct.std::_Vector_base.42" }
%"struct.std::_Vector_base.42" = type { %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::BlockIndices" = type { i32, %"class.std::vector.36" }
%"class.std::vector.36" = type { %"struct.std::_Vector_base.37" }
%"struct.std::_Vector_base.37" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::BlockVectorBase.47" = type { %"class.dealii::Subscriptor", %"class.std::vector.48", %"class.dealii::BlockIndices" }
%"class.std::vector.48" = type { %"struct.std::_Vector_base.49" }
%"struct.std::_Vector_base.49" = type { %"struct.std::_Vector_base<dealii::Vector<float>, std::allocator<dealii::Vector<float> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Vector<float>, std::allocator<dealii::Vector<float> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Vector<float>, std::allocator<dealii::Vector<float> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Vector<float>, std::allocator<dealii::Vector<float> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::BlockMatrixBase" = type { %"class.dealii::Subscriptor", %"class.dealii::BlockIndices", %"class.dealii::BlockIndices", %"class.dealii::Table", %"class.std::vector.36", %"class.std::vector.55", %"class.std::vector.60" }
%"class.dealii::Table" = type { %"class.dealii::TableBase.base", [4 x i8] }
%"class.dealii::TableBase.base" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices" }>
%"class.std::vector.55" = type { %"struct.std::_Vector_base.56" }
%"struct.std::_Vector_base.56" = type { %"struct.std::_Vector_base<std::vector<unsigned int>, std::allocator<std::vector<unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<unsigned int>, std::allocator<std::vector<unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<unsigned int>, std::allocator<std::vector<unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<unsigned int>, std::allocator<std::vector<unsigned int> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.60" = type { %"struct.std::_Vector_base.61" }
%"struct.std::_Vector_base.61" = type { %"struct.std::_Vector_base<std::vector<double>, std::allocator<std::vector<double> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<double>, std::allocator<std::vector<double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<double>, std::allocator<std::vector<double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<double>, std::allocator<std::vector<double> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::SmartPointer.175" = type { ptr, ptr }
%"class.dealii::BlockSparsityPatternBase" = type { %"class.dealii::Subscriptor", i32, i32, %"class.dealii::Table.66", %"class.dealii::BlockIndices", %"class.dealii::BlockIndices", %"class.std::vector.36", %"class.std::vector.55" }
%"class.dealii::Table.66" = type { %"class.dealii::TableBase.base.68", [4 x i8] }
%"class.dealii::TableBase.base.68" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices" }>
%"class.dealii::BlockMatrixBase.73" = type { %"class.dealii::Subscriptor", %"class.dealii::BlockIndices", %"class.dealii::BlockIndices", %"class.dealii::Table.74", %"class.std::vector.36", %"class.std::vector.55", %"class.std::vector.60" }
%"class.dealii::Table.74" = type { %"class.dealii::TableBase.base.76", [4 x i8] }
%"class.dealii::TableBase.base.76" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices" }>
%"class.dealii::SmartPointer.177" = type { ptr, ptr }
%"class.dealii::BlockVector" = type { %"class.dealii::BlockVectorBase" }
%"class.dealii::BlockVector.46" = type { %"class.dealii::BlockVectorBase.47" }
%"class.std::vector.178" = type { %"struct.std::_Vector_base.179" }
%"struct.std::_Vector_base.179" = type { %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.dealii::internals::distributing" = type { i32, i32, ptr }
%"class.dealii::TableBase.79" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices", [4 x i8] }>
%"struct.std::pair.188" = type { i32, ptr }
%"struct.dealii::SparseMatrixEZ<double>::Entry" = type { i32, double }
%"struct.dealii::SparseMatrixEZ<float>::Entry" = type { i32, float }
%"class.dealii::TableBase.106" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices", [4 x i8] }>
%"class.dealii::CompressedSparsityPattern" = type { %"class.dealii::Subscriptor", i32, i32, %"class.std::vector.109" }
%"class.std::vector.109" = type { %"struct.std::_Vector_base.110" }
%"struct.std::_Vector_base.110" = type { %"struct.std::_Vector_base<dealii::CompressedSparsityPattern::Line, std::allocator<dealii::CompressedSparsityPattern::Line> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::CompressedSparsityPattern::Line, std::allocator<dealii::CompressedSparsityPattern::Line> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::CompressedSparsityPattern::Line, std::allocator<dealii::CompressedSparsityPattern::Line> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::CompressedSparsityPattern::Line, std::allocator<dealii::CompressedSparsityPattern::Line> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.dealii::CompressedSparsityPattern::Line" = type <{ %"class.std::vector.36", [8 x i32], i32, [4 x i8] }>
%"class.dealii::CompressedSetSparsityPattern" = type { %"class.dealii::Subscriptor", i32, i32, %"class.std::vector.114" }
%"class.std::vector.114" = type { %"struct.std::_Vector_base.115" }
%"struct.std::_Vector_base.115" = type { %"struct.std::_Vector_base<dealii::CompressedSetSparsityPattern::Line, std::allocator<dealii::CompressedSetSparsityPattern::Line> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::CompressedSetSparsityPattern::Line, std::allocator<dealii::CompressedSetSparsityPattern::Line> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::CompressedSetSparsityPattern::Line, std::allocator<dealii::CompressedSetSparsityPattern::Line> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::CompressedSetSparsityPattern::Line, std::allocator<dealii::CompressedSetSparsityPattern::Line> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.dealii::CompressedSetSparsityPattern::Line" = type { %"class.std::set" }
%"class.std::set" = type { %"class.std::_Rb_tree.149" }
%"class.std::_Rb_tree.149" = type { %"struct.std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int> >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare.153", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare.153" = type { %"struct.std::less.154" }
%"struct.std::less.154" = type { i8 }
%"struct.std::_Rb_tree_node" = type <{ %"struct.std::_Rb_tree_node_base", i32, [4 x i8] }>
%"class.dealii::CompressedSimpleSparsityPattern" = type { %"class.dealii::Subscriptor", i32, i32, %"class.std::vector.119" }
%"class.std::vector.119" = type { %"struct.std::_Vector_base.120" }
%"struct.std::_Vector_base.120" = type { %"struct.std::_Vector_base<dealii::CompressedSimpleSparsityPattern::Line, std::allocator<dealii::CompressedSimpleSparsityPattern::Line> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::CompressedSimpleSparsityPattern::Line, std::allocator<dealii::CompressedSimpleSparsityPattern::Line> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::CompressedSimpleSparsityPattern::Line, std::allocator<dealii::CompressedSimpleSparsityPattern::Line> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::CompressedSimpleSparsityPattern::Line, std::allocator<dealii::CompressedSimpleSparsityPattern::Line> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.dealii::CompressedSimpleSparsityPattern::Line" = type { %"class.std::vector.36" }
%"class.dealii::SmartPointer.167" = type { ptr, ptr }
%"class.dealii::BlockSparsityPatternBase.124" = type { %"class.dealii::Subscriptor", i32, i32, %"class.dealii::Table.125", %"class.dealii::BlockIndices", %"class.dealii::BlockIndices", %"class.std::vector.36", %"class.std::vector.55" }
%"class.dealii::Table.125" = type { %"class.dealii::TableBase.base.127", [4 x i8] }
%"class.dealii::TableBase.base.127" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices" }>
%"class.dealii::SmartPointer.169" = type { ptr, ptr }
%"class.dealii::BlockSparsityPatternBase.129" = type { %"class.dealii::Subscriptor", i32, i32, %"class.dealii::Table.130", %"class.dealii::BlockIndices", %"class.dealii::BlockIndices", %"class.std::vector.36", %"class.std::vector.55" }
%"class.dealii::Table.130" = type { %"class.dealii::TableBase.base.132", [4 x i8] }
%"class.dealii::TableBase.base.132" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices" }>
%"class.dealii::SmartPointer.171" = type { ptr, ptr }
%"class.dealii::BlockSparsityPatternBase.134" = type { %"class.dealii::Subscriptor", i32, i32, %"class.dealii::Table.135", %"class.dealii::BlockIndices", %"class.dealii::BlockIndices", %"class.std::vector.36", %"class.std::vector.55" }
%"class.dealii::Table.135" = type { %"class.dealii::TableBase.base.137", [4 x i8] }
%"class.dealii::TableBase.base.137" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices" }>
%"class.dealii::SmartPointer.173" = type { ptr, ptr }
%"class.__gnu_cxx::__normal_iterator" = type { ptr }
%"class.dealii::StandardExceptions::ExcIO" = type { %"class.dealii::ExceptionBase.base", [4 x i8] }
%"class.dealii::ExceptionBase.base" = type <{ %"class.std::exception", ptr, i32, [4 x i8], ptr, ptr, ptr, ptr, i32 }>
%"class.std::exception" = type { ptr }
%"class.std::ios_base" = type { ptr, i64, i64, i32, i32, i32, ptr, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, ptr, %"class.std::locale" }
%"struct.std::ios_base::_Words" = type { ptr, i64 }
%"class.std::locale" = type { ptr }
%"class.std::basic_ios" = type { %"class.std::ios_base", ptr, i8, i8, ptr, ptr, ptr, ptr }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], ptr, i8, [7 x i8], ptr, ptr, ptr, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ ptr, i32 }>
%"struct.__gnu_cxx::__ops::_Iter_less_iter" = type { i8 }
%"class.dealii::SparseMatrixEZ" = type <{ %"class.dealii::Subscriptor", i32, [4 x i8], %"class.std::vector.83", %"class.std::vector.88", i32, [4 x i8] }>
%"class.std::vector.83" = type { %"struct.std::_Vector_base.84" }
%"struct.std::_Vector_base.84" = type { %"struct.std::_Vector_base<dealii::SparseMatrixEZ<double>::RowInfo, std::allocator<dealii::SparseMatrixEZ<double>::RowInfo> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::SparseMatrixEZ<double>::RowInfo, std::allocator<dealii::SparseMatrixEZ<double>::RowInfo> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::SparseMatrixEZ<double>::RowInfo, std::allocator<dealii::SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::SparseMatrixEZ<double>::RowInfo, std::allocator<dealii::SparseMatrixEZ<double>::RowInfo> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.88" = type { %"struct.std::_Vector_base.89" }
%"struct.std::_Vector_base.89" = type { %"struct.std::_Vector_base<dealii::SparseMatrixEZ<double>::Entry, std::allocator<dealii::SparseMatrixEZ<double>::Entry> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::SparseMatrixEZ<double>::Entry, std::allocator<dealii::SparseMatrixEZ<double>::Entry> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::SparseMatrixEZ<double>::Entry, std::allocator<dealii::SparseMatrixEZ<double>::Entry> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::SparseMatrixEZ<double>::Entry, std::allocator<dealii::SparseMatrixEZ<double>::Entry> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.dealii::SparseMatrixEZ<double>::RowInfo" = type { i32, i16, i16 }
%"class.dealii::SparseMatrixEZ.93" = type <{ %"class.dealii::Subscriptor", i32, [4 x i8], %"class.std::vector.94", %"class.std::vector.99", i32, [4 x i8] }>
%"class.std::vector.94" = type { %"struct.std::_Vector_base.95" }
%"struct.std::_Vector_base.95" = type { %"struct.std::_Vector_base<dealii::SparseMatrixEZ<float>::RowInfo, std::allocator<dealii::SparseMatrixEZ<float>::RowInfo> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::SparseMatrixEZ<float>::RowInfo, std::allocator<dealii::SparseMatrixEZ<float>::RowInfo> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::SparseMatrixEZ<float>::RowInfo, std::allocator<dealii::SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::SparseMatrixEZ<float>::RowInfo, std::allocator<dealii::SparseMatrixEZ<float>::RowInfo> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.99" = type { %"struct.std::_Vector_base.100" }
%"struct.std::_Vector_base.100" = type { %"struct.std::_Vector_base<dealii::SparseMatrixEZ<float>::Entry, std::allocator<dealii::SparseMatrixEZ<float>::Entry> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::SparseMatrixEZ<float>::Entry, std::allocator<dealii::SparseMatrixEZ<float>::Entry> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::SparseMatrixEZ<float>::Entry, std::allocator<dealii::SparseMatrixEZ<float>::Entry> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::SparseMatrixEZ<float>::Entry, std::allocator<dealii::SparseMatrixEZ<float>::Entry> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.dealii::SparseMatrixEZ<float>::RowInfo" = type { i32, i16, i16 }

$_ZNK6dealii16ConstraintMatrix8condenseINS_6VectorIfEEEEvRKT_RS4_ = comdat any

$__clang_call_terminate = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseINS_6VectorIfEEEEvRT_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIfNS_6VectorIfEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIdNS_6VectorIfEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_ = comdat any

$_ZNK6dealii16ConstraintMatrix8set_zeroINS_6VectorIfEEEEvRT_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_6VectorIfEEEEvRKNS2_IdEERKSt6vectorIjSaIjEERT_ = comdat any

$_ZNK6dealii16ConstraintMatrix10distributeINS_6VectorIfEEEEvRKT_RS4_ = comdat any

$_ZNK6dealii16ConstraintMatrix10distributeINS_6VectorIfEEEEvRT_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseINS_6VectorIdEEEEvRKT_RS4_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseINS_6VectorIdEEEEvRT_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIfNS_6VectorIdEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIdNS_6VectorIdEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_ = comdat any

$_ZNK6dealii16ConstraintMatrix8set_zeroINS_6VectorIdEEEEvRT_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_6VectorIdEEEEvRKS3_RKSt6vectorIjSaIjEERT_ = comdat any

$_ZNK6dealii16ConstraintMatrix10distributeINS_6VectorIdEEEEvRKT_RS4_ = comdat any

$_ZNK6dealii16ConstraintMatrix10distributeINS_6VectorIdEEEEvRT_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseINS_11BlockVectorIdEEEEvRKT_RS4_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseINS_11BlockVectorIdEEEEvRT_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIfNS_11BlockVectorIdEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIdNS_11BlockVectorIdEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_ = comdat any

$_ZNK6dealii16ConstraintMatrix8set_zeroINS_11BlockVectorIdEEEEvRT_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_11BlockVectorIdEEEEvRKNS_6VectorIdEERKSt6vectorIjSaIjEERT_ = comdat any

$_ZNK6dealii16ConstraintMatrix10distributeINS_11BlockVectorIdEEEEvRKT_RS4_ = comdat any

$_ZNK6dealii16ConstraintMatrix10distributeINS_11BlockVectorIdEEEEvRT_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseINS_11BlockVectorIfEEEEvRKT_RS4_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseINS_11BlockVectorIfEEEEvRT_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIfNS_11BlockVectorIfEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIdNS_11BlockVectorIfEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_ = comdat any

$_ZNK6dealii16ConstraintMatrix8set_zeroINS_11BlockVectorIfEEEEvRT_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_11BlockVectorIfEEEEvRKNS_6VectorIdEERKSt6vectorIjSaIjEERT_ = comdat any

$_ZNK6dealii16ConstraintMatrix10distributeINS_11BlockVectorIfEEEEvRKT_RS4_ = comdat any

$_ZNK6dealii16ConstraintMatrix10distributeINS_11BlockVectorIfEEEEvRT_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIfNS_6VectorIfEEEEvRNS_12SparseMatrixIT_EERT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIfNS_6VectorIdEEEEvRNS_12SparseMatrixIT_EERT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIdNS_6VectorIdEEEEvRNS_12SparseMatrixIT_EERT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIdNS_6VectorIfEEEEvRNS_12SparseMatrixIT_EERT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIfNS_11BlockVectorIdEEEEvRNS_17BlockSparseMatrixIT_EERT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIfNS_11BlockVectorIfEEEEvRNS_17BlockSparseMatrixIT_EERT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIdNS_11BlockVectorIdEEEEvRNS_17BlockSparseMatrixIT_EERT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIdNS_11BlockVectorIfEEEEvRNS_17BlockSparseMatrixIT_EERT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIfEEvRKNS_12SparseMatrixIT_EERS4_ = comdat any

$_ZN6dealii6VectorIfED2Ev = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIfEEvRNS_12SparseMatrixIT_EE = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIdEEvRKNS_12SparseMatrixIT_EERS4_ = comdat any

$_ZN6dealii6VectorIdED2Ev = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIdEEvRNS_12SparseMatrixIT_EE = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIdEEvRNS_17BlockSparseMatrixIT_EE = comdat any

$_ZNK6dealii16ConstraintMatrix8condenseIfEEvRNS_17BlockSparseMatrixIT_EE = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIdEEEEvRKNS_10FullMatrixIdEERKSt6vectorIjSaIjEERT_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIfEEEEvRKNS_10FullMatrixIdEERKSt6vectorIjSaIjEERT_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIfEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIfEENS_6VectorIfEEEEvRKNS_10FullMatrixIdEERKNS4_IdEERKSt6vectorIjSaIjEERT_RT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIfEENS_6VectorIfEEEEvRKNS_10FullMatrixIdEERKNS4_IdEERKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIdEEEEvRKNS_10FullMatrixIdEERKSt6vectorIjSaIjEERT_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb1EEE = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIdEENS_11BlockVectorIdEEEEvRKNS_10FullMatrixIdEERKNS_6VectorIdEERKSt6vectorIjSaIjEERT_RT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIdEENS_11BlockVectorIdEEEEvRKNS_10FullMatrixIdEERKNS_6VectorIdEERKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb1EEE = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIfEEEEvRKNS_10FullMatrixIdEERKSt6vectorIjSaIjEERT_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIfEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb1EEE = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIfEENS_11BlockVectorIfEEEEvRKNS_10FullMatrixIdEERKNS_6VectorIdEERKSt6vectorIjSaIjEERT_RT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIfEENS_11BlockVectorIfEEEEvRKNS_10FullMatrixIdEERKNS_6VectorIdEERKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb1EEE = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIdEEEEvRKNS_10FullMatrixIdEERKSt6vectorIjSaIjEERT_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIfEEEEvRKNS_10FullMatrixIdEERKSt6vectorIjSaIjEERT_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIfEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIfEENS_6VectorIfEEEEvRKNS_10FullMatrixIdEERKNS4_IdEERKSt6vectorIjSaIjEERT_RT0_ = comdat any

$_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIfEENS_6VectorIfEEEEvRKNS_10FullMatrixIdEERKNS4_IdEERKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_15SparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_15SparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb0EEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_25CompressedSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_25CompressedSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb0EEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_28CompressedSetSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_28CompressedSetSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb0EEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_31CompressedSimpleSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_31CompressedSimpleSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb0EEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_20BlockSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_20BlockSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb1EEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_30BlockCompressedSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_30BlockCompressedSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb1EEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_33BlockCompressedSetSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_33BlockCompressedSetSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb1EEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_36BlockCompressedSimpleSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE = comdat any

$_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_36BlockCompressedSimpleSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb1EEE = comdat any

$_ZN6dealii24BlockSparsityPatternBaseINS_31CompressedSimpleSparsityPatternEE3addEjj = comdat any

$_ZN6dealii9TableBaseILi2EbED2Ev = comdat any

$_ZN6dealii9TableBaseILi2EbED0Ev = comdat any

$_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj = comdat any

$_ZN6dealii18StandardExceptions5ExcIOD0Ev = comdat any

$_ZN6dealii5TableILi2EbED0Ev = comdat any

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_RT0_ = comdat any

$_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_SC_RT0_ = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_less_iterEEvT_T0_SD_T1_T2_ = comdat any

$_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_ = comdat any

$_ZSt4swapIN6dealii16ConstraintMatrix14ConstraintLineEEvRT_S4_ = comdat any

$_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_ = comdat any

$_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops14_Val_less_iterEEvT_T0_ = comdat any

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_T0_ = comdat any

$_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_RT0_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_RT0_ = comdat any

$_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_SB_SB_T0_ = comdat any

$_ZNSt6vectorISt4pairIjdESaIS1_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_St20forward_iterator_tag = comdat any

$_ZNSt6vectorIN6dealii16ConstraintMatrix14ConstraintLineESaIS2_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEvNS7_IPS2_S4_EET_SD_St20forward_iterator_tag = comdat any

$_ZSt16__do_uninit_copyIPN6dealii16ConstraintMatrix14ConstraintLineES3_ET0_T_S5_S4_ = comdat any

$_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_ = comdat any

$_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb = comdat any

$_ZN6dealii6VectorIfED0Ev = comdat any

$_ZN6dealii6VectorIfE6reinitEjb = comdat any

$_ZN6dealii6VectorIfE4swapERS1_ = comdat any

$_ZN6dealii6VectorIdED0Ev = comdat any

$_ZN6dealii6VectorIdE6reinitEjb = comdat any

$_ZN6dealii6VectorIdE4swapERS1_ = comdat any

$_ZN6dealii9internals12distributingD2Ev = comdat any

$_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE = comdat any

$_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EED2Ev = comdat any

$_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_ = comdat any

$_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE6insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_ = comdat any

$_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_ = comdat any

$_ZN6dealii14SparseMatrixEZIdE8allocateEjj = comdat any

$_ZNSt6vectorIN6dealii14SparseMatrixEZIdE5EntryESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_ = comdat any

$_ZN6dealii14SparseMatrixEZIfE8allocateEjj = comdat any

$_ZNSt6vectorIN6dealii14SparseMatrixEZIfE5EntryESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_ = comdat any

$_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj = comdat any

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_ = comdat any

$_ZN6dealii25CompressedSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b = comdat any

$_ZNSt3setIjSt4lessIjESaIjEE6insertIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjS2_EEEEEvT_SB_ = comdat any

$_ZN6dealii31CompressedSimpleSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b = comdat any

$_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag = comdat any

$_ZTVN6dealii9TableBaseILi2EbEE = comdat any

$_ZTSN6dealii9TableBaseILi2EbEE = comdat any

$_ZTIN6dealii9TableBaseILi2EbEE = comdat any

$_ZTVN6dealii18StandardExceptions5ExcIOE = comdat any

$_ZTSN6dealii18StandardExceptions5ExcIOE = comdat any

$_ZTIN6dealii18StandardExceptions5ExcIOE = comdat any

$_ZTVN6dealii5TableILi2EbEE = comdat any

$_ZTSN6dealii5TableILi2EbEE = comdat any

$_ZTIN6dealii5TableILi2EbEE = comdat any

$_ZTVN6dealii6VectorIfEE = comdat any

$_ZTSN6dealii6VectorIfEE = comdat any

$_ZTIN6dealii6VectorIfEE = comdat any

$_ZTVN6dealii6VectorIdEE = comdat any

$_ZTSN6dealii6VectorIdEE = comdat any

$_ZTIN6dealii6VectorIdEE = comdat any

@_ZN6dealii16ConstraintMatrix19default_empty_tableE = dso_local global %"class.dealii::Table.105" zeroinitializer, align 8
@__dso_handle = external hidden global i8
@.str = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c":  \00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c" = 0\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"source/lac/constraint_matrix.cc\00", align 1
@.str.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"ExcIO()\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"digraph constraints {\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"->\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"; // weight: \00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZTVN6dealii9TableBaseILi2EbEE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii9TableBaseILi2EbEE, ptr @_ZN6dealii9TableBaseILi2EbED2Ev, ptr @_ZN6dealii9TableBaseILi2EbED0Ev] }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global ptr
@_ZTSN6dealii9TableBaseILi2EbEE = linkonce_odr dso_local constant [27 x i8] c"N6dealii9TableBaseILi2EbEE\00", comdat, align 1
@_ZTIN6dealii11SubscriptorE = external constant ptr
@_ZTIN6dealii9TableBaseILi2EbEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii9TableBaseILi2EbEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@.str.23 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@_ZTVN6dealii18StandardExceptions5ExcIOE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii18StandardExceptions5ExcIOD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZTSN6dealii18StandardExceptions5ExcIOE = linkonce_odr dso_local constant [36 x i8] c"N6dealii18StandardExceptions5ExcIOE\00", comdat, align 1
@_ZTIN6dealii13ExceptionBaseE = external constant ptr
@_ZTIN6dealii18StandardExceptions5ExcIOE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii18StandardExceptions5ExcIOE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTVN6dealii5TableILi2EbEE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii5TableILi2EbEE, ptr @_ZN6dealii9TableBaseILi2EbED2Ev, ptr @_ZN6dealii5TableILi2EbED0Ev] }, comdat, align 8
@_ZTSN6dealii5TableILi2EbEE = linkonce_odr dso_local constant [23 x i8] c"N6dealii5TableILi2EbEE\00", comdat, align 1
@_ZTIN6dealii5TableILi2EbEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii5TableILi2EbEE, ptr @_ZTIN6dealii9TableBaseILi2EbEE }, comdat, align 8
@.str.25 = private unnamed_addr constant [16 x i8] c"vector::reserve\00", align 1
@.str.26 = private unnamed_addr constant [24 x i8] c"vector::_M_range_insert\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"vector<bool>::_M_fill_insert\00", align 1
@_ZTVN6dealii6VectorIfEE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii6VectorIfEE, ptr @_ZN6dealii6VectorIfED2Ev, ptr @_ZN6dealii6VectorIfED0Ev, ptr @_ZN6dealii6VectorIfE6reinitEjb, ptr @_ZN6dealii6VectorIfE4swapERS1_] }, comdat, align 8
@_ZTSN6dealii6VectorIfEE = linkonce_odr dso_local constant [20 x i8] c"N6dealii6VectorIfEE\00", comdat, align 1
@_ZTIN6dealii6VectorIfEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii6VectorIfEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTVN6dealii6VectorIdEE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii6VectorIdEE, ptr @_ZN6dealii6VectorIdED2Ev, ptr @_ZN6dealii6VectorIdED0Ev, ptr @_ZN6dealii6VectorIdE6reinitEjb, ptr @_ZN6dealii6VectorIdE4swapERS1_] }, comdat, align 8
@_ZTSN6dealii6VectorIdEE = linkonce_odr dso_local constant [20 x i8] c"N6dealii6VectorIdEE\00", comdat, align 1
@_ZTIN6dealii6VectorIdEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii6VectorIdEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@.str.28 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_constraint_matrix.cc, ptr null }]

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseINS_6VectorIfEEEEvRKT_RS4_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !5
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %249

9:                                                ; preds = %3
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  %12 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %11) #21
  %13 = getelementptr inbounds i32, ptr %12, i64 %10
  %14 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !21
  %16 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !21
  %18 = icmp eq ptr %15, %17
  br i1 %18, label %19, label %74

19:                                               ; preds = %9, %64
  %20 = phi i32 [ %68, %64 ], [ 0, %9 ]
  %21 = phi ptr [ %67, %64 ], [ %12, %9 ]
  %22 = phi ptr [ %66, %64 ], [ %12, %9 ]
  %23 = phi ptr [ %65, %64 ], [ %13, %9 ]
  %24 = icmp eq ptr %22, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  store i32 %20, ptr %22, align 4, !tbaa !22
  %26 = getelementptr inbounds i32, ptr %22, i64 1
  br label %64

27:                                               ; preds = %19
  %28 = ptrtoint ptr %22 to i64
  %29 = ptrtoint ptr %21 to i64
  %30 = sub i64 %28, %29
  %31 = icmp eq i64 %30, 9223372036854775804
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %33 unwind label %72

33:                                               ; preds = %32
  unreachable

34:                                               ; preds = %27
  %35 = ashr exact i64 %30, 2
  %36 = tail call i64 @llvm.umax.i64(i64 %35, i64 1)
  %37 = add i64 %36, %35
  %38 = icmp ult i64 %37, %35
  %39 = icmp ugt i64 %37, 2305843009213693951
  %40 = or i1 %38, %39
  %41 = select i1 %40, i64 2305843009213693951, i64 %37
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %34
  %44 = shl nuw nsw i64 %41, 2
  %45 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %44) #21
          to label %46 unwind label %70

46:                                               ; preds = %43, %34
  %47 = phi ptr [ null, %34 ], [ %45, %43 ]
  %48 = getelementptr inbounds i32, ptr %47, i64 %35
  store i32 %20, ptr %48, align 4, !tbaa !22
  %49 = icmp sgt i64 %30, 4
  br i1 %49, label %50, label %51, !prof !23

50:                                               ; preds = %46
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %47, ptr align 4 %21, i64 %30, i1 false)
  br label %56

51:                                               ; preds = %46
  %52 = icmp eq i64 %30, 4
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = load i32, ptr %21, align 4, !tbaa !22
  store i32 %54, ptr %47, align 4, !tbaa !22
  %55 = getelementptr inbounds i32, ptr %48, i64 1
  br label %59

56:                                               ; preds = %51, %50
  %57 = getelementptr inbounds i32, ptr %48, i64 1
  %58 = icmp eq ptr %21, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53, %56
  %60 = phi ptr [ %55, %53 ], [ %57, %56 ]
  tail call void @_ZdlPv(ptr noundef nonnull %21) #23
  br label %61

61:                                               ; preds = %59, %56
  %62 = phi ptr [ %57, %56 ], [ %60, %59 ]
  %63 = getelementptr inbounds i32, ptr %47, i64 %41
  br label %64

64:                                               ; preds = %61, %25
  %65 = phi ptr [ %63, %61 ], [ %23, %25 ]
  %66 = phi ptr [ %62, %61 ], [ %26, %25 ]
  %67 = phi ptr [ %47, %61 ], [ %21, %25 ]
  %68 = add nuw i32 %20, 1
  %69 = icmp eq i32 %68, %5
  br i1 %69, label %249, label %19

70:                                               ; preds = %43
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %317

72:                                               ; preds = %32
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %317

74:                                               ; preds = %9, %241
  %75 = phi i32 [ %247, %241 ], [ 0, %9 ]
  %76 = phi i32 [ %246, %241 ], [ 0, %9 ]
  %77 = phi ptr [ %245, %241 ], [ %12, %9 ]
  %78 = phi ptr [ %244, %241 ], [ %12, %9 ]
  %79 = phi ptr [ %243, %241 ], [ %13, %9 ]
  %80 = phi ptr [ %242, %241 ], [ %15, %9 ]
  %81 = load i32, ptr %80, align 8, !tbaa !24
  %82 = icmp eq i32 %75, %81
  br i1 %82, label %83, label %195

83:                                               ; preds = %74
  %84 = icmp eq ptr %78, %79
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  store i32 -1, ptr %78, align 4, !tbaa !22
  %86 = getelementptr inbounds i32, ptr %78, i64 1
  br label %124

87:                                               ; preds = %83
  %88 = ptrtoint ptr %78 to i64
  %89 = ptrtoint ptr %77 to i64
  %90 = sub i64 %88, %89
  %91 = icmp eq i64 %90, 9223372036854775804
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %93 unwind label %137

93:                                               ; preds = %92
  unreachable

94:                                               ; preds = %87
  %95 = ashr exact i64 %90, 2
  %96 = tail call i64 @llvm.umax.i64(i64 %95, i64 1)
  %97 = add i64 %96, %95
  %98 = icmp ult i64 %97, %95
  %99 = icmp ugt i64 %97, 2305843009213693951
  %100 = or i1 %98, %99
  %101 = select i1 %100, i64 2305843009213693951, i64 %97
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %94
  %104 = shl nuw nsw i64 %101, 2
  %105 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %104) #21
          to label %106 unwind label %135

106:                                              ; preds = %103, %94
  %107 = phi ptr [ null, %94 ], [ %105, %103 ]
  %108 = getelementptr inbounds i32, ptr %107, i64 %95
  store i32 -1, ptr %108, align 4, !tbaa !22
  %109 = icmp sgt i64 %90, 4
  br i1 %109, label %110, label %111, !prof !23

110:                                              ; preds = %106
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %107, ptr align 4 %77, i64 %90, i1 false)
  br label %116

111:                                              ; preds = %106
  %112 = icmp eq i64 %90, 4
  br i1 %112, label %113, label %116

113:                                              ; preds = %111
  %114 = load i32, ptr %77, align 4, !tbaa !22
  store i32 %114, ptr %107, align 4, !tbaa !22
  %115 = getelementptr inbounds i32, ptr %108, i64 1
  br label %119

116:                                              ; preds = %111, %110
  %117 = getelementptr inbounds i32, ptr %108, i64 1
  %118 = icmp eq ptr %77, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %113, %116
  %120 = phi ptr [ %115, %113 ], [ %117, %116 ]
  tail call void @_ZdlPv(ptr noundef nonnull %77) #23
  br label %121

121:                                              ; preds = %119, %116
  %122 = phi ptr [ %117, %116 ], [ %120, %119 ]
  %123 = getelementptr inbounds i32, ptr %107, i64 %101
  br label %124

124:                                              ; preds = %85, %121
  %125 = phi ptr [ %123, %121 ], [ %79, %85 ]
  %126 = phi ptr [ %122, %121 ], [ %86, %85 ]
  %127 = phi ptr [ %107, %121 ], [ %77, %85 ]
  %128 = add i32 %76, 1
  %129 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %80, i64 1
  %130 = load ptr, ptr %16, align 8, !tbaa !21
  %131 = icmp eq ptr %129, %130
  br i1 %131, label %132, label %241

132:                                              ; preds = %124
  %133 = add i32 %75, 1
  %134 = icmp ult i32 %133, %5
  br i1 %134, label %139, label %249

135:                                              ; preds = %103
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %317

137:                                              ; preds = %92
  %138 = landingpad { ptr, i32 }
          cleanup
  br label %317

139:                                              ; preds = %132, %185
  %140 = phi i32 [ %189, %185 ], [ %133, %132 ]
  %141 = phi ptr [ %188, %185 ], [ %127, %132 ]
  %142 = phi ptr [ %187, %185 ], [ %126, %132 ]
  %143 = phi ptr [ %186, %185 ], [ %125, %132 ]
  %144 = sub i32 %140, %128
  %145 = icmp eq ptr %142, %143
  br i1 %145, label %148, label %146

146:                                              ; preds = %139
  store i32 %144, ptr %142, align 4, !tbaa !22
  %147 = getelementptr inbounds i32, ptr %142, i64 1
  br label %185

148:                                              ; preds = %139
  %149 = ptrtoint ptr %142 to i64
  %150 = ptrtoint ptr %141 to i64
  %151 = sub i64 %149, %150
  %152 = icmp eq i64 %151, 9223372036854775804
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %154 unwind label %193

154:                                              ; preds = %153
  unreachable

155:                                              ; preds = %148
  %156 = ashr exact i64 %151, 2
  %157 = tail call i64 @llvm.umax.i64(i64 %156, i64 1)
  %158 = add i64 %157, %156
  %159 = icmp ult i64 %158, %156
  %160 = icmp ugt i64 %158, 2305843009213693951
  %161 = or i1 %159, %160
  %162 = select i1 %161, i64 2305843009213693951, i64 %158
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %155
  %165 = shl nuw nsw i64 %162, 2
  %166 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %165) #21
          to label %167 unwind label %191

167:                                              ; preds = %164, %155
  %168 = phi ptr [ null, %155 ], [ %166, %164 ]
  %169 = getelementptr inbounds i32, ptr %168, i64 %156
  store i32 %144, ptr %169, align 4, !tbaa !22
  %170 = icmp sgt i64 %151, 4
  br i1 %170, label %171, label %172, !prof !23

171:                                              ; preds = %167
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %168, ptr align 4 %141, i64 %151, i1 false)
  br label %177

172:                                              ; preds = %167
  %173 = icmp eq i64 %151, 4
  br i1 %173, label %174, label %177

174:                                              ; preds = %172
  %175 = load i32, ptr %141, align 4, !tbaa !22
  store i32 %175, ptr %168, align 4, !tbaa !22
  %176 = getelementptr inbounds i32, ptr %169, i64 1
  br label %180

177:                                              ; preds = %172, %171
  %178 = getelementptr inbounds i32, ptr %169, i64 1
  %179 = icmp eq ptr %141, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %174, %177
  %181 = phi ptr [ %176, %174 ], [ %178, %177 ]
  tail call void @_ZdlPv(ptr noundef nonnull %141) #23
  br label %182

182:                                              ; preds = %180, %177
  %183 = phi ptr [ %178, %177 ], [ %181, %180 ]
  %184 = getelementptr inbounds i32, ptr %168, i64 %162
  br label %185

185:                                              ; preds = %182, %146
  %186 = phi ptr [ %184, %182 ], [ %143, %146 ]
  %187 = phi ptr [ %183, %182 ], [ %147, %146 ]
  %188 = phi ptr [ %168, %182 ], [ %141, %146 ]
  %189 = add nuw i32 %140, 1
  %190 = icmp eq i32 %189, %5
  br i1 %190, label %249, label %139

191:                                              ; preds = %164
  %192 = landingpad { ptr, i32 }
          cleanup
  br label %317

193:                                              ; preds = %153
  %194 = landingpad { ptr, i32 }
          cleanup
  br label %317

195:                                              ; preds = %74
  %196 = sub i32 %75, %76
  %197 = icmp eq ptr %78, %79
  br i1 %197, label %200, label %198

198:                                              ; preds = %195
  store i32 %196, ptr %78, align 4, !tbaa !22
  %199 = getelementptr inbounds i32, ptr %78, i64 1
  br label %241

200:                                              ; preds = %195
  %201 = ptrtoint ptr %78 to i64
  %202 = ptrtoint ptr %77 to i64
  %203 = sub i64 %201, %202
  %204 = icmp eq i64 %203, 9223372036854775804
  br i1 %204, label %205, label %207

205:                                              ; preds = %200
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %206 unwind label %239

206:                                              ; preds = %205
  unreachable

207:                                              ; preds = %200
  %208 = ashr exact i64 %203, 2
  %209 = tail call i64 @llvm.umax.i64(i64 %208, i64 1)
  %210 = add i64 %209, %208
  %211 = icmp ult i64 %210, %208
  %212 = icmp ugt i64 %210, 2305843009213693951
  %213 = or i1 %211, %212
  %214 = select i1 %213, i64 2305843009213693951, i64 %210
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %207
  %217 = shl nuw nsw i64 %214, 2
  %218 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %217) #21
          to label %219 unwind label %237

219:                                              ; preds = %216, %207
  %220 = phi ptr [ null, %207 ], [ %218, %216 ]
  %221 = getelementptr inbounds i32, ptr %220, i64 %208
  store i32 %196, ptr %221, align 4, !tbaa !22
  %222 = icmp sgt i64 %203, 4
  br i1 %222, label %223, label %224, !prof !23

223:                                              ; preds = %219
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %220, ptr align 4 %77, i64 %203, i1 false)
  br label %229

224:                                              ; preds = %219
  %225 = icmp eq i64 %203, 4
  br i1 %225, label %226, label %229

226:                                              ; preds = %224
  %227 = load i32, ptr %77, align 4, !tbaa !22
  store i32 %227, ptr %220, align 4, !tbaa !22
  %228 = getelementptr inbounds i32, ptr %221, i64 1
  br label %232

229:                                              ; preds = %224, %223
  %230 = getelementptr inbounds i32, ptr %221, i64 1
  %231 = icmp eq ptr %77, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %226, %229
  %233 = phi ptr [ %228, %226 ], [ %230, %229 ]
  tail call void @_ZdlPv(ptr noundef nonnull %77) #23
  br label %234

234:                                              ; preds = %232, %229
  %235 = phi ptr [ %230, %229 ], [ %233, %232 ]
  %236 = getelementptr inbounds i32, ptr %220, i64 %214
  br label %241

237:                                              ; preds = %216
  %238 = landingpad { ptr, i32 }
          cleanup
  br label %317

239:                                              ; preds = %205
  %240 = landingpad { ptr, i32 }
          cleanup
  br label %317

241:                                              ; preds = %198, %234, %124
  %242 = phi ptr [ %129, %124 ], [ %80, %234 ], [ %80, %198 ]
  %243 = phi ptr [ %125, %124 ], [ %236, %234 ], [ %79, %198 ]
  %244 = phi ptr [ %126, %124 ], [ %235, %234 ], [ %199, %198 ]
  %245 = phi ptr [ %127, %124 ], [ %220, %234 ], [ %77, %198 ]
  %246 = phi i32 [ %128, %124 ], [ %76, %234 ], [ %76, %198 ]
  %247 = add nuw i32 %75, 1
  %248 = icmp eq i32 %247, %5
  br i1 %248, label %249, label %74

249:                                              ; preds = %241, %185, %64, %7, %132
  %250 = phi ptr [ %14, %132 ], [ %8, %7 ], [ %14, %64 ], [ %14, %185 ], [ %14, %241 ]
  %251 = phi ptr [ %127, %132 ], [ null, %7 ], [ %67, %64 ], [ %188, %185 ], [ %245, %241 ]
  %252 = load i32, ptr %4, align 8, !tbaa !5
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %261, label %254

254:                                              ; preds = %249
  %255 = load ptr, ptr %250, align 8, !tbaa !21
  %256 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %257 = load ptr, ptr %256, align 8
  %258 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %259 = load ptr, ptr %258, align 8
  %260 = zext i32 %252 to i64
  br label %265

261:                                              ; preds = %249
  %262 = icmp eq ptr %251, null
  br i1 %262, label %264, label %263

263:                                              ; preds = %313, %261
  tail call void @_ZdlPv(ptr noundef nonnull %251) #23
  br label %264

264:                                              ; preds = %261, %263
  ret void

265:                                              ; preds = %254, %313
  %266 = phi i64 [ 0, %254 ], [ %315, %313 ]
  %267 = phi ptr [ %255, %254 ], [ %314, %313 ]
  %268 = getelementptr inbounds i32, ptr %251, i64 %266
  %269 = load i32, ptr %268, align 4, !tbaa !22
  %270 = icmp eq i32 %269, -1
  br i1 %270, label %271, label %283

271:                                              ; preds = %265
  %272 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 0, i32 1
  %273 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %274 = load ptr, ptr %273, align 8, !tbaa !31
  %275 = load ptr, ptr %272, align 8, !tbaa !32
  %276 = ptrtoint ptr %274 to i64
  %277 = ptrtoint ptr %275 to i64
  %278 = sub i64 %276, %277
  %279 = ashr exact i64 %278, 4
  %280 = icmp eq ptr %274, %275
  br i1 %280, label %290, label %281

281:                                              ; preds = %271
  %282 = getelementptr inbounds float, ptr %257, i64 %266
  br label %292

283:                                              ; preds = %265
  %284 = getelementptr inbounds float, ptr %257, i64 %266
  %285 = load float, ptr %284, align 4, !tbaa !33
  %286 = zext i32 %269 to i64
  %287 = getelementptr inbounds float, ptr %259, i64 %286
  %288 = load float, ptr %287, align 4, !tbaa !33
  %289 = fadd float %285, %288
  store float %289, ptr %287, align 4, !tbaa !33
  br label %313

290:                                              ; preds = %292, %271
  %291 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 1
  br label %313

292:                                              ; preds = %281, %292
  %293 = phi i64 [ 0, %281 ], [ %311, %292 ]
  %294 = phi i32 [ 0, %281 ], [ %310, %292 ]
  %295 = load float, ptr %282, align 4, !tbaa !33
  %296 = fpext float %295 to double
  %297 = getelementptr inbounds %"struct.std::pair", ptr %275, i64 %293
  %298 = getelementptr inbounds %"struct.std::pair", ptr %275, i64 %293, i32 1
  %299 = load double, ptr %298, align 8, !tbaa !35
  %300 = load i32, ptr %297, align 8, !tbaa !37
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds i32, ptr %251, i64 %301
  %303 = load i32, ptr %302, align 4, !tbaa !22
  %304 = zext i32 %303 to i64
  %305 = getelementptr inbounds float, ptr %259, i64 %304
  %306 = load float, ptr %305, align 4, !tbaa !33
  %307 = fpext float %306 to double
  %308 = tail call double @llvm.fmuladd.f64(double %296, double %299, double %307)
  %309 = fptrunc double %308 to float
  store float %309, ptr %305, align 4, !tbaa !33
  %310 = add i32 %294, 1
  %311 = zext i32 %310 to i64
  %312 = icmp eq i64 %279, %311
  br i1 %312, label %290, label %292

313:                                              ; preds = %283, %290
  %314 = phi ptr [ %291, %290 ], [ %267, %283 ]
  %315 = add nuw nsw i64 %266, 1
  %316 = icmp eq i64 %315, %260
  br i1 %316, label %263, label %265

317:                                              ; preds = %237, %239, %191, %193, %135, %137, %70, %72
  %318 = phi ptr [ %21, %70 ], [ %21, %72 ], [ %77, %135 ], [ %77, %137 ], [ %141, %191 ], [ %141, %193 ], [ %77, %237 ], [ %77, %239 ]
  %319 = phi { ptr, i32 } [ %71, %70 ], [ %73, %72 ], [ %136, %135 ], [ %138, %137 ], [ %192, %191 ], [ %194, %193 ], [ %238, %237 ], [ %240, %239 ]
  %320 = icmp eq ptr %318, null
  br i1 %320, label %322, label %321

321:                                              ; preds = %317
  tail call void @_ZdlPv(ptr noundef nonnull %318) #23
  br label %322

322:                                              ; preds = %321, %317
  resume { ptr, i32 } %319
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #3

; Function Attrs: noinline noreturn nounwind sspstrong uwtable
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #4 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #24
  tail call void @_ZSt9terminatev() #25
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseINS_6VectorIfEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %48, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8
  br label %11

11:                                               ; preds = %8, %26
  %12 = phi ptr [ %4, %8 ], [ %28, %26 ]
  %13 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !31
  %16 = load ptr, ptr %13, align 8, !tbaa !32
  %17 = ptrtoint ptr %15 to i64
  %18 = ptrtoint ptr %16 to i64
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp eq ptr %15, %16
  %22 = load i32, ptr %12, align 8, !tbaa !24
  %23 = zext i32 %22 to i64
  br i1 %21, label %26, label %24

24:                                               ; preds = %11
  %25 = getelementptr inbounds float, ptr %10, i64 %23
  br label %30

26:                                               ; preds = %30, %11
  %27 = getelementptr inbounds float, ptr %10, i64 %23
  store float 0.000000e+00, ptr %27, align 4, !tbaa !33
  %28 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 1
  %29 = icmp eq ptr %28, %6
  br i1 %29, label %48, label %11

30:                                               ; preds = %24, %30
  %31 = phi i64 [ 0, %24 ], [ %46, %30 ]
  %32 = phi i32 [ 0, %24 ], [ %45, %30 ]
  %33 = load float, ptr %25, align 4, !tbaa !33
  %34 = fpext float %33 to double
  %35 = getelementptr inbounds %"struct.std::pair", ptr %16, i64 %31
  %36 = getelementptr inbounds %"struct.std::pair", ptr %16, i64 %31, i32 1
  %37 = load double, ptr %36, align 8, !tbaa !35
  %38 = load i32, ptr %35, align 8, !tbaa !37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds float, ptr %10, i64 %39
  %41 = load float, ptr %40, align 4, !tbaa !33
  %42 = fpext float %41 to double
  %43 = tail call double @llvm.fmuladd.f64(double %34, double %37, double %42)
  %44 = fptrunc double %43 to float
  store float %44, ptr %40, align 4, !tbaa !33
  %45 = add i32 %32, 1
  %46 = zext i32 %45 to i64
  %47 = icmp eq i64 %20, %46
  br i1 %47, label %26, label %30

48:                                               ; preds = %26, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIfNS_6VectorIfEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !5
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %4, i64 0, i32 1
  %10 = load i32, ptr %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %8, i1 %11, i1 false
  %13 = tail call noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %13, i64 0, i32 2
  %15 = load i32, ptr %14, align 4, !tbaa !38
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %5
  %18 = zext i32 %15 to i64
  %19 = shl nuw nsw i64 %18, 2
  %20 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #21
  %21 = getelementptr inbounds i32, ptr %20, i64 %18
  %22 = load i32, ptr %14, align 4, !tbaa !38
  %23 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !21
  %25 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !21
  %27 = icmp eq ptr %24, %26
  %28 = icmp eq i32 %22, 0
  br i1 %27, label %32, label %31

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %263

31:                                               ; preds = %17
  br i1 %28, label %263, label %88

32:                                               ; preds = %17
  br i1 %28, label %263, label %33

33:                                               ; preds = %32, %78
  %34 = phi i32 [ %82, %78 ], [ 0, %32 ]
  %35 = phi ptr [ %81, %78 ], [ %20, %32 ]
  %36 = phi ptr [ %80, %78 ], [ %20, %32 ]
  %37 = phi ptr [ %79, %78 ], [ %21, %32 ]
  %38 = icmp eq ptr %36, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  store i32 %34, ptr %36, align 4, !tbaa !22
  %40 = getelementptr inbounds i32, ptr %36, i64 1
  br label %78

41:                                               ; preds = %33
  %42 = ptrtoint ptr %36 to i64
  %43 = ptrtoint ptr %35 to i64
  %44 = sub i64 %42, %43
  %45 = icmp eq i64 %44, 9223372036854775804
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %47 unwind label %86

47:                                               ; preds = %46
  unreachable

48:                                               ; preds = %41
  %49 = ashr exact i64 %44, 2
  %50 = tail call i64 @llvm.umax.i64(i64 %49, i64 1)
  %51 = add i64 %50, %49
  %52 = icmp ult i64 %51, %49
  %53 = icmp ugt i64 %51, 2305843009213693951
  %54 = or i1 %52, %53
  %55 = select i1 %54, i64 2305843009213693951, i64 %51
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %48
  %58 = shl nuw nsw i64 %55, 2
  %59 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %58) #21
          to label %60 unwind label %84

60:                                               ; preds = %57, %48
  %61 = phi ptr [ null, %48 ], [ %59, %57 ]
  %62 = getelementptr inbounds i32, ptr %61, i64 %49
  store i32 %34, ptr %62, align 4, !tbaa !22
  %63 = icmp sgt i64 %44, 4
  br i1 %63, label %64, label %65, !prof !23

64:                                               ; preds = %60
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %61, ptr align 4 %35, i64 %44, i1 false)
  br label %70

65:                                               ; preds = %60
  %66 = icmp eq i64 %44, 4
  br i1 %66, label %67, label %70

67:                                               ; preds = %65
  %68 = load i32, ptr %35, align 4, !tbaa !22
  store i32 %68, ptr %61, align 4, !tbaa !22
  %69 = getelementptr inbounds i32, ptr %62, i64 1
  br label %73

70:                                               ; preds = %65, %64
  %71 = getelementptr inbounds i32, ptr %62, i64 1
  %72 = icmp eq ptr %35, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %67, %70
  %74 = phi ptr [ %69, %67 ], [ %71, %70 ]
  tail call void @_ZdlPv(ptr noundef nonnull %35) #23
  br label %75

75:                                               ; preds = %73, %70
  %76 = phi ptr [ %71, %70 ], [ %74, %73 ]
  %77 = getelementptr inbounds i32, ptr %61, i64 %55
  br label %78

78:                                               ; preds = %75, %39
  %79 = phi ptr [ %77, %75 ], [ %37, %39 ]
  %80 = phi ptr [ %76, %75 ], [ %40, %39 ]
  %81 = phi ptr [ %61, %75 ], [ %35, %39 ]
  %82 = add nuw i32 %34, 1
  %83 = icmp eq i32 %82, %22
  br i1 %83, label %263, label %33

84:                                               ; preds = %57
  %85 = landingpad { ptr, i32 }
          cleanup
  br label %660

86:                                               ; preds = %46
  %87 = landingpad { ptr, i32 }
          cleanup
  br label %660

88:                                               ; preds = %31, %255
  %89 = phi i32 [ %261, %255 ], [ 0, %31 ]
  %90 = phi i32 [ %260, %255 ], [ 0, %31 ]
  %91 = phi ptr [ %259, %255 ], [ %20, %31 ]
  %92 = phi ptr [ %258, %255 ], [ %20, %31 ]
  %93 = phi ptr [ %257, %255 ], [ %21, %31 ]
  %94 = phi ptr [ %256, %255 ], [ %24, %31 ]
  %95 = load i32, ptr %94, align 8, !tbaa !24
  %96 = icmp eq i32 %89, %95
  br i1 %96, label %97, label %209

97:                                               ; preds = %88
  %98 = icmp eq ptr %92, %93
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  store i32 -1, ptr %92, align 4, !tbaa !22
  %100 = getelementptr inbounds i32, ptr %92, i64 1
  br label %138

101:                                              ; preds = %97
  %102 = ptrtoint ptr %92 to i64
  %103 = ptrtoint ptr %91 to i64
  %104 = sub i64 %102, %103
  %105 = icmp eq i64 %104, 9223372036854775804
  br i1 %105, label %106, label %108

106:                                              ; preds = %101
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %107 unwind label %151

107:                                              ; preds = %106
  unreachable

108:                                              ; preds = %101
  %109 = ashr exact i64 %104, 2
  %110 = tail call i64 @llvm.umax.i64(i64 %109, i64 1)
  %111 = add i64 %110, %109
  %112 = icmp ult i64 %111, %109
  %113 = icmp ugt i64 %111, 2305843009213693951
  %114 = or i1 %112, %113
  %115 = select i1 %114, i64 2305843009213693951, i64 %111
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %108
  %118 = shl nuw nsw i64 %115, 2
  %119 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %118) #21
          to label %120 unwind label %149

120:                                              ; preds = %117, %108
  %121 = phi ptr [ null, %108 ], [ %119, %117 ]
  %122 = getelementptr inbounds i32, ptr %121, i64 %109
  store i32 -1, ptr %122, align 4, !tbaa !22
  %123 = icmp sgt i64 %104, 4
  br i1 %123, label %124, label %125, !prof !23

124:                                              ; preds = %120
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %121, ptr align 4 %91, i64 %104, i1 false)
  br label %130

125:                                              ; preds = %120
  %126 = icmp eq i64 %104, 4
  br i1 %126, label %127, label %130

127:                                              ; preds = %125
  %128 = load i32, ptr %91, align 4, !tbaa !22
  store i32 %128, ptr %121, align 4, !tbaa !22
  %129 = getelementptr inbounds i32, ptr %122, i64 1
  br label %133

130:                                              ; preds = %125, %124
  %131 = getelementptr inbounds i32, ptr %122, i64 1
  %132 = icmp eq ptr %91, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %127, %130
  %134 = phi ptr [ %129, %127 ], [ %131, %130 ]
  tail call void @_ZdlPv(ptr noundef nonnull %91) #23
  br label %135

135:                                              ; preds = %133, %130
  %136 = phi ptr [ %131, %130 ], [ %134, %133 ]
  %137 = getelementptr inbounds i32, ptr %121, i64 %115
  br label %138

138:                                              ; preds = %99, %135
  %139 = phi ptr [ %137, %135 ], [ %93, %99 ]
  %140 = phi ptr [ %136, %135 ], [ %100, %99 ]
  %141 = phi ptr [ %121, %135 ], [ %91, %99 ]
  %142 = add i32 %90, 1
  %143 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %94, i64 1
  %144 = load ptr, ptr %25, align 8, !tbaa !21
  %145 = icmp eq ptr %143, %144
  br i1 %145, label %146, label %255

146:                                              ; preds = %138
  %147 = add i32 %89, 1
  %148 = icmp ult i32 %147, %22
  br i1 %148, label %153, label %263

149:                                              ; preds = %117
  %150 = landingpad { ptr, i32 }
          cleanup
  br label %660

151:                                              ; preds = %106
  %152 = landingpad { ptr, i32 }
          cleanup
  br label %660

153:                                              ; preds = %146, %199
  %154 = phi i32 [ %203, %199 ], [ %147, %146 ]
  %155 = phi ptr [ %202, %199 ], [ %141, %146 ]
  %156 = phi ptr [ %201, %199 ], [ %140, %146 ]
  %157 = phi ptr [ %200, %199 ], [ %139, %146 ]
  %158 = sub i32 %154, %142
  %159 = icmp eq ptr %156, %157
  br i1 %159, label %162, label %160

160:                                              ; preds = %153
  store i32 %158, ptr %156, align 4, !tbaa !22
  %161 = getelementptr inbounds i32, ptr %156, i64 1
  br label %199

162:                                              ; preds = %153
  %163 = ptrtoint ptr %156 to i64
  %164 = ptrtoint ptr %155 to i64
  %165 = sub i64 %163, %164
  %166 = icmp eq i64 %165, 9223372036854775804
  br i1 %166, label %167, label %169

167:                                              ; preds = %162
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %168 unwind label %207

168:                                              ; preds = %167
  unreachable

169:                                              ; preds = %162
  %170 = ashr exact i64 %165, 2
  %171 = tail call i64 @llvm.umax.i64(i64 %170, i64 1)
  %172 = add i64 %171, %170
  %173 = icmp ult i64 %172, %170
  %174 = icmp ugt i64 %172, 2305843009213693951
  %175 = or i1 %173, %174
  %176 = select i1 %175, i64 2305843009213693951, i64 %172
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %181, label %178

178:                                              ; preds = %169
  %179 = shl nuw nsw i64 %176, 2
  %180 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %179) #21
          to label %181 unwind label %205

181:                                              ; preds = %178, %169
  %182 = phi ptr [ null, %169 ], [ %180, %178 ]
  %183 = getelementptr inbounds i32, ptr %182, i64 %170
  store i32 %158, ptr %183, align 4, !tbaa !22
  %184 = icmp sgt i64 %165, 4
  br i1 %184, label %185, label %186, !prof !23

185:                                              ; preds = %181
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %182, ptr align 4 %155, i64 %165, i1 false)
  br label %191

186:                                              ; preds = %181
  %187 = icmp eq i64 %165, 4
  br i1 %187, label %188, label %191

188:                                              ; preds = %186
  %189 = load i32, ptr %155, align 4, !tbaa !22
  store i32 %189, ptr %182, align 4, !tbaa !22
  %190 = getelementptr inbounds i32, ptr %183, i64 1
  br label %194

191:                                              ; preds = %186, %185
  %192 = getelementptr inbounds i32, ptr %183, i64 1
  %193 = icmp eq ptr %155, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %188, %191
  %195 = phi ptr [ %190, %188 ], [ %192, %191 ]
  tail call void @_ZdlPv(ptr noundef nonnull %155) #23
  br label %196

196:                                              ; preds = %194, %191
  %197 = phi ptr [ %192, %191 ], [ %195, %194 ]
  %198 = getelementptr inbounds i32, ptr %182, i64 %176
  br label %199

199:                                              ; preds = %196, %160
  %200 = phi ptr [ %198, %196 ], [ %157, %160 ]
  %201 = phi ptr [ %197, %196 ], [ %161, %160 ]
  %202 = phi ptr [ %182, %196 ], [ %155, %160 ]
  %203 = add nuw i32 %154, 1
  %204 = icmp eq i32 %203, %22
  br i1 %204, label %263, label %153

205:                                              ; preds = %178
  %206 = landingpad { ptr, i32 }
          cleanup
  br label %660

207:                                              ; preds = %167
  %208 = landingpad { ptr, i32 }
          cleanup
  br label %660

209:                                              ; preds = %88
  %210 = sub i32 %89, %90
  %211 = icmp eq ptr %92, %93
  br i1 %211, label %214, label %212

212:                                              ; preds = %209
  store i32 %210, ptr %92, align 4, !tbaa !22
  %213 = getelementptr inbounds i32, ptr %92, i64 1
  br label %255

214:                                              ; preds = %209
  %215 = ptrtoint ptr %92 to i64
  %216 = ptrtoint ptr %91 to i64
  %217 = sub i64 %215, %216
  %218 = icmp eq i64 %217, 9223372036854775804
  br i1 %218, label %219, label %221

219:                                              ; preds = %214
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %220 unwind label %253

220:                                              ; preds = %219
  unreachable

221:                                              ; preds = %214
  %222 = ashr exact i64 %217, 2
  %223 = tail call i64 @llvm.umax.i64(i64 %222, i64 1)
  %224 = add i64 %223, %222
  %225 = icmp ult i64 %224, %222
  %226 = icmp ugt i64 %224, 2305843009213693951
  %227 = or i1 %225, %226
  %228 = select i1 %227, i64 2305843009213693951, i64 %224
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %233, label %230

230:                                              ; preds = %221
  %231 = shl nuw nsw i64 %228, 2
  %232 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %231) #21
          to label %233 unwind label %251

233:                                              ; preds = %230, %221
  %234 = phi ptr [ null, %221 ], [ %232, %230 ]
  %235 = getelementptr inbounds i32, ptr %234, i64 %222
  store i32 %210, ptr %235, align 4, !tbaa !22
  %236 = icmp sgt i64 %217, 4
  br i1 %236, label %237, label %238, !prof !23

237:                                              ; preds = %233
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %234, ptr align 4 %91, i64 %217, i1 false)
  br label %243

238:                                              ; preds = %233
  %239 = icmp eq i64 %217, 4
  br i1 %239, label %240, label %243

240:                                              ; preds = %238
  %241 = load i32, ptr %91, align 4, !tbaa !22
  store i32 %241, ptr %234, align 4, !tbaa !22
  %242 = getelementptr inbounds i32, ptr %235, i64 1
  br label %246

243:                                              ; preds = %238, %237
  %244 = getelementptr inbounds i32, ptr %235, i64 1
  %245 = icmp eq ptr %91, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %240, %243
  %247 = phi ptr [ %242, %240 ], [ %244, %243 ]
  tail call void @_ZdlPv(ptr noundef nonnull %91) #23
  br label %248

248:                                              ; preds = %246, %243
  %249 = phi ptr [ %244, %243 ], [ %247, %246 ]
  %250 = getelementptr inbounds i32, ptr %234, i64 %228
  br label %255

251:                                              ; preds = %230
  %252 = landingpad { ptr, i32 }
          cleanup
  br label %660

253:                                              ; preds = %219
  %254 = landingpad { ptr, i32 }
          cleanup
  br label %660

255:                                              ; preds = %212, %248, %138
  %256 = phi ptr [ %143, %138 ], [ %94, %248 ], [ %94, %212 ]
  %257 = phi ptr [ %139, %138 ], [ %250, %248 ], [ %93, %212 ]
  %258 = phi ptr [ %140, %138 ], [ %249, %248 ], [ %213, %212 ]
  %259 = phi ptr [ %141, %138 ], [ %234, %248 ], [ %91, %212 ]
  %260 = phi i32 [ %142, %138 ], [ %90, %248 ], [ %90, %212 ]
  %261 = add nuw i32 %89, 1
  %262 = icmp eq i32 %261, %22
  br i1 %262, label %263, label %88

263:                                              ; preds = %255, %199, %78, %29, %31, %146, %32
  %264 = phi ptr [ %23, %32 ], [ %23, %146 ], [ %23, %31 ], [ %30, %29 ], [ %23, %78 ], [ %23, %199 ], [ %23, %255 ]
  %265 = phi ptr [ %20, %32 ], [ %141, %146 ], [ %20, %31 ], [ null, %29 ], [ %81, %78 ], [ %202, %199 ], [ %259, %255 ]
  %266 = load i32, ptr %14, align 4, !tbaa !38
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %277, label %268

268:                                              ; preds = %263
  %269 = load ptr, ptr %264, align 8, !tbaa !21
  %270 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %13, i64 0, i32 8
  %271 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %13, i64 0, i32 9
  %272 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %273 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 1
  %274 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 2
  %275 = getelementptr inbounds %"class.dealii::Vector", ptr %4, i64 0, i32 3
  %276 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  br label %281

277:                                              ; preds = %655, %263
  %278 = icmp eq ptr %265, null
  br i1 %278, label %280, label %279

279:                                              ; preds = %277
  tail call void @_ZdlPv(ptr noundef nonnull %265) #23
  br label %280

280:                                              ; preds = %277, %279
  ret void

281:                                              ; preds = %268, %655
  %282 = phi i64 [ 0, %268 ], [ %290, %655 ]
  %283 = phi ptr [ %269, %268 ], [ %656, %655 ]
  %284 = getelementptr inbounds i32, ptr %265, i64 %282
  %285 = load i32, ptr %284, align 4, !tbaa !22
  %286 = icmp eq i32 %285, -1
  %287 = load ptr, ptr %270, align 8, !tbaa !41
  %288 = getelementptr inbounds i64, ptr %287, i64 %282
  %289 = load i64, ptr %288, align 8, !tbaa !42
  %290 = add nuw nsw i64 %282, 1
  %291 = and i64 %289, 4294967295
  %292 = getelementptr inbounds i64, ptr %287, i64 %290
  %293 = load i64, ptr %292, align 8, !tbaa !42
  %294 = icmp ugt i64 %293, %291
  br i1 %286, label %417, label %295

295:                                              ; preds = %281
  br i1 %294, label %296, label %298

296:                                              ; preds = %295
  %297 = trunc i64 %289 to i32
  br label %301

298:                                              ; preds = %400, %295
  br i1 %12, label %655, label %407

299:                                              ; preds = %316
  %300 = landingpad { ptr, i32 }
          cleanup
  br label %664

301:                                              ; preds = %296, %400
  %302 = phi i64 [ %402, %400 ], [ %291, %296 ]
  %303 = phi i32 [ %401, %400 ], [ %297, %296 ]
  %304 = load ptr, ptr %271, align 8, !tbaa !43
  %305 = getelementptr inbounds i32, ptr %304, i64 %302
  %306 = load i32, ptr %305, align 4, !tbaa !22
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds i32, ptr %265, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !22
  %310 = icmp eq i32 %309, -1
  br i1 %310, label %328, label %311

311:                                              ; preds = %301
  %312 = load ptr, ptr %272, align 8, !tbaa !44
  %313 = getelementptr inbounds float, ptr %312, i64 %302
  %314 = load float, ptr %313, align 4, !tbaa !33
  %315 = fcmp oeq float %314, 0.000000e+00
  br i1 %315, label %400, label %316

316:                                              ; preds = %311
  %317 = load i32, ptr %284, align 4, !tbaa !22
  %318 = load ptr, ptr %273, align 8, !tbaa !47
  %319 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %318, i32 noundef %317, i32 noundef %309)
          to label %320 unwind label %299

320:                                              ; preds = %316
  %321 = icmp eq i32 %319, -1
  br i1 %321, label %400, label %322

322:                                              ; preds = %320
  %323 = load ptr, ptr %274, align 8, !tbaa !44
  %324 = zext i32 %319 to i64
  %325 = getelementptr inbounds float, ptr %323, i64 %324
  %326 = load float, ptr %325, align 4, !tbaa !33
  %327 = fadd float %314, %326
  store float %327, ptr %325, align 4, !tbaa !33
  br label %400

328:                                              ; preds = %301
  %329 = load ptr, ptr %264, align 8, !tbaa !21
  br label %330

330:                                              ; preds = %330, %328
  %331 = phi ptr [ %329, %328 ], [ %334, %330 ]
  %332 = load i32, ptr %331, align 8, !tbaa !24
  %333 = icmp eq i32 %332, %306
  %334 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 1
  br i1 %333, label %335, label %330

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 0, i32 1
  %337 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %338 = load ptr, ptr %337, align 8, !tbaa !31
  %339 = load ptr, ptr %336, align 8, !tbaa !32
  %340 = icmp eq ptr %338, %339
  br i1 %340, label %341, label %344

341:                                              ; preds = %374, %335
  br i1 %12, label %400, label %384

342:                                              ; preds = %357
  %343 = landingpad { ptr, i32 }
          cleanup
  br label %664

344:                                              ; preds = %335, %374
  %345 = phi ptr [ %378, %374 ], [ %339, %335 ]
  %346 = phi i64 [ %376, %374 ], [ 0, %335 ]
  %347 = phi i32 [ %375, %374 ], [ 0, %335 ]
  %348 = load ptr, ptr %272, align 8, !tbaa !44
  %349 = getelementptr inbounds float, ptr %348, i64 %302
  %350 = load float, ptr %349, align 4, !tbaa !33
  %351 = fpext float %350 to double
  %352 = getelementptr inbounds %"struct.std::pair", ptr %345, i64 %346, i32 1
  %353 = load double, ptr %352, align 8, !tbaa !35
  %354 = fmul double %353, %351
  %355 = fptrunc double %354 to float
  %356 = fcmp oeq float %355, 0.000000e+00
  br i1 %356, label %374, label %357

357:                                              ; preds = %344
  %358 = getelementptr inbounds %"struct.std::pair", ptr %345, i64 %346
  %359 = load i32, ptr %358, align 8, !tbaa !37
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds i32, ptr %265, i64 %360
  %362 = load i32, ptr %361, align 4, !tbaa !22
  %363 = load i32, ptr %284, align 4, !tbaa !22
  %364 = load ptr, ptr %273, align 8, !tbaa !47
  %365 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %364, i32 noundef %363, i32 noundef %362)
          to label %366 unwind label %342

366:                                              ; preds = %357
  %367 = icmp eq i32 %365, -1
  br i1 %367, label %374, label %368

368:                                              ; preds = %366
  %369 = load ptr, ptr %274, align 8, !tbaa !44
  %370 = zext i32 %365 to i64
  %371 = getelementptr inbounds float, ptr %369, i64 %370
  %372 = load float, ptr %371, align 4, !tbaa !33
  %373 = fadd float %372, %355
  store float %373, ptr %371, align 4, !tbaa !33
  br label %374

374:                                              ; preds = %368, %366, %344
  %375 = add i32 %347, 1
  %376 = zext i32 %375 to i64
  %377 = load ptr, ptr %337, align 8, !tbaa !31
  %378 = load ptr, ptr %336, align 8, !tbaa !32
  %379 = ptrtoint ptr %377 to i64
  %380 = ptrtoint ptr %378 to i64
  %381 = sub i64 %379, %380
  %382 = ashr exact i64 %381, 4
  %383 = icmp eq i64 %382, %376
  br i1 %383, label %341, label %344

384:                                              ; preds = %341
  %385 = load ptr, ptr %272, align 8, !tbaa !44
  %386 = getelementptr inbounds float, ptr %385, i64 %302
  %387 = load float, ptr %386, align 4, !tbaa !33
  %388 = fpext float %387 to double
  %389 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 0, i32 2
  %390 = load double, ptr %389, align 8, !tbaa !48
  %391 = load i32, ptr %284, align 4, !tbaa !22
  %392 = load ptr, ptr %275, align 8, !tbaa !49
  %393 = zext i32 %391 to i64
  %394 = getelementptr inbounds float, ptr %392, i64 %393
  %395 = load float, ptr %394, align 4, !tbaa !33
  %396 = fpext float %395 to double
  %397 = fneg double %388
  %398 = tail call double @llvm.fmuladd.f64(double %397, double %390, double %396)
  %399 = fptrunc double %398 to float
  store float %399, ptr %394, align 4, !tbaa !33
  br label %400

400:                                              ; preds = %341, %384, %322, %320, %311
  %401 = add i32 %303, 1
  %402 = zext i32 %401 to i64
  %403 = load ptr, ptr %270, align 8, !tbaa !41
  %404 = getelementptr inbounds i64, ptr %403, i64 %290
  %405 = load i64, ptr %404, align 8, !tbaa !42
  %406 = icmp ugt i64 %405, %402
  br i1 %406, label %301, label %298

407:                                              ; preds = %298
  %408 = load ptr, ptr %276, align 8, !tbaa !49
  %409 = getelementptr inbounds float, ptr %408, i64 %282
  %410 = load float, ptr %409, align 4, !tbaa !33
  %411 = load i32, ptr %284, align 4, !tbaa !22
  %412 = load ptr, ptr %275, align 8, !tbaa !49
  %413 = zext i32 %411 to i64
  %414 = getelementptr inbounds float, ptr %412, i64 %413
  %415 = load float, ptr %414, align 4, !tbaa !33
  %416 = fadd float %410, %415
  store float %416, ptr %414, align 4, !tbaa !33
  br label %655

417:                                              ; preds = %281
  br i1 %294, label %418, label %422

418:                                              ; preds = %417
  %419 = trunc i64 %289 to i32
  %420 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1
  %421 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %437

422:                                              ; preds = %625, %417
  br i1 %12, label %653, label %423

423:                                              ; preds = %422
  %424 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1
  %425 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %426 = load ptr, ptr %425, align 8, !tbaa !31
  %427 = load ptr, ptr %424, align 8, !tbaa !32
  %428 = ptrtoint ptr %426 to i64
  %429 = ptrtoint ptr %427 to i64
  %430 = sub i64 %428, %429
  %431 = ashr exact i64 %430, 4
  %432 = icmp eq ptr %426, %427
  br i1 %432, label %653, label %433

433:                                              ; preds = %423
  %434 = load ptr, ptr %276, align 8, !tbaa !49
  %435 = getelementptr inbounds float, ptr %434, i64 %282
  %436 = load ptr, ptr %275, align 8, !tbaa !49
  br label %632

437:                                              ; preds = %418, %625
  %438 = phi i64 [ %291, %418 ], [ %627, %625 ]
  %439 = phi i32 [ %419, %418 ], [ %626, %625 ]
  %440 = load ptr, ptr %271, align 8, !tbaa !43
  %441 = getelementptr inbounds i32, ptr %440, i64 %438
  %442 = load i32, ptr %441, align 4, !tbaa !22
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds i32, ptr %265, i64 %443
  %445 = load i32, ptr %444, align 4, !tbaa !22
  %446 = icmp eq i32 %445, -1
  br i1 %446, label %498, label %447

447:                                              ; preds = %437
  %448 = load ptr, ptr %421, align 8, !tbaa !31
  %449 = load ptr, ptr %420, align 8, !tbaa !32
  %450 = icmp eq ptr %448, %449
  br i1 %450, label %625, label %453

451:                                              ; preds = %466
  %452 = landingpad { ptr, i32 }
          cleanup
  br label %664

453:                                              ; preds = %447, %488
  %454 = phi ptr [ %492, %488 ], [ %449, %447 ]
  %455 = phi i64 [ %490, %488 ], [ 0, %447 ]
  %456 = phi i32 [ %489, %488 ], [ 0, %447 ]
  %457 = load ptr, ptr %272, align 8, !tbaa !44
  %458 = getelementptr inbounds float, ptr %457, i64 %438
  %459 = load float, ptr %458, align 4, !tbaa !33
  %460 = fpext float %459 to double
  %461 = getelementptr inbounds %"struct.std::pair", ptr %454, i64 %455, i32 1
  %462 = load double, ptr %461, align 8, !tbaa !35
  %463 = fmul double %462, %460
  %464 = fptrunc double %463 to float
  %465 = fcmp oeq float %464, 0.000000e+00
  br i1 %465, label %488, label %466

466:                                              ; preds = %453
  %467 = getelementptr inbounds %"struct.std::pair", ptr %454, i64 %455
  %468 = load ptr, ptr %271, align 8, !tbaa !43
  %469 = getelementptr inbounds i32, ptr %468, i64 %438
  %470 = load i32, ptr %469, align 4, !tbaa !22
  %471 = zext i32 %470 to i64
  %472 = getelementptr inbounds i32, ptr %265, i64 %471
  %473 = load i32, ptr %472, align 4, !tbaa !22
  %474 = load i32, ptr %467, align 8, !tbaa !37
  %475 = zext i32 %474 to i64
  %476 = getelementptr inbounds i32, ptr %265, i64 %475
  %477 = load i32, ptr %476, align 4, !tbaa !22
  %478 = load ptr, ptr %273, align 8, !tbaa !47
  %479 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %478, i32 noundef %477, i32 noundef %473)
          to label %480 unwind label %451

480:                                              ; preds = %466
  %481 = icmp eq i32 %479, -1
  br i1 %481, label %488, label %482

482:                                              ; preds = %480
  %483 = load ptr, ptr %274, align 8, !tbaa !44
  %484 = zext i32 %479 to i64
  %485 = getelementptr inbounds float, ptr %483, i64 %484
  %486 = load float, ptr %485, align 4, !tbaa !33
  %487 = fadd float %486, %464
  store float %487, ptr %485, align 4, !tbaa !33
  br label %488

488:                                              ; preds = %482, %480, %453
  %489 = add i32 %456, 1
  %490 = zext i32 %489 to i64
  %491 = load ptr, ptr %421, align 8, !tbaa !31
  %492 = load ptr, ptr %420, align 8, !tbaa !32
  %493 = ptrtoint ptr %491 to i64
  %494 = ptrtoint ptr %492 to i64
  %495 = sub i64 %493, %494
  %496 = ashr exact i64 %495, 4
  %497 = icmp eq i64 %496, %490
  br i1 %497, label %625, label %453

498:                                              ; preds = %437
  %499 = load ptr, ptr %264, align 8, !tbaa !21
  br label %500

500:                                              ; preds = %500, %498
  %501 = phi ptr [ %499, %498 ], [ %504, %500 ]
  %502 = load i32, ptr %501, align 8, !tbaa !24
  %503 = icmp eq i32 %502, %442
  %504 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %501, i64 1
  br i1 %503, label %505, label %500

505:                                              ; preds = %500
  %506 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %501, i64 0, i32 1
  %507 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %501, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %508 = load ptr, ptr %507, align 8, !tbaa !31
  %509 = load ptr, ptr %506, align 8, !tbaa !32
  %510 = icmp eq ptr %508, %509
  br i1 %510, label %522, label %511

511:                                              ; preds = %505
  %512 = load ptr, ptr %421, align 8, !tbaa !31
  %513 = load ptr, ptr %420, align 8, !tbaa !32
  br label %514

514:                                              ; preds = %511, %540
  %515 = phi ptr [ %541, %540 ], [ %509, %511 ]
  %516 = phi ptr [ %542, %540 ], [ %508, %511 ]
  %517 = phi ptr [ %543, %540 ], [ %513, %511 ]
  %518 = phi ptr [ %544, %540 ], [ %512, %511 ]
  %519 = phi i64 [ %546, %540 ], [ 0, %511 ]
  %520 = phi i32 [ %545, %540 ], [ 0, %511 ]
  %521 = icmp eq ptr %518, %517
  br i1 %521, label %540, label %554

522:                                              ; preds = %540, %505
  br i1 %12, label %625, label %523

523:                                              ; preds = %522
  %524 = load ptr, ptr %421, align 8, !tbaa !31
  %525 = load ptr, ptr %420, align 8, !tbaa !32
  %526 = ptrtoint ptr %524 to i64
  %527 = ptrtoint ptr %525 to i64
  %528 = sub i64 %526, %527
  %529 = ashr exact i64 %528, 4
  %530 = icmp eq ptr %524, %525
  br i1 %530, label %625, label %531

531:                                              ; preds = %523
  %532 = load ptr, ptr %272, align 8, !tbaa !44
  %533 = getelementptr inbounds float, ptr %532, i64 %438
  %534 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %501, i64 0, i32 2
  %535 = load double, ptr %534, align 8, !tbaa !48
  %536 = load ptr, ptr %275, align 8, !tbaa !49
  br label %602

537:                                              ; preds = %592
  %538 = load ptr, ptr %507, align 8, !tbaa !31
  %539 = load ptr, ptr %506, align 8, !tbaa !32
  br label %540

540:                                              ; preds = %537, %514
  %541 = phi ptr [ %539, %537 ], [ %515, %514 ]
  %542 = phi ptr [ %538, %537 ], [ %516, %514 ]
  %543 = phi ptr [ %596, %537 ], [ %517, %514 ]
  %544 = phi ptr [ %595, %537 ], [ %517, %514 ]
  %545 = add i32 %520, 1
  %546 = zext i32 %545 to i64
  %547 = ptrtoint ptr %542 to i64
  %548 = ptrtoint ptr %541 to i64
  %549 = sub i64 %547, %548
  %550 = ashr exact i64 %549, 4
  %551 = icmp eq i64 %550, %546
  br i1 %551, label %522, label %514

552:                                              ; preds = %571
  %553 = landingpad { ptr, i32 }
          cleanup
  br label %664

554:                                              ; preds = %514, %592
  %555 = phi ptr [ %596, %592 ], [ %517, %514 ]
  %556 = phi i64 [ %594, %592 ], [ 0, %514 ]
  %557 = phi i32 [ %593, %592 ], [ 0, %514 ]
  %558 = load ptr, ptr %506, align 8, !tbaa !32
  %559 = load ptr, ptr %272, align 8, !tbaa !44
  %560 = getelementptr inbounds float, ptr %559, i64 %438
  %561 = load float, ptr %560, align 4, !tbaa !33
  %562 = fpext float %561 to double
  %563 = getelementptr inbounds %"struct.std::pair", ptr %555, i64 %556, i32 1
  %564 = load double, ptr %563, align 8, !tbaa !35
  %565 = fmul double %564, %562
  %566 = getelementptr inbounds %"struct.std::pair", ptr %558, i64 %519, i32 1
  %567 = load double, ptr %566, align 8, !tbaa !35
  %568 = fmul double %565, %567
  %569 = fptrunc double %568 to float
  %570 = fcmp oeq float %569, 0.000000e+00
  br i1 %570, label %592, label %571

571:                                              ; preds = %554
  %572 = getelementptr inbounds %"struct.std::pair", ptr %558, i64 %519
  %573 = getelementptr inbounds %"struct.std::pair", ptr %555, i64 %556
  %574 = load i32, ptr %572, align 8, !tbaa !37
  %575 = zext i32 %574 to i64
  %576 = getelementptr inbounds i32, ptr %265, i64 %575
  %577 = load i32, ptr %576, align 4, !tbaa !22
  %578 = load i32, ptr %573, align 8, !tbaa !37
  %579 = zext i32 %578 to i64
  %580 = getelementptr inbounds i32, ptr %265, i64 %579
  %581 = load i32, ptr %580, align 4, !tbaa !22
  %582 = load ptr, ptr %273, align 8, !tbaa !47
  %583 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %582, i32 noundef %581, i32 noundef %577)
          to label %584 unwind label %552

584:                                              ; preds = %571
  %585 = icmp eq i32 %583, -1
  br i1 %585, label %592, label %586

586:                                              ; preds = %584
  %587 = load ptr, ptr %274, align 8, !tbaa !44
  %588 = zext i32 %583 to i64
  %589 = getelementptr inbounds float, ptr %587, i64 %588
  %590 = load float, ptr %589, align 4, !tbaa !33
  %591 = fadd float %590, %569
  store float %591, ptr %589, align 4, !tbaa !33
  br label %592

592:                                              ; preds = %586, %584, %554
  %593 = add i32 %557, 1
  %594 = zext i32 %593 to i64
  %595 = load ptr, ptr %421, align 8, !tbaa !31
  %596 = load ptr, ptr %420, align 8, !tbaa !32
  %597 = ptrtoint ptr %595 to i64
  %598 = ptrtoint ptr %596 to i64
  %599 = sub i64 %597, %598
  %600 = ashr exact i64 %599, 4
  %601 = icmp eq i64 %600, %594
  br i1 %601, label %537, label %554

602:                                              ; preds = %531, %602
  %603 = phi i64 [ 0, %531 ], [ %623, %602 ]
  %604 = phi i32 [ 0, %531 ], [ %622, %602 ]
  %605 = load float, ptr %533, align 4, !tbaa !33
  %606 = fpext float %605 to double
  %607 = getelementptr inbounds %"struct.std::pair", ptr %525, i64 %603
  %608 = getelementptr inbounds %"struct.std::pair", ptr %525, i64 %603, i32 1
  %609 = load double, ptr %608, align 8, !tbaa !35
  %610 = load i32, ptr %607, align 8, !tbaa !37
  %611 = zext i32 %610 to i64
  %612 = getelementptr inbounds i32, ptr %265, i64 %611
  %613 = load i32, ptr %612, align 4, !tbaa !22
  %614 = zext i32 %613 to i64
  %615 = getelementptr inbounds float, ptr %536, i64 %614
  %616 = load float, ptr %615, align 4, !tbaa !33
  %617 = fpext float %616 to double
  %618 = fneg double %609
  %619 = fmul double %618, %606
  %620 = tail call double @llvm.fmuladd.f64(double %619, double %535, double %617)
  %621 = fptrunc double %620 to float
  store float %621, ptr %615, align 4, !tbaa !33
  %622 = add i32 %604, 1
  %623 = zext i32 %622 to i64
  %624 = icmp eq i64 %529, %623
  br i1 %624, label %625, label %602

625:                                              ; preds = %488, %602, %447, %523, %522
  %626 = add i32 %439, 1
  %627 = zext i32 %626 to i64
  %628 = load ptr, ptr %270, align 8, !tbaa !41
  %629 = getelementptr inbounds i64, ptr %628, i64 %290
  %630 = load i64, ptr %629, align 8, !tbaa !42
  %631 = icmp ugt i64 %630, %627
  br i1 %631, label %437, label %422

632:                                              ; preds = %433, %632
  %633 = phi i64 [ 0, %433 ], [ %651, %632 ]
  %634 = phi i32 [ 0, %433 ], [ %650, %632 ]
  %635 = load float, ptr %435, align 4, !tbaa !33
  %636 = fpext float %635 to double
  %637 = getelementptr inbounds %"struct.std::pair", ptr %427, i64 %633
  %638 = getelementptr inbounds %"struct.std::pair", ptr %427, i64 %633, i32 1
  %639 = load double, ptr %638, align 8, !tbaa !35
  %640 = load i32, ptr %637, align 8, !tbaa !37
  %641 = zext i32 %640 to i64
  %642 = getelementptr inbounds i32, ptr %265, i64 %641
  %643 = load i32, ptr %642, align 4, !tbaa !22
  %644 = zext i32 %643 to i64
  %645 = getelementptr inbounds float, ptr %436, i64 %644
  %646 = load float, ptr %645, align 4, !tbaa !33
  %647 = fpext float %646 to double
  %648 = tail call double @llvm.fmuladd.f64(double %636, double %639, double %647)
  %649 = fptrunc double %648 to float
  store float %649, ptr %645, align 4, !tbaa !33
  %650 = add i32 %634, 1
  %651 = zext i32 %650 to i64
  %652 = icmp eq i64 %431, %651
  br i1 %652, label %653, label %632

653:                                              ; preds = %632, %423, %422
  %654 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 1
  br label %655

655:                                              ; preds = %653, %407, %298
  %656 = phi ptr [ %654, %653 ], [ %283, %407 ], [ %283, %298 ]
  %657 = load i32, ptr %14, align 4, !tbaa !38
  %658 = zext i32 %657 to i64
  %659 = icmp ult i64 %290, %658
  br i1 %659, label %281, label %277

660:                                              ; preds = %251, %253, %205, %207, %149, %151, %84, %86
  %661 = phi ptr [ %35, %84 ], [ %35, %86 ], [ %91, %149 ], [ %91, %151 ], [ %155, %205 ], [ %155, %207 ], [ %91, %251 ], [ %91, %253 ]
  %662 = phi { ptr, i32 } [ %85, %84 ], [ %87, %86 ], [ %150, %149 ], [ %152, %151 ], [ %206, %205 ], [ %208, %207 ], [ %252, %251 ], [ %254, %253 ]
  %663 = icmp eq ptr %661, null
  br i1 %663, label %667, label %664

664:                                              ; preds = %552, %342, %299, %451, %660
  %665 = phi { ptr, i32 } [ %662, %660 ], [ %553, %552 ], [ %343, %342 ], [ %452, %451 ], [ %300, %299 ]
  %666 = phi ptr [ %661, %660 ], [ %265, %552 ], [ %265, %342 ], [ %265, %451 ], [ %265, %299 ]
  tail call void @_ZdlPv(ptr noundef nonnull %666) #23
  br label %667

667:                                              ; preds = %664, %660
  %668 = phi { ptr, i32 } [ %662, %660 ], [ %665, %664 ]
  resume { ptr, i32 } %668
}

declare noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36)) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIdNS_6VectorIfEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !5
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %4, i64 0, i32 1
  %10 = load i32, ptr %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %8, i1 %11, i1 false
  %13 = tail call noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %13, i64 0, i32 2
  %15 = load i32, ptr %14, align 4, !tbaa !38
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %5
  %18 = zext i32 %15 to i64
  %19 = shl nuw nsw i64 %18, 2
  %20 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #21
  %21 = getelementptr inbounds i32, ptr %20, i64 %18
  %22 = load i32, ptr %14, align 4, !tbaa !38
  %23 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !21
  %25 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !21
  %27 = icmp eq ptr %24, %26
  %28 = icmp eq i32 %22, 0
  br i1 %27, label %32, label %31

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %263

31:                                               ; preds = %17
  br i1 %28, label %263, label %88

32:                                               ; preds = %17
  br i1 %28, label %263, label %33

33:                                               ; preds = %32, %78
  %34 = phi i32 [ %82, %78 ], [ 0, %32 ]
  %35 = phi ptr [ %81, %78 ], [ %20, %32 ]
  %36 = phi ptr [ %80, %78 ], [ %20, %32 ]
  %37 = phi ptr [ %79, %78 ], [ %21, %32 ]
  %38 = icmp eq ptr %36, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  store i32 %34, ptr %36, align 4, !tbaa !22
  %40 = getelementptr inbounds i32, ptr %36, i64 1
  br label %78

41:                                               ; preds = %33
  %42 = ptrtoint ptr %36 to i64
  %43 = ptrtoint ptr %35 to i64
  %44 = sub i64 %42, %43
  %45 = icmp eq i64 %44, 9223372036854775804
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %47 unwind label %86

47:                                               ; preds = %46
  unreachable

48:                                               ; preds = %41
  %49 = ashr exact i64 %44, 2
  %50 = tail call i64 @llvm.umax.i64(i64 %49, i64 1)
  %51 = add i64 %50, %49
  %52 = icmp ult i64 %51, %49
  %53 = icmp ugt i64 %51, 2305843009213693951
  %54 = or i1 %52, %53
  %55 = select i1 %54, i64 2305843009213693951, i64 %51
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %48
  %58 = shl nuw nsw i64 %55, 2
  %59 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %58) #21
          to label %60 unwind label %84

60:                                               ; preds = %57, %48
  %61 = phi ptr [ null, %48 ], [ %59, %57 ]
  %62 = getelementptr inbounds i32, ptr %61, i64 %49
  store i32 %34, ptr %62, align 4, !tbaa !22
  %63 = icmp sgt i64 %44, 4
  br i1 %63, label %64, label %65, !prof !23

64:                                               ; preds = %60
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %61, ptr align 4 %35, i64 %44, i1 false)
  br label %70

65:                                               ; preds = %60
  %66 = icmp eq i64 %44, 4
  br i1 %66, label %67, label %70

67:                                               ; preds = %65
  %68 = load i32, ptr %35, align 4, !tbaa !22
  store i32 %68, ptr %61, align 4, !tbaa !22
  %69 = getelementptr inbounds i32, ptr %62, i64 1
  br label %73

70:                                               ; preds = %65, %64
  %71 = getelementptr inbounds i32, ptr %62, i64 1
  %72 = icmp eq ptr %35, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %67, %70
  %74 = phi ptr [ %69, %67 ], [ %71, %70 ]
  tail call void @_ZdlPv(ptr noundef nonnull %35) #23
  br label %75

75:                                               ; preds = %73, %70
  %76 = phi ptr [ %71, %70 ], [ %74, %73 ]
  %77 = getelementptr inbounds i32, ptr %61, i64 %55
  br label %78

78:                                               ; preds = %75, %39
  %79 = phi ptr [ %77, %75 ], [ %37, %39 ]
  %80 = phi ptr [ %76, %75 ], [ %40, %39 ]
  %81 = phi ptr [ %61, %75 ], [ %35, %39 ]
  %82 = add nuw i32 %34, 1
  %83 = icmp eq i32 %82, %22
  br i1 %83, label %263, label %33

84:                                               ; preds = %57
  %85 = landingpad { ptr, i32 }
          cleanup
  br label %652

86:                                               ; preds = %46
  %87 = landingpad { ptr, i32 }
          cleanup
  br label %652

88:                                               ; preds = %31, %255
  %89 = phi i32 [ %261, %255 ], [ 0, %31 ]
  %90 = phi i32 [ %260, %255 ], [ 0, %31 ]
  %91 = phi ptr [ %259, %255 ], [ %20, %31 ]
  %92 = phi ptr [ %258, %255 ], [ %20, %31 ]
  %93 = phi ptr [ %257, %255 ], [ %21, %31 ]
  %94 = phi ptr [ %256, %255 ], [ %24, %31 ]
  %95 = load i32, ptr %94, align 8, !tbaa !24
  %96 = icmp eq i32 %89, %95
  br i1 %96, label %97, label %209

97:                                               ; preds = %88
  %98 = icmp eq ptr %92, %93
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  store i32 -1, ptr %92, align 4, !tbaa !22
  %100 = getelementptr inbounds i32, ptr %92, i64 1
  br label %138

101:                                              ; preds = %97
  %102 = ptrtoint ptr %92 to i64
  %103 = ptrtoint ptr %91 to i64
  %104 = sub i64 %102, %103
  %105 = icmp eq i64 %104, 9223372036854775804
  br i1 %105, label %106, label %108

106:                                              ; preds = %101
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %107 unwind label %151

107:                                              ; preds = %106
  unreachable

108:                                              ; preds = %101
  %109 = ashr exact i64 %104, 2
  %110 = tail call i64 @llvm.umax.i64(i64 %109, i64 1)
  %111 = add i64 %110, %109
  %112 = icmp ult i64 %111, %109
  %113 = icmp ugt i64 %111, 2305843009213693951
  %114 = or i1 %112, %113
  %115 = select i1 %114, i64 2305843009213693951, i64 %111
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %108
  %118 = shl nuw nsw i64 %115, 2
  %119 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %118) #21
          to label %120 unwind label %149

120:                                              ; preds = %117, %108
  %121 = phi ptr [ null, %108 ], [ %119, %117 ]
  %122 = getelementptr inbounds i32, ptr %121, i64 %109
  store i32 -1, ptr %122, align 4, !tbaa !22
  %123 = icmp sgt i64 %104, 4
  br i1 %123, label %124, label %125, !prof !23

124:                                              ; preds = %120
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %121, ptr align 4 %91, i64 %104, i1 false)
  br label %130

125:                                              ; preds = %120
  %126 = icmp eq i64 %104, 4
  br i1 %126, label %127, label %130

127:                                              ; preds = %125
  %128 = load i32, ptr %91, align 4, !tbaa !22
  store i32 %128, ptr %121, align 4, !tbaa !22
  %129 = getelementptr inbounds i32, ptr %122, i64 1
  br label %133

130:                                              ; preds = %125, %124
  %131 = getelementptr inbounds i32, ptr %122, i64 1
  %132 = icmp eq ptr %91, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %127, %130
  %134 = phi ptr [ %129, %127 ], [ %131, %130 ]
  tail call void @_ZdlPv(ptr noundef nonnull %91) #23
  br label %135

135:                                              ; preds = %133, %130
  %136 = phi ptr [ %131, %130 ], [ %134, %133 ]
  %137 = getelementptr inbounds i32, ptr %121, i64 %115
  br label %138

138:                                              ; preds = %99, %135
  %139 = phi ptr [ %137, %135 ], [ %93, %99 ]
  %140 = phi ptr [ %136, %135 ], [ %100, %99 ]
  %141 = phi ptr [ %121, %135 ], [ %91, %99 ]
  %142 = add i32 %90, 1
  %143 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %94, i64 1
  %144 = load ptr, ptr %25, align 8, !tbaa !21
  %145 = icmp eq ptr %143, %144
  br i1 %145, label %146, label %255

146:                                              ; preds = %138
  %147 = add i32 %89, 1
  %148 = icmp ult i32 %147, %22
  br i1 %148, label %153, label %263

149:                                              ; preds = %117
  %150 = landingpad { ptr, i32 }
          cleanup
  br label %652

151:                                              ; preds = %106
  %152 = landingpad { ptr, i32 }
          cleanup
  br label %652

153:                                              ; preds = %146, %199
  %154 = phi i32 [ %203, %199 ], [ %147, %146 ]
  %155 = phi ptr [ %202, %199 ], [ %141, %146 ]
  %156 = phi ptr [ %201, %199 ], [ %140, %146 ]
  %157 = phi ptr [ %200, %199 ], [ %139, %146 ]
  %158 = sub i32 %154, %142
  %159 = icmp eq ptr %156, %157
  br i1 %159, label %162, label %160

160:                                              ; preds = %153
  store i32 %158, ptr %156, align 4, !tbaa !22
  %161 = getelementptr inbounds i32, ptr %156, i64 1
  br label %199

162:                                              ; preds = %153
  %163 = ptrtoint ptr %156 to i64
  %164 = ptrtoint ptr %155 to i64
  %165 = sub i64 %163, %164
  %166 = icmp eq i64 %165, 9223372036854775804
  br i1 %166, label %167, label %169

167:                                              ; preds = %162
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %168 unwind label %207

168:                                              ; preds = %167
  unreachable

169:                                              ; preds = %162
  %170 = ashr exact i64 %165, 2
  %171 = tail call i64 @llvm.umax.i64(i64 %170, i64 1)
  %172 = add i64 %171, %170
  %173 = icmp ult i64 %172, %170
  %174 = icmp ugt i64 %172, 2305843009213693951
  %175 = or i1 %173, %174
  %176 = select i1 %175, i64 2305843009213693951, i64 %172
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %181, label %178

178:                                              ; preds = %169
  %179 = shl nuw nsw i64 %176, 2
  %180 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %179) #21
          to label %181 unwind label %205

181:                                              ; preds = %178, %169
  %182 = phi ptr [ null, %169 ], [ %180, %178 ]
  %183 = getelementptr inbounds i32, ptr %182, i64 %170
  store i32 %158, ptr %183, align 4, !tbaa !22
  %184 = icmp sgt i64 %165, 4
  br i1 %184, label %185, label %186, !prof !23

185:                                              ; preds = %181
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %182, ptr align 4 %155, i64 %165, i1 false)
  br label %191

186:                                              ; preds = %181
  %187 = icmp eq i64 %165, 4
  br i1 %187, label %188, label %191

188:                                              ; preds = %186
  %189 = load i32, ptr %155, align 4, !tbaa !22
  store i32 %189, ptr %182, align 4, !tbaa !22
  %190 = getelementptr inbounds i32, ptr %183, i64 1
  br label %194

191:                                              ; preds = %186, %185
  %192 = getelementptr inbounds i32, ptr %183, i64 1
  %193 = icmp eq ptr %155, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %188, %191
  %195 = phi ptr [ %190, %188 ], [ %192, %191 ]
  tail call void @_ZdlPv(ptr noundef nonnull %155) #23
  br label %196

196:                                              ; preds = %194, %191
  %197 = phi ptr [ %192, %191 ], [ %195, %194 ]
  %198 = getelementptr inbounds i32, ptr %182, i64 %176
  br label %199

199:                                              ; preds = %196, %160
  %200 = phi ptr [ %198, %196 ], [ %157, %160 ]
  %201 = phi ptr [ %197, %196 ], [ %161, %160 ]
  %202 = phi ptr [ %182, %196 ], [ %155, %160 ]
  %203 = add nuw i32 %154, 1
  %204 = icmp eq i32 %203, %22
  br i1 %204, label %263, label %153

205:                                              ; preds = %178
  %206 = landingpad { ptr, i32 }
          cleanup
  br label %652

207:                                              ; preds = %167
  %208 = landingpad { ptr, i32 }
          cleanup
  br label %652

209:                                              ; preds = %88
  %210 = sub i32 %89, %90
  %211 = icmp eq ptr %92, %93
  br i1 %211, label %214, label %212

212:                                              ; preds = %209
  store i32 %210, ptr %92, align 4, !tbaa !22
  %213 = getelementptr inbounds i32, ptr %92, i64 1
  br label %255

214:                                              ; preds = %209
  %215 = ptrtoint ptr %92 to i64
  %216 = ptrtoint ptr %91 to i64
  %217 = sub i64 %215, %216
  %218 = icmp eq i64 %217, 9223372036854775804
  br i1 %218, label %219, label %221

219:                                              ; preds = %214
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %220 unwind label %253

220:                                              ; preds = %219
  unreachable

221:                                              ; preds = %214
  %222 = ashr exact i64 %217, 2
  %223 = tail call i64 @llvm.umax.i64(i64 %222, i64 1)
  %224 = add i64 %223, %222
  %225 = icmp ult i64 %224, %222
  %226 = icmp ugt i64 %224, 2305843009213693951
  %227 = or i1 %225, %226
  %228 = select i1 %227, i64 2305843009213693951, i64 %224
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %233, label %230

230:                                              ; preds = %221
  %231 = shl nuw nsw i64 %228, 2
  %232 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %231) #21
          to label %233 unwind label %251

233:                                              ; preds = %230, %221
  %234 = phi ptr [ null, %221 ], [ %232, %230 ]
  %235 = getelementptr inbounds i32, ptr %234, i64 %222
  store i32 %210, ptr %235, align 4, !tbaa !22
  %236 = icmp sgt i64 %217, 4
  br i1 %236, label %237, label %238, !prof !23

237:                                              ; preds = %233
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %234, ptr align 4 %91, i64 %217, i1 false)
  br label %243

238:                                              ; preds = %233
  %239 = icmp eq i64 %217, 4
  br i1 %239, label %240, label %243

240:                                              ; preds = %238
  %241 = load i32, ptr %91, align 4, !tbaa !22
  store i32 %241, ptr %234, align 4, !tbaa !22
  %242 = getelementptr inbounds i32, ptr %235, i64 1
  br label %246

243:                                              ; preds = %238, %237
  %244 = getelementptr inbounds i32, ptr %235, i64 1
  %245 = icmp eq ptr %91, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %240, %243
  %247 = phi ptr [ %242, %240 ], [ %244, %243 ]
  tail call void @_ZdlPv(ptr noundef nonnull %91) #23
  br label %248

248:                                              ; preds = %246, %243
  %249 = phi ptr [ %244, %243 ], [ %247, %246 ]
  %250 = getelementptr inbounds i32, ptr %234, i64 %228
  br label %255

251:                                              ; preds = %230
  %252 = landingpad { ptr, i32 }
          cleanup
  br label %652

253:                                              ; preds = %219
  %254 = landingpad { ptr, i32 }
          cleanup
  br label %652

255:                                              ; preds = %212, %248, %138
  %256 = phi ptr [ %143, %138 ], [ %94, %248 ], [ %94, %212 ]
  %257 = phi ptr [ %139, %138 ], [ %250, %248 ], [ %93, %212 ]
  %258 = phi ptr [ %140, %138 ], [ %249, %248 ], [ %213, %212 ]
  %259 = phi ptr [ %141, %138 ], [ %234, %248 ], [ %91, %212 ]
  %260 = phi i32 [ %142, %138 ], [ %90, %248 ], [ %90, %212 ]
  %261 = add nuw i32 %89, 1
  %262 = icmp eq i32 %261, %22
  br i1 %262, label %263, label %88

263:                                              ; preds = %255, %199, %78, %29, %31, %146, %32
  %264 = phi ptr [ %23, %32 ], [ %23, %146 ], [ %23, %31 ], [ %30, %29 ], [ %23, %78 ], [ %23, %199 ], [ %23, %255 ]
  %265 = phi ptr [ %20, %32 ], [ %141, %146 ], [ %20, %31 ], [ null, %29 ], [ %81, %78 ], [ %202, %199 ], [ %259, %255 ]
  %266 = load i32, ptr %14, align 4, !tbaa !38
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %277, label %268

268:                                              ; preds = %263
  %269 = load ptr, ptr %264, align 8, !tbaa !21
  %270 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %13, i64 0, i32 8
  %271 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %13, i64 0, i32 9
  %272 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %1, i64 0, i32 2
  %273 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %3, i64 0, i32 1
  %274 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %3, i64 0, i32 2
  %275 = getelementptr inbounds %"class.dealii::Vector", ptr %4, i64 0, i32 3
  %276 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  br label %281

277:                                              ; preds = %647, %263
  %278 = icmp eq ptr %265, null
  br i1 %278, label %280, label %279

279:                                              ; preds = %277
  tail call void @_ZdlPv(ptr noundef nonnull %265) #23
  br label %280

280:                                              ; preds = %277, %279
  ret void

281:                                              ; preds = %268, %647
  %282 = phi i64 [ 0, %268 ], [ %290, %647 ]
  %283 = phi ptr [ %269, %268 ], [ %648, %647 ]
  %284 = getelementptr inbounds i32, ptr %265, i64 %282
  %285 = load i32, ptr %284, align 4, !tbaa !22
  %286 = icmp eq i32 %285, -1
  %287 = load ptr, ptr %270, align 8, !tbaa !41
  %288 = getelementptr inbounds i64, ptr %287, i64 %282
  %289 = load i64, ptr %288, align 8, !tbaa !42
  %290 = add nuw nsw i64 %282, 1
  %291 = and i64 %289, 4294967295
  %292 = getelementptr inbounds i64, ptr %287, i64 %290
  %293 = load i64, ptr %292, align 8, !tbaa !42
  %294 = icmp ugt i64 %293, %291
  br i1 %286, label %414, label %295

295:                                              ; preds = %281
  br i1 %294, label %296, label %298

296:                                              ; preds = %295
  %297 = trunc i64 %289 to i32
  br label %301

298:                                              ; preds = %397, %295
  br i1 %12, label %647, label %404

299:                                              ; preds = %316
  %300 = landingpad { ptr, i32 }
          cleanup
  br label %656

301:                                              ; preds = %296, %397
  %302 = phi i64 [ %399, %397 ], [ %291, %296 ]
  %303 = phi i32 [ %398, %397 ], [ %297, %296 ]
  %304 = load ptr, ptr %271, align 8, !tbaa !43
  %305 = getelementptr inbounds i32, ptr %304, i64 %302
  %306 = load i32, ptr %305, align 4, !tbaa !22
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds i32, ptr %265, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !22
  %310 = icmp eq i32 %309, -1
  br i1 %310, label %328, label %311

311:                                              ; preds = %301
  %312 = load ptr, ptr %272, align 8, !tbaa !50
  %313 = getelementptr inbounds double, ptr %312, i64 %302
  %314 = load double, ptr %313, align 8, !tbaa !52
  %315 = fcmp oeq double %314, 0.000000e+00
  br i1 %315, label %397, label %316

316:                                              ; preds = %311
  %317 = load i32, ptr %284, align 4, !tbaa !22
  %318 = load ptr, ptr %273, align 8, !tbaa !47
  %319 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %318, i32 noundef %317, i32 noundef %309)
          to label %320 unwind label %299

320:                                              ; preds = %316
  %321 = icmp eq i32 %319, -1
  br i1 %321, label %397, label %322

322:                                              ; preds = %320
  %323 = load ptr, ptr %274, align 8, !tbaa !50
  %324 = zext i32 %319 to i64
  %325 = getelementptr inbounds double, ptr %323, i64 %324
  %326 = load double, ptr %325, align 8, !tbaa !52
  %327 = fadd double %314, %326
  store double %327, ptr %325, align 8, !tbaa !52
  br label %397

328:                                              ; preds = %301
  %329 = load ptr, ptr %264, align 8, !tbaa !21
  br label %330

330:                                              ; preds = %330, %328
  %331 = phi ptr [ %329, %328 ], [ %334, %330 ]
  %332 = load i32, ptr %331, align 8, !tbaa !24
  %333 = icmp eq i32 %332, %306
  %334 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 1
  br i1 %333, label %335, label %330

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 0, i32 1
  %337 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %338 = load ptr, ptr %337, align 8, !tbaa !31
  %339 = load ptr, ptr %336, align 8, !tbaa !32
  %340 = icmp eq ptr %338, %339
  br i1 %340, label %341, label %344

341:                                              ; preds = %372, %335
  br i1 %12, label %397, label %382

342:                                              ; preds = %355
  %343 = landingpad { ptr, i32 }
          cleanup
  br label %656

344:                                              ; preds = %335, %372
  %345 = phi ptr [ %376, %372 ], [ %339, %335 ]
  %346 = phi i64 [ %374, %372 ], [ 0, %335 ]
  %347 = phi i32 [ %373, %372 ], [ 0, %335 ]
  %348 = load ptr, ptr %272, align 8, !tbaa !50
  %349 = getelementptr inbounds double, ptr %348, i64 %302
  %350 = load double, ptr %349, align 8, !tbaa !52
  %351 = getelementptr inbounds %"struct.std::pair", ptr %345, i64 %346, i32 1
  %352 = load double, ptr %351, align 8, !tbaa !35
  %353 = fmul double %350, %352
  %354 = fcmp oeq double %353, 0.000000e+00
  br i1 %354, label %372, label %355

355:                                              ; preds = %344
  %356 = getelementptr inbounds %"struct.std::pair", ptr %345, i64 %346
  %357 = load i32, ptr %356, align 8, !tbaa !37
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds i32, ptr %265, i64 %358
  %360 = load i32, ptr %359, align 4, !tbaa !22
  %361 = load i32, ptr %284, align 4, !tbaa !22
  %362 = load ptr, ptr %273, align 8, !tbaa !47
  %363 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %362, i32 noundef %361, i32 noundef %360)
          to label %364 unwind label %342

364:                                              ; preds = %355
  %365 = icmp eq i32 %363, -1
  br i1 %365, label %372, label %366

366:                                              ; preds = %364
  %367 = load ptr, ptr %274, align 8, !tbaa !50
  %368 = zext i32 %363 to i64
  %369 = getelementptr inbounds double, ptr %367, i64 %368
  %370 = load double, ptr %369, align 8, !tbaa !52
  %371 = fadd double %353, %370
  store double %371, ptr %369, align 8, !tbaa !52
  br label %372

372:                                              ; preds = %366, %364, %344
  %373 = add i32 %347, 1
  %374 = zext i32 %373 to i64
  %375 = load ptr, ptr %337, align 8, !tbaa !31
  %376 = load ptr, ptr %336, align 8, !tbaa !32
  %377 = ptrtoint ptr %375 to i64
  %378 = ptrtoint ptr %376 to i64
  %379 = sub i64 %377, %378
  %380 = ashr exact i64 %379, 4
  %381 = icmp eq i64 %380, %374
  br i1 %381, label %341, label %344

382:                                              ; preds = %341
  %383 = load ptr, ptr %272, align 8, !tbaa !50
  %384 = getelementptr inbounds double, ptr %383, i64 %302
  %385 = load double, ptr %384, align 8, !tbaa !52
  %386 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 0, i32 2
  %387 = load double, ptr %386, align 8, !tbaa !48
  %388 = load i32, ptr %284, align 4, !tbaa !22
  %389 = load ptr, ptr %275, align 8, !tbaa !49
  %390 = zext i32 %388 to i64
  %391 = getelementptr inbounds float, ptr %389, i64 %390
  %392 = load float, ptr %391, align 4, !tbaa !33
  %393 = fpext float %392 to double
  %394 = fneg double %385
  %395 = tail call double @llvm.fmuladd.f64(double %394, double %387, double %393)
  %396 = fptrunc double %395 to float
  store float %396, ptr %391, align 4, !tbaa !33
  br label %397

397:                                              ; preds = %341, %382, %322, %320, %311
  %398 = add i32 %303, 1
  %399 = zext i32 %398 to i64
  %400 = load ptr, ptr %270, align 8, !tbaa !41
  %401 = getelementptr inbounds i64, ptr %400, i64 %290
  %402 = load i64, ptr %401, align 8, !tbaa !42
  %403 = icmp ugt i64 %402, %399
  br i1 %403, label %301, label %298

404:                                              ; preds = %298
  %405 = load ptr, ptr %276, align 8, !tbaa !49
  %406 = getelementptr inbounds float, ptr %405, i64 %282
  %407 = load float, ptr %406, align 4, !tbaa !33
  %408 = load i32, ptr %284, align 4, !tbaa !22
  %409 = load ptr, ptr %275, align 8, !tbaa !49
  %410 = zext i32 %408 to i64
  %411 = getelementptr inbounds float, ptr %409, i64 %410
  %412 = load float, ptr %411, align 4, !tbaa !33
  %413 = fadd float %407, %412
  store float %413, ptr %411, align 4, !tbaa !33
  br label %647

414:                                              ; preds = %281
  br i1 %294, label %415, label %419

415:                                              ; preds = %414
  %416 = trunc i64 %289 to i32
  %417 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1
  %418 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %434

419:                                              ; preds = %617, %414
  br i1 %12, label %645, label %420

420:                                              ; preds = %419
  %421 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1
  %422 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %423 = load ptr, ptr %422, align 8, !tbaa !31
  %424 = load ptr, ptr %421, align 8, !tbaa !32
  %425 = ptrtoint ptr %423 to i64
  %426 = ptrtoint ptr %424 to i64
  %427 = sub i64 %425, %426
  %428 = ashr exact i64 %427, 4
  %429 = icmp eq ptr %423, %424
  br i1 %429, label %645, label %430

430:                                              ; preds = %420
  %431 = load ptr, ptr %276, align 8, !tbaa !49
  %432 = getelementptr inbounds float, ptr %431, i64 %282
  %433 = load ptr, ptr %275, align 8, !tbaa !49
  br label %624

434:                                              ; preds = %415, %617
  %435 = phi i64 [ %291, %415 ], [ %619, %617 ]
  %436 = phi i32 [ %416, %415 ], [ %618, %617 ]
  %437 = load ptr, ptr %271, align 8, !tbaa !43
  %438 = getelementptr inbounds i32, ptr %437, i64 %435
  %439 = load i32, ptr %438, align 4, !tbaa !22
  %440 = zext i32 %439 to i64
  %441 = getelementptr inbounds i32, ptr %265, i64 %440
  %442 = load i32, ptr %441, align 4, !tbaa !22
  %443 = icmp eq i32 %442, -1
  br i1 %443, label %493, label %444

444:                                              ; preds = %434
  %445 = load ptr, ptr %418, align 8, !tbaa !31
  %446 = load ptr, ptr %417, align 8, !tbaa !32
  %447 = icmp eq ptr %445, %446
  br i1 %447, label %617, label %450

448:                                              ; preds = %461
  %449 = landingpad { ptr, i32 }
          cleanup
  br label %656

450:                                              ; preds = %444, %483
  %451 = phi ptr [ %487, %483 ], [ %446, %444 ]
  %452 = phi i64 [ %485, %483 ], [ 0, %444 ]
  %453 = phi i32 [ %484, %483 ], [ 0, %444 ]
  %454 = load ptr, ptr %272, align 8, !tbaa !50
  %455 = getelementptr inbounds double, ptr %454, i64 %435
  %456 = load double, ptr %455, align 8, !tbaa !52
  %457 = getelementptr inbounds %"struct.std::pair", ptr %451, i64 %452, i32 1
  %458 = load double, ptr %457, align 8, !tbaa !35
  %459 = fmul double %456, %458
  %460 = fcmp oeq double %459, 0.000000e+00
  br i1 %460, label %483, label %461

461:                                              ; preds = %450
  %462 = getelementptr inbounds %"struct.std::pair", ptr %451, i64 %452
  %463 = load ptr, ptr %271, align 8, !tbaa !43
  %464 = getelementptr inbounds i32, ptr %463, i64 %435
  %465 = load i32, ptr %464, align 4, !tbaa !22
  %466 = zext i32 %465 to i64
  %467 = getelementptr inbounds i32, ptr %265, i64 %466
  %468 = load i32, ptr %467, align 4, !tbaa !22
  %469 = load i32, ptr %462, align 8, !tbaa !37
  %470 = zext i32 %469 to i64
  %471 = getelementptr inbounds i32, ptr %265, i64 %470
  %472 = load i32, ptr %471, align 4, !tbaa !22
  %473 = load ptr, ptr %273, align 8, !tbaa !47
  %474 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %473, i32 noundef %472, i32 noundef %468)
          to label %475 unwind label %448

475:                                              ; preds = %461
  %476 = icmp eq i32 %474, -1
  br i1 %476, label %483, label %477

477:                                              ; preds = %475
  %478 = load ptr, ptr %274, align 8, !tbaa !50
  %479 = zext i32 %474 to i64
  %480 = getelementptr inbounds double, ptr %478, i64 %479
  %481 = load double, ptr %480, align 8, !tbaa !52
  %482 = fadd double %459, %481
  store double %482, ptr %480, align 8, !tbaa !52
  br label %483

483:                                              ; preds = %477, %475, %450
  %484 = add i32 %453, 1
  %485 = zext i32 %484 to i64
  %486 = load ptr, ptr %418, align 8, !tbaa !31
  %487 = load ptr, ptr %417, align 8, !tbaa !32
  %488 = ptrtoint ptr %486 to i64
  %489 = ptrtoint ptr %487 to i64
  %490 = sub i64 %488, %489
  %491 = ashr exact i64 %490, 4
  %492 = icmp eq i64 %491, %485
  br i1 %492, label %617, label %450

493:                                              ; preds = %434
  %494 = load ptr, ptr %264, align 8, !tbaa !21
  br label %495

495:                                              ; preds = %495, %493
  %496 = phi ptr [ %494, %493 ], [ %499, %495 ]
  %497 = load i32, ptr %496, align 8, !tbaa !24
  %498 = icmp eq i32 %497, %439
  %499 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %496, i64 1
  br i1 %498, label %500, label %495

500:                                              ; preds = %495
  %501 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %496, i64 0, i32 1
  %502 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %496, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %503 = load ptr, ptr %502, align 8, !tbaa !31
  %504 = load ptr, ptr %501, align 8, !tbaa !32
  %505 = icmp eq ptr %503, %504
  br i1 %505, label %517, label %506

506:                                              ; preds = %500
  %507 = load ptr, ptr %418, align 8, !tbaa !31
  %508 = load ptr, ptr %417, align 8, !tbaa !32
  br label %509

509:                                              ; preds = %506, %537
  %510 = phi ptr [ %538, %537 ], [ %504, %506 ]
  %511 = phi ptr [ %539, %537 ], [ %503, %506 ]
  %512 = phi ptr [ %540, %537 ], [ %508, %506 ]
  %513 = phi ptr [ %541, %537 ], [ %507, %506 ]
  %514 = phi i64 [ %543, %537 ], [ 0, %506 ]
  %515 = phi i32 [ %542, %537 ], [ 0, %506 ]
  %516 = icmp eq ptr %513, %512
  br i1 %516, label %537, label %551

517:                                              ; preds = %537, %500
  br i1 %12, label %617, label %518

518:                                              ; preds = %517
  %519 = load ptr, ptr %418, align 8, !tbaa !31
  %520 = load ptr, ptr %417, align 8, !tbaa !32
  %521 = ptrtoint ptr %519 to i64
  %522 = ptrtoint ptr %520 to i64
  %523 = sub i64 %521, %522
  %524 = ashr exact i64 %523, 4
  %525 = icmp eq ptr %519, %520
  br i1 %525, label %617, label %526

526:                                              ; preds = %518
  %527 = load ptr, ptr %272, align 8, !tbaa !50
  %528 = getelementptr inbounds double, ptr %527, i64 %435
  %529 = load double, ptr %528, align 8, !tbaa !52
  %530 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %496, i64 0, i32 2
  %531 = load double, ptr %530, align 8, !tbaa !48
  %532 = load ptr, ptr %275, align 8, !tbaa !49
  %533 = fneg double %529
  br label %597

534:                                              ; preds = %587
  %535 = load ptr, ptr %502, align 8, !tbaa !31
  %536 = load ptr, ptr %501, align 8, !tbaa !32
  br label %537

537:                                              ; preds = %534, %509
  %538 = phi ptr [ %536, %534 ], [ %510, %509 ]
  %539 = phi ptr [ %535, %534 ], [ %511, %509 ]
  %540 = phi ptr [ %591, %534 ], [ %512, %509 ]
  %541 = phi ptr [ %590, %534 ], [ %512, %509 ]
  %542 = add i32 %515, 1
  %543 = zext i32 %542 to i64
  %544 = ptrtoint ptr %539 to i64
  %545 = ptrtoint ptr %538 to i64
  %546 = sub i64 %544, %545
  %547 = ashr exact i64 %546, 4
  %548 = icmp eq i64 %547, %543
  br i1 %548, label %517, label %509

549:                                              ; preds = %566
  %550 = landingpad { ptr, i32 }
          cleanup
  br label %656

551:                                              ; preds = %509, %587
  %552 = phi ptr [ %591, %587 ], [ %512, %509 ]
  %553 = phi i64 [ %589, %587 ], [ 0, %509 ]
  %554 = phi i32 [ %588, %587 ], [ 0, %509 ]
  %555 = load ptr, ptr %501, align 8, !tbaa !32
  %556 = load ptr, ptr %272, align 8, !tbaa !50
  %557 = getelementptr inbounds double, ptr %556, i64 %435
  %558 = load double, ptr %557, align 8, !tbaa !52
  %559 = getelementptr inbounds %"struct.std::pair", ptr %552, i64 %553, i32 1
  %560 = load double, ptr %559, align 8, !tbaa !35
  %561 = fmul double %558, %560
  %562 = getelementptr inbounds %"struct.std::pair", ptr %555, i64 %514, i32 1
  %563 = load double, ptr %562, align 8, !tbaa !35
  %564 = fmul double %561, %563
  %565 = fcmp oeq double %564, 0.000000e+00
  br i1 %565, label %587, label %566

566:                                              ; preds = %551
  %567 = getelementptr inbounds %"struct.std::pair", ptr %555, i64 %514
  %568 = getelementptr inbounds %"struct.std::pair", ptr %552, i64 %553
  %569 = load i32, ptr %567, align 8, !tbaa !37
  %570 = zext i32 %569 to i64
  %571 = getelementptr inbounds i32, ptr %265, i64 %570
  %572 = load i32, ptr %571, align 4, !tbaa !22
  %573 = load i32, ptr %568, align 8, !tbaa !37
  %574 = zext i32 %573 to i64
  %575 = getelementptr inbounds i32, ptr %265, i64 %574
  %576 = load i32, ptr %575, align 4, !tbaa !22
  %577 = load ptr, ptr %273, align 8, !tbaa !47
  %578 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %577, i32 noundef %576, i32 noundef %572)
          to label %579 unwind label %549

579:                                              ; preds = %566
  %580 = icmp eq i32 %578, -1
  br i1 %580, label %587, label %581

581:                                              ; preds = %579
  %582 = load ptr, ptr %274, align 8, !tbaa !50
  %583 = zext i32 %578 to i64
  %584 = getelementptr inbounds double, ptr %582, i64 %583
  %585 = load double, ptr %584, align 8, !tbaa !52
  %586 = fadd double %564, %585
  store double %586, ptr %584, align 8, !tbaa !52
  br label %587

587:                                              ; preds = %581, %579, %551
  %588 = add i32 %554, 1
  %589 = zext i32 %588 to i64
  %590 = load ptr, ptr %418, align 8, !tbaa !31
  %591 = load ptr, ptr %417, align 8, !tbaa !32
  %592 = ptrtoint ptr %590 to i64
  %593 = ptrtoint ptr %591 to i64
  %594 = sub i64 %592, %593
  %595 = ashr exact i64 %594, 4
  %596 = icmp eq i64 %595, %589
  br i1 %596, label %534, label %551

597:                                              ; preds = %526, %597
  %598 = phi i64 [ 0, %526 ], [ %615, %597 ]
  %599 = phi i32 [ 0, %526 ], [ %614, %597 ]
  %600 = getelementptr inbounds %"struct.std::pair", ptr %520, i64 %598
  %601 = getelementptr inbounds %"struct.std::pair", ptr %520, i64 %598, i32 1
  %602 = load double, ptr %601, align 8, !tbaa !35
  %603 = load i32, ptr %600, align 8, !tbaa !37
  %604 = zext i32 %603 to i64
  %605 = getelementptr inbounds i32, ptr %265, i64 %604
  %606 = load i32, ptr %605, align 4, !tbaa !22
  %607 = zext i32 %606 to i64
  %608 = getelementptr inbounds float, ptr %532, i64 %607
  %609 = load float, ptr %608, align 4, !tbaa !33
  %610 = fpext float %609 to double
  %611 = fmul double %602, %533
  %612 = tail call double @llvm.fmuladd.f64(double %611, double %531, double %610)
  %613 = fptrunc double %612 to float
  store float %613, ptr %608, align 4, !tbaa !33
  %614 = add i32 %599, 1
  %615 = zext i32 %614 to i64
  %616 = icmp eq i64 %524, %615
  br i1 %616, label %617, label %597

617:                                              ; preds = %483, %597, %444, %518, %517
  %618 = add i32 %436, 1
  %619 = zext i32 %618 to i64
  %620 = load ptr, ptr %270, align 8, !tbaa !41
  %621 = getelementptr inbounds i64, ptr %620, i64 %290
  %622 = load i64, ptr %621, align 8, !tbaa !42
  %623 = icmp ugt i64 %622, %619
  br i1 %623, label %434, label %419

624:                                              ; preds = %430, %624
  %625 = phi i64 [ 0, %430 ], [ %643, %624 ]
  %626 = phi i32 [ 0, %430 ], [ %642, %624 ]
  %627 = load float, ptr %432, align 4, !tbaa !33
  %628 = fpext float %627 to double
  %629 = getelementptr inbounds %"struct.std::pair", ptr %424, i64 %625
  %630 = getelementptr inbounds %"struct.std::pair", ptr %424, i64 %625, i32 1
  %631 = load double, ptr %630, align 8, !tbaa !35
  %632 = load i32, ptr %629, align 8, !tbaa !37
  %633 = zext i32 %632 to i64
  %634 = getelementptr inbounds i32, ptr %265, i64 %633
  %635 = load i32, ptr %634, align 4, !tbaa !22
  %636 = zext i32 %635 to i64
  %637 = getelementptr inbounds float, ptr %433, i64 %636
  %638 = load float, ptr %637, align 4, !tbaa !33
  %639 = fpext float %638 to double
  %640 = tail call double @llvm.fmuladd.f64(double %628, double %631, double %639)
  %641 = fptrunc double %640 to float
  store float %641, ptr %637, align 4, !tbaa !33
  %642 = add i32 %626, 1
  %643 = zext i32 %642 to i64
  %644 = icmp eq i64 %428, %643
  br i1 %644, label %645, label %624

645:                                              ; preds = %624, %420, %419
  %646 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 1
  br label %647

647:                                              ; preds = %645, %404, %298
  %648 = phi ptr [ %646, %645 ], [ %283, %404 ], [ %283, %298 ]
  %649 = load i32, ptr %14, align 4, !tbaa !38
  %650 = zext i32 %649 to i64
  %651 = icmp ult i64 %290, %650
  br i1 %651, label %281, label %277

652:                                              ; preds = %251, %253, %205, %207, %149, %151, %84, %86
  %653 = phi ptr [ %35, %84 ], [ %35, %86 ], [ %91, %149 ], [ %91, %151 ], [ %155, %205 ], [ %155, %207 ], [ %91, %251 ], [ %91, %253 ]
  %654 = phi { ptr, i32 } [ %85, %84 ], [ %87, %86 ], [ %150, %149 ], [ %152, %151 ], [ %206, %205 ], [ %208, %207 ], [ %252, %251 ], [ %254, %253 ]
  %655 = icmp eq ptr %653, null
  br i1 %655, label %659, label %656

656:                                              ; preds = %549, %342, %299, %448, %652
  %657 = phi { ptr, i32 } [ %654, %652 ], [ %550, %549 ], [ %343, %342 ], [ %449, %448 ], [ %300, %299 ]
  %658 = phi ptr [ %653, %652 ], [ %265, %549 ], [ %265, %342 ], [ %265, %448 ], [ %265, %299 ]
  tail call void @_ZdlPv(ptr noundef nonnull %658) #23
  br label %659

659:                                              ; preds = %656, %652
  %660 = phi { ptr, i32 } [ %654, %652 ], [ %657, %656 ]
  resume { ptr, i32 } %660
}

declare noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36)) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8set_zeroINS_6VectorIfEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %18, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !49
  br label %11

11:                                               ; preds = %8, %11
  %12 = phi ptr [ %4, %8 ], [ %16, %11 ]
  %13 = load i32, ptr %12, align 8, !tbaa !24
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds float, ptr %10, i64 %14
  store float 0.000000e+00, ptr %15, align 4, !tbaa !33
  %16 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 1
  %17 = icmp eq ptr %16, %6
  br i1 %17, label %18, label %11

18:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_6VectorIfEEEEvRKNS2_IdEERKSt6vectorIjSaIjEERT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !53
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %36, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !55
  %12 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %13 = load i32, ptr %12, align 8, !tbaa !57
  %14 = load ptr, ptr %9, align 8, !tbaa !55
  %15 = ptrtoint ptr %11 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = shl nsw i64 %17, 3
  %19 = zext i32 %13 to i64
  %20 = add nsw i64 %18, %19
  %21 = load ptr, ptr %2, align 8, !tbaa !58
  %22 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector", ptr %3, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = ptrtoint ptr %27 to i64
  %32 = sub i64 %30, %31
  %33 = icmp sgt i64 %32, 0
  %34 = udiv exact i64 %32, 40
  %35 = zext i32 %6 to i64
  br label %37

36:                                               ; preds = %105, %4
  ret void

37:                                               ; preds = %8, %105
  %38 = phi i64 [ 0, %8 ], [ %106, %105 ]
  %39 = getelementptr inbounds i32, ptr %21, i64 %38
  %40 = load i32, ptr %39, align 4, !tbaa !22
  %41 = zext i32 %40 to i64
  %42 = icmp ugt i64 %20, %41
  br i1 %42, label %43, label %97

43:                                               ; preds = %37
  %44 = lshr i32 %40, 6
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i64, ptr %14, i64 %45
  %47 = and i32 %40, 63
  %48 = zext i32 %47 to i64
  %49 = shl nuw i64 1, %48
  %50 = load i64, ptr %46, align 8, !tbaa !42
  %51 = and i64 %50, %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %97, label %53

53:                                               ; preds = %43
  br i1 %33, label %54, label %67

54:                                               ; preds = %53, %54
  %55 = phi i64 [ %65, %54 ], [ %34, %53 ]
  %56 = phi ptr [ %64, %54 ], [ %27, %53 ]
  %57 = lshr i64 %55, 1
  %58 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %56, i64 %57
  %59 = load i32, ptr %58, align 8, !tbaa !24
  %60 = icmp ult i32 %59, %40
  %61 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %58, i64 1
  %62 = xor i64 %57, -1
  %63 = add nsw i64 %55, %62
  %64 = select i1 %60, ptr %61, ptr %56
  %65 = select i1 %60, i64 %63, i64 %57
  %66 = icmp sgt i64 %65, 0
  br i1 %66, label %54, label %67

67:                                               ; preds = %54, %53
  %68 = phi ptr [ %27, %53 ], [ %64, %54 ]
  %69 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %68, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !31
  %72 = load ptr, ptr %69, align 8, !tbaa !32
  %73 = ptrtoint ptr %71 to i64
  %74 = ptrtoint ptr %72 to i64
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 4
  %77 = icmp eq ptr %71, %72
  br i1 %77, label %105, label %78

78:                                               ; preds = %67
  %79 = getelementptr inbounds double, ptr %23, i64 %38
  %80 = load double, ptr %79, align 8, !tbaa !52
  br label %81

81:                                               ; preds = %78, %81
  %82 = phi i64 [ 0, %78 ], [ %95, %81 ]
  %83 = phi i32 [ 0, %78 ], [ %94, %81 ]
  %84 = getelementptr inbounds %"struct.std::pair", ptr %72, i64 %82
  %85 = getelementptr inbounds %"struct.std::pair", ptr %72, i64 %82, i32 1
  %86 = load double, ptr %85, align 8, !tbaa !35
  %87 = load i32, ptr %84, align 8, !tbaa !37
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds float, ptr %25, i64 %88
  %90 = load float, ptr %89, align 4, !tbaa !33
  %91 = fpext float %90 to double
  %92 = tail call double @llvm.fmuladd.f64(double %80, double %86, double %91)
  %93 = fptrunc double %92 to float
  store float %93, ptr %89, align 4, !tbaa !33
  %94 = add i32 %83, 1
  %95 = zext i32 %94 to i64
  %96 = icmp ugt i64 %76, %95
  br i1 %96, label %81, label %105

97:                                               ; preds = %43, %37
  %98 = getelementptr inbounds double, ptr %23, i64 %38
  %99 = load double, ptr %98, align 8, !tbaa !52
  %100 = getelementptr inbounds float, ptr %25, i64 %41
  %101 = load float, ptr %100, align 4, !tbaa !33
  %102 = fpext float %101 to double
  %103 = fadd double %99, %102
  %104 = fptrunc double %103 to float
  store float %104, ptr %100, align 4, !tbaa !33
  br label %105

105:                                              ; preds = %81, %97, %67
  %106 = add nuw nsw i64 %38, 1
  %107 = icmp eq i64 %106, %35
  br i1 %107, label %36, label %37
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix10distributeINS_6VectorIfEEEEvRKT_RS4_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !5
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %249

9:                                                ; preds = %3
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  %12 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %11) #21
  %13 = getelementptr inbounds i32, ptr %12, i64 %10
  %14 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !21
  %16 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !21
  %18 = icmp eq ptr %15, %17
  br i1 %18, label %19, label %74

19:                                               ; preds = %9, %64
  %20 = phi i32 [ %68, %64 ], [ 0, %9 ]
  %21 = phi ptr [ %67, %64 ], [ %12, %9 ]
  %22 = phi ptr [ %66, %64 ], [ %12, %9 ]
  %23 = phi ptr [ %65, %64 ], [ %13, %9 ]
  %24 = icmp eq ptr %22, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  store i32 %20, ptr %22, align 4, !tbaa !22
  %26 = getelementptr inbounds i32, ptr %22, i64 1
  br label %64

27:                                               ; preds = %19
  %28 = ptrtoint ptr %22 to i64
  %29 = ptrtoint ptr %21 to i64
  %30 = sub i64 %28, %29
  %31 = icmp eq i64 %30, 9223372036854775804
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %33 unwind label %72

33:                                               ; preds = %32
  unreachable

34:                                               ; preds = %27
  %35 = ashr exact i64 %30, 2
  %36 = tail call i64 @llvm.umax.i64(i64 %35, i64 1)
  %37 = add i64 %36, %35
  %38 = icmp ult i64 %37, %35
  %39 = icmp ugt i64 %37, 2305843009213693951
  %40 = or i1 %38, %39
  %41 = select i1 %40, i64 2305843009213693951, i64 %37
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %34
  %44 = shl nuw nsw i64 %41, 2
  %45 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %44) #21
          to label %46 unwind label %70

46:                                               ; preds = %43, %34
  %47 = phi ptr [ null, %34 ], [ %45, %43 ]
  %48 = getelementptr inbounds i32, ptr %47, i64 %35
  store i32 %20, ptr %48, align 4, !tbaa !22
  %49 = icmp sgt i64 %30, 4
  br i1 %49, label %50, label %51, !prof !23

50:                                               ; preds = %46
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %47, ptr align 4 %21, i64 %30, i1 false)
  br label %56

51:                                               ; preds = %46
  %52 = icmp eq i64 %30, 4
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = load i32, ptr %21, align 4, !tbaa !22
  store i32 %54, ptr %47, align 4, !tbaa !22
  %55 = getelementptr inbounds i32, ptr %48, i64 1
  br label %59

56:                                               ; preds = %51, %50
  %57 = getelementptr inbounds i32, ptr %48, i64 1
  %58 = icmp eq ptr %21, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53, %56
  %60 = phi ptr [ %55, %53 ], [ %57, %56 ]
  tail call void @_ZdlPv(ptr noundef nonnull %21) #23
  br label %61

61:                                               ; preds = %59, %56
  %62 = phi ptr [ %57, %56 ], [ %60, %59 ]
  %63 = getelementptr inbounds i32, ptr %47, i64 %41
  br label %64

64:                                               ; preds = %61, %25
  %65 = phi ptr [ %63, %61 ], [ %23, %25 ]
  %66 = phi ptr [ %62, %61 ], [ %26, %25 ]
  %67 = phi ptr [ %47, %61 ], [ %21, %25 ]
  %68 = add nuw i32 %20, 1
  %69 = icmp eq i32 %68, %5
  br i1 %69, label %249, label %19

70:                                               ; preds = %43
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %316

72:                                               ; preds = %32
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %316

74:                                               ; preds = %9, %241
  %75 = phi i32 [ %247, %241 ], [ 0, %9 ]
  %76 = phi i32 [ %246, %241 ], [ 0, %9 ]
  %77 = phi ptr [ %245, %241 ], [ %12, %9 ]
  %78 = phi ptr [ %244, %241 ], [ %12, %9 ]
  %79 = phi ptr [ %243, %241 ], [ %13, %9 ]
  %80 = phi ptr [ %242, %241 ], [ %15, %9 ]
  %81 = load i32, ptr %80, align 8, !tbaa !24
  %82 = icmp eq i32 %75, %81
  br i1 %82, label %83, label %195

83:                                               ; preds = %74
  %84 = icmp eq ptr %78, %79
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  store i32 -1, ptr %78, align 4, !tbaa !22
  %86 = getelementptr inbounds i32, ptr %78, i64 1
  br label %124

87:                                               ; preds = %83
  %88 = ptrtoint ptr %78 to i64
  %89 = ptrtoint ptr %77 to i64
  %90 = sub i64 %88, %89
  %91 = icmp eq i64 %90, 9223372036854775804
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %93 unwind label %137

93:                                               ; preds = %92
  unreachable

94:                                               ; preds = %87
  %95 = ashr exact i64 %90, 2
  %96 = tail call i64 @llvm.umax.i64(i64 %95, i64 1)
  %97 = add i64 %96, %95
  %98 = icmp ult i64 %97, %95
  %99 = icmp ugt i64 %97, 2305843009213693951
  %100 = or i1 %98, %99
  %101 = select i1 %100, i64 2305843009213693951, i64 %97
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %94
  %104 = shl nuw nsw i64 %101, 2
  %105 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %104) #21
          to label %106 unwind label %135

106:                                              ; preds = %103, %94
  %107 = phi ptr [ null, %94 ], [ %105, %103 ]
  %108 = getelementptr inbounds i32, ptr %107, i64 %95
  store i32 -1, ptr %108, align 4, !tbaa !22
  %109 = icmp sgt i64 %90, 4
  br i1 %109, label %110, label %111, !prof !23

110:                                              ; preds = %106
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %107, ptr align 4 %77, i64 %90, i1 false)
  br label %116

111:                                              ; preds = %106
  %112 = icmp eq i64 %90, 4
  br i1 %112, label %113, label %116

113:                                              ; preds = %111
  %114 = load i32, ptr %77, align 4, !tbaa !22
  store i32 %114, ptr %107, align 4, !tbaa !22
  %115 = getelementptr inbounds i32, ptr %108, i64 1
  br label %119

116:                                              ; preds = %111, %110
  %117 = getelementptr inbounds i32, ptr %108, i64 1
  %118 = icmp eq ptr %77, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %113, %116
  %120 = phi ptr [ %115, %113 ], [ %117, %116 ]
  tail call void @_ZdlPv(ptr noundef nonnull %77) #23
  br label %121

121:                                              ; preds = %119, %116
  %122 = phi ptr [ %117, %116 ], [ %120, %119 ]
  %123 = getelementptr inbounds i32, ptr %107, i64 %101
  br label %124

124:                                              ; preds = %85, %121
  %125 = phi ptr [ %123, %121 ], [ %79, %85 ]
  %126 = phi ptr [ %122, %121 ], [ %86, %85 ]
  %127 = phi ptr [ %107, %121 ], [ %77, %85 ]
  %128 = add i32 %76, 1
  %129 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %80, i64 1
  %130 = load ptr, ptr %16, align 8, !tbaa !21
  %131 = icmp eq ptr %129, %130
  br i1 %131, label %132, label %241

132:                                              ; preds = %124
  %133 = add i32 %75, 1
  %134 = icmp ult i32 %133, %5
  br i1 %134, label %139, label %249

135:                                              ; preds = %103
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %316

137:                                              ; preds = %92
  %138 = landingpad { ptr, i32 }
          cleanup
  br label %316

139:                                              ; preds = %132, %185
  %140 = phi i32 [ %189, %185 ], [ %133, %132 ]
  %141 = phi ptr [ %188, %185 ], [ %127, %132 ]
  %142 = phi ptr [ %187, %185 ], [ %126, %132 ]
  %143 = phi ptr [ %186, %185 ], [ %125, %132 ]
  %144 = sub i32 %140, %128
  %145 = icmp eq ptr %142, %143
  br i1 %145, label %148, label %146

146:                                              ; preds = %139
  store i32 %144, ptr %142, align 4, !tbaa !22
  %147 = getelementptr inbounds i32, ptr %142, i64 1
  br label %185

148:                                              ; preds = %139
  %149 = ptrtoint ptr %142 to i64
  %150 = ptrtoint ptr %141 to i64
  %151 = sub i64 %149, %150
  %152 = icmp eq i64 %151, 9223372036854775804
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %154 unwind label %193

154:                                              ; preds = %153
  unreachable

155:                                              ; preds = %148
  %156 = ashr exact i64 %151, 2
  %157 = tail call i64 @llvm.umax.i64(i64 %156, i64 1)
  %158 = add i64 %157, %156
  %159 = icmp ult i64 %158, %156
  %160 = icmp ugt i64 %158, 2305843009213693951
  %161 = or i1 %159, %160
  %162 = select i1 %161, i64 2305843009213693951, i64 %158
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %155
  %165 = shl nuw nsw i64 %162, 2
  %166 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %165) #21
          to label %167 unwind label %191

167:                                              ; preds = %164, %155
  %168 = phi ptr [ null, %155 ], [ %166, %164 ]
  %169 = getelementptr inbounds i32, ptr %168, i64 %156
  store i32 %144, ptr %169, align 4, !tbaa !22
  %170 = icmp sgt i64 %151, 4
  br i1 %170, label %171, label %172, !prof !23

171:                                              ; preds = %167
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %168, ptr align 4 %141, i64 %151, i1 false)
  br label %177

172:                                              ; preds = %167
  %173 = icmp eq i64 %151, 4
  br i1 %173, label %174, label %177

174:                                              ; preds = %172
  %175 = load i32, ptr %141, align 4, !tbaa !22
  store i32 %175, ptr %168, align 4, !tbaa !22
  %176 = getelementptr inbounds i32, ptr %169, i64 1
  br label %180

177:                                              ; preds = %172, %171
  %178 = getelementptr inbounds i32, ptr %169, i64 1
  %179 = icmp eq ptr %141, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %174, %177
  %181 = phi ptr [ %176, %174 ], [ %178, %177 ]
  tail call void @_ZdlPv(ptr noundef nonnull %141) #23
  br label %182

182:                                              ; preds = %180, %177
  %183 = phi ptr [ %178, %177 ], [ %181, %180 ]
  %184 = getelementptr inbounds i32, ptr %168, i64 %162
  br label %185

185:                                              ; preds = %182, %146
  %186 = phi ptr [ %184, %182 ], [ %143, %146 ]
  %187 = phi ptr [ %183, %182 ], [ %147, %146 ]
  %188 = phi ptr [ %168, %182 ], [ %141, %146 ]
  %189 = add nuw i32 %140, 1
  %190 = icmp eq i32 %189, %5
  br i1 %190, label %249, label %139

191:                                              ; preds = %164
  %192 = landingpad { ptr, i32 }
          cleanup
  br label %316

193:                                              ; preds = %153
  %194 = landingpad { ptr, i32 }
          cleanup
  br label %316

195:                                              ; preds = %74
  %196 = sub i32 %75, %76
  %197 = icmp eq ptr %78, %79
  br i1 %197, label %200, label %198

198:                                              ; preds = %195
  store i32 %196, ptr %78, align 4, !tbaa !22
  %199 = getelementptr inbounds i32, ptr %78, i64 1
  br label %241

200:                                              ; preds = %195
  %201 = ptrtoint ptr %78 to i64
  %202 = ptrtoint ptr %77 to i64
  %203 = sub i64 %201, %202
  %204 = icmp eq i64 %203, 9223372036854775804
  br i1 %204, label %205, label %207

205:                                              ; preds = %200
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %206 unwind label %239

206:                                              ; preds = %205
  unreachable

207:                                              ; preds = %200
  %208 = ashr exact i64 %203, 2
  %209 = tail call i64 @llvm.umax.i64(i64 %208, i64 1)
  %210 = add i64 %209, %208
  %211 = icmp ult i64 %210, %208
  %212 = icmp ugt i64 %210, 2305843009213693951
  %213 = or i1 %211, %212
  %214 = select i1 %213, i64 2305843009213693951, i64 %210
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %207
  %217 = shl nuw nsw i64 %214, 2
  %218 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %217) #21
          to label %219 unwind label %237

219:                                              ; preds = %216, %207
  %220 = phi ptr [ null, %207 ], [ %218, %216 ]
  %221 = getelementptr inbounds i32, ptr %220, i64 %208
  store i32 %196, ptr %221, align 4, !tbaa !22
  %222 = icmp sgt i64 %203, 4
  br i1 %222, label %223, label %224, !prof !23

223:                                              ; preds = %219
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %220, ptr align 4 %77, i64 %203, i1 false)
  br label %229

224:                                              ; preds = %219
  %225 = icmp eq i64 %203, 4
  br i1 %225, label %226, label %229

226:                                              ; preds = %224
  %227 = load i32, ptr %77, align 4, !tbaa !22
  store i32 %227, ptr %220, align 4, !tbaa !22
  %228 = getelementptr inbounds i32, ptr %221, i64 1
  br label %232

229:                                              ; preds = %224, %223
  %230 = getelementptr inbounds i32, ptr %221, i64 1
  %231 = icmp eq ptr %77, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %226, %229
  %233 = phi ptr [ %228, %226 ], [ %230, %229 ]
  tail call void @_ZdlPv(ptr noundef nonnull %77) #23
  br label %234

234:                                              ; preds = %232, %229
  %235 = phi ptr [ %230, %229 ], [ %233, %232 ]
  %236 = getelementptr inbounds i32, ptr %220, i64 %214
  br label %241

237:                                              ; preds = %216
  %238 = landingpad { ptr, i32 }
          cleanup
  br label %316

239:                                              ; preds = %205
  %240 = landingpad { ptr, i32 }
          cleanup
  br label %316

241:                                              ; preds = %198, %234, %124
  %242 = phi ptr [ %129, %124 ], [ %80, %234 ], [ %80, %198 ]
  %243 = phi ptr [ %125, %124 ], [ %236, %234 ], [ %79, %198 ]
  %244 = phi ptr [ %126, %124 ], [ %235, %234 ], [ %199, %198 ]
  %245 = phi ptr [ %127, %124 ], [ %220, %234 ], [ %77, %198 ]
  %246 = phi i32 [ %128, %124 ], [ %76, %234 ], [ %76, %198 ]
  %247 = add nuw i32 %75, 1
  %248 = icmp eq i32 %247, %5
  br i1 %248, label %249, label %74

249:                                              ; preds = %241, %185, %64, %7, %132
  %250 = phi ptr [ %14, %132 ], [ %8, %7 ], [ %14, %64 ], [ %14, %185 ], [ %14, %241 ]
  %251 = phi ptr [ %127, %132 ], [ null, %7 ], [ %67, %64 ], [ %188, %185 ], [ %245, %241 ]
  %252 = load i32, ptr %4, align 8, !tbaa !5
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %261, label %254

254:                                              ; preds = %249
  %255 = load ptr, ptr %250, align 8, !tbaa !21
  %256 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %257 = load ptr, ptr %256, align 8
  %258 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %259 = load ptr, ptr %258, align 8
  %260 = zext i32 %252 to i64
  br label %265

261:                                              ; preds = %249
  %262 = icmp eq ptr %251, null
  br i1 %262, label %264, label %263

263:                                              ; preds = %312, %261
  tail call void @_ZdlPv(ptr noundef nonnull %251) #23
  br label %264

264:                                              ; preds = %261, %263
  ret void

265:                                              ; preds = %254, %312
  %266 = phi i64 [ 0, %254 ], [ %314, %312 ]
  %267 = phi ptr [ %255, %254 ], [ %313, %312 ]
  %268 = getelementptr inbounds i32, ptr %251, i64 %266
  %269 = load i32, ptr %268, align 4, !tbaa !22
  %270 = icmp eq i32 %269, -1
  %271 = getelementptr inbounds float, ptr %259, i64 %266
  br i1 %270, label %276, label %272

272:                                              ; preds = %265
  %273 = zext i32 %269 to i64
  %274 = getelementptr inbounds float, ptr %257, i64 %273
  %275 = load float, ptr %274, align 4, !tbaa !33
  store float %275, ptr %271, align 4, !tbaa !33
  br label %312

276:                                              ; preds = %265
  %277 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 0, i32 2
  %278 = load double, ptr %277, align 8, !tbaa !48
  %279 = fptrunc double %278 to float
  store float %279, ptr %271, align 4, !tbaa !33
  %280 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 0, i32 1
  %281 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %282 = load ptr, ptr %281, align 8, !tbaa !31
  %283 = load ptr, ptr %280, align 8, !tbaa !32
  %284 = ptrtoint ptr %282 to i64
  %285 = ptrtoint ptr %283 to i64
  %286 = sub i64 %284, %285
  %287 = ashr exact i64 %286, 4
  %288 = icmp eq ptr %282, %283
  br i1 %288, label %289, label %291

289:                                              ; preds = %291, %276
  %290 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 1
  br label %312

291:                                              ; preds = %276, %291
  %292 = phi float [ %308, %291 ], [ %279, %276 ]
  %293 = phi i64 [ %310, %291 ], [ 0, %276 ]
  %294 = phi i32 [ %309, %291 ], [ 0, %276 ]
  %295 = getelementptr inbounds %"struct.std::pair", ptr %283, i64 %293
  %296 = load i32, ptr %295, align 8, !tbaa !37
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds i32, ptr %251, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !22
  %300 = zext i32 %299 to i64
  %301 = getelementptr inbounds float, ptr %257, i64 %300
  %302 = load float, ptr %301, align 4, !tbaa !33
  %303 = fpext float %302 to double
  %304 = getelementptr inbounds %"struct.std::pair", ptr %283, i64 %293, i32 1
  %305 = load double, ptr %304, align 8, !tbaa !35
  %306 = fpext float %292 to double
  %307 = tail call double @llvm.fmuladd.f64(double %303, double %305, double %306)
  %308 = fptrunc double %307 to float
  store float %308, ptr %271, align 4, !tbaa !33
  %309 = add i32 %294, 1
  %310 = zext i32 %309 to i64
  %311 = icmp ugt i64 %287, %310
  br i1 %311, label %291, label %289

312:                                              ; preds = %272, %289
  %313 = phi ptr [ %290, %289 ], [ %267, %272 ]
  %314 = add nuw nsw i64 %266, 1
  %315 = icmp eq i64 %314, %260
  br i1 %315, label %263, label %265

316:                                              ; preds = %237, %239, %191, %193, %135, %137, %70, %72
  %317 = phi ptr [ %21, %70 ], [ %21, %72 ], [ %77, %135 ], [ %77, %137 ], [ %141, %191 ], [ %141, %193 ], [ %77, %237 ], [ %77, %239 ]
  %318 = phi { ptr, i32 } [ %71, %70 ], [ %73, %72 ], [ %136, %135 ], [ %138, %137 ], [ %192, %191 ], [ %194, %193 ], [ %238, %237 ], [ %240, %239 ]
  %319 = icmp eq ptr %317, null
  br i1 %319, label %321, label %320

320:                                              ; preds = %316
  tail call void @_ZdlPv(ptr noundef nonnull %317) #23
  br label %321

321:                                              ; preds = %320, %316
  resume { ptr, i32 } %318
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix10distributeINS_6VectorIfEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %48, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8
  br label %11

11:                                               ; preds = %8, %24
  %12 = phi ptr [ %4, %8 ], [ %30, %24 ]
  %13 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 0, i32 2
  %14 = load double, ptr %13, align 8, !tbaa !48
  %15 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !31
  %18 = load ptr, ptr %15, align 8, !tbaa !32
  %19 = ptrtoint ptr %17 to i64
  %20 = ptrtoint ptr %18 to i64
  %21 = sub i64 %19, %20
  %22 = ashr exact i64 %21, 4
  %23 = icmp eq ptr %17, %18
  br i1 %23, label %24, label %32

24:                                               ; preds = %32, %11
  %25 = phi double [ %14, %11 ], [ %44, %32 ]
  %26 = fptrunc double %25 to float
  %27 = load i32, ptr %12, align 8, !tbaa !24
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds float, ptr %10, i64 %28
  store float %26, ptr %29, align 4, !tbaa !33
  %30 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 1
  %31 = icmp eq ptr %30, %6
  br i1 %31, label %48, label %11

32:                                               ; preds = %11, %32
  %33 = phi i64 [ %46, %32 ], [ 0, %11 ]
  %34 = phi i32 [ %45, %32 ], [ 0, %11 ]
  %35 = phi double [ %44, %32 ], [ %14, %11 ]
  %36 = getelementptr inbounds %"struct.std::pair", ptr %18, i64 %33
  %37 = load i32, ptr %36, align 8, !tbaa !37
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds float, ptr %10, i64 %38
  %40 = load float, ptr %39, align 4, !tbaa !33
  %41 = fpext float %40 to double
  %42 = getelementptr inbounds %"struct.std::pair", ptr %18, i64 %33, i32 1
  %43 = load double, ptr %42, align 8, !tbaa !35
  %44 = tail call double @llvm.fmuladd.f64(double %41, double %43, double %35)
  %45 = add i32 %34, 1
  %46 = zext i32 %45 to i64
  %47 = icmp ugt i64 %22, %46
  br i1 %47, label %32, label %24

48:                                               ; preds = %24, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseINS_6VectorIdEEEEvRKT_RS4_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !53
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %249

9:                                                ; preds = %3
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  %12 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %11) #21
  %13 = getelementptr inbounds i32, ptr %12, i64 %10
  %14 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !21
  %16 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !21
  %18 = icmp eq ptr %15, %17
  br i1 %18, label %19, label %74

19:                                               ; preds = %9, %64
  %20 = phi i32 [ %68, %64 ], [ 0, %9 ]
  %21 = phi ptr [ %67, %64 ], [ %12, %9 ]
  %22 = phi ptr [ %66, %64 ], [ %12, %9 ]
  %23 = phi ptr [ %65, %64 ], [ %13, %9 ]
  %24 = icmp eq ptr %22, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  store i32 %20, ptr %22, align 4, !tbaa !22
  %26 = getelementptr inbounds i32, ptr %22, i64 1
  br label %64

27:                                               ; preds = %19
  %28 = ptrtoint ptr %22 to i64
  %29 = ptrtoint ptr %21 to i64
  %30 = sub i64 %28, %29
  %31 = icmp eq i64 %30, 9223372036854775804
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %33 unwind label %72

33:                                               ; preds = %32
  unreachable

34:                                               ; preds = %27
  %35 = ashr exact i64 %30, 2
  %36 = tail call i64 @llvm.umax.i64(i64 %35, i64 1)
  %37 = add i64 %36, %35
  %38 = icmp ult i64 %37, %35
  %39 = icmp ugt i64 %37, 2305843009213693951
  %40 = or i1 %38, %39
  %41 = select i1 %40, i64 2305843009213693951, i64 %37
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %34
  %44 = shl nuw nsw i64 %41, 2
  %45 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %44) #21
          to label %46 unwind label %70

46:                                               ; preds = %43, %34
  %47 = phi ptr [ null, %34 ], [ %45, %43 ]
  %48 = getelementptr inbounds i32, ptr %47, i64 %35
  store i32 %20, ptr %48, align 4, !tbaa !22
  %49 = icmp sgt i64 %30, 4
  br i1 %49, label %50, label %51, !prof !23

50:                                               ; preds = %46
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %47, ptr align 4 %21, i64 %30, i1 false)
  br label %56

51:                                               ; preds = %46
  %52 = icmp eq i64 %30, 4
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = load i32, ptr %21, align 4, !tbaa !22
  store i32 %54, ptr %47, align 4, !tbaa !22
  %55 = getelementptr inbounds i32, ptr %48, i64 1
  br label %59

56:                                               ; preds = %51, %50
  %57 = getelementptr inbounds i32, ptr %48, i64 1
  %58 = icmp eq ptr %21, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53, %56
  %60 = phi ptr [ %55, %53 ], [ %57, %56 ]
  tail call void @_ZdlPv(ptr noundef nonnull %21) #23
  br label %61

61:                                               ; preds = %59, %56
  %62 = phi ptr [ %57, %56 ], [ %60, %59 ]
  %63 = getelementptr inbounds i32, ptr %47, i64 %41
  br label %64

64:                                               ; preds = %61, %25
  %65 = phi ptr [ %63, %61 ], [ %23, %25 ]
  %66 = phi ptr [ %62, %61 ], [ %26, %25 ]
  %67 = phi ptr [ %47, %61 ], [ %21, %25 ]
  %68 = add nuw i32 %20, 1
  %69 = icmp eq i32 %68, %5
  br i1 %69, label %249, label %19

70:                                               ; preds = %43
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %314

72:                                               ; preds = %32
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %314

74:                                               ; preds = %9, %241
  %75 = phi i32 [ %247, %241 ], [ 0, %9 ]
  %76 = phi i32 [ %246, %241 ], [ 0, %9 ]
  %77 = phi ptr [ %245, %241 ], [ %12, %9 ]
  %78 = phi ptr [ %244, %241 ], [ %12, %9 ]
  %79 = phi ptr [ %243, %241 ], [ %13, %9 ]
  %80 = phi ptr [ %242, %241 ], [ %15, %9 ]
  %81 = load i32, ptr %80, align 8, !tbaa !24
  %82 = icmp eq i32 %75, %81
  br i1 %82, label %83, label %195

83:                                               ; preds = %74
  %84 = icmp eq ptr %78, %79
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  store i32 -1, ptr %78, align 4, !tbaa !22
  %86 = getelementptr inbounds i32, ptr %78, i64 1
  br label %124

87:                                               ; preds = %83
  %88 = ptrtoint ptr %78 to i64
  %89 = ptrtoint ptr %77 to i64
  %90 = sub i64 %88, %89
  %91 = icmp eq i64 %90, 9223372036854775804
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %93 unwind label %137

93:                                               ; preds = %92
  unreachable

94:                                               ; preds = %87
  %95 = ashr exact i64 %90, 2
  %96 = tail call i64 @llvm.umax.i64(i64 %95, i64 1)
  %97 = add i64 %96, %95
  %98 = icmp ult i64 %97, %95
  %99 = icmp ugt i64 %97, 2305843009213693951
  %100 = or i1 %98, %99
  %101 = select i1 %100, i64 2305843009213693951, i64 %97
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %94
  %104 = shl nuw nsw i64 %101, 2
  %105 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %104) #21
          to label %106 unwind label %135

106:                                              ; preds = %103, %94
  %107 = phi ptr [ null, %94 ], [ %105, %103 ]
  %108 = getelementptr inbounds i32, ptr %107, i64 %95
  store i32 -1, ptr %108, align 4, !tbaa !22
  %109 = icmp sgt i64 %90, 4
  br i1 %109, label %110, label %111, !prof !23

110:                                              ; preds = %106
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %107, ptr align 4 %77, i64 %90, i1 false)
  br label %116

111:                                              ; preds = %106
  %112 = icmp eq i64 %90, 4
  br i1 %112, label %113, label %116

113:                                              ; preds = %111
  %114 = load i32, ptr %77, align 4, !tbaa !22
  store i32 %114, ptr %107, align 4, !tbaa !22
  %115 = getelementptr inbounds i32, ptr %108, i64 1
  br label %119

116:                                              ; preds = %111, %110
  %117 = getelementptr inbounds i32, ptr %108, i64 1
  %118 = icmp eq ptr %77, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %113, %116
  %120 = phi ptr [ %115, %113 ], [ %117, %116 ]
  tail call void @_ZdlPv(ptr noundef nonnull %77) #23
  br label %121

121:                                              ; preds = %119, %116
  %122 = phi ptr [ %117, %116 ], [ %120, %119 ]
  %123 = getelementptr inbounds i32, ptr %107, i64 %101
  br label %124

124:                                              ; preds = %85, %121
  %125 = phi ptr [ %123, %121 ], [ %79, %85 ]
  %126 = phi ptr [ %122, %121 ], [ %86, %85 ]
  %127 = phi ptr [ %107, %121 ], [ %77, %85 ]
  %128 = add i32 %76, 1
  %129 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %80, i64 1
  %130 = load ptr, ptr %16, align 8, !tbaa !21
  %131 = icmp eq ptr %129, %130
  br i1 %131, label %132, label %241

132:                                              ; preds = %124
  %133 = add i32 %75, 1
  %134 = icmp ult i32 %133, %5
  br i1 %134, label %139, label %249

135:                                              ; preds = %103
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %314

137:                                              ; preds = %92
  %138 = landingpad { ptr, i32 }
          cleanup
  br label %314

139:                                              ; preds = %132, %185
  %140 = phi i32 [ %189, %185 ], [ %133, %132 ]
  %141 = phi ptr [ %188, %185 ], [ %127, %132 ]
  %142 = phi ptr [ %187, %185 ], [ %126, %132 ]
  %143 = phi ptr [ %186, %185 ], [ %125, %132 ]
  %144 = sub i32 %140, %128
  %145 = icmp eq ptr %142, %143
  br i1 %145, label %148, label %146

146:                                              ; preds = %139
  store i32 %144, ptr %142, align 4, !tbaa !22
  %147 = getelementptr inbounds i32, ptr %142, i64 1
  br label %185

148:                                              ; preds = %139
  %149 = ptrtoint ptr %142 to i64
  %150 = ptrtoint ptr %141 to i64
  %151 = sub i64 %149, %150
  %152 = icmp eq i64 %151, 9223372036854775804
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %154 unwind label %193

154:                                              ; preds = %153
  unreachable

155:                                              ; preds = %148
  %156 = ashr exact i64 %151, 2
  %157 = tail call i64 @llvm.umax.i64(i64 %156, i64 1)
  %158 = add i64 %157, %156
  %159 = icmp ult i64 %158, %156
  %160 = icmp ugt i64 %158, 2305843009213693951
  %161 = or i1 %159, %160
  %162 = select i1 %161, i64 2305843009213693951, i64 %158
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %155
  %165 = shl nuw nsw i64 %162, 2
  %166 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %165) #21
          to label %167 unwind label %191

167:                                              ; preds = %164, %155
  %168 = phi ptr [ null, %155 ], [ %166, %164 ]
  %169 = getelementptr inbounds i32, ptr %168, i64 %156
  store i32 %144, ptr %169, align 4, !tbaa !22
  %170 = icmp sgt i64 %151, 4
  br i1 %170, label %171, label %172, !prof !23

171:                                              ; preds = %167
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %168, ptr align 4 %141, i64 %151, i1 false)
  br label %177

172:                                              ; preds = %167
  %173 = icmp eq i64 %151, 4
  br i1 %173, label %174, label %177

174:                                              ; preds = %172
  %175 = load i32, ptr %141, align 4, !tbaa !22
  store i32 %175, ptr %168, align 4, !tbaa !22
  %176 = getelementptr inbounds i32, ptr %169, i64 1
  br label %180

177:                                              ; preds = %172, %171
  %178 = getelementptr inbounds i32, ptr %169, i64 1
  %179 = icmp eq ptr %141, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %174, %177
  %181 = phi ptr [ %176, %174 ], [ %178, %177 ]
  tail call void @_ZdlPv(ptr noundef nonnull %141) #23
  br label %182

182:                                              ; preds = %180, %177
  %183 = phi ptr [ %178, %177 ], [ %181, %180 ]
  %184 = getelementptr inbounds i32, ptr %168, i64 %162
  br label %185

185:                                              ; preds = %182, %146
  %186 = phi ptr [ %184, %182 ], [ %143, %146 ]
  %187 = phi ptr [ %183, %182 ], [ %147, %146 ]
  %188 = phi ptr [ %168, %182 ], [ %141, %146 ]
  %189 = add nuw i32 %140, 1
  %190 = icmp eq i32 %189, %5
  br i1 %190, label %249, label %139

191:                                              ; preds = %164
  %192 = landingpad { ptr, i32 }
          cleanup
  br label %314

193:                                              ; preds = %153
  %194 = landingpad { ptr, i32 }
          cleanup
  br label %314

195:                                              ; preds = %74
  %196 = sub i32 %75, %76
  %197 = icmp eq ptr %78, %79
  br i1 %197, label %200, label %198

198:                                              ; preds = %195
  store i32 %196, ptr %78, align 4, !tbaa !22
  %199 = getelementptr inbounds i32, ptr %78, i64 1
  br label %241

200:                                              ; preds = %195
  %201 = ptrtoint ptr %78 to i64
  %202 = ptrtoint ptr %77 to i64
  %203 = sub i64 %201, %202
  %204 = icmp eq i64 %203, 9223372036854775804
  br i1 %204, label %205, label %207

205:                                              ; preds = %200
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %206 unwind label %239

206:                                              ; preds = %205
  unreachable

207:                                              ; preds = %200
  %208 = ashr exact i64 %203, 2
  %209 = tail call i64 @llvm.umax.i64(i64 %208, i64 1)
  %210 = add i64 %209, %208
  %211 = icmp ult i64 %210, %208
  %212 = icmp ugt i64 %210, 2305843009213693951
  %213 = or i1 %211, %212
  %214 = select i1 %213, i64 2305843009213693951, i64 %210
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %207
  %217 = shl nuw nsw i64 %214, 2
  %218 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %217) #21
          to label %219 unwind label %237

219:                                              ; preds = %216, %207
  %220 = phi ptr [ null, %207 ], [ %218, %216 ]
  %221 = getelementptr inbounds i32, ptr %220, i64 %208
  store i32 %196, ptr %221, align 4, !tbaa !22
  %222 = icmp sgt i64 %203, 4
  br i1 %222, label %223, label %224, !prof !23

223:                                              ; preds = %219
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %220, ptr align 4 %77, i64 %203, i1 false)
  br label %229

224:                                              ; preds = %219
  %225 = icmp eq i64 %203, 4
  br i1 %225, label %226, label %229

226:                                              ; preds = %224
  %227 = load i32, ptr %77, align 4, !tbaa !22
  store i32 %227, ptr %220, align 4, !tbaa !22
  %228 = getelementptr inbounds i32, ptr %221, i64 1
  br label %232

229:                                              ; preds = %224, %223
  %230 = getelementptr inbounds i32, ptr %221, i64 1
  %231 = icmp eq ptr %77, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %226, %229
  %233 = phi ptr [ %228, %226 ], [ %230, %229 ]
  tail call void @_ZdlPv(ptr noundef nonnull %77) #23
  br label %234

234:                                              ; preds = %232, %229
  %235 = phi ptr [ %230, %229 ], [ %233, %232 ]
  %236 = getelementptr inbounds i32, ptr %220, i64 %214
  br label %241

237:                                              ; preds = %216
  %238 = landingpad { ptr, i32 }
          cleanup
  br label %314

239:                                              ; preds = %205
  %240 = landingpad { ptr, i32 }
          cleanup
  br label %314

241:                                              ; preds = %198, %234, %124
  %242 = phi ptr [ %129, %124 ], [ %80, %234 ], [ %80, %198 ]
  %243 = phi ptr [ %125, %124 ], [ %236, %234 ], [ %79, %198 ]
  %244 = phi ptr [ %126, %124 ], [ %235, %234 ], [ %199, %198 ]
  %245 = phi ptr [ %127, %124 ], [ %220, %234 ], [ %77, %198 ]
  %246 = phi i32 [ %128, %124 ], [ %76, %234 ], [ %76, %198 ]
  %247 = add nuw i32 %75, 1
  %248 = icmp eq i32 %247, %5
  br i1 %248, label %249, label %74

249:                                              ; preds = %241, %185, %64, %7, %132
  %250 = phi ptr [ %14, %132 ], [ %8, %7 ], [ %14, %64 ], [ %14, %185 ], [ %14, %241 ]
  %251 = phi ptr [ %127, %132 ], [ null, %7 ], [ %67, %64 ], [ %188, %185 ], [ %245, %241 ]
  %252 = load i32, ptr %4, align 8, !tbaa !53
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %261, label %254

254:                                              ; preds = %249
  %255 = load ptr, ptr %250, align 8, !tbaa !21
  %256 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 3
  %257 = load ptr, ptr %256, align 8
  %258 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %259 = load ptr, ptr %258, align 8
  %260 = zext i32 %252 to i64
  br label %265

261:                                              ; preds = %249
  %262 = icmp eq ptr %251, null
  br i1 %262, label %264, label %263

263:                                              ; preds = %310, %261
  tail call void @_ZdlPv(ptr noundef nonnull %251) #23
  br label %264

264:                                              ; preds = %261, %263
  ret void

265:                                              ; preds = %254, %310
  %266 = phi i64 [ 0, %254 ], [ %312, %310 ]
  %267 = phi ptr [ %255, %254 ], [ %311, %310 ]
  %268 = getelementptr inbounds i32, ptr %251, i64 %266
  %269 = load i32, ptr %268, align 4, !tbaa !22
  %270 = icmp eq i32 %269, -1
  br i1 %270, label %271, label %283

271:                                              ; preds = %265
  %272 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 0, i32 1
  %273 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %274 = load ptr, ptr %273, align 8, !tbaa !31
  %275 = load ptr, ptr %272, align 8, !tbaa !32
  %276 = ptrtoint ptr %274 to i64
  %277 = ptrtoint ptr %275 to i64
  %278 = sub i64 %276, %277
  %279 = ashr exact i64 %278, 4
  %280 = icmp eq ptr %274, %275
  br i1 %280, label %290, label %281

281:                                              ; preds = %271
  %282 = getelementptr inbounds double, ptr %257, i64 %266
  br label %292

283:                                              ; preds = %265
  %284 = getelementptr inbounds double, ptr %257, i64 %266
  %285 = load double, ptr %284, align 8, !tbaa !52
  %286 = zext i32 %269 to i64
  %287 = getelementptr inbounds double, ptr %259, i64 %286
  %288 = load double, ptr %287, align 8, !tbaa !52
  %289 = fadd double %285, %288
  store double %289, ptr %287, align 8, !tbaa !52
  br label %310

290:                                              ; preds = %292, %271
  %291 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 1
  br label %310

292:                                              ; preds = %281, %292
  %293 = phi i64 [ 0, %281 ], [ %308, %292 ]
  %294 = phi i32 [ 0, %281 ], [ %307, %292 ]
  %295 = load double, ptr %282, align 8, !tbaa !52
  %296 = getelementptr inbounds %"struct.std::pair", ptr %275, i64 %293
  %297 = getelementptr inbounds %"struct.std::pair", ptr %275, i64 %293, i32 1
  %298 = load double, ptr %297, align 8, !tbaa !35
  %299 = load i32, ptr %296, align 8, !tbaa !37
  %300 = zext i32 %299 to i64
  %301 = getelementptr inbounds i32, ptr %251, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !22
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds double, ptr %259, i64 %303
  %305 = load double, ptr %304, align 8, !tbaa !52
  %306 = tail call double @llvm.fmuladd.f64(double %295, double %298, double %305)
  store double %306, ptr %304, align 8, !tbaa !52
  %307 = add i32 %294, 1
  %308 = zext i32 %307 to i64
  %309 = icmp eq i64 %279, %308
  br i1 %309, label %290, label %292

310:                                              ; preds = %283, %290
  %311 = phi ptr [ %291, %290 ], [ %267, %283 ]
  %312 = add nuw nsw i64 %266, 1
  %313 = icmp eq i64 %312, %260
  br i1 %313, label %263, label %265

314:                                              ; preds = %237, %239, %191, %193, %135, %137, %70, %72
  %315 = phi ptr [ %21, %70 ], [ %21, %72 ], [ %77, %135 ], [ %77, %137 ], [ %141, %191 ], [ %141, %193 ], [ %77, %237 ], [ %77, %239 ]
  %316 = phi { ptr, i32 } [ %71, %70 ], [ %73, %72 ], [ %136, %135 ], [ %138, %137 ], [ %192, %191 ], [ %194, %193 ], [ %238, %237 ], [ %240, %239 ]
  %317 = icmp eq ptr %315, null
  br i1 %317, label %319, label %318

318:                                              ; preds = %314
  tail call void @_ZdlPv(ptr noundef nonnull %315) #23
  br label %319

319:                                              ; preds = %318, %314
  resume { ptr, i32 } %316
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseINS_6VectorIdEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %45, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8
  br label %11

11:                                               ; preds = %8, %26
  %12 = phi ptr [ %4, %8 ], [ %28, %26 ]
  %13 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !31
  %16 = load ptr, ptr %13, align 8, !tbaa !32
  %17 = ptrtoint ptr %15 to i64
  %18 = ptrtoint ptr %16 to i64
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp eq ptr %15, %16
  %22 = load i32, ptr %12, align 8, !tbaa !24
  %23 = zext i32 %22 to i64
  br i1 %21, label %26, label %24

24:                                               ; preds = %11
  %25 = getelementptr inbounds double, ptr %10, i64 %23
  br label %30

26:                                               ; preds = %30, %11
  %27 = getelementptr inbounds double, ptr %10, i64 %23
  store double 0.000000e+00, ptr %27, align 8, !tbaa !52
  %28 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 1
  %29 = icmp eq ptr %28, %6
  br i1 %29, label %45, label %11

30:                                               ; preds = %24, %30
  %31 = phi i64 [ 0, %24 ], [ %43, %30 ]
  %32 = phi i32 [ 0, %24 ], [ %42, %30 ]
  %33 = load double, ptr %25, align 8, !tbaa !52
  %34 = getelementptr inbounds %"struct.std::pair", ptr %16, i64 %31
  %35 = getelementptr inbounds %"struct.std::pair", ptr %16, i64 %31, i32 1
  %36 = load double, ptr %35, align 8, !tbaa !35
  %37 = load i32, ptr %34, align 8, !tbaa !37
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds double, ptr %10, i64 %38
  %40 = load double, ptr %39, align 8, !tbaa !52
  %41 = tail call double @llvm.fmuladd.f64(double %33, double %36, double %40)
  store double %41, ptr %39, align 8, !tbaa !52
  %42 = add i32 %32, 1
  %43 = zext i32 %42 to i64
  %44 = icmp eq i64 %20, %43
  br i1 %44, label %26, label %30

45:                                               ; preds = %26, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIfNS_6VectorIdEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !53
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.dealii::Vector.35", ptr %4, i64 0, i32 1
  %10 = load i32, ptr %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %8, i1 %11, i1 false
  %13 = tail call noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %13, i64 0, i32 2
  %15 = load i32, ptr %14, align 4, !tbaa !38
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %5
  %18 = zext i32 %15 to i64
  %19 = shl nuw nsw i64 %18, 2
  %20 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #21
  %21 = getelementptr inbounds i32, ptr %20, i64 %18
  %22 = load i32, ptr %14, align 4, !tbaa !38
  %23 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !21
  %25 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !21
  %27 = icmp eq ptr %24, %26
  %28 = icmp eq i32 %22, 0
  br i1 %27, label %32, label %31

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %263

31:                                               ; preds = %17
  br i1 %28, label %263, label %88

32:                                               ; preds = %17
  br i1 %28, label %263, label %33

33:                                               ; preds = %32, %78
  %34 = phi i32 [ %82, %78 ], [ 0, %32 ]
  %35 = phi ptr [ %81, %78 ], [ %20, %32 ]
  %36 = phi ptr [ %80, %78 ], [ %20, %32 ]
  %37 = phi ptr [ %79, %78 ], [ %21, %32 ]
  %38 = icmp eq ptr %36, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  store i32 %34, ptr %36, align 4, !tbaa !22
  %40 = getelementptr inbounds i32, ptr %36, i64 1
  br label %78

41:                                               ; preds = %33
  %42 = ptrtoint ptr %36 to i64
  %43 = ptrtoint ptr %35 to i64
  %44 = sub i64 %42, %43
  %45 = icmp eq i64 %44, 9223372036854775804
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %47 unwind label %86

47:                                               ; preds = %46
  unreachable

48:                                               ; preds = %41
  %49 = ashr exact i64 %44, 2
  %50 = tail call i64 @llvm.umax.i64(i64 %49, i64 1)
  %51 = add i64 %50, %49
  %52 = icmp ult i64 %51, %49
  %53 = icmp ugt i64 %51, 2305843009213693951
  %54 = or i1 %52, %53
  %55 = select i1 %54, i64 2305843009213693951, i64 %51
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %48
  %58 = shl nuw nsw i64 %55, 2
  %59 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %58) #21
          to label %60 unwind label %84

60:                                               ; preds = %57, %48
  %61 = phi ptr [ null, %48 ], [ %59, %57 ]
  %62 = getelementptr inbounds i32, ptr %61, i64 %49
  store i32 %34, ptr %62, align 4, !tbaa !22
  %63 = icmp sgt i64 %44, 4
  br i1 %63, label %64, label %65, !prof !23

64:                                               ; preds = %60
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %61, ptr align 4 %35, i64 %44, i1 false)
  br label %70

65:                                               ; preds = %60
  %66 = icmp eq i64 %44, 4
  br i1 %66, label %67, label %70

67:                                               ; preds = %65
  %68 = load i32, ptr %35, align 4, !tbaa !22
  store i32 %68, ptr %61, align 4, !tbaa !22
  %69 = getelementptr inbounds i32, ptr %62, i64 1
  br label %73

70:                                               ; preds = %65, %64
  %71 = getelementptr inbounds i32, ptr %62, i64 1
  %72 = icmp eq ptr %35, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %67, %70
  %74 = phi ptr [ %69, %67 ], [ %71, %70 ]
  tail call void @_ZdlPv(ptr noundef nonnull %35) #23
  br label %75

75:                                               ; preds = %73, %70
  %76 = phi ptr [ %71, %70 ], [ %74, %73 ]
  %77 = getelementptr inbounds i32, ptr %61, i64 %55
  br label %78

78:                                               ; preds = %75, %39
  %79 = phi ptr [ %77, %75 ], [ %37, %39 ]
  %80 = phi ptr [ %76, %75 ], [ %40, %39 ]
  %81 = phi ptr [ %61, %75 ], [ %35, %39 ]
  %82 = add nuw i32 %34, 1
  %83 = icmp eq i32 %82, %22
  br i1 %83, label %263, label %33

84:                                               ; preds = %57
  %85 = landingpad { ptr, i32 }
          cleanup
  br label %653

86:                                               ; preds = %46
  %87 = landingpad { ptr, i32 }
          cleanup
  br label %653

88:                                               ; preds = %31, %255
  %89 = phi i32 [ %261, %255 ], [ 0, %31 ]
  %90 = phi i32 [ %260, %255 ], [ 0, %31 ]
  %91 = phi ptr [ %259, %255 ], [ %20, %31 ]
  %92 = phi ptr [ %258, %255 ], [ %20, %31 ]
  %93 = phi ptr [ %257, %255 ], [ %21, %31 ]
  %94 = phi ptr [ %256, %255 ], [ %24, %31 ]
  %95 = load i32, ptr %94, align 8, !tbaa !24
  %96 = icmp eq i32 %89, %95
  br i1 %96, label %97, label %209

97:                                               ; preds = %88
  %98 = icmp eq ptr %92, %93
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  store i32 -1, ptr %92, align 4, !tbaa !22
  %100 = getelementptr inbounds i32, ptr %92, i64 1
  br label %138

101:                                              ; preds = %97
  %102 = ptrtoint ptr %92 to i64
  %103 = ptrtoint ptr %91 to i64
  %104 = sub i64 %102, %103
  %105 = icmp eq i64 %104, 9223372036854775804
  br i1 %105, label %106, label %108

106:                                              ; preds = %101
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %107 unwind label %151

107:                                              ; preds = %106
  unreachable

108:                                              ; preds = %101
  %109 = ashr exact i64 %104, 2
  %110 = tail call i64 @llvm.umax.i64(i64 %109, i64 1)
  %111 = add i64 %110, %109
  %112 = icmp ult i64 %111, %109
  %113 = icmp ugt i64 %111, 2305843009213693951
  %114 = or i1 %112, %113
  %115 = select i1 %114, i64 2305843009213693951, i64 %111
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %108
  %118 = shl nuw nsw i64 %115, 2
  %119 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %118) #21
          to label %120 unwind label %149

120:                                              ; preds = %117, %108
  %121 = phi ptr [ null, %108 ], [ %119, %117 ]
  %122 = getelementptr inbounds i32, ptr %121, i64 %109
  store i32 -1, ptr %122, align 4, !tbaa !22
  %123 = icmp sgt i64 %104, 4
  br i1 %123, label %124, label %125, !prof !23

124:                                              ; preds = %120
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %121, ptr align 4 %91, i64 %104, i1 false)
  br label %130

125:                                              ; preds = %120
  %126 = icmp eq i64 %104, 4
  br i1 %126, label %127, label %130

127:                                              ; preds = %125
  %128 = load i32, ptr %91, align 4, !tbaa !22
  store i32 %128, ptr %121, align 4, !tbaa !22
  %129 = getelementptr inbounds i32, ptr %122, i64 1
  br label %133

130:                                              ; preds = %125, %124
  %131 = getelementptr inbounds i32, ptr %122, i64 1
  %132 = icmp eq ptr %91, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %127, %130
  %134 = phi ptr [ %129, %127 ], [ %131, %130 ]
  tail call void @_ZdlPv(ptr noundef nonnull %91) #23
  br label %135

135:                                              ; preds = %133, %130
  %136 = phi ptr [ %131, %130 ], [ %134, %133 ]
  %137 = getelementptr inbounds i32, ptr %121, i64 %115
  br label %138

138:                                              ; preds = %99, %135
  %139 = phi ptr [ %137, %135 ], [ %93, %99 ]
  %140 = phi ptr [ %136, %135 ], [ %100, %99 ]
  %141 = phi ptr [ %121, %135 ], [ %91, %99 ]
  %142 = add i32 %90, 1
  %143 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %94, i64 1
  %144 = load ptr, ptr %25, align 8, !tbaa !21
  %145 = icmp eq ptr %143, %144
  br i1 %145, label %146, label %255

146:                                              ; preds = %138
  %147 = add i32 %89, 1
  %148 = icmp ult i32 %147, %22
  br i1 %148, label %153, label %263

149:                                              ; preds = %117
  %150 = landingpad { ptr, i32 }
          cleanup
  br label %653

151:                                              ; preds = %106
  %152 = landingpad { ptr, i32 }
          cleanup
  br label %653

153:                                              ; preds = %146, %199
  %154 = phi i32 [ %203, %199 ], [ %147, %146 ]
  %155 = phi ptr [ %202, %199 ], [ %141, %146 ]
  %156 = phi ptr [ %201, %199 ], [ %140, %146 ]
  %157 = phi ptr [ %200, %199 ], [ %139, %146 ]
  %158 = sub i32 %154, %142
  %159 = icmp eq ptr %156, %157
  br i1 %159, label %162, label %160

160:                                              ; preds = %153
  store i32 %158, ptr %156, align 4, !tbaa !22
  %161 = getelementptr inbounds i32, ptr %156, i64 1
  br label %199

162:                                              ; preds = %153
  %163 = ptrtoint ptr %156 to i64
  %164 = ptrtoint ptr %155 to i64
  %165 = sub i64 %163, %164
  %166 = icmp eq i64 %165, 9223372036854775804
  br i1 %166, label %167, label %169

167:                                              ; preds = %162
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %168 unwind label %207

168:                                              ; preds = %167
  unreachable

169:                                              ; preds = %162
  %170 = ashr exact i64 %165, 2
  %171 = tail call i64 @llvm.umax.i64(i64 %170, i64 1)
  %172 = add i64 %171, %170
  %173 = icmp ult i64 %172, %170
  %174 = icmp ugt i64 %172, 2305843009213693951
  %175 = or i1 %173, %174
  %176 = select i1 %175, i64 2305843009213693951, i64 %172
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %181, label %178

178:                                              ; preds = %169
  %179 = shl nuw nsw i64 %176, 2
  %180 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %179) #21
          to label %181 unwind label %205

181:                                              ; preds = %178, %169
  %182 = phi ptr [ null, %169 ], [ %180, %178 ]
  %183 = getelementptr inbounds i32, ptr %182, i64 %170
  store i32 %158, ptr %183, align 4, !tbaa !22
  %184 = icmp sgt i64 %165, 4
  br i1 %184, label %185, label %186, !prof !23

185:                                              ; preds = %181
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %182, ptr align 4 %155, i64 %165, i1 false)
  br label %191

186:                                              ; preds = %181
  %187 = icmp eq i64 %165, 4
  br i1 %187, label %188, label %191

188:                                              ; preds = %186
  %189 = load i32, ptr %155, align 4, !tbaa !22
  store i32 %189, ptr %182, align 4, !tbaa !22
  %190 = getelementptr inbounds i32, ptr %183, i64 1
  br label %194

191:                                              ; preds = %186, %185
  %192 = getelementptr inbounds i32, ptr %183, i64 1
  %193 = icmp eq ptr %155, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %188, %191
  %195 = phi ptr [ %190, %188 ], [ %192, %191 ]
  tail call void @_ZdlPv(ptr noundef nonnull %155) #23
  br label %196

196:                                              ; preds = %194, %191
  %197 = phi ptr [ %192, %191 ], [ %195, %194 ]
  %198 = getelementptr inbounds i32, ptr %182, i64 %176
  br label %199

199:                                              ; preds = %196, %160
  %200 = phi ptr [ %198, %196 ], [ %157, %160 ]
  %201 = phi ptr [ %197, %196 ], [ %161, %160 ]
  %202 = phi ptr [ %182, %196 ], [ %155, %160 ]
  %203 = add nuw i32 %154, 1
  %204 = icmp eq i32 %203, %22
  br i1 %204, label %263, label %153

205:                                              ; preds = %178
  %206 = landingpad { ptr, i32 }
          cleanup
  br label %653

207:                                              ; preds = %167
  %208 = landingpad { ptr, i32 }
          cleanup
  br label %653

209:                                              ; preds = %88
  %210 = sub i32 %89, %90
  %211 = icmp eq ptr %92, %93
  br i1 %211, label %214, label %212

212:                                              ; preds = %209
  store i32 %210, ptr %92, align 4, !tbaa !22
  %213 = getelementptr inbounds i32, ptr %92, i64 1
  br label %255

214:                                              ; preds = %209
  %215 = ptrtoint ptr %92 to i64
  %216 = ptrtoint ptr %91 to i64
  %217 = sub i64 %215, %216
  %218 = icmp eq i64 %217, 9223372036854775804
  br i1 %218, label %219, label %221

219:                                              ; preds = %214
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %220 unwind label %253

220:                                              ; preds = %219
  unreachable

221:                                              ; preds = %214
  %222 = ashr exact i64 %217, 2
  %223 = tail call i64 @llvm.umax.i64(i64 %222, i64 1)
  %224 = add i64 %223, %222
  %225 = icmp ult i64 %224, %222
  %226 = icmp ugt i64 %224, 2305843009213693951
  %227 = or i1 %225, %226
  %228 = select i1 %227, i64 2305843009213693951, i64 %224
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %233, label %230

230:                                              ; preds = %221
  %231 = shl nuw nsw i64 %228, 2
  %232 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %231) #21
          to label %233 unwind label %251

233:                                              ; preds = %230, %221
  %234 = phi ptr [ null, %221 ], [ %232, %230 ]
  %235 = getelementptr inbounds i32, ptr %234, i64 %222
  store i32 %210, ptr %235, align 4, !tbaa !22
  %236 = icmp sgt i64 %217, 4
  br i1 %236, label %237, label %238, !prof !23

237:                                              ; preds = %233
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %234, ptr align 4 %91, i64 %217, i1 false)
  br label %243

238:                                              ; preds = %233
  %239 = icmp eq i64 %217, 4
  br i1 %239, label %240, label %243

240:                                              ; preds = %238
  %241 = load i32, ptr %91, align 4, !tbaa !22
  store i32 %241, ptr %234, align 4, !tbaa !22
  %242 = getelementptr inbounds i32, ptr %235, i64 1
  br label %246

243:                                              ; preds = %238, %237
  %244 = getelementptr inbounds i32, ptr %235, i64 1
  %245 = icmp eq ptr %91, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %240, %243
  %247 = phi ptr [ %242, %240 ], [ %244, %243 ]
  tail call void @_ZdlPv(ptr noundef nonnull %91) #23
  br label %248

248:                                              ; preds = %246, %243
  %249 = phi ptr [ %244, %243 ], [ %247, %246 ]
  %250 = getelementptr inbounds i32, ptr %234, i64 %228
  br label %255

251:                                              ; preds = %230
  %252 = landingpad { ptr, i32 }
          cleanup
  br label %653

253:                                              ; preds = %219
  %254 = landingpad { ptr, i32 }
          cleanup
  br label %653

255:                                              ; preds = %212, %248, %138
  %256 = phi ptr [ %143, %138 ], [ %94, %248 ], [ %94, %212 ]
  %257 = phi ptr [ %139, %138 ], [ %250, %248 ], [ %93, %212 ]
  %258 = phi ptr [ %140, %138 ], [ %249, %248 ], [ %213, %212 ]
  %259 = phi ptr [ %141, %138 ], [ %234, %248 ], [ %91, %212 ]
  %260 = phi i32 [ %142, %138 ], [ %90, %248 ], [ %90, %212 ]
  %261 = add nuw i32 %89, 1
  %262 = icmp eq i32 %261, %22
  br i1 %262, label %263, label %88

263:                                              ; preds = %255, %199, %78, %29, %31, %146, %32
  %264 = phi ptr [ %23, %32 ], [ %23, %146 ], [ %23, %31 ], [ %30, %29 ], [ %23, %78 ], [ %23, %199 ], [ %23, %255 ]
  %265 = phi ptr [ %20, %32 ], [ %141, %146 ], [ %20, %31 ], [ null, %29 ], [ %81, %78 ], [ %202, %199 ], [ %259, %255 ]
  %266 = load i32, ptr %14, align 4, !tbaa !38
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %277, label %268

268:                                              ; preds = %263
  %269 = load ptr, ptr %264, align 8, !tbaa !21
  %270 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %13, i64 0, i32 8
  %271 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %13, i64 0, i32 9
  %272 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %273 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 1
  %274 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 2
  %275 = getelementptr inbounds %"class.dealii::Vector.35", ptr %4, i64 0, i32 3
  %276 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  br label %281

277:                                              ; preds = %648, %263
  %278 = icmp eq ptr %265, null
  br i1 %278, label %280, label %279

279:                                              ; preds = %277
  tail call void @_ZdlPv(ptr noundef nonnull %265) #23
  br label %280

280:                                              ; preds = %277, %279
  ret void

281:                                              ; preds = %268, %648
  %282 = phi i64 [ 0, %268 ], [ %290, %648 ]
  %283 = phi ptr [ %269, %268 ], [ %649, %648 ]
  %284 = getelementptr inbounds i32, ptr %265, i64 %282
  %285 = load i32, ptr %284, align 4, !tbaa !22
  %286 = icmp eq i32 %285, -1
  %287 = load ptr, ptr %270, align 8, !tbaa !41
  %288 = getelementptr inbounds i64, ptr %287, i64 %282
  %289 = load i64, ptr %288, align 8, !tbaa !42
  %290 = add nuw nsw i64 %282, 1
  %291 = and i64 %289, 4294967295
  %292 = getelementptr inbounds i64, ptr %287, i64 %290
  %293 = load i64, ptr %292, align 8, !tbaa !42
  %294 = icmp ugt i64 %293, %291
  br i1 %286, label %415, label %295

295:                                              ; preds = %281
  br i1 %294, label %296, label %298

296:                                              ; preds = %295
  %297 = trunc i64 %289 to i32
  br label %301

298:                                              ; preds = %398, %295
  br i1 %12, label %648, label %405

299:                                              ; preds = %316
  %300 = landingpad { ptr, i32 }
          cleanup
  br label %657

301:                                              ; preds = %296, %398
  %302 = phi i64 [ %400, %398 ], [ %291, %296 ]
  %303 = phi i32 [ %399, %398 ], [ %297, %296 ]
  %304 = load ptr, ptr %271, align 8, !tbaa !43
  %305 = getelementptr inbounds i32, ptr %304, i64 %302
  %306 = load i32, ptr %305, align 4, !tbaa !22
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds i32, ptr %265, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !22
  %310 = icmp eq i32 %309, -1
  br i1 %310, label %328, label %311

311:                                              ; preds = %301
  %312 = load ptr, ptr %272, align 8, !tbaa !44
  %313 = getelementptr inbounds float, ptr %312, i64 %302
  %314 = load float, ptr %313, align 4, !tbaa !33
  %315 = fcmp oeq float %314, 0.000000e+00
  br i1 %315, label %398, label %316

316:                                              ; preds = %311
  %317 = load i32, ptr %284, align 4, !tbaa !22
  %318 = load ptr, ptr %273, align 8, !tbaa !47
  %319 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %318, i32 noundef %317, i32 noundef %309)
          to label %320 unwind label %299

320:                                              ; preds = %316
  %321 = icmp eq i32 %319, -1
  br i1 %321, label %398, label %322

322:                                              ; preds = %320
  %323 = load ptr, ptr %274, align 8, !tbaa !44
  %324 = zext i32 %319 to i64
  %325 = getelementptr inbounds float, ptr %323, i64 %324
  %326 = load float, ptr %325, align 4, !tbaa !33
  %327 = fadd float %314, %326
  store float %327, ptr %325, align 4, !tbaa !33
  br label %398

328:                                              ; preds = %301
  %329 = load ptr, ptr %264, align 8, !tbaa !21
  br label %330

330:                                              ; preds = %330, %328
  %331 = phi ptr [ %329, %328 ], [ %334, %330 ]
  %332 = load i32, ptr %331, align 8, !tbaa !24
  %333 = icmp eq i32 %332, %306
  %334 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 1
  br i1 %333, label %335, label %330

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 0, i32 1
  %337 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %338 = load ptr, ptr %337, align 8, !tbaa !31
  %339 = load ptr, ptr %336, align 8, !tbaa !32
  %340 = icmp eq ptr %338, %339
  br i1 %340, label %341, label %344

341:                                              ; preds = %374, %335
  br i1 %12, label %398, label %384

342:                                              ; preds = %357
  %343 = landingpad { ptr, i32 }
          cleanup
  br label %657

344:                                              ; preds = %335, %374
  %345 = phi ptr [ %378, %374 ], [ %339, %335 ]
  %346 = phi i64 [ %376, %374 ], [ 0, %335 ]
  %347 = phi i32 [ %375, %374 ], [ 0, %335 ]
  %348 = load ptr, ptr %272, align 8, !tbaa !44
  %349 = getelementptr inbounds float, ptr %348, i64 %302
  %350 = load float, ptr %349, align 4, !tbaa !33
  %351 = fpext float %350 to double
  %352 = getelementptr inbounds %"struct.std::pair", ptr %345, i64 %346, i32 1
  %353 = load double, ptr %352, align 8, !tbaa !35
  %354 = fmul double %353, %351
  %355 = fptrunc double %354 to float
  %356 = fcmp oeq float %355, 0.000000e+00
  br i1 %356, label %374, label %357

357:                                              ; preds = %344
  %358 = getelementptr inbounds %"struct.std::pair", ptr %345, i64 %346
  %359 = load i32, ptr %358, align 8, !tbaa !37
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds i32, ptr %265, i64 %360
  %362 = load i32, ptr %361, align 4, !tbaa !22
  %363 = load i32, ptr %284, align 4, !tbaa !22
  %364 = load ptr, ptr %273, align 8, !tbaa !47
  %365 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %364, i32 noundef %363, i32 noundef %362)
          to label %366 unwind label %342

366:                                              ; preds = %357
  %367 = icmp eq i32 %365, -1
  br i1 %367, label %374, label %368

368:                                              ; preds = %366
  %369 = load ptr, ptr %274, align 8, !tbaa !44
  %370 = zext i32 %365 to i64
  %371 = getelementptr inbounds float, ptr %369, i64 %370
  %372 = load float, ptr %371, align 4, !tbaa !33
  %373 = fadd float %372, %355
  store float %373, ptr %371, align 4, !tbaa !33
  br label %374

374:                                              ; preds = %368, %366, %344
  %375 = add i32 %347, 1
  %376 = zext i32 %375 to i64
  %377 = load ptr, ptr %337, align 8, !tbaa !31
  %378 = load ptr, ptr %336, align 8, !tbaa !32
  %379 = ptrtoint ptr %377 to i64
  %380 = ptrtoint ptr %378 to i64
  %381 = sub i64 %379, %380
  %382 = ashr exact i64 %381, 4
  %383 = icmp eq i64 %382, %376
  br i1 %383, label %341, label %344

384:                                              ; preds = %341
  %385 = load ptr, ptr %272, align 8, !tbaa !44
  %386 = getelementptr inbounds float, ptr %385, i64 %302
  %387 = load float, ptr %386, align 4, !tbaa !33
  %388 = fpext float %387 to double
  %389 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 0, i32 2
  %390 = load double, ptr %389, align 8, !tbaa !48
  %391 = load i32, ptr %284, align 4, !tbaa !22
  %392 = load ptr, ptr %275, align 8, !tbaa !60
  %393 = zext i32 %391 to i64
  %394 = getelementptr inbounds double, ptr %392, i64 %393
  %395 = load double, ptr %394, align 8, !tbaa !52
  %396 = fneg double %388
  %397 = tail call double @llvm.fmuladd.f64(double %396, double %390, double %395)
  store double %397, ptr %394, align 8, !tbaa !52
  br label %398

398:                                              ; preds = %341, %384, %322, %320, %311
  %399 = add i32 %303, 1
  %400 = zext i32 %399 to i64
  %401 = load ptr, ptr %270, align 8, !tbaa !41
  %402 = getelementptr inbounds i64, ptr %401, i64 %290
  %403 = load i64, ptr %402, align 8, !tbaa !42
  %404 = icmp ugt i64 %403, %400
  br i1 %404, label %301, label %298

405:                                              ; preds = %298
  %406 = load ptr, ptr %276, align 8, !tbaa !60
  %407 = getelementptr inbounds double, ptr %406, i64 %282
  %408 = load double, ptr %407, align 8, !tbaa !52
  %409 = load i32, ptr %284, align 4, !tbaa !22
  %410 = load ptr, ptr %275, align 8, !tbaa !60
  %411 = zext i32 %409 to i64
  %412 = getelementptr inbounds double, ptr %410, i64 %411
  %413 = load double, ptr %412, align 8, !tbaa !52
  %414 = fadd double %408, %413
  store double %414, ptr %412, align 8, !tbaa !52
  br label %648

415:                                              ; preds = %281
  br i1 %294, label %416, label %420

416:                                              ; preds = %415
  %417 = trunc i64 %289 to i32
  %418 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1
  %419 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %435

420:                                              ; preds = %621, %415
  br i1 %12, label %646, label %421

421:                                              ; preds = %420
  %422 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1
  %423 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %424 = load ptr, ptr %423, align 8, !tbaa !31
  %425 = load ptr, ptr %422, align 8, !tbaa !32
  %426 = ptrtoint ptr %424 to i64
  %427 = ptrtoint ptr %425 to i64
  %428 = sub i64 %426, %427
  %429 = ashr exact i64 %428, 4
  %430 = icmp eq ptr %424, %425
  br i1 %430, label %646, label %431

431:                                              ; preds = %421
  %432 = load ptr, ptr %276, align 8, !tbaa !60
  %433 = getelementptr inbounds double, ptr %432, i64 %282
  %434 = load ptr, ptr %275, align 8, !tbaa !60
  br label %628

435:                                              ; preds = %416, %621
  %436 = phi i64 [ %291, %416 ], [ %623, %621 ]
  %437 = phi i32 [ %417, %416 ], [ %622, %621 ]
  %438 = load ptr, ptr %271, align 8, !tbaa !43
  %439 = getelementptr inbounds i32, ptr %438, i64 %436
  %440 = load i32, ptr %439, align 4, !tbaa !22
  %441 = zext i32 %440 to i64
  %442 = getelementptr inbounds i32, ptr %265, i64 %441
  %443 = load i32, ptr %442, align 4, !tbaa !22
  %444 = icmp eq i32 %443, -1
  br i1 %444, label %496, label %445

445:                                              ; preds = %435
  %446 = load ptr, ptr %419, align 8, !tbaa !31
  %447 = load ptr, ptr %418, align 8, !tbaa !32
  %448 = icmp eq ptr %446, %447
  br i1 %448, label %621, label %451

449:                                              ; preds = %464
  %450 = landingpad { ptr, i32 }
          cleanup
  br label %657

451:                                              ; preds = %445, %486
  %452 = phi ptr [ %490, %486 ], [ %447, %445 ]
  %453 = phi i64 [ %488, %486 ], [ 0, %445 ]
  %454 = phi i32 [ %487, %486 ], [ 0, %445 ]
  %455 = load ptr, ptr %272, align 8, !tbaa !44
  %456 = getelementptr inbounds float, ptr %455, i64 %436
  %457 = load float, ptr %456, align 4, !tbaa !33
  %458 = fpext float %457 to double
  %459 = getelementptr inbounds %"struct.std::pair", ptr %452, i64 %453, i32 1
  %460 = load double, ptr %459, align 8, !tbaa !35
  %461 = fmul double %460, %458
  %462 = fptrunc double %461 to float
  %463 = fcmp oeq float %462, 0.000000e+00
  br i1 %463, label %486, label %464

464:                                              ; preds = %451
  %465 = getelementptr inbounds %"struct.std::pair", ptr %452, i64 %453
  %466 = load ptr, ptr %271, align 8, !tbaa !43
  %467 = getelementptr inbounds i32, ptr %466, i64 %436
  %468 = load i32, ptr %467, align 4, !tbaa !22
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds i32, ptr %265, i64 %469
  %471 = load i32, ptr %470, align 4, !tbaa !22
  %472 = load i32, ptr %465, align 8, !tbaa !37
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds i32, ptr %265, i64 %473
  %475 = load i32, ptr %474, align 4, !tbaa !22
  %476 = load ptr, ptr %273, align 8, !tbaa !47
  %477 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %476, i32 noundef %475, i32 noundef %471)
          to label %478 unwind label %449

478:                                              ; preds = %464
  %479 = icmp eq i32 %477, -1
  br i1 %479, label %486, label %480

480:                                              ; preds = %478
  %481 = load ptr, ptr %274, align 8, !tbaa !44
  %482 = zext i32 %477 to i64
  %483 = getelementptr inbounds float, ptr %481, i64 %482
  %484 = load float, ptr %483, align 4, !tbaa !33
  %485 = fadd float %484, %462
  store float %485, ptr %483, align 4, !tbaa !33
  br label %486

486:                                              ; preds = %480, %478, %451
  %487 = add i32 %454, 1
  %488 = zext i32 %487 to i64
  %489 = load ptr, ptr %419, align 8, !tbaa !31
  %490 = load ptr, ptr %418, align 8, !tbaa !32
  %491 = ptrtoint ptr %489 to i64
  %492 = ptrtoint ptr %490 to i64
  %493 = sub i64 %491, %492
  %494 = ashr exact i64 %493, 4
  %495 = icmp eq i64 %494, %488
  br i1 %495, label %621, label %451

496:                                              ; preds = %435
  %497 = load ptr, ptr %264, align 8, !tbaa !21
  br label %498

498:                                              ; preds = %498, %496
  %499 = phi ptr [ %497, %496 ], [ %502, %498 ]
  %500 = load i32, ptr %499, align 8, !tbaa !24
  %501 = icmp eq i32 %500, %440
  %502 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %499, i64 1
  br i1 %501, label %503, label %498

503:                                              ; preds = %498
  %504 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %499, i64 0, i32 1
  %505 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %499, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %506 = load ptr, ptr %505, align 8, !tbaa !31
  %507 = load ptr, ptr %504, align 8, !tbaa !32
  %508 = icmp eq ptr %506, %507
  br i1 %508, label %520, label %509

509:                                              ; preds = %503
  %510 = load ptr, ptr %419, align 8, !tbaa !31
  %511 = load ptr, ptr %418, align 8, !tbaa !32
  br label %512

512:                                              ; preds = %509, %539
  %513 = phi ptr [ %540, %539 ], [ %507, %509 ]
  %514 = phi ptr [ %541, %539 ], [ %506, %509 ]
  %515 = phi ptr [ %542, %539 ], [ %511, %509 ]
  %516 = phi ptr [ %543, %539 ], [ %510, %509 ]
  %517 = phi i64 [ %545, %539 ], [ 0, %509 ]
  %518 = phi i32 [ %544, %539 ], [ 0, %509 ]
  %519 = icmp eq ptr %516, %515
  br i1 %519, label %539, label %553

520:                                              ; preds = %539, %503
  br i1 %12, label %621, label %521

521:                                              ; preds = %520
  %522 = load ptr, ptr %419, align 8, !tbaa !31
  %523 = load ptr, ptr %418, align 8, !tbaa !32
  %524 = ptrtoint ptr %522 to i64
  %525 = ptrtoint ptr %523 to i64
  %526 = sub i64 %524, %525
  %527 = ashr exact i64 %526, 4
  %528 = icmp eq ptr %522, %523
  br i1 %528, label %621, label %529

529:                                              ; preds = %521
  %530 = load ptr, ptr %272, align 8, !tbaa !44
  %531 = getelementptr inbounds float, ptr %530, i64 %436
  %532 = load float, ptr %531, align 4, !tbaa !33
  %533 = fpext float %532 to double
  %534 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %499, i64 0, i32 2
  %535 = load ptr, ptr %275, align 8, !tbaa !60
  br label %601

536:                                              ; preds = %591
  %537 = load ptr, ptr %505, align 8, !tbaa !31
  %538 = load ptr, ptr %504, align 8, !tbaa !32
  br label %539

539:                                              ; preds = %536, %512
  %540 = phi ptr [ %538, %536 ], [ %513, %512 ]
  %541 = phi ptr [ %537, %536 ], [ %514, %512 ]
  %542 = phi ptr [ %595, %536 ], [ %515, %512 ]
  %543 = phi ptr [ %594, %536 ], [ %515, %512 ]
  %544 = add i32 %518, 1
  %545 = zext i32 %544 to i64
  %546 = ptrtoint ptr %541 to i64
  %547 = ptrtoint ptr %540 to i64
  %548 = sub i64 %546, %547
  %549 = ashr exact i64 %548, 4
  %550 = icmp eq i64 %549, %545
  br i1 %550, label %520, label %512

551:                                              ; preds = %570
  %552 = landingpad { ptr, i32 }
          cleanup
  br label %657

553:                                              ; preds = %512, %591
  %554 = phi ptr [ %595, %591 ], [ %515, %512 ]
  %555 = phi i64 [ %593, %591 ], [ 0, %512 ]
  %556 = phi i32 [ %592, %591 ], [ 0, %512 ]
  %557 = load ptr, ptr %504, align 8, !tbaa !32
  %558 = load ptr, ptr %272, align 8, !tbaa !44
  %559 = getelementptr inbounds float, ptr %558, i64 %436
  %560 = load float, ptr %559, align 4, !tbaa !33
  %561 = fpext float %560 to double
  %562 = getelementptr inbounds %"struct.std::pair", ptr %554, i64 %555, i32 1
  %563 = load double, ptr %562, align 8, !tbaa !35
  %564 = fmul double %563, %561
  %565 = getelementptr inbounds %"struct.std::pair", ptr %557, i64 %517, i32 1
  %566 = load double, ptr %565, align 8, !tbaa !35
  %567 = fmul double %564, %566
  %568 = fptrunc double %567 to float
  %569 = fcmp oeq float %568, 0.000000e+00
  br i1 %569, label %591, label %570

570:                                              ; preds = %553
  %571 = getelementptr inbounds %"struct.std::pair", ptr %557, i64 %517
  %572 = getelementptr inbounds %"struct.std::pair", ptr %554, i64 %555
  %573 = load i32, ptr %571, align 8, !tbaa !37
  %574 = zext i32 %573 to i64
  %575 = getelementptr inbounds i32, ptr %265, i64 %574
  %576 = load i32, ptr %575, align 4, !tbaa !22
  %577 = load i32, ptr %572, align 8, !tbaa !37
  %578 = zext i32 %577 to i64
  %579 = getelementptr inbounds i32, ptr %265, i64 %578
  %580 = load i32, ptr %579, align 4, !tbaa !22
  %581 = load ptr, ptr %273, align 8, !tbaa !47
  %582 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %581, i32 noundef %580, i32 noundef %576)
          to label %583 unwind label %551

583:                                              ; preds = %570
  %584 = icmp eq i32 %582, -1
  br i1 %584, label %591, label %585

585:                                              ; preds = %583
  %586 = load ptr, ptr %274, align 8, !tbaa !44
  %587 = zext i32 %582 to i64
  %588 = getelementptr inbounds float, ptr %586, i64 %587
  %589 = load float, ptr %588, align 4, !tbaa !33
  %590 = fadd float %589, %568
  store float %590, ptr %588, align 4, !tbaa !33
  br label %591

591:                                              ; preds = %585, %583, %553
  %592 = add i32 %556, 1
  %593 = zext i32 %592 to i64
  %594 = load ptr, ptr %419, align 8, !tbaa !31
  %595 = load ptr, ptr %418, align 8, !tbaa !32
  %596 = ptrtoint ptr %594 to i64
  %597 = ptrtoint ptr %595 to i64
  %598 = sub i64 %596, %597
  %599 = ashr exact i64 %598, 4
  %600 = icmp eq i64 %599, %593
  br i1 %600, label %536, label %553

601:                                              ; preds = %529, %601
  %602 = phi i64 [ 0, %529 ], [ %619, %601 ]
  %603 = phi i32 [ 0, %529 ], [ %618, %601 ]
  %604 = getelementptr inbounds %"struct.std::pair", ptr %523, i64 %602
  %605 = getelementptr inbounds %"struct.std::pair", ptr %523, i64 %602, i32 1
  %606 = load double, ptr %605, align 8, !tbaa !35
  %607 = load double, ptr %534, align 8, !tbaa !48
  %608 = load i32, ptr %604, align 8, !tbaa !37
  %609 = zext i32 %608 to i64
  %610 = getelementptr inbounds i32, ptr %265, i64 %609
  %611 = load i32, ptr %610, align 4, !tbaa !22
  %612 = zext i32 %611 to i64
  %613 = getelementptr inbounds double, ptr %535, i64 %612
  %614 = load double, ptr %613, align 8, !tbaa !52
  %615 = fneg double %606
  %616 = fmul double %615, %533
  %617 = tail call double @llvm.fmuladd.f64(double %616, double %607, double %614)
  store double %617, ptr %613, align 8, !tbaa !52
  %618 = add i32 %603, 1
  %619 = zext i32 %618 to i64
  %620 = icmp eq i64 %527, %619
  br i1 %620, label %621, label %601

621:                                              ; preds = %486, %601, %445, %521, %520
  %622 = add i32 %437, 1
  %623 = zext i32 %622 to i64
  %624 = load ptr, ptr %270, align 8, !tbaa !41
  %625 = getelementptr inbounds i64, ptr %624, i64 %290
  %626 = load i64, ptr %625, align 8, !tbaa !42
  %627 = icmp ugt i64 %626, %623
  br i1 %627, label %435, label %420

628:                                              ; preds = %431, %628
  %629 = phi i64 [ 0, %431 ], [ %644, %628 ]
  %630 = phi i32 [ 0, %431 ], [ %643, %628 ]
  %631 = load double, ptr %433, align 8, !tbaa !52
  %632 = getelementptr inbounds %"struct.std::pair", ptr %425, i64 %629
  %633 = getelementptr inbounds %"struct.std::pair", ptr %425, i64 %629, i32 1
  %634 = load double, ptr %633, align 8, !tbaa !35
  %635 = load i32, ptr %632, align 8, !tbaa !37
  %636 = zext i32 %635 to i64
  %637 = getelementptr inbounds i32, ptr %265, i64 %636
  %638 = load i32, ptr %637, align 4, !tbaa !22
  %639 = zext i32 %638 to i64
  %640 = getelementptr inbounds double, ptr %434, i64 %639
  %641 = load double, ptr %640, align 8, !tbaa !52
  %642 = tail call double @llvm.fmuladd.f64(double %631, double %634, double %641)
  store double %642, ptr %640, align 8, !tbaa !52
  %643 = add i32 %630, 1
  %644 = zext i32 %643 to i64
  %645 = icmp eq i64 %429, %644
  br i1 %645, label %646, label %628

646:                                              ; preds = %628, %421, %420
  %647 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 1
  br label %648

648:                                              ; preds = %646, %405, %298
  %649 = phi ptr [ %647, %646 ], [ %283, %405 ], [ %283, %298 ]
  %650 = load i32, ptr %14, align 4, !tbaa !38
  %651 = zext i32 %650 to i64
  %652 = icmp ult i64 %290, %651
  br i1 %652, label %281, label %277

653:                                              ; preds = %251, %253, %205, %207, %149, %151, %84, %86
  %654 = phi ptr [ %35, %84 ], [ %35, %86 ], [ %91, %149 ], [ %91, %151 ], [ %155, %205 ], [ %155, %207 ], [ %91, %251 ], [ %91, %253 ]
  %655 = phi { ptr, i32 } [ %85, %84 ], [ %87, %86 ], [ %150, %149 ], [ %152, %151 ], [ %206, %205 ], [ %208, %207 ], [ %252, %251 ], [ %254, %253 ]
  %656 = icmp eq ptr %654, null
  br i1 %656, label %660, label %657

657:                                              ; preds = %551, %342, %299, %449, %653
  %658 = phi { ptr, i32 } [ %655, %653 ], [ %552, %551 ], [ %343, %342 ], [ %450, %449 ], [ %300, %299 ]
  %659 = phi ptr [ %654, %653 ], [ %265, %551 ], [ %265, %342 ], [ %265, %449 ], [ %265, %299 ]
  tail call void @_ZdlPv(ptr noundef nonnull %659) #23
  br label %660

660:                                              ; preds = %657, %653
  %661 = phi { ptr, i32 } [ %655, %653 ], [ %658, %657 ]
  resume { ptr, i32 } %661
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIdNS_6VectorIdEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 8 dereferenceable(88) %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !53
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.dealii::Vector.35", ptr %4, i64 0, i32 1
  %10 = load i32, ptr %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %8, i1 %11, i1 false
  %13 = tail call noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
  %14 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %13, i64 0, i32 2
  %15 = load i32, ptr %14, align 4, !tbaa !38
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %5
  %18 = zext i32 %15 to i64
  %19 = shl nuw nsw i64 %18, 2
  %20 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %19) #21
  %21 = getelementptr inbounds i32, ptr %20, i64 %18
  %22 = load i32, ptr %14, align 4, !tbaa !38
  %23 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !21
  %25 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !21
  %27 = icmp eq ptr %24, %26
  %28 = icmp eq i32 %22, 0
  br i1 %27, label %32, label %31

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %263

31:                                               ; preds = %17
  br i1 %28, label %263, label %88

32:                                               ; preds = %17
  br i1 %28, label %263, label %33

33:                                               ; preds = %32, %78
  %34 = phi i32 [ %82, %78 ], [ 0, %32 ]
  %35 = phi ptr [ %81, %78 ], [ %20, %32 ]
  %36 = phi ptr [ %80, %78 ], [ %20, %32 ]
  %37 = phi ptr [ %79, %78 ], [ %21, %32 ]
  %38 = icmp eq ptr %36, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  store i32 %34, ptr %36, align 4, !tbaa !22
  %40 = getelementptr inbounds i32, ptr %36, i64 1
  br label %78

41:                                               ; preds = %33
  %42 = ptrtoint ptr %36 to i64
  %43 = ptrtoint ptr %35 to i64
  %44 = sub i64 %42, %43
  %45 = icmp eq i64 %44, 9223372036854775804
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %47 unwind label %86

47:                                               ; preds = %46
  unreachable

48:                                               ; preds = %41
  %49 = ashr exact i64 %44, 2
  %50 = tail call i64 @llvm.umax.i64(i64 %49, i64 1)
  %51 = add i64 %50, %49
  %52 = icmp ult i64 %51, %49
  %53 = icmp ugt i64 %51, 2305843009213693951
  %54 = or i1 %52, %53
  %55 = select i1 %54, i64 2305843009213693951, i64 %51
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %48
  %58 = shl nuw nsw i64 %55, 2
  %59 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %58) #21
          to label %60 unwind label %84

60:                                               ; preds = %57, %48
  %61 = phi ptr [ null, %48 ], [ %59, %57 ]
  %62 = getelementptr inbounds i32, ptr %61, i64 %49
  store i32 %34, ptr %62, align 4, !tbaa !22
  %63 = icmp sgt i64 %44, 4
  br i1 %63, label %64, label %65, !prof !23

64:                                               ; preds = %60
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %61, ptr align 4 %35, i64 %44, i1 false)
  br label %70

65:                                               ; preds = %60
  %66 = icmp eq i64 %44, 4
  br i1 %66, label %67, label %70

67:                                               ; preds = %65
  %68 = load i32, ptr %35, align 4, !tbaa !22
  store i32 %68, ptr %61, align 4, !tbaa !22
  %69 = getelementptr inbounds i32, ptr %62, i64 1
  br label %73

70:                                               ; preds = %65, %64
  %71 = getelementptr inbounds i32, ptr %62, i64 1
  %72 = icmp eq ptr %35, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %67, %70
  %74 = phi ptr [ %69, %67 ], [ %71, %70 ]
  tail call void @_ZdlPv(ptr noundef nonnull %35) #23
  br label %75

75:                                               ; preds = %73, %70
  %76 = phi ptr [ %71, %70 ], [ %74, %73 ]
  %77 = getelementptr inbounds i32, ptr %61, i64 %55
  br label %78

78:                                               ; preds = %75, %39
  %79 = phi ptr [ %77, %75 ], [ %37, %39 ]
  %80 = phi ptr [ %76, %75 ], [ %40, %39 ]
  %81 = phi ptr [ %61, %75 ], [ %35, %39 ]
  %82 = add nuw i32 %34, 1
  %83 = icmp eq i32 %82, %22
  br i1 %83, label %263, label %33

84:                                               ; preds = %57
  %85 = landingpad { ptr, i32 }
          cleanup
  br label %645

86:                                               ; preds = %46
  %87 = landingpad { ptr, i32 }
          cleanup
  br label %645

88:                                               ; preds = %31, %255
  %89 = phi i32 [ %261, %255 ], [ 0, %31 ]
  %90 = phi i32 [ %260, %255 ], [ 0, %31 ]
  %91 = phi ptr [ %259, %255 ], [ %20, %31 ]
  %92 = phi ptr [ %258, %255 ], [ %20, %31 ]
  %93 = phi ptr [ %257, %255 ], [ %21, %31 ]
  %94 = phi ptr [ %256, %255 ], [ %24, %31 ]
  %95 = load i32, ptr %94, align 8, !tbaa !24
  %96 = icmp eq i32 %89, %95
  br i1 %96, label %97, label %209

97:                                               ; preds = %88
  %98 = icmp eq ptr %92, %93
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  store i32 -1, ptr %92, align 4, !tbaa !22
  %100 = getelementptr inbounds i32, ptr %92, i64 1
  br label %138

101:                                              ; preds = %97
  %102 = ptrtoint ptr %92 to i64
  %103 = ptrtoint ptr %91 to i64
  %104 = sub i64 %102, %103
  %105 = icmp eq i64 %104, 9223372036854775804
  br i1 %105, label %106, label %108

106:                                              ; preds = %101
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %107 unwind label %151

107:                                              ; preds = %106
  unreachable

108:                                              ; preds = %101
  %109 = ashr exact i64 %104, 2
  %110 = tail call i64 @llvm.umax.i64(i64 %109, i64 1)
  %111 = add i64 %110, %109
  %112 = icmp ult i64 %111, %109
  %113 = icmp ugt i64 %111, 2305843009213693951
  %114 = or i1 %112, %113
  %115 = select i1 %114, i64 2305843009213693951, i64 %111
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %108
  %118 = shl nuw nsw i64 %115, 2
  %119 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %118) #21
          to label %120 unwind label %149

120:                                              ; preds = %117, %108
  %121 = phi ptr [ null, %108 ], [ %119, %117 ]
  %122 = getelementptr inbounds i32, ptr %121, i64 %109
  store i32 -1, ptr %122, align 4, !tbaa !22
  %123 = icmp sgt i64 %104, 4
  br i1 %123, label %124, label %125, !prof !23

124:                                              ; preds = %120
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %121, ptr align 4 %91, i64 %104, i1 false)
  br label %130

125:                                              ; preds = %120
  %126 = icmp eq i64 %104, 4
  br i1 %126, label %127, label %130

127:                                              ; preds = %125
  %128 = load i32, ptr %91, align 4, !tbaa !22
  store i32 %128, ptr %121, align 4, !tbaa !22
  %129 = getelementptr inbounds i32, ptr %122, i64 1
  br label %133

130:                                              ; preds = %125, %124
  %131 = getelementptr inbounds i32, ptr %122, i64 1
  %132 = icmp eq ptr %91, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %127, %130
  %134 = phi ptr [ %129, %127 ], [ %131, %130 ]
  tail call void @_ZdlPv(ptr noundef nonnull %91) #23
  br label %135

135:                                              ; preds = %133, %130
  %136 = phi ptr [ %131, %130 ], [ %134, %133 ]
  %137 = getelementptr inbounds i32, ptr %121, i64 %115
  br label %138

138:                                              ; preds = %99, %135
  %139 = phi ptr [ %137, %135 ], [ %93, %99 ]
  %140 = phi ptr [ %136, %135 ], [ %100, %99 ]
  %141 = phi ptr [ %121, %135 ], [ %91, %99 ]
  %142 = add i32 %90, 1
  %143 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %94, i64 1
  %144 = load ptr, ptr %25, align 8, !tbaa !21
  %145 = icmp eq ptr %143, %144
  br i1 %145, label %146, label %255

146:                                              ; preds = %138
  %147 = add i32 %89, 1
  %148 = icmp ult i32 %147, %22
  br i1 %148, label %153, label %263

149:                                              ; preds = %117
  %150 = landingpad { ptr, i32 }
          cleanup
  br label %645

151:                                              ; preds = %106
  %152 = landingpad { ptr, i32 }
          cleanup
  br label %645

153:                                              ; preds = %146, %199
  %154 = phi i32 [ %203, %199 ], [ %147, %146 ]
  %155 = phi ptr [ %202, %199 ], [ %141, %146 ]
  %156 = phi ptr [ %201, %199 ], [ %140, %146 ]
  %157 = phi ptr [ %200, %199 ], [ %139, %146 ]
  %158 = sub i32 %154, %142
  %159 = icmp eq ptr %156, %157
  br i1 %159, label %162, label %160

160:                                              ; preds = %153
  store i32 %158, ptr %156, align 4, !tbaa !22
  %161 = getelementptr inbounds i32, ptr %156, i64 1
  br label %199

162:                                              ; preds = %153
  %163 = ptrtoint ptr %156 to i64
  %164 = ptrtoint ptr %155 to i64
  %165 = sub i64 %163, %164
  %166 = icmp eq i64 %165, 9223372036854775804
  br i1 %166, label %167, label %169

167:                                              ; preds = %162
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %168 unwind label %207

168:                                              ; preds = %167
  unreachable

169:                                              ; preds = %162
  %170 = ashr exact i64 %165, 2
  %171 = tail call i64 @llvm.umax.i64(i64 %170, i64 1)
  %172 = add i64 %171, %170
  %173 = icmp ult i64 %172, %170
  %174 = icmp ugt i64 %172, 2305843009213693951
  %175 = or i1 %173, %174
  %176 = select i1 %175, i64 2305843009213693951, i64 %172
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %181, label %178

178:                                              ; preds = %169
  %179 = shl nuw nsw i64 %176, 2
  %180 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %179) #21
          to label %181 unwind label %205

181:                                              ; preds = %178, %169
  %182 = phi ptr [ null, %169 ], [ %180, %178 ]
  %183 = getelementptr inbounds i32, ptr %182, i64 %170
  store i32 %158, ptr %183, align 4, !tbaa !22
  %184 = icmp sgt i64 %165, 4
  br i1 %184, label %185, label %186, !prof !23

185:                                              ; preds = %181
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %182, ptr align 4 %155, i64 %165, i1 false)
  br label %191

186:                                              ; preds = %181
  %187 = icmp eq i64 %165, 4
  br i1 %187, label %188, label %191

188:                                              ; preds = %186
  %189 = load i32, ptr %155, align 4, !tbaa !22
  store i32 %189, ptr %182, align 4, !tbaa !22
  %190 = getelementptr inbounds i32, ptr %183, i64 1
  br label %194

191:                                              ; preds = %186, %185
  %192 = getelementptr inbounds i32, ptr %183, i64 1
  %193 = icmp eq ptr %155, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %188, %191
  %195 = phi ptr [ %190, %188 ], [ %192, %191 ]
  tail call void @_ZdlPv(ptr noundef nonnull %155) #23
  br label %196

196:                                              ; preds = %194, %191
  %197 = phi ptr [ %192, %191 ], [ %195, %194 ]
  %198 = getelementptr inbounds i32, ptr %182, i64 %176
  br label %199

199:                                              ; preds = %196, %160
  %200 = phi ptr [ %198, %196 ], [ %157, %160 ]
  %201 = phi ptr [ %197, %196 ], [ %161, %160 ]
  %202 = phi ptr [ %182, %196 ], [ %155, %160 ]
  %203 = add nuw i32 %154, 1
  %204 = icmp eq i32 %203, %22
  br i1 %204, label %263, label %153

205:                                              ; preds = %178
  %206 = landingpad { ptr, i32 }
          cleanup
  br label %645

207:                                              ; preds = %167
  %208 = landingpad { ptr, i32 }
          cleanup
  br label %645

209:                                              ; preds = %88
  %210 = sub i32 %89, %90
  %211 = icmp eq ptr %92, %93
  br i1 %211, label %214, label %212

212:                                              ; preds = %209
  store i32 %210, ptr %92, align 4, !tbaa !22
  %213 = getelementptr inbounds i32, ptr %92, i64 1
  br label %255

214:                                              ; preds = %209
  %215 = ptrtoint ptr %92 to i64
  %216 = ptrtoint ptr %91 to i64
  %217 = sub i64 %215, %216
  %218 = icmp eq i64 %217, 9223372036854775804
  br i1 %218, label %219, label %221

219:                                              ; preds = %214
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %220 unwind label %253

220:                                              ; preds = %219
  unreachable

221:                                              ; preds = %214
  %222 = ashr exact i64 %217, 2
  %223 = tail call i64 @llvm.umax.i64(i64 %222, i64 1)
  %224 = add i64 %223, %222
  %225 = icmp ult i64 %224, %222
  %226 = icmp ugt i64 %224, 2305843009213693951
  %227 = or i1 %225, %226
  %228 = select i1 %227, i64 2305843009213693951, i64 %224
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %233, label %230

230:                                              ; preds = %221
  %231 = shl nuw nsw i64 %228, 2
  %232 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %231) #21
          to label %233 unwind label %251

233:                                              ; preds = %230, %221
  %234 = phi ptr [ null, %221 ], [ %232, %230 ]
  %235 = getelementptr inbounds i32, ptr %234, i64 %222
  store i32 %210, ptr %235, align 4, !tbaa !22
  %236 = icmp sgt i64 %217, 4
  br i1 %236, label %237, label %238, !prof !23

237:                                              ; preds = %233
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %234, ptr align 4 %91, i64 %217, i1 false)
  br label %243

238:                                              ; preds = %233
  %239 = icmp eq i64 %217, 4
  br i1 %239, label %240, label %243

240:                                              ; preds = %238
  %241 = load i32, ptr %91, align 4, !tbaa !22
  store i32 %241, ptr %234, align 4, !tbaa !22
  %242 = getelementptr inbounds i32, ptr %235, i64 1
  br label %246

243:                                              ; preds = %238, %237
  %244 = getelementptr inbounds i32, ptr %235, i64 1
  %245 = icmp eq ptr %91, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %240, %243
  %247 = phi ptr [ %242, %240 ], [ %244, %243 ]
  tail call void @_ZdlPv(ptr noundef nonnull %91) #23
  br label %248

248:                                              ; preds = %246, %243
  %249 = phi ptr [ %244, %243 ], [ %247, %246 ]
  %250 = getelementptr inbounds i32, ptr %234, i64 %228
  br label %255

251:                                              ; preds = %230
  %252 = landingpad { ptr, i32 }
          cleanup
  br label %645

253:                                              ; preds = %219
  %254 = landingpad { ptr, i32 }
          cleanup
  br label %645

255:                                              ; preds = %212, %248, %138
  %256 = phi ptr [ %143, %138 ], [ %94, %248 ], [ %94, %212 ]
  %257 = phi ptr [ %139, %138 ], [ %250, %248 ], [ %93, %212 ]
  %258 = phi ptr [ %140, %138 ], [ %249, %248 ], [ %213, %212 ]
  %259 = phi ptr [ %141, %138 ], [ %234, %248 ], [ %91, %212 ]
  %260 = phi i32 [ %142, %138 ], [ %90, %248 ], [ %90, %212 ]
  %261 = add nuw i32 %89, 1
  %262 = icmp eq i32 %261, %22
  br i1 %262, label %263, label %88

263:                                              ; preds = %255, %199, %78, %29, %31, %146, %32
  %264 = phi ptr [ %23, %32 ], [ %23, %146 ], [ %23, %31 ], [ %30, %29 ], [ %23, %78 ], [ %23, %199 ], [ %23, %255 ]
  %265 = phi ptr [ %20, %32 ], [ %141, %146 ], [ %20, %31 ], [ null, %29 ], [ %81, %78 ], [ %202, %199 ], [ %259, %255 ]
  %266 = load i32, ptr %14, align 4, !tbaa !38
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %277, label %268

268:                                              ; preds = %263
  %269 = load ptr, ptr %264, align 8, !tbaa !21
  %270 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %13, i64 0, i32 8
  %271 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %13, i64 0, i32 9
  %272 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %1, i64 0, i32 2
  %273 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %3, i64 0, i32 1
  %274 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %3, i64 0, i32 2
  %275 = getelementptr inbounds %"class.dealii::Vector.35", ptr %4, i64 0, i32 3
  %276 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  br label %281

277:                                              ; preds = %640, %263
  %278 = icmp eq ptr %265, null
  br i1 %278, label %280, label %279

279:                                              ; preds = %277
  tail call void @_ZdlPv(ptr noundef nonnull %265) #23
  br label %280

280:                                              ; preds = %277, %279
  ret void

281:                                              ; preds = %268, %640
  %282 = phi i64 [ 0, %268 ], [ %290, %640 ]
  %283 = phi ptr [ %269, %268 ], [ %641, %640 ]
  %284 = getelementptr inbounds i32, ptr %265, i64 %282
  %285 = load i32, ptr %284, align 4, !tbaa !22
  %286 = icmp eq i32 %285, -1
  %287 = load ptr, ptr %270, align 8, !tbaa !41
  %288 = getelementptr inbounds i64, ptr %287, i64 %282
  %289 = load i64, ptr %288, align 8, !tbaa !42
  %290 = add nuw nsw i64 %282, 1
  %291 = and i64 %289, 4294967295
  %292 = getelementptr inbounds i64, ptr %287, i64 %290
  %293 = load i64, ptr %292, align 8, !tbaa !42
  %294 = icmp ugt i64 %293, %291
  br i1 %286, label %412, label %295

295:                                              ; preds = %281
  br i1 %294, label %296, label %298

296:                                              ; preds = %295
  %297 = trunc i64 %289 to i32
  br label %301

298:                                              ; preds = %395, %295
  br i1 %12, label %640, label %402

299:                                              ; preds = %316
  %300 = landingpad { ptr, i32 }
          cleanup
  br label %649

301:                                              ; preds = %296, %395
  %302 = phi i64 [ %397, %395 ], [ %291, %296 ]
  %303 = phi i32 [ %396, %395 ], [ %297, %296 ]
  %304 = load ptr, ptr %271, align 8, !tbaa !43
  %305 = getelementptr inbounds i32, ptr %304, i64 %302
  %306 = load i32, ptr %305, align 4, !tbaa !22
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds i32, ptr %265, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !22
  %310 = icmp eq i32 %309, -1
  br i1 %310, label %328, label %311

311:                                              ; preds = %301
  %312 = load ptr, ptr %272, align 8, !tbaa !50
  %313 = getelementptr inbounds double, ptr %312, i64 %302
  %314 = load double, ptr %313, align 8, !tbaa !52
  %315 = fcmp oeq double %314, 0.000000e+00
  br i1 %315, label %395, label %316

316:                                              ; preds = %311
  %317 = load i32, ptr %284, align 4, !tbaa !22
  %318 = load ptr, ptr %273, align 8, !tbaa !47
  %319 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %318, i32 noundef %317, i32 noundef %309)
          to label %320 unwind label %299

320:                                              ; preds = %316
  %321 = icmp eq i32 %319, -1
  br i1 %321, label %395, label %322

322:                                              ; preds = %320
  %323 = load ptr, ptr %274, align 8, !tbaa !50
  %324 = zext i32 %319 to i64
  %325 = getelementptr inbounds double, ptr %323, i64 %324
  %326 = load double, ptr %325, align 8, !tbaa !52
  %327 = fadd double %314, %326
  store double %327, ptr %325, align 8, !tbaa !52
  br label %395

328:                                              ; preds = %301
  %329 = load ptr, ptr %264, align 8, !tbaa !21
  br label %330

330:                                              ; preds = %330, %328
  %331 = phi ptr [ %329, %328 ], [ %334, %330 ]
  %332 = load i32, ptr %331, align 8, !tbaa !24
  %333 = icmp eq i32 %332, %306
  %334 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 1
  br i1 %333, label %335, label %330

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 0, i32 1
  %337 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %338 = load ptr, ptr %337, align 8, !tbaa !31
  %339 = load ptr, ptr %336, align 8, !tbaa !32
  %340 = icmp eq ptr %338, %339
  br i1 %340, label %341, label %344

341:                                              ; preds = %372, %335
  br i1 %12, label %395, label %382

342:                                              ; preds = %355
  %343 = landingpad { ptr, i32 }
          cleanup
  br label %649

344:                                              ; preds = %335, %372
  %345 = phi ptr [ %376, %372 ], [ %339, %335 ]
  %346 = phi i64 [ %374, %372 ], [ 0, %335 ]
  %347 = phi i32 [ %373, %372 ], [ 0, %335 ]
  %348 = load ptr, ptr %272, align 8, !tbaa !50
  %349 = getelementptr inbounds double, ptr %348, i64 %302
  %350 = load double, ptr %349, align 8, !tbaa !52
  %351 = getelementptr inbounds %"struct.std::pair", ptr %345, i64 %346, i32 1
  %352 = load double, ptr %351, align 8, !tbaa !35
  %353 = fmul double %350, %352
  %354 = fcmp oeq double %353, 0.000000e+00
  br i1 %354, label %372, label %355

355:                                              ; preds = %344
  %356 = getelementptr inbounds %"struct.std::pair", ptr %345, i64 %346
  %357 = load i32, ptr %356, align 8, !tbaa !37
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds i32, ptr %265, i64 %358
  %360 = load i32, ptr %359, align 4, !tbaa !22
  %361 = load i32, ptr %284, align 4, !tbaa !22
  %362 = load ptr, ptr %273, align 8, !tbaa !47
  %363 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %362, i32 noundef %361, i32 noundef %360)
          to label %364 unwind label %342

364:                                              ; preds = %355
  %365 = icmp eq i32 %363, -1
  br i1 %365, label %372, label %366

366:                                              ; preds = %364
  %367 = load ptr, ptr %274, align 8, !tbaa !50
  %368 = zext i32 %363 to i64
  %369 = getelementptr inbounds double, ptr %367, i64 %368
  %370 = load double, ptr %369, align 8, !tbaa !52
  %371 = fadd double %353, %370
  store double %371, ptr %369, align 8, !tbaa !52
  br label %372

372:                                              ; preds = %366, %364, %344
  %373 = add i32 %347, 1
  %374 = zext i32 %373 to i64
  %375 = load ptr, ptr %337, align 8, !tbaa !31
  %376 = load ptr, ptr %336, align 8, !tbaa !32
  %377 = ptrtoint ptr %375 to i64
  %378 = ptrtoint ptr %376 to i64
  %379 = sub i64 %377, %378
  %380 = ashr exact i64 %379, 4
  %381 = icmp eq i64 %380, %374
  br i1 %381, label %341, label %344

382:                                              ; preds = %341
  %383 = load ptr, ptr %272, align 8, !tbaa !50
  %384 = getelementptr inbounds double, ptr %383, i64 %302
  %385 = load double, ptr %384, align 8, !tbaa !52
  %386 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %331, i64 0, i32 2
  %387 = load double, ptr %386, align 8, !tbaa !48
  %388 = load i32, ptr %284, align 4, !tbaa !22
  %389 = load ptr, ptr %275, align 8, !tbaa !60
  %390 = zext i32 %388 to i64
  %391 = getelementptr inbounds double, ptr %389, i64 %390
  %392 = load double, ptr %391, align 8, !tbaa !52
  %393 = fneg double %385
  %394 = tail call double @llvm.fmuladd.f64(double %393, double %387, double %392)
  store double %394, ptr %391, align 8, !tbaa !52
  br label %395

395:                                              ; preds = %341, %382, %322, %320, %311
  %396 = add i32 %303, 1
  %397 = zext i32 %396 to i64
  %398 = load ptr, ptr %270, align 8, !tbaa !41
  %399 = getelementptr inbounds i64, ptr %398, i64 %290
  %400 = load i64, ptr %399, align 8, !tbaa !42
  %401 = icmp ugt i64 %400, %397
  br i1 %401, label %301, label %298

402:                                              ; preds = %298
  %403 = load ptr, ptr %276, align 8, !tbaa !60
  %404 = getelementptr inbounds double, ptr %403, i64 %282
  %405 = load double, ptr %404, align 8, !tbaa !52
  %406 = load i32, ptr %284, align 4, !tbaa !22
  %407 = load ptr, ptr %275, align 8, !tbaa !60
  %408 = zext i32 %406 to i64
  %409 = getelementptr inbounds double, ptr %407, i64 %408
  %410 = load double, ptr %409, align 8, !tbaa !52
  %411 = fadd double %405, %410
  store double %411, ptr %409, align 8, !tbaa !52
  br label %640

412:                                              ; preds = %281
  br i1 %294, label %413, label %417

413:                                              ; preds = %412
  %414 = trunc i64 %289 to i32
  %415 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1
  %416 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %432

417:                                              ; preds = %613, %412
  br i1 %12, label %638, label %418

418:                                              ; preds = %417
  %419 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1
  %420 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %421 = load ptr, ptr %420, align 8, !tbaa !31
  %422 = load ptr, ptr %419, align 8, !tbaa !32
  %423 = ptrtoint ptr %421 to i64
  %424 = ptrtoint ptr %422 to i64
  %425 = sub i64 %423, %424
  %426 = ashr exact i64 %425, 4
  %427 = icmp eq ptr %421, %422
  br i1 %427, label %638, label %428

428:                                              ; preds = %418
  %429 = load ptr, ptr %276, align 8, !tbaa !60
  %430 = getelementptr inbounds double, ptr %429, i64 %282
  %431 = load ptr, ptr %275, align 8, !tbaa !60
  br label %620

432:                                              ; preds = %413, %613
  %433 = phi i64 [ %291, %413 ], [ %615, %613 ]
  %434 = phi i32 [ %414, %413 ], [ %614, %613 ]
  %435 = load ptr, ptr %271, align 8, !tbaa !43
  %436 = getelementptr inbounds i32, ptr %435, i64 %433
  %437 = load i32, ptr %436, align 4, !tbaa !22
  %438 = zext i32 %437 to i64
  %439 = getelementptr inbounds i32, ptr %265, i64 %438
  %440 = load i32, ptr %439, align 4, !tbaa !22
  %441 = icmp eq i32 %440, -1
  br i1 %441, label %491, label %442

442:                                              ; preds = %432
  %443 = load ptr, ptr %416, align 8, !tbaa !31
  %444 = load ptr, ptr %415, align 8, !tbaa !32
  %445 = icmp eq ptr %443, %444
  br i1 %445, label %613, label %448

446:                                              ; preds = %459
  %447 = landingpad { ptr, i32 }
          cleanup
  br label %649

448:                                              ; preds = %442, %481
  %449 = phi ptr [ %485, %481 ], [ %444, %442 ]
  %450 = phi i64 [ %483, %481 ], [ 0, %442 ]
  %451 = phi i32 [ %482, %481 ], [ 0, %442 ]
  %452 = load ptr, ptr %272, align 8, !tbaa !50
  %453 = getelementptr inbounds double, ptr %452, i64 %433
  %454 = load double, ptr %453, align 8, !tbaa !52
  %455 = getelementptr inbounds %"struct.std::pair", ptr %449, i64 %450, i32 1
  %456 = load double, ptr %455, align 8, !tbaa !35
  %457 = fmul double %454, %456
  %458 = fcmp oeq double %457, 0.000000e+00
  br i1 %458, label %481, label %459

459:                                              ; preds = %448
  %460 = getelementptr inbounds %"struct.std::pair", ptr %449, i64 %450
  %461 = load ptr, ptr %271, align 8, !tbaa !43
  %462 = getelementptr inbounds i32, ptr %461, i64 %433
  %463 = load i32, ptr %462, align 4, !tbaa !22
  %464 = zext i32 %463 to i64
  %465 = getelementptr inbounds i32, ptr %265, i64 %464
  %466 = load i32, ptr %465, align 4, !tbaa !22
  %467 = load i32, ptr %460, align 8, !tbaa !37
  %468 = zext i32 %467 to i64
  %469 = getelementptr inbounds i32, ptr %265, i64 %468
  %470 = load i32, ptr %469, align 4, !tbaa !22
  %471 = load ptr, ptr %273, align 8, !tbaa !47
  %472 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %471, i32 noundef %470, i32 noundef %466)
          to label %473 unwind label %446

473:                                              ; preds = %459
  %474 = icmp eq i32 %472, -1
  br i1 %474, label %481, label %475

475:                                              ; preds = %473
  %476 = load ptr, ptr %274, align 8, !tbaa !50
  %477 = zext i32 %472 to i64
  %478 = getelementptr inbounds double, ptr %476, i64 %477
  %479 = load double, ptr %478, align 8, !tbaa !52
  %480 = fadd double %457, %479
  store double %480, ptr %478, align 8, !tbaa !52
  br label %481

481:                                              ; preds = %475, %473, %448
  %482 = add i32 %451, 1
  %483 = zext i32 %482 to i64
  %484 = load ptr, ptr %416, align 8, !tbaa !31
  %485 = load ptr, ptr %415, align 8, !tbaa !32
  %486 = ptrtoint ptr %484 to i64
  %487 = ptrtoint ptr %485 to i64
  %488 = sub i64 %486, %487
  %489 = ashr exact i64 %488, 4
  %490 = icmp eq i64 %489, %483
  br i1 %490, label %613, label %448

491:                                              ; preds = %432
  %492 = load ptr, ptr %264, align 8, !tbaa !21
  br label %493

493:                                              ; preds = %493, %491
  %494 = phi ptr [ %492, %491 ], [ %497, %493 ]
  %495 = load i32, ptr %494, align 8, !tbaa !24
  %496 = icmp eq i32 %495, %437
  %497 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %494, i64 1
  br i1 %496, label %498, label %493

498:                                              ; preds = %493
  %499 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %494, i64 0, i32 1
  %500 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %494, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %501 = load ptr, ptr %500, align 8, !tbaa !31
  %502 = load ptr, ptr %499, align 8, !tbaa !32
  %503 = icmp eq ptr %501, %502
  br i1 %503, label %515, label %504

504:                                              ; preds = %498
  %505 = load ptr, ptr %416, align 8, !tbaa !31
  %506 = load ptr, ptr %415, align 8, !tbaa !32
  br label %507

507:                                              ; preds = %504, %532
  %508 = phi ptr [ %533, %532 ], [ %502, %504 ]
  %509 = phi ptr [ %534, %532 ], [ %501, %504 ]
  %510 = phi ptr [ %535, %532 ], [ %506, %504 ]
  %511 = phi ptr [ %536, %532 ], [ %505, %504 ]
  %512 = phi i64 [ %538, %532 ], [ 0, %504 ]
  %513 = phi i32 [ %537, %532 ], [ 0, %504 ]
  %514 = icmp eq ptr %511, %510
  br i1 %514, label %532, label %546

515:                                              ; preds = %532, %498
  br i1 %12, label %613, label %516

516:                                              ; preds = %515
  %517 = load ptr, ptr %416, align 8, !tbaa !31
  %518 = load ptr, ptr %415, align 8, !tbaa !32
  %519 = ptrtoint ptr %517 to i64
  %520 = ptrtoint ptr %518 to i64
  %521 = sub i64 %519, %520
  %522 = ashr exact i64 %521, 4
  %523 = icmp eq ptr %517, %518
  br i1 %523, label %613, label %524

524:                                              ; preds = %516
  %525 = load ptr, ptr %272, align 8, !tbaa !50
  %526 = getelementptr inbounds double, ptr %525, i64 %433
  %527 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %494, i64 0, i32 2
  %528 = load ptr, ptr %275, align 8, !tbaa !60
  br label %592

529:                                              ; preds = %582
  %530 = load ptr, ptr %500, align 8, !tbaa !31
  %531 = load ptr, ptr %499, align 8, !tbaa !32
  br label %532

532:                                              ; preds = %529, %507
  %533 = phi ptr [ %531, %529 ], [ %508, %507 ]
  %534 = phi ptr [ %530, %529 ], [ %509, %507 ]
  %535 = phi ptr [ %586, %529 ], [ %510, %507 ]
  %536 = phi ptr [ %585, %529 ], [ %510, %507 ]
  %537 = add i32 %513, 1
  %538 = zext i32 %537 to i64
  %539 = ptrtoint ptr %534 to i64
  %540 = ptrtoint ptr %533 to i64
  %541 = sub i64 %539, %540
  %542 = ashr exact i64 %541, 4
  %543 = icmp eq i64 %542, %538
  br i1 %543, label %515, label %507

544:                                              ; preds = %561
  %545 = landingpad { ptr, i32 }
          cleanup
  br label %649

546:                                              ; preds = %507, %582
  %547 = phi ptr [ %586, %582 ], [ %510, %507 ]
  %548 = phi i64 [ %584, %582 ], [ 0, %507 ]
  %549 = phi i32 [ %583, %582 ], [ 0, %507 ]
  %550 = load ptr, ptr %499, align 8, !tbaa !32
  %551 = load ptr, ptr %272, align 8, !tbaa !50
  %552 = getelementptr inbounds double, ptr %551, i64 %433
  %553 = load double, ptr %552, align 8, !tbaa !52
  %554 = getelementptr inbounds %"struct.std::pair", ptr %547, i64 %548, i32 1
  %555 = load double, ptr %554, align 8, !tbaa !35
  %556 = fmul double %553, %555
  %557 = getelementptr inbounds %"struct.std::pair", ptr %550, i64 %512, i32 1
  %558 = load double, ptr %557, align 8, !tbaa !35
  %559 = fmul double %556, %558
  %560 = fcmp oeq double %559, 0.000000e+00
  br i1 %560, label %582, label %561

561:                                              ; preds = %546
  %562 = getelementptr inbounds %"struct.std::pair", ptr %550, i64 %512
  %563 = getelementptr inbounds %"struct.std::pair", ptr %547, i64 %548
  %564 = load i32, ptr %562, align 8, !tbaa !37
  %565 = zext i32 %564 to i64
  %566 = getelementptr inbounds i32, ptr %265, i64 %565
  %567 = load i32, ptr %566, align 4, !tbaa !22
  %568 = load i32, ptr %563, align 8, !tbaa !37
  %569 = zext i32 %568 to i64
  %570 = getelementptr inbounds i32, ptr %265, i64 %569
  %571 = load i32, ptr %570, align 4, !tbaa !22
  %572 = load ptr, ptr %273, align 8, !tbaa !47
  %573 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %572, i32 noundef %571, i32 noundef %567)
          to label %574 unwind label %544

574:                                              ; preds = %561
  %575 = icmp eq i32 %573, -1
  br i1 %575, label %582, label %576

576:                                              ; preds = %574
  %577 = load ptr, ptr %274, align 8, !tbaa !50
  %578 = zext i32 %573 to i64
  %579 = getelementptr inbounds double, ptr %577, i64 %578
  %580 = load double, ptr %579, align 8, !tbaa !52
  %581 = fadd double %559, %580
  store double %581, ptr %579, align 8, !tbaa !52
  br label %582

582:                                              ; preds = %576, %574, %546
  %583 = add i32 %549, 1
  %584 = zext i32 %583 to i64
  %585 = load ptr, ptr %416, align 8, !tbaa !31
  %586 = load ptr, ptr %415, align 8, !tbaa !32
  %587 = ptrtoint ptr %585 to i64
  %588 = ptrtoint ptr %586 to i64
  %589 = sub i64 %587, %588
  %590 = ashr exact i64 %589, 4
  %591 = icmp eq i64 %590, %584
  br i1 %591, label %529, label %546

592:                                              ; preds = %524, %592
  %593 = phi i64 [ 0, %524 ], [ %611, %592 ]
  %594 = phi i32 [ 0, %524 ], [ %610, %592 ]
  %595 = load double, ptr %526, align 8, !tbaa !52
  %596 = getelementptr inbounds %"struct.std::pair", ptr %518, i64 %593
  %597 = getelementptr inbounds %"struct.std::pair", ptr %518, i64 %593, i32 1
  %598 = load double, ptr %597, align 8, !tbaa !35
  %599 = load double, ptr %527, align 8, !tbaa !48
  %600 = load i32, ptr %596, align 8, !tbaa !37
  %601 = zext i32 %600 to i64
  %602 = getelementptr inbounds i32, ptr %265, i64 %601
  %603 = load i32, ptr %602, align 4, !tbaa !22
  %604 = zext i32 %603 to i64
  %605 = getelementptr inbounds double, ptr %528, i64 %604
  %606 = load double, ptr %605, align 8, !tbaa !52
  %607 = fneg double %595
  %608 = fmul double %598, %607
  %609 = tail call double @llvm.fmuladd.f64(double %608, double %599, double %606)
  store double %609, ptr %605, align 8, !tbaa !52
  %610 = add i32 %594, 1
  %611 = zext i32 %610 to i64
  %612 = icmp eq i64 %522, %611
  br i1 %612, label %613, label %592

613:                                              ; preds = %481, %592, %442, %516, %515
  %614 = add i32 %434, 1
  %615 = zext i32 %614 to i64
  %616 = load ptr, ptr %270, align 8, !tbaa !41
  %617 = getelementptr inbounds i64, ptr %616, i64 %290
  %618 = load i64, ptr %617, align 8, !tbaa !42
  %619 = icmp ugt i64 %618, %615
  br i1 %619, label %432, label %417

620:                                              ; preds = %428, %620
  %621 = phi i64 [ 0, %428 ], [ %636, %620 ]
  %622 = phi i32 [ 0, %428 ], [ %635, %620 ]
  %623 = load double, ptr %430, align 8, !tbaa !52
  %624 = getelementptr inbounds %"struct.std::pair", ptr %422, i64 %621
  %625 = getelementptr inbounds %"struct.std::pair", ptr %422, i64 %621, i32 1
  %626 = load double, ptr %625, align 8, !tbaa !35
  %627 = load i32, ptr %624, align 8, !tbaa !37
  %628 = zext i32 %627 to i64
  %629 = getelementptr inbounds i32, ptr %265, i64 %628
  %630 = load i32, ptr %629, align 4, !tbaa !22
  %631 = zext i32 %630 to i64
  %632 = getelementptr inbounds double, ptr %431, i64 %631
  %633 = load double, ptr %632, align 8, !tbaa !52
  %634 = tail call double @llvm.fmuladd.f64(double %623, double %626, double %633)
  store double %634, ptr %632, align 8, !tbaa !52
  %635 = add i32 %622, 1
  %636 = zext i32 %635 to i64
  %637 = icmp eq i64 %426, %636
  br i1 %637, label %638, label %620

638:                                              ; preds = %620, %418, %417
  %639 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 1
  br label %640

640:                                              ; preds = %638, %402, %298
  %641 = phi ptr [ %639, %638 ], [ %283, %402 ], [ %283, %298 ]
  %642 = load i32, ptr %14, align 4, !tbaa !38
  %643 = zext i32 %642 to i64
  %644 = icmp ult i64 %290, %643
  br i1 %644, label %281, label %277

645:                                              ; preds = %251, %253, %205, %207, %149, %151, %84, %86
  %646 = phi ptr [ %35, %84 ], [ %35, %86 ], [ %91, %149 ], [ %91, %151 ], [ %155, %205 ], [ %155, %207 ], [ %91, %251 ], [ %91, %253 ]
  %647 = phi { ptr, i32 } [ %85, %84 ], [ %87, %86 ], [ %150, %149 ], [ %152, %151 ], [ %206, %205 ], [ %208, %207 ], [ %252, %251 ], [ %254, %253 ]
  %648 = icmp eq ptr %646, null
  br i1 %648, label %652, label %649

649:                                              ; preds = %544, %342, %299, %446, %645
  %650 = phi { ptr, i32 } [ %647, %645 ], [ %545, %544 ], [ %343, %342 ], [ %447, %446 ], [ %300, %299 ]
  %651 = phi ptr [ %646, %645 ], [ %265, %544 ], [ %265, %342 ], [ %265, %446 ], [ %265, %299 ]
  tail call void @_ZdlPv(ptr noundef nonnull %651) #23
  br label %652

652:                                              ; preds = %649, %645
  %653 = phi { ptr, i32 } [ %647, %645 ], [ %650, %649 ]
  resume { ptr, i32 } %653
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8set_zeroINS_6VectorIdEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %18, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !60
  br label %11

11:                                               ; preds = %8, %11
  %12 = phi ptr [ %4, %8 ], [ %16, %11 ]
  %13 = load i32, ptr %12, align 8, !tbaa !24
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds double, ptr %10, i64 %14
  store double 0.000000e+00, ptr %15, align 8, !tbaa !52
  %16 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 1
  %17 = icmp eq ptr %16, %6
  br i1 %17, label %18, label %11

18:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_6VectorIdEEEEvRKS3_RKSt6vectorIjSaIjEERT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !53
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %36, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !55
  %12 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %13 = load i32, ptr %12, align 8, !tbaa !57
  %14 = load ptr, ptr %9, align 8, !tbaa !55
  %15 = ptrtoint ptr %11 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = shl nsw i64 %17, 3
  %19 = zext i32 %13 to i64
  %20 = add nsw i64 %18, %19
  %21 = load ptr, ptr %2, align 8, !tbaa !58
  %22 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::Vector.35", ptr %3, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = ptrtoint ptr %27 to i64
  %32 = sub i64 %30, %31
  %33 = icmp sgt i64 %32, 0
  %34 = udiv exact i64 %32, 40
  %35 = zext i32 %6 to i64
  br label %37

36:                                               ; preds = %101, %4
  ret void

37:                                               ; preds = %8, %101
  %38 = phi i64 [ 0, %8 ], [ %102, %101 ]
  %39 = getelementptr inbounds i32, ptr %21, i64 %38
  %40 = load i32, ptr %39, align 4, !tbaa !22
  %41 = zext i32 %40 to i64
  %42 = icmp ugt i64 %20, %41
  br i1 %42, label %43, label %95

43:                                               ; preds = %37
  %44 = lshr i32 %40, 6
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i64, ptr %14, i64 %45
  %47 = and i32 %40, 63
  %48 = zext i32 %47 to i64
  %49 = shl nuw i64 1, %48
  %50 = load i64, ptr %46, align 8, !tbaa !42
  %51 = and i64 %50, %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %95, label %53

53:                                               ; preds = %43
  br i1 %33, label %54, label %67

54:                                               ; preds = %53, %54
  %55 = phi i64 [ %65, %54 ], [ %34, %53 ]
  %56 = phi ptr [ %64, %54 ], [ %27, %53 ]
  %57 = lshr i64 %55, 1
  %58 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %56, i64 %57
  %59 = load i32, ptr %58, align 8, !tbaa !24
  %60 = icmp ult i32 %59, %40
  %61 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %58, i64 1
  %62 = xor i64 %57, -1
  %63 = add nsw i64 %55, %62
  %64 = select i1 %60, ptr %61, ptr %56
  %65 = select i1 %60, i64 %63, i64 %57
  %66 = icmp sgt i64 %65, 0
  br i1 %66, label %54, label %67

67:                                               ; preds = %54, %53
  %68 = phi ptr [ %27, %53 ], [ %64, %54 ]
  %69 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %68, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !31
  %72 = load ptr, ptr %69, align 8, !tbaa !32
  %73 = ptrtoint ptr %71 to i64
  %74 = ptrtoint ptr %72 to i64
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 4
  %77 = icmp eq ptr %71, %72
  br i1 %77, label %101, label %78

78:                                               ; preds = %67
  %79 = getelementptr inbounds double, ptr %23, i64 %38
  br label %80

80:                                               ; preds = %78, %80
  %81 = phi i64 [ 0, %78 ], [ %93, %80 ]
  %82 = phi i32 [ 0, %78 ], [ %92, %80 ]
  %83 = load double, ptr %79, align 8, !tbaa !52
  %84 = getelementptr inbounds %"struct.std::pair", ptr %72, i64 %81
  %85 = getelementptr inbounds %"struct.std::pair", ptr %72, i64 %81, i32 1
  %86 = load double, ptr %85, align 8, !tbaa !35
  %87 = load i32, ptr %84, align 8, !tbaa !37
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds double, ptr %25, i64 %88
  %90 = load double, ptr %89, align 8, !tbaa !52
  %91 = tail call double @llvm.fmuladd.f64(double %83, double %86, double %90)
  store double %91, ptr %89, align 8, !tbaa !52
  %92 = add i32 %82, 1
  %93 = zext i32 %92 to i64
  %94 = icmp ugt i64 %76, %93
  br i1 %94, label %80, label %101

95:                                               ; preds = %43, %37
  %96 = getelementptr inbounds double, ptr %23, i64 %38
  %97 = load double, ptr %96, align 8, !tbaa !52
  %98 = getelementptr inbounds double, ptr %25, i64 %41
  %99 = load double, ptr %98, align 8, !tbaa !52
  %100 = fadd double %97, %99
  store double %100, ptr %98, align 8, !tbaa !52
  br label %101

101:                                              ; preds = %80, %95, %67
  %102 = add nuw nsw i64 %38, 1
  %103 = icmp eq i64 %102, %35
  br i1 %103, label %36, label %37
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix10distributeINS_6VectorIdEEEEvRKT_RS4_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !53
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %249

9:                                                ; preds = %3
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  %12 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %11) #21
  %13 = getelementptr inbounds i32, ptr %12, i64 %10
  %14 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !21
  %16 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !21
  %18 = icmp eq ptr %15, %17
  br i1 %18, label %19, label %74

19:                                               ; preds = %9, %64
  %20 = phi i32 [ %68, %64 ], [ 0, %9 ]
  %21 = phi ptr [ %67, %64 ], [ %12, %9 ]
  %22 = phi ptr [ %66, %64 ], [ %12, %9 ]
  %23 = phi ptr [ %65, %64 ], [ %13, %9 ]
  %24 = icmp eq ptr %22, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  store i32 %20, ptr %22, align 4, !tbaa !22
  %26 = getelementptr inbounds i32, ptr %22, i64 1
  br label %64

27:                                               ; preds = %19
  %28 = ptrtoint ptr %22 to i64
  %29 = ptrtoint ptr %21 to i64
  %30 = sub i64 %28, %29
  %31 = icmp eq i64 %30, 9223372036854775804
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %33 unwind label %72

33:                                               ; preds = %32
  unreachable

34:                                               ; preds = %27
  %35 = ashr exact i64 %30, 2
  %36 = tail call i64 @llvm.umax.i64(i64 %35, i64 1)
  %37 = add i64 %36, %35
  %38 = icmp ult i64 %37, %35
  %39 = icmp ugt i64 %37, 2305843009213693951
  %40 = or i1 %38, %39
  %41 = select i1 %40, i64 2305843009213693951, i64 %37
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %34
  %44 = shl nuw nsw i64 %41, 2
  %45 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %44) #21
          to label %46 unwind label %70

46:                                               ; preds = %43, %34
  %47 = phi ptr [ null, %34 ], [ %45, %43 ]
  %48 = getelementptr inbounds i32, ptr %47, i64 %35
  store i32 %20, ptr %48, align 4, !tbaa !22
  %49 = icmp sgt i64 %30, 4
  br i1 %49, label %50, label %51, !prof !23

50:                                               ; preds = %46
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %47, ptr align 4 %21, i64 %30, i1 false)
  br label %56

51:                                               ; preds = %46
  %52 = icmp eq i64 %30, 4
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = load i32, ptr %21, align 4, !tbaa !22
  store i32 %54, ptr %47, align 4, !tbaa !22
  %55 = getelementptr inbounds i32, ptr %48, i64 1
  br label %59

56:                                               ; preds = %51, %50
  %57 = getelementptr inbounds i32, ptr %48, i64 1
  %58 = icmp eq ptr %21, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53, %56
  %60 = phi ptr [ %55, %53 ], [ %57, %56 ]
  tail call void @_ZdlPv(ptr noundef nonnull %21) #23
  br label %61

61:                                               ; preds = %59, %56
  %62 = phi ptr [ %57, %56 ], [ %60, %59 ]
  %63 = getelementptr inbounds i32, ptr %47, i64 %41
  br label %64

64:                                               ; preds = %61, %25
  %65 = phi ptr [ %63, %61 ], [ %23, %25 ]
  %66 = phi ptr [ %62, %61 ], [ %26, %25 ]
  %67 = phi ptr [ %47, %61 ], [ %21, %25 ]
  %68 = add nuw i32 %20, 1
  %69 = icmp eq i32 %68, %5
  br i1 %69, label %249, label %19

70:                                               ; preds = %43
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %313

72:                                               ; preds = %32
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %313

74:                                               ; preds = %9, %241
  %75 = phi i32 [ %247, %241 ], [ 0, %9 ]
  %76 = phi i32 [ %246, %241 ], [ 0, %9 ]
  %77 = phi ptr [ %245, %241 ], [ %12, %9 ]
  %78 = phi ptr [ %244, %241 ], [ %12, %9 ]
  %79 = phi ptr [ %243, %241 ], [ %13, %9 ]
  %80 = phi ptr [ %242, %241 ], [ %15, %9 ]
  %81 = load i32, ptr %80, align 8, !tbaa !24
  %82 = icmp eq i32 %75, %81
  br i1 %82, label %83, label %195

83:                                               ; preds = %74
  %84 = icmp eq ptr %78, %79
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  store i32 -1, ptr %78, align 4, !tbaa !22
  %86 = getelementptr inbounds i32, ptr %78, i64 1
  br label %124

87:                                               ; preds = %83
  %88 = ptrtoint ptr %78 to i64
  %89 = ptrtoint ptr %77 to i64
  %90 = sub i64 %88, %89
  %91 = icmp eq i64 %90, 9223372036854775804
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %93 unwind label %137

93:                                               ; preds = %92
  unreachable

94:                                               ; preds = %87
  %95 = ashr exact i64 %90, 2
  %96 = tail call i64 @llvm.umax.i64(i64 %95, i64 1)
  %97 = add i64 %96, %95
  %98 = icmp ult i64 %97, %95
  %99 = icmp ugt i64 %97, 2305843009213693951
  %100 = or i1 %98, %99
  %101 = select i1 %100, i64 2305843009213693951, i64 %97
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %94
  %104 = shl nuw nsw i64 %101, 2
  %105 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %104) #21
          to label %106 unwind label %135

106:                                              ; preds = %103, %94
  %107 = phi ptr [ null, %94 ], [ %105, %103 ]
  %108 = getelementptr inbounds i32, ptr %107, i64 %95
  store i32 -1, ptr %108, align 4, !tbaa !22
  %109 = icmp sgt i64 %90, 4
  br i1 %109, label %110, label %111, !prof !23

110:                                              ; preds = %106
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %107, ptr align 4 %77, i64 %90, i1 false)
  br label %116

111:                                              ; preds = %106
  %112 = icmp eq i64 %90, 4
  br i1 %112, label %113, label %116

113:                                              ; preds = %111
  %114 = load i32, ptr %77, align 4, !tbaa !22
  store i32 %114, ptr %107, align 4, !tbaa !22
  %115 = getelementptr inbounds i32, ptr %108, i64 1
  br label %119

116:                                              ; preds = %111, %110
  %117 = getelementptr inbounds i32, ptr %108, i64 1
  %118 = icmp eq ptr %77, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %113, %116
  %120 = phi ptr [ %115, %113 ], [ %117, %116 ]
  tail call void @_ZdlPv(ptr noundef nonnull %77) #23
  br label %121

121:                                              ; preds = %119, %116
  %122 = phi ptr [ %117, %116 ], [ %120, %119 ]
  %123 = getelementptr inbounds i32, ptr %107, i64 %101
  br label %124

124:                                              ; preds = %85, %121
  %125 = phi ptr [ %123, %121 ], [ %79, %85 ]
  %126 = phi ptr [ %122, %121 ], [ %86, %85 ]
  %127 = phi ptr [ %107, %121 ], [ %77, %85 ]
  %128 = add i32 %76, 1
  %129 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %80, i64 1
  %130 = load ptr, ptr %16, align 8, !tbaa !21
  %131 = icmp eq ptr %129, %130
  br i1 %131, label %132, label %241

132:                                              ; preds = %124
  %133 = add i32 %75, 1
  %134 = icmp ult i32 %133, %5
  br i1 %134, label %139, label %249

135:                                              ; preds = %103
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %313

137:                                              ; preds = %92
  %138 = landingpad { ptr, i32 }
          cleanup
  br label %313

139:                                              ; preds = %132, %185
  %140 = phi i32 [ %189, %185 ], [ %133, %132 ]
  %141 = phi ptr [ %188, %185 ], [ %127, %132 ]
  %142 = phi ptr [ %187, %185 ], [ %126, %132 ]
  %143 = phi ptr [ %186, %185 ], [ %125, %132 ]
  %144 = sub i32 %140, %128
  %145 = icmp eq ptr %142, %143
  br i1 %145, label %148, label %146

146:                                              ; preds = %139
  store i32 %144, ptr %142, align 4, !tbaa !22
  %147 = getelementptr inbounds i32, ptr %142, i64 1
  br label %185

148:                                              ; preds = %139
  %149 = ptrtoint ptr %142 to i64
  %150 = ptrtoint ptr %141 to i64
  %151 = sub i64 %149, %150
  %152 = icmp eq i64 %151, 9223372036854775804
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %154 unwind label %193

154:                                              ; preds = %153
  unreachable

155:                                              ; preds = %148
  %156 = ashr exact i64 %151, 2
  %157 = tail call i64 @llvm.umax.i64(i64 %156, i64 1)
  %158 = add i64 %157, %156
  %159 = icmp ult i64 %158, %156
  %160 = icmp ugt i64 %158, 2305843009213693951
  %161 = or i1 %159, %160
  %162 = select i1 %161, i64 2305843009213693951, i64 %158
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %155
  %165 = shl nuw nsw i64 %162, 2
  %166 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %165) #21
          to label %167 unwind label %191

167:                                              ; preds = %164, %155
  %168 = phi ptr [ null, %155 ], [ %166, %164 ]
  %169 = getelementptr inbounds i32, ptr %168, i64 %156
  store i32 %144, ptr %169, align 4, !tbaa !22
  %170 = icmp sgt i64 %151, 4
  br i1 %170, label %171, label %172, !prof !23

171:                                              ; preds = %167
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %168, ptr align 4 %141, i64 %151, i1 false)
  br label %177

172:                                              ; preds = %167
  %173 = icmp eq i64 %151, 4
  br i1 %173, label %174, label %177

174:                                              ; preds = %172
  %175 = load i32, ptr %141, align 4, !tbaa !22
  store i32 %175, ptr %168, align 4, !tbaa !22
  %176 = getelementptr inbounds i32, ptr %169, i64 1
  br label %180

177:                                              ; preds = %172, %171
  %178 = getelementptr inbounds i32, ptr %169, i64 1
  %179 = icmp eq ptr %141, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %174, %177
  %181 = phi ptr [ %176, %174 ], [ %178, %177 ]
  tail call void @_ZdlPv(ptr noundef nonnull %141) #23
  br label %182

182:                                              ; preds = %180, %177
  %183 = phi ptr [ %178, %177 ], [ %181, %180 ]
  %184 = getelementptr inbounds i32, ptr %168, i64 %162
  br label %185

185:                                              ; preds = %182, %146
  %186 = phi ptr [ %184, %182 ], [ %143, %146 ]
  %187 = phi ptr [ %183, %182 ], [ %147, %146 ]
  %188 = phi ptr [ %168, %182 ], [ %141, %146 ]
  %189 = add nuw i32 %140, 1
  %190 = icmp eq i32 %189, %5
  br i1 %190, label %249, label %139

191:                                              ; preds = %164
  %192 = landingpad { ptr, i32 }
          cleanup
  br label %313

193:                                              ; preds = %153
  %194 = landingpad { ptr, i32 }
          cleanup
  br label %313

195:                                              ; preds = %74
  %196 = sub i32 %75, %76
  %197 = icmp eq ptr %78, %79
  br i1 %197, label %200, label %198

198:                                              ; preds = %195
  store i32 %196, ptr %78, align 4, !tbaa !22
  %199 = getelementptr inbounds i32, ptr %78, i64 1
  br label %241

200:                                              ; preds = %195
  %201 = ptrtoint ptr %78 to i64
  %202 = ptrtoint ptr %77 to i64
  %203 = sub i64 %201, %202
  %204 = icmp eq i64 %203, 9223372036854775804
  br i1 %204, label %205, label %207

205:                                              ; preds = %200
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %206 unwind label %239

206:                                              ; preds = %205
  unreachable

207:                                              ; preds = %200
  %208 = ashr exact i64 %203, 2
  %209 = tail call i64 @llvm.umax.i64(i64 %208, i64 1)
  %210 = add i64 %209, %208
  %211 = icmp ult i64 %210, %208
  %212 = icmp ugt i64 %210, 2305843009213693951
  %213 = or i1 %211, %212
  %214 = select i1 %213, i64 2305843009213693951, i64 %210
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %207
  %217 = shl nuw nsw i64 %214, 2
  %218 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %217) #21
          to label %219 unwind label %237

219:                                              ; preds = %216, %207
  %220 = phi ptr [ null, %207 ], [ %218, %216 ]
  %221 = getelementptr inbounds i32, ptr %220, i64 %208
  store i32 %196, ptr %221, align 4, !tbaa !22
  %222 = icmp sgt i64 %203, 4
  br i1 %222, label %223, label %224, !prof !23

223:                                              ; preds = %219
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %220, ptr align 4 %77, i64 %203, i1 false)
  br label %229

224:                                              ; preds = %219
  %225 = icmp eq i64 %203, 4
  br i1 %225, label %226, label %229

226:                                              ; preds = %224
  %227 = load i32, ptr %77, align 4, !tbaa !22
  store i32 %227, ptr %220, align 4, !tbaa !22
  %228 = getelementptr inbounds i32, ptr %221, i64 1
  br label %232

229:                                              ; preds = %224, %223
  %230 = getelementptr inbounds i32, ptr %221, i64 1
  %231 = icmp eq ptr %77, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %226, %229
  %233 = phi ptr [ %228, %226 ], [ %230, %229 ]
  tail call void @_ZdlPv(ptr noundef nonnull %77) #23
  br label %234

234:                                              ; preds = %232, %229
  %235 = phi ptr [ %230, %229 ], [ %233, %232 ]
  %236 = getelementptr inbounds i32, ptr %220, i64 %214
  br label %241

237:                                              ; preds = %216
  %238 = landingpad { ptr, i32 }
          cleanup
  br label %313

239:                                              ; preds = %205
  %240 = landingpad { ptr, i32 }
          cleanup
  br label %313

241:                                              ; preds = %198, %234, %124
  %242 = phi ptr [ %129, %124 ], [ %80, %234 ], [ %80, %198 ]
  %243 = phi ptr [ %125, %124 ], [ %236, %234 ], [ %79, %198 ]
  %244 = phi ptr [ %126, %124 ], [ %235, %234 ], [ %199, %198 ]
  %245 = phi ptr [ %127, %124 ], [ %220, %234 ], [ %77, %198 ]
  %246 = phi i32 [ %128, %124 ], [ %76, %234 ], [ %76, %198 ]
  %247 = add nuw i32 %75, 1
  %248 = icmp eq i32 %247, %5
  br i1 %248, label %249, label %74

249:                                              ; preds = %241, %185, %64, %7, %132
  %250 = phi ptr [ %14, %132 ], [ %8, %7 ], [ %14, %64 ], [ %14, %185 ], [ %14, %241 ]
  %251 = phi ptr [ %127, %132 ], [ null, %7 ], [ %67, %64 ], [ %188, %185 ], [ %245, %241 ]
  %252 = load i32, ptr %4, align 8, !tbaa !53
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %261, label %254

254:                                              ; preds = %249
  %255 = load ptr, ptr %250, align 8, !tbaa !21
  %256 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 3
  %257 = load ptr, ptr %256, align 8
  %258 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %259 = load ptr, ptr %258, align 8
  %260 = zext i32 %252 to i64
  br label %265

261:                                              ; preds = %249
  %262 = icmp eq ptr %251, null
  br i1 %262, label %264, label %263

263:                                              ; preds = %309, %261
  tail call void @_ZdlPv(ptr noundef nonnull %251) #23
  br label %264

264:                                              ; preds = %261, %263
  ret void

265:                                              ; preds = %254, %309
  %266 = phi i64 [ 0, %254 ], [ %311, %309 ]
  %267 = phi ptr [ %255, %254 ], [ %310, %309 ]
  %268 = getelementptr inbounds i32, ptr %251, i64 %266
  %269 = load i32, ptr %268, align 4, !tbaa !22
  %270 = icmp eq i32 %269, -1
  br i1 %270, label %276, label %271

271:                                              ; preds = %265
  %272 = zext i32 %269 to i64
  %273 = getelementptr inbounds double, ptr %257, i64 %272
  %274 = load double, ptr %273, align 8, !tbaa !52
  %275 = getelementptr inbounds double, ptr %259, i64 %266
  store double %274, ptr %275, align 8, !tbaa !52
  br label %309

276:                                              ; preds = %265
  %277 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 0, i32 2
  %278 = load double, ptr %277, align 8, !tbaa !48
  %279 = getelementptr inbounds double, ptr %259, i64 %266
  store double %278, ptr %279, align 8, !tbaa !52
  %280 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 0, i32 1
  %281 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %282 = load ptr, ptr %281, align 8, !tbaa !31
  %283 = load ptr, ptr %280, align 8, !tbaa !32
  %284 = ptrtoint ptr %282 to i64
  %285 = ptrtoint ptr %283 to i64
  %286 = sub i64 %284, %285
  %287 = ashr exact i64 %286, 4
  %288 = icmp eq ptr %282, %283
  br i1 %288, label %289, label %291

289:                                              ; preds = %291, %276
  %290 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 1
  br label %309

291:                                              ; preds = %276, %291
  %292 = phi double [ %305, %291 ], [ %278, %276 ]
  %293 = phi i64 [ %307, %291 ], [ 0, %276 ]
  %294 = phi i32 [ %306, %291 ], [ 0, %276 ]
  %295 = getelementptr inbounds %"struct.std::pair", ptr %283, i64 %293
  %296 = load i32, ptr %295, align 8, !tbaa !37
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds i32, ptr %251, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !22
  %300 = zext i32 %299 to i64
  %301 = getelementptr inbounds double, ptr %257, i64 %300
  %302 = load double, ptr %301, align 8, !tbaa !52
  %303 = getelementptr inbounds %"struct.std::pair", ptr %283, i64 %293, i32 1
  %304 = load double, ptr %303, align 8, !tbaa !35
  %305 = tail call double @llvm.fmuladd.f64(double %302, double %304, double %292)
  store double %305, ptr %279, align 8, !tbaa !52
  %306 = add i32 %294, 1
  %307 = zext i32 %306 to i64
  %308 = icmp ugt i64 %287, %307
  br i1 %308, label %291, label %289

309:                                              ; preds = %271, %289
  %310 = phi ptr [ %290, %289 ], [ %267, %271 ]
  %311 = add nuw nsw i64 %266, 1
  %312 = icmp eq i64 %311, %260
  br i1 %312, label %263, label %265

313:                                              ; preds = %237, %239, %191, %193, %135, %137, %70, %72
  %314 = phi ptr [ %21, %70 ], [ %21, %72 ], [ %77, %135 ], [ %77, %137 ], [ %141, %191 ], [ %141, %193 ], [ %77, %237 ], [ %77, %239 ]
  %315 = phi { ptr, i32 } [ %71, %70 ], [ %73, %72 ], [ %136, %135 ], [ %138, %137 ], [ %192, %191 ], [ %194, %193 ], [ %238, %237 ], [ %240, %239 ]
  %316 = icmp eq ptr %314, null
  br i1 %316, label %318, label %317

317:                                              ; preds = %313
  tail call void @_ZdlPv(ptr noundef nonnull %314) #23
  br label %318

318:                                              ; preds = %317, %313
  resume { ptr, i32 } %315
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix10distributeINS_6VectorIdEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %46, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8
  br label %11

11:                                               ; preds = %8, %24
  %12 = phi ptr [ %4, %8 ], [ %29, %24 ]
  %13 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 0, i32 2
  %14 = load double, ptr %13, align 8, !tbaa !48
  %15 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !31
  %18 = load ptr, ptr %15, align 8, !tbaa !32
  %19 = ptrtoint ptr %17 to i64
  %20 = ptrtoint ptr %18 to i64
  %21 = sub i64 %19, %20
  %22 = ashr exact i64 %21, 4
  %23 = icmp eq ptr %17, %18
  br i1 %23, label %24, label %31

24:                                               ; preds = %31, %11
  %25 = phi double [ %14, %11 ], [ %42, %31 ]
  %26 = load i32, ptr %12, align 8, !tbaa !24
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds double, ptr %10, i64 %27
  store double %25, ptr %28, align 8, !tbaa !52
  %29 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %12, i64 1
  %30 = icmp eq ptr %29, %6
  br i1 %30, label %46, label %11

31:                                               ; preds = %11, %31
  %32 = phi i64 [ %44, %31 ], [ 0, %11 ]
  %33 = phi i32 [ %43, %31 ], [ 0, %11 ]
  %34 = phi double [ %42, %31 ], [ %14, %11 ]
  %35 = getelementptr inbounds %"struct.std::pair", ptr %18, i64 %32
  %36 = load i32, ptr %35, align 8, !tbaa !37
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds double, ptr %10, i64 %37
  %39 = load double, ptr %38, align 8, !tbaa !52
  %40 = getelementptr inbounds %"struct.std::pair", ptr %18, i64 %32, i32 1
  %41 = load double, ptr %40, align 8, !tbaa !35
  %42 = tail call double @llvm.fmuladd.f64(double %39, double %41, double %34)
  %43 = add i32 %33, 1
  %44 = zext i32 %43 to i64
  %45 = icmp ugt i64 %22, %44
  br i1 %45, label %31, label %24

46:                                               ; preds = %24, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseINS_11BlockVectorIdEEEEvRKT_RS4_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %5 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %6 = load i32, ptr %4, align 8, !tbaa !61
  %7 = zext i32 %6 to i64
  %8 = load ptr, ptr %5, align 8, !tbaa !58
  %9 = getelementptr inbounds i32, ptr %8, i64 %7
  %10 = load i32, ptr %9, align 4, !tbaa !22
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %3
  %13 = zext i32 %10 to i64
  %14 = shl nuw nsw i64 %13, 2
  %15 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %14) #21
  %16 = getelementptr inbounds i32, ptr %15, i64 %13
  %17 = load i32, ptr %9, align 4, !tbaa !22
  %18 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !21
  %20 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !21
  %22 = icmp eq ptr %19, %21
  %23 = icmp eq i32 %17, 0
  br i1 %22, label %27, label %26

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %258

26:                                               ; preds = %12
  br i1 %23, label %258, label %83

27:                                               ; preds = %12
  br i1 %23, label %258, label %28

28:                                               ; preds = %27, %73
  %29 = phi i32 [ %77, %73 ], [ 0, %27 ]
  %30 = phi ptr [ %76, %73 ], [ %15, %27 ]
  %31 = phi ptr [ %75, %73 ], [ %15, %27 ]
  %32 = phi ptr [ %74, %73 ], [ %16, %27 ]
  %33 = icmp eq ptr %31, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  store i32 %29, ptr %31, align 4, !tbaa !22
  %35 = getelementptr inbounds i32, ptr %31, i64 1
  br label %73

36:                                               ; preds = %28
  %37 = ptrtoint ptr %31 to i64
  %38 = ptrtoint ptr %30 to i64
  %39 = sub i64 %37, %38
  %40 = icmp eq i64 %39, 9223372036854775804
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %42 unwind label %81

42:                                               ; preds = %41
  unreachable

43:                                               ; preds = %36
  %44 = ashr exact i64 %39, 2
  %45 = tail call i64 @llvm.umax.i64(i64 %44, i64 1)
  %46 = add i64 %45, %44
  %47 = icmp ult i64 %46, %44
  %48 = icmp ugt i64 %46, 2305843009213693951
  %49 = or i1 %47, %48
  %50 = select i1 %49, i64 2305843009213693951, i64 %46
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = shl nuw nsw i64 %50, 2
  %54 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %53) #21
          to label %55 unwind label %79

55:                                               ; preds = %52, %43
  %56 = phi ptr [ null, %43 ], [ %54, %52 ]
  %57 = getelementptr inbounds i32, ptr %56, i64 %44
  store i32 %29, ptr %57, align 4, !tbaa !22
  %58 = icmp sgt i64 %39, 4
  br i1 %58, label %59, label %60, !prof !23

59:                                               ; preds = %55
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %56, ptr align 4 %30, i64 %39, i1 false)
  br label %65

60:                                               ; preds = %55
  %61 = icmp eq i64 %39, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %60
  %63 = load i32, ptr %30, align 4, !tbaa !22
  store i32 %63, ptr %56, align 4, !tbaa !22
  %64 = getelementptr inbounds i32, ptr %57, i64 1
  br label %68

65:                                               ; preds = %60, %59
  %66 = getelementptr inbounds i32, ptr %57, i64 1
  %67 = icmp eq ptr %30, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %62, %65
  %69 = phi ptr [ %64, %62 ], [ %66, %65 ]
  tail call void @_ZdlPv(ptr noundef nonnull %30) #23
  br label %70

70:                                               ; preds = %68, %65
  %71 = phi ptr [ %66, %65 ], [ %69, %68 ]
  %72 = getelementptr inbounds i32, ptr %56, i64 %50
  br label %73

73:                                               ; preds = %70, %34
  %74 = phi ptr [ %72, %70 ], [ %32, %34 ]
  %75 = phi ptr [ %71, %70 ], [ %35, %34 ]
  %76 = phi ptr [ %56, %70 ], [ %30, %34 ]
  %77 = add nuw i32 %29, 1
  %78 = icmp eq i32 %77, %17
  br i1 %78, label %258, label %28

79:                                               ; preds = %52
  %80 = landingpad { ptr, i32 }
          cleanup
  br label %384

81:                                               ; preds = %41
  %82 = landingpad { ptr, i32 }
          cleanup
  br label %384

83:                                               ; preds = %26, %250
  %84 = phi i32 [ %256, %250 ], [ 0, %26 ]
  %85 = phi i32 [ %255, %250 ], [ 0, %26 ]
  %86 = phi ptr [ %254, %250 ], [ %15, %26 ]
  %87 = phi ptr [ %253, %250 ], [ %15, %26 ]
  %88 = phi ptr [ %252, %250 ], [ %16, %26 ]
  %89 = phi ptr [ %251, %250 ], [ %19, %26 ]
  %90 = load i32, ptr %89, align 8, !tbaa !24
  %91 = icmp eq i32 %84, %90
  br i1 %91, label %92, label %204

92:                                               ; preds = %83
  %93 = icmp eq ptr %87, %88
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  store i32 -1, ptr %87, align 4, !tbaa !22
  %95 = getelementptr inbounds i32, ptr %87, i64 1
  br label %133

96:                                               ; preds = %92
  %97 = ptrtoint ptr %87 to i64
  %98 = ptrtoint ptr %86 to i64
  %99 = sub i64 %97, %98
  %100 = icmp eq i64 %99, 9223372036854775804
  br i1 %100, label %101, label %103

101:                                              ; preds = %96
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %102 unwind label %146

102:                                              ; preds = %101
  unreachable

103:                                              ; preds = %96
  %104 = ashr exact i64 %99, 2
  %105 = tail call i64 @llvm.umax.i64(i64 %104, i64 1)
  %106 = add i64 %105, %104
  %107 = icmp ult i64 %106, %104
  %108 = icmp ugt i64 %106, 2305843009213693951
  %109 = or i1 %107, %108
  %110 = select i1 %109, i64 2305843009213693951, i64 %106
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %103
  %113 = shl nuw nsw i64 %110, 2
  %114 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %113) #21
          to label %115 unwind label %144

115:                                              ; preds = %112, %103
  %116 = phi ptr [ null, %103 ], [ %114, %112 ]
  %117 = getelementptr inbounds i32, ptr %116, i64 %104
  store i32 -1, ptr %117, align 4, !tbaa !22
  %118 = icmp sgt i64 %99, 4
  br i1 %118, label %119, label %120, !prof !23

119:                                              ; preds = %115
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %116, ptr align 4 %86, i64 %99, i1 false)
  br label %125

120:                                              ; preds = %115
  %121 = icmp eq i64 %99, 4
  br i1 %121, label %122, label %125

122:                                              ; preds = %120
  %123 = load i32, ptr %86, align 4, !tbaa !22
  store i32 %123, ptr %116, align 4, !tbaa !22
  %124 = getelementptr inbounds i32, ptr %117, i64 1
  br label %128

125:                                              ; preds = %120, %119
  %126 = getelementptr inbounds i32, ptr %117, i64 1
  %127 = icmp eq ptr %86, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %122, %125
  %129 = phi ptr [ %124, %122 ], [ %126, %125 ]
  tail call void @_ZdlPv(ptr noundef nonnull %86) #23
  br label %130

130:                                              ; preds = %128, %125
  %131 = phi ptr [ %126, %125 ], [ %129, %128 ]
  %132 = getelementptr inbounds i32, ptr %116, i64 %110
  br label %133

133:                                              ; preds = %94, %130
  %134 = phi ptr [ %132, %130 ], [ %88, %94 ]
  %135 = phi ptr [ %131, %130 ], [ %95, %94 ]
  %136 = phi ptr [ %116, %130 ], [ %86, %94 ]
  %137 = add i32 %85, 1
  %138 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %89, i64 1
  %139 = load ptr, ptr %20, align 8, !tbaa !21
  %140 = icmp eq ptr %138, %139
  br i1 %140, label %141, label %250

141:                                              ; preds = %133
  %142 = add i32 %84, 1
  %143 = icmp ult i32 %142, %17
  br i1 %143, label %148, label %258

144:                                              ; preds = %112
  %145 = landingpad { ptr, i32 }
          cleanup
  br label %384

146:                                              ; preds = %101
  %147 = landingpad { ptr, i32 }
          cleanup
  br label %384

148:                                              ; preds = %141, %194
  %149 = phi i32 [ %198, %194 ], [ %142, %141 ]
  %150 = phi ptr [ %197, %194 ], [ %136, %141 ]
  %151 = phi ptr [ %196, %194 ], [ %135, %141 ]
  %152 = phi ptr [ %195, %194 ], [ %134, %141 ]
  %153 = sub i32 %149, %137
  %154 = icmp eq ptr %151, %152
  br i1 %154, label %157, label %155

155:                                              ; preds = %148
  store i32 %153, ptr %151, align 4, !tbaa !22
  %156 = getelementptr inbounds i32, ptr %151, i64 1
  br label %194

157:                                              ; preds = %148
  %158 = ptrtoint ptr %151 to i64
  %159 = ptrtoint ptr %150 to i64
  %160 = sub i64 %158, %159
  %161 = icmp eq i64 %160, 9223372036854775804
  br i1 %161, label %162, label %164

162:                                              ; preds = %157
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %163 unwind label %202

163:                                              ; preds = %162
  unreachable

164:                                              ; preds = %157
  %165 = ashr exact i64 %160, 2
  %166 = tail call i64 @llvm.umax.i64(i64 %165, i64 1)
  %167 = add i64 %166, %165
  %168 = icmp ult i64 %167, %165
  %169 = icmp ugt i64 %167, 2305843009213693951
  %170 = or i1 %168, %169
  %171 = select i1 %170, i64 2305843009213693951, i64 %167
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %176, label %173

173:                                              ; preds = %164
  %174 = shl nuw nsw i64 %171, 2
  %175 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %174) #21
          to label %176 unwind label %200

176:                                              ; preds = %173, %164
  %177 = phi ptr [ null, %164 ], [ %175, %173 ]
  %178 = getelementptr inbounds i32, ptr %177, i64 %165
  store i32 %153, ptr %178, align 4, !tbaa !22
  %179 = icmp sgt i64 %160, 4
  br i1 %179, label %180, label %181, !prof !23

180:                                              ; preds = %176
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %177, ptr align 4 %150, i64 %160, i1 false)
  br label %186

181:                                              ; preds = %176
  %182 = icmp eq i64 %160, 4
  br i1 %182, label %183, label %186

183:                                              ; preds = %181
  %184 = load i32, ptr %150, align 4, !tbaa !22
  store i32 %184, ptr %177, align 4, !tbaa !22
  %185 = getelementptr inbounds i32, ptr %178, i64 1
  br label %189

186:                                              ; preds = %181, %180
  %187 = getelementptr inbounds i32, ptr %178, i64 1
  %188 = icmp eq ptr %150, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %183, %186
  %190 = phi ptr [ %185, %183 ], [ %187, %186 ]
  tail call void @_ZdlPv(ptr noundef nonnull %150) #23
  br label %191

191:                                              ; preds = %189, %186
  %192 = phi ptr [ %187, %186 ], [ %190, %189 ]
  %193 = getelementptr inbounds i32, ptr %177, i64 %171
  br label %194

194:                                              ; preds = %191, %155
  %195 = phi ptr [ %193, %191 ], [ %152, %155 ]
  %196 = phi ptr [ %192, %191 ], [ %156, %155 ]
  %197 = phi ptr [ %177, %191 ], [ %150, %155 ]
  %198 = add nuw i32 %149, 1
  %199 = icmp eq i32 %198, %17
  br i1 %199, label %258, label %148

200:                                              ; preds = %173
  %201 = landingpad { ptr, i32 }
          cleanup
  br label %384

202:                                              ; preds = %162
  %203 = landingpad { ptr, i32 }
          cleanup
  br label %384

204:                                              ; preds = %83
  %205 = sub i32 %84, %85
  %206 = icmp eq ptr %87, %88
  br i1 %206, label %209, label %207

207:                                              ; preds = %204
  store i32 %205, ptr %87, align 4, !tbaa !22
  %208 = getelementptr inbounds i32, ptr %87, i64 1
  br label %250

209:                                              ; preds = %204
  %210 = ptrtoint ptr %87 to i64
  %211 = ptrtoint ptr %86 to i64
  %212 = sub i64 %210, %211
  %213 = icmp eq i64 %212, 9223372036854775804
  br i1 %213, label %214, label %216

214:                                              ; preds = %209
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %215 unwind label %248

215:                                              ; preds = %214
  unreachable

216:                                              ; preds = %209
  %217 = ashr exact i64 %212, 2
  %218 = tail call i64 @llvm.umax.i64(i64 %217, i64 1)
  %219 = add i64 %218, %217
  %220 = icmp ult i64 %219, %217
  %221 = icmp ugt i64 %219, 2305843009213693951
  %222 = or i1 %220, %221
  %223 = select i1 %222, i64 2305843009213693951, i64 %219
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %228, label %225

225:                                              ; preds = %216
  %226 = shl nuw nsw i64 %223, 2
  %227 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %226) #21
          to label %228 unwind label %246

228:                                              ; preds = %225, %216
  %229 = phi ptr [ null, %216 ], [ %227, %225 ]
  %230 = getelementptr inbounds i32, ptr %229, i64 %217
  store i32 %205, ptr %230, align 4, !tbaa !22
  %231 = icmp sgt i64 %212, 4
  br i1 %231, label %232, label %233, !prof !23

232:                                              ; preds = %228
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %229, ptr align 4 %86, i64 %212, i1 false)
  br label %238

233:                                              ; preds = %228
  %234 = icmp eq i64 %212, 4
  br i1 %234, label %235, label %238

235:                                              ; preds = %233
  %236 = load i32, ptr %86, align 4, !tbaa !22
  store i32 %236, ptr %229, align 4, !tbaa !22
  %237 = getelementptr inbounds i32, ptr %230, i64 1
  br label %241

238:                                              ; preds = %233, %232
  %239 = getelementptr inbounds i32, ptr %230, i64 1
  %240 = icmp eq ptr %86, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %235, %238
  %242 = phi ptr [ %237, %235 ], [ %239, %238 ]
  tail call void @_ZdlPv(ptr noundef nonnull %86) #23
  br label %243

243:                                              ; preds = %241, %238
  %244 = phi ptr [ %239, %238 ], [ %242, %241 ]
  %245 = getelementptr inbounds i32, ptr %229, i64 %223
  br label %250

246:                                              ; preds = %225
  %247 = landingpad { ptr, i32 }
          cleanup
  br label %384

248:                                              ; preds = %214
  %249 = landingpad { ptr, i32 }
          cleanup
  br label %384

250:                                              ; preds = %207, %243, %133
  %251 = phi ptr [ %138, %133 ], [ %89, %243 ], [ %89, %207 ]
  %252 = phi ptr [ %134, %133 ], [ %245, %243 ], [ %88, %207 ]
  %253 = phi ptr [ %135, %133 ], [ %244, %243 ], [ %208, %207 ]
  %254 = phi ptr [ %136, %133 ], [ %229, %243 ], [ %86, %207 ]
  %255 = phi i32 [ %137, %133 ], [ %85, %243 ], [ %85, %207 ]
  %256 = add nuw i32 %84, 1
  %257 = icmp eq i32 %256, %17
  br i1 %257, label %258, label %83

258:                                              ; preds = %250, %194, %73, %24, %26, %141, %27
  %259 = phi ptr [ %18, %27 ], [ %18, %141 ], [ %18, %26 ], [ %25, %24 ], [ %18, %73 ], [ %18, %194 ], [ %18, %250 ]
  %260 = phi ptr [ %15, %27 ], [ %136, %141 ], [ %15, %26 ], [ null, %24 ], [ %76, %73 ], [ %197, %194 ], [ %254, %250 ]
  %261 = load i32, ptr %4, align 8, !tbaa !61
  %262 = zext i32 %261 to i64
  %263 = load ptr, ptr %5, align 8, !tbaa !58
  %264 = getelementptr inbounds i32, ptr %263, i64 %262
  %265 = load i32, ptr %264, align 4, !tbaa !22
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %278, label %267

267:                                              ; preds = %258
  %268 = load ptr, ptr %259, align 8, !tbaa !21
  %269 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %270 = load ptr, ptr %269, align 8
  %271 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %272 = load i32, ptr %271, align 8
  %273 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %274 = load ptr, ptr %273, align 8
  %275 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %276 = load ptr, ptr %275, align 8
  %277 = zext i32 %265 to i64
  br label %282

278:                                              ; preds = %380, %258
  %279 = icmp eq ptr %260, null
  br i1 %279, label %281, label %280

280:                                              ; preds = %278
  tail call void @_ZdlPv(ptr noundef nonnull %260) #23
  br label %281

281:                                              ; preds = %278, %280
  ret void

282:                                              ; preds = %267, %380
  %283 = phi i64 [ 0, %267 ], [ %382, %380 ]
  %284 = phi ptr [ %268, %267 ], [ %381, %380 ]
  %285 = getelementptr inbounds i32, ptr %260, i64 %283
  %286 = load i32, ptr %285, align 4, !tbaa !22
  %287 = icmp eq i32 %286, -1
  br i1 %287, label %288, label %300

288:                                              ; preds = %282
  %289 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 0, i32 1
  %290 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %291 = load ptr, ptr %290, align 8, !tbaa !31
  %292 = load ptr, ptr %289, align 8, !tbaa !32
  %293 = ptrtoint ptr %291 to i64
  %294 = ptrtoint ptr %292 to i64
  %295 = sub i64 %293, %294
  %296 = ashr exact i64 %295, 4
  %297 = icmp eq ptr %291, %292
  br i1 %297, label %336, label %298

298:                                              ; preds = %288
  %299 = trunc i64 %283 to i32
  br label %333

300:                                              ; preds = %282, %300
  %301 = phi i32 [ %302, %300 ], [ %261, %282 ]
  %302 = add i32 %301, -1
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i32, ptr %263, i64 %303
  %305 = load i32, ptr %304, align 4, !tbaa !22
  %306 = zext i32 %305 to i64
  %307 = icmp ult i64 %283, %306
  br i1 %307, label %300, label %308

308:                                              ; preds = %300
  %309 = trunc i64 %283 to i32
  %310 = sub i32 %309, %305
  %311 = zext i32 %310 to i64
  %312 = zext i32 %302 to i64
  %313 = getelementptr inbounds %"class.dealii::Vector.35", ptr %270, i64 %312, i32 3
  %314 = load ptr, ptr %313, align 8, !tbaa !60
  %315 = getelementptr inbounds double, ptr %314, i64 %311
  %316 = load double, ptr %315, align 8, !tbaa !52
  br label %317

317:                                              ; preds = %317, %308
  %318 = phi i32 [ %272, %308 ], [ %319, %317 ]
  %319 = add i32 %318, -1
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i32, ptr %274, i64 %320
  %322 = load i32, ptr %321, align 4, !tbaa !22
  %323 = icmp ugt i32 %322, %286
  br i1 %323, label %317, label %324

324:                                              ; preds = %317
  %325 = sub i32 %286, %322
  %326 = zext i32 %325 to i64
  %327 = zext i32 %319 to i64
  %328 = getelementptr inbounds %"class.dealii::Vector.35", ptr %276, i64 %327, i32 3
  %329 = load ptr, ptr %328, align 8, !tbaa !60
  %330 = getelementptr inbounds double, ptr %329, i64 %326
  %331 = load double, ptr %330, align 8, !tbaa !52
  %332 = fadd double %316, %331
  store double %332, ptr %330, align 8, !tbaa !52
  br label %380

333:                                              ; preds = %298, %368
  %334 = phi i64 [ %378, %368 ], [ 0, %298 ]
  %335 = phi i32 [ %377, %368 ], [ 0, %298 ]
  br label %338

336:                                              ; preds = %368, %288
  %337 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 1
  br label %380

338:                                              ; preds = %333, %338
  %339 = phi i32 [ %340, %338 ], [ %261, %333 ]
  %340 = add i32 %339, -1
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds i32, ptr %263, i64 %341
  %343 = load i32, ptr %342, align 4, !tbaa !22
  %344 = zext i32 %343 to i64
  %345 = icmp ult i64 %283, %344
  br i1 %345, label %338, label %346

346:                                              ; preds = %338
  %347 = sub i32 %299, %343
  %348 = zext i32 %347 to i64
  %349 = zext i32 %340 to i64
  %350 = getelementptr inbounds %"class.dealii::Vector.35", ptr %270, i64 %349, i32 3
  %351 = load ptr, ptr %350, align 8, !tbaa !60
  %352 = getelementptr inbounds double, ptr %351, i64 %348
  %353 = load double, ptr %352, align 8, !tbaa !52
  %354 = getelementptr inbounds %"struct.std::pair", ptr %292, i64 %334
  %355 = getelementptr inbounds %"struct.std::pair", ptr %292, i64 %334, i32 1
  %356 = load double, ptr %355, align 8, !tbaa !35
  %357 = load i32, ptr %354, align 8, !tbaa !37
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds i32, ptr %260, i64 %358
  %360 = load i32, ptr %359, align 4, !tbaa !22
  br label %361

361:                                              ; preds = %361, %346
  %362 = phi i32 [ %272, %346 ], [ %363, %361 ]
  %363 = add i32 %362, -1
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds i32, ptr %274, i64 %364
  %366 = load i32, ptr %365, align 4, !tbaa !22
  %367 = icmp ugt i32 %366, %360
  br i1 %367, label %361, label %368

368:                                              ; preds = %361
  %369 = sub i32 %360, %366
  %370 = zext i32 %369 to i64
  %371 = zext i32 %363 to i64
  %372 = getelementptr inbounds %"class.dealii::Vector.35", ptr %276, i64 %371, i32 3
  %373 = load ptr, ptr %372, align 8, !tbaa !60
  %374 = getelementptr inbounds double, ptr %373, i64 %370
  %375 = load double, ptr %374, align 8, !tbaa !52
  %376 = tail call double @llvm.fmuladd.f64(double %353, double %356, double %375)
  store double %376, ptr %374, align 8, !tbaa !52
  %377 = add i32 %335, 1
  %378 = zext i32 %377 to i64
  %379 = icmp eq i64 %296, %378
  br i1 %379, label %336, label %333

380:                                              ; preds = %324, %336
  %381 = phi ptr [ %337, %336 ], [ %284, %324 ]
  %382 = add nuw nsw i64 %283, 1
  %383 = icmp eq i64 %382, %277
  br i1 %383, label %278, label %282

384:                                              ; preds = %246, %248, %200, %202, %144, %146, %79, %81
  %385 = phi ptr [ %30, %79 ], [ %30, %81 ], [ %86, %144 ], [ %86, %146 ], [ %150, %200 ], [ %150, %202 ], [ %86, %246 ], [ %86, %248 ]
  %386 = phi { ptr, i32 } [ %80, %79 ], [ %82, %81 ], [ %145, %144 ], [ %147, %146 ], [ %201, %200 ], [ %203, %202 ], [ %247, %246 ], [ %249, %248 ]
  %387 = icmp eq ptr %385, null
  br i1 %387, label %389, label %388

388:                                              ; preds = %384
  tail call void @_ZdlPv(ptr noundef nonnull %385) #23
  br label %389

389:                                              ; preds = %388, %384
  resume { ptr, i32 } %386
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseINS_11BlockVectorIdEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %85, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %10 = load i32, ptr %9, align 8
  %11 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8
  br label %15

15:                                               ; preds = %8, %35
  %16 = phi ptr [ %4, %8 ], [ %42, %35 ]
  %17 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !31
  %20 = load ptr, ptr %17, align 8, !tbaa !32
  %21 = ptrtoint ptr %19 to i64
  %22 = ptrtoint ptr %20 to i64
  %23 = sub i64 %21, %22
  %24 = ashr exact i64 %23, 4
  %25 = icmp eq ptr %19, %20
  %26 = load i32, ptr %16, align 8, !tbaa !24
  br i1 %25, label %27, label %44

27:                                               ; preds = %73, %15
  br label %28

28:                                               ; preds = %27, %28
  %29 = phi i32 [ %30, %28 ], [ %10, %27 ]
  %30 = add i32 %29, -1
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i32, ptr %12, i64 %31
  %33 = load i32, ptr %32, align 4, !tbaa !22
  %34 = icmp ugt i32 %33, %26
  br i1 %34, label %28, label %35

35:                                               ; preds = %28
  %36 = sub i32 %26, %33
  %37 = zext i32 %36 to i64
  %38 = zext i32 %30 to i64
  %39 = getelementptr inbounds %"class.dealii::Vector.35", ptr %14, i64 %38, i32 3
  %40 = load ptr, ptr %39, align 8, !tbaa !60
  %41 = getelementptr inbounds double, ptr %40, i64 %37
  store double 0.000000e+00, ptr %41, align 8, !tbaa !52
  %42 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 1
  %43 = icmp eq ptr %42, %6
  br i1 %43, label %85, label %15

44:                                               ; preds = %15, %73
  %45 = phi i64 [ %83, %73 ], [ 0, %15 ]
  %46 = phi i32 [ %82, %73 ], [ 0, %15 ]
  br label %47

47:                                               ; preds = %47, %44
  %48 = phi i32 [ %10, %44 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %12, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !22
  %53 = icmp ugt i32 %52, %26
  br i1 %53, label %47, label %54

54:                                               ; preds = %47
  %55 = sub i32 %26, %52
  %56 = zext i32 %55 to i64
  %57 = zext i32 %49 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector.35", ptr %14, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !60
  %60 = getelementptr inbounds double, ptr %59, i64 %56
  %61 = load double, ptr %60, align 8, !tbaa !52
  %62 = getelementptr inbounds %"struct.std::pair", ptr %20, i64 %45
  %63 = getelementptr inbounds %"struct.std::pair", ptr %20, i64 %45, i32 1
  %64 = load double, ptr %63, align 8, !tbaa !35
  %65 = load i32, ptr %62, align 8, !tbaa !37
  br label %66

66:                                               ; preds = %66, %54
  %67 = phi i32 [ %10, %54 ], [ %68, %66 ]
  %68 = add i32 %67, -1
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, ptr %12, i64 %69
  %71 = load i32, ptr %70, align 4, !tbaa !22
  %72 = icmp ugt i32 %71, %65
  br i1 %72, label %66, label %73

73:                                               ; preds = %66
  %74 = sub i32 %65, %71
  %75 = zext i32 %74 to i64
  %76 = zext i32 %68 to i64
  %77 = getelementptr inbounds %"class.dealii::Vector.35", ptr %14, i64 %76, i32 3
  %78 = load ptr, ptr %77, align 8, !tbaa !60
  %79 = getelementptr inbounds double, ptr %78, i64 %75
  %80 = load double, ptr %79, align 8, !tbaa !52
  %81 = tail call double @llvm.fmuladd.f64(double %61, double %64, double %80)
  store double %81, ptr %79, align 8, !tbaa !52
  %82 = add i32 %46, 1
  %83 = zext i32 %82 to i64
  %84 = icmp eq i64 %24, %83
  br i1 %84, label %27, label %44

85:                                               ; preds = %35, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIfNS_11BlockVectorIdEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(128) %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 8 dereferenceable(128) %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %7 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %8 = load i32, ptr %6, align 8, !tbaa !61
  %9 = zext i32 %8 to i64
  %10 = load ptr, ptr %7, align 8, !tbaa !58
  %11 = getelementptr inbounds i32, ptr %10, i64 %9
  %12 = load i32, ptr %11, align 4, !tbaa !22
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %4, i64 0, i32 2
  %16 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %4, i64 0, i32 2, i32 1
  %17 = load i32, ptr %15, align 8, !tbaa !61
  %18 = zext i32 %17 to i64
  %19 = load ptr, ptr %16, align 8, !tbaa !58
  %20 = getelementptr inbounds i32, ptr %19, i64 %18
  %21 = load i32, ptr %20, align 4, !tbaa !22
  %22 = icmp eq i32 %21, 0
  br label %23

23:                                               ; preds = %14, %5
  %24 = phi i1 [ false, %5 ], [ %22, %14 ]
  %25 = tail call noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
  %26 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !38
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %23
  %30 = zext i32 %27 to i64
  %31 = shl nuw nsw i64 %30, 2
  %32 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %31) #21
  %33 = getelementptr inbounds i32, ptr %32, i64 %30
  %34 = load i32, ptr %26, align 4, !tbaa !38
  %35 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !21
  %37 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !21
  %39 = icmp eq ptr %36, %38
  %40 = icmp eq i32 %34, 0
  br i1 %39, label %44, label %43

41:                                               ; preds = %23
  %42 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %275

43:                                               ; preds = %29
  br i1 %40, label %275, label %100

44:                                               ; preds = %29
  br i1 %40, label %275, label %45

45:                                               ; preds = %44, %90
  %46 = phi i32 [ %94, %90 ], [ 0, %44 ]
  %47 = phi ptr [ %93, %90 ], [ %32, %44 ]
  %48 = phi ptr [ %92, %90 ], [ %32, %44 ]
  %49 = phi ptr [ %91, %90 ], [ %33, %44 ]
  %50 = icmp eq ptr %48, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %45
  store i32 %46, ptr %48, align 4, !tbaa !22
  %52 = getelementptr inbounds i32, ptr %48, i64 1
  br label %90

53:                                               ; preds = %45
  %54 = ptrtoint ptr %48 to i64
  %55 = ptrtoint ptr %47 to i64
  %56 = sub i64 %54, %55
  %57 = icmp eq i64 %56, 9223372036854775804
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %59 unwind label %98

59:                                               ; preds = %58
  unreachable

60:                                               ; preds = %53
  %61 = ashr exact i64 %56, 2
  %62 = tail call i64 @llvm.umax.i64(i64 %61, i64 1)
  %63 = add i64 %62, %61
  %64 = icmp ult i64 %63, %61
  %65 = icmp ugt i64 %63, 2305843009213693951
  %66 = or i1 %64, %65
  %67 = select i1 %66, i64 2305843009213693951, i64 %63
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %60
  %70 = shl nuw nsw i64 %67, 2
  %71 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %70) #21
          to label %72 unwind label %96

72:                                               ; preds = %69, %60
  %73 = phi ptr [ null, %60 ], [ %71, %69 ]
  %74 = getelementptr inbounds i32, ptr %73, i64 %61
  store i32 %46, ptr %74, align 4, !tbaa !22
  %75 = icmp sgt i64 %56, 4
  br i1 %75, label %76, label %77, !prof !23

76:                                               ; preds = %72
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %73, ptr align 4 %47, i64 %56, i1 false)
  br label %82

77:                                               ; preds = %72
  %78 = icmp eq i64 %56, 4
  br i1 %78, label %79, label %82

79:                                               ; preds = %77
  %80 = load i32, ptr %47, align 4, !tbaa !22
  store i32 %80, ptr %73, align 4, !tbaa !22
  %81 = getelementptr inbounds i32, ptr %74, i64 1
  br label %85

82:                                               ; preds = %77, %76
  %83 = getelementptr inbounds i32, ptr %74, i64 1
  %84 = icmp eq ptr %47, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %79, %82
  %86 = phi ptr [ %81, %79 ], [ %83, %82 ]
  tail call void @_ZdlPv(ptr noundef nonnull %47) #23
  br label %87

87:                                               ; preds = %85, %82
  %88 = phi ptr [ %83, %82 ], [ %86, %85 ]
  %89 = getelementptr inbounds i32, ptr %73, i64 %67
  br label %90

90:                                               ; preds = %87, %51
  %91 = phi ptr [ %89, %87 ], [ %49, %51 ]
  %92 = phi ptr [ %88, %87 ], [ %52, %51 ]
  %93 = phi ptr [ %73, %87 ], [ %47, %51 ]
  %94 = add nuw i32 %46, 1
  %95 = icmp eq i32 %94, %34
  br i1 %95, label %275, label %45

96:                                               ; preds = %69
  %97 = landingpad { ptr, i32 }
          cleanup
  br label %757

98:                                               ; preds = %58
  %99 = landingpad { ptr, i32 }
          cleanup
  br label %757

100:                                              ; preds = %43, %267
  %101 = phi i32 [ %273, %267 ], [ 0, %43 ]
  %102 = phi i32 [ %272, %267 ], [ 0, %43 ]
  %103 = phi ptr [ %271, %267 ], [ %32, %43 ]
  %104 = phi ptr [ %270, %267 ], [ %32, %43 ]
  %105 = phi ptr [ %269, %267 ], [ %33, %43 ]
  %106 = phi ptr [ %268, %267 ], [ %36, %43 ]
  %107 = load i32, ptr %106, align 8, !tbaa !24
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %221

109:                                              ; preds = %100
  %110 = icmp eq ptr %104, %105
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  store i32 -1, ptr %104, align 4, !tbaa !22
  %112 = getelementptr inbounds i32, ptr %104, i64 1
  br label %150

113:                                              ; preds = %109
  %114 = ptrtoint ptr %104 to i64
  %115 = ptrtoint ptr %103 to i64
  %116 = sub i64 %114, %115
  %117 = icmp eq i64 %116, 9223372036854775804
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %119 unwind label %163

119:                                              ; preds = %118
  unreachable

120:                                              ; preds = %113
  %121 = ashr exact i64 %116, 2
  %122 = tail call i64 @llvm.umax.i64(i64 %121, i64 1)
  %123 = add i64 %122, %121
  %124 = icmp ult i64 %123, %121
  %125 = icmp ugt i64 %123, 2305843009213693951
  %126 = or i1 %124, %125
  %127 = select i1 %126, i64 2305843009213693951, i64 %123
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %120
  %130 = shl nuw nsw i64 %127, 2
  %131 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %130) #21
          to label %132 unwind label %161

132:                                              ; preds = %129, %120
  %133 = phi ptr [ null, %120 ], [ %131, %129 ]
  %134 = getelementptr inbounds i32, ptr %133, i64 %121
  store i32 -1, ptr %134, align 4, !tbaa !22
  %135 = icmp sgt i64 %116, 4
  br i1 %135, label %136, label %137, !prof !23

136:                                              ; preds = %132
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %133, ptr align 4 %103, i64 %116, i1 false)
  br label %142

137:                                              ; preds = %132
  %138 = icmp eq i64 %116, 4
  br i1 %138, label %139, label %142

139:                                              ; preds = %137
  %140 = load i32, ptr %103, align 4, !tbaa !22
  store i32 %140, ptr %133, align 4, !tbaa !22
  %141 = getelementptr inbounds i32, ptr %134, i64 1
  br label %145

142:                                              ; preds = %137, %136
  %143 = getelementptr inbounds i32, ptr %134, i64 1
  %144 = icmp eq ptr %103, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139, %142
  %146 = phi ptr [ %141, %139 ], [ %143, %142 ]
  tail call void @_ZdlPv(ptr noundef nonnull %103) #23
  br label %147

147:                                              ; preds = %145, %142
  %148 = phi ptr [ %143, %142 ], [ %146, %145 ]
  %149 = getelementptr inbounds i32, ptr %133, i64 %127
  br label %150

150:                                              ; preds = %111, %147
  %151 = phi ptr [ %149, %147 ], [ %105, %111 ]
  %152 = phi ptr [ %148, %147 ], [ %112, %111 ]
  %153 = phi ptr [ %133, %147 ], [ %103, %111 ]
  %154 = add i32 %102, 1
  %155 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %106, i64 1
  %156 = load ptr, ptr %37, align 8, !tbaa !21
  %157 = icmp eq ptr %155, %156
  br i1 %157, label %158, label %267

158:                                              ; preds = %150
  %159 = add i32 %101, 1
  %160 = icmp ult i32 %159, %34
  br i1 %160, label %165, label %275

161:                                              ; preds = %129
  %162 = landingpad { ptr, i32 }
          cleanup
  br label %757

163:                                              ; preds = %118
  %164 = landingpad { ptr, i32 }
          cleanup
  br label %757

165:                                              ; preds = %158, %211
  %166 = phi i32 [ %215, %211 ], [ %159, %158 ]
  %167 = phi ptr [ %214, %211 ], [ %153, %158 ]
  %168 = phi ptr [ %213, %211 ], [ %152, %158 ]
  %169 = phi ptr [ %212, %211 ], [ %151, %158 ]
  %170 = sub i32 %166, %154
  %171 = icmp eq ptr %168, %169
  br i1 %171, label %174, label %172

172:                                              ; preds = %165
  store i32 %170, ptr %168, align 4, !tbaa !22
  %173 = getelementptr inbounds i32, ptr %168, i64 1
  br label %211

174:                                              ; preds = %165
  %175 = ptrtoint ptr %168 to i64
  %176 = ptrtoint ptr %167 to i64
  %177 = sub i64 %175, %176
  %178 = icmp eq i64 %177, 9223372036854775804
  br i1 %178, label %179, label %181

179:                                              ; preds = %174
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %180 unwind label %219

180:                                              ; preds = %179
  unreachable

181:                                              ; preds = %174
  %182 = ashr exact i64 %177, 2
  %183 = tail call i64 @llvm.umax.i64(i64 %182, i64 1)
  %184 = add i64 %183, %182
  %185 = icmp ult i64 %184, %182
  %186 = icmp ugt i64 %184, 2305843009213693951
  %187 = or i1 %185, %186
  %188 = select i1 %187, i64 2305843009213693951, i64 %184
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %181
  %191 = shl nuw nsw i64 %188, 2
  %192 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %191) #21
          to label %193 unwind label %217

193:                                              ; preds = %190, %181
  %194 = phi ptr [ null, %181 ], [ %192, %190 ]
  %195 = getelementptr inbounds i32, ptr %194, i64 %182
  store i32 %170, ptr %195, align 4, !tbaa !22
  %196 = icmp sgt i64 %177, 4
  br i1 %196, label %197, label %198, !prof !23

197:                                              ; preds = %193
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %194, ptr align 4 %167, i64 %177, i1 false)
  br label %203

198:                                              ; preds = %193
  %199 = icmp eq i64 %177, 4
  br i1 %199, label %200, label %203

200:                                              ; preds = %198
  %201 = load i32, ptr %167, align 4, !tbaa !22
  store i32 %201, ptr %194, align 4, !tbaa !22
  %202 = getelementptr inbounds i32, ptr %195, i64 1
  br label %206

203:                                              ; preds = %198, %197
  %204 = getelementptr inbounds i32, ptr %195, i64 1
  %205 = icmp eq ptr %167, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %200, %203
  %207 = phi ptr [ %202, %200 ], [ %204, %203 ]
  tail call void @_ZdlPv(ptr noundef nonnull %167) #23
  br label %208

208:                                              ; preds = %206, %203
  %209 = phi ptr [ %204, %203 ], [ %207, %206 ]
  %210 = getelementptr inbounds i32, ptr %194, i64 %188
  br label %211

211:                                              ; preds = %208, %172
  %212 = phi ptr [ %210, %208 ], [ %169, %172 ]
  %213 = phi ptr [ %209, %208 ], [ %173, %172 ]
  %214 = phi ptr [ %194, %208 ], [ %167, %172 ]
  %215 = add nuw i32 %166, 1
  %216 = icmp eq i32 %215, %34
  br i1 %216, label %275, label %165

217:                                              ; preds = %190
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %757

219:                                              ; preds = %179
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %757

221:                                              ; preds = %100
  %222 = sub i32 %101, %102
  %223 = icmp eq ptr %104, %105
  br i1 %223, label %226, label %224

224:                                              ; preds = %221
  store i32 %222, ptr %104, align 4, !tbaa !22
  %225 = getelementptr inbounds i32, ptr %104, i64 1
  br label %267

226:                                              ; preds = %221
  %227 = ptrtoint ptr %104 to i64
  %228 = ptrtoint ptr %103 to i64
  %229 = sub i64 %227, %228
  %230 = icmp eq i64 %229, 9223372036854775804
  br i1 %230, label %231, label %233

231:                                              ; preds = %226
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %232 unwind label %265

232:                                              ; preds = %231
  unreachable

233:                                              ; preds = %226
  %234 = ashr exact i64 %229, 2
  %235 = tail call i64 @llvm.umax.i64(i64 %234, i64 1)
  %236 = add i64 %235, %234
  %237 = icmp ult i64 %236, %234
  %238 = icmp ugt i64 %236, 2305843009213693951
  %239 = or i1 %237, %238
  %240 = select i1 %239, i64 2305843009213693951, i64 %236
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %245, label %242

242:                                              ; preds = %233
  %243 = shl nuw nsw i64 %240, 2
  %244 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %243) #21
          to label %245 unwind label %263

245:                                              ; preds = %242, %233
  %246 = phi ptr [ null, %233 ], [ %244, %242 ]
  %247 = getelementptr inbounds i32, ptr %246, i64 %234
  store i32 %222, ptr %247, align 4, !tbaa !22
  %248 = icmp sgt i64 %229, 4
  br i1 %248, label %249, label %250, !prof !23

249:                                              ; preds = %245
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %246, ptr align 4 %103, i64 %229, i1 false)
  br label %255

250:                                              ; preds = %245
  %251 = icmp eq i64 %229, 4
  br i1 %251, label %252, label %255

252:                                              ; preds = %250
  %253 = load i32, ptr %103, align 4, !tbaa !22
  store i32 %253, ptr %246, align 4, !tbaa !22
  %254 = getelementptr inbounds i32, ptr %247, i64 1
  br label %258

255:                                              ; preds = %250, %249
  %256 = getelementptr inbounds i32, ptr %247, i64 1
  %257 = icmp eq ptr %103, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %252, %255
  %259 = phi ptr [ %254, %252 ], [ %256, %255 ]
  tail call void @_ZdlPv(ptr noundef nonnull %103) #23
  br label %260

260:                                              ; preds = %258, %255
  %261 = phi ptr [ %256, %255 ], [ %259, %258 ]
  %262 = getelementptr inbounds i32, ptr %246, i64 %240
  br label %267

263:                                              ; preds = %242
  %264 = landingpad { ptr, i32 }
          cleanup
  br label %757

265:                                              ; preds = %231
  %266 = landingpad { ptr, i32 }
          cleanup
  br label %757

267:                                              ; preds = %224, %260, %150
  %268 = phi ptr [ %155, %150 ], [ %106, %260 ], [ %106, %224 ]
  %269 = phi ptr [ %151, %150 ], [ %262, %260 ], [ %105, %224 ]
  %270 = phi ptr [ %152, %150 ], [ %261, %260 ], [ %225, %224 ]
  %271 = phi ptr [ %153, %150 ], [ %246, %260 ], [ %103, %224 ]
  %272 = phi i32 [ %154, %150 ], [ %102, %260 ], [ %102, %224 ]
  %273 = add nuw i32 %101, 1
  %274 = icmp eq i32 %273, %34
  br i1 %274, label %275, label %100

275:                                              ; preds = %267, %211, %90, %41, %43, %158, %44
  %276 = phi ptr [ %35, %44 ], [ %35, %158 ], [ %35, %43 ], [ %42, %41 ], [ %35, %90 ], [ %35, %211 ], [ %35, %267 ]
  %277 = phi ptr [ %32, %44 ], [ %153, %158 ], [ %32, %43 ], [ null, %41 ], [ %93, %90 ], [ %214, %211 ], [ %271, %267 ]
  %278 = load i32, ptr %26, align 4, !tbaa !38
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %291, label %280

280:                                              ; preds = %275
  %281 = load ptr, ptr %276, align 8, !tbaa !21
  %282 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 8
  %283 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 9
  %284 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %285 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 1
  %286 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 2
  %287 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %4, i64 0, i32 2
  %288 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %4, i64 0, i32 2, i32 1
  %289 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %4, i64 0, i32 1
  %290 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  br label %295

291:                                              ; preds = %752, %275
  %292 = icmp eq ptr %277, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %291
  tail call void @_ZdlPv(ptr noundef nonnull %277) #23
  br label %294

294:                                              ; preds = %291, %293
  ret void

295:                                              ; preds = %280, %752
  %296 = phi i64 [ 0, %280 ], [ %304, %752 ]
  %297 = phi ptr [ %281, %280 ], [ %753, %752 ]
  %298 = getelementptr inbounds i32, ptr %277, i64 %296
  %299 = load i32, ptr %298, align 4, !tbaa !22
  %300 = icmp eq i32 %299, -1
  %301 = load ptr, ptr %282, align 8, !tbaa !41
  %302 = getelementptr inbounds i64, ptr %301, i64 %296
  %303 = load i64, ptr %302, align 8, !tbaa !42
  %304 = add nuw nsw i64 %296, 1
  %305 = and i64 %303, 4294967295
  %306 = getelementptr inbounds i64, ptr %301, i64 %304
  %307 = load i64, ptr %306, align 8, !tbaa !42
  %308 = icmp ugt i64 %307, %305
  br i1 %300, label %474, label %309

309:                                              ; preds = %295
  br i1 %308, label %310, label %312

310:                                              ; preds = %309
  %311 = trunc i64 %303 to i32
  br label %315

312:                                              ; preds = %426, %309
  br i1 %24, label %752, label %433

313:                                              ; preds = %330
  %314 = landingpad { ptr, i32 }
          cleanup
  br label %761

315:                                              ; preds = %310, %426
  %316 = phi i64 [ %428, %426 ], [ %305, %310 ]
  %317 = phi i32 [ %427, %426 ], [ %311, %310 ]
  %318 = load ptr, ptr %283, align 8, !tbaa !43
  %319 = getelementptr inbounds i32, ptr %318, i64 %316
  %320 = load i32, ptr %319, align 4, !tbaa !22
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds i32, ptr %277, i64 %321
  %323 = load i32, ptr %322, align 4, !tbaa !22
  %324 = icmp eq i32 %323, -1
  br i1 %324, label %342, label %325

325:                                              ; preds = %315
  %326 = load ptr, ptr %284, align 8, !tbaa !44
  %327 = getelementptr inbounds float, ptr %326, i64 %316
  %328 = load float, ptr %327, align 4, !tbaa !33
  %329 = fcmp oeq float %328, 0.000000e+00
  br i1 %329, label %426, label %330

330:                                              ; preds = %325
  %331 = load i32, ptr %298, align 4, !tbaa !22
  %332 = load ptr, ptr %285, align 8, !tbaa !47
  %333 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %332, i32 noundef %331, i32 noundef %323)
          to label %334 unwind label %313

334:                                              ; preds = %330
  %335 = icmp eq i32 %333, -1
  br i1 %335, label %426, label %336

336:                                              ; preds = %334
  %337 = load ptr, ptr %286, align 8, !tbaa !44
  %338 = zext i32 %333 to i64
  %339 = getelementptr inbounds float, ptr %337, i64 %338
  %340 = load float, ptr %339, align 4, !tbaa !33
  %341 = fadd float %328, %340
  store float %341, ptr %339, align 4, !tbaa !33
  br label %426

342:                                              ; preds = %315
  %343 = load ptr, ptr %276, align 8, !tbaa !21
  br label %344

344:                                              ; preds = %344, %342
  %345 = phi ptr [ %343, %342 ], [ %348, %344 ]
  %346 = load i32, ptr %345, align 8, !tbaa !24
  %347 = icmp eq i32 %346, %320
  %348 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 1
  br i1 %347, label %349, label %344

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 0, i32 1
  %351 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %352 = load ptr, ptr %351, align 8, !tbaa !31
  %353 = load ptr, ptr %350, align 8, !tbaa !32
  %354 = icmp eq ptr %352, %353
  br i1 %354, label %355, label %358

355:                                              ; preds = %388, %349
  br i1 %24, label %426, label %398

356:                                              ; preds = %371
  %357 = landingpad { ptr, i32 }
          cleanup
  br label %761

358:                                              ; preds = %349, %388
  %359 = phi ptr [ %392, %388 ], [ %353, %349 ]
  %360 = phi i64 [ %390, %388 ], [ 0, %349 ]
  %361 = phi i32 [ %389, %388 ], [ 0, %349 ]
  %362 = load ptr, ptr %284, align 8, !tbaa !44
  %363 = getelementptr inbounds float, ptr %362, i64 %316
  %364 = load float, ptr %363, align 4, !tbaa !33
  %365 = fpext float %364 to double
  %366 = getelementptr inbounds %"struct.std::pair", ptr %359, i64 %360, i32 1
  %367 = load double, ptr %366, align 8, !tbaa !35
  %368 = fmul double %367, %365
  %369 = fptrunc double %368 to float
  %370 = fcmp oeq float %369, 0.000000e+00
  br i1 %370, label %388, label %371

371:                                              ; preds = %358
  %372 = getelementptr inbounds %"struct.std::pair", ptr %359, i64 %360
  %373 = load i32, ptr %372, align 8, !tbaa !37
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds i32, ptr %277, i64 %374
  %376 = load i32, ptr %375, align 4, !tbaa !22
  %377 = load i32, ptr %298, align 4, !tbaa !22
  %378 = load ptr, ptr %285, align 8, !tbaa !47
  %379 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %378, i32 noundef %377, i32 noundef %376)
          to label %380 unwind label %356

380:                                              ; preds = %371
  %381 = icmp eq i32 %379, -1
  br i1 %381, label %388, label %382

382:                                              ; preds = %380
  %383 = load ptr, ptr %286, align 8, !tbaa !44
  %384 = zext i32 %379 to i64
  %385 = getelementptr inbounds float, ptr %383, i64 %384
  %386 = load float, ptr %385, align 4, !tbaa !33
  %387 = fadd float %386, %369
  store float %387, ptr %385, align 4, !tbaa !33
  br label %388

388:                                              ; preds = %382, %380, %358
  %389 = add i32 %361, 1
  %390 = zext i32 %389 to i64
  %391 = load ptr, ptr %351, align 8, !tbaa !31
  %392 = load ptr, ptr %350, align 8, !tbaa !32
  %393 = ptrtoint ptr %391 to i64
  %394 = ptrtoint ptr %392 to i64
  %395 = sub i64 %393, %394
  %396 = ashr exact i64 %395, 4
  %397 = icmp eq i64 %396, %390
  br i1 %397, label %355, label %358

398:                                              ; preds = %355
  %399 = load ptr, ptr %284, align 8, !tbaa !44
  %400 = getelementptr inbounds float, ptr %399, i64 %316
  %401 = load float, ptr %400, align 4, !tbaa !33
  %402 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 0, i32 2
  %403 = load double, ptr %402, align 8, !tbaa !48
  %404 = load i32, ptr %298, align 4, !tbaa !22
  %405 = load i32, ptr %287, align 8, !tbaa !61
  %406 = load ptr, ptr %288, align 8, !tbaa !58
  br label %407

407:                                              ; preds = %407, %398
  %408 = phi i32 [ %405, %398 ], [ %409, %407 ]
  %409 = add i32 %408, -1
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds i32, ptr %406, i64 %410
  %412 = load i32, ptr %411, align 4, !tbaa !22
  %413 = icmp ugt i32 %412, %404
  br i1 %413, label %407, label %414

414:                                              ; preds = %407
  %415 = sub i32 %404, %412
  %416 = zext i32 %415 to i64
  %417 = zext i32 %409 to i64
  %418 = load ptr, ptr %289, align 8, !tbaa !66
  %419 = getelementptr inbounds %"class.dealii::Vector.35", ptr %418, i64 %417, i32 3
  %420 = load ptr, ptr %419, align 8, !tbaa !60
  %421 = getelementptr inbounds double, ptr %420, i64 %416
  %422 = fpext float %401 to double
  %423 = load double, ptr %421, align 8, !tbaa !52
  %424 = fneg double %422
  %425 = tail call double @llvm.fmuladd.f64(double %424, double %403, double %423)
  store double %425, ptr %421, align 8, !tbaa !52
  br label %426

426:                                              ; preds = %355, %414, %336, %334, %325
  %427 = add i32 %317, 1
  %428 = zext i32 %427 to i64
  %429 = load ptr, ptr %282, align 8, !tbaa !41
  %430 = getelementptr inbounds i64, ptr %429, i64 %304
  %431 = load i64, ptr %430, align 8, !tbaa !42
  %432 = icmp ugt i64 %431, %428
  br i1 %432, label %315, label %312

433:                                              ; preds = %312
  %434 = load i32, ptr %6, align 8, !tbaa !61
  %435 = load ptr, ptr %7, align 8, !tbaa !58
  br label %436

436:                                              ; preds = %436, %433
  %437 = phi i32 [ %434, %433 ], [ %438, %436 ]
  %438 = add i32 %437, -1
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds i32, ptr %435, i64 %439
  %441 = load i32, ptr %440, align 4, !tbaa !22
  %442 = zext i32 %441 to i64
  %443 = icmp ult i64 %296, %442
  br i1 %443, label %436, label %444

444:                                              ; preds = %436
  %445 = trunc i64 %296 to i32
  %446 = sub i32 %445, %441
  %447 = zext i32 %446 to i64
  %448 = zext i32 %438 to i64
  %449 = load ptr, ptr %290, align 8, !tbaa !66
  %450 = getelementptr inbounds %"class.dealii::Vector.35", ptr %449, i64 %448, i32 3
  %451 = load ptr, ptr %450, align 8, !tbaa !60
  %452 = getelementptr inbounds double, ptr %451, i64 %447
  %453 = load double, ptr %452, align 8, !tbaa !52
  %454 = load i32, ptr %298, align 4, !tbaa !22
  %455 = load i32, ptr %287, align 8, !tbaa !61
  %456 = load ptr, ptr %288, align 8, !tbaa !58
  br label %457

457:                                              ; preds = %457, %444
  %458 = phi i32 [ %455, %444 ], [ %459, %457 ]
  %459 = add i32 %458, -1
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds i32, ptr %456, i64 %460
  %462 = load i32, ptr %461, align 4, !tbaa !22
  %463 = icmp ugt i32 %462, %454
  br i1 %463, label %457, label %464

464:                                              ; preds = %457
  %465 = sub i32 %454, %462
  %466 = zext i32 %465 to i64
  %467 = zext i32 %459 to i64
  %468 = load ptr, ptr %289, align 8, !tbaa !66
  %469 = getelementptr inbounds %"class.dealii::Vector.35", ptr %468, i64 %467, i32 3
  %470 = load ptr, ptr %469, align 8, !tbaa !60
  %471 = getelementptr inbounds double, ptr %470, i64 %466
  %472 = load double, ptr %471, align 8, !tbaa !52
  %473 = fadd double %453, %472
  store double %473, ptr %471, align 8, !tbaa !52
  br label %752

474:                                              ; preds = %295
  br i1 %308, label %475, label %479

475:                                              ; preds = %474
  %476 = trunc i64 %303 to i32
  %477 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1
  %478 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %498

479:                                              ; preds = %698, %474
  br i1 %24, label %750, label %480

480:                                              ; preds = %479
  %481 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1
  %482 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %483 = load ptr, ptr %482, align 8, !tbaa !31
  %484 = load ptr, ptr %481, align 8, !tbaa !32
  %485 = ptrtoint ptr %483 to i64
  %486 = ptrtoint ptr %484 to i64
  %487 = sub i64 %485, %486
  %488 = ashr exact i64 %487, 4
  %489 = icmp eq ptr %483, %484
  br i1 %489, label %750, label %490

490:                                              ; preds = %480
  %491 = load i32, ptr %6, align 8, !tbaa !61
  %492 = load ptr, ptr %7, align 8, !tbaa !58
  %493 = load ptr, ptr %290, align 8, !tbaa !66
  %494 = load i32, ptr %287, align 8, !tbaa !61
  %495 = load ptr, ptr %288, align 8, !tbaa !58
  %496 = load ptr, ptr %289, align 8, !tbaa !66
  %497 = trunc i64 %296 to i32
  br label %705

498:                                              ; preds = %475, %698
  %499 = phi i64 [ %305, %475 ], [ %700, %698 ]
  %500 = phi i32 [ %476, %475 ], [ %699, %698 ]
  %501 = load ptr, ptr %283, align 8, !tbaa !43
  %502 = getelementptr inbounds i32, ptr %501, i64 %499
  %503 = load i32, ptr %502, align 4, !tbaa !22
  %504 = zext i32 %503 to i64
  %505 = getelementptr inbounds i32, ptr %277, i64 %504
  %506 = load i32, ptr %505, align 4, !tbaa !22
  %507 = icmp eq i32 %506, -1
  br i1 %507, label %559, label %508

508:                                              ; preds = %498
  %509 = load ptr, ptr %478, align 8, !tbaa !31
  %510 = load ptr, ptr %477, align 8, !tbaa !32
  %511 = icmp eq ptr %509, %510
  br i1 %511, label %698, label %514

512:                                              ; preds = %527
  %513 = landingpad { ptr, i32 }
          cleanup
  br label %761

514:                                              ; preds = %508, %549
  %515 = phi ptr [ %553, %549 ], [ %510, %508 ]
  %516 = phi i64 [ %551, %549 ], [ 0, %508 ]
  %517 = phi i32 [ %550, %549 ], [ 0, %508 ]
  %518 = load ptr, ptr %284, align 8, !tbaa !44
  %519 = getelementptr inbounds float, ptr %518, i64 %499
  %520 = load float, ptr %519, align 4, !tbaa !33
  %521 = fpext float %520 to double
  %522 = getelementptr inbounds %"struct.std::pair", ptr %515, i64 %516, i32 1
  %523 = load double, ptr %522, align 8, !tbaa !35
  %524 = fmul double %523, %521
  %525 = fptrunc double %524 to float
  %526 = fcmp oeq float %525, 0.000000e+00
  br i1 %526, label %549, label %527

527:                                              ; preds = %514
  %528 = getelementptr inbounds %"struct.std::pair", ptr %515, i64 %516
  %529 = load ptr, ptr %283, align 8, !tbaa !43
  %530 = getelementptr inbounds i32, ptr %529, i64 %499
  %531 = load i32, ptr %530, align 4, !tbaa !22
  %532 = zext i32 %531 to i64
  %533 = getelementptr inbounds i32, ptr %277, i64 %532
  %534 = load i32, ptr %533, align 4, !tbaa !22
  %535 = load i32, ptr %528, align 8, !tbaa !37
  %536 = zext i32 %535 to i64
  %537 = getelementptr inbounds i32, ptr %277, i64 %536
  %538 = load i32, ptr %537, align 4, !tbaa !22
  %539 = load ptr, ptr %285, align 8, !tbaa !47
  %540 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %539, i32 noundef %538, i32 noundef %534)
          to label %541 unwind label %512

541:                                              ; preds = %527
  %542 = icmp eq i32 %540, -1
  br i1 %542, label %549, label %543

543:                                              ; preds = %541
  %544 = load ptr, ptr %286, align 8, !tbaa !44
  %545 = zext i32 %540 to i64
  %546 = getelementptr inbounds float, ptr %544, i64 %545
  %547 = load float, ptr %546, align 4, !tbaa !33
  %548 = fadd float %547, %525
  store float %548, ptr %546, align 4, !tbaa !33
  br label %549

549:                                              ; preds = %543, %541, %514
  %550 = add i32 %517, 1
  %551 = zext i32 %550 to i64
  %552 = load ptr, ptr %478, align 8, !tbaa !31
  %553 = load ptr, ptr %477, align 8, !tbaa !32
  %554 = ptrtoint ptr %552 to i64
  %555 = ptrtoint ptr %553 to i64
  %556 = sub i64 %554, %555
  %557 = ashr exact i64 %556, 4
  %558 = icmp eq i64 %557, %551
  br i1 %558, label %698, label %514

559:                                              ; preds = %498
  %560 = load ptr, ptr %276, align 8, !tbaa !21
  br label %561

561:                                              ; preds = %561, %559
  %562 = phi ptr [ %560, %559 ], [ %565, %561 ]
  %563 = load i32, ptr %562, align 8, !tbaa !24
  %564 = icmp eq i32 %563, %503
  %565 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %562, i64 1
  br i1 %564, label %566, label %561

566:                                              ; preds = %561
  %567 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %562, i64 0, i32 1
  %568 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %562, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %569 = load ptr, ptr %568, align 8, !tbaa !31
  %570 = load ptr, ptr %567, align 8, !tbaa !32
  %571 = icmp eq ptr %569, %570
  br i1 %571, label %583, label %572

572:                                              ; preds = %566
  %573 = load ptr, ptr %478, align 8, !tbaa !31
  %574 = load ptr, ptr %477, align 8, !tbaa !32
  br label %575

575:                                              ; preds = %572, %604
  %576 = phi ptr [ %605, %604 ], [ %570, %572 ]
  %577 = phi ptr [ %606, %604 ], [ %569, %572 ]
  %578 = phi ptr [ %607, %604 ], [ %574, %572 ]
  %579 = phi ptr [ %608, %604 ], [ %573, %572 ]
  %580 = phi i64 [ %610, %604 ], [ 0, %572 ]
  %581 = phi i32 [ %609, %604 ], [ 0, %572 ]
  %582 = icmp eq ptr %579, %578
  br i1 %582, label %604, label %618

583:                                              ; preds = %604, %566
  br i1 %24, label %698, label %584

584:                                              ; preds = %583
  %585 = load ptr, ptr %478, align 8, !tbaa !31
  %586 = load ptr, ptr %477, align 8, !tbaa !32
  %587 = ptrtoint ptr %585 to i64
  %588 = ptrtoint ptr %586 to i64
  %589 = sub i64 %587, %588
  %590 = ashr exact i64 %589, 4
  %591 = icmp eq ptr %585, %586
  br i1 %591, label %698, label %592

592:                                              ; preds = %584
  %593 = load ptr, ptr %284, align 8, !tbaa !44
  %594 = getelementptr inbounds float, ptr %593, i64 %499
  %595 = load float, ptr %594, align 4, !tbaa !33
  %596 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %562, i64 0, i32 2
  %597 = load i32, ptr %287, align 8, !tbaa !61
  %598 = load ptr, ptr %288, align 8, !tbaa !58
  %599 = load ptr, ptr %289, align 8, !tbaa !66
  %600 = fpext float %595 to double
  br label %666

601:                                              ; preds = %656
  %602 = load ptr, ptr %568, align 8, !tbaa !31
  %603 = load ptr, ptr %567, align 8, !tbaa !32
  br label %604

604:                                              ; preds = %601, %575
  %605 = phi ptr [ %603, %601 ], [ %576, %575 ]
  %606 = phi ptr [ %602, %601 ], [ %577, %575 ]
  %607 = phi ptr [ %660, %601 ], [ %578, %575 ]
  %608 = phi ptr [ %659, %601 ], [ %578, %575 ]
  %609 = add i32 %581, 1
  %610 = zext i32 %609 to i64
  %611 = ptrtoint ptr %606 to i64
  %612 = ptrtoint ptr %605 to i64
  %613 = sub i64 %611, %612
  %614 = ashr exact i64 %613, 4
  %615 = icmp eq i64 %614, %610
  br i1 %615, label %583, label %575

616:                                              ; preds = %635
  %617 = landingpad { ptr, i32 }
          cleanup
  br label %761

618:                                              ; preds = %575, %656
  %619 = phi ptr [ %660, %656 ], [ %578, %575 ]
  %620 = phi i64 [ %658, %656 ], [ 0, %575 ]
  %621 = phi i32 [ %657, %656 ], [ 0, %575 ]
  %622 = load ptr, ptr %567, align 8, !tbaa !32
  %623 = load ptr, ptr %284, align 8, !tbaa !44
  %624 = getelementptr inbounds float, ptr %623, i64 %499
  %625 = load float, ptr %624, align 4, !tbaa !33
  %626 = fpext float %625 to double
  %627 = getelementptr inbounds %"struct.std::pair", ptr %619, i64 %620, i32 1
  %628 = load double, ptr %627, align 8, !tbaa !35
  %629 = fmul double %628, %626
  %630 = getelementptr inbounds %"struct.std::pair", ptr %622, i64 %580, i32 1
  %631 = load double, ptr %630, align 8, !tbaa !35
  %632 = fmul double %629, %631
  %633 = fptrunc double %632 to float
  %634 = fcmp oeq float %633, 0.000000e+00
  br i1 %634, label %656, label %635

635:                                              ; preds = %618
  %636 = getelementptr inbounds %"struct.std::pair", ptr %622, i64 %580
  %637 = getelementptr inbounds %"struct.std::pair", ptr %619, i64 %620
  %638 = load i32, ptr %636, align 8, !tbaa !37
  %639 = zext i32 %638 to i64
  %640 = getelementptr inbounds i32, ptr %277, i64 %639
  %641 = load i32, ptr %640, align 4, !tbaa !22
  %642 = load i32, ptr %637, align 8, !tbaa !37
  %643 = zext i32 %642 to i64
  %644 = getelementptr inbounds i32, ptr %277, i64 %643
  %645 = load i32, ptr %644, align 4, !tbaa !22
  %646 = load ptr, ptr %285, align 8, !tbaa !47
  %647 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %646, i32 noundef %645, i32 noundef %641)
          to label %648 unwind label %616

648:                                              ; preds = %635
  %649 = icmp eq i32 %647, -1
  br i1 %649, label %656, label %650

650:                                              ; preds = %648
  %651 = load ptr, ptr %286, align 8, !tbaa !44
  %652 = zext i32 %647 to i64
  %653 = getelementptr inbounds float, ptr %651, i64 %652
  %654 = load float, ptr %653, align 4, !tbaa !33
  %655 = fadd float %654, %633
  store float %655, ptr %653, align 4, !tbaa !33
  br label %656

656:                                              ; preds = %650, %648, %618
  %657 = add i32 %621, 1
  %658 = zext i32 %657 to i64
  %659 = load ptr, ptr %478, align 8, !tbaa !31
  %660 = load ptr, ptr %477, align 8, !tbaa !32
  %661 = ptrtoint ptr %659 to i64
  %662 = ptrtoint ptr %660 to i64
  %663 = sub i64 %661, %662
  %664 = ashr exact i64 %663, 4
  %665 = icmp eq i64 %664, %658
  br i1 %665, label %601, label %618

666:                                              ; preds = %592, %684
  %667 = phi i64 [ 0, %592 ], [ %696, %684 ]
  %668 = phi i32 [ 0, %592 ], [ %695, %684 ]
  %669 = getelementptr inbounds %"struct.std::pair", ptr %586, i64 %667
  %670 = getelementptr inbounds %"struct.std::pair", ptr %586, i64 %667, i32 1
  %671 = load double, ptr %670, align 8, !tbaa !35
  %672 = load double, ptr %596, align 8, !tbaa !48
  %673 = load i32, ptr %669, align 8, !tbaa !37
  %674 = zext i32 %673 to i64
  %675 = getelementptr inbounds i32, ptr %277, i64 %674
  %676 = load i32, ptr %675, align 4, !tbaa !22
  br label %677

677:                                              ; preds = %677, %666
  %678 = phi i32 [ %597, %666 ], [ %679, %677 ]
  %679 = add i32 %678, -1
  %680 = sext i32 %679 to i64
  %681 = getelementptr inbounds i32, ptr %598, i64 %680
  %682 = load i32, ptr %681, align 4, !tbaa !22
  %683 = icmp ugt i32 %682, %676
  br i1 %683, label %677, label %684

684:                                              ; preds = %677
  %685 = sub i32 %676, %682
  %686 = zext i32 %685 to i64
  %687 = zext i32 %679 to i64
  %688 = getelementptr inbounds %"class.dealii::Vector.35", ptr %599, i64 %687, i32 3
  %689 = load ptr, ptr %688, align 8, !tbaa !60
  %690 = getelementptr inbounds double, ptr %689, i64 %686
  %691 = load double, ptr %690, align 8, !tbaa !52
  %692 = fneg double %671
  %693 = fmul double %692, %600
  %694 = tail call double @llvm.fmuladd.f64(double %693, double %672, double %691)
  store double %694, ptr %690, align 8, !tbaa !52
  %695 = add i32 %668, 1
  %696 = zext i32 %695 to i64
  %697 = icmp eq i64 %590, %696
  br i1 %697, label %698, label %666

698:                                              ; preds = %549, %684, %508, %584, %583
  %699 = add i32 %500, 1
  %700 = zext i32 %699 to i64
  %701 = load ptr, ptr %282, align 8, !tbaa !41
  %702 = getelementptr inbounds i64, ptr %701, i64 %304
  %703 = load i64, ptr %702, align 8, !tbaa !42
  %704 = icmp ugt i64 %703, %700
  br i1 %704, label %498, label %479

705:                                              ; preds = %490, %738
  %706 = phi i64 [ 0, %490 ], [ %748, %738 ]
  %707 = phi i32 [ 0, %490 ], [ %747, %738 ]
  br label %708

708:                                              ; preds = %708, %705
  %709 = phi i32 [ %491, %705 ], [ %710, %708 ]
  %710 = add i32 %709, -1
  %711 = sext i32 %710 to i64
  %712 = getelementptr inbounds i32, ptr %492, i64 %711
  %713 = load i32, ptr %712, align 4, !tbaa !22
  %714 = zext i32 %713 to i64
  %715 = icmp ult i64 %296, %714
  br i1 %715, label %708, label %716

716:                                              ; preds = %708
  %717 = sub i32 %497, %713
  %718 = zext i32 %717 to i64
  %719 = zext i32 %710 to i64
  %720 = getelementptr inbounds %"class.dealii::Vector.35", ptr %493, i64 %719, i32 3
  %721 = load ptr, ptr %720, align 8, !tbaa !60
  %722 = getelementptr inbounds double, ptr %721, i64 %718
  %723 = load double, ptr %722, align 8, !tbaa !52
  %724 = getelementptr inbounds %"struct.std::pair", ptr %484, i64 %706
  %725 = getelementptr inbounds %"struct.std::pair", ptr %484, i64 %706, i32 1
  %726 = load double, ptr %725, align 8, !tbaa !35
  %727 = load i32, ptr %724, align 8, !tbaa !37
  %728 = zext i32 %727 to i64
  %729 = getelementptr inbounds i32, ptr %277, i64 %728
  %730 = load i32, ptr %729, align 4, !tbaa !22
  br label %731

731:                                              ; preds = %731, %716
  %732 = phi i32 [ %494, %716 ], [ %733, %731 ]
  %733 = add i32 %732, -1
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds i32, ptr %495, i64 %734
  %736 = load i32, ptr %735, align 4, !tbaa !22
  %737 = icmp ugt i32 %736, %730
  br i1 %737, label %731, label %738

738:                                              ; preds = %731
  %739 = sub i32 %730, %736
  %740 = zext i32 %739 to i64
  %741 = zext i32 %733 to i64
  %742 = getelementptr inbounds %"class.dealii::Vector.35", ptr %496, i64 %741, i32 3
  %743 = load ptr, ptr %742, align 8, !tbaa !60
  %744 = getelementptr inbounds double, ptr %743, i64 %740
  %745 = load double, ptr %744, align 8, !tbaa !52
  %746 = tail call double @llvm.fmuladd.f64(double %723, double %726, double %745)
  store double %746, ptr %744, align 8, !tbaa !52
  %747 = add i32 %707, 1
  %748 = zext i32 %747 to i64
  %749 = icmp eq i64 %488, %748
  br i1 %749, label %750, label %705

750:                                              ; preds = %738, %480, %479
  %751 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 1
  br label %752

752:                                              ; preds = %750, %464, %312
  %753 = phi ptr [ %751, %750 ], [ %297, %464 ], [ %297, %312 ]
  %754 = load i32, ptr %26, align 4, !tbaa !38
  %755 = zext i32 %754 to i64
  %756 = icmp ult i64 %304, %755
  br i1 %756, label %295, label %291

757:                                              ; preds = %263, %265, %217, %219, %161, %163, %96, %98
  %758 = phi ptr [ %47, %96 ], [ %47, %98 ], [ %103, %161 ], [ %103, %163 ], [ %167, %217 ], [ %167, %219 ], [ %103, %263 ], [ %103, %265 ]
  %759 = phi { ptr, i32 } [ %97, %96 ], [ %99, %98 ], [ %162, %161 ], [ %164, %163 ], [ %218, %217 ], [ %220, %219 ], [ %264, %263 ], [ %266, %265 ]
  %760 = icmp eq ptr %758, null
  br i1 %760, label %764, label %761

761:                                              ; preds = %616, %356, %313, %512, %757
  %762 = phi { ptr, i32 } [ %759, %757 ], [ %617, %616 ], [ %357, %356 ], [ %513, %512 ], [ %314, %313 ]
  %763 = phi ptr [ %758, %757 ], [ %277, %616 ], [ %277, %356 ], [ %277, %512 ], [ %277, %313 ]
  tail call void @_ZdlPv(ptr noundef nonnull %763) #23
  br label %764

764:                                              ; preds = %761, %757
  %765 = phi { ptr, i32 } [ %759, %757 ], [ %762, %761 ]
  resume { ptr, i32 } %765
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIdNS_11BlockVectorIdEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(128) %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 8 dereferenceable(128) %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %7 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %8 = load i32, ptr %6, align 8, !tbaa !61
  %9 = zext i32 %8 to i64
  %10 = load ptr, ptr %7, align 8, !tbaa !58
  %11 = getelementptr inbounds i32, ptr %10, i64 %9
  %12 = load i32, ptr %11, align 4, !tbaa !22
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %4, i64 0, i32 2
  %16 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %4, i64 0, i32 2, i32 1
  %17 = load i32, ptr %15, align 8, !tbaa !61
  %18 = zext i32 %17 to i64
  %19 = load ptr, ptr %16, align 8, !tbaa !58
  %20 = getelementptr inbounds i32, ptr %19, i64 %18
  %21 = load i32, ptr %20, align 4, !tbaa !22
  %22 = icmp eq i32 %21, 0
  br label %23

23:                                               ; preds = %14, %5
  %24 = phi i1 [ false, %5 ], [ %22, %14 ]
  %25 = tail call noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
  %26 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !38
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %23
  %30 = zext i32 %27 to i64
  %31 = shl nuw nsw i64 %30, 2
  %32 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %31) #21
  %33 = getelementptr inbounds i32, ptr %32, i64 %30
  %34 = load i32, ptr %26, align 4, !tbaa !38
  %35 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !21
  %37 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !21
  %39 = icmp eq ptr %36, %38
  %40 = icmp eq i32 %34, 0
  br i1 %39, label %44, label %43

41:                                               ; preds = %23
  %42 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %275

43:                                               ; preds = %29
  br i1 %40, label %275, label %100

44:                                               ; preds = %29
  br i1 %40, label %275, label %45

45:                                               ; preds = %44, %90
  %46 = phi i32 [ %94, %90 ], [ 0, %44 ]
  %47 = phi ptr [ %93, %90 ], [ %32, %44 ]
  %48 = phi ptr [ %92, %90 ], [ %32, %44 ]
  %49 = phi ptr [ %91, %90 ], [ %33, %44 ]
  %50 = icmp eq ptr %48, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %45
  store i32 %46, ptr %48, align 4, !tbaa !22
  %52 = getelementptr inbounds i32, ptr %48, i64 1
  br label %90

53:                                               ; preds = %45
  %54 = ptrtoint ptr %48 to i64
  %55 = ptrtoint ptr %47 to i64
  %56 = sub i64 %54, %55
  %57 = icmp eq i64 %56, 9223372036854775804
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %59 unwind label %98

59:                                               ; preds = %58
  unreachable

60:                                               ; preds = %53
  %61 = ashr exact i64 %56, 2
  %62 = tail call i64 @llvm.umax.i64(i64 %61, i64 1)
  %63 = add i64 %62, %61
  %64 = icmp ult i64 %63, %61
  %65 = icmp ugt i64 %63, 2305843009213693951
  %66 = or i1 %64, %65
  %67 = select i1 %66, i64 2305843009213693951, i64 %63
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %60
  %70 = shl nuw nsw i64 %67, 2
  %71 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %70) #21
          to label %72 unwind label %96

72:                                               ; preds = %69, %60
  %73 = phi ptr [ null, %60 ], [ %71, %69 ]
  %74 = getelementptr inbounds i32, ptr %73, i64 %61
  store i32 %46, ptr %74, align 4, !tbaa !22
  %75 = icmp sgt i64 %56, 4
  br i1 %75, label %76, label %77, !prof !23

76:                                               ; preds = %72
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %73, ptr align 4 %47, i64 %56, i1 false)
  br label %82

77:                                               ; preds = %72
  %78 = icmp eq i64 %56, 4
  br i1 %78, label %79, label %82

79:                                               ; preds = %77
  %80 = load i32, ptr %47, align 4, !tbaa !22
  store i32 %80, ptr %73, align 4, !tbaa !22
  %81 = getelementptr inbounds i32, ptr %74, i64 1
  br label %85

82:                                               ; preds = %77, %76
  %83 = getelementptr inbounds i32, ptr %74, i64 1
  %84 = icmp eq ptr %47, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %79, %82
  %86 = phi ptr [ %81, %79 ], [ %83, %82 ]
  tail call void @_ZdlPv(ptr noundef nonnull %47) #23
  br label %87

87:                                               ; preds = %85, %82
  %88 = phi ptr [ %83, %82 ], [ %86, %85 ]
  %89 = getelementptr inbounds i32, ptr %73, i64 %67
  br label %90

90:                                               ; preds = %87, %51
  %91 = phi ptr [ %89, %87 ], [ %49, %51 ]
  %92 = phi ptr [ %88, %87 ], [ %52, %51 ]
  %93 = phi ptr [ %73, %87 ], [ %47, %51 ]
  %94 = add nuw i32 %46, 1
  %95 = icmp eq i32 %94, %34
  br i1 %95, label %275, label %45

96:                                               ; preds = %69
  %97 = landingpad { ptr, i32 }
          cleanup
  br label %749

98:                                               ; preds = %58
  %99 = landingpad { ptr, i32 }
          cleanup
  br label %749

100:                                              ; preds = %43, %267
  %101 = phi i32 [ %273, %267 ], [ 0, %43 ]
  %102 = phi i32 [ %272, %267 ], [ 0, %43 ]
  %103 = phi ptr [ %271, %267 ], [ %32, %43 ]
  %104 = phi ptr [ %270, %267 ], [ %32, %43 ]
  %105 = phi ptr [ %269, %267 ], [ %33, %43 ]
  %106 = phi ptr [ %268, %267 ], [ %36, %43 ]
  %107 = load i32, ptr %106, align 8, !tbaa !24
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %221

109:                                              ; preds = %100
  %110 = icmp eq ptr %104, %105
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  store i32 -1, ptr %104, align 4, !tbaa !22
  %112 = getelementptr inbounds i32, ptr %104, i64 1
  br label %150

113:                                              ; preds = %109
  %114 = ptrtoint ptr %104 to i64
  %115 = ptrtoint ptr %103 to i64
  %116 = sub i64 %114, %115
  %117 = icmp eq i64 %116, 9223372036854775804
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %119 unwind label %163

119:                                              ; preds = %118
  unreachable

120:                                              ; preds = %113
  %121 = ashr exact i64 %116, 2
  %122 = tail call i64 @llvm.umax.i64(i64 %121, i64 1)
  %123 = add i64 %122, %121
  %124 = icmp ult i64 %123, %121
  %125 = icmp ugt i64 %123, 2305843009213693951
  %126 = or i1 %124, %125
  %127 = select i1 %126, i64 2305843009213693951, i64 %123
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %120
  %130 = shl nuw nsw i64 %127, 2
  %131 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %130) #21
          to label %132 unwind label %161

132:                                              ; preds = %129, %120
  %133 = phi ptr [ null, %120 ], [ %131, %129 ]
  %134 = getelementptr inbounds i32, ptr %133, i64 %121
  store i32 -1, ptr %134, align 4, !tbaa !22
  %135 = icmp sgt i64 %116, 4
  br i1 %135, label %136, label %137, !prof !23

136:                                              ; preds = %132
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %133, ptr align 4 %103, i64 %116, i1 false)
  br label %142

137:                                              ; preds = %132
  %138 = icmp eq i64 %116, 4
  br i1 %138, label %139, label %142

139:                                              ; preds = %137
  %140 = load i32, ptr %103, align 4, !tbaa !22
  store i32 %140, ptr %133, align 4, !tbaa !22
  %141 = getelementptr inbounds i32, ptr %134, i64 1
  br label %145

142:                                              ; preds = %137, %136
  %143 = getelementptr inbounds i32, ptr %134, i64 1
  %144 = icmp eq ptr %103, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139, %142
  %146 = phi ptr [ %141, %139 ], [ %143, %142 ]
  tail call void @_ZdlPv(ptr noundef nonnull %103) #23
  br label %147

147:                                              ; preds = %145, %142
  %148 = phi ptr [ %143, %142 ], [ %146, %145 ]
  %149 = getelementptr inbounds i32, ptr %133, i64 %127
  br label %150

150:                                              ; preds = %111, %147
  %151 = phi ptr [ %149, %147 ], [ %105, %111 ]
  %152 = phi ptr [ %148, %147 ], [ %112, %111 ]
  %153 = phi ptr [ %133, %147 ], [ %103, %111 ]
  %154 = add i32 %102, 1
  %155 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %106, i64 1
  %156 = load ptr, ptr %37, align 8, !tbaa !21
  %157 = icmp eq ptr %155, %156
  br i1 %157, label %158, label %267

158:                                              ; preds = %150
  %159 = add i32 %101, 1
  %160 = icmp ult i32 %159, %34
  br i1 %160, label %165, label %275

161:                                              ; preds = %129
  %162 = landingpad { ptr, i32 }
          cleanup
  br label %749

163:                                              ; preds = %118
  %164 = landingpad { ptr, i32 }
          cleanup
  br label %749

165:                                              ; preds = %158, %211
  %166 = phi i32 [ %215, %211 ], [ %159, %158 ]
  %167 = phi ptr [ %214, %211 ], [ %153, %158 ]
  %168 = phi ptr [ %213, %211 ], [ %152, %158 ]
  %169 = phi ptr [ %212, %211 ], [ %151, %158 ]
  %170 = sub i32 %166, %154
  %171 = icmp eq ptr %168, %169
  br i1 %171, label %174, label %172

172:                                              ; preds = %165
  store i32 %170, ptr %168, align 4, !tbaa !22
  %173 = getelementptr inbounds i32, ptr %168, i64 1
  br label %211

174:                                              ; preds = %165
  %175 = ptrtoint ptr %168 to i64
  %176 = ptrtoint ptr %167 to i64
  %177 = sub i64 %175, %176
  %178 = icmp eq i64 %177, 9223372036854775804
  br i1 %178, label %179, label %181

179:                                              ; preds = %174
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %180 unwind label %219

180:                                              ; preds = %179
  unreachable

181:                                              ; preds = %174
  %182 = ashr exact i64 %177, 2
  %183 = tail call i64 @llvm.umax.i64(i64 %182, i64 1)
  %184 = add i64 %183, %182
  %185 = icmp ult i64 %184, %182
  %186 = icmp ugt i64 %184, 2305843009213693951
  %187 = or i1 %185, %186
  %188 = select i1 %187, i64 2305843009213693951, i64 %184
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %181
  %191 = shl nuw nsw i64 %188, 2
  %192 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %191) #21
          to label %193 unwind label %217

193:                                              ; preds = %190, %181
  %194 = phi ptr [ null, %181 ], [ %192, %190 ]
  %195 = getelementptr inbounds i32, ptr %194, i64 %182
  store i32 %170, ptr %195, align 4, !tbaa !22
  %196 = icmp sgt i64 %177, 4
  br i1 %196, label %197, label %198, !prof !23

197:                                              ; preds = %193
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %194, ptr align 4 %167, i64 %177, i1 false)
  br label %203

198:                                              ; preds = %193
  %199 = icmp eq i64 %177, 4
  br i1 %199, label %200, label %203

200:                                              ; preds = %198
  %201 = load i32, ptr %167, align 4, !tbaa !22
  store i32 %201, ptr %194, align 4, !tbaa !22
  %202 = getelementptr inbounds i32, ptr %195, i64 1
  br label %206

203:                                              ; preds = %198, %197
  %204 = getelementptr inbounds i32, ptr %195, i64 1
  %205 = icmp eq ptr %167, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %200, %203
  %207 = phi ptr [ %202, %200 ], [ %204, %203 ]
  tail call void @_ZdlPv(ptr noundef nonnull %167) #23
  br label %208

208:                                              ; preds = %206, %203
  %209 = phi ptr [ %204, %203 ], [ %207, %206 ]
  %210 = getelementptr inbounds i32, ptr %194, i64 %188
  br label %211

211:                                              ; preds = %208, %172
  %212 = phi ptr [ %210, %208 ], [ %169, %172 ]
  %213 = phi ptr [ %209, %208 ], [ %173, %172 ]
  %214 = phi ptr [ %194, %208 ], [ %167, %172 ]
  %215 = add nuw i32 %166, 1
  %216 = icmp eq i32 %215, %34
  br i1 %216, label %275, label %165

217:                                              ; preds = %190
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %749

219:                                              ; preds = %179
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %749

221:                                              ; preds = %100
  %222 = sub i32 %101, %102
  %223 = icmp eq ptr %104, %105
  br i1 %223, label %226, label %224

224:                                              ; preds = %221
  store i32 %222, ptr %104, align 4, !tbaa !22
  %225 = getelementptr inbounds i32, ptr %104, i64 1
  br label %267

226:                                              ; preds = %221
  %227 = ptrtoint ptr %104 to i64
  %228 = ptrtoint ptr %103 to i64
  %229 = sub i64 %227, %228
  %230 = icmp eq i64 %229, 9223372036854775804
  br i1 %230, label %231, label %233

231:                                              ; preds = %226
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %232 unwind label %265

232:                                              ; preds = %231
  unreachable

233:                                              ; preds = %226
  %234 = ashr exact i64 %229, 2
  %235 = tail call i64 @llvm.umax.i64(i64 %234, i64 1)
  %236 = add i64 %235, %234
  %237 = icmp ult i64 %236, %234
  %238 = icmp ugt i64 %236, 2305843009213693951
  %239 = or i1 %237, %238
  %240 = select i1 %239, i64 2305843009213693951, i64 %236
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %245, label %242

242:                                              ; preds = %233
  %243 = shl nuw nsw i64 %240, 2
  %244 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %243) #21
          to label %245 unwind label %263

245:                                              ; preds = %242, %233
  %246 = phi ptr [ null, %233 ], [ %244, %242 ]
  %247 = getelementptr inbounds i32, ptr %246, i64 %234
  store i32 %222, ptr %247, align 4, !tbaa !22
  %248 = icmp sgt i64 %229, 4
  br i1 %248, label %249, label %250, !prof !23

249:                                              ; preds = %245
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %246, ptr align 4 %103, i64 %229, i1 false)
  br label %255

250:                                              ; preds = %245
  %251 = icmp eq i64 %229, 4
  br i1 %251, label %252, label %255

252:                                              ; preds = %250
  %253 = load i32, ptr %103, align 4, !tbaa !22
  store i32 %253, ptr %246, align 4, !tbaa !22
  %254 = getelementptr inbounds i32, ptr %247, i64 1
  br label %258

255:                                              ; preds = %250, %249
  %256 = getelementptr inbounds i32, ptr %247, i64 1
  %257 = icmp eq ptr %103, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %252, %255
  %259 = phi ptr [ %254, %252 ], [ %256, %255 ]
  tail call void @_ZdlPv(ptr noundef nonnull %103) #23
  br label %260

260:                                              ; preds = %258, %255
  %261 = phi ptr [ %256, %255 ], [ %259, %258 ]
  %262 = getelementptr inbounds i32, ptr %246, i64 %240
  br label %267

263:                                              ; preds = %242
  %264 = landingpad { ptr, i32 }
          cleanup
  br label %749

265:                                              ; preds = %231
  %266 = landingpad { ptr, i32 }
          cleanup
  br label %749

267:                                              ; preds = %224, %260, %150
  %268 = phi ptr [ %155, %150 ], [ %106, %260 ], [ %106, %224 ]
  %269 = phi ptr [ %151, %150 ], [ %262, %260 ], [ %105, %224 ]
  %270 = phi ptr [ %152, %150 ], [ %261, %260 ], [ %225, %224 ]
  %271 = phi ptr [ %153, %150 ], [ %246, %260 ], [ %103, %224 ]
  %272 = phi i32 [ %154, %150 ], [ %102, %260 ], [ %102, %224 ]
  %273 = add nuw i32 %101, 1
  %274 = icmp eq i32 %273, %34
  br i1 %274, label %275, label %100

275:                                              ; preds = %267, %211, %90, %41, %43, %158, %44
  %276 = phi ptr [ %35, %44 ], [ %35, %158 ], [ %35, %43 ], [ %42, %41 ], [ %35, %90 ], [ %35, %211 ], [ %35, %267 ]
  %277 = phi ptr [ %32, %44 ], [ %153, %158 ], [ %32, %43 ], [ null, %41 ], [ %93, %90 ], [ %214, %211 ], [ %271, %267 ]
  %278 = load i32, ptr %26, align 4, !tbaa !38
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %291, label %280

280:                                              ; preds = %275
  %281 = load ptr, ptr %276, align 8, !tbaa !21
  %282 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 8
  %283 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 9
  %284 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %1, i64 0, i32 2
  %285 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %3, i64 0, i32 1
  %286 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %3, i64 0, i32 2
  %287 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %4, i64 0, i32 2
  %288 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %4, i64 0, i32 2, i32 1
  %289 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %4, i64 0, i32 1
  %290 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  br label %295

291:                                              ; preds = %744, %275
  %292 = icmp eq ptr %277, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %291
  tail call void @_ZdlPv(ptr noundef nonnull %277) #23
  br label %294

294:                                              ; preds = %291, %293
  ret void

295:                                              ; preds = %280, %744
  %296 = phi i64 [ 0, %280 ], [ %304, %744 ]
  %297 = phi ptr [ %281, %280 ], [ %745, %744 ]
  %298 = getelementptr inbounds i32, ptr %277, i64 %296
  %299 = load i32, ptr %298, align 4, !tbaa !22
  %300 = icmp eq i32 %299, -1
  %301 = load ptr, ptr %282, align 8, !tbaa !41
  %302 = getelementptr inbounds i64, ptr %301, i64 %296
  %303 = load i64, ptr %302, align 8, !tbaa !42
  %304 = add nuw nsw i64 %296, 1
  %305 = and i64 %303, 4294967295
  %306 = getelementptr inbounds i64, ptr %301, i64 %304
  %307 = load i64, ptr %306, align 8, !tbaa !42
  %308 = icmp ugt i64 %307, %305
  br i1 %300, label %471, label %309

309:                                              ; preds = %295
  br i1 %308, label %310, label %312

310:                                              ; preds = %309
  %311 = trunc i64 %303 to i32
  br label %315

312:                                              ; preds = %423, %309
  br i1 %24, label %744, label %430

313:                                              ; preds = %330
  %314 = landingpad { ptr, i32 }
          cleanup
  br label %753

315:                                              ; preds = %310, %423
  %316 = phi i64 [ %425, %423 ], [ %305, %310 ]
  %317 = phi i32 [ %424, %423 ], [ %311, %310 ]
  %318 = load ptr, ptr %283, align 8, !tbaa !43
  %319 = getelementptr inbounds i32, ptr %318, i64 %316
  %320 = load i32, ptr %319, align 4, !tbaa !22
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds i32, ptr %277, i64 %321
  %323 = load i32, ptr %322, align 4, !tbaa !22
  %324 = icmp eq i32 %323, -1
  br i1 %324, label %342, label %325

325:                                              ; preds = %315
  %326 = load ptr, ptr %284, align 8, !tbaa !50
  %327 = getelementptr inbounds double, ptr %326, i64 %316
  %328 = load double, ptr %327, align 8, !tbaa !52
  %329 = fcmp oeq double %328, 0.000000e+00
  br i1 %329, label %423, label %330

330:                                              ; preds = %325
  %331 = load i32, ptr %298, align 4, !tbaa !22
  %332 = load ptr, ptr %285, align 8, !tbaa !47
  %333 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %332, i32 noundef %331, i32 noundef %323)
          to label %334 unwind label %313

334:                                              ; preds = %330
  %335 = icmp eq i32 %333, -1
  br i1 %335, label %423, label %336

336:                                              ; preds = %334
  %337 = load ptr, ptr %286, align 8, !tbaa !50
  %338 = zext i32 %333 to i64
  %339 = getelementptr inbounds double, ptr %337, i64 %338
  %340 = load double, ptr %339, align 8, !tbaa !52
  %341 = fadd double %328, %340
  store double %341, ptr %339, align 8, !tbaa !52
  br label %423

342:                                              ; preds = %315
  %343 = load ptr, ptr %276, align 8, !tbaa !21
  br label %344

344:                                              ; preds = %344, %342
  %345 = phi ptr [ %343, %342 ], [ %348, %344 ]
  %346 = load i32, ptr %345, align 8, !tbaa !24
  %347 = icmp eq i32 %346, %320
  %348 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 1
  br i1 %347, label %349, label %344

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 0, i32 1
  %351 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %352 = load ptr, ptr %351, align 8, !tbaa !31
  %353 = load ptr, ptr %350, align 8, !tbaa !32
  %354 = icmp eq ptr %352, %353
  br i1 %354, label %355, label %358

355:                                              ; preds = %386, %349
  br i1 %24, label %423, label %396

356:                                              ; preds = %369
  %357 = landingpad { ptr, i32 }
          cleanup
  br label %753

358:                                              ; preds = %349, %386
  %359 = phi ptr [ %390, %386 ], [ %353, %349 ]
  %360 = phi i64 [ %388, %386 ], [ 0, %349 ]
  %361 = phi i32 [ %387, %386 ], [ 0, %349 ]
  %362 = load ptr, ptr %284, align 8, !tbaa !50
  %363 = getelementptr inbounds double, ptr %362, i64 %316
  %364 = load double, ptr %363, align 8, !tbaa !52
  %365 = getelementptr inbounds %"struct.std::pair", ptr %359, i64 %360, i32 1
  %366 = load double, ptr %365, align 8, !tbaa !35
  %367 = fmul double %364, %366
  %368 = fcmp oeq double %367, 0.000000e+00
  br i1 %368, label %386, label %369

369:                                              ; preds = %358
  %370 = getelementptr inbounds %"struct.std::pair", ptr %359, i64 %360
  %371 = load i32, ptr %370, align 8, !tbaa !37
  %372 = zext i32 %371 to i64
  %373 = getelementptr inbounds i32, ptr %277, i64 %372
  %374 = load i32, ptr %373, align 4, !tbaa !22
  %375 = load i32, ptr %298, align 4, !tbaa !22
  %376 = load ptr, ptr %285, align 8, !tbaa !47
  %377 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %376, i32 noundef %375, i32 noundef %374)
          to label %378 unwind label %356

378:                                              ; preds = %369
  %379 = icmp eq i32 %377, -1
  br i1 %379, label %386, label %380

380:                                              ; preds = %378
  %381 = load ptr, ptr %286, align 8, !tbaa !50
  %382 = zext i32 %377 to i64
  %383 = getelementptr inbounds double, ptr %381, i64 %382
  %384 = load double, ptr %383, align 8, !tbaa !52
  %385 = fadd double %367, %384
  store double %385, ptr %383, align 8, !tbaa !52
  br label %386

386:                                              ; preds = %380, %378, %358
  %387 = add i32 %361, 1
  %388 = zext i32 %387 to i64
  %389 = load ptr, ptr %351, align 8, !tbaa !31
  %390 = load ptr, ptr %350, align 8, !tbaa !32
  %391 = ptrtoint ptr %389 to i64
  %392 = ptrtoint ptr %390 to i64
  %393 = sub i64 %391, %392
  %394 = ashr exact i64 %393, 4
  %395 = icmp eq i64 %394, %388
  br i1 %395, label %355, label %358

396:                                              ; preds = %355
  %397 = load ptr, ptr %284, align 8, !tbaa !50
  %398 = getelementptr inbounds double, ptr %397, i64 %316
  %399 = load double, ptr %398, align 8, !tbaa !52
  %400 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 0, i32 2
  %401 = load double, ptr %400, align 8, !tbaa !48
  %402 = load i32, ptr %298, align 4, !tbaa !22
  %403 = load i32, ptr %287, align 8, !tbaa !61
  %404 = load ptr, ptr %288, align 8, !tbaa !58
  br label %405

405:                                              ; preds = %405, %396
  %406 = phi i32 [ %403, %396 ], [ %407, %405 ]
  %407 = add i32 %406, -1
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds i32, ptr %404, i64 %408
  %410 = load i32, ptr %409, align 4, !tbaa !22
  %411 = icmp ugt i32 %410, %402
  br i1 %411, label %405, label %412

412:                                              ; preds = %405
  %413 = sub i32 %402, %410
  %414 = zext i32 %413 to i64
  %415 = zext i32 %407 to i64
  %416 = load ptr, ptr %289, align 8, !tbaa !66
  %417 = getelementptr inbounds %"class.dealii::Vector.35", ptr %416, i64 %415, i32 3
  %418 = load ptr, ptr %417, align 8, !tbaa !60
  %419 = getelementptr inbounds double, ptr %418, i64 %414
  %420 = load double, ptr %419, align 8, !tbaa !52
  %421 = fneg double %399
  %422 = tail call double @llvm.fmuladd.f64(double %421, double %401, double %420)
  store double %422, ptr %419, align 8, !tbaa !52
  br label %423

423:                                              ; preds = %355, %412, %336, %334, %325
  %424 = add i32 %317, 1
  %425 = zext i32 %424 to i64
  %426 = load ptr, ptr %282, align 8, !tbaa !41
  %427 = getelementptr inbounds i64, ptr %426, i64 %304
  %428 = load i64, ptr %427, align 8, !tbaa !42
  %429 = icmp ugt i64 %428, %425
  br i1 %429, label %315, label %312

430:                                              ; preds = %312
  %431 = load i32, ptr %6, align 8, !tbaa !61
  %432 = load ptr, ptr %7, align 8, !tbaa !58
  br label %433

433:                                              ; preds = %433, %430
  %434 = phi i32 [ %431, %430 ], [ %435, %433 ]
  %435 = add i32 %434, -1
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds i32, ptr %432, i64 %436
  %438 = load i32, ptr %437, align 4, !tbaa !22
  %439 = zext i32 %438 to i64
  %440 = icmp ult i64 %296, %439
  br i1 %440, label %433, label %441

441:                                              ; preds = %433
  %442 = trunc i64 %296 to i32
  %443 = sub i32 %442, %438
  %444 = zext i32 %443 to i64
  %445 = zext i32 %435 to i64
  %446 = load ptr, ptr %290, align 8, !tbaa !66
  %447 = getelementptr inbounds %"class.dealii::Vector.35", ptr %446, i64 %445, i32 3
  %448 = load ptr, ptr %447, align 8, !tbaa !60
  %449 = getelementptr inbounds double, ptr %448, i64 %444
  %450 = load double, ptr %449, align 8, !tbaa !52
  %451 = load i32, ptr %298, align 4, !tbaa !22
  %452 = load i32, ptr %287, align 8, !tbaa !61
  %453 = load ptr, ptr %288, align 8, !tbaa !58
  br label %454

454:                                              ; preds = %454, %441
  %455 = phi i32 [ %452, %441 ], [ %456, %454 ]
  %456 = add i32 %455, -1
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds i32, ptr %453, i64 %457
  %459 = load i32, ptr %458, align 4, !tbaa !22
  %460 = icmp ugt i32 %459, %451
  br i1 %460, label %454, label %461

461:                                              ; preds = %454
  %462 = sub i32 %451, %459
  %463 = zext i32 %462 to i64
  %464 = zext i32 %456 to i64
  %465 = load ptr, ptr %289, align 8, !tbaa !66
  %466 = getelementptr inbounds %"class.dealii::Vector.35", ptr %465, i64 %464, i32 3
  %467 = load ptr, ptr %466, align 8, !tbaa !60
  %468 = getelementptr inbounds double, ptr %467, i64 %463
  %469 = load double, ptr %468, align 8, !tbaa !52
  %470 = fadd double %450, %469
  store double %470, ptr %468, align 8, !tbaa !52
  br label %744

471:                                              ; preds = %295
  br i1 %308, label %472, label %476

472:                                              ; preds = %471
  %473 = trunc i64 %303 to i32
  %474 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1
  %475 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %495

476:                                              ; preds = %690, %471
  br i1 %24, label %742, label %477

477:                                              ; preds = %476
  %478 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1
  %479 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %480 = load ptr, ptr %479, align 8, !tbaa !31
  %481 = load ptr, ptr %478, align 8, !tbaa !32
  %482 = ptrtoint ptr %480 to i64
  %483 = ptrtoint ptr %481 to i64
  %484 = sub i64 %482, %483
  %485 = ashr exact i64 %484, 4
  %486 = icmp eq ptr %480, %481
  br i1 %486, label %742, label %487

487:                                              ; preds = %477
  %488 = load i32, ptr %6, align 8, !tbaa !61
  %489 = load ptr, ptr %7, align 8, !tbaa !58
  %490 = load ptr, ptr %290, align 8, !tbaa !66
  %491 = load i32, ptr %287, align 8, !tbaa !61
  %492 = load ptr, ptr %288, align 8, !tbaa !58
  %493 = load ptr, ptr %289, align 8, !tbaa !66
  %494 = trunc i64 %296 to i32
  br label %697

495:                                              ; preds = %472, %690
  %496 = phi i64 [ %305, %472 ], [ %692, %690 ]
  %497 = phi i32 [ %473, %472 ], [ %691, %690 ]
  %498 = load ptr, ptr %283, align 8, !tbaa !43
  %499 = getelementptr inbounds i32, ptr %498, i64 %496
  %500 = load i32, ptr %499, align 4, !tbaa !22
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds i32, ptr %277, i64 %501
  %503 = load i32, ptr %502, align 4, !tbaa !22
  %504 = icmp eq i32 %503, -1
  br i1 %504, label %554, label %505

505:                                              ; preds = %495
  %506 = load ptr, ptr %475, align 8, !tbaa !31
  %507 = load ptr, ptr %474, align 8, !tbaa !32
  %508 = icmp eq ptr %506, %507
  br i1 %508, label %690, label %511

509:                                              ; preds = %522
  %510 = landingpad { ptr, i32 }
          cleanup
  br label %753

511:                                              ; preds = %505, %544
  %512 = phi ptr [ %548, %544 ], [ %507, %505 ]
  %513 = phi i64 [ %546, %544 ], [ 0, %505 ]
  %514 = phi i32 [ %545, %544 ], [ 0, %505 ]
  %515 = load ptr, ptr %284, align 8, !tbaa !50
  %516 = getelementptr inbounds double, ptr %515, i64 %496
  %517 = load double, ptr %516, align 8, !tbaa !52
  %518 = getelementptr inbounds %"struct.std::pair", ptr %512, i64 %513, i32 1
  %519 = load double, ptr %518, align 8, !tbaa !35
  %520 = fmul double %517, %519
  %521 = fcmp oeq double %520, 0.000000e+00
  br i1 %521, label %544, label %522

522:                                              ; preds = %511
  %523 = getelementptr inbounds %"struct.std::pair", ptr %512, i64 %513
  %524 = load ptr, ptr %283, align 8, !tbaa !43
  %525 = getelementptr inbounds i32, ptr %524, i64 %496
  %526 = load i32, ptr %525, align 4, !tbaa !22
  %527 = zext i32 %526 to i64
  %528 = getelementptr inbounds i32, ptr %277, i64 %527
  %529 = load i32, ptr %528, align 4, !tbaa !22
  %530 = load i32, ptr %523, align 8, !tbaa !37
  %531 = zext i32 %530 to i64
  %532 = getelementptr inbounds i32, ptr %277, i64 %531
  %533 = load i32, ptr %532, align 4, !tbaa !22
  %534 = load ptr, ptr %285, align 8, !tbaa !47
  %535 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %534, i32 noundef %533, i32 noundef %529)
          to label %536 unwind label %509

536:                                              ; preds = %522
  %537 = icmp eq i32 %535, -1
  br i1 %537, label %544, label %538

538:                                              ; preds = %536
  %539 = load ptr, ptr %286, align 8, !tbaa !50
  %540 = zext i32 %535 to i64
  %541 = getelementptr inbounds double, ptr %539, i64 %540
  %542 = load double, ptr %541, align 8, !tbaa !52
  %543 = fadd double %520, %542
  store double %543, ptr %541, align 8, !tbaa !52
  br label %544

544:                                              ; preds = %538, %536, %511
  %545 = add i32 %514, 1
  %546 = zext i32 %545 to i64
  %547 = load ptr, ptr %475, align 8, !tbaa !31
  %548 = load ptr, ptr %474, align 8, !tbaa !32
  %549 = ptrtoint ptr %547 to i64
  %550 = ptrtoint ptr %548 to i64
  %551 = sub i64 %549, %550
  %552 = ashr exact i64 %551, 4
  %553 = icmp eq i64 %552, %546
  br i1 %553, label %690, label %511

554:                                              ; preds = %495
  %555 = load ptr, ptr %276, align 8, !tbaa !21
  br label %556

556:                                              ; preds = %556, %554
  %557 = phi ptr [ %555, %554 ], [ %560, %556 ]
  %558 = load i32, ptr %557, align 8, !tbaa !24
  %559 = icmp eq i32 %558, %500
  %560 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %557, i64 1
  br i1 %559, label %561, label %556

561:                                              ; preds = %556
  %562 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %557, i64 0, i32 1
  %563 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %557, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %564 = load ptr, ptr %563, align 8, !tbaa !31
  %565 = load ptr, ptr %562, align 8, !tbaa !32
  %566 = icmp eq ptr %564, %565
  br i1 %566, label %578, label %567

567:                                              ; preds = %561
  %568 = load ptr, ptr %475, align 8, !tbaa !31
  %569 = load ptr, ptr %474, align 8, !tbaa !32
  br label %570

570:                                              ; preds = %567, %597
  %571 = phi ptr [ %598, %597 ], [ %565, %567 ]
  %572 = phi ptr [ %599, %597 ], [ %564, %567 ]
  %573 = phi ptr [ %600, %597 ], [ %569, %567 ]
  %574 = phi ptr [ %601, %597 ], [ %568, %567 ]
  %575 = phi i64 [ %603, %597 ], [ 0, %567 ]
  %576 = phi i32 [ %602, %597 ], [ 0, %567 ]
  %577 = icmp eq ptr %574, %573
  br i1 %577, label %597, label %611

578:                                              ; preds = %597, %561
  br i1 %24, label %690, label %579

579:                                              ; preds = %578
  %580 = load ptr, ptr %475, align 8, !tbaa !31
  %581 = load ptr, ptr %474, align 8, !tbaa !32
  %582 = ptrtoint ptr %580 to i64
  %583 = ptrtoint ptr %581 to i64
  %584 = sub i64 %582, %583
  %585 = ashr exact i64 %584, 4
  %586 = icmp eq ptr %580, %581
  br i1 %586, label %690, label %587

587:                                              ; preds = %579
  %588 = load ptr, ptr %284, align 8, !tbaa !50
  %589 = getelementptr inbounds double, ptr %588, i64 %496
  %590 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %557, i64 0, i32 2
  %591 = load i32, ptr %287, align 8, !tbaa !61
  %592 = load ptr, ptr %288, align 8, !tbaa !58
  %593 = load ptr, ptr %289, align 8, !tbaa !66
  br label %657

594:                                              ; preds = %647
  %595 = load ptr, ptr %563, align 8, !tbaa !31
  %596 = load ptr, ptr %562, align 8, !tbaa !32
  br label %597

597:                                              ; preds = %594, %570
  %598 = phi ptr [ %596, %594 ], [ %571, %570 ]
  %599 = phi ptr [ %595, %594 ], [ %572, %570 ]
  %600 = phi ptr [ %651, %594 ], [ %573, %570 ]
  %601 = phi ptr [ %650, %594 ], [ %573, %570 ]
  %602 = add i32 %576, 1
  %603 = zext i32 %602 to i64
  %604 = ptrtoint ptr %599 to i64
  %605 = ptrtoint ptr %598 to i64
  %606 = sub i64 %604, %605
  %607 = ashr exact i64 %606, 4
  %608 = icmp eq i64 %607, %603
  br i1 %608, label %578, label %570

609:                                              ; preds = %626
  %610 = landingpad { ptr, i32 }
          cleanup
  br label %753

611:                                              ; preds = %570, %647
  %612 = phi ptr [ %651, %647 ], [ %573, %570 ]
  %613 = phi i64 [ %649, %647 ], [ 0, %570 ]
  %614 = phi i32 [ %648, %647 ], [ 0, %570 ]
  %615 = load ptr, ptr %562, align 8, !tbaa !32
  %616 = load ptr, ptr %284, align 8, !tbaa !50
  %617 = getelementptr inbounds double, ptr %616, i64 %496
  %618 = load double, ptr %617, align 8, !tbaa !52
  %619 = getelementptr inbounds %"struct.std::pair", ptr %612, i64 %613, i32 1
  %620 = load double, ptr %619, align 8, !tbaa !35
  %621 = fmul double %618, %620
  %622 = getelementptr inbounds %"struct.std::pair", ptr %615, i64 %575, i32 1
  %623 = load double, ptr %622, align 8, !tbaa !35
  %624 = fmul double %621, %623
  %625 = fcmp oeq double %624, 0.000000e+00
  br i1 %625, label %647, label %626

626:                                              ; preds = %611
  %627 = getelementptr inbounds %"struct.std::pair", ptr %615, i64 %575
  %628 = getelementptr inbounds %"struct.std::pair", ptr %612, i64 %613
  %629 = load i32, ptr %627, align 8, !tbaa !37
  %630 = zext i32 %629 to i64
  %631 = getelementptr inbounds i32, ptr %277, i64 %630
  %632 = load i32, ptr %631, align 4, !tbaa !22
  %633 = load i32, ptr %628, align 8, !tbaa !37
  %634 = zext i32 %633 to i64
  %635 = getelementptr inbounds i32, ptr %277, i64 %634
  %636 = load i32, ptr %635, align 4, !tbaa !22
  %637 = load ptr, ptr %285, align 8, !tbaa !47
  %638 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %637, i32 noundef %636, i32 noundef %632)
          to label %639 unwind label %609

639:                                              ; preds = %626
  %640 = icmp eq i32 %638, -1
  br i1 %640, label %647, label %641

641:                                              ; preds = %639
  %642 = load ptr, ptr %286, align 8, !tbaa !50
  %643 = zext i32 %638 to i64
  %644 = getelementptr inbounds double, ptr %642, i64 %643
  %645 = load double, ptr %644, align 8, !tbaa !52
  %646 = fadd double %624, %645
  store double %646, ptr %644, align 8, !tbaa !52
  br label %647

647:                                              ; preds = %641, %639, %611
  %648 = add i32 %614, 1
  %649 = zext i32 %648 to i64
  %650 = load ptr, ptr %475, align 8, !tbaa !31
  %651 = load ptr, ptr %474, align 8, !tbaa !32
  %652 = ptrtoint ptr %650 to i64
  %653 = ptrtoint ptr %651 to i64
  %654 = sub i64 %652, %653
  %655 = ashr exact i64 %654, 4
  %656 = icmp eq i64 %655, %649
  br i1 %656, label %594, label %611

657:                                              ; preds = %587, %676
  %658 = phi i64 [ 0, %587 ], [ %688, %676 ]
  %659 = phi i32 [ 0, %587 ], [ %687, %676 ]
  %660 = load double, ptr %589, align 8, !tbaa !52
  %661 = getelementptr inbounds %"struct.std::pair", ptr %581, i64 %658
  %662 = getelementptr inbounds %"struct.std::pair", ptr %581, i64 %658, i32 1
  %663 = load double, ptr %662, align 8, !tbaa !35
  %664 = load double, ptr %590, align 8, !tbaa !48
  %665 = load i32, ptr %661, align 8, !tbaa !37
  %666 = zext i32 %665 to i64
  %667 = getelementptr inbounds i32, ptr %277, i64 %666
  %668 = load i32, ptr %667, align 4, !tbaa !22
  br label %669

669:                                              ; preds = %669, %657
  %670 = phi i32 [ %591, %657 ], [ %671, %669 ]
  %671 = add i32 %670, -1
  %672 = sext i32 %671 to i64
  %673 = getelementptr inbounds i32, ptr %592, i64 %672
  %674 = load i32, ptr %673, align 4, !tbaa !22
  %675 = icmp ugt i32 %674, %668
  br i1 %675, label %669, label %676

676:                                              ; preds = %669
  %677 = sub i32 %668, %674
  %678 = zext i32 %677 to i64
  %679 = zext i32 %671 to i64
  %680 = getelementptr inbounds %"class.dealii::Vector.35", ptr %593, i64 %679, i32 3
  %681 = load ptr, ptr %680, align 8, !tbaa !60
  %682 = getelementptr inbounds double, ptr %681, i64 %678
  %683 = load double, ptr %682, align 8, !tbaa !52
  %684 = fneg double %660
  %685 = fmul double %663, %684
  %686 = tail call double @llvm.fmuladd.f64(double %685, double %664, double %683)
  store double %686, ptr %682, align 8, !tbaa !52
  %687 = add i32 %659, 1
  %688 = zext i32 %687 to i64
  %689 = icmp eq i64 %585, %688
  br i1 %689, label %690, label %657

690:                                              ; preds = %544, %676, %505, %579, %578
  %691 = add i32 %497, 1
  %692 = zext i32 %691 to i64
  %693 = load ptr, ptr %282, align 8, !tbaa !41
  %694 = getelementptr inbounds i64, ptr %693, i64 %304
  %695 = load i64, ptr %694, align 8, !tbaa !42
  %696 = icmp ugt i64 %695, %692
  br i1 %696, label %495, label %476

697:                                              ; preds = %487, %730
  %698 = phi i64 [ 0, %487 ], [ %740, %730 ]
  %699 = phi i32 [ 0, %487 ], [ %739, %730 ]
  br label %700

700:                                              ; preds = %700, %697
  %701 = phi i32 [ %488, %697 ], [ %702, %700 ]
  %702 = add i32 %701, -1
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds i32, ptr %489, i64 %703
  %705 = load i32, ptr %704, align 4, !tbaa !22
  %706 = zext i32 %705 to i64
  %707 = icmp ult i64 %296, %706
  br i1 %707, label %700, label %708

708:                                              ; preds = %700
  %709 = sub i32 %494, %705
  %710 = zext i32 %709 to i64
  %711 = zext i32 %702 to i64
  %712 = getelementptr inbounds %"class.dealii::Vector.35", ptr %490, i64 %711, i32 3
  %713 = load ptr, ptr %712, align 8, !tbaa !60
  %714 = getelementptr inbounds double, ptr %713, i64 %710
  %715 = load double, ptr %714, align 8, !tbaa !52
  %716 = getelementptr inbounds %"struct.std::pair", ptr %481, i64 %698
  %717 = getelementptr inbounds %"struct.std::pair", ptr %481, i64 %698, i32 1
  %718 = load double, ptr %717, align 8, !tbaa !35
  %719 = load i32, ptr %716, align 8, !tbaa !37
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds i32, ptr %277, i64 %720
  %722 = load i32, ptr %721, align 4, !tbaa !22
  br label %723

723:                                              ; preds = %723, %708
  %724 = phi i32 [ %491, %708 ], [ %725, %723 ]
  %725 = add i32 %724, -1
  %726 = sext i32 %725 to i64
  %727 = getelementptr inbounds i32, ptr %492, i64 %726
  %728 = load i32, ptr %727, align 4, !tbaa !22
  %729 = icmp ugt i32 %728, %722
  br i1 %729, label %723, label %730

730:                                              ; preds = %723
  %731 = sub i32 %722, %728
  %732 = zext i32 %731 to i64
  %733 = zext i32 %725 to i64
  %734 = getelementptr inbounds %"class.dealii::Vector.35", ptr %493, i64 %733, i32 3
  %735 = load ptr, ptr %734, align 8, !tbaa !60
  %736 = getelementptr inbounds double, ptr %735, i64 %732
  %737 = load double, ptr %736, align 8, !tbaa !52
  %738 = tail call double @llvm.fmuladd.f64(double %715, double %718, double %737)
  store double %738, ptr %736, align 8, !tbaa !52
  %739 = add i32 %699, 1
  %740 = zext i32 %739 to i64
  %741 = icmp eq i64 %485, %740
  br i1 %741, label %742, label %697

742:                                              ; preds = %730, %477, %476
  %743 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 1
  br label %744

744:                                              ; preds = %742, %461, %312
  %745 = phi ptr [ %743, %742 ], [ %297, %461 ], [ %297, %312 ]
  %746 = load i32, ptr %26, align 4, !tbaa !38
  %747 = zext i32 %746 to i64
  %748 = icmp ult i64 %304, %747
  br i1 %748, label %295, label %291

749:                                              ; preds = %263, %265, %217, %219, %161, %163, %96, %98
  %750 = phi ptr [ %47, %96 ], [ %47, %98 ], [ %103, %161 ], [ %103, %163 ], [ %167, %217 ], [ %167, %219 ], [ %103, %263 ], [ %103, %265 ]
  %751 = phi { ptr, i32 } [ %97, %96 ], [ %99, %98 ], [ %162, %161 ], [ %164, %163 ], [ %218, %217 ], [ %220, %219 ], [ %264, %263 ], [ %266, %265 ]
  %752 = icmp eq ptr %750, null
  br i1 %752, label %756, label %753

753:                                              ; preds = %609, %356, %313, %509, %749
  %754 = phi { ptr, i32 } [ %751, %749 ], [ %610, %609 ], [ %357, %356 ], [ %510, %509 ], [ %314, %313 ]
  %755 = phi ptr [ %750, %749 ], [ %277, %609 ], [ %277, %356 ], [ %277, %509 ], [ %277, %313 ]
  tail call void @_ZdlPv(ptr noundef nonnull %755) #23
  br label %756

756:                                              ; preds = %753, %749
  %757 = phi { ptr, i32 } [ %751, %749 ], [ %754, %753 ]
  resume { ptr, i32 } %757
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8set_zeroINS_11BlockVectorIdEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %34, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %10 = load i32, ptr %9, align 8, !tbaa !61
  %11 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !58
  %13 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !66
  br label %15

15:                                               ; preds = %8, %25
  %16 = phi ptr [ %4, %8 ], [ %32, %25 ]
  %17 = load i32, ptr %16, align 8, !tbaa !24
  br label %18

18:                                               ; preds = %18, %15
  %19 = phi i32 [ %10, %15 ], [ %20, %18 ]
  %20 = add i32 %19, -1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, ptr %12, i64 %21
  %23 = load i32, ptr %22, align 4, !tbaa !22
  %24 = icmp ugt i32 %23, %17
  br i1 %24, label %18, label %25

25:                                               ; preds = %18
  %26 = sub i32 %17, %23
  %27 = zext i32 %26 to i64
  %28 = zext i32 %20 to i64
  %29 = getelementptr inbounds %"class.dealii::Vector.35", ptr %14, i64 %28, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !60
  %31 = getelementptr inbounds double, ptr %30, i64 %27
  store double 0.000000e+00, ptr %31, align 8, !tbaa !52
  %32 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 1
  %33 = icmp eq ptr %32, %6
  br i1 %33, label %34, label %15

34:                                               ; preds = %25, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_11BlockVectorIdEEEEvRKNS_6VectorIdEERKSt6vectorIjSaIjEERT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(128) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !53
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !55
  %12 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %13 = load i32, ptr %12, align 8, !tbaa !57
  %14 = load ptr, ptr %9, align 8, !tbaa !55
  %15 = ptrtoint ptr %11 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = shl nsw i64 %17, 3
  %19 = zext i32 %13 to i64
  %20 = add nsw i64 %18, %19
  %21 = load ptr, ptr %2, align 8, !tbaa !58
  %22 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %3, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %3, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %3, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = ptrtoint ptr %33 to i64
  %35 = ptrtoint ptr %31 to i64
  %36 = sub i64 %34, %35
  %37 = icmp sgt i64 %36, 0
  %38 = udiv exact i64 %36, 40
  %39 = zext i32 %6 to i64
  br label %41

40:                                               ; preds = %143, %4
  ret void

41:                                               ; preds = %8, %143
  %42 = phi i64 [ 0, %8 ], [ %144, %143 ]
  %43 = getelementptr inbounds i32, ptr %21, i64 %42
  %44 = load i32, ptr %43, align 4, !tbaa !22
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %20, %45
  br i1 %46, label %57, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds double, ptr %23, i64 %42
  %49 = load double, ptr %48, align 8, !tbaa !52
  br label %50

50:                                               ; preds = %50, %47
  %51 = phi i32 [ %25, %47 ], [ %52, %50 ]
  %52 = add i32 %51, -1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, ptr %27, i64 %53
  %55 = load i32, ptr %54, align 4, !tbaa !22
  %56 = icmp ugt i32 %55, %44
  br i1 %56, label %50, label %131

57:                                               ; preds = %41
  %58 = lshr i32 %44, 6
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i64, ptr %14, i64 %59
  %61 = and i32 %44, 63
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 1, %62
  %64 = load i64, ptr %60, align 8, !tbaa !42
  %65 = and i64 %64, %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %77

67:                                               ; preds = %57
  %68 = getelementptr inbounds double, ptr %23, i64 %42
  %69 = load double, ptr %68, align 8, !tbaa !52
  br label %70

70:                                               ; preds = %70, %67
  %71 = phi i32 [ %25, %67 ], [ %72, %70 ]
  %72 = add i32 %71, -1
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, ptr %27, i64 %73
  %75 = load i32, ptr %74, align 4, !tbaa !22
  %76 = icmp ugt i32 %75, %44
  br i1 %76, label %70, label %131

77:                                               ; preds = %57
  br i1 %37, label %78, label %91

78:                                               ; preds = %77, %78
  %79 = phi i64 [ %89, %78 ], [ %38, %77 ]
  %80 = phi ptr [ %88, %78 ], [ %31, %77 ]
  %81 = lshr i64 %79, 1
  %82 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %80, i64 %81
  %83 = load i32, ptr %82, align 8, !tbaa !24
  %84 = icmp ult i32 %83, %44
  %85 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %82, i64 1
  %86 = xor i64 %81, -1
  %87 = add nsw i64 %79, %86
  %88 = select i1 %84, ptr %85, ptr %80
  %89 = select i1 %84, i64 %87, i64 %81
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %78, label %91

91:                                               ; preds = %78, %77
  %92 = phi ptr [ %31, %77 ], [ %88, %78 ]
  %93 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %92, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %92, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %95 = load ptr, ptr %94, align 8, !tbaa !31
  %96 = load ptr, ptr %93, align 8, !tbaa !32
  %97 = ptrtoint ptr %95 to i64
  %98 = ptrtoint ptr %96 to i64
  %99 = sub i64 %97, %98
  %100 = ashr exact i64 %99, 4
  %101 = icmp eq ptr %95, %96
  br i1 %101, label %143, label %102

102:                                              ; preds = %91
  %103 = getelementptr inbounds double, ptr %23, i64 %42
  br label %104

104:                                              ; preds = %102, %119
  %105 = phi i64 [ 0, %102 ], [ %129, %119 ]
  %106 = phi i32 [ 0, %102 ], [ %128, %119 ]
  %107 = load double, ptr %103, align 8, !tbaa !52
  %108 = getelementptr inbounds %"struct.std::pair", ptr %96, i64 %105
  %109 = getelementptr inbounds %"struct.std::pair", ptr %96, i64 %105, i32 1
  %110 = load double, ptr %109, align 8, !tbaa !35
  %111 = load i32, ptr %108, align 8, !tbaa !37
  br label %112

112:                                              ; preds = %112, %104
  %113 = phi i32 [ %25, %104 ], [ %114, %112 ]
  %114 = add i32 %113, -1
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i32, ptr %27, i64 %115
  %117 = load i32, ptr %116, align 4, !tbaa !22
  %118 = icmp ugt i32 %117, %111
  br i1 %118, label %112, label %119

119:                                              ; preds = %112
  %120 = sub i32 %111, %117
  %121 = zext i32 %120 to i64
  %122 = zext i32 %114 to i64
  %123 = getelementptr inbounds %"class.dealii::Vector.35", ptr %29, i64 %122, i32 3
  %124 = load ptr, ptr %123, align 8, !tbaa !60
  %125 = getelementptr inbounds double, ptr %124, i64 %121
  %126 = load double, ptr %125, align 8, !tbaa !52
  %127 = tail call double @llvm.fmuladd.f64(double %107, double %110, double %126)
  store double %127, ptr %125, align 8, !tbaa !52
  %128 = add i32 %106, 1
  %129 = zext i32 %128 to i64
  %130 = icmp ugt i64 %100, %129
  br i1 %130, label %104, label %143

131:                                              ; preds = %50, %70
  %132 = phi i32 [ %75, %70 ], [ %55, %50 ]
  %133 = phi i32 [ %72, %70 ], [ %52, %50 ]
  %134 = phi double [ %69, %70 ], [ %49, %50 ]
  %135 = sub i32 %44, %132
  %136 = zext i32 %135 to i64
  %137 = zext i32 %133 to i64
  %138 = getelementptr inbounds %"class.dealii::Vector.35", ptr %29, i64 %137, i32 3
  %139 = load ptr, ptr %138, align 8, !tbaa !60
  %140 = getelementptr inbounds double, ptr %139, i64 %136
  %141 = load double, ptr %140, align 8, !tbaa !52
  %142 = fadd double %134, %141
  store double %142, ptr %140, align 8, !tbaa !52
  br label %143

143:                                              ; preds = %119, %131, %91
  %144 = add nuw nsw i64 %42, 1
  %145 = icmp eq i64 %144, %39
  br i1 %145, label %40, label %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix10distributeINS_11BlockVectorIdEEEEvRKT_RS4_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %5 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %6 = load i32, ptr %4, align 8, !tbaa !61
  %7 = zext i32 %6 to i64
  %8 = load ptr, ptr %5, align 8, !tbaa !58
  %9 = getelementptr inbounds i32, ptr %8, i64 %7
  %10 = load i32, ptr %9, align 4, !tbaa !22
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %3
  %13 = zext i32 %10 to i64
  %14 = shl nuw nsw i64 %13, 2
  %15 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %14) #21
  %16 = getelementptr inbounds i32, ptr %15, i64 %13
  %17 = load i32, ptr %9, align 4, !tbaa !22
  %18 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !21
  %20 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !21
  %22 = icmp eq ptr %19, %21
  %23 = icmp eq i32 %17, 0
  br i1 %22, label %27, label %26

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %258

26:                                               ; preds = %12
  br i1 %23, label %258, label %83

27:                                               ; preds = %12
  br i1 %23, label %258, label %28

28:                                               ; preds = %27, %73
  %29 = phi i32 [ %77, %73 ], [ 0, %27 ]
  %30 = phi ptr [ %76, %73 ], [ %15, %27 ]
  %31 = phi ptr [ %75, %73 ], [ %15, %27 ]
  %32 = phi ptr [ %74, %73 ], [ %16, %27 ]
  %33 = icmp eq ptr %31, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  store i32 %29, ptr %31, align 4, !tbaa !22
  %35 = getelementptr inbounds i32, ptr %31, i64 1
  br label %73

36:                                               ; preds = %28
  %37 = ptrtoint ptr %31 to i64
  %38 = ptrtoint ptr %30 to i64
  %39 = sub i64 %37, %38
  %40 = icmp eq i64 %39, 9223372036854775804
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %42 unwind label %81

42:                                               ; preds = %41
  unreachable

43:                                               ; preds = %36
  %44 = ashr exact i64 %39, 2
  %45 = tail call i64 @llvm.umax.i64(i64 %44, i64 1)
  %46 = add i64 %45, %44
  %47 = icmp ult i64 %46, %44
  %48 = icmp ugt i64 %46, 2305843009213693951
  %49 = or i1 %47, %48
  %50 = select i1 %49, i64 2305843009213693951, i64 %46
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = shl nuw nsw i64 %50, 2
  %54 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %53) #21
          to label %55 unwind label %79

55:                                               ; preds = %52, %43
  %56 = phi ptr [ null, %43 ], [ %54, %52 ]
  %57 = getelementptr inbounds i32, ptr %56, i64 %44
  store i32 %29, ptr %57, align 4, !tbaa !22
  %58 = icmp sgt i64 %39, 4
  br i1 %58, label %59, label %60, !prof !23

59:                                               ; preds = %55
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %56, ptr align 4 %30, i64 %39, i1 false)
  br label %65

60:                                               ; preds = %55
  %61 = icmp eq i64 %39, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %60
  %63 = load i32, ptr %30, align 4, !tbaa !22
  store i32 %63, ptr %56, align 4, !tbaa !22
  %64 = getelementptr inbounds i32, ptr %57, i64 1
  br label %68

65:                                               ; preds = %60, %59
  %66 = getelementptr inbounds i32, ptr %57, i64 1
  %67 = icmp eq ptr %30, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %62, %65
  %69 = phi ptr [ %64, %62 ], [ %66, %65 ]
  tail call void @_ZdlPv(ptr noundef nonnull %30) #23
  br label %70

70:                                               ; preds = %68, %65
  %71 = phi ptr [ %66, %65 ], [ %69, %68 ]
  %72 = getelementptr inbounds i32, ptr %56, i64 %50
  br label %73

73:                                               ; preds = %70, %34
  %74 = phi ptr [ %72, %70 ], [ %32, %34 ]
  %75 = phi ptr [ %71, %70 ], [ %35, %34 ]
  %76 = phi ptr [ %56, %70 ], [ %30, %34 ]
  %77 = add nuw i32 %29, 1
  %78 = icmp eq i32 %77, %17
  br i1 %78, label %258, label %28

79:                                               ; preds = %52
  %80 = landingpad { ptr, i32 }
          cleanup
  br label %398

81:                                               ; preds = %41
  %82 = landingpad { ptr, i32 }
          cleanup
  br label %398

83:                                               ; preds = %26, %250
  %84 = phi i32 [ %256, %250 ], [ 0, %26 ]
  %85 = phi i32 [ %255, %250 ], [ 0, %26 ]
  %86 = phi ptr [ %254, %250 ], [ %15, %26 ]
  %87 = phi ptr [ %253, %250 ], [ %15, %26 ]
  %88 = phi ptr [ %252, %250 ], [ %16, %26 ]
  %89 = phi ptr [ %251, %250 ], [ %19, %26 ]
  %90 = load i32, ptr %89, align 8, !tbaa !24
  %91 = icmp eq i32 %84, %90
  br i1 %91, label %92, label %204

92:                                               ; preds = %83
  %93 = icmp eq ptr %87, %88
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  store i32 -1, ptr %87, align 4, !tbaa !22
  %95 = getelementptr inbounds i32, ptr %87, i64 1
  br label %133

96:                                               ; preds = %92
  %97 = ptrtoint ptr %87 to i64
  %98 = ptrtoint ptr %86 to i64
  %99 = sub i64 %97, %98
  %100 = icmp eq i64 %99, 9223372036854775804
  br i1 %100, label %101, label %103

101:                                              ; preds = %96
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %102 unwind label %146

102:                                              ; preds = %101
  unreachable

103:                                              ; preds = %96
  %104 = ashr exact i64 %99, 2
  %105 = tail call i64 @llvm.umax.i64(i64 %104, i64 1)
  %106 = add i64 %105, %104
  %107 = icmp ult i64 %106, %104
  %108 = icmp ugt i64 %106, 2305843009213693951
  %109 = or i1 %107, %108
  %110 = select i1 %109, i64 2305843009213693951, i64 %106
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %103
  %113 = shl nuw nsw i64 %110, 2
  %114 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %113) #21
          to label %115 unwind label %144

115:                                              ; preds = %112, %103
  %116 = phi ptr [ null, %103 ], [ %114, %112 ]
  %117 = getelementptr inbounds i32, ptr %116, i64 %104
  store i32 -1, ptr %117, align 4, !tbaa !22
  %118 = icmp sgt i64 %99, 4
  br i1 %118, label %119, label %120, !prof !23

119:                                              ; preds = %115
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %116, ptr align 4 %86, i64 %99, i1 false)
  br label %125

120:                                              ; preds = %115
  %121 = icmp eq i64 %99, 4
  br i1 %121, label %122, label %125

122:                                              ; preds = %120
  %123 = load i32, ptr %86, align 4, !tbaa !22
  store i32 %123, ptr %116, align 4, !tbaa !22
  %124 = getelementptr inbounds i32, ptr %117, i64 1
  br label %128

125:                                              ; preds = %120, %119
  %126 = getelementptr inbounds i32, ptr %117, i64 1
  %127 = icmp eq ptr %86, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %122, %125
  %129 = phi ptr [ %124, %122 ], [ %126, %125 ]
  tail call void @_ZdlPv(ptr noundef nonnull %86) #23
  br label %130

130:                                              ; preds = %128, %125
  %131 = phi ptr [ %126, %125 ], [ %129, %128 ]
  %132 = getelementptr inbounds i32, ptr %116, i64 %110
  br label %133

133:                                              ; preds = %94, %130
  %134 = phi ptr [ %132, %130 ], [ %88, %94 ]
  %135 = phi ptr [ %131, %130 ], [ %95, %94 ]
  %136 = phi ptr [ %116, %130 ], [ %86, %94 ]
  %137 = add i32 %85, 1
  %138 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %89, i64 1
  %139 = load ptr, ptr %20, align 8, !tbaa !21
  %140 = icmp eq ptr %138, %139
  br i1 %140, label %141, label %250

141:                                              ; preds = %133
  %142 = add i32 %84, 1
  %143 = icmp ult i32 %142, %17
  br i1 %143, label %148, label %258

144:                                              ; preds = %112
  %145 = landingpad { ptr, i32 }
          cleanup
  br label %398

146:                                              ; preds = %101
  %147 = landingpad { ptr, i32 }
          cleanup
  br label %398

148:                                              ; preds = %141, %194
  %149 = phi i32 [ %198, %194 ], [ %142, %141 ]
  %150 = phi ptr [ %197, %194 ], [ %136, %141 ]
  %151 = phi ptr [ %196, %194 ], [ %135, %141 ]
  %152 = phi ptr [ %195, %194 ], [ %134, %141 ]
  %153 = sub i32 %149, %137
  %154 = icmp eq ptr %151, %152
  br i1 %154, label %157, label %155

155:                                              ; preds = %148
  store i32 %153, ptr %151, align 4, !tbaa !22
  %156 = getelementptr inbounds i32, ptr %151, i64 1
  br label %194

157:                                              ; preds = %148
  %158 = ptrtoint ptr %151 to i64
  %159 = ptrtoint ptr %150 to i64
  %160 = sub i64 %158, %159
  %161 = icmp eq i64 %160, 9223372036854775804
  br i1 %161, label %162, label %164

162:                                              ; preds = %157
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %163 unwind label %202

163:                                              ; preds = %162
  unreachable

164:                                              ; preds = %157
  %165 = ashr exact i64 %160, 2
  %166 = tail call i64 @llvm.umax.i64(i64 %165, i64 1)
  %167 = add i64 %166, %165
  %168 = icmp ult i64 %167, %165
  %169 = icmp ugt i64 %167, 2305843009213693951
  %170 = or i1 %168, %169
  %171 = select i1 %170, i64 2305843009213693951, i64 %167
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %176, label %173

173:                                              ; preds = %164
  %174 = shl nuw nsw i64 %171, 2
  %175 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %174) #21
          to label %176 unwind label %200

176:                                              ; preds = %173, %164
  %177 = phi ptr [ null, %164 ], [ %175, %173 ]
  %178 = getelementptr inbounds i32, ptr %177, i64 %165
  store i32 %153, ptr %178, align 4, !tbaa !22
  %179 = icmp sgt i64 %160, 4
  br i1 %179, label %180, label %181, !prof !23

180:                                              ; preds = %176
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %177, ptr align 4 %150, i64 %160, i1 false)
  br label %186

181:                                              ; preds = %176
  %182 = icmp eq i64 %160, 4
  br i1 %182, label %183, label %186

183:                                              ; preds = %181
  %184 = load i32, ptr %150, align 4, !tbaa !22
  store i32 %184, ptr %177, align 4, !tbaa !22
  %185 = getelementptr inbounds i32, ptr %178, i64 1
  br label %189

186:                                              ; preds = %181, %180
  %187 = getelementptr inbounds i32, ptr %178, i64 1
  %188 = icmp eq ptr %150, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %183, %186
  %190 = phi ptr [ %185, %183 ], [ %187, %186 ]
  tail call void @_ZdlPv(ptr noundef nonnull %150) #23
  br label %191

191:                                              ; preds = %189, %186
  %192 = phi ptr [ %187, %186 ], [ %190, %189 ]
  %193 = getelementptr inbounds i32, ptr %177, i64 %171
  br label %194

194:                                              ; preds = %191, %155
  %195 = phi ptr [ %193, %191 ], [ %152, %155 ]
  %196 = phi ptr [ %192, %191 ], [ %156, %155 ]
  %197 = phi ptr [ %177, %191 ], [ %150, %155 ]
  %198 = add nuw i32 %149, 1
  %199 = icmp eq i32 %198, %17
  br i1 %199, label %258, label %148

200:                                              ; preds = %173
  %201 = landingpad { ptr, i32 }
          cleanup
  br label %398

202:                                              ; preds = %162
  %203 = landingpad { ptr, i32 }
          cleanup
  br label %398

204:                                              ; preds = %83
  %205 = sub i32 %84, %85
  %206 = icmp eq ptr %87, %88
  br i1 %206, label %209, label %207

207:                                              ; preds = %204
  store i32 %205, ptr %87, align 4, !tbaa !22
  %208 = getelementptr inbounds i32, ptr %87, i64 1
  br label %250

209:                                              ; preds = %204
  %210 = ptrtoint ptr %87 to i64
  %211 = ptrtoint ptr %86 to i64
  %212 = sub i64 %210, %211
  %213 = icmp eq i64 %212, 9223372036854775804
  br i1 %213, label %214, label %216

214:                                              ; preds = %209
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %215 unwind label %248

215:                                              ; preds = %214
  unreachable

216:                                              ; preds = %209
  %217 = ashr exact i64 %212, 2
  %218 = tail call i64 @llvm.umax.i64(i64 %217, i64 1)
  %219 = add i64 %218, %217
  %220 = icmp ult i64 %219, %217
  %221 = icmp ugt i64 %219, 2305843009213693951
  %222 = or i1 %220, %221
  %223 = select i1 %222, i64 2305843009213693951, i64 %219
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %228, label %225

225:                                              ; preds = %216
  %226 = shl nuw nsw i64 %223, 2
  %227 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %226) #21
          to label %228 unwind label %246

228:                                              ; preds = %225, %216
  %229 = phi ptr [ null, %216 ], [ %227, %225 ]
  %230 = getelementptr inbounds i32, ptr %229, i64 %217
  store i32 %205, ptr %230, align 4, !tbaa !22
  %231 = icmp sgt i64 %212, 4
  br i1 %231, label %232, label %233, !prof !23

232:                                              ; preds = %228
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %229, ptr align 4 %86, i64 %212, i1 false)
  br label %238

233:                                              ; preds = %228
  %234 = icmp eq i64 %212, 4
  br i1 %234, label %235, label %238

235:                                              ; preds = %233
  %236 = load i32, ptr %86, align 4, !tbaa !22
  store i32 %236, ptr %229, align 4, !tbaa !22
  %237 = getelementptr inbounds i32, ptr %230, i64 1
  br label %241

238:                                              ; preds = %233, %232
  %239 = getelementptr inbounds i32, ptr %230, i64 1
  %240 = icmp eq ptr %86, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %235, %238
  %242 = phi ptr [ %237, %235 ], [ %239, %238 ]
  tail call void @_ZdlPv(ptr noundef nonnull %86) #23
  br label %243

243:                                              ; preds = %241, %238
  %244 = phi ptr [ %239, %238 ], [ %242, %241 ]
  %245 = getelementptr inbounds i32, ptr %229, i64 %223
  br label %250

246:                                              ; preds = %225
  %247 = landingpad { ptr, i32 }
          cleanup
  br label %398

248:                                              ; preds = %214
  %249 = landingpad { ptr, i32 }
          cleanup
  br label %398

250:                                              ; preds = %207, %243, %133
  %251 = phi ptr [ %138, %133 ], [ %89, %243 ], [ %89, %207 ]
  %252 = phi ptr [ %134, %133 ], [ %245, %243 ], [ %88, %207 ]
  %253 = phi ptr [ %135, %133 ], [ %244, %243 ], [ %208, %207 ]
  %254 = phi ptr [ %136, %133 ], [ %229, %243 ], [ %86, %207 ]
  %255 = phi i32 [ %137, %133 ], [ %85, %243 ], [ %85, %207 ]
  %256 = add nuw i32 %84, 1
  %257 = icmp eq i32 %256, %17
  br i1 %257, label %258, label %83

258:                                              ; preds = %250, %194, %73, %24, %26, %141, %27
  %259 = phi ptr [ %18, %27 ], [ %18, %141 ], [ %18, %26 ], [ %25, %24 ], [ %18, %73 ], [ %18, %194 ], [ %18, %250 ]
  %260 = phi ptr [ %15, %27 ], [ %136, %141 ], [ %15, %26 ], [ null, %24 ], [ %76, %73 ], [ %197, %194 ], [ %254, %250 ]
  %261 = load i32, ptr %4, align 8, !tbaa !61
  %262 = zext i32 %261 to i64
  %263 = load ptr, ptr %5, align 8, !tbaa !58
  %264 = getelementptr inbounds i32, ptr %263, i64 %262
  %265 = load i32, ptr %264, align 4, !tbaa !22
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %278, label %267

267:                                              ; preds = %258
  %268 = load ptr, ptr %259, align 8, !tbaa !21
  %269 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %270 = load i32, ptr %269, align 8
  %271 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %272 = load ptr, ptr %271, align 8
  %273 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %274 = load ptr, ptr %273, align 8
  %275 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %276 = load ptr, ptr %275, align 8
  %277 = zext i32 %265 to i64
  br label %282

278:                                              ; preds = %394, %258
  %279 = icmp eq ptr %260, null
  br i1 %279, label %281, label %280

280:                                              ; preds = %278
  tail call void @_ZdlPv(ptr noundef nonnull %260) #23
  br label %281

281:                                              ; preds = %278, %280
  ret void

282:                                              ; preds = %267, %394
  %283 = phi i64 [ 0, %267 ], [ %396, %394 ]
  %284 = phi ptr [ %268, %267 ], [ %395, %394 ]
  %285 = getelementptr inbounds i32, ptr %260, i64 %283
  %286 = load i32, ptr %285, align 4, !tbaa !22
  %287 = icmp eq i32 %286, -1
  br i1 %287, label %319, label %288

288:                                              ; preds = %282, %288
  %289 = phi i32 [ %290, %288 ], [ %270, %282 ]
  %290 = add i32 %289, -1
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds i32, ptr %272, i64 %291
  %293 = load i32, ptr %292, align 4, !tbaa !22
  %294 = icmp ugt i32 %293, %286
  br i1 %294, label %288, label %295

295:                                              ; preds = %288
  %296 = sub i32 %286, %293
  %297 = zext i32 %296 to i64
  %298 = zext i32 %290 to i64
  %299 = getelementptr inbounds %"class.dealii::Vector.35", ptr %274, i64 %298, i32 3
  %300 = load ptr, ptr %299, align 8, !tbaa !60
  %301 = getelementptr inbounds double, ptr %300, i64 %297
  %302 = load double, ptr %301, align 8, !tbaa !52
  br label %303

303:                                              ; preds = %303, %295
  %304 = phi i32 [ %261, %295 ], [ %305, %303 ]
  %305 = add i32 %304, -1
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds i32, ptr %263, i64 %306
  %308 = load i32, ptr %307, align 4, !tbaa !22
  %309 = zext i32 %308 to i64
  %310 = icmp ult i64 %283, %309
  br i1 %310, label %303, label %311

311:                                              ; preds = %303
  %312 = trunc i64 %283 to i32
  %313 = sub i32 %312, %308
  %314 = zext i32 %313 to i64
  %315 = zext i32 %305 to i64
  %316 = getelementptr inbounds %"class.dealii::Vector.35", ptr %276, i64 %315, i32 3
  %317 = load ptr, ptr %316, align 8, !tbaa !60
  %318 = getelementptr inbounds double, ptr %317, i64 %314
  store double %302, ptr %318, align 8, !tbaa !52
  br label %394

319:                                              ; preds = %282
  %320 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 0, i32 2
  %321 = load double, ptr %320, align 8, !tbaa !48
  br label %322

322:                                              ; preds = %322, %319
  %323 = phi i32 [ %261, %319 ], [ %324, %322 ]
  %324 = add i32 %323, -1
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i32, ptr %263, i64 %325
  %327 = load i32, ptr %326, align 4, !tbaa !22
  %328 = zext i32 %327 to i64
  %329 = icmp ult i64 %283, %328
  br i1 %329, label %322, label %330

330:                                              ; preds = %322
  %331 = trunc i64 %283 to i32
  %332 = sub i32 %331, %327
  %333 = zext i32 %332 to i64
  %334 = zext i32 %324 to i64
  %335 = getelementptr inbounds %"class.dealii::Vector.35", ptr %276, i64 %334, i32 3
  %336 = load ptr, ptr %335, align 8, !tbaa !60
  %337 = getelementptr inbounds double, ptr %336, i64 %333
  store double %321, ptr %337, align 8, !tbaa !52
  %338 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 0, i32 1
  %339 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %340 = load ptr, ptr %339, align 8, !tbaa !31
  %341 = load ptr, ptr %338, align 8, !tbaa !32
  %342 = ptrtoint ptr %340 to i64
  %343 = ptrtoint ptr %341 to i64
  %344 = sub i64 %342, %343
  %345 = ashr exact i64 %344, 4
  %346 = icmp eq ptr %340, %341
  br i1 %346, label %347, label %349

347:                                              ; preds = %382, %330
  %348 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 1
  br label %394

349:                                              ; preds = %330, %382
  %350 = phi i64 [ %392, %382 ], [ 0, %330 ]
  %351 = phi i32 [ %391, %382 ], [ 0, %330 ]
  %352 = getelementptr inbounds %"struct.std::pair", ptr %341, i64 %350
  %353 = load i32, ptr %352, align 8, !tbaa !37
  %354 = zext i32 %353 to i64
  %355 = getelementptr inbounds i32, ptr %260, i64 %354
  %356 = load i32, ptr %355, align 4, !tbaa !22
  br label %357

357:                                              ; preds = %357, %349
  %358 = phi i32 [ %270, %349 ], [ %359, %357 ]
  %359 = add i32 %358, -1
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds i32, ptr %272, i64 %360
  %362 = load i32, ptr %361, align 4, !tbaa !22
  %363 = icmp ugt i32 %362, %356
  br i1 %363, label %357, label %364

364:                                              ; preds = %357
  %365 = sub i32 %356, %362
  %366 = zext i32 %365 to i64
  %367 = zext i32 %359 to i64
  %368 = getelementptr inbounds %"class.dealii::Vector.35", ptr %274, i64 %367, i32 3
  %369 = load ptr, ptr %368, align 8, !tbaa !60
  %370 = getelementptr inbounds double, ptr %369, i64 %366
  %371 = load double, ptr %370, align 8, !tbaa !52
  %372 = getelementptr inbounds %"struct.std::pair", ptr %341, i64 %350, i32 1
  %373 = load double, ptr %372, align 8, !tbaa !35
  br label %374

374:                                              ; preds = %374, %364
  %375 = phi i32 [ %261, %364 ], [ %376, %374 ]
  %376 = add i32 %375, -1
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds i32, ptr %263, i64 %377
  %379 = load i32, ptr %378, align 4, !tbaa !22
  %380 = zext i32 %379 to i64
  %381 = icmp ult i64 %283, %380
  br i1 %381, label %374, label %382

382:                                              ; preds = %374
  %383 = sub i32 %331, %379
  %384 = zext i32 %383 to i64
  %385 = zext i32 %376 to i64
  %386 = getelementptr inbounds %"class.dealii::Vector.35", ptr %276, i64 %385, i32 3
  %387 = load ptr, ptr %386, align 8, !tbaa !60
  %388 = getelementptr inbounds double, ptr %387, i64 %384
  %389 = load double, ptr %388, align 8, !tbaa !52
  %390 = tail call double @llvm.fmuladd.f64(double %371, double %373, double %389)
  store double %390, ptr %388, align 8, !tbaa !52
  %391 = add i32 %351, 1
  %392 = zext i32 %391 to i64
  %393 = icmp ugt i64 %345, %392
  br i1 %393, label %349, label %347

394:                                              ; preds = %311, %347
  %395 = phi ptr [ %348, %347 ], [ %284, %311 ]
  %396 = add nuw nsw i64 %283, 1
  %397 = icmp eq i64 %396, %277
  br i1 %397, label %278, label %282

398:                                              ; preds = %246, %248, %200, %202, %144, %146, %79, %81
  %399 = phi ptr [ %30, %79 ], [ %30, %81 ], [ %86, %144 ], [ %86, %146 ], [ %150, %200 ], [ %150, %202 ], [ %86, %246 ], [ %86, %248 ]
  %400 = phi { ptr, i32 } [ %80, %79 ], [ %82, %81 ], [ %145, %144 ], [ %147, %146 ], [ %201, %200 ], [ %203, %202 ], [ %247, %246 ], [ %249, %248 ]
  %401 = icmp eq ptr %399, null
  br i1 %401, label %403, label %402

402:                                              ; preds = %398
  tail call void @_ZdlPv(ptr noundef nonnull %399) #23
  br label %403

403:                                              ; preds = %402, %398
  resume { ptr, i32 } %400
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix10distributeINS_11BlockVectorIdEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %74, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2
  %10 = load i32, ptr %9, align 8
  %11 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 2, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %1, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8
  br label %15

15:                                               ; preds = %8, %38
  %16 = phi ptr [ %4, %8 ], [ %45, %38 ]
  %17 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 0, i32 2
  %18 = load double, ptr %17, align 8, !tbaa !48
  %19 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !31
  %22 = load ptr, ptr %19, align 8, !tbaa !32
  %23 = ptrtoint ptr %21 to i64
  %24 = ptrtoint ptr %22 to i64
  %25 = sub i64 %23, %24
  %26 = ashr exact i64 %25, 4
  %27 = icmp eq ptr %21, %22
  br i1 %27, label %28, label %47

28:                                               ; preds = %60, %15
  %29 = phi double [ %18, %15 ], [ %70, %60 ]
  %30 = load i32, ptr %16, align 8, !tbaa !24
  br label %31

31:                                               ; preds = %31, %28
  %32 = phi i32 [ %10, %28 ], [ %33, %31 ]
  %33 = add i32 %32, -1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, ptr %12, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !22
  %37 = icmp ugt i32 %36, %30
  br i1 %37, label %31, label %38

38:                                               ; preds = %31
  %39 = sub i32 %30, %36
  %40 = zext i32 %39 to i64
  %41 = zext i32 %33 to i64
  %42 = getelementptr inbounds %"class.dealii::Vector.35", ptr %14, i64 %41, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !60
  %44 = getelementptr inbounds double, ptr %43, i64 %40
  store double %29, ptr %44, align 8, !tbaa !52
  %45 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 1
  %46 = icmp eq ptr %45, %6
  br i1 %46, label %74, label %15

47:                                               ; preds = %15, %60
  %48 = phi i64 [ %72, %60 ], [ 0, %15 ]
  %49 = phi i32 [ %71, %60 ], [ 0, %15 ]
  %50 = phi double [ %70, %60 ], [ %18, %15 ]
  %51 = getelementptr inbounds %"struct.std::pair", ptr %22, i64 %48
  %52 = load i32, ptr %51, align 8, !tbaa !37
  br label %53

53:                                               ; preds = %53, %47
  %54 = phi i32 [ %10, %47 ], [ %55, %53 ]
  %55 = add i32 %54, -1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i32, ptr %12, i64 %56
  %58 = load i32, ptr %57, align 4, !tbaa !22
  %59 = icmp ugt i32 %58, %52
  br i1 %59, label %53, label %60

60:                                               ; preds = %53
  %61 = sub i32 %52, %58
  %62 = zext i32 %61 to i64
  %63 = zext i32 %55 to i64
  %64 = getelementptr inbounds %"class.dealii::Vector.35", ptr %14, i64 %63, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !60
  %66 = getelementptr inbounds double, ptr %65, i64 %62
  %67 = load double, ptr %66, align 8, !tbaa !52
  %68 = getelementptr inbounds %"struct.std::pair", ptr %22, i64 %48, i32 1
  %69 = load double, ptr %68, align 8, !tbaa !35
  %70 = tail call double @llvm.fmuladd.f64(double %67, double %69, double %50)
  %71 = add i32 %49, 1
  %72 = zext i32 %71 to i64
  %73 = icmp ugt i64 %26, %72
  br i1 %73, label %47, label %28

74:                                               ; preds = %38, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseINS_11BlockVectorIfEEEEvRKT_RS4_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 2
  %5 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 2, i32 1
  %6 = load i32, ptr %4, align 8, !tbaa !61
  %7 = zext i32 %6 to i64
  %8 = load ptr, ptr %5, align 8, !tbaa !58
  %9 = getelementptr inbounds i32, ptr %8, i64 %7
  %10 = load i32, ptr %9, align 4, !tbaa !22
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %3
  %13 = zext i32 %10 to i64
  %14 = shl nuw nsw i64 %13, 2
  %15 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %14) #21
  %16 = getelementptr inbounds i32, ptr %15, i64 %13
  %17 = load i32, ptr %9, align 4, !tbaa !22
  %18 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !21
  %20 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !21
  %22 = icmp eq ptr %19, %21
  %23 = icmp eq i32 %17, 0
  br i1 %22, label %27, label %26

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %258

26:                                               ; preds = %12
  br i1 %23, label %258, label %83

27:                                               ; preds = %12
  br i1 %23, label %258, label %28

28:                                               ; preds = %27, %73
  %29 = phi i32 [ %77, %73 ], [ 0, %27 ]
  %30 = phi ptr [ %76, %73 ], [ %15, %27 ]
  %31 = phi ptr [ %75, %73 ], [ %15, %27 ]
  %32 = phi ptr [ %74, %73 ], [ %16, %27 ]
  %33 = icmp eq ptr %31, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  store i32 %29, ptr %31, align 4, !tbaa !22
  %35 = getelementptr inbounds i32, ptr %31, i64 1
  br label %73

36:                                               ; preds = %28
  %37 = ptrtoint ptr %31 to i64
  %38 = ptrtoint ptr %30 to i64
  %39 = sub i64 %37, %38
  %40 = icmp eq i64 %39, 9223372036854775804
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %42 unwind label %81

42:                                               ; preds = %41
  unreachable

43:                                               ; preds = %36
  %44 = ashr exact i64 %39, 2
  %45 = tail call i64 @llvm.umax.i64(i64 %44, i64 1)
  %46 = add i64 %45, %44
  %47 = icmp ult i64 %46, %44
  %48 = icmp ugt i64 %46, 2305843009213693951
  %49 = or i1 %47, %48
  %50 = select i1 %49, i64 2305843009213693951, i64 %46
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = shl nuw nsw i64 %50, 2
  %54 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %53) #21
          to label %55 unwind label %79

55:                                               ; preds = %52, %43
  %56 = phi ptr [ null, %43 ], [ %54, %52 ]
  %57 = getelementptr inbounds i32, ptr %56, i64 %44
  store i32 %29, ptr %57, align 4, !tbaa !22
  %58 = icmp sgt i64 %39, 4
  br i1 %58, label %59, label %60, !prof !23

59:                                               ; preds = %55
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %56, ptr align 4 %30, i64 %39, i1 false)
  br label %65

60:                                               ; preds = %55
  %61 = icmp eq i64 %39, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %60
  %63 = load i32, ptr %30, align 4, !tbaa !22
  store i32 %63, ptr %56, align 4, !tbaa !22
  %64 = getelementptr inbounds i32, ptr %57, i64 1
  br label %68

65:                                               ; preds = %60, %59
  %66 = getelementptr inbounds i32, ptr %57, i64 1
  %67 = icmp eq ptr %30, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %62, %65
  %69 = phi ptr [ %64, %62 ], [ %66, %65 ]
  tail call void @_ZdlPv(ptr noundef nonnull %30) #23
  br label %70

70:                                               ; preds = %68, %65
  %71 = phi ptr [ %66, %65 ], [ %69, %68 ]
  %72 = getelementptr inbounds i32, ptr %56, i64 %50
  br label %73

73:                                               ; preds = %70, %34
  %74 = phi ptr [ %72, %70 ], [ %32, %34 ]
  %75 = phi ptr [ %71, %70 ], [ %35, %34 ]
  %76 = phi ptr [ %56, %70 ], [ %30, %34 ]
  %77 = add nuw i32 %29, 1
  %78 = icmp eq i32 %77, %17
  br i1 %78, label %258, label %28

79:                                               ; preds = %52
  %80 = landingpad { ptr, i32 }
          cleanup
  br label %387

81:                                               ; preds = %41
  %82 = landingpad { ptr, i32 }
          cleanup
  br label %387

83:                                               ; preds = %26, %250
  %84 = phi i32 [ %256, %250 ], [ 0, %26 ]
  %85 = phi i32 [ %255, %250 ], [ 0, %26 ]
  %86 = phi ptr [ %254, %250 ], [ %15, %26 ]
  %87 = phi ptr [ %253, %250 ], [ %15, %26 ]
  %88 = phi ptr [ %252, %250 ], [ %16, %26 ]
  %89 = phi ptr [ %251, %250 ], [ %19, %26 ]
  %90 = load i32, ptr %89, align 8, !tbaa !24
  %91 = icmp eq i32 %84, %90
  br i1 %91, label %92, label %204

92:                                               ; preds = %83
  %93 = icmp eq ptr %87, %88
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  store i32 -1, ptr %87, align 4, !tbaa !22
  %95 = getelementptr inbounds i32, ptr %87, i64 1
  br label %133

96:                                               ; preds = %92
  %97 = ptrtoint ptr %87 to i64
  %98 = ptrtoint ptr %86 to i64
  %99 = sub i64 %97, %98
  %100 = icmp eq i64 %99, 9223372036854775804
  br i1 %100, label %101, label %103

101:                                              ; preds = %96
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %102 unwind label %146

102:                                              ; preds = %101
  unreachable

103:                                              ; preds = %96
  %104 = ashr exact i64 %99, 2
  %105 = tail call i64 @llvm.umax.i64(i64 %104, i64 1)
  %106 = add i64 %105, %104
  %107 = icmp ult i64 %106, %104
  %108 = icmp ugt i64 %106, 2305843009213693951
  %109 = or i1 %107, %108
  %110 = select i1 %109, i64 2305843009213693951, i64 %106
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %103
  %113 = shl nuw nsw i64 %110, 2
  %114 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %113) #21
          to label %115 unwind label %144

115:                                              ; preds = %112, %103
  %116 = phi ptr [ null, %103 ], [ %114, %112 ]
  %117 = getelementptr inbounds i32, ptr %116, i64 %104
  store i32 -1, ptr %117, align 4, !tbaa !22
  %118 = icmp sgt i64 %99, 4
  br i1 %118, label %119, label %120, !prof !23

119:                                              ; preds = %115
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %116, ptr align 4 %86, i64 %99, i1 false)
  br label %125

120:                                              ; preds = %115
  %121 = icmp eq i64 %99, 4
  br i1 %121, label %122, label %125

122:                                              ; preds = %120
  %123 = load i32, ptr %86, align 4, !tbaa !22
  store i32 %123, ptr %116, align 4, !tbaa !22
  %124 = getelementptr inbounds i32, ptr %117, i64 1
  br label %128

125:                                              ; preds = %120, %119
  %126 = getelementptr inbounds i32, ptr %117, i64 1
  %127 = icmp eq ptr %86, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %122, %125
  %129 = phi ptr [ %124, %122 ], [ %126, %125 ]
  tail call void @_ZdlPv(ptr noundef nonnull %86) #23
  br label %130

130:                                              ; preds = %128, %125
  %131 = phi ptr [ %126, %125 ], [ %129, %128 ]
  %132 = getelementptr inbounds i32, ptr %116, i64 %110
  br label %133

133:                                              ; preds = %94, %130
  %134 = phi ptr [ %132, %130 ], [ %88, %94 ]
  %135 = phi ptr [ %131, %130 ], [ %95, %94 ]
  %136 = phi ptr [ %116, %130 ], [ %86, %94 ]
  %137 = add i32 %85, 1
  %138 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %89, i64 1
  %139 = load ptr, ptr %20, align 8, !tbaa !21
  %140 = icmp eq ptr %138, %139
  br i1 %140, label %141, label %250

141:                                              ; preds = %133
  %142 = add i32 %84, 1
  %143 = icmp ult i32 %142, %17
  br i1 %143, label %148, label %258

144:                                              ; preds = %112
  %145 = landingpad { ptr, i32 }
          cleanup
  br label %387

146:                                              ; preds = %101
  %147 = landingpad { ptr, i32 }
          cleanup
  br label %387

148:                                              ; preds = %141, %194
  %149 = phi i32 [ %198, %194 ], [ %142, %141 ]
  %150 = phi ptr [ %197, %194 ], [ %136, %141 ]
  %151 = phi ptr [ %196, %194 ], [ %135, %141 ]
  %152 = phi ptr [ %195, %194 ], [ %134, %141 ]
  %153 = sub i32 %149, %137
  %154 = icmp eq ptr %151, %152
  br i1 %154, label %157, label %155

155:                                              ; preds = %148
  store i32 %153, ptr %151, align 4, !tbaa !22
  %156 = getelementptr inbounds i32, ptr %151, i64 1
  br label %194

157:                                              ; preds = %148
  %158 = ptrtoint ptr %151 to i64
  %159 = ptrtoint ptr %150 to i64
  %160 = sub i64 %158, %159
  %161 = icmp eq i64 %160, 9223372036854775804
  br i1 %161, label %162, label %164

162:                                              ; preds = %157
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %163 unwind label %202

163:                                              ; preds = %162
  unreachable

164:                                              ; preds = %157
  %165 = ashr exact i64 %160, 2
  %166 = tail call i64 @llvm.umax.i64(i64 %165, i64 1)
  %167 = add i64 %166, %165
  %168 = icmp ult i64 %167, %165
  %169 = icmp ugt i64 %167, 2305843009213693951
  %170 = or i1 %168, %169
  %171 = select i1 %170, i64 2305843009213693951, i64 %167
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %176, label %173

173:                                              ; preds = %164
  %174 = shl nuw nsw i64 %171, 2
  %175 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %174) #21
          to label %176 unwind label %200

176:                                              ; preds = %173, %164
  %177 = phi ptr [ null, %164 ], [ %175, %173 ]
  %178 = getelementptr inbounds i32, ptr %177, i64 %165
  store i32 %153, ptr %178, align 4, !tbaa !22
  %179 = icmp sgt i64 %160, 4
  br i1 %179, label %180, label %181, !prof !23

180:                                              ; preds = %176
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %177, ptr align 4 %150, i64 %160, i1 false)
  br label %186

181:                                              ; preds = %176
  %182 = icmp eq i64 %160, 4
  br i1 %182, label %183, label %186

183:                                              ; preds = %181
  %184 = load i32, ptr %150, align 4, !tbaa !22
  store i32 %184, ptr %177, align 4, !tbaa !22
  %185 = getelementptr inbounds i32, ptr %178, i64 1
  br label %189

186:                                              ; preds = %181, %180
  %187 = getelementptr inbounds i32, ptr %178, i64 1
  %188 = icmp eq ptr %150, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %183, %186
  %190 = phi ptr [ %185, %183 ], [ %187, %186 ]
  tail call void @_ZdlPv(ptr noundef nonnull %150) #23
  br label %191

191:                                              ; preds = %189, %186
  %192 = phi ptr [ %187, %186 ], [ %190, %189 ]
  %193 = getelementptr inbounds i32, ptr %177, i64 %171
  br label %194

194:                                              ; preds = %191, %155
  %195 = phi ptr [ %193, %191 ], [ %152, %155 ]
  %196 = phi ptr [ %192, %191 ], [ %156, %155 ]
  %197 = phi ptr [ %177, %191 ], [ %150, %155 ]
  %198 = add nuw i32 %149, 1
  %199 = icmp eq i32 %198, %17
  br i1 %199, label %258, label %148

200:                                              ; preds = %173
  %201 = landingpad { ptr, i32 }
          cleanup
  br label %387

202:                                              ; preds = %162
  %203 = landingpad { ptr, i32 }
          cleanup
  br label %387

204:                                              ; preds = %83
  %205 = sub i32 %84, %85
  %206 = icmp eq ptr %87, %88
  br i1 %206, label %209, label %207

207:                                              ; preds = %204
  store i32 %205, ptr %87, align 4, !tbaa !22
  %208 = getelementptr inbounds i32, ptr %87, i64 1
  br label %250

209:                                              ; preds = %204
  %210 = ptrtoint ptr %87 to i64
  %211 = ptrtoint ptr %86 to i64
  %212 = sub i64 %210, %211
  %213 = icmp eq i64 %212, 9223372036854775804
  br i1 %213, label %214, label %216

214:                                              ; preds = %209
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %215 unwind label %248

215:                                              ; preds = %214
  unreachable

216:                                              ; preds = %209
  %217 = ashr exact i64 %212, 2
  %218 = tail call i64 @llvm.umax.i64(i64 %217, i64 1)
  %219 = add i64 %218, %217
  %220 = icmp ult i64 %219, %217
  %221 = icmp ugt i64 %219, 2305843009213693951
  %222 = or i1 %220, %221
  %223 = select i1 %222, i64 2305843009213693951, i64 %219
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %228, label %225

225:                                              ; preds = %216
  %226 = shl nuw nsw i64 %223, 2
  %227 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %226) #21
          to label %228 unwind label %246

228:                                              ; preds = %225, %216
  %229 = phi ptr [ null, %216 ], [ %227, %225 ]
  %230 = getelementptr inbounds i32, ptr %229, i64 %217
  store i32 %205, ptr %230, align 4, !tbaa !22
  %231 = icmp sgt i64 %212, 4
  br i1 %231, label %232, label %233, !prof !23

232:                                              ; preds = %228
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %229, ptr align 4 %86, i64 %212, i1 false)
  br label %238

233:                                              ; preds = %228
  %234 = icmp eq i64 %212, 4
  br i1 %234, label %235, label %238

235:                                              ; preds = %233
  %236 = load i32, ptr %86, align 4, !tbaa !22
  store i32 %236, ptr %229, align 4, !tbaa !22
  %237 = getelementptr inbounds i32, ptr %230, i64 1
  br label %241

238:                                              ; preds = %233, %232
  %239 = getelementptr inbounds i32, ptr %230, i64 1
  %240 = icmp eq ptr %86, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %235, %238
  %242 = phi ptr [ %237, %235 ], [ %239, %238 ]
  tail call void @_ZdlPv(ptr noundef nonnull %86) #23
  br label %243

243:                                              ; preds = %241, %238
  %244 = phi ptr [ %239, %238 ], [ %242, %241 ]
  %245 = getelementptr inbounds i32, ptr %229, i64 %223
  br label %250

246:                                              ; preds = %225
  %247 = landingpad { ptr, i32 }
          cleanup
  br label %387

248:                                              ; preds = %214
  %249 = landingpad { ptr, i32 }
          cleanup
  br label %387

250:                                              ; preds = %207, %243, %133
  %251 = phi ptr [ %138, %133 ], [ %89, %243 ], [ %89, %207 ]
  %252 = phi ptr [ %134, %133 ], [ %245, %243 ], [ %88, %207 ]
  %253 = phi ptr [ %135, %133 ], [ %244, %243 ], [ %208, %207 ]
  %254 = phi ptr [ %136, %133 ], [ %229, %243 ], [ %86, %207 ]
  %255 = phi i32 [ %137, %133 ], [ %85, %243 ], [ %85, %207 ]
  %256 = add nuw i32 %84, 1
  %257 = icmp eq i32 %256, %17
  br i1 %257, label %258, label %83

258:                                              ; preds = %250, %194, %73, %24, %26, %141, %27
  %259 = phi ptr [ %18, %27 ], [ %18, %141 ], [ %18, %26 ], [ %25, %24 ], [ %18, %73 ], [ %18, %194 ], [ %18, %250 ]
  %260 = phi ptr [ %15, %27 ], [ %136, %141 ], [ %15, %26 ], [ null, %24 ], [ %76, %73 ], [ %197, %194 ], [ %254, %250 ]
  %261 = load i32, ptr %4, align 8, !tbaa !61
  %262 = zext i32 %261 to i64
  %263 = load ptr, ptr %5, align 8, !tbaa !58
  %264 = getelementptr inbounds i32, ptr %263, i64 %262
  %265 = load i32, ptr %264, align 4, !tbaa !22
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %278, label %267

267:                                              ; preds = %258
  %268 = load ptr, ptr %259, align 8, !tbaa !21
  %269 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 1
  %270 = load ptr, ptr %269, align 8
  %271 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 2
  %272 = load i32, ptr %271, align 8
  %273 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 2, i32 1
  %274 = load ptr, ptr %273, align 8
  %275 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 1
  %276 = load ptr, ptr %275, align 8
  %277 = zext i32 %265 to i64
  br label %282

278:                                              ; preds = %383, %258
  %279 = icmp eq ptr %260, null
  br i1 %279, label %281, label %280

280:                                              ; preds = %278
  tail call void @_ZdlPv(ptr noundef nonnull %260) #23
  br label %281

281:                                              ; preds = %278, %280
  ret void

282:                                              ; preds = %267, %383
  %283 = phi i64 [ 0, %267 ], [ %385, %383 ]
  %284 = phi ptr [ %268, %267 ], [ %384, %383 ]
  %285 = getelementptr inbounds i32, ptr %260, i64 %283
  %286 = load i32, ptr %285, align 4, !tbaa !22
  %287 = icmp eq i32 %286, -1
  br i1 %287, label %288, label %300

288:                                              ; preds = %282
  %289 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 0, i32 1
  %290 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %291 = load ptr, ptr %290, align 8, !tbaa !31
  %292 = load ptr, ptr %289, align 8, !tbaa !32
  %293 = ptrtoint ptr %291 to i64
  %294 = ptrtoint ptr %292 to i64
  %295 = sub i64 %293, %294
  %296 = ashr exact i64 %295, 4
  %297 = icmp eq ptr %291, %292
  br i1 %297, label %336, label %298

298:                                              ; preds = %288
  %299 = trunc i64 %283 to i32
  br label %333

300:                                              ; preds = %282, %300
  %301 = phi i32 [ %302, %300 ], [ %261, %282 ]
  %302 = add i32 %301, -1
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i32, ptr %263, i64 %303
  %305 = load i32, ptr %304, align 4, !tbaa !22
  %306 = zext i32 %305 to i64
  %307 = icmp ult i64 %283, %306
  br i1 %307, label %300, label %308

308:                                              ; preds = %300
  %309 = trunc i64 %283 to i32
  %310 = sub i32 %309, %305
  %311 = zext i32 %310 to i64
  %312 = zext i32 %302 to i64
  %313 = getelementptr inbounds %"class.dealii::Vector", ptr %270, i64 %312, i32 3
  %314 = load ptr, ptr %313, align 8, !tbaa !49
  %315 = getelementptr inbounds float, ptr %314, i64 %311
  %316 = load float, ptr %315, align 4, !tbaa !33
  br label %317

317:                                              ; preds = %317, %308
  %318 = phi i32 [ %272, %308 ], [ %319, %317 ]
  %319 = add i32 %318, -1
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i32, ptr %274, i64 %320
  %322 = load i32, ptr %321, align 4, !tbaa !22
  %323 = icmp ugt i32 %322, %286
  br i1 %323, label %317, label %324

324:                                              ; preds = %317
  %325 = sub i32 %286, %322
  %326 = zext i32 %325 to i64
  %327 = zext i32 %319 to i64
  %328 = getelementptr inbounds %"class.dealii::Vector", ptr %276, i64 %327, i32 3
  %329 = load ptr, ptr %328, align 8, !tbaa !49
  %330 = getelementptr inbounds float, ptr %329, i64 %326
  %331 = load float, ptr %330, align 4, !tbaa !33
  %332 = fadd float %316, %331
  store float %332, ptr %330, align 4, !tbaa !33
  br label %383

333:                                              ; preds = %298, %368
  %334 = phi i64 [ %381, %368 ], [ 0, %298 ]
  %335 = phi i32 [ %380, %368 ], [ 0, %298 ]
  br label %338

336:                                              ; preds = %368, %288
  %337 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 1
  br label %383

338:                                              ; preds = %333, %338
  %339 = phi i32 [ %340, %338 ], [ %261, %333 ]
  %340 = add i32 %339, -1
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds i32, ptr %263, i64 %341
  %343 = load i32, ptr %342, align 4, !tbaa !22
  %344 = zext i32 %343 to i64
  %345 = icmp ult i64 %283, %344
  br i1 %345, label %338, label %346

346:                                              ; preds = %338
  %347 = sub i32 %299, %343
  %348 = zext i32 %347 to i64
  %349 = zext i32 %340 to i64
  %350 = getelementptr inbounds %"class.dealii::Vector", ptr %270, i64 %349, i32 3
  %351 = load ptr, ptr %350, align 8, !tbaa !49
  %352 = getelementptr inbounds float, ptr %351, i64 %348
  %353 = load float, ptr %352, align 4, !tbaa !33
  %354 = getelementptr inbounds %"struct.std::pair", ptr %292, i64 %334
  %355 = getelementptr inbounds %"struct.std::pair", ptr %292, i64 %334, i32 1
  %356 = load double, ptr %355, align 8, !tbaa !35
  %357 = load i32, ptr %354, align 8, !tbaa !37
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds i32, ptr %260, i64 %358
  %360 = load i32, ptr %359, align 4, !tbaa !22
  br label %361

361:                                              ; preds = %361, %346
  %362 = phi i32 [ %272, %346 ], [ %363, %361 ]
  %363 = add i32 %362, -1
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds i32, ptr %274, i64 %364
  %366 = load i32, ptr %365, align 4, !tbaa !22
  %367 = icmp ugt i32 %366, %360
  br i1 %367, label %361, label %368

368:                                              ; preds = %361
  %369 = sub i32 %360, %366
  %370 = zext i32 %369 to i64
  %371 = zext i32 %363 to i64
  %372 = getelementptr inbounds %"class.dealii::Vector", ptr %276, i64 %371, i32 3
  %373 = load ptr, ptr %372, align 8, !tbaa !49
  %374 = getelementptr inbounds float, ptr %373, i64 %370
  %375 = fpext float %353 to double
  %376 = load float, ptr %374, align 4, !tbaa !33
  %377 = fpext float %376 to double
  %378 = tail call double @llvm.fmuladd.f64(double %375, double %356, double %377)
  %379 = fptrunc double %378 to float
  store float %379, ptr %374, align 4, !tbaa !33
  %380 = add i32 %335, 1
  %381 = zext i32 %380 to i64
  %382 = icmp eq i64 %296, %381
  br i1 %382, label %336, label %333

383:                                              ; preds = %324, %336
  %384 = phi ptr [ %337, %336 ], [ %284, %324 ]
  %385 = add nuw nsw i64 %283, 1
  %386 = icmp eq i64 %385, %277
  br i1 %386, label %278, label %282

387:                                              ; preds = %246, %248, %200, %202, %144, %146, %79, %81
  %388 = phi ptr [ %30, %79 ], [ %30, %81 ], [ %86, %144 ], [ %86, %146 ], [ %150, %200 ], [ %150, %202 ], [ %86, %246 ], [ %86, %248 ]
  %389 = phi { ptr, i32 } [ %80, %79 ], [ %82, %81 ], [ %145, %144 ], [ %147, %146 ], [ %201, %200 ], [ %203, %202 ], [ %247, %246 ], [ %249, %248 ]
  %390 = icmp eq ptr %388, null
  br i1 %390, label %392, label %391

391:                                              ; preds = %387
  tail call void @_ZdlPv(ptr noundef nonnull %388) #23
  br label %392

392:                                              ; preds = %391, %387
  resume { ptr, i32 } %389
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseINS_11BlockVectorIfEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %88, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 2
  %10 = load i32, ptr %9, align 8
  %11 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 2, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8
  br label %15

15:                                               ; preds = %8, %35
  %16 = phi ptr [ %4, %8 ], [ %42, %35 ]
  %17 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !31
  %20 = load ptr, ptr %17, align 8, !tbaa !32
  %21 = ptrtoint ptr %19 to i64
  %22 = ptrtoint ptr %20 to i64
  %23 = sub i64 %21, %22
  %24 = ashr exact i64 %23, 4
  %25 = icmp eq ptr %19, %20
  %26 = load i32, ptr %16, align 8, !tbaa !24
  br i1 %25, label %27, label %44

27:                                               ; preds = %73, %15
  br label %28

28:                                               ; preds = %27, %28
  %29 = phi i32 [ %30, %28 ], [ %10, %27 ]
  %30 = add i32 %29, -1
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i32, ptr %12, i64 %31
  %33 = load i32, ptr %32, align 4, !tbaa !22
  %34 = icmp ugt i32 %33, %26
  br i1 %34, label %28, label %35

35:                                               ; preds = %28
  %36 = sub i32 %26, %33
  %37 = zext i32 %36 to i64
  %38 = zext i32 %30 to i64
  %39 = getelementptr inbounds %"class.dealii::Vector", ptr %14, i64 %38, i32 3
  %40 = load ptr, ptr %39, align 8, !tbaa !49
  %41 = getelementptr inbounds float, ptr %40, i64 %37
  store float 0.000000e+00, ptr %41, align 4, !tbaa !33
  %42 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 1
  %43 = icmp eq ptr %42, %6
  br i1 %43, label %88, label %15

44:                                               ; preds = %15, %73
  %45 = phi i64 [ %86, %73 ], [ 0, %15 ]
  %46 = phi i32 [ %85, %73 ], [ 0, %15 ]
  br label %47

47:                                               ; preds = %47, %44
  %48 = phi i32 [ %10, %44 ], [ %49, %47 ]
  %49 = add i32 %48, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %12, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !22
  %53 = icmp ugt i32 %52, %26
  br i1 %53, label %47, label %54

54:                                               ; preds = %47
  %55 = sub i32 %26, %52
  %56 = zext i32 %55 to i64
  %57 = zext i32 %49 to i64
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %14, i64 %57, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !49
  %60 = getelementptr inbounds float, ptr %59, i64 %56
  %61 = load float, ptr %60, align 4, !tbaa !33
  %62 = getelementptr inbounds %"struct.std::pair", ptr %20, i64 %45
  %63 = getelementptr inbounds %"struct.std::pair", ptr %20, i64 %45, i32 1
  %64 = load double, ptr %63, align 8, !tbaa !35
  %65 = load i32, ptr %62, align 8, !tbaa !37
  br label %66

66:                                               ; preds = %66, %54
  %67 = phi i32 [ %10, %54 ], [ %68, %66 ]
  %68 = add i32 %67, -1
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, ptr %12, i64 %69
  %71 = load i32, ptr %70, align 4, !tbaa !22
  %72 = icmp ugt i32 %71, %65
  br i1 %72, label %66, label %73

73:                                               ; preds = %66
  %74 = fpext float %61 to double
  %75 = sub i32 %65, %71
  %76 = zext i32 %75 to i64
  %77 = zext i32 %68 to i64
  %78 = getelementptr inbounds %"class.dealii::Vector", ptr %14, i64 %77, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !49
  %80 = getelementptr inbounds float, ptr %79, i64 %76
  %81 = load float, ptr %80, align 4, !tbaa !33
  %82 = fpext float %81 to double
  %83 = tail call double @llvm.fmuladd.f64(double %74, double %64, double %82)
  %84 = fptrunc double %83 to float
  store float %84, ptr %80, align 4, !tbaa !33
  %85 = add i32 %46, 1
  %86 = zext i32 %85 to i64
  %87 = icmp eq i64 %24, %86
  br i1 %87, label %27, label %44

88:                                               ; preds = %35, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIfNS_11BlockVectorIfEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(128) %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 8 dereferenceable(128) %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 2
  %7 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 2, i32 1
  %8 = load i32, ptr %6, align 8, !tbaa !61
  %9 = zext i32 %8 to i64
  %10 = load ptr, ptr %7, align 8, !tbaa !58
  %11 = getelementptr inbounds i32, ptr %10, i64 %9
  %12 = load i32, ptr %11, align 4, !tbaa !22
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %4, i64 0, i32 2
  %16 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %4, i64 0, i32 2, i32 1
  %17 = load i32, ptr %15, align 8, !tbaa !61
  %18 = zext i32 %17 to i64
  %19 = load ptr, ptr %16, align 8, !tbaa !58
  %20 = getelementptr inbounds i32, ptr %19, i64 %18
  %21 = load i32, ptr %20, align 4, !tbaa !22
  %22 = icmp eq i32 %21, 0
  br label %23

23:                                               ; preds = %14, %5
  %24 = phi i1 [ false, %5 ], [ %22, %14 ]
  %25 = tail call noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
  %26 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !38
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %23
  %30 = zext i32 %27 to i64
  %31 = shl nuw nsw i64 %30, 2
  %32 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %31) #21
  %33 = getelementptr inbounds i32, ptr %32, i64 %30
  %34 = load i32, ptr %26, align 4, !tbaa !38
  %35 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !21
  %37 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !21
  %39 = icmp eq ptr %36, %38
  %40 = icmp eq i32 %34, 0
  br i1 %39, label %44, label %43

41:                                               ; preds = %23
  %42 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %275

43:                                               ; preds = %29
  br i1 %40, label %275, label %100

44:                                               ; preds = %29
  br i1 %40, label %275, label %45

45:                                               ; preds = %44, %90
  %46 = phi i32 [ %94, %90 ], [ 0, %44 ]
  %47 = phi ptr [ %93, %90 ], [ %32, %44 ]
  %48 = phi ptr [ %92, %90 ], [ %32, %44 ]
  %49 = phi ptr [ %91, %90 ], [ %33, %44 ]
  %50 = icmp eq ptr %48, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %45
  store i32 %46, ptr %48, align 4, !tbaa !22
  %52 = getelementptr inbounds i32, ptr %48, i64 1
  br label %90

53:                                               ; preds = %45
  %54 = ptrtoint ptr %48 to i64
  %55 = ptrtoint ptr %47 to i64
  %56 = sub i64 %54, %55
  %57 = icmp eq i64 %56, 9223372036854775804
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %59 unwind label %98

59:                                               ; preds = %58
  unreachable

60:                                               ; preds = %53
  %61 = ashr exact i64 %56, 2
  %62 = tail call i64 @llvm.umax.i64(i64 %61, i64 1)
  %63 = add i64 %62, %61
  %64 = icmp ult i64 %63, %61
  %65 = icmp ugt i64 %63, 2305843009213693951
  %66 = or i1 %64, %65
  %67 = select i1 %66, i64 2305843009213693951, i64 %63
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %60
  %70 = shl nuw nsw i64 %67, 2
  %71 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %70) #21
          to label %72 unwind label %96

72:                                               ; preds = %69, %60
  %73 = phi ptr [ null, %60 ], [ %71, %69 ]
  %74 = getelementptr inbounds i32, ptr %73, i64 %61
  store i32 %46, ptr %74, align 4, !tbaa !22
  %75 = icmp sgt i64 %56, 4
  br i1 %75, label %76, label %77, !prof !23

76:                                               ; preds = %72
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %73, ptr align 4 %47, i64 %56, i1 false)
  br label %82

77:                                               ; preds = %72
  %78 = icmp eq i64 %56, 4
  br i1 %78, label %79, label %82

79:                                               ; preds = %77
  %80 = load i32, ptr %47, align 4, !tbaa !22
  store i32 %80, ptr %73, align 4, !tbaa !22
  %81 = getelementptr inbounds i32, ptr %74, i64 1
  br label %85

82:                                               ; preds = %77, %76
  %83 = getelementptr inbounds i32, ptr %74, i64 1
  %84 = icmp eq ptr %47, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %79, %82
  %86 = phi ptr [ %81, %79 ], [ %83, %82 ]
  tail call void @_ZdlPv(ptr noundef nonnull %47) #23
  br label %87

87:                                               ; preds = %85, %82
  %88 = phi ptr [ %83, %82 ], [ %86, %85 ]
  %89 = getelementptr inbounds i32, ptr %73, i64 %67
  br label %90

90:                                               ; preds = %87, %51
  %91 = phi ptr [ %89, %87 ], [ %49, %51 ]
  %92 = phi ptr [ %88, %87 ], [ %52, %51 ]
  %93 = phi ptr [ %73, %87 ], [ %47, %51 ]
  %94 = add nuw i32 %46, 1
  %95 = icmp eq i32 %94, %34
  br i1 %95, label %275, label %45

96:                                               ; preds = %69
  %97 = landingpad { ptr, i32 }
          cleanup
  br label %764

98:                                               ; preds = %58
  %99 = landingpad { ptr, i32 }
          cleanup
  br label %764

100:                                              ; preds = %43, %267
  %101 = phi i32 [ %273, %267 ], [ 0, %43 ]
  %102 = phi i32 [ %272, %267 ], [ 0, %43 ]
  %103 = phi ptr [ %271, %267 ], [ %32, %43 ]
  %104 = phi ptr [ %270, %267 ], [ %32, %43 ]
  %105 = phi ptr [ %269, %267 ], [ %33, %43 ]
  %106 = phi ptr [ %268, %267 ], [ %36, %43 ]
  %107 = load i32, ptr %106, align 8, !tbaa !24
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %221

109:                                              ; preds = %100
  %110 = icmp eq ptr %104, %105
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  store i32 -1, ptr %104, align 4, !tbaa !22
  %112 = getelementptr inbounds i32, ptr %104, i64 1
  br label %150

113:                                              ; preds = %109
  %114 = ptrtoint ptr %104 to i64
  %115 = ptrtoint ptr %103 to i64
  %116 = sub i64 %114, %115
  %117 = icmp eq i64 %116, 9223372036854775804
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %119 unwind label %163

119:                                              ; preds = %118
  unreachable

120:                                              ; preds = %113
  %121 = ashr exact i64 %116, 2
  %122 = tail call i64 @llvm.umax.i64(i64 %121, i64 1)
  %123 = add i64 %122, %121
  %124 = icmp ult i64 %123, %121
  %125 = icmp ugt i64 %123, 2305843009213693951
  %126 = or i1 %124, %125
  %127 = select i1 %126, i64 2305843009213693951, i64 %123
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %120
  %130 = shl nuw nsw i64 %127, 2
  %131 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %130) #21
          to label %132 unwind label %161

132:                                              ; preds = %129, %120
  %133 = phi ptr [ null, %120 ], [ %131, %129 ]
  %134 = getelementptr inbounds i32, ptr %133, i64 %121
  store i32 -1, ptr %134, align 4, !tbaa !22
  %135 = icmp sgt i64 %116, 4
  br i1 %135, label %136, label %137, !prof !23

136:                                              ; preds = %132
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %133, ptr align 4 %103, i64 %116, i1 false)
  br label %142

137:                                              ; preds = %132
  %138 = icmp eq i64 %116, 4
  br i1 %138, label %139, label %142

139:                                              ; preds = %137
  %140 = load i32, ptr %103, align 4, !tbaa !22
  store i32 %140, ptr %133, align 4, !tbaa !22
  %141 = getelementptr inbounds i32, ptr %134, i64 1
  br label %145

142:                                              ; preds = %137, %136
  %143 = getelementptr inbounds i32, ptr %134, i64 1
  %144 = icmp eq ptr %103, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139, %142
  %146 = phi ptr [ %141, %139 ], [ %143, %142 ]
  tail call void @_ZdlPv(ptr noundef nonnull %103) #23
  br label %147

147:                                              ; preds = %145, %142
  %148 = phi ptr [ %143, %142 ], [ %146, %145 ]
  %149 = getelementptr inbounds i32, ptr %133, i64 %127
  br label %150

150:                                              ; preds = %111, %147
  %151 = phi ptr [ %149, %147 ], [ %105, %111 ]
  %152 = phi ptr [ %148, %147 ], [ %112, %111 ]
  %153 = phi ptr [ %133, %147 ], [ %103, %111 ]
  %154 = add i32 %102, 1
  %155 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %106, i64 1
  %156 = load ptr, ptr %37, align 8, !tbaa !21
  %157 = icmp eq ptr %155, %156
  br i1 %157, label %158, label %267

158:                                              ; preds = %150
  %159 = add i32 %101, 1
  %160 = icmp ult i32 %159, %34
  br i1 %160, label %165, label %275

161:                                              ; preds = %129
  %162 = landingpad { ptr, i32 }
          cleanup
  br label %764

163:                                              ; preds = %118
  %164 = landingpad { ptr, i32 }
          cleanup
  br label %764

165:                                              ; preds = %158, %211
  %166 = phi i32 [ %215, %211 ], [ %159, %158 ]
  %167 = phi ptr [ %214, %211 ], [ %153, %158 ]
  %168 = phi ptr [ %213, %211 ], [ %152, %158 ]
  %169 = phi ptr [ %212, %211 ], [ %151, %158 ]
  %170 = sub i32 %166, %154
  %171 = icmp eq ptr %168, %169
  br i1 %171, label %174, label %172

172:                                              ; preds = %165
  store i32 %170, ptr %168, align 4, !tbaa !22
  %173 = getelementptr inbounds i32, ptr %168, i64 1
  br label %211

174:                                              ; preds = %165
  %175 = ptrtoint ptr %168 to i64
  %176 = ptrtoint ptr %167 to i64
  %177 = sub i64 %175, %176
  %178 = icmp eq i64 %177, 9223372036854775804
  br i1 %178, label %179, label %181

179:                                              ; preds = %174
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %180 unwind label %219

180:                                              ; preds = %179
  unreachable

181:                                              ; preds = %174
  %182 = ashr exact i64 %177, 2
  %183 = tail call i64 @llvm.umax.i64(i64 %182, i64 1)
  %184 = add i64 %183, %182
  %185 = icmp ult i64 %184, %182
  %186 = icmp ugt i64 %184, 2305843009213693951
  %187 = or i1 %185, %186
  %188 = select i1 %187, i64 2305843009213693951, i64 %184
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %181
  %191 = shl nuw nsw i64 %188, 2
  %192 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %191) #21
          to label %193 unwind label %217

193:                                              ; preds = %190, %181
  %194 = phi ptr [ null, %181 ], [ %192, %190 ]
  %195 = getelementptr inbounds i32, ptr %194, i64 %182
  store i32 %170, ptr %195, align 4, !tbaa !22
  %196 = icmp sgt i64 %177, 4
  br i1 %196, label %197, label %198, !prof !23

197:                                              ; preds = %193
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %194, ptr align 4 %167, i64 %177, i1 false)
  br label %203

198:                                              ; preds = %193
  %199 = icmp eq i64 %177, 4
  br i1 %199, label %200, label %203

200:                                              ; preds = %198
  %201 = load i32, ptr %167, align 4, !tbaa !22
  store i32 %201, ptr %194, align 4, !tbaa !22
  %202 = getelementptr inbounds i32, ptr %195, i64 1
  br label %206

203:                                              ; preds = %198, %197
  %204 = getelementptr inbounds i32, ptr %195, i64 1
  %205 = icmp eq ptr %167, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %200, %203
  %207 = phi ptr [ %202, %200 ], [ %204, %203 ]
  tail call void @_ZdlPv(ptr noundef nonnull %167) #23
  br label %208

208:                                              ; preds = %206, %203
  %209 = phi ptr [ %204, %203 ], [ %207, %206 ]
  %210 = getelementptr inbounds i32, ptr %194, i64 %188
  br label %211

211:                                              ; preds = %208, %172
  %212 = phi ptr [ %210, %208 ], [ %169, %172 ]
  %213 = phi ptr [ %209, %208 ], [ %173, %172 ]
  %214 = phi ptr [ %194, %208 ], [ %167, %172 ]
  %215 = add nuw i32 %166, 1
  %216 = icmp eq i32 %215, %34
  br i1 %216, label %275, label %165

217:                                              ; preds = %190
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %764

219:                                              ; preds = %179
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %764

221:                                              ; preds = %100
  %222 = sub i32 %101, %102
  %223 = icmp eq ptr %104, %105
  br i1 %223, label %226, label %224

224:                                              ; preds = %221
  store i32 %222, ptr %104, align 4, !tbaa !22
  %225 = getelementptr inbounds i32, ptr %104, i64 1
  br label %267

226:                                              ; preds = %221
  %227 = ptrtoint ptr %104 to i64
  %228 = ptrtoint ptr %103 to i64
  %229 = sub i64 %227, %228
  %230 = icmp eq i64 %229, 9223372036854775804
  br i1 %230, label %231, label %233

231:                                              ; preds = %226
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %232 unwind label %265

232:                                              ; preds = %231
  unreachable

233:                                              ; preds = %226
  %234 = ashr exact i64 %229, 2
  %235 = tail call i64 @llvm.umax.i64(i64 %234, i64 1)
  %236 = add i64 %235, %234
  %237 = icmp ult i64 %236, %234
  %238 = icmp ugt i64 %236, 2305843009213693951
  %239 = or i1 %237, %238
  %240 = select i1 %239, i64 2305843009213693951, i64 %236
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %245, label %242

242:                                              ; preds = %233
  %243 = shl nuw nsw i64 %240, 2
  %244 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %243) #21
          to label %245 unwind label %263

245:                                              ; preds = %242, %233
  %246 = phi ptr [ null, %233 ], [ %244, %242 ]
  %247 = getelementptr inbounds i32, ptr %246, i64 %234
  store i32 %222, ptr %247, align 4, !tbaa !22
  %248 = icmp sgt i64 %229, 4
  br i1 %248, label %249, label %250, !prof !23

249:                                              ; preds = %245
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %246, ptr align 4 %103, i64 %229, i1 false)
  br label %255

250:                                              ; preds = %245
  %251 = icmp eq i64 %229, 4
  br i1 %251, label %252, label %255

252:                                              ; preds = %250
  %253 = load i32, ptr %103, align 4, !tbaa !22
  store i32 %253, ptr %246, align 4, !tbaa !22
  %254 = getelementptr inbounds i32, ptr %247, i64 1
  br label %258

255:                                              ; preds = %250, %249
  %256 = getelementptr inbounds i32, ptr %247, i64 1
  %257 = icmp eq ptr %103, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %252, %255
  %259 = phi ptr [ %254, %252 ], [ %256, %255 ]
  tail call void @_ZdlPv(ptr noundef nonnull %103) #23
  br label %260

260:                                              ; preds = %258, %255
  %261 = phi ptr [ %256, %255 ], [ %259, %258 ]
  %262 = getelementptr inbounds i32, ptr %246, i64 %240
  br label %267

263:                                              ; preds = %242
  %264 = landingpad { ptr, i32 }
          cleanup
  br label %764

265:                                              ; preds = %231
  %266 = landingpad { ptr, i32 }
          cleanup
  br label %764

267:                                              ; preds = %224, %260, %150
  %268 = phi ptr [ %155, %150 ], [ %106, %260 ], [ %106, %224 ]
  %269 = phi ptr [ %151, %150 ], [ %262, %260 ], [ %105, %224 ]
  %270 = phi ptr [ %152, %150 ], [ %261, %260 ], [ %225, %224 ]
  %271 = phi ptr [ %153, %150 ], [ %246, %260 ], [ %103, %224 ]
  %272 = phi i32 [ %154, %150 ], [ %102, %260 ], [ %102, %224 ]
  %273 = add nuw i32 %101, 1
  %274 = icmp eq i32 %273, %34
  br i1 %274, label %275, label %100

275:                                              ; preds = %267, %211, %90, %41, %43, %158, %44
  %276 = phi ptr [ %35, %44 ], [ %35, %158 ], [ %35, %43 ], [ %42, %41 ], [ %35, %90 ], [ %35, %211 ], [ %35, %267 ]
  %277 = phi ptr [ %32, %44 ], [ %153, %158 ], [ %32, %43 ], [ null, %41 ], [ %93, %90 ], [ %214, %211 ], [ %271, %267 ]
  %278 = load i32, ptr %26, align 4, !tbaa !38
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %291, label %280

280:                                              ; preds = %275
  %281 = load ptr, ptr %276, align 8, !tbaa !21
  %282 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 8
  %283 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 9
  %284 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %285 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 1
  %286 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 2
  %287 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %4, i64 0, i32 2
  %288 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %4, i64 0, i32 2, i32 1
  %289 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %4, i64 0, i32 1
  %290 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 1
  br label %295

291:                                              ; preds = %759, %275
  %292 = icmp eq ptr %277, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %291
  tail call void @_ZdlPv(ptr noundef nonnull %277) #23
  br label %294

294:                                              ; preds = %291, %293
  ret void

295:                                              ; preds = %280, %759
  %296 = phi i64 [ 0, %280 ], [ %304, %759 ]
  %297 = phi ptr [ %281, %280 ], [ %760, %759 ]
  %298 = getelementptr inbounds i32, ptr %277, i64 %296
  %299 = load i32, ptr %298, align 4, !tbaa !22
  %300 = icmp eq i32 %299, -1
  %301 = load ptr, ptr %282, align 8, !tbaa !41
  %302 = getelementptr inbounds i64, ptr %301, i64 %296
  %303 = load i64, ptr %302, align 8, !tbaa !42
  %304 = add nuw nsw i64 %296, 1
  %305 = and i64 %303, 4294967295
  %306 = getelementptr inbounds i64, ptr %301, i64 %304
  %307 = load i64, ptr %306, align 8, !tbaa !42
  %308 = icmp ugt i64 %307, %305
  br i1 %300, label %476, label %309

309:                                              ; preds = %295
  br i1 %308, label %310, label %312

310:                                              ; preds = %309
  %311 = trunc i64 %303 to i32
  br label %315

312:                                              ; preds = %428, %309
  br i1 %24, label %759, label %435

313:                                              ; preds = %330
  %314 = landingpad { ptr, i32 }
          cleanup
  br label %768

315:                                              ; preds = %310, %428
  %316 = phi i64 [ %430, %428 ], [ %305, %310 ]
  %317 = phi i32 [ %429, %428 ], [ %311, %310 ]
  %318 = load ptr, ptr %283, align 8, !tbaa !43
  %319 = getelementptr inbounds i32, ptr %318, i64 %316
  %320 = load i32, ptr %319, align 4, !tbaa !22
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds i32, ptr %277, i64 %321
  %323 = load i32, ptr %322, align 4, !tbaa !22
  %324 = icmp eq i32 %323, -1
  br i1 %324, label %342, label %325

325:                                              ; preds = %315
  %326 = load ptr, ptr %284, align 8, !tbaa !44
  %327 = getelementptr inbounds float, ptr %326, i64 %316
  %328 = load float, ptr %327, align 4, !tbaa !33
  %329 = fcmp oeq float %328, 0.000000e+00
  br i1 %329, label %428, label %330

330:                                              ; preds = %325
  %331 = load i32, ptr %298, align 4, !tbaa !22
  %332 = load ptr, ptr %285, align 8, !tbaa !47
  %333 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %332, i32 noundef %331, i32 noundef %323)
          to label %334 unwind label %313

334:                                              ; preds = %330
  %335 = icmp eq i32 %333, -1
  br i1 %335, label %428, label %336

336:                                              ; preds = %334
  %337 = load ptr, ptr %286, align 8, !tbaa !44
  %338 = zext i32 %333 to i64
  %339 = getelementptr inbounds float, ptr %337, i64 %338
  %340 = load float, ptr %339, align 4, !tbaa !33
  %341 = fadd float %328, %340
  store float %341, ptr %339, align 4, !tbaa !33
  br label %428

342:                                              ; preds = %315
  %343 = load ptr, ptr %276, align 8, !tbaa !21
  br label %344

344:                                              ; preds = %344, %342
  %345 = phi ptr [ %343, %342 ], [ %348, %344 ]
  %346 = load i32, ptr %345, align 8, !tbaa !24
  %347 = icmp eq i32 %346, %320
  %348 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 1
  br i1 %347, label %349, label %344

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 0, i32 1
  %351 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %352 = load ptr, ptr %351, align 8, !tbaa !31
  %353 = load ptr, ptr %350, align 8, !tbaa !32
  %354 = icmp eq ptr %352, %353
  br i1 %354, label %355, label %358

355:                                              ; preds = %388, %349
  br i1 %24, label %428, label %398

356:                                              ; preds = %371
  %357 = landingpad { ptr, i32 }
          cleanup
  br label %768

358:                                              ; preds = %349, %388
  %359 = phi ptr [ %392, %388 ], [ %353, %349 ]
  %360 = phi i64 [ %390, %388 ], [ 0, %349 ]
  %361 = phi i32 [ %389, %388 ], [ 0, %349 ]
  %362 = load ptr, ptr %284, align 8, !tbaa !44
  %363 = getelementptr inbounds float, ptr %362, i64 %316
  %364 = load float, ptr %363, align 4, !tbaa !33
  %365 = fpext float %364 to double
  %366 = getelementptr inbounds %"struct.std::pair", ptr %359, i64 %360, i32 1
  %367 = load double, ptr %366, align 8, !tbaa !35
  %368 = fmul double %367, %365
  %369 = fptrunc double %368 to float
  %370 = fcmp oeq float %369, 0.000000e+00
  br i1 %370, label %388, label %371

371:                                              ; preds = %358
  %372 = getelementptr inbounds %"struct.std::pair", ptr %359, i64 %360
  %373 = load i32, ptr %372, align 8, !tbaa !37
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds i32, ptr %277, i64 %374
  %376 = load i32, ptr %375, align 4, !tbaa !22
  %377 = load i32, ptr %298, align 4, !tbaa !22
  %378 = load ptr, ptr %285, align 8, !tbaa !47
  %379 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %378, i32 noundef %377, i32 noundef %376)
          to label %380 unwind label %356

380:                                              ; preds = %371
  %381 = icmp eq i32 %379, -1
  br i1 %381, label %388, label %382

382:                                              ; preds = %380
  %383 = load ptr, ptr %286, align 8, !tbaa !44
  %384 = zext i32 %379 to i64
  %385 = getelementptr inbounds float, ptr %383, i64 %384
  %386 = load float, ptr %385, align 4, !tbaa !33
  %387 = fadd float %386, %369
  store float %387, ptr %385, align 4, !tbaa !33
  br label %388

388:                                              ; preds = %382, %380, %358
  %389 = add i32 %361, 1
  %390 = zext i32 %389 to i64
  %391 = load ptr, ptr %351, align 8, !tbaa !31
  %392 = load ptr, ptr %350, align 8, !tbaa !32
  %393 = ptrtoint ptr %391 to i64
  %394 = ptrtoint ptr %392 to i64
  %395 = sub i64 %393, %394
  %396 = ashr exact i64 %395, 4
  %397 = icmp eq i64 %396, %390
  br i1 %397, label %355, label %358

398:                                              ; preds = %355
  %399 = load ptr, ptr %284, align 8, !tbaa !44
  %400 = getelementptr inbounds float, ptr %399, i64 %316
  %401 = load float, ptr %400, align 4, !tbaa !33
  %402 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 0, i32 2
  %403 = load double, ptr %402, align 8, !tbaa !48
  %404 = load i32, ptr %298, align 4, !tbaa !22
  %405 = load i32, ptr %287, align 8, !tbaa !61
  %406 = load ptr, ptr %288, align 8, !tbaa !58
  br label %407

407:                                              ; preds = %407, %398
  %408 = phi i32 [ %405, %398 ], [ %409, %407 ]
  %409 = add i32 %408, -1
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds i32, ptr %406, i64 %410
  %412 = load i32, ptr %411, align 4, !tbaa !22
  %413 = icmp ugt i32 %412, %404
  br i1 %413, label %407, label %414

414:                                              ; preds = %407
  %415 = sub i32 %404, %412
  %416 = zext i32 %415 to i64
  %417 = zext i32 %409 to i64
  %418 = load ptr, ptr %289, align 8, !tbaa !68
  %419 = getelementptr inbounds %"class.dealii::Vector", ptr %418, i64 %417, i32 3
  %420 = load ptr, ptr %419, align 8, !tbaa !49
  %421 = getelementptr inbounds float, ptr %420, i64 %416
  %422 = fpext float %401 to double
  %423 = load float, ptr %421, align 4, !tbaa !33
  %424 = fpext float %423 to double
  %425 = fneg double %422
  %426 = tail call double @llvm.fmuladd.f64(double %425, double %403, double %424)
  %427 = fptrunc double %426 to float
  store float %427, ptr %421, align 4, !tbaa !33
  br label %428

428:                                              ; preds = %355, %414, %336, %334, %325
  %429 = add i32 %317, 1
  %430 = zext i32 %429 to i64
  %431 = load ptr, ptr %282, align 8, !tbaa !41
  %432 = getelementptr inbounds i64, ptr %431, i64 %304
  %433 = load i64, ptr %432, align 8, !tbaa !42
  %434 = icmp ugt i64 %433, %430
  br i1 %434, label %315, label %312

435:                                              ; preds = %312
  %436 = load i32, ptr %6, align 8, !tbaa !61
  %437 = load ptr, ptr %7, align 8, !tbaa !58
  br label %438

438:                                              ; preds = %438, %435
  %439 = phi i32 [ %436, %435 ], [ %440, %438 ]
  %440 = add i32 %439, -1
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds i32, ptr %437, i64 %441
  %443 = load i32, ptr %442, align 4, !tbaa !22
  %444 = zext i32 %443 to i64
  %445 = icmp ult i64 %296, %444
  br i1 %445, label %438, label %446

446:                                              ; preds = %438
  %447 = trunc i64 %296 to i32
  %448 = sub i32 %447, %443
  %449 = zext i32 %448 to i64
  %450 = zext i32 %440 to i64
  %451 = load ptr, ptr %290, align 8, !tbaa !68
  %452 = getelementptr inbounds %"class.dealii::Vector", ptr %451, i64 %450, i32 3
  %453 = load ptr, ptr %452, align 8, !tbaa !49
  %454 = getelementptr inbounds float, ptr %453, i64 %449
  %455 = load float, ptr %454, align 4, !tbaa !33
  %456 = load i32, ptr %298, align 4, !tbaa !22
  %457 = load i32, ptr %287, align 8, !tbaa !61
  %458 = load ptr, ptr %288, align 8, !tbaa !58
  br label %459

459:                                              ; preds = %459, %446
  %460 = phi i32 [ %457, %446 ], [ %461, %459 ]
  %461 = add i32 %460, -1
  %462 = sext i32 %461 to i64
  %463 = getelementptr inbounds i32, ptr %458, i64 %462
  %464 = load i32, ptr %463, align 4, !tbaa !22
  %465 = icmp ugt i32 %464, %456
  br i1 %465, label %459, label %466

466:                                              ; preds = %459
  %467 = sub i32 %456, %464
  %468 = zext i32 %467 to i64
  %469 = zext i32 %461 to i64
  %470 = load ptr, ptr %289, align 8, !tbaa !68
  %471 = getelementptr inbounds %"class.dealii::Vector", ptr %470, i64 %469, i32 3
  %472 = load ptr, ptr %471, align 8, !tbaa !49
  %473 = getelementptr inbounds float, ptr %472, i64 %468
  %474 = load float, ptr %473, align 4, !tbaa !33
  %475 = fadd float %455, %474
  store float %475, ptr %473, align 4, !tbaa !33
  br label %759

476:                                              ; preds = %295
  br i1 %308, label %477, label %481

477:                                              ; preds = %476
  %478 = trunc i64 %303 to i32
  %479 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1
  %480 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %500

481:                                              ; preds = %702, %476
  br i1 %24, label %757, label %482

482:                                              ; preds = %481
  %483 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1
  %484 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %485 = load ptr, ptr %484, align 8, !tbaa !31
  %486 = load ptr, ptr %483, align 8, !tbaa !32
  %487 = ptrtoint ptr %485 to i64
  %488 = ptrtoint ptr %486 to i64
  %489 = sub i64 %487, %488
  %490 = ashr exact i64 %489, 4
  %491 = icmp eq ptr %485, %486
  br i1 %491, label %757, label %492

492:                                              ; preds = %482
  %493 = load i32, ptr %6, align 8, !tbaa !61
  %494 = load ptr, ptr %7, align 8, !tbaa !58
  %495 = load ptr, ptr %290, align 8, !tbaa !68
  %496 = load i32, ptr %287, align 8, !tbaa !61
  %497 = load ptr, ptr %288, align 8, !tbaa !58
  %498 = load ptr, ptr %289, align 8, !tbaa !68
  %499 = trunc i64 %296 to i32
  br label %709

500:                                              ; preds = %477, %702
  %501 = phi i64 [ %305, %477 ], [ %704, %702 ]
  %502 = phi i32 [ %478, %477 ], [ %703, %702 ]
  %503 = load ptr, ptr %283, align 8, !tbaa !43
  %504 = getelementptr inbounds i32, ptr %503, i64 %501
  %505 = load i32, ptr %504, align 4, !tbaa !22
  %506 = zext i32 %505 to i64
  %507 = getelementptr inbounds i32, ptr %277, i64 %506
  %508 = load i32, ptr %507, align 4, !tbaa !22
  %509 = icmp eq i32 %508, -1
  br i1 %509, label %561, label %510

510:                                              ; preds = %500
  %511 = load ptr, ptr %480, align 8, !tbaa !31
  %512 = load ptr, ptr %479, align 8, !tbaa !32
  %513 = icmp eq ptr %511, %512
  br i1 %513, label %702, label %516

514:                                              ; preds = %529
  %515 = landingpad { ptr, i32 }
          cleanup
  br label %768

516:                                              ; preds = %510, %551
  %517 = phi ptr [ %555, %551 ], [ %512, %510 ]
  %518 = phi i64 [ %553, %551 ], [ 0, %510 ]
  %519 = phi i32 [ %552, %551 ], [ 0, %510 ]
  %520 = load ptr, ptr %284, align 8, !tbaa !44
  %521 = getelementptr inbounds float, ptr %520, i64 %501
  %522 = load float, ptr %521, align 4, !tbaa !33
  %523 = fpext float %522 to double
  %524 = getelementptr inbounds %"struct.std::pair", ptr %517, i64 %518, i32 1
  %525 = load double, ptr %524, align 8, !tbaa !35
  %526 = fmul double %525, %523
  %527 = fptrunc double %526 to float
  %528 = fcmp oeq float %527, 0.000000e+00
  br i1 %528, label %551, label %529

529:                                              ; preds = %516
  %530 = getelementptr inbounds %"struct.std::pair", ptr %517, i64 %518
  %531 = load ptr, ptr %283, align 8, !tbaa !43
  %532 = getelementptr inbounds i32, ptr %531, i64 %501
  %533 = load i32, ptr %532, align 4, !tbaa !22
  %534 = zext i32 %533 to i64
  %535 = getelementptr inbounds i32, ptr %277, i64 %534
  %536 = load i32, ptr %535, align 4, !tbaa !22
  %537 = load i32, ptr %530, align 8, !tbaa !37
  %538 = zext i32 %537 to i64
  %539 = getelementptr inbounds i32, ptr %277, i64 %538
  %540 = load i32, ptr %539, align 4, !tbaa !22
  %541 = load ptr, ptr %285, align 8, !tbaa !47
  %542 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %541, i32 noundef %540, i32 noundef %536)
          to label %543 unwind label %514

543:                                              ; preds = %529
  %544 = icmp eq i32 %542, -1
  br i1 %544, label %551, label %545

545:                                              ; preds = %543
  %546 = load ptr, ptr %286, align 8, !tbaa !44
  %547 = zext i32 %542 to i64
  %548 = getelementptr inbounds float, ptr %546, i64 %547
  %549 = load float, ptr %548, align 4, !tbaa !33
  %550 = fadd float %549, %527
  store float %550, ptr %548, align 4, !tbaa !33
  br label %551

551:                                              ; preds = %545, %543, %516
  %552 = add i32 %519, 1
  %553 = zext i32 %552 to i64
  %554 = load ptr, ptr %480, align 8, !tbaa !31
  %555 = load ptr, ptr %479, align 8, !tbaa !32
  %556 = ptrtoint ptr %554 to i64
  %557 = ptrtoint ptr %555 to i64
  %558 = sub i64 %556, %557
  %559 = ashr exact i64 %558, 4
  %560 = icmp eq i64 %559, %553
  br i1 %560, label %702, label %516

561:                                              ; preds = %500
  %562 = load ptr, ptr %276, align 8, !tbaa !21
  br label %563

563:                                              ; preds = %563, %561
  %564 = phi ptr [ %562, %561 ], [ %567, %563 ]
  %565 = load i32, ptr %564, align 8, !tbaa !24
  %566 = icmp eq i32 %565, %505
  %567 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %564, i64 1
  br i1 %566, label %568, label %563

568:                                              ; preds = %563
  %569 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %564, i64 0, i32 1
  %570 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %564, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %571 = load ptr, ptr %570, align 8, !tbaa !31
  %572 = load ptr, ptr %569, align 8, !tbaa !32
  %573 = icmp eq ptr %571, %572
  br i1 %573, label %585, label %574

574:                                              ; preds = %568
  %575 = load ptr, ptr %480, align 8, !tbaa !31
  %576 = load ptr, ptr %479, align 8, !tbaa !32
  br label %577

577:                                              ; preds = %574, %605
  %578 = phi ptr [ %606, %605 ], [ %572, %574 ]
  %579 = phi ptr [ %607, %605 ], [ %571, %574 ]
  %580 = phi ptr [ %608, %605 ], [ %576, %574 ]
  %581 = phi ptr [ %609, %605 ], [ %575, %574 ]
  %582 = phi i64 [ %611, %605 ], [ 0, %574 ]
  %583 = phi i32 [ %610, %605 ], [ 0, %574 ]
  %584 = icmp eq ptr %581, %580
  br i1 %584, label %605, label %619

585:                                              ; preds = %605, %568
  br i1 %24, label %702, label %586

586:                                              ; preds = %585
  %587 = load ptr, ptr %480, align 8, !tbaa !31
  %588 = load ptr, ptr %479, align 8, !tbaa !32
  %589 = ptrtoint ptr %587 to i64
  %590 = ptrtoint ptr %588 to i64
  %591 = sub i64 %589, %590
  %592 = ashr exact i64 %591, 4
  %593 = icmp eq ptr %587, %588
  br i1 %593, label %702, label %594

594:                                              ; preds = %586
  %595 = load ptr, ptr %284, align 8, !tbaa !44
  %596 = getelementptr inbounds float, ptr %595, i64 %501
  %597 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %564, i64 0, i32 2
  %598 = load double, ptr %597, align 8, !tbaa !48
  %599 = load i32, ptr %287, align 8, !tbaa !61
  %600 = load ptr, ptr %288, align 8, !tbaa !58
  %601 = load ptr, ptr %289, align 8, !tbaa !68
  br label %667

602:                                              ; preds = %657
  %603 = load ptr, ptr %570, align 8, !tbaa !31
  %604 = load ptr, ptr %569, align 8, !tbaa !32
  br label %605

605:                                              ; preds = %602, %577
  %606 = phi ptr [ %604, %602 ], [ %578, %577 ]
  %607 = phi ptr [ %603, %602 ], [ %579, %577 ]
  %608 = phi ptr [ %661, %602 ], [ %580, %577 ]
  %609 = phi ptr [ %660, %602 ], [ %580, %577 ]
  %610 = add i32 %583, 1
  %611 = zext i32 %610 to i64
  %612 = ptrtoint ptr %607 to i64
  %613 = ptrtoint ptr %606 to i64
  %614 = sub i64 %612, %613
  %615 = ashr exact i64 %614, 4
  %616 = icmp eq i64 %615, %611
  br i1 %616, label %585, label %577

617:                                              ; preds = %636
  %618 = landingpad { ptr, i32 }
          cleanup
  br label %768

619:                                              ; preds = %577, %657
  %620 = phi ptr [ %661, %657 ], [ %580, %577 ]
  %621 = phi i64 [ %659, %657 ], [ 0, %577 ]
  %622 = phi i32 [ %658, %657 ], [ 0, %577 ]
  %623 = load ptr, ptr %569, align 8, !tbaa !32
  %624 = load ptr, ptr %284, align 8, !tbaa !44
  %625 = getelementptr inbounds float, ptr %624, i64 %501
  %626 = load float, ptr %625, align 4, !tbaa !33
  %627 = fpext float %626 to double
  %628 = getelementptr inbounds %"struct.std::pair", ptr %620, i64 %621, i32 1
  %629 = load double, ptr %628, align 8, !tbaa !35
  %630 = fmul double %629, %627
  %631 = getelementptr inbounds %"struct.std::pair", ptr %623, i64 %582, i32 1
  %632 = load double, ptr %631, align 8, !tbaa !35
  %633 = fmul double %630, %632
  %634 = fptrunc double %633 to float
  %635 = fcmp oeq float %634, 0.000000e+00
  br i1 %635, label %657, label %636

636:                                              ; preds = %619
  %637 = getelementptr inbounds %"struct.std::pair", ptr %623, i64 %582
  %638 = getelementptr inbounds %"struct.std::pair", ptr %620, i64 %621
  %639 = load i32, ptr %637, align 8, !tbaa !37
  %640 = zext i32 %639 to i64
  %641 = getelementptr inbounds i32, ptr %277, i64 %640
  %642 = load i32, ptr %641, align 4, !tbaa !22
  %643 = load i32, ptr %638, align 8, !tbaa !37
  %644 = zext i32 %643 to i64
  %645 = getelementptr inbounds i32, ptr %277, i64 %644
  %646 = load i32, ptr %645, align 4, !tbaa !22
  %647 = load ptr, ptr %285, align 8, !tbaa !47
  %648 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %647, i32 noundef %646, i32 noundef %642)
          to label %649 unwind label %617

649:                                              ; preds = %636
  %650 = icmp eq i32 %648, -1
  br i1 %650, label %657, label %651

651:                                              ; preds = %649
  %652 = load ptr, ptr %286, align 8, !tbaa !44
  %653 = zext i32 %648 to i64
  %654 = getelementptr inbounds float, ptr %652, i64 %653
  %655 = load float, ptr %654, align 4, !tbaa !33
  %656 = fadd float %655, %634
  store float %656, ptr %654, align 4, !tbaa !33
  br label %657

657:                                              ; preds = %651, %649, %619
  %658 = add i32 %622, 1
  %659 = zext i32 %658 to i64
  %660 = load ptr, ptr %480, align 8, !tbaa !31
  %661 = load ptr, ptr %479, align 8, !tbaa !32
  %662 = ptrtoint ptr %660 to i64
  %663 = ptrtoint ptr %661 to i64
  %664 = sub i64 %662, %663
  %665 = ashr exact i64 %664, 4
  %666 = icmp eq i64 %665, %659
  br i1 %666, label %602, label %619

667:                                              ; preds = %594, %685
  %668 = phi i64 [ 0, %594 ], [ %700, %685 ]
  %669 = phi i32 [ 0, %594 ], [ %699, %685 ]
  %670 = load float, ptr %596, align 4, !tbaa !33
  %671 = getelementptr inbounds %"struct.std::pair", ptr %588, i64 %668
  %672 = getelementptr inbounds %"struct.std::pair", ptr %588, i64 %668, i32 1
  %673 = load double, ptr %672, align 8, !tbaa !35
  %674 = load i32, ptr %671, align 8, !tbaa !37
  %675 = zext i32 %674 to i64
  %676 = getelementptr inbounds i32, ptr %277, i64 %675
  %677 = load i32, ptr %676, align 4, !tbaa !22
  br label %678

678:                                              ; preds = %678, %667
  %679 = phi i32 [ %599, %667 ], [ %680, %678 ]
  %680 = add i32 %679, -1
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds i32, ptr %600, i64 %681
  %683 = load i32, ptr %682, align 4, !tbaa !22
  %684 = icmp ugt i32 %683, %677
  br i1 %684, label %678, label %685

685:                                              ; preds = %678
  %686 = sub i32 %677, %683
  %687 = zext i32 %686 to i64
  %688 = zext i32 %680 to i64
  %689 = getelementptr inbounds %"class.dealii::Vector", ptr %601, i64 %688, i32 3
  %690 = load ptr, ptr %689, align 8, !tbaa !49
  %691 = getelementptr inbounds float, ptr %690, i64 %687
  %692 = fpext float %670 to double
  %693 = load float, ptr %691, align 4, !tbaa !33
  %694 = fpext float %693 to double
  %695 = fneg double %673
  %696 = fmul double %695, %692
  %697 = tail call double @llvm.fmuladd.f64(double %696, double %598, double %694)
  %698 = fptrunc double %697 to float
  store float %698, ptr %691, align 4, !tbaa !33
  %699 = add i32 %669, 1
  %700 = zext i32 %699 to i64
  %701 = icmp eq i64 %592, %700
  br i1 %701, label %702, label %667

702:                                              ; preds = %551, %685, %510, %586, %585
  %703 = add i32 %502, 1
  %704 = zext i32 %703 to i64
  %705 = load ptr, ptr %282, align 8, !tbaa !41
  %706 = getelementptr inbounds i64, ptr %705, i64 %304
  %707 = load i64, ptr %706, align 8, !tbaa !42
  %708 = icmp ugt i64 %707, %704
  br i1 %708, label %500, label %481

709:                                              ; preds = %492, %742
  %710 = phi i64 [ 0, %492 ], [ %755, %742 ]
  %711 = phi i32 [ 0, %492 ], [ %754, %742 ]
  br label %712

712:                                              ; preds = %712, %709
  %713 = phi i32 [ %493, %709 ], [ %714, %712 ]
  %714 = add i32 %713, -1
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds i32, ptr %494, i64 %715
  %717 = load i32, ptr %716, align 4, !tbaa !22
  %718 = zext i32 %717 to i64
  %719 = icmp ult i64 %296, %718
  br i1 %719, label %712, label %720

720:                                              ; preds = %712
  %721 = sub i32 %499, %717
  %722 = zext i32 %721 to i64
  %723 = zext i32 %714 to i64
  %724 = getelementptr inbounds %"class.dealii::Vector", ptr %495, i64 %723, i32 3
  %725 = load ptr, ptr %724, align 8, !tbaa !49
  %726 = getelementptr inbounds float, ptr %725, i64 %722
  %727 = load float, ptr %726, align 4, !tbaa !33
  %728 = getelementptr inbounds %"struct.std::pair", ptr %486, i64 %710
  %729 = getelementptr inbounds %"struct.std::pair", ptr %486, i64 %710, i32 1
  %730 = load double, ptr %729, align 8, !tbaa !35
  %731 = load i32, ptr %728, align 8, !tbaa !37
  %732 = zext i32 %731 to i64
  %733 = getelementptr inbounds i32, ptr %277, i64 %732
  %734 = load i32, ptr %733, align 4, !tbaa !22
  br label %735

735:                                              ; preds = %735, %720
  %736 = phi i32 [ %496, %720 ], [ %737, %735 ]
  %737 = add i32 %736, -1
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds i32, ptr %497, i64 %738
  %740 = load i32, ptr %739, align 4, !tbaa !22
  %741 = icmp ugt i32 %740, %734
  br i1 %741, label %735, label %742

742:                                              ; preds = %735
  %743 = sub i32 %734, %740
  %744 = zext i32 %743 to i64
  %745 = zext i32 %737 to i64
  %746 = getelementptr inbounds %"class.dealii::Vector", ptr %498, i64 %745, i32 3
  %747 = load ptr, ptr %746, align 8, !tbaa !49
  %748 = getelementptr inbounds float, ptr %747, i64 %744
  %749 = fpext float %727 to double
  %750 = load float, ptr %748, align 4, !tbaa !33
  %751 = fpext float %750 to double
  %752 = tail call double @llvm.fmuladd.f64(double %749, double %730, double %751)
  %753 = fptrunc double %752 to float
  store float %753, ptr %748, align 4, !tbaa !33
  %754 = add i32 %711, 1
  %755 = zext i32 %754 to i64
  %756 = icmp eq i64 %490, %755
  br i1 %756, label %757, label %709

757:                                              ; preds = %742, %482, %481
  %758 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 1
  br label %759

759:                                              ; preds = %757, %466, %312
  %760 = phi ptr [ %758, %757 ], [ %297, %466 ], [ %297, %312 ]
  %761 = load i32, ptr %26, align 4, !tbaa !38
  %762 = zext i32 %761 to i64
  %763 = icmp ult i64 %304, %762
  br i1 %763, label %295, label %291

764:                                              ; preds = %263, %265, %217, %219, %161, %163, %96, %98
  %765 = phi ptr [ %47, %96 ], [ %47, %98 ], [ %103, %161 ], [ %103, %163 ], [ %167, %217 ], [ %167, %219 ], [ %103, %263 ], [ %103, %265 ]
  %766 = phi { ptr, i32 } [ %97, %96 ], [ %99, %98 ], [ %162, %161 ], [ %164, %163 ], [ %218, %217 ], [ %220, %219 ], [ %264, %263 ], [ %266, %265 ]
  %767 = icmp eq ptr %765, null
  br i1 %767, label %771, label %768

768:                                              ; preds = %617, %356, %313, %514, %764
  %769 = phi { ptr, i32 } [ %766, %764 ], [ %618, %617 ], [ %357, %356 ], [ %515, %514 ], [ %314, %313 ]
  %770 = phi ptr [ %765, %764 ], [ %277, %617 ], [ %277, %356 ], [ %277, %514 ], [ %277, %313 ]
  tail call void @_ZdlPv(ptr noundef nonnull %770) #23
  br label %771

771:                                              ; preds = %768, %764
  %772 = phi { ptr, i32 } [ %766, %764 ], [ %769, %768 ]
  resume { ptr, i32 } %772
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIdNS_11BlockVectorIfEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(128) %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 8 dereferenceable(128) %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 2
  %7 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 2, i32 1
  %8 = load i32, ptr %6, align 8, !tbaa !61
  %9 = zext i32 %8 to i64
  %10 = load ptr, ptr %7, align 8, !tbaa !58
  %11 = getelementptr inbounds i32, ptr %10, i64 %9
  %12 = load i32, ptr %11, align 4, !tbaa !22
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %4, i64 0, i32 2
  %16 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %4, i64 0, i32 2, i32 1
  %17 = load i32, ptr %15, align 8, !tbaa !61
  %18 = zext i32 %17 to i64
  %19 = load ptr, ptr %16, align 8, !tbaa !58
  %20 = getelementptr inbounds i32, ptr %19, i64 %18
  %21 = load i32, ptr %20, align 4, !tbaa !22
  %22 = icmp eq i32 %21, 0
  br label %23

23:                                               ; preds = %14, %5
  %24 = phi i1 [ false, %5 ], [ %22, %14 ]
  %25 = tail call noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
  %26 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !38
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %23
  %30 = zext i32 %27 to i64
  %31 = shl nuw nsw i64 %30, 2
  %32 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %31) #21
  %33 = getelementptr inbounds i32, ptr %32, i64 %30
  %34 = load i32, ptr %26, align 4, !tbaa !38
  %35 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !21
  %37 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !21
  %39 = icmp eq ptr %36, %38
  %40 = icmp eq i32 %34, 0
  br i1 %39, label %44, label %43

41:                                               ; preds = %23
  %42 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %275

43:                                               ; preds = %29
  br i1 %40, label %275, label %100

44:                                               ; preds = %29
  br i1 %40, label %275, label %45

45:                                               ; preds = %44, %90
  %46 = phi i32 [ %94, %90 ], [ 0, %44 ]
  %47 = phi ptr [ %93, %90 ], [ %32, %44 ]
  %48 = phi ptr [ %92, %90 ], [ %32, %44 ]
  %49 = phi ptr [ %91, %90 ], [ %33, %44 ]
  %50 = icmp eq ptr %48, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %45
  store i32 %46, ptr %48, align 4, !tbaa !22
  %52 = getelementptr inbounds i32, ptr %48, i64 1
  br label %90

53:                                               ; preds = %45
  %54 = ptrtoint ptr %48 to i64
  %55 = ptrtoint ptr %47 to i64
  %56 = sub i64 %54, %55
  %57 = icmp eq i64 %56, 9223372036854775804
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %59 unwind label %98

59:                                               ; preds = %58
  unreachable

60:                                               ; preds = %53
  %61 = ashr exact i64 %56, 2
  %62 = tail call i64 @llvm.umax.i64(i64 %61, i64 1)
  %63 = add i64 %62, %61
  %64 = icmp ult i64 %63, %61
  %65 = icmp ugt i64 %63, 2305843009213693951
  %66 = or i1 %64, %65
  %67 = select i1 %66, i64 2305843009213693951, i64 %63
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %60
  %70 = shl nuw nsw i64 %67, 2
  %71 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %70) #21
          to label %72 unwind label %96

72:                                               ; preds = %69, %60
  %73 = phi ptr [ null, %60 ], [ %71, %69 ]
  %74 = getelementptr inbounds i32, ptr %73, i64 %61
  store i32 %46, ptr %74, align 4, !tbaa !22
  %75 = icmp sgt i64 %56, 4
  br i1 %75, label %76, label %77, !prof !23

76:                                               ; preds = %72
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %73, ptr align 4 %47, i64 %56, i1 false)
  br label %82

77:                                               ; preds = %72
  %78 = icmp eq i64 %56, 4
  br i1 %78, label %79, label %82

79:                                               ; preds = %77
  %80 = load i32, ptr %47, align 4, !tbaa !22
  store i32 %80, ptr %73, align 4, !tbaa !22
  %81 = getelementptr inbounds i32, ptr %74, i64 1
  br label %85

82:                                               ; preds = %77, %76
  %83 = getelementptr inbounds i32, ptr %74, i64 1
  %84 = icmp eq ptr %47, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %79, %82
  %86 = phi ptr [ %81, %79 ], [ %83, %82 ]
  tail call void @_ZdlPv(ptr noundef nonnull %47) #23
  br label %87

87:                                               ; preds = %85, %82
  %88 = phi ptr [ %83, %82 ], [ %86, %85 ]
  %89 = getelementptr inbounds i32, ptr %73, i64 %67
  br label %90

90:                                               ; preds = %87, %51
  %91 = phi ptr [ %89, %87 ], [ %49, %51 ]
  %92 = phi ptr [ %88, %87 ], [ %52, %51 ]
  %93 = phi ptr [ %73, %87 ], [ %47, %51 ]
  %94 = add nuw i32 %46, 1
  %95 = icmp eq i32 %94, %34
  br i1 %95, label %275, label %45

96:                                               ; preds = %69
  %97 = landingpad { ptr, i32 }
          cleanup
  br label %756

98:                                               ; preds = %58
  %99 = landingpad { ptr, i32 }
          cleanup
  br label %756

100:                                              ; preds = %43, %267
  %101 = phi i32 [ %273, %267 ], [ 0, %43 ]
  %102 = phi i32 [ %272, %267 ], [ 0, %43 ]
  %103 = phi ptr [ %271, %267 ], [ %32, %43 ]
  %104 = phi ptr [ %270, %267 ], [ %32, %43 ]
  %105 = phi ptr [ %269, %267 ], [ %33, %43 ]
  %106 = phi ptr [ %268, %267 ], [ %36, %43 ]
  %107 = load i32, ptr %106, align 8, !tbaa !24
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %221

109:                                              ; preds = %100
  %110 = icmp eq ptr %104, %105
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  store i32 -1, ptr %104, align 4, !tbaa !22
  %112 = getelementptr inbounds i32, ptr %104, i64 1
  br label %150

113:                                              ; preds = %109
  %114 = ptrtoint ptr %104 to i64
  %115 = ptrtoint ptr %103 to i64
  %116 = sub i64 %114, %115
  %117 = icmp eq i64 %116, 9223372036854775804
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %119 unwind label %163

119:                                              ; preds = %118
  unreachable

120:                                              ; preds = %113
  %121 = ashr exact i64 %116, 2
  %122 = tail call i64 @llvm.umax.i64(i64 %121, i64 1)
  %123 = add i64 %122, %121
  %124 = icmp ult i64 %123, %121
  %125 = icmp ugt i64 %123, 2305843009213693951
  %126 = or i1 %124, %125
  %127 = select i1 %126, i64 2305843009213693951, i64 %123
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %120
  %130 = shl nuw nsw i64 %127, 2
  %131 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %130) #21
          to label %132 unwind label %161

132:                                              ; preds = %129, %120
  %133 = phi ptr [ null, %120 ], [ %131, %129 ]
  %134 = getelementptr inbounds i32, ptr %133, i64 %121
  store i32 -1, ptr %134, align 4, !tbaa !22
  %135 = icmp sgt i64 %116, 4
  br i1 %135, label %136, label %137, !prof !23

136:                                              ; preds = %132
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %133, ptr align 4 %103, i64 %116, i1 false)
  br label %142

137:                                              ; preds = %132
  %138 = icmp eq i64 %116, 4
  br i1 %138, label %139, label %142

139:                                              ; preds = %137
  %140 = load i32, ptr %103, align 4, !tbaa !22
  store i32 %140, ptr %133, align 4, !tbaa !22
  %141 = getelementptr inbounds i32, ptr %134, i64 1
  br label %145

142:                                              ; preds = %137, %136
  %143 = getelementptr inbounds i32, ptr %134, i64 1
  %144 = icmp eq ptr %103, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139, %142
  %146 = phi ptr [ %141, %139 ], [ %143, %142 ]
  tail call void @_ZdlPv(ptr noundef nonnull %103) #23
  br label %147

147:                                              ; preds = %145, %142
  %148 = phi ptr [ %143, %142 ], [ %146, %145 ]
  %149 = getelementptr inbounds i32, ptr %133, i64 %127
  br label %150

150:                                              ; preds = %111, %147
  %151 = phi ptr [ %149, %147 ], [ %105, %111 ]
  %152 = phi ptr [ %148, %147 ], [ %112, %111 ]
  %153 = phi ptr [ %133, %147 ], [ %103, %111 ]
  %154 = add i32 %102, 1
  %155 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %106, i64 1
  %156 = load ptr, ptr %37, align 8, !tbaa !21
  %157 = icmp eq ptr %155, %156
  br i1 %157, label %158, label %267

158:                                              ; preds = %150
  %159 = add i32 %101, 1
  %160 = icmp ult i32 %159, %34
  br i1 %160, label %165, label %275

161:                                              ; preds = %129
  %162 = landingpad { ptr, i32 }
          cleanup
  br label %756

163:                                              ; preds = %118
  %164 = landingpad { ptr, i32 }
          cleanup
  br label %756

165:                                              ; preds = %158, %211
  %166 = phi i32 [ %215, %211 ], [ %159, %158 ]
  %167 = phi ptr [ %214, %211 ], [ %153, %158 ]
  %168 = phi ptr [ %213, %211 ], [ %152, %158 ]
  %169 = phi ptr [ %212, %211 ], [ %151, %158 ]
  %170 = sub i32 %166, %154
  %171 = icmp eq ptr %168, %169
  br i1 %171, label %174, label %172

172:                                              ; preds = %165
  store i32 %170, ptr %168, align 4, !tbaa !22
  %173 = getelementptr inbounds i32, ptr %168, i64 1
  br label %211

174:                                              ; preds = %165
  %175 = ptrtoint ptr %168 to i64
  %176 = ptrtoint ptr %167 to i64
  %177 = sub i64 %175, %176
  %178 = icmp eq i64 %177, 9223372036854775804
  br i1 %178, label %179, label %181

179:                                              ; preds = %174
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %180 unwind label %219

180:                                              ; preds = %179
  unreachable

181:                                              ; preds = %174
  %182 = ashr exact i64 %177, 2
  %183 = tail call i64 @llvm.umax.i64(i64 %182, i64 1)
  %184 = add i64 %183, %182
  %185 = icmp ult i64 %184, %182
  %186 = icmp ugt i64 %184, 2305843009213693951
  %187 = or i1 %185, %186
  %188 = select i1 %187, i64 2305843009213693951, i64 %184
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %181
  %191 = shl nuw nsw i64 %188, 2
  %192 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %191) #21
          to label %193 unwind label %217

193:                                              ; preds = %190, %181
  %194 = phi ptr [ null, %181 ], [ %192, %190 ]
  %195 = getelementptr inbounds i32, ptr %194, i64 %182
  store i32 %170, ptr %195, align 4, !tbaa !22
  %196 = icmp sgt i64 %177, 4
  br i1 %196, label %197, label %198, !prof !23

197:                                              ; preds = %193
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %194, ptr align 4 %167, i64 %177, i1 false)
  br label %203

198:                                              ; preds = %193
  %199 = icmp eq i64 %177, 4
  br i1 %199, label %200, label %203

200:                                              ; preds = %198
  %201 = load i32, ptr %167, align 4, !tbaa !22
  store i32 %201, ptr %194, align 4, !tbaa !22
  %202 = getelementptr inbounds i32, ptr %195, i64 1
  br label %206

203:                                              ; preds = %198, %197
  %204 = getelementptr inbounds i32, ptr %195, i64 1
  %205 = icmp eq ptr %167, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %200, %203
  %207 = phi ptr [ %202, %200 ], [ %204, %203 ]
  tail call void @_ZdlPv(ptr noundef nonnull %167) #23
  br label %208

208:                                              ; preds = %206, %203
  %209 = phi ptr [ %204, %203 ], [ %207, %206 ]
  %210 = getelementptr inbounds i32, ptr %194, i64 %188
  br label %211

211:                                              ; preds = %208, %172
  %212 = phi ptr [ %210, %208 ], [ %169, %172 ]
  %213 = phi ptr [ %209, %208 ], [ %173, %172 ]
  %214 = phi ptr [ %194, %208 ], [ %167, %172 ]
  %215 = add nuw i32 %166, 1
  %216 = icmp eq i32 %215, %34
  br i1 %216, label %275, label %165

217:                                              ; preds = %190
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %756

219:                                              ; preds = %179
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %756

221:                                              ; preds = %100
  %222 = sub i32 %101, %102
  %223 = icmp eq ptr %104, %105
  br i1 %223, label %226, label %224

224:                                              ; preds = %221
  store i32 %222, ptr %104, align 4, !tbaa !22
  %225 = getelementptr inbounds i32, ptr %104, i64 1
  br label %267

226:                                              ; preds = %221
  %227 = ptrtoint ptr %104 to i64
  %228 = ptrtoint ptr %103 to i64
  %229 = sub i64 %227, %228
  %230 = icmp eq i64 %229, 9223372036854775804
  br i1 %230, label %231, label %233

231:                                              ; preds = %226
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %232 unwind label %265

232:                                              ; preds = %231
  unreachable

233:                                              ; preds = %226
  %234 = ashr exact i64 %229, 2
  %235 = tail call i64 @llvm.umax.i64(i64 %234, i64 1)
  %236 = add i64 %235, %234
  %237 = icmp ult i64 %236, %234
  %238 = icmp ugt i64 %236, 2305843009213693951
  %239 = or i1 %237, %238
  %240 = select i1 %239, i64 2305843009213693951, i64 %236
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %245, label %242

242:                                              ; preds = %233
  %243 = shl nuw nsw i64 %240, 2
  %244 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %243) #21
          to label %245 unwind label %263

245:                                              ; preds = %242, %233
  %246 = phi ptr [ null, %233 ], [ %244, %242 ]
  %247 = getelementptr inbounds i32, ptr %246, i64 %234
  store i32 %222, ptr %247, align 4, !tbaa !22
  %248 = icmp sgt i64 %229, 4
  br i1 %248, label %249, label %250, !prof !23

249:                                              ; preds = %245
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %246, ptr align 4 %103, i64 %229, i1 false)
  br label %255

250:                                              ; preds = %245
  %251 = icmp eq i64 %229, 4
  br i1 %251, label %252, label %255

252:                                              ; preds = %250
  %253 = load i32, ptr %103, align 4, !tbaa !22
  store i32 %253, ptr %246, align 4, !tbaa !22
  %254 = getelementptr inbounds i32, ptr %247, i64 1
  br label %258

255:                                              ; preds = %250, %249
  %256 = getelementptr inbounds i32, ptr %247, i64 1
  %257 = icmp eq ptr %103, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %252, %255
  %259 = phi ptr [ %254, %252 ], [ %256, %255 ]
  tail call void @_ZdlPv(ptr noundef nonnull %103) #23
  br label %260

260:                                              ; preds = %258, %255
  %261 = phi ptr [ %256, %255 ], [ %259, %258 ]
  %262 = getelementptr inbounds i32, ptr %246, i64 %240
  br label %267

263:                                              ; preds = %242
  %264 = landingpad { ptr, i32 }
          cleanup
  br label %756

265:                                              ; preds = %231
  %266 = landingpad { ptr, i32 }
          cleanup
  br label %756

267:                                              ; preds = %224, %260, %150
  %268 = phi ptr [ %155, %150 ], [ %106, %260 ], [ %106, %224 ]
  %269 = phi ptr [ %151, %150 ], [ %262, %260 ], [ %105, %224 ]
  %270 = phi ptr [ %152, %150 ], [ %261, %260 ], [ %225, %224 ]
  %271 = phi ptr [ %153, %150 ], [ %246, %260 ], [ %103, %224 ]
  %272 = phi i32 [ %154, %150 ], [ %102, %260 ], [ %102, %224 ]
  %273 = add nuw i32 %101, 1
  %274 = icmp eq i32 %273, %34
  br i1 %274, label %275, label %100

275:                                              ; preds = %267, %211, %90, %41, %43, %158, %44
  %276 = phi ptr [ %35, %44 ], [ %35, %158 ], [ %35, %43 ], [ %42, %41 ], [ %35, %90 ], [ %35, %211 ], [ %35, %267 ]
  %277 = phi ptr [ %32, %44 ], [ %153, %158 ], [ %32, %43 ], [ null, %41 ], [ %93, %90 ], [ %214, %211 ], [ %271, %267 ]
  %278 = load i32, ptr %26, align 4, !tbaa !38
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %291, label %280

280:                                              ; preds = %275
  %281 = load ptr, ptr %276, align 8, !tbaa !21
  %282 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 8
  %283 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %25, i64 0, i32 9
  %284 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %1, i64 0, i32 2
  %285 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %3, i64 0, i32 1
  %286 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %3, i64 0, i32 2
  %287 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %4, i64 0, i32 2
  %288 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %4, i64 0, i32 2, i32 1
  %289 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %4, i64 0, i32 1
  %290 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 1
  br label %295

291:                                              ; preds = %751, %275
  %292 = icmp eq ptr %277, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %291
  tail call void @_ZdlPv(ptr noundef nonnull %277) #23
  br label %294

294:                                              ; preds = %291, %293
  ret void

295:                                              ; preds = %280, %751
  %296 = phi i64 [ 0, %280 ], [ %304, %751 ]
  %297 = phi ptr [ %281, %280 ], [ %752, %751 ]
  %298 = getelementptr inbounds i32, ptr %277, i64 %296
  %299 = load i32, ptr %298, align 4, !tbaa !22
  %300 = icmp eq i32 %299, -1
  %301 = load ptr, ptr %282, align 8, !tbaa !41
  %302 = getelementptr inbounds i64, ptr %301, i64 %296
  %303 = load i64, ptr %302, align 8, !tbaa !42
  %304 = add nuw nsw i64 %296, 1
  %305 = and i64 %303, 4294967295
  %306 = getelementptr inbounds i64, ptr %301, i64 %304
  %307 = load i64, ptr %306, align 8, !tbaa !42
  %308 = icmp ugt i64 %307, %305
  br i1 %300, label %473, label %309

309:                                              ; preds = %295
  br i1 %308, label %310, label %312

310:                                              ; preds = %309
  %311 = trunc i64 %303 to i32
  br label %315

312:                                              ; preds = %425, %309
  br i1 %24, label %751, label %432

313:                                              ; preds = %330
  %314 = landingpad { ptr, i32 }
          cleanup
  br label %760

315:                                              ; preds = %310, %425
  %316 = phi i64 [ %427, %425 ], [ %305, %310 ]
  %317 = phi i32 [ %426, %425 ], [ %311, %310 ]
  %318 = load ptr, ptr %283, align 8, !tbaa !43
  %319 = getelementptr inbounds i32, ptr %318, i64 %316
  %320 = load i32, ptr %319, align 4, !tbaa !22
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds i32, ptr %277, i64 %321
  %323 = load i32, ptr %322, align 4, !tbaa !22
  %324 = icmp eq i32 %323, -1
  br i1 %324, label %342, label %325

325:                                              ; preds = %315
  %326 = load ptr, ptr %284, align 8, !tbaa !50
  %327 = getelementptr inbounds double, ptr %326, i64 %316
  %328 = load double, ptr %327, align 8, !tbaa !52
  %329 = fcmp oeq double %328, 0.000000e+00
  br i1 %329, label %425, label %330

330:                                              ; preds = %325
  %331 = load i32, ptr %298, align 4, !tbaa !22
  %332 = load ptr, ptr %285, align 8, !tbaa !47
  %333 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %332, i32 noundef %331, i32 noundef %323)
          to label %334 unwind label %313

334:                                              ; preds = %330
  %335 = icmp eq i32 %333, -1
  br i1 %335, label %425, label %336

336:                                              ; preds = %334
  %337 = load ptr, ptr %286, align 8, !tbaa !50
  %338 = zext i32 %333 to i64
  %339 = getelementptr inbounds double, ptr %337, i64 %338
  %340 = load double, ptr %339, align 8, !tbaa !52
  %341 = fadd double %328, %340
  store double %341, ptr %339, align 8, !tbaa !52
  br label %425

342:                                              ; preds = %315
  %343 = load ptr, ptr %276, align 8, !tbaa !21
  br label %344

344:                                              ; preds = %344, %342
  %345 = phi ptr [ %343, %342 ], [ %348, %344 ]
  %346 = load i32, ptr %345, align 8, !tbaa !24
  %347 = icmp eq i32 %346, %320
  %348 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 1
  br i1 %347, label %349, label %344

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 0, i32 1
  %351 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %352 = load ptr, ptr %351, align 8, !tbaa !31
  %353 = load ptr, ptr %350, align 8, !tbaa !32
  %354 = icmp eq ptr %352, %353
  br i1 %354, label %355, label %358

355:                                              ; preds = %386, %349
  br i1 %24, label %425, label %396

356:                                              ; preds = %369
  %357 = landingpad { ptr, i32 }
          cleanup
  br label %760

358:                                              ; preds = %349, %386
  %359 = phi ptr [ %390, %386 ], [ %353, %349 ]
  %360 = phi i64 [ %388, %386 ], [ 0, %349 ]
  %361 = phi i32 [ %387, %386 ], [ 0, %349 ]
  %362 = load ptr, ptr %284, align 8, !tbaa !50
  %363 = getelementptr inbounds double, ptr %362, i64 %316
  %364 = load double, ptr %363, align 8, !tbaa !52
  %365 = getelementptr inbounds %"struct.std::pair", ptr %359, i64 %360, i32 1
  %366 = load double, ptr %365, align 8, !tbaa !35
  %367 = fmul double %364, %366
  %368 = fcmp oeq double %367, 0.000000e+00
  br i1 %368, label %386, label %369

369:                                              ; preds = %358
  %370 = getelementptr inbounds %"struct.std::pair", ptr %359, i64 %360
  %371 = load i32, ptr %370, align 8, !tbaa !37
  %372 = zext i32 %371 to i64
  %373 = getelementptr inbounds i32, ptr %277, i64 %372
  %374 = load i32, ptr %373, align 4, !tbaa !22
  %375 = load i32, ptr %298, align 4, !tbaa !22
  %376 = load ptr, ptr %285, align 8, !tbaa !47
  %377 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %376, i32 noundef %375, i32 noundef %374)
          to label %378 unwind label %356

378:                                              ; preds = %369
  %379 = icmp eq i32 %377, -1
  br i1 %379, label %386, label %380

380:                                              ; preds = %378
  %381 = load ptr, ptr %286, align 8, !tbaa !50
  %382 = zext i32 %377 to i64
  %383 = getelementptr inbounds double, ptr %381, i64 %382
  %384 = load double, ptr %383, align 8, !tbaa !52
  %385 = fadd double %367, %384
  store double %385, ptr %383, align 8, !tbaa !52
  br label %386

386:                                              ; preds = %380, %378, %358
  %387 = add i32 %361, 1
  %388 = zext i32 %387 to i64
  %389 = load ptr, ptr %351, align 8, !tbaa !31
  %390 = load ptr, ptr %350, align 8, !tbaa !32
  %391 = ptrtoint ptr %389 to i64
  %392 = ptrtoint ptr %390 to i64
  %393 = sub i64 %391, %392
  %394 = ashr exact i64 %393, 4
  %395 = icmp eq i64 %394, %388
  br i1 %395, label %355, label %358

396:                                              ; preds = %355
  %397 = load ptr, ptr %284, align 8, !tbaa !50
  %398 = getelementptr inbounds double, ptr %397, i64 %316
  %399 = load double, ptr %398, align 8, !tbaa !52
  %400 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %345, i64 0, i32 2
  %401 = load double, ptr %400, align 8, !tbaa !48
  %402 = load i32, ptr %298, align 4, !tbaa !22
  %403 = load i32, ptr %287, align 8, !tbaa !61
  %404 = load ptr, ptr %288, align 8, !tbaa !58
  br label %405

405:                                              ; preds = %405, %396
  %406 = phi i32 [ %403, %396 ], [ %407, %405 ]
  %407 = add i32 %406, -1
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds i32, ptr %404, i64 %408
  %410 = load i32, ptr %409, align 4, !tbaa !22
  %411 = icmp ugt i32 %410, %402
  br i1 %411, label %405, label %412

412:                                              ; preds = %405
  %413 = sub i32 %402, %410
  %414 = zext i32 %413 to i64
  %415 = zext i32 %407 to i64
  %416 = load ptr, ptr %289, align 8, !tbaa !68
  %417 = getelementptr inbounds %"class.dealii::Vector", ptr %416, i64 %415, i32 3
  %418 = load ptr, ptr %417, align 8, !tbaa !49
  %419 = getelementptr inbounds float, ptr %418, i64 %414
  %420 = load float, ptr %419, align 4, !tbaa !33
  %421 = fpext float %420 to double
  %422 = fneg double %399
  %423 = tail call double @llvm.fmuladd.f64(double %422, double %401, double %421)
  %424 = fptrunc double %423 to float
  store float %424, ptr %419, align 4, !tbaa !33
  br label %425

425:                                              ; preds = %355, %412, %336, %334, %325
  %426 = add i32 %317, 1
  %427 = zext i32 %426 to i64
  %428 = load ptr, ptr %282, align 8, !tbaa !41
  %429 = getelementptr inbounds i64, ptr %428, i64 %304
  %430 = load i64, ptr %429, align 8, !tbaa !42
  %431 = icmp ugt i64 %430, %427
  br i1 %431, label %315, label %312

432:                                              ; preds = %312
  %433 = load i32, ptr %6, align 8, !tbaa !61
  %434 = load ptr, ptr %7, align 8, !tbaa !58
  br label %435

435:                                              ; preds = %435, %432
  %436 = phi i32 [ %433, %432 ], [ %437, %435 ]
  %437 = add i32 %436, -1
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds i32, ptr %434, i64 %438
  %440 = load i32, ptr %439, align 4, !tbaa !22
  %441 = zext i32 %440 to i64
  %442 = icmp ult i64 %296, %441
  br i1 %442, label %435, label %443

443:                                              ; preds = %435
  %444 = trunc i64 %296 to i32
  %445 = sub i32 %444, %440
  %446 = zext i32 %445 to i64
  %447 = zext i32 %437 to i64
  %448 = load ptr, ptr %290, align 8, !tbaa !68
  %449 = getelementptr inbounds %"class.dealii::Vector", ptr %448, i64 %447, i32 3
  %450 = load ptr, ptr %449, align 8, !tbaa !49
  %451 = getelementptr inbounds float, ptr %450, i64 %446
  %452 = load float, ptr %451, align 4, !tbaa !33
  %453 = load i32, ptr %298, align 4, !tbaa !22
  %454 = load i32, ptr %287, align 8, !tbaa !61
  %455 = load ptr, ptr %288, align 8, !tbaa !58
  br label %456

456:                                              ; preds = %456, %443
  %457 = phi i32 [ %454, %443 ], [ %458, %456 ]
  %458 = add i32 %457, -1
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds i32, ptr %455, i64 %459
  %461 = load i32, ptr %460, align 4, !tbaa !22
  %462 = icmp ugt i32 %461, %453
  br i1 %462, label %456, label %463

463:                                              ; preds = %456
  %464 = sub i32 %453, %461
  %465 = zext i32 %464 to i64
  %466 = zext i32 %458 to i64
  %467 = load ptr, ptr %289, align 8, !tbaa !68
  %468 = getelementptr inbounds %"class.dealii::Vector", ptr %467, i64 %466, i32 3
  %469 = load ptr, ptr %468, align 8, !tbaa !49
  %470 = getelementptr inbounds float, ptr %469, i64 %465
  %471 = load float, ptr %470, align 4, !tbaa !33
  %472 = fadd float %452, %471
  store float %472, ptr %470, align 4, !tbaa !33
  br label %751

473:                                              ; preds = %295
  br i1 %308, label %474, label %478

474:                                              ; preds = %473
  %475 = trunc i64 %303 to i32
  %476 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1
  %477 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %497

478:                                              ; preds = %694, %473
  br i1 %24, label %749, label %479

479:                                              ; preds = %478
  %480 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1
  %481 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %482 = load ptr, ptr %481, align 8, !tbaa !31
  %483 = load ptr, ptr %480, align 8, !tbaa !32
  %484 = ptrtoint ptr %482 to i64
  %485 = ptrtoint ptr %483 to i64
  %486 = sub i64 %484, %485
  %487 = ashr exact i64 %486, 4
  %488 = icmp eq ptr %482, %483
  br i1 %488, label %749, label %489

489:                                              ; preds = %479
  %490 = load i32, ptr %6, align 8, !tbaa !61
  %491 = load ptr, ptr %7, align 8, !tbaa !58
  %492 = load ptr, ptr %290, align 8, !tbaa !68
  %493 = load i32, ptr %287, align 8, !tbaa !61
  %494 = load ptr, ptr %288, align 8, !tbaa !58
  %495 = load ptr, ptr %289, align 8, !tbaa !68
  %496 = trunc i64 %296 to i32
  br label %701

497:                                              ; preds = %474, %694
  %498 = phi i64 [ %305, %474 ], [ %696, %694 ]
  %499 = phi i32 [ %475, %474 ], [ %695, %694 ]
  %500 = load ptr, ptr %283, align 8, !tbaa !43
  %501 = getelementptr inbounds i32, ptr %500, i64 %498
  %502 = load i32, ptr %501, align 4, !tbaa !22
  %503 = zext i32 %502 to i64
  %504 = getelementptr inbounds i32, ptr %277, i64 %503
  %505 = load i32, ptr %504, align 4, !tbaa !22
  %506 = icmp eq i32 %505, -1
  br i1 %506, label %556, label %507

507:                                              ; preds = %497
  %508 = load ptr, ptr %477, align 8, !tbaa !31
  %509 = load ptr, ptr %476, align 8, !tbaa !32
  %510 = icmp eq ptr %508, %509
  br i1 %510, label %694, label %513

511:                                              ; preds = %524
  %512 = landingpad { ptr, i32 }
          cleanup
  br label %760

513:                                              ; preds = %507, %546
  %514 = phi ptr [ %550, %546 ], [ %509, %507 ]
  %515 = phi i64 [ %548, %546 ], [ 0, %507 ]
  %516 = phi i32 [ %547, %546 ], [ 0, %507 ]
  %517 = load ptr, ptr %284, align 8, !tbaa !50
  %518 = getelementptr inbounds double, ptr %517, i64 %498
  %519 = load double, ptr %518, align 8, !tbaa !52
  %520 = getelementptr inbounds %"struct.std::pair", ptr %514, i64 %515, i32 1
  %521 = load double, ptr %520, align 8, !tbaa !35
  %522 = fmul double %519, %521
  %523 = fcmp oeq double %522, 0.000000e+00
  br i1 %523, label %546, label %524

524:                                              ; preds = %513
  %525 = getelementptr inbounds %"struct.std::pair", ptr %514, i64 %515
  %526 = load ptr, ptr %283, align 8, !tbaa !43
  %527 = getelementptr inbounds i32, ptr %526, i64 %498
  %528 = load i32, ptr %527, align 4, !tbaa !22
  %529 = zext i32 %528 to i64
  %530 = getelementptr inbounds i32, ptr %277, i64 %529
  %531 = load i32, ptr %530, align 4, !tbaa !22
  %532 = load i32, ptr %525, align 8, !tbaa !37
  %533 = zext i32 %532 to i64
  %534 = getelementptr inbounds i32, ptr %277, i64 %533
  %535 = load i32, ptr %534, align 4, !tbaa !22
  %536 = load ptr, ptr %285, align 8, !tbaa !47
  %537 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %536, i32 noundef %535, i32 noundef %531)
          to label %538 unwind label %511

538:                                              ; preds = %524
  %539 = icmp eq i32 %537, -1
  br i1 %539, label %546, label %540

540:                                              ; preds = %538
  %541 = load ptr, ptr %286, align 8, !tbaa !50
  %542 = zext i32 %537 to i64
  %543 = getelementptr inbounds double, ptr %541, i64 %542
  %544 = load double, ptr %543, align 8, !tbaa !52
  %545 = fadd double %522, %544
  store double %545, ptr %543, align 8, !tbaa !52
  br label %546

546:                                              ; preds = %540, %538, %513
  %547 = add i32 %516, 1
  %548 = zext i32 %547 to i64
  %549 = load ptr, ptr %477, align 8, !tbaa !31
  %550 = load ptr, ptr %476, align 8, !tbaa !32
  %551 = ptrtoint ptr %549 to i64
  %552 = ptrtoint ptr %550 to i64
  %553 = sub i64 %551, %552
  %554 = ashr exact i64 %553, 4
  %555 = icmp eq i64 %554, %548
  br i1 %555, label %694, label %513

556:                                              ; preds = %497
  %557 = load ptr, ptr %276, align 8, !tbaa !21
  br label %558

558:                                              ; preds = %558, %556
  %559 = phi ptr [ %557, %556 ], [ %562, %558 ]
  %560 = load i32, ptr %559, align 8, !tbaa !24
  %561 = icmp eq i32 %560, %502
  %562 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %559, i64 1
  br i1 %561, label %563, label %558

563:                                              ; preds = %558
  %564 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %559, i64 0, i32 1
  %565 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %559, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %566 = load ptr, ptr %565, align 8, !tbaa !31
  %567 = load ptr, ptr %564, align 8, !tbaa !32
  %568 = icmp eq ptr %566, %567
  br i1 %568, label %580, label %569

569:                                              ; preds = %563
  %570 = load ptr, ptr %477, align 8, !tbaa !31
  %571 = load ptr, ptr %476, align 8, !tbaa !32
  br label %572

572:                                              ; preds = %569, %602
  %573 = phi ptr [ %603, %602 ], [ %567, %569 ]
  %574 = phi ptr [ %604, %602 ], [ %566, %569 ]
  %575 = phi ptr [ %605, %602 ], [ %571, %569 ]
  %576 = phi ptr [ %606, %602 ], [ %570, %569 ]
  %577 = phi i64 [ %608, %602 ], [ 0, %569 ]
  %578 = phi i32 [ %607, %602 ], [ 0, %569 ]
  %579 = icmp eq ptr %576, %575
  br i1 %579, label %602, label %616

580:                                              ; preds = %602, %563
  br i1 %24, label %694, label %581

581:                                              ; preds = %580
  %582 = load ptr, ptr %477, align 8, !tbaa !31
  %583 = load ptr, ptr %476, align 8, !tbaa !32
  %584 = ptrtoint ptr %582 to i64
  %585 = ptrtoint ptr %583 to i64
  %586 = sub i64 %584, %585
  %587 = ashr exact i64 %586, 4
  %588 = icmp eq ptr %582, %583
  br i1 %588, label %694, label %589

589:                                              ; preds = %581
  %590 = load ptr, ptr %284, align 8, !tbaa !50
  %591 = getelementptr inbounds double, ptr %590, i64 %498
  %592 = load double, ptr %591, align 8, !tbaa !52
  %593 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %559, i64 0, i32 2
  %594 = load double, ptr %593, align 8, !tbaa !48
  %595 = load i32, ptr %287, align 8, !tbaa !61
  %596 = load ptr, ptr %288, align 8, !tbaa !58
  %597 = load ptr, ptr %289, align 8, !tbaa !68
  %598 = fneg double %592
  br label %662

599:                                              ; preds = %652
  %600 = load ptr, ptr %565, align 8, !tbaa !31
  %601 = load ptr, ptr %564, align 8, !tbaa !32
  br label %602

602:                                              ; preds = %599, %572
  %603 = phi ptr [ %601, %599 ], [ %573, %572 ]
  %604 = phi ptr [ %600, %599 ], [ %574, %572 ]
  %605 = phi ptr [ %656, %599 ], [ %575, %572 ]
  %606 = phi ptr [ %655, %599 ], [ %575, %572 ]
  %607 = add i32 %578, 1
  %608 = zext i32 %607 to i64
  %609 = ptrtoint ptr %604 to i64
  %610 = ptrtoint ptr %603 to i64
  %611 = sub i64 %609, %610
  %612 = ashr exact i64 %611, 4
  %613 = icmp eq i64 %612, %608
  br i1 %613, label %580, label %572

614:                                              ; preds = %631
  %615 = landingpad { ptr, i32 }
          cleanup
  br label %760

616:                                              ; preds = %572, %652
  %617 = phi ptr [ %656, %652 ], [ %575, %572 ]
  %618 = phi i64 [ %654, %652 ], [ 0, %572 ]
  %619 = phi i32 [ %653, %652 ], [ 0, %572 ]
  %620 = load ptr, ptr %564, align 8, !tbaa !32
  %621 = load ptr, ptr %284, align 8, !tbaa !50
  %622 = getelementptr inbounds double, ptr %621, i64 %498
  %623 = load double, ptr %622, align 8, !tbaa !52
  %624 = getelementptr inbounds %"struct.std::pair", ptr %617, i64 %618, i32 1
  %625 = load double, ptr %624, align 8, !tbaa !35
  %626 = fmul double %623, %625
  %627 = getelementptr inbounds %"struct.std::pair", ptr %620, i64 %577, i32 1
  %628 = load double, ptr %627, align 8, !tbaa !35
  %629 = fmul double %626, %628
  %630 = fcmp oeq double %629, 0.000000e+00
  br i1 %630, label %652, label %631

631:                                              ; preds = %616
  %632 = getelementptr inbounds %"struct.std::pair", ptr %620, i64 %577
  %633 = getelementptr inbounds %"struct.std::pair", ptr %617, i64 %618
  %634 = load i32, ptr %632, align 8, !tbaa !37
  %635 = zext i32 %634 to i64
  %636 = getelementptr inbounds i32, ptr %277, i64 %635
  %637 = load i32, ptr %636, align 4, !tbaa !22
  %638 = load i32, ptr %633, align 8, !tbaa !37
  %639 = zext i32 %638 to i64
  %640 = getelementptr inbounds i32, ptr %277, i64 %639
  %641 = load i32, ptr %640, align 4, !tbaa !22
  %642 = load ptr, ptr %285, align 8, !tbaa !47
  %643 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %642, i32 noundef %641, i32 noundef %637)
          to label %644 unwind label %614

644:                                              ; preds = %631
  %645 = icmp eq i32 %643, -1
  br i1 %645, label %652, label %646

646:                                              ; preds = %644
  %647 = load ptr, ptr %286, align 8, !tbaa !50
  %648 = zext i32 %643 to i64
  %649 = getelementptr inbounds double, ptr %647, i64 %648
  %650 = load double, ptr %649, align 8, !tbaa !52
  %651 = fadd double %629, %650
  store double %651, ptr %649, align 8, !tbaa !52
  br label %652

652:                                              ; preds = %646, %644, %616
  %653 = add i32 %619, 1
  %654 = zext i32 %653 to i64
  %655 = load ptr, ptr %477, align 8, !tbaa !31
  %656 = load ptr, ptr %476, align 8, !tbaa !32
  %657 = ptrtoint ptr %655 to i64
  %658 = ptrtoint ptr %656 to i64
  %659 = sub i64 %657, %658
  %660 = ashr exact i64 %659, 4
  %661 = icmp eq i64 %660, %654
  br i1 %661, label %599, label %616

662:                                              ; preds = %589, %679
  %663 = phi i64 [ 0, %589 ], [ %692, %679 ]
  %664 = phi i32 [ 0, %589 ], [ %691, %679 ]
  %665 = getelementptr inbounds %"struct.std::pair", ptr %583, i64 %663
  %666 = getelementptr inbounds %"struct.std::pair", ptr %583, i64 %663, i32 1
  %667 = load double, ptr %666, align 8, !tbaa !35
  %668 = load i32, ptr %665, align 8, !tbaa !37
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds i32, ptr %277, i64 %669
  %671 = load i32, ptr %670, align 4, !tbaa !22
  br label %672

672:                                              ; preds = %672, %662
  %673 = phi i32 [ %595, %662 ], [ %674, %672 ]
  %674 = add i32 %673, -1
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds i32, ptr %596, i64 %675
  %677 = load i32, ptr %676, align 4, !tbaa !22
  %678 = icmp ugt i32 %677, %671
  br i1 %678, label %672, label %679

679:                                              ; preds = %672
  %680 = sub i32 %671, %677
  %681 = zext i32 %680 to i64
  %682 = zext i32 %674 to i64
  %683 = getelementptr inbounds %"class.dealii::Vector", ptr %597, i64 %682, i32 3
  %684 = load ptr, ptr %683, align 8, !tbaa !49
  %685 = getelementptr inbounds float, ptr %684, i64 %681
  %686 = load float, ptr %685, align 4, !tbaa !33
  %687 = fpext float %686 to double
  %688 = fmul double %667, %598
  %689 = tail call double @llvm.fmuladd.f64(double %688, double %594, double %687)
  %690 = fptrunc double %689 to float
  store float %690, ptr %685, align 4, !tbaa !33
  %691 = add i32 %664, 1
  %692 = zext i32 %691 to i64
  %693 = icmp eq i64 %587, %692
  br i1 %693, label %694, label %662

694:                                              ; preds = %546, %679, %507, %581, %580
  %695 = add i32 %499, 1
  %696 = zext i32 %695 to i64
  %697 = load ptr, ptr %282, align 8, !tbaa !41
  %698 = getelementptr inbounds i64, ptr %697, i64 %304
  %699 = load i64, ptr %698, align 8, !tbaa !42
  %700 = icmp ugt i64 %699, %696
  br i1 %700, label %497, label %478

701:                                              ; preds = %489, %734
  %702 = phi i64 [ 0, %489 ], [ %747, %734 ]
  %703 = phi i32 [ 0, %489 ], [ %746, %734 ]
  br label %704

704:                                              ; preds = %704, %701
  %705 = phi i32 [ %490, %701 ], [ %706, %704 ]
  %706 = add i32 %705, -1
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds i32, ptr %491, i64 %707
  %709 = load i32, ptr %708, align 4, !tbaa !22
  %710 = zext i32 %709 to i64
  %711 = icmp ult i64 %296, %710
  br i1 %711, label %704, label %712

712:                                              ; preds = %704
  %713 = sub i32 %496, %709
  %714 = zext i32 %713 to i64
  %715 = zext i32 %706 to i64
  %716 = getelementptr inbounds %"class.dealii::Vector", ptr %492, i64 %715, i32 3
  %717 = load ptr, ptr %716, align 8, !tbaa !49
  %718 = getelementptr inbounds float, ptr %717, i64 %714
  %719 = load float, ptr %718, align 4, !tbaa !33
  %720 = getelementptr inbounds %"struct.std::pair", ptr %483, i64 %702
  %721 = getelementptr inbounds %"struct.std::pair", ptr %483, i64 %702, i32 1
  %722 = load double, ptr %721, align 8, !tbaa !35
  %723 = load i32, ptr %720, align 8, !tbaa !37
  %724 = zext i32 %723 to i64
  %725 = getelementptr inbounds i32, ptr %277, i64 %724
  %726 = load i32, ptr %725, align 4, !tbaa !22
  br label %727

727:                                              ; preds = %727, %712
  %728 = phi i32 [ %493, %712 ], [ %729, %727 ]
  %729 = add i32 %728, -1
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds i32, ptr %494, i64 %730
  %732 = load i32, ptr %731, align 4, !tbaa !22
  %733 = icmp ugt i32 %732, %726
  br i1 %733, label %727, label %734

734:                                              ; preds = %727
  %735 = sub i32 %726, %732
  %736 = zext i32 %735 to i64
  %737 = zext i32 %729 to i64
  %738 = getelementptr inbounds %"class.dealii::Vector", ptr %495, i64 %737, i32 3
  %739 = load ptr, ptr %738, align 8, !tbaa !49
  %740 = getelementptr inbounds float, ptr %739, i64 %736
  %741 = fpext float %719 to double
  %742 = load float, ptr %740, align 4, !tbaa !33
  %743 = fpext float %742 to double
  %744 = tail call double @llvm.fmuladd.f64(double %741, double %722, double %743)
  %745 = fptrunc double %744 to float
  store float %745, ptr %740, align 4, !tbaa !33
  %746 = add i32 %703, 1
  %747 = zext i32 %746 to i64
  %748 = icmp eq i64 %487, %747
  br i1 %748, label %749, label %701

749:                                              ; preds = %734, %479, %478
  %750 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %297, i64 1
  br label %751

751:                                              ; preds = %749, %463, %312
  %752 = phi ptr [ %750, %749 ], [ %297, %463 ], [ %297, %312 ]
  %753 = load i32, ptr %26, align 4, !tbaa !38
  %754 = zext i32 %753 to i64
  %755 = icmp ult i64 %304, %754
  br i1 %755, label %295, label %291

756:                                              ; preds = %263, %265, %217, %219, %161, %163, %96, %98
  %757 = phi ptr [ %47, %96 ], [ %47, %98 ], [ %103, %161 ], [ %103, %163 ], [ %167, %217 ], [ %167, %219 ], [ %103, %263 ], [ %103, %265 ]
  %758 = phi { ptr, i32 } [ %97, %96 ], [ %99, %98 ], [ %162, %161 ], [ %164, %163 ], [ %218, %217 ], [ %220, %219 ], [ %264, %263 ], [ %266, %265 ]
  %759 = icmp eq ptr %757, null
  br i1 %759, label %763, label %760

760:                                              ; preds = %614, %356, %313, %511, %756
  %761 = phi { ptr, i32 } [ %758, %756 ], [ %615, %614 ], [ %357, %356 ], [ %512, %511 ], [ %314, %313 ]
  %762 = phi ptr [ %757, %756 ], [ %277, %614 ], [ %277, %356 ], [ %277, %511 ], [ %277, %313 ]
  tail call void @_ZdlPv(ptr noundef nonnull %762) #23
  br label %763

763:                                              ; preds = %760, %756
  %764 = phi { ptr, i32 } [ %758, %756 ], [ %761, %760 ]
  resume { ptr, i32 } %764
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8set_zeroINS_11BlockVectorIfEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %34, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 2
  %10 = load i32, ptr %9, align 8, !tbaa !61
  %11 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 2, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !58
  %13 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !68
  br label %15

15:                                               ; preds = %8, %25
  %16 = phi ptr [ %4, %8 ], [ %32, %25 ]
  %17 = load i32, ptr %16, align 8, !tbaa !24
  br label %18

18:                                               ; preds = %18, %15
  %19 = phi i32 [ %10, %15 ], [ %20, %18 ]
  %20 = add i32 %19, -1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, ptr %12, i64 %21
  %23 = load i32, ptr %22, align 4, !tbaa !22
  %24 = icmp ugt i32 %23, %17
  br i1 %24, label %18, label %25

25:                                               ; preds = %18
  %26 = sub i32 %17, %23
  %27 = zext i32 %26 to i64
  %28 = zext i32 %20 to i64
  %29 = getelementptr inbounds %"class.dealii::Vector", ptr %14, i64 %28, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !49
  %31 = getelementptr inbounds float, ptr %30, i64 %27
  store float 0.000000e+00, ptr %31, align 4, !tbaa !33
  %32 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 1
  %33 = icmp eq ptr %32, %6
  br i1 %33, label %34, label %15

34:                                               ; preds = %25, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_11BlockVectorIfEEEEvRKNS_6VectorIdEERKSt6vectorIjSaIjEERT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(128) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !53
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !55
  %12 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %13 = load i32, ptr %12, align 8, !tbaa !57
  %14 = load ptr, ptr %9, align 8, !tbaa !55
  %15 = ptrtoint ptr %11 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = shl nsw i64 %17, 3
  %19 = zext i32 %13 to i64
  %20 = add nsw i64 %18, %19
  %21 = load ptr, ptr %2, align 8, !tbaa !58
  %22 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %3, i64 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %3, i64 0, i32 2, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %3, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = ptrtoint ptr %33 to i64
  %35 = ptrtoint ptr %31 to i64
  %36 = sub i64 %34, %35
  %37 = icmp sgt i64 %36, 0
  %38 = udiv exact i64 %36, 40
  %39 = zext i32 %6 to i64
  br label %41

40:                                               ; preds = %147, %4
  ret void

41:                                               ; preds = %8, %147
  %42 = phi i64 [ 0, %8 ], [ %148, %147 ]
  %43 = getelementptr inbounds i32, ptr %21, i64 %42
  %44 = load i32, ptr %43, align 4, !tbaa !22
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %20, %45
  br i1 %46, label %57, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds double, ptr %23, i64 %42
  %49 = load double, ptr %48, align 8, !tbaa !52
  br label %50

50:                                               ; preds = %50, %47
  %51 = phi i32 [ %25, %47 ], [ %52, %50 ]
  %52 = add i32 %51, -1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, ptr %27, i64 %53
  %55 = load i32, ptr %54, align 4, !tbaa !22
  %56 = icmp ugt i32 %55, %44
  br i1 %56, label %50, label %133

57:                                               ; preds = %41
  %58 = lshr i32 %44, 6
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i64, ptr %14, i64 %59
  %61 = and i32 %44, 63
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 1, %62
  %64 = load i64, ptr %60, align 8, !tbaa !42
  %65 = and i64 %64, %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %77

67:                                               ; preds = %57
  %68 = getelementptr inbounds double, ptr %23, i64 %42
  %69 = load double, ptr %68, align 8, !tbaa !52
  br label %70

70:                                               ; preds = %70, %67
  %71 = phi i32 [ %25, %67 ], [ %72, %70 ]
  %72 = add i32 %71, -1
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, ptr %27, i64 %73
  %75 = load i32, ptr %74, align 4, !tbaa !22
  %76 = icmp ugt i32 %75, %44
  br i1 %76, label %70, label %133

77:                                               ; preds = %57
  br i1 %37, label %78, label %91

78:                                               ; preds = %77, %78
  %79 = phi i64 [ %89, %78 ], [ %38, %77 ]
  %80 = phi ptr [ %88, %78 ], [ %31, %77 ]
  %81 = lshr i64 %79, 1
  %82 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %80, i64 %81
  %83 = load i32, ptr %82, align 8, !tbaa !24
  %84 = icmp ult i32 %83, %44
  %85 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %82, i64 1
  %86 = xor i64 %81, -1
  %87 = add nsw i64 %79, %86
  %88 = select i1 %84, ptr %85, ptr %80
  %89 = select i1 %84, i64 %87, i64 %81
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %78, label %91

91:                                               ; preds = %78, %77
  %92 = phi ptr [ %31, %77 ], [ %88, %78 ]
  %93 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %92, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %92, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %95 = load ptr, ptr %94, align 8, !tbaa !31
  %96 = load ptr, ptr %93, align 8, !tbaa !32
  %97 = ptrtoint ptr %95 to i64
  %98 = ptrtoint ptr %96 to i64
  %99 = sub i64 %97, %98
  %100 = ashr exact i64 %99, 4
  %101 = icmp eq ptr %95, %96
  br i1 %101, label %147, label %102

102:                                              ; preds = %91
  %103 = getelementptr inbounds double, ptr %23, i64 %42
  %104 = load double, ptr %103, align 8, !tbaa !52
  br label %105

105:                                              ; preds = %102, %119
  %106 = phi i64 [ 0, %102 ], [ %131, %119 ]
  %107 = phi i32 [ 0, %102 ], [ %130, %119 ]
  %108 = getelementptr inbounds %"struct.std::pair", ptr %96, i64 %106
  %109 = getelementptr inbounds %"struct.std::pair", ptr %96, i64 %106, i32 1
  %110 = load double, ptr %109, align 8, !tbaa !35
  %111 = load i32, ptr %108, align 8, !tbaa !37
  br label %112

112:                                              ; preds = %112, %105
  %113 = phi i32 [ %25, %105 ], [ %114, %112 ]
  %114 = add i32 %113, -1
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i32, ptr %27, i64 %115
  %117 = load i32, ptr %116, align 4, !tbaa !22
  %118 = icmp ugt i32 %117, %111
  br i1 %118, label %112, label %119

119:                                              ; preds = %112
  %120 = sub i32 %111, %117
  %121 = zext i32 %120 to i64
  %122 = zext i32 %114 to i64
  %123 = getelementptr inbounds %"class.dealii::Vector", ptr %29, i64 %122, i32 3
  %124 = load ptr, ptr %123, align 8, !tbaa !49
  %125 = getelementptr inbounds float, ptr %124, i64 %121
  %126 = load float, ptr %125, align 4, !tbaa !33
  %127 = fpext float %126 to double
  %128 = tail call double @llvm.fmuladd.f64(double %104, double %110, double %127)
  %129 = fptrunc double %128 to float
  store float %129, ptr %125, align 4, !tbaa !33
  %130 = add i32 %107, 1
  %131 = zext i32 %130 to i64
  %132 = icmp ugt i64 %100, %131
  br i1 %132, label %105, label %147

133:                                              ; preds = %50, %70
  %134 = phi i32 [ %75, %70 ], [ %55, %50 ]
  %135 = phi i32 [ %72, %70 ], [ %52, %50 ]
  %136 = phi double [ %69, %70 ], [ %49, %50 ]
  %137 = sub i32 %44, %134
  %138 = zext i32 %137 to i64
  %139 = zext i32 %135 to i64
  %140 = getelementptr inbounds %"class.dealii::Vector", ptr %29, i64 %139, i32 3
  %141 = load ptr, ptr %140, align 8, !tbaa !49
  %142 = getelementptr inbounds float, ptr %141, i64 %138
  %143 = load float, ptr %142, align 4, !tbaa !33
  %144 = fpext float %143 to double
  %145 = fadd double %136, %144
  %146 = fptrunc double %145 to float
  store float %146, ptr %142, align 4, !tbaa !33
  br label %147

147:                                              ; preds = %119, %133, %91
  %148 = add nuw nsw i64 %42, 1
  %149 = icmp eq i64 %148, %39
  br i1 %149, label %40, label %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix10distributeINS_11BlockVectorIfEEEEvRKT_RS4_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(128) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 2
  %5 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 2, i32 1
  %6 = load i32, ptr %4, align 8, !tbaa !61
  %7 = zext i32 %6 to i64
  %8 = load ptr, ptr %5, align 8, !tbaa !58
  %9 = getelementptr inbounds i32, ptr %8, i64 %7
  %10 = load i32, ptr %9, align 4, !tbaa !22
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %3
  %13 = zext i32 %10 to i64
  %14 = shl nuw nsw i64 %13, 2
  %15 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %14) #21
  %16 = getelementptr inbounds i32, ptr %15, i64 %13
  %17 = load i32, ptr %9, align 4, !tbaa !22
  %18 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !21
  %20 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !21
  %22 = icmp eq ptr %19, %21
  %23 = icmp eq i32 %17, 0
  br i1 %22, label %27, label %26

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %258

26:                                               ; preds = %12
  br i1 %23, label %258, label %83

27:                                               ; preds = %12
  br i1 %23, label %258, label %28

28:                                               ; preds = %27, %73
  %29 = phi i32 [ %77, %73 ], [ 0, %27 ]
  %30 = phi ptr [ %76, %73 ], [ %15, %27 ]
  %31 = phi ptr [ %75, %73 ], [ %15, %27 ]
  %32 = phi ptr [ %74, %73 ], [ %16, %27 ]
  %33 = icmp eq ptr %31, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  store i32 %29, ptr %31, align 4, !tbaa !22
  %35 = getelementptr inbounds i32, ptr %31, i64 1
  br label %73

36:                                               ; preds = %28
  %37 = ptrtoint ptr %31 to i64
  %38 = ptrtoint ptr %30 to i64
  %39 = sub i64 %37, %38
  %40 = icmp eq i64 %39, 9223372036854775804
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %42 unwind label %81

42:                                               ; preds = %41
  unreachable

43:                                               ; preds = %36
  %44 = ashr exact i64 %39, 2
  %45 = tail call i64 @llvm.umax.i64(i64 %44, i64 1)
  %46 = add i64 %45, %44
  %47 = icmp ult i64 %46, %44
  %48 = icmp ugt i64 %46, 2305843009213693951
  %49 = or i1 %47, %48
  %50 = select i1 %49, i64 2305843009213693951, i64 %46
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = shl nuw nsw i64 %50, 2
  %54 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %53) #21
          to label %55 unwind label %79

55:                                               ; preds = %52, %43
  %56 = phi ptr [ null, %43 ], [ %54, %52 ]
  %57 = getelementptr inbounds i32, ptr %56, i64 %44
  store i32 %29, ptr %57, align 4, !tbaa !22
  %58 = icmp sgt i64 %39, 4
  br i1 %58, label %59, label %60, !prof !23

59:                                               ; preds = %55
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %56, ptr align 4 %30, i64 %39, i1 false)
  br label %65

60:                                               ; preds = %55
  %61 = icmp eq i64 %39, 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %60
  %63 = load i32, ptr %30, align 4, !tbaa !22
  store i32 %63, ptr %56, align 4, !tbaa !22
  %64 = getelementptr inbounds i32, ptr %57, i64 1
  br label %68

65:                                               ; preds = %60, %59
  %66 = getelementptr inbounds i32, ptr %57, i64 1
  %67 = icmp eq ptr %30, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %62, %65
  %69 = phi ptr [ %64, %62 ], [ %66, %65 ]
  tail call void @_ZdlPv(ptr noundef nonnull %30) #23
  br label %70

70:                                               ; preds = %68, %65
  %71 = phi ptr [ %66, %65 ], [ %69, %68 ]
  %72 = getelementptr inbounds i32, ptr %56, i64 %50
  br label %73

73:                                               ; preds = %70, %34
  %74 = phi ptr [ %72, %70 ], [ %32, %34 ]
  %75 = phi ptr [ %71, %70 ], [ %35, %34 ]
  %76 = phi ptr [ %56, %70 ], [ %30, %34 ]
  %77 = add nuw i32 %29, 1
  %78 = icmp eq i32 %77, %17
  br i1 %78, label %258, label %28

79:                                               ; preds = %52
  %80 = landingpad { ptr, i32 }
          cleanup
  br label %402

81:                                               ; preds = %41
  %82 = landingpad { ptr, i32 }
          cleanup
  br label %402

83:                                               ; preds = %26, %250
  %84 = phi i32 [ %256, %250 ], [ 0, %26 ]
  %85 = phi i32 [ %255, %250 ], [ 0, %26 ]
  %86 = phi ptr [ %254, %250 ], [ %15, %26 ]
  %87 = phi ptr [ %253, %250 ], [ %15, %26 ]
  %88 = phi ptr [ %252, %250 ], [ %16, %26 ]
  %89 = phi ptr [ %251, %250 ], [ %19, %26 ]
  %90 = load i32, ptr %89, align 8, !tbaa !24
  %91 = icmp eq i32 %84, %90
  br i1 %91, label %92, label %204

92:                                               ; preds = %83
  %93 = icmp eq ptr %87, %88
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  store i32 -1, ptr %87, align 4, !tbaa !22
  %95 = getelementptr inbounds i32, ptr %87, i64 1
  br label %133

96:                                               ; preds = %92
  %97 = ptrtoint ptr %87 to i64
  %98 = ptrtoint ptr %86 to i64
  %99 = sub i64 %97, %98
  %100 = icmp eq i64 %99, 9223372036854775804
  br i1 %100, label %101, label %103

101:                                              ; preds = %96
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %102 unwind label %146

102:                                              ; preds = %101
  unreachable

103:                                              ; preds = %96
  %104 = ashr exact i64 %99, 2
  %105 = tail call i64 @llvm.umax.i64(i64 %104, i64 1)
  %106 = add i64 %105, %104
  %107 = icmp ult i64 %106, %104
  %108 = icmp ugt i64 %106, 2305843009213693951
  %109 = or i1 %107, %108
  %110 = select i1 %109, i64 2305843009213693951, i64 %106
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %103
  %113 = shl nuw nsw i64 %110, 2
  %114 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %113) #21
          to label %115 unwind label %144

115:                                              ; preds = %112, %103
  %116 = phi ptr [ null, %103 ], [ %114, %112 ]
  %117 = getelementptr inbounds i32, ptr %116, i64 %104
  store i32 -1, ptr %117, align 4, !tbaa !22
  %118 = icmp sgt i64 %99, 4
  br i1 %118, label %119, label %120, !prof !23

119:                                              ; preds = %115
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %116, ptr align 4 %86, i64 %99, i1 false)
  br label %125

120:                                              ; preds = %115
  %121 = icmp eq i64 %99, 4
  br i1 %121, label %122, label %125

122:                                              ; preds = %120
  %123 = load i32, ptr %86, align 4, !tbaa !22
  store i32 %123, ptr %116, align 4, !tbaa !22
  %124 = getelementptr inbounds i32, ptr %117, i64 1
  br label %128

125:                                              ; preds = %120, %119
  %126 = getelementptr inbounds i32, ptr %117, i64 1
  %127 = icmp eq ptr %86, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %122, %125
  %129 = phi ptr [ %124, %122 ], [ %126, %125 ]
  tail call void @_ZdlPv(ptr noundef nonnull %86) #23
  br label %130

130:                                              ; preds = %128, %125
  %131 = phi ptr [ %126, %125 ], [ %129, %128 ]
  %132 = getelementptr inbounds i32, ptr %116, i64 %110
  br label %133

133:                                              ; preds = %94, %130
  %134 = phi ptr [ %132, %130 ], [ %88, %94 ]
  %135 = phi ptr [ %131, %130 ], [ %95, %94 ]
  %136 = phi ptr [ %116, %130 ], [ %86, %94 ]
  %137 = add i32 %85, 1
  %138 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %89, i64 1
  %139 = load ptr, ptr %20, align 8, !tbaa !21
  %140 = icmp eq ptr %138, %139
  br i1 %140, label %141, label %250

141:                                              ; preds = %133
  %142 = add i32 %84, 1
  %143 = icmp ult i32 %142, %17
  br i1 %143, label %148, label %258

144:                                              ; preds = %112
  %145 = landingpad { ptr, i32 }
          cleanup
  br label %402

146:                                              ; preds = %101
  %147 = landingpad { ptr, i32 }
          cleanup
  br label %402

148:                                              ; preds = %141, %194
  %149 = phi i32 [ %198, %194 ], [ %142, %141 ]
  %150 = phi ptr [ %197, %194 ], [ %136, %141 ]
  %151 = phi ptr [ %196, %194 ], [ %135, %141 ]
  %152 = phi ptr [ %195, %194 ], [ %134, %141 ]
  %153 = sub i32 %149, %137
  %154 = icmp eq ptr %151, %152
  br i1 %154, label %157, label %155

155:                                              ; preds = %148
  store i32 %153, ptr %151, align 4, !tbaa !22
  %156 = getelementptr inbounds i32, ptr %151, i64 1
  br label %194

157:                                              ; preds = %148
  %158 = ptrtoint ptr %151 to i64
  %159 = ptrtoint ptr %150 to i64
  %160 = sub i64 %158, %159
  %161 = icmp eq i64 %160, 9223372036854775804
  br i1 %161, label %162, label %164

162:                                              ; preds = %157
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %163 unwind label %202

163:                                              ; preds = %162
  unreachable

164:                                              ; preds = %157
  %165 = ashr exact i64 %160, 2
  %166 = tail call i64 @llvm.umax.i64(i64 %165, i64 1)
  %167 = add i64 %166, %165
  %168 = icmp ult i64 %167, %165
  %169 = icmp ugt i64 %167, 2305843009213693951
  %170 = or i1 %168, %169
  %171 = select i1 %170, i64 2305843009213693951, i64 %167
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %176, label %173

173:                                              ; preds = %164
  %174 = shl nuw nsw i64 %171, 2
  %175 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %174) #21
          to label %176 unwind label %200

176:                                              ; preds = %173, %164
  %177 = phi ptr [ null, %164 ], [ %175, %173 ]
  %178 = getelementptr inbounds i32, ptr %177, i64 %165
  store i32 %153, ptr %178, align 4, !tbaa !22
  %179 = icmp sgt i64 %160, 4
  br i1 %179, label %180, label %181, !prof !23

180:                                              ; preds = %176
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %177, ptr align 4 %150, i64 %160, i1 false)
  br label %186

181:                                              ; preds = %176
  %182 = icmp eq i64 %160, 4
  br i1 %182, label %183, label %186

183:                                              ; preds = %181
  %184 = load i32, ptr %150, align 4, !tbaa !22
  store i32 %184, ptr %177, align 4, !tbaa !22
  %185 = getelementptr inbounds i32, ptr %178, i64 1
  br label %189

186:                                              ; preds = %181, %180
  %187 = getelementptr inbounds i32, ptr %178, i64 1
  %188 = icmp eq ptr %150, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %183, %186
  %190 = phi ptr [ %185, %183 ], [ %187, %186 ]
  tail call void @_ZdlPv(ptr noundef nonnull %150) #23
  br label %191

191:                                              ; preds = %189, %186
  %192 = phi ptr [ %187, %186 ], [ %190, %189 ]
  %193 = getelementptr inbounds i32, ptr %177, i64 %171
  br label %194

194:                                              ; preds = %191, %155
  %195 = phi ptr [ %193, %191 ], [ %152, %155 ]
  %196 = phi ptr [ %192, %191 ], [ %156, %155 ]
  %197 = phi ptr [ %177, %191 ], [ %150, %155 ]
  %198 = add nuw i32 %149, 1
  %199 = icmp eq i32 %198, %17
  br i1 %199, label %258, label %148

200:                                              ; preds = %173
  %201 = landingpad { ptr, i32 }
          cleanup
  br label %402

202:                                              ; preds = %162
  %203 = landingpad { ptr, i32 }
          cleanup
  br label %402

204:                                              ; preds = %83
  %205 = sub i32 %84, %85
  %206 = icmp eq ptr %87, %88
  br i1 %206, label %209, label %207

207:                                              ; preds = %204
  store i32 %205, ptr %87, align 4, !tbaa !22
  %208 = getelementptr inbounds i32, ptr %87, i64 1
  br label %250

209:                                              ; preds = %204
  %210 = ptrtoint ptr %87 to i64
  %211 = ptrtoint ptr %86 to i64
  %212 = sub i64 %210, %211
  %213 = icmp eq i64 %212, 9223372036854775804
  br i1 %213, label %214, label %216

214:                                              ; preds = %209
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %215 unwind label %248

215:                                              ; preds = %214
  unreachable

216:                                              ; preds = %209
  %217 = ashr exact i64 %212, 2
  %218 = tail call i64 @llvm.umax.i64(i64 %217, i64 1)
  %219 = add i64 %218, %217
  %220 = icmp ult i64 %219, %217
  %221 = icmp ugt i64 %219, 2305843009213693951
  %222 = or i1 %220, %221
  %223 = select i1 %222, i64 2305843009213693951, i64 %219
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %228, label %225

225:                                              ; preds = %216
  %226 = shl nuw nsw i64 %223, 2
  %227 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %226) #21
          to label %228 unwind label %246

228:                                              ; preds = %225, %216
  %229 = phi ptr [ null, %216 ], [ %227, %225 ]
  %230 = getelementptr inbounds i32, ptr %229, i64 %217
  store i32 %205, ptr %230, align 4, !tbaa !22
  %231 = icmp sgt i64 %212, 4
  br i1 %231, label %232, label %233, !prof !23

232:                                              ; preds = %228
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %229, ptr align 4 %86, i64 %212, i1 false)
  br label %238

233:                                              ; preds = %228
  %234 = icmp eq i64 %212, 4
  br i1 %234, label %235, label %238

235:                                              ; preds = %233
  %236 = load i32, ptr %86, align 4, !tbaa !22
  store i32 %236, ptr %229, align 4, !tbaa !22
  %237 = getelementptr inbounds i32, ptr %230, i64 1
  br label %241

238:                                              ; preds = %233, %232
  %239 = getelementptr inbounds i32, ptr %230, i64 1
  %240 = icmp eq ptr %86, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %235, %238
  %242 = phi ptr [ %237, %235 ], [ %239, %238 ]
  tail call void @_ZdlPv(ptr noundef nonnull %86) #23
  br label %243

243:                                              ; preds = %241, %238
  %244 = phi ptr [ %239, %238 ], [ %242, %241 ]
  %245 = getelementptr inbounds i32, ptr %229, i64 %223
  br label %250

246:                                              ; preds = %225
  %247 = landingpad { ptr, i32 }
          cleanup
  br label %402

248:                                              ; preds = %214
  %249 = landingpad { ptr, i32 }
          cleanup
  br label %402

250:                                              ; preds = %207, %243, %133
  %251 = phi ptr [ %138, %133 ], [ %89, %243 ], [ %89, %207 ]
  %252 = phi ptr [ %134, %133 ], [ %245, %243 ], [ %88, %207 ]
  %253 = phi ptr [ %135, %133 ], [ %244, %243 ], [ %208, %207 ]
  %254 = phi ptr [ %136, %133 ], [ %229, %243 ], [ %86, %207 ]
  %255 = phi i32 [ %137, %133 ], [ %85, %243 ], [ %85, %207 ]
  %256 = add nuw i32 %84, 1
  %257 = icmp eq i32 %256, %17
  br i1 %257, label %258, label %83

258:                                              ; preds = %250, %194, %73, %24, %26, %141, %27
  %259 = phi ptr [ %18, %27 ], [ %18, %141 ], [ %18, %26 ], [ %25, %24 ], [ %18, %73 ], [ %18, %194 ], [ %18, %250 ]
  %260 = phi ptr [ %15, %27 ], [ %136, %141 ], [ %15, %26 ], [ null, %24 ], [ %76, %73 ], [ %197, %194 ], [ %254, %250 ]
  %261 = load i32, ptr %4, align 8, !tbaa !61
  %262 = zext i32 %261 to i64
  %263 = load ptr, ptr %5, align 8, !tbaa !58
  %264 = getelementptr inbounds i32, ptr %263, i64 %262
  %265 = load i32, ptr %264, align 4, !tbaa !22
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %278, label %267

267:                                              ; preds = %258
  %268 = load ptr, ptr %259, align 8, !tbaa !21
  %269 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 2
  %270 = load i32, ptr %269, align 8
  %271 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 2, i32 1
  %272 = load ptr, ptr %271, align 8
  %273 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 1
  %274 = load ptr, ptr %273, align 8
  %275 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 1
  %276 = load ptr, ptr %275, align 8
  %277 = zext i32 %265 to i64
  br label %282

278:                                              ; preds = %398, %258
  %279 = icmp eq ptr %260, null
  br i1 %279, label %281, label %280

280:                                              ; preds = %278
  tail call void @_ZdlPv(ptr noundef nonnull %260) #23
  br label %281

281:                                              ; preds = %278, %280
  ret void

282:                                              ; preds = %267, %398
  %283 = phi i64 [ 0, %267 ], [ %400, %398 ]
  %284 = phi ptr [ %268, %267 ], [ %399, %398 ]
  %285 = getelementptr inbounds i32, ptr %260, i64 %283
  %286 = load i32, ptr %285, align 4, !tbaa !22
  %287 = icmp eq i32 %286, -1
  br i1 %287, label %319, label %288

288:                                              ; preds = %282, %288
  %289 = phi i32 [ %290, %288 ], [ %270, %282 ]
  %290 = add i32 %289, -1
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds i32, ptr %272, i64 %291
  %293 = load i32, ptr %292, align 4, !tbaa !22
  %294 = icmp ugt i32 %293, %286
  br i1 %294, label %288, label %295

295:                                              ; preds = %288
  %296 = sub i32 %286, %293
  %297 = zext i32 %296 to i64
  %298 = zext i32 %290 to i64
  %299 = getelementptr inbounds %"class.dealii::Vector", ptr %274, i64 %298, i32 3
  %300 = load ptr, ptr %299, align 8, !tbaa !49
  %301 = getelementptr inbounds float, ptr %300, i64 %297
  %302 = load float, ptr %301, align 4, !tbaa !33
  br label %303

303:                                              ; preds = %303, %295
  %304 = phi i32 [ %261, %295 ], [ %305, %303 ]
  %305 = add i32 %304, -1
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds i32, ptr %263, i64 %306
  %308 = load i32, ptr %307, align 4, !tbaa !22
  %309 = zext i32 %308 to i64
  %310 = icmp ult i64 %283, %309
  br i1 %310, label %303, label %311

311:                                              ; preds = %303
  %312 = trunc i64 %283 to i32
  %313 = sub i32 %312, %308
  %314 = zext i32 %313 to i64
  %315 = zext i32 %305 to i64
  %316 = getelementptr inbounds %"class.dealii::Vector", ptr %276, i64 %315, i32 3
  %317 = load ptr, ptr %316, align 8, !tbaa !49
  %318 = getelementptr inbounds float, ptr %317, i64 %314
  store float %302, ptr %318, align 4, !tbaa !33
  br label %398

319:                                              ; preds = %282
  %320 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 0, i32 2
  %321 = load double, ptr %320, align 8, !tbaa !48
  br label %322

322:                                              ; preds = %322, %319
  %323 = phi i32 [ %261, %319 ], [ %324, %322 ]
  %324 = add i32 %323, -1
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i32, ptr %263, i64 %325
  %327 = load i32, ptr %326, align 4, !tbaa !22
  %328 = zext i32 %327 to i64
  %329 = icmp ult i64 %283, %328
  br i1 %329, label %322, label %330

330:                                              ; preds = %322
  %331 = trunc i64 %283 to i32
  %332 = sub i32 %331, %327
  %333 = zext i32 %332 to i64
  %334 = zext i32 %324 to i64
  %335 = getelementptr inbounds %"class.dealii::Vector", ptr %276, i64 %334, i32 3
  %336 = load ptr, ptr %335, align 8, !tbaa !49
  %337 = getelementptr inbounds float, ptr %336, i64 %333
  %338 = fptrunc double %321 to float
  store float %338, ptr %337, align 4, !tbaa !33
  %339 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %341 = load ptr, ptr %340, align 8, !tbaa !31
  %342 = load ptr, ptr %339, align 8, !tbaa !32
  %343 = ptrtoint ptr %341 to i64
  %344 = ptrtoint ptr %342 to i64
  %345 = sub i64 %343, %344
  %346 = ashr exact i64 %345, 4
  %347 = icmp eq ptr %341, %342
  br i1 %347, label %348, label %350

348:                                              ; preds = %383, %330
  %349 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 1
  br label %398

350:                                              ; preds = %330, %383
  %351 = phi i64 [ %396, %383 ], [ 0, %330 ]
  %352 = phi i32 [ %395, %383 ], [ 0, %330 ]
  %353 = getelementptr inbounds %"struct.std::pair", ptr %342, i64 %351
  %354 = load i32, ptr %353, align 8, !tbaa !37
  %355 = zext i32 %354 to i64
  %356 = getelementptr inbounds i32, ptr %260, i64 %355
  %357 = load i32, ptr %356, align 4, !tbaa !22
  br label %358

358:                                              ; preds = %358, %350
  %359 = phi i32 [ %270, %350 ], [ %360, %358 ]
  %360 = add i32 %359, -1
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds i32, ptr %272, i64 %361
  %363 = load i32, ptr %362, align 4, !tbaa !22
  %364 = icmp ugt i32 %363, %357
  br i1 %364, label %358, label %365

365:                                              ; preds = %358
  %366 = sub i32 %357, %363
  %367 = zext i32 %366 to i64
  %368 = zext i32 %360 to i64
  %369 = getelementptr inbounds %"class.dealii::Vector", ptr %274, i64 %368, i32 3
  %370 = load ptr, ptr %369, align 8, !tbaa !49
  %371 = getelementptr inbounds float, ptr %370, i64 %367
  %372 = load float, ptr %371, align 4, !tbaa !33
  %373 = getelementptr inbounds %"struct.std::pair", ptr %342, i64 %351, i32 1
  %374 = load double, ptr %373, align 8, !tbaa !35
  br label %375

375:                                              ; preds = %375, %365
  %376 = phi i32 [ %261, %365 ], [ %377, %375 ]
  %377 = add i32 %376, -1
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds i32, ptr %263, i64 %378
  %380 = load i32, ptr %379, align 4, !tbaa !22
  %381 = zext i32 %380 to i64
  %382 = icmp ult i64 %283, %381
  br i1 %382, label %375, label %383

383:                                              ; preds = %375
  %384 = sub i32 %331, %380
  %385 = zext i32 %384 to i64
  %386 = zext i32 %377 to i64
  %387 = getelementptr inbounds %"class.dealii::Vector", ptr %276, i64 %386, i32 3
  %388 = load ptr, ptr %387, align 8, !tbaa !49
  %389 = getelementptr inbounds float, ptr %388, i64 %385
  %390 = fpext float %372 to double
  %391 = load float, ptr %389, align 4, !tbaa !33
  %392 = fpext float %391 to double
  %393 = tail call double @llvm.fmuladd.f64(double %390, double %374, double %392)
  %394 = fptrunc double %393 to float
  store float %394, ptr %389, align 4, !tbaa !33
  %395 = add i32 %352, 1
  %396 = zext i32 %395 to i64
  %397 = icmp ugt i64 %346, %396
  br i1 %397, label %350, label %348

398:                                              ; preds = %311, %348
  %399 = phi ptr [ %349, %348 ], [ %284, %311 ]
  %400 = add nuw nsw i64 %283, 1
  %401 = icmp eq i64 %400, %277
  br i1 %401, label %278, label %282

402:                                              ; preds = %246, %248, %200, %202, %144, %146, %79, %81
  %403 = phi ptr [ %30, %79 ], [ %30, %81 ], [ %86, %144 ], [ %86, %146 ], [ %150, %200 ], [ %150, %202 ], [ %86, %246 ], [ %86, %248 ]
  %404 = phi { ptr, i32 } [ %80, %79 ], [ %82, %81 ], [ %145, %144 ], [ %147, %146 ], [ %201, %200 ], [ %203, %202 ], [ %247, %246 ], [ %249, %248 ]
  %405 = icmp eq ptr %403, null
  br i1 %405, label %407, label %406

406:                                              ; preds = %402
  tail call void @_ZdlPv(ptr noundef nonnull %403) #23
  br label %407

407:                                              ; preds = %406, %402
  resume { ptr, i32 } %404
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix10distributeINS_11BlockVectorIfEEEEvRT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %76, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 2
  %10 = load i32, ptr %9, align 8
  %11 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 2, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %1, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8
  br label %15

15:                                               ; preds = %8, %38
  %16 = phi ptr [ %4, %8 ], [ %46, %38 ]
  %17 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 0, i32 2
  %18 = load double, ptr %17, align 8, !tbaa !48
  %19 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !31
  %22 = load ptr, ptr %19, align 8, !tbaa !32
  %23 = ptrtoint ptr %21 to i64
  %24 = ptrtoint ptr %22 to i64
  %25 = sub i64 %23, %24
  %26 = ashr exact i64 %25, 4
  %27 = icmp eq ptr %21, %22
  br i1 %27, label %28, label %48

28:                                               ; preds = %61, %15
  %29 = phi double [ %18, %15 ], [ %72, %61 ]
  %30 = load i32, ptr %16, align 8, !tbaa !24
  br label %31

31:                                               ; preds = %31, %28
  %32 = phi i32 [ %10, %28 ], [ %33, %31 ]
  %33 = add i32 %32, -1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, ptr %12, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !22
  %37 = icmp ugt i32 %36, %30
  br i1 %37, label %31, label %38

38:                                               ; preds = %31
  %39 = fptrunc double %29 to float
  %40 = sub i32 %30, %36
  %41 = zext i32 %40 to i64
  %42 = zext i32 %33 to i64
  %43 = getelementptr inbounds %"class.dealii::Vector", ptr %14, i64 %42, i32 3
  %44 = load ptr, ptr %43, align 8, !tbaa !49
  %45 = getelementptr inbounds float, ptr %44, i64 %41
  store float %39, ptr %45, align 4, !tbaa !33
  %46 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %16, i64 1
  %47 = icmp eq ptr %46, %6
  br i1 %47, label %76, label %15

48:                                               ; preds = %15, %61
  %49 = phi i64 [ %74, %61 ], [ 0, %15 ]
  %50 = phi i32 [ %73, %61 ], [ 0, %15 ]
  %51 = phi double [ %72, %61 ], [ %18, %15 ]
  %52 = getelementptr inbounds %"struct.std::pair", ptr %22, i64 %49
  %53 = load i32, ptr %52, align 8, !tbaa !37
  br label %54

54:                                               ; preds = %54, %48
  %55 = phi i32 [ %10, %48 ], [ %56, %54 ]
  %56 = add i32 %55, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, ptr %12, i64 %57
  %59 = load i32, ptr %58, align 4, !tbaa !22
  %60 = icmp ugt i32 %59, %53
  br i1 %60, label %54, label %61

61:                                               ; preds = %54
  %62 = sub i32 %53, %59
  %63 = zext i32 %62 to i64
  %64 = zext i32 %56 to i64
  %65 = getelementptr inbounds %"class.dealii::Vector", ptr %14, i64 %64, i32 3
  %66 = load ptr, ptr %65, align 8, !tbaa !49
  %67 = getelementptr inbounds float, ptr %66, i64 %63
  %68 = load float, ptr %67, align 4, !tbaa !33
  %69 = fpext float %68 to double
  %70 = getelementptr inbounds %"struct.std::pair", ptr %22, i64 %49, i32 1
  %71 = load double, ptr %70, align 8, !tbaa !35
  %72 = tail call double @llvm.fmuladd.f64(double %69, double %71, double %51)
  %73 = add i32 %50, 1
  %74 = zext i32 %73 to i64
  %75 = icmp ugt i64 %26, %74
  br i1 %75, label %48, label %28

76:                                               ; preds = %38, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIfNS_6VectorIfEEEEvRNS_12SparseMatrixIT_EERT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !5
  %6 = icmp eq i32 %5, 0
  %7 = tail call noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !47
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !38
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %36, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !44
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %17 = load ptr, ptr %16, align 8, !tbaa !41
  %18 = zext i32 %11 to i64
  %19 = and i64 %18, 1
  %20 = icmp eq i32 %11, 1
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = and i64 %18, 4294967294
  br label %47

23:                                               ; preds = %47, %13
  %24 = phi double [ undef, %13 ], [ %65, %47 ]
  %25 = phi i64 [ 0, %13 ], [ %66, %47 ]
  %26 = phi double [ 0.000000e+00, %13 ], [ %65, %47 ]
  %27 = icmp eq i64 %19, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds i64, ptr %17, i64 %25
  %30 = load i64, ptr %29, align 8, !tbaa !42
  %31 = getelementptr inbounds float, ptr %15, i64 %30
  %32 = load float, ptr %31, align 4, !tbaa !33
  %33 = tail call float @llvm.fabs.f32(float %32)
  %34 = fpext float %33 to double
  %35 = fadd double %26, %34
  br label %36

36:                                               ; preds = %28, %23, %3
  %37 = phi double [ 0.000000e+00, %3 ], [ %24, %23 ], [ %35, %28 ]
  %38 = uitofp i32 %11 to double
  %39 = fdiv double %37, %38
  %40 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !38
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %69, label %43

43:                                               ; preds = %36
  %44 = zext i32 %41 to i64
  %45 = shl nuw nsw i64 %44, 2
  %46 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %45) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %46, i8 -1, i64 %45, i1 false), !tbaa !22
  br label %69

47:                                               ; preds = %47, %21
  %48 = phi i64 [ 0, %21 ], [ %66, %47 ]
  %49 = phi double [ 0.000000e+00, %21 ], [ %65, %47 ]
  %50 = phi i64 [ 0, %21 ], [ %67, %47 ]
  %51 = getelementptr inbounds i64, ptr %17, i64 %48
  %52 = load i64, ptr %51, align 8, !tbaa !42
  %53 = getelementptr inbounds float, ptr %15, i64 %52
  %54 = load float, ptr %53, align 4, !tbaa !33
  %55 = tail call float @llvm.fabs.f32(float %54)
  %56 = fpext float %55 to double
  %57 = fadd double %49, %56
  %58 = or i64 %48, 1
  %59 = getelementptr inbounds i64, ptr %17, i64 %58
  %60 = load i64, ptr %59, align 8, !tbaa !42
  %61 = getelementptr inbounds float, ptr %15, i64 %60
  %62 = load float, ptr %61, align 4, !tbaa !33
  %63 = tail call float @llvm.fabs.f32(float %62)
  %64 = fpext float %63 to double
  %65 = fadd double %57, %64
  %66 = add nuw nsw i64 %48, 2
  %67 = add i64 %50, 2
  %68 = icmp eq i64 %67, %22
  br i1 %68, label %23, label %47

69:                                               ; preds = %43, %36
  %70 = phi ptr [ null, %36 ], [ %46, %43 ]
  %71 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %72 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %73 = load ptr, ptr %72, align 8, !tbaa !70
  %74 = load ptr, ptr %71, align 8, !tbaa !72
  %75 = ptrtoint ptr %73 to i64
  %76 = ptrtoint ptr %74 to i64
  %77 = sub i64 %75, %76
  %78 = sdiv exact i64 %77, 40
  %79 = icmp eq ptr %73, %74
  br i1 %79, label %80, label %88

80:                                               ; preds = %88, %69
  %81 = load i32, ptr %40, align 4, !tbaa !38
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %98, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %85 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %86 = fptrunc double %39 to float
  %87 = zext i32 %81 to i64
  br label %102

88:                                               ; preds = %69, %88
  %89 = phi i64 [ %96, %88 ], [ 0, %69 ]
  %90 = phi i32 [ %95, %88 ], [ 0, %69 ]
  %91 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %74, i64 %89
  %92 = load i32, ptr %91, align 8, !tbaa !24
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i32, ptr %70, i64 %93
  store i32 %90, ptr %94, align 4, !tbaa !22
  %95 = add i32 %90, 1
  %96 = zext i32 %95 to i64
  %97 = icmp ugt i64 %78, %96
  br i1 %97, label %88, label %80

98:                                               ; preds = %693, %80
  %99 = icmp eq ptr %70, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %98
  tail call void @_ZdlPv(ptr noundef nonnull %70) #23
  br label %101

101:                                              ; preds = %98, %100
  ret void

102:                                              ; preds = %83, %693
  %103 = phi i64 [ 0, %83 ], [ %110, %693 ]
  %104 = getelementptr inbounds i32, ptr %70, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !22
  %106 = icmp eq i32 %105, -1
  %107 = load ptr, ptr %8, align 8, !tbaa !47, !noalias !73
  %108 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %107, i64 0, i32 8
  %109 = load ptr, ptr %108, align 8, !tbaa !41, !noalias !73
  %110 = add nuw nsw i64 %103, 1
  %111 = getelementptr inbounds i64, ptr %109, i64 %110
  %112 = load i64, ptr %111, align 8, !tbaa !42, !noalias !73
  %113 = getelementptr inbounds i64, ptr %109, i64 %103
  %114 = load i64, ptr %113, align 8, !tbaa !42, !noalias !73
  %115 = sub i64 %112, %114
  %116 = and i64 %115, 4294967295
  %117 = icmp eq i64 %116, 0
  %118 = trunc i64 %103 to i32
  br i1 %106, label %119, label %324

119:                                              ; preds = %102
  br i1 %117, label %120, label %139

120:                                              ; preds = %119
  %121 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %107, i64 0, i32 2
  %122 = load i32, ptr %121, align 4, !tbaa !38, !noalias !74
  %123 = zext i32 %122 to i64
  br label %124

124:                                              ; preds = %129, %120
  %125 = phi i64 [ %127, %129 ], [ %103, %120 ]
  %126 = phi i64 [ %133, %129 ], [ %112, %120 ]
  %127 = add nuw nsw i64 %125, 1
  %128 = icmp ult i64 %127, %123
  br i1 %128, label %129, label %139

129:                                              ; preds = %124
  %130 = add nuw i64 %125, 2
  %131 = and i64 %130, 4294967295
  %132 = getelementptr inbounds i64, ptr %109, i64 %131
  %133 = load i64, ptr %132, align 8, !tbaa !42, !noalias !74
  %134 = sub i64 %133, %126
  %135 = and i64 %134, 4294967295
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %124, label %137

137:                                              ; preds = %129
  %138 = trunc i64 %127 to i32
  br label %139

139:                                              ; preds = %124, %137, %119
  %140 = phi i32 [ %118, %119 ], [ %138, %137 ], [ %122, %124 ]
  %141 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %142 unwind label %184

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %141, i64 0, i32 9
  %144 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %141, i64 0, i32 8
  %145 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %141, i64 0, i32 2
  br label %146

146:                                              ; preds = %310, %142
  %147 = phi i32 [ %140, %142 ], [ %311, %310 ]
  %148 = zext i32 %147 to i64
  %149 = add i32 %147, 1
  %150 = zext i32 %149 to i64
  br label %151

151:                                              ; preds = %146, %297
  %152 = phi i32 [ %298, %297 ], [ 0, %146 ]
  %153 = load ptr, ptr %8, align 8, !tbaa !47, !noalias !79
  %154 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %153, i64 0, i32 2
  %155 = load i32, ptr %154, align 4, !tbaa !38, !noalias !79
  %156 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %153, i64 0, i32 8
  %157 = zext i32 %155 to i64
  br label %158

158:                                              ; preds = %162, %151
  %159 = phi i64 [ %160, %162 ], [ %103, %151 ]
  %160 = add nuw nsw i64 %159, 1
  %161 = icmp ult i64 %160, %157
  br i1 %161, label %162, label %175

162:                                              ; preds = %158
  %163 = load ptr, ptr %156, align 8, !tbaa !41, !noalias !79
  %164 = add nuw i64 %159, 2
  %165 = and i64 %164, 4294967295
  %166 = getelementptr inbounds i64, ptr %163, i64 %165
  %167 = load i64, ptr %166, align 8, !tbaa !42, !noalias !79
  %168 = getelementptr inbounds i64, ptr %163, i64 %160
  %169 = load i64, ptr %168, align 8, !tbaa !42, !noalias !79
  %170 = sub i64 %167, %169
  %171 = and i64 %170, 4294967295
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %158, label %173

173:                                              ; preds = %162
  %174 = trunc i64 %160 to i32
  br label %175

175:                                              ; preds = %158, %173
  %176 = phi i32 [ %174, %173 ], [ %155, %158 ]
  %177 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %178 unwind label %186

178:                                              ; preds = %175
  %179 = icmp ne ptr %141, %177
  %180 = icmp ne i32 %147, %176
  %181 = or i1 %179, %180
  %182 = icmp ne i32 %152, 0
  %183 = or i1 %182, %181
  br i1 %183, label %188, label %693

184:                                              ; preds = %139
  %185 = landingpad { ptr, i32 }
          cleanup
  br label %695

186:                                              ; preds = %175
  %187 = landingpad { ptr, i32 }
          cleanup
  br label %695

188:                                              ; preds = %178
  %189 = load ptr, ptr %143, align 8, !tbaa !43
  %190 = load ptr, ptr %144, align 8, !tbaa !41
  %191 = getelementptr inbounds i64, ptr %190, i64 %148
  %192 = load i64, ptr %191, align 8, !tbaa !42
  %193 = zext i32 %152 to i64
  %194 = add i64 %192, %193
  %195 = getelementptr inbounds i32, ptr %189, i64 %194
  %196 = load i32, ptr %195, align 4, !tbaa !22
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds i32, ptr %70, i64 %197
  %199 = load i32, ptr %198, align 4, !tbaa !22
  %200 = icmp eq i32 %199, -1
  br i1 %200, label %297, label %201

201:                                              ; preds = %188
  %202 = zext i32 %199 to i64
  %203 = load ptr, ptr %71, align 8, !tbaa !72
  %204 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %203, i64 %202, i32 1
  %205 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %204, i64 0, i32 1
  %206 = load ptr, ptr %205, align 8, !tbaa !31
  %207 = load ptr, ptr %204, align 8, !tbaa !32
  %208 = icmp eq ptr %206, %207
  br i1 %208, label %209, label %213

209:                                              ; preds = %244, %201
  %210 = phi i64 [ %202, %201 ], [ %248, %244 ]
  %211 = phi ptr [ %203, %201 ], [ %249, %244 ]
  %212 = load ptr, ptr %8, align 8, !tbaa !47
  br i1 %6, label %280, label %261

213:                                              ; preds = %201, %244
  %214 = phi ptr [ %253, %244 ], [ %207, %201 ]
  %215 = phi i64 [ %246, %244 ], [ 0, %201 ]
  %216 = phi i32 [ %245, %244 ], [ 0, %201 ]
  %217 = load ptr, ptr %84, align 8, !tbaa !44
  %218 = load ptr, ptr %8, align 8, !tbaa !47
  %219 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %218, i64 0, i32 8
  %220 = load ptr, ptr %219, align 8, !tbaa !41
  %221 = getelementptr inbounds i64, ptr %220, i64 %148
  %222 = load i64, ptr %221, align 8, !tbaa !42
  %223 = add i64 %222, %193
  %224 = getelementptr inbounds float, ptr %217, i64 %223
  %225 = load float, ptr %224, align 4, !tbaa !33
  %226 = fpext float %225 to double
  %227 = getelementptr inbounds %"struct.std::pair", ptr %214, i64 %215, i32 1
  %228 = load double, ptr %227, align 8, !tbaa !35
  %229 = fmul double %228, %226
  %230 = fptrunc double %229 to float
  %231 = fcmp oeq float %230, 0.000000e+00
  br i1 %231, label %244, label %232

232:                                              ; preds = %213
  %233 = getelementptr inbounds %"struct.std::pair", ptr %214, i64 %215
  %234 = load i32, ptr %233, align 8, !tbaa !37
  %235 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %218, i32 noundef %118, i32 noundef %234)
          to label %236 unwind label %259

236:                                              ; preds = %232
  %237 = icmp eq i32 %235, -1
  br i1 %237, label %244, label %238

238:                                              ; preds = %236
  %239 = load ptr, ptr %84, align 8, !tbaa !44
  %240 = zext i32 %235 to i64
  %241 = getelementptr inbounds float, ptr %239, i64 %240
  %242 = load float, ptr %241, align 4, !tbaa !33
  %243 = fadd float %242, %230
  store float %243, ptr %241, align 4, !tbaa !33
  br label %244

244:                                              ; preds = %238, %236, %213
  %245 = add i32 %216, 1
  %246 = zext i32 %245 to i64
  %247 = load i32, ptr %198, align 4, !tbaa !22
  %248 = zext i32 %247 to i64
  %249 = load ptr, ptr %71, align 8, !tbaa !72
  %250 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %249, i64 %248, i32 1
  %251 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %250, i64 0, i32 1
  %252 = load ptr, ptr %251, align 8, !tbaa !31
  %253 = load ptr, ptr %250, align 8, !tbaa !32
  %254 = ptrtoint ptr %252 to i64
  %255 = ptrtoint ptr %253 to i64
  %256 = sub i64 %254, %255
  %257 = ashr exact i64 %256, 4
  %258 = icmp eq i64 %257, %246
  br i1 %258, label %209, label %213

259:                                              ; preds = %232
  %260 = landingpad { ptr, i32 }
          cleanup
  br label %698

261:                                              ; preds = %209
  %262 = load ptr, ptr %84, align 8, !tbaa !44
  %263 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %212, i64 0, i32 8
  %264 = load ptr, ptr %263, align 8, !tbaa !41
  %265 = getelementptr inbounds i64, ptr %264, i64 %148
  %266 = load i64, ptr %265, align 8, !tbaa !42
  %267 = add i64 %266, %193
  %268 = getelementptr inbounds float, ptr %262, i64 %267
  %269 = load float, ptr %268, align 4, !tbaa !33
  %270 = fpext float %269 to double
  %271 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %211, i64 %210, i32 2
  %272 = load double, ptr %271, align 8, !tbaa !48
  %273 = load ptr, ptr %85, align 8, !tbaa !49
  %274 = getelementptr inbounds float, ptr %273, i64 %103
  %275 = load float, ptr %274, align 4, !tbaa !33
  %276 = fpext float %275 to double
  %277 = fneg double %270
  %278 = tail call double @llvm.fmuladd.f64(double %277, double %272, double %276)
  %279 = fptrunc double %278 to float
  store float %279, ptr %274, align 4, !tbaa !33
  br label %280

280:                                              ; preds = %209, %261
  %281 = load ptr, ptr %143, align 8, !tbaa !43
  %282 = load ptr, ptr %144, align 8, !tbaa !41
  %283 = getelementptr inbounds i64, ptr %282, i64 %148
  %284 = load i64, ptr %283, align 8, !tbaa !42
  %285 = add i64 %284, %193
  %286 = getelementptr inbounds i32, ptr %281, i64 %285
  %287 = load i32, ptr %286, align 4, !tbaa !22
  %288 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %212, i32 noundef %147, i32 noundef %287)
          to label %289 unwind label %295

289:                                              ; preds = %280
  %290 = icmp eq i32 %288, -1
  br i1 %290, label %297, label %291

291:                                              ; preds = %289
  %292 = load ptr, ptr %84, align 8, !tbaa !44
  %293 = zext i32 %288 to i64
  %294 = getelementptr inbounds float, ptr %292, i64 %293
  store float 0.000000e+00, ptr %294, align 4, !tbaa !33
  br label %297

295:                                              ; preds = %280
  %296 = landingpad { ptr, i32 }
          cleanup
  br label %698

297:                                              ; preds = %289, %291, %188
  %298 = add i32 %152, 1
  %299 = load ptr, ptr %144, align 8, !tbaa !41
  %300 = getelementptr inbounds i64, ptr %299, i64 %150
  %301 = load i64, ptr %300, align 8, !tbaa !42
  %302 = getelementptr inbounds i64, ptr %299, i64 %148
  %303 = load i64, ptr %302, align 8, !tbaa !42
  %304 = sub i64 %301, %303
  %305 = trunc i64 %304 to i32
  %306 = icmp ult i32 %298, %305
  br i1 %306, label %151, label %307

307:                                              ; preds = %297
  %308 = load i32, ptr %145, align 4, !tbaa !38
  %309 = icmp eq i32 %149, %308
  br i1 %309, label %310, label %312

310:                                              ; preds = %322, %312, %307
  %311 = phi i32 [ %149, %307 ], [ %313, %312 ], [ %308, %322 ]
  br label %146

312:                                              ; preds = %307, %322
  %313 = phi i32 [ %315, %322 ], [ %149, %307 ]
  %314 = phi i64 [ %318, %322 ], [ %301, %307 ]
  %315 = add i32 %313, 1
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds i64, ptr %299, i64 %316
  %318 = load i64, ptr %317, align 8, !tbaa !42
  %319 = sub i64 %318, %314
  %320 = and i64 %319, 4294967295
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %310

322:                                              ; preds = %312
  %323 = icmp eq i32 %315, %308
  br i1 %323, label %310, label %312, !llvm.loop !82

324:                                              ; preds = %102
  br i1 %117, label %325, label %344

325:                                              ; preds = %324
  %326 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %107, i64 0, i32 2
  %327 = load i32, ptr %326, align 4, !tbaa !38, !noalias !84
  %328 = zext i32 %327 to i64
  br label %329

329:                                              ; preds = %334, %325
  %330 = phi i64 [ %332, %334 ], [ %103, %325 ]
  %331 = phi i64 [ %338, %334 ], [ %112, %325 ]
  %332 = add nuw nsw i64 %330, 1
  %333 = icmp ult i64 %332, %328
  br i1 %333, label %334, label %344

334:                                              ; preds = %329
  %335 = add nuw i64 %330, 2
  %336 = and i64 %335, 4294967295
  %337 = getelementptr inbounds i64, ptr %109, i64 %336
  %338 = load i64, ptr %337, align 8, !tbaa !42, !noalias !84
  %339 = sub i64 %338, %331
  %340 = and i64 %339, 4294967295
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %329, label %342

342:                                              ; preds = %334
  %343 = trunc i64 %332 to i32
  br label %344

344:                                              ; preds = %329, %342, %324
  %345 = phi i32 [ %118, %324 ], [ %343, %342 ], [ %327, %329 ]
  %346 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %347 unwind label %406

347:                                              ; preds = %344
  %348 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %346, i64 0, i32 9
  %349 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %346, i64 0, i32 8
  %350 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %346, i64 0, i32 2
  br label %351

351:                                              ; preds = %656, %347
  %352 = phi i32 [ %345, %347 ], [ %657, %656 ]
  %353 = zext i32 %352 to i64
  %354 = add i32 %352, 1
  %355 = zext i32 %354 to i64
  br label %356

356:                                              ; preds = %351, %643
  %357 = phi i32 [ %644, %643 ], [ 0, %351 ]
  %358 = load ptr, ptr %8, align 8, !tbaa !47, !noalias !89
  %359 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %358, i64 0, i32 2
  %360 = load i32, ptr %359, align 4, !tbaa !38, !noalias !89
  %361 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %358, i64 0, i32 8
  %362 = zext i32 %360 to i64
  br label %363

363:                                              ; preds = %367, %356
  %364 = phi i64 [ %365, %367 ], [ %103, %356 ]
  %365 = add nuw nsw i64 %364, 1
  %366 = icmp ult i64 %365, %362
  br i1 %366, label %367, label %380

367:                                              ; preds = %363
  %368 = load ptr, ptr %361, align 8, !tbaa !41, !noalias !89
  %369 = add nuw i64 %364, 2
  %370 = and i64 %369, 4294967295
  %371 = getelementptr inbounds i64, ptr %368, i64 %370
  %372 = load i64, ptr %371, align 8, !tbaa !42, !noalias !89
  %373 = getelementptr inbounds i64, ptr %368, i64 %365
  %374 = load i64, ptr %373, align 8, !tbaa !42, !noalias !89
  %375 = sub i64 %372, %374
  %376 = and i64 %375, 4294967295
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %363, label %378

378:                                              ; preds = %367
  %379 = trunc i64 %365 to i32
  br label %380

380:                                              ; preds = %363, %378
  %381 = phi i32 [ %379, %378 ], [ %360, %363 ]
  %382 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %383 unwind label %408

383:                                              ; preds = %380
  %384 = icmp ne ptr %346, %382
  %385 = icmp ne i32 %352, %381
  %386 = or i1 %384, %385
  %387 = icmp ne i32 %357, 0
  %388 = or i1 %387, %386
  br i1 %388, label %410, label %389

389:                                              ; preds = %383
  br i1 %6, label %693, label %390

390:                                              ; preds = %389
  %391 = load i32, ptr %104, align 4, !tbaa !22
  %392 = zext i32 %391 to i64
  %393 = load ptr, ptr %71, align 8, !tbaa !72
  %394 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %393, i64 %392, i32 1
  %395 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %394, i64 0, i32 1
  %396 = load ptr, ptr %395, align 8, !tbaa !31
  %397 = load ptr, ptr %394, align 8, !tbaa !32
  %398 = ptrtoint ptr %396 to i64
  %399 = ptrtoint ptr %397 to i64
  %400 = sub i64 %398, %399
  %401 = ashr exact i64 %400, 4
  %402 = icmp eq ptr %396, %397
  %403 = load ptr, ptr %85, align 8, !tbaa !49
  br i1 %402, label %670, label %404

404:                                              ; preds = %390
  %405 = getelementptr inbounds float, ptr %403, i64 %103
  br label %675

406:                                              ; preds = %344
  %407 = landingpad { ptr, i32 }
          cleanup
  br label %695

408:                                              ; preds = %380
  %409 = landingpad { ptr, i32 }
          cleanup
  br label %695

410:                                              ; preds = %383
  %411 = load ptr, ptr %348, align 8, !tbaa !43
  %412 = load ptr, ptr %349, align 8, !tbaa !41
  %413 = getelementptr inbounds i64, ptr %412, i64 %353
  %414 = load i64, ptr %413, align 8, !tbaa !42
  %415 = zext i32 %357 to i64
  %416 = add i64 %414, %415
  %417 = getelementptr inbounds i32, ptr %411, i64 %416
  %418 = load i32, ptr %417, align 4, !tbaa !22
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds i32, ptr %70, i64 %419
  %421 = load i32, ptr %420, align 4, !tbaa !22
  %422 = icmp eq i32 %421, -1
  %423 = load i32, ptr %104, align 4, !tbaa !22
  %424 = zext i32 %423 to i64
  %425 = load ptr, ptr %71, align 8, !tbaa !72
  %426 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %425, i64 %424, i32 1
  %427 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %426, i64 0, i32 1
  %428 = load ptr, ptr %427, align 8, !tbaa !31
  %429 = load ptr, ptr %426, align 8, !tbaa !32
  %430 = icmp eq ptr %428, %429
  br i1 %422, label %432, label %431

431:                                              ; preds = %410
  br i1 %430, label %627, label %497

432:                                              ; preds = %410
  br i1 %430, label %489, label %433

433:                                              ; preds = %432, %464
  %434 = phi ptr [ %473, %464 ], [ %429, %432 ]
  %435 = phi i64 [ %466, %464 ], [ 0, %432 ]
  %436 = phi i32 [ %465, %464 ], [ 0, %432 ]
  %437 = load ptr, ptr %84, align 8, !tbaa !44
  %438 = load ptr, ptr %8, align 8, !tbaa !47
  %439 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %438, i64 0, i32 8
  %440 = load ptr, ptr %439, align 8, !tbaa !41
  %441 = getelementptr inbounds i64, ptr %440, i64 %353
  %442 = load i64, ptr %441, align 8, !tbaa !42
  %443 = add i64 %442, %415
  %444 = getelementptr inbounds float, ptr %437, i64 %443
  %445 = load float, ptr %444, align 4, !tbaa !33
  %446 = fpext float %445 to double
  %447 = getelementptr inbounds %"struct.std::pair", ptr %434, i64 %435, i32 1
  %448 = load double, ptr %447, align 8, !tbaa !35
  %449 = fmul double %448, %446
  %450 = fptrunc double %449 to float
  %451 = fcmp oeq float %450, 0.000000e+00
  br i1 %451, label %464, label %452

452:                                              ; preds = %433
  %453 = getelementptr inbounds %"struct.std::pair", ptr %434, i64 %435
  %454 = load i32, ptr %453, align 8, !tbaa !37
  %455 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %438, i32 noundef %454, i32 noundef %418)
          to label %456 unwind label %479

456:                                              ; preds = %452
  %457 = icmp eq i32 %455, -1
  br i1 %457, label %464, label %458

458:                                              ; preds = %456
  %459 = load ptr, ptr %84, align 8, !tbaa !44
  %460 = zext i32 %455 to i64
  %461 = getelementptr inbounds float, ptr %459, i64 %460
  %462 = load float, ptr %461, align 4, !tbaa !33
  %463 = fadd float %462, %450
  store float %463, ptr %461, align 4, !tbaa !33
  br label %464

464:                                              ; preds = %458, %456, %433
  %465 = add i32 %436, 1
  %466 = zext i32 %465 to i64
  %467 = load i32, ptr %104, align 4, !tbaa !22
  %468 = zext i32 %467 to i64
  %469 = load ptr, ptr %71, align 8, !tbaa !72
  %470 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %469, i64 %468, i32 1
  %471 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %470, i64 0, i32 1
  %472 = load ptr, ptr %471, align 8, !tbaa !31
  %473 = load ptr, ptr %470, align 8, !tbaa !32
  %474 = ptrtoint ptr %472 to i64
  %475 = ptrtoint ptr %473 to i64
  %476 = sub i64 %474, %475
  %477 = ashr exact i64 %476, 4
  %478 = icmp eq i64 %477, %466
  br i1 %478, label %481, label %433

479:                                              ; preds = %452
  %480 = landingpad { ptr, i32 }
          cleanup
  br label %698

481:                                              ; preds = %464
  %482 = load ptr, ptr %348, align 8, !tbaa !43
  %483 = load ptr, ptr %349, align 8, !tbaa !41
  %484 = getelementptr inbounds i64, ptr %483, i64 %353
  %485 = load i64, ptr %484, align 8, !tbaa !42
  %486 = add i64 %485, %415
  %487 = getelementptr inbounds i32, ptr %482, i64 %486
  %488 = load i32, ptr %487, align 4, !tbaa !22
  br label %489

489:                                              ; preds = %481, %432
  %490 = phi i32 [ %488, %481 ], [ %418, %432 ]
  %491 = load ptr, ptr %8, align 8, !tbaa !47
  %492 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %491, i32 noundef %352, i32 noundef %490)
          to label %493 unwind label %495

493:                                              ; preds = %489
  %494 = icmp eq i32 %492, -1
  br i1 %494, label %643, label %637

495:                                              ; preds = %489
  %496 = landingpad { ptr, i32 }
          cleanup
  br label %698

497:                                              ; preds = %431, %607
  %498 = phi i32 [ %512, %607 ], [ %423, %431 ]
  %499 = phi ptr [ %513, %607 ], [ %425, %431 ]
  %500 = phi i32 [ %514, %607 ], [ %421, %431 ]
  %501 = phi i64 [ %611, %607 ], [ 0, %431 ]
  %502 = phi i32 [ %610, %607 ], [ 0, %431 ]
  %503 = zext i32 %500 to i64
  %504 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %499, i64 %503, i32 1
  %505 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %504, i64 0, i32 1
  %506 = load ptr, ptr %505, align 8, !tbaa !31
  %507 = load ptr, ptr %504, align 8, !tbaa !32
  %508 = icmp eq ptr %506, %507
  br i1 %508, label %511, label %520

509:                                              ; preds = %561
  %510 = load i32, ptr %104, align 4, !tbaa !22
  br label %511

511:                                              ; preds = %509, %497
  %512 = phi i32 [ %498, %497 ], [ %510, %509 ]
  %513 = phi ptr [ %499, %497 ], [ %566, %509 ]
  %514 = phi i32 [ %500, %497 ], [ %564, %509 ]
  %515 = phi i64 [ %503, %497 ], [ %565, %509 ]
  br i1 %6, label %516, label %578

516:                                              ; preds = %511
  %517 = zext i32 %512 to i64
  %518 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %513, i64 %517, i32 1
  %519 = load ptr, ptr %518, align 8, !tbaa !32
  br label %607

520:                                              ; preds = %497, %561
  %521 = phi ptr [ %570, %561 ], [ %507, %497 ]
  %522 = phi ptr [ %566, %561 ], [ %499, %497 ]
  %523 = phi i64 [ %563, %561 ], [ 0, %497 ]
  %524 = phi i32 [ %562, %561 ], [ 0, %497 ]
  %525 = load i32, ptr %104, align 4, !tbaa !22
  %526 = zext i32 %525 to i64
  %527 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %522, i64 %526, i32 1
  %528 = load ptr, ptr %527, align 8, !tbaa !32
  %529 = load ptr, ptr %84, align 8, !tbaa !44
  %530 = load ptr, ptr %8, align 8, !tbaa !47
  %531 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %530, i64 0, i32 8
  %532 = load ptr, ptr %531, align 8, !tbaa !41
  %533 = getelementptr inbounds i64, ptr %532, i64 %353
  %534 = load i64, ptr %533, align 8, !tbaa !42
  %535 = add i64 %534, %415
  %536 = getelementptr inbounds float, ptr %529, i64 %535
  %537 = load float, ptr %536, align 4, !tbaa !33
  %538 = fpext float %537 to double
  %539 = getelementptr inbounds %"struct.std::pair", ptr %528, i64 %501, i32 1
  %540 = load double, ptr %539, align 8, !tbaa !35
  %541 = fmul double %540, %538
  %542 = getelementptr inbounds %"struct.std::pair", ptr %521, i64 %523, i32 1
  %543 = load double, ptr %542, align 8, !tbaa !35
  %544 = fmul double %541, %543
  %545 = fptrunc double %544 to float
  %546 = fcmp oeq float %545, 0.000000e+00
  br i1 %546, label %561, label %547

547:                                              ; preds = %520
  %548 = getelementptr inbounds %"struct.std::pair", ptr %521, i64 %523
  %549 = getelementptr inbounds %"struct.std::pair", ptr %528, i64 %501
  %550 = load i32, ptr %548, align 8, !tbaa !37
  %551 = load i32, ptr %549, align 8, !tbaa !37
  %552 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %530, i32 noundef %551, i32 noundef %550)
          to label %553 unwind label %576

553:                                              ; preds = %547
  %554 = icmp eq i32 %552, -1
  br i1 %554, label %561, label %555

555:                                              ; preds = %553
  %556 = load ptr, ptr %84, align 8, !tbaa !44
  %557 = zext i32 %552 to i64
  %558 = getelementptr inbounds float, ptr %556, i64 %557
  %559 = load float, ptr %558, align 4, !tbaa !33
  %560 = fadd float %559, %545
  store float %560, ptr %558, align 4, !tbaa !33
  br label %561

561:                                              ; preds = %555, %553, %520
  %562 = add i32 %524, 1
  %563 = zext i32 %562 to i64
  %564 = load i32, ptr %420, align 4, !tbaa !22
  %565 = zext i32 %564 to i64
  %566 = load ptr, ptr %71, align 8, !tbaa !72
  %567 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %566, i64 %565, i32 1
  %568 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %567, i64 0, i32 1
  %569 = load ptr, ptr %568, align 8, !tbaa !31
  %570 = load ptr, ptr %567, align 8, !tbaa !32
  %571 = ptrtoint ptr %569 to i64
  %572 = ptrtoint ptr %570 to i64
  %573 = sub i64 %571, %572
  %574 = ashr exact i64 %573, 4
  %575 = icmp eq i64 %574, %563
  br i1 %575, label %509, label %520

576:                                              ; preds = %547
  %577 = landingpad { ptr, i32 }
          cleanup
  br label %698

578:                                              ; preds = %511
  %579 = load ptr, ptr %84, align 8, !tbaa !44
  %580 = load ptr, ptr %8, align 8, !tbaa !47
  %581 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %580, i64 0, i32 8
  %582 = load ptr, ptr %581, align 8, !tbaa !41
  %583 = getelementptr inbounds i64, ptr %582, i64 %353
  %584 = load i64, ptr %583, align 8, !tbaa !42
  %585 = add i64 %584, %415
  %586 = getelementptr inbounds float, ptr %579, i64 %585
  %587 = load float, ptr %586, align 4, !tbaa !33
  %588 = fpext float %587 to double
  %589 = zext i32 %512 to i64
  %590 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %513, i64 %589, i32 1
  %591 = load ptr, ptr %590, align 8, !tbaa !32
  %592 = getelementptr inbounds %"struct.std::pair", ptr %591, i64 %501
  %593 = getelementptr inbounds %"struct.std::pair", ptr %591, i64 %501, i32 1
  %594 = load double, ptr %593, align 8, !tbaa !35
  %595 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %513, i64 %515, i32 2
  %596 = load double, ptr %595, align 8, !tbaa !48
  %597 = load i32, ptr %592, align 8, !tbaa !37
  %598 = load ptr, ptr %85, align 8, !tbaa !49
  %599 = zext i32 %597 to i64
  %600 = getelementptr inbounds float, ptr %598, i64 %599
  %601 = load float, ptr %600, align 4, !tbaa !33
  %602 = fpext float %601 to double
  %603 = fneg double %594
  %604 = fmul double %588, %603
  %605 = tail call double @llvm.fmuladd.f64(double %604, double %596, double %602)
  %606 = fptrunc double %605 to float
  store float %606, ptr %600, align 4, !tbaa !33
  br label %607

607:                                              ; preds = %516, %578
  %608 = phi i64 [ %517, %516 ], [ %589, %578 ]
  %609 = phi ptr [ %519, %516 ], [ %591, %578 ]
  %610 = add i32 %502, 1
  %611 = zext i32 %610 to i64
  %612 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %513, i64 %608, i32 1, i32 0, i32 0, i32 0, i32 1
  %613 = load ptr, ptr %612, align 8, !tbaa !31
  %614 = ptrtoint ptr %613 to i64
  %615 = ptrtoint ptr %609 to i64
  %616 = sub i64 %614, %615
  %617 = ashr exact i64 %616, 4
  %618 = icmp eq i64 %617, %611
  br i1 %618, label %619, label %497

619:                                              ; preds = %607
  %620 = load ptr, ptr %348, align 8, !tbaa !43
  %621 = load ptr, ptr %349, align 8, !tbaa !41
  %622 = getelementptr inbounds i64, ptr %621, i64 %353
  %623 = load i64, ptr %622, align 8, !tbaa !42
  %624 = add i64 %623, %415
  %625 = getelementptr inbounds i32, ptr %620, i64 %624
  %626 = load i32, ptr %625, align 4, !tbaa !22
  br label %627

627:                                              ; preds = %619, %431
  %628 = phi i32 [ %626, %619 ], [ %418, %431 ]
  %629 = load ptr, ptr %8, align 8, !tbaa !47
  %630 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %629, i32 noundef %352, i32 noundef %628)
          to label %631 unwind label %635

631:                                              ; preds = %627
  %632 = icmp eq i64 %103, %419
  %633 = select i1 %632, float %86, float 0.000000e+00
  %634 = icmp eq i32 %630, -1
  br i1 %634, label %643, label %637

635:                                              ; preds = %627
  %636 = landingpad { ptr, i32 }
          cleanup
  br label %698

637:                                              ; preds = %631, %493
  %638 = phi i32 [ %492, %493 ], [ %630, %631 ]
  %639 = phi float [ 0.000000e+00, %493 ], [ %633, %631 ]
  %640 = load ptr, ptr %84, align 8, !tbaa !44
  %641 = zext i32 %638 to i64
  %642 = getelementptr inbounds float, ptr %640, i64 %641
  store float %639, ptr %642, align 4, !tbaa !33
  br label %643

643:                                              ; preds = %637, %631, %493
  %644 = add i32 %357, 1
  %645 = load ptr, ptr %349, align 8, !tbaa !41
  %646 = getelementptr inbounds i64, ptr %645, i64 %355
  %647 = load i64, ptr %646, align 8, !tbaa !42
  %648 = getelementptr inbounds i64, ptr %645, i64 %353
  %649 = load i64, ptr %648, align 8, !tbaa !42
  %650 = sub i64 %647, %649
  %651 = trunc i64 %650 to i32
  %652 = icmp ult i32 %644, %651
  br i1 %652, label %356, label %653

653:                                              ; preds = %643
  %654 = load i32, ptr %350, align 4, !tbaa !38
  %655 = icmp eq i32 %354, %654
  br i1 %655, label %656, label %658

656:                                              ; preds = %668, %658, %653
  %657 = phi i32 [ %354, %653 ], [ %659, %658 ], [ %654, %668 ]
  br label %351

658:                                              ; preds = %653, %668
  %659 = phi i32 [ %661, %668 ], [ %354, %653 ]
  %660 = phi i64 [ %664, %668 ], [ %647, %653 ]
  %661 = add i32 %659, 1
  %662 = zext i32 %661 to i64
  %663 = getelementptr inbounds i64, ptr %645, i64 %662
  %664 = load i64, ptr %663, align 8, !tbaa !42
  %665 = sub i64 %664, %660
  %666 = and i64 %665, 4294967295
  %667 = icmp eq i64 %666, 0
  br i1 %667, label %668, label %656

668:                                              ; preds = %658
  %669 = icmp eq i32 %661, %654
  br i1 %669, label %656, label %658, !llvm.loop !82

670:                                              ; preds = %675, %390
  %671 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %393, i64 %392
  %672 = load i32, ptr %671, align 8, !tbaa !24
  %673 = zext i32 %672 to i64
  %674 = getelementptr inbounds float, ptr %403, i64 %673
  store float 0.000000e+00, ptr %674, align 4, !tbaa !33
  br label %693

675:                                              ; preds = %404, %675
  %676 = phi i64 [ 0, %404 ], [ %691, %675 ]
  %677 = phi i32 [ 0, %404 ], [ %690, %675 ]
  %678 = load float, ptr %405, align 4, !tbaa !33
  %679 = fpext float %678 to double
  %680 = getelementptr inbounds %"struct.std::pair", ptr %397, i64 %676
  %681 = getelementptr inbounds %"struct.std::pair", ptr %397, i64 %676, i32 1
  %682 = load double, ptr %681, align 8, !tbaa !35
  %683 = load i32, ptr %680, align 8, !tbaa !37
  %684 = zext i32 %683 to i64
  %685 = getelementptr inbounds float, ptr %403, i64 %684
  %686 = load float, ptr %685, align 4, !tbaa !33
  %687 = fpext float %686 to double
  %688 = tail call double @llvm.fmuladd.f64(double %679, double %682, double %687)
  %689 = fptrunc double %688 to float
  store float %689, ptr %685, align 4, !tbaa !33
  %690 = add i32 %677, 1
  %691 = zext i32 %690 to i64
  %692 = icmp eq i64 %401, %691
  br i1 %692, label %670, label %675

693:                                              ; preds = %178, %670, %389
  %694 = icmp eq i64 %110, %87
  br i1 %694, label %98, label %102

695:                                              ; preds = %406, %408, %184, %186
  %696 = phi { ptr, i32 } [ %187, %186 ], [ %185, %184 ], [ %409, %408 ], [ %407, %406 ]
  %697 = icmp eq ptr %70, null
  br i1 %697, label %700, label %698

698:                                              ; preds = %259, %479, %295, %495, %635, %576, %695
  %699 = phi { ptr, i32 } [ %696, %695 ], [ %577, %576 ], [ %636, %635 ], [ %496, %495 ], [ %296, %295 ], [ %480, %479 ], [ %260, %259 ]
  tail call void @_ZdlPv(ptr noundef nonnull %70) #23
  br label %700

700:                                              ; preds = %698, %695
  %701 = phi { ptr, i32 } [ %696, %695 ], [ %699, %698 ]
  resume { ptr, i32 } %701
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIfNS_6VectorIdEEEEvRNS_12SparseMatrixIT_EERT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !53
  %6 = icmp eq i32 %5, 0
  %7 = tail call noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !47
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !38
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %36, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !44
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %17 = load ptr, ptr %16, align 8, !tbaa !41
  %18 = zext i32 %11 to i64
  %19 = and i64 %18, 1
  %20 = icmp eq i32 %11, 1
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = and i64 %18, 4294967294
  br label %47

23:                                               ; preds = %47, %13
  %24 = phi double [ undef, %13 ], [ %65, %47 ]
  %25 = phi i64 [ 0, %13 ], [ %66, %47 ]
  %26 = phi double [ 0.000000e+00, %13 ], [ %65, %47 ]
  %27 = icmp eq i64 %19, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds i64, ptr %17, i64 %25
  %30 = load i64, ptr %29, align 8, !tbaa !42
  %31 = getelementptr inbounds float, ptr %15, i64 %30
  %32 = load float, ptr %31, align 4, !tbaa !33
  %33 = tail call float @llvm.fabs.f32(float %32)
  %34 = fpext float %33 to double
  %35 = fadd double %26, %34
  br label %36

36:                                               ; preds = %28, %23, %3
  %37 = phi double [ 0.000000e+00, %3 ], [ %24, %23 ], [ %35, %28 ]
  %38 = uitofp i32 %11 to double
  %39 = fdiv double %37, %38
  %40 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !38
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %69, label %43

43:                                               ; preds = %36
  %44 = zext i32 %41 to i64
  %45 = shl nuw nsw i64 %44, 2
  %46 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %45) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %46, i8 -1, i64 %45, i1 false), !tbaa !22
  br label %69

47:                                               ; preds = %47, %21
  %48 = phi i64 [ 0, %21 ], [ %66, %47 ]
  %49 = phi double [ 0.000000e+00, %21 ], [ %65, %47 ]
  %50 = phi i64 [ 0, %21 ], [ %67, %47 ]
  %51 = getelementptr inbounds i64, ptr %17, i64 %48
  %52 = load i64, ptr %51, align 8, !tbaa !42
  %53 = getelementptr inbounds float, ptr %15, i64 %52
  %54 = load float, ptr %53, align 4, !tbaa !33
  %55 = tail call float @llvm.fabs.f32(float %54)
  %56 = fpext float %55 to double
  %57 = fadd double %49, %56
  %58 = or i64 %48, 1
  %59 = getelementptr inbounds i64, ptr %17, i64 %58
  %60 = load i64, ptr %59, align 8, !tbaa !42
  %61 = getelementptr inbounds float, ptr %15, i64 %60
  %62 = load float, ptr %61, align 4, !tbaa !33
  %63 = tail call float @llvm.fabs.f32(float %62)
  %64 = fpext float %63 to double
  %65 = fadd double %57, %64
  %66 = add nuw nsw i64 %48, 2
  %67 = add i64 %50, 2
  %68 = icmp eq i64 %67, %22
  br i1 %68, label %23, label %47

69:                                               ; preds = %43, %36
  %70 = phi ptr [ null, %36 ], [ %46, %43 ]
  %71 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %72 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %73 = load ptr, ptr %72, align 8, !tbaa !70
  %74 = load ptr, ptr %71, align 8, !tbaa !72
  %75 = ptrtoint ptr %73 to i64
  %76 = ptrtoint ptr %74 to i64
  %77 = sub i64 %75, %76
  %78 = sdiv exact i64 %77, 40
  %79 = icmp eq ptr %73, %74
  br i1 %79, label %80, label %88

80:                                               ; preds = %88, %69
  %81 = load i32, ptr %40, align 4, !tbaa !38
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %98, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %85 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %86 = fptrunc double %39 to float
  %87 = zext i32 %81 to i64
  br label %102

88:                                               ; preds = %69, %88
  %89 = phi i64 [ %96, %88 ], [ 0, %69 ]
  %90 = phi i32 [ %95, %88 ], [ 0, %69 ]
  %91 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %74, i64 %89
  %92 = load i32, ptr %91, align 8, !tbaa !24
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i32, ptr %70, i64 %93
  store i32 %90, ptr %94, align 4, !tbaa !22
  %95 = add i32 %90, 1
  %96 = zext i32 %95 to i64
  %97 = icmp ugt i64 %78, %96
  br i1 %97, label %88, label %80

98:                                               ; preds = %686, %80
  %99 = icmp eq ptr %70, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %98
  tail call void @_ZdlPv(ptr noundef nonnull %70) #23
  br label %101

101:                                              ; preds = %98, %100
  ret void

102:                                              ; preds = %83, %686
  %103 = phi i64 [ 0, %83 ], [ %110, %686 ]
  %104 = getelementptr inbounds i32, ptr %70, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !22
  %106 = icmp eq i32 %105, -1
  %107 = load ptr, ptr %8, align 8, !tbaa !47, !noalias !73
  %108 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %107, i64 0, i32 8
  %109 = load ptr, ptr %108, align 8, !tbaa !41, !noalias !73
  %110 = add nuw nsw i64 %103, 1
  %111 = getelementptr inbounds i64, ptr %109, i64 %110
  %112 = load i64, ptr %111, align 8, !tbaa !42, !noalias !73
  %113 = getelementptr inbounds i64, ptr %109, i64 %103
  %114 = load i64, ptr %113, align 8, !tbaa !42, !noalias !73
  %115 = sub i64 %112, %114
  %116 = and i64 %115, 4294967295
  %117 = icmp eq i64 %116, 0
  %118 = trunc i64 %103 to i32
  br i1 %106, label %119, label %322

119:                                              ; preds = %102
  br i1 %117, label %120, label %139

120:                                              ; preds = %119
  %121 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %107, i64 0, i32 2
  %122 = load i32, ptr %121, align 4, !tbaa !38, !noalias !92
  %123 = zext i32 %122 to i64
  br label %124

124:                                              ; preds = %129, %120
  %125 = phi i64 [ %127, %129 ], [ %103, %120 ]
  %126 = phi i64 [ %133, %129 ], [ %112, %120 ]
  %127 = add nuw nsw i64 %125, 1
  %128 = icmp ult i64 %127, %123
  br i1 %128, label %129, label %139

129:                                              ; preds = %124
  %130 = add nuw i64 %125, 2
  %131 = and i64 %130, 4294967295
  %132 = getelementptr inbounds i64, ptr %109, i64 %131
  %133 = load i64, ptr %132, align 8, !tbaa !42, !noalias !92
  %134 = sub i64 %133, %126
  %135 = and i64 %134, 4294967295
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %124, label %137

137:                                              ; preds = %129
  %138 = trunc i64 %127 to i32
  br label %139

139:                                              ; preds = %124, %137, %119
  %140 = phi i32 [ %118, %119 ], [ %138, %137 ], [ %122, %124 ]
  %141 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %142 unwind label %184

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %141, i64 0, i32 9
  %144 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %141, i64 0, i32 8
  %145 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %141, i64 0, i32 2
  br label %146

146:                                              ; preds = %308, %142
  %147 = phi i32 [ %140, %142 ], [ %309, %308 ]
  %148 = zext i32 %147 to i64
  %149 = add i32 %147, 1
  %150 = zext i32 %149 to i64
  br label %151

151:                                              ; preds = %146, %295
  %152 = phi i32 [ %296, %295 ], [ 0, %146 ]
  %153 = load ptr, ptr %8, align 8, !tbaa !47, !noalias !97
  %154 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %153, i64 0, i32 2
  %155 = load i32, ptr %154, align 4, !tbaa !38, !noalias !97
  %156 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %153, i64 0, i32 8
  %157 = zext i32 %155 to i64
  br label %158

158:                                              ; preds = %162, %151
  %159 = phi i64 [ %160, %162 ], [ %103, %151 ]
  %160 = add nuw nsw i64 %159, 1
  %161 = icmp ult i64 %160, %157
  br i1 %161, label %162, label %175

162:                                              ; preds = %158
  %163 = load ptr, ptr %156, align 8, !tbaa !41, !noalias !97
  %164 = add nuw i64 %159, 2
  %165 = and i64 %164, 4294967295
  %166 = getelementptr inbounds i64, ptr %163, i64 %165
  %167 = load i64, ptr %166, align 8, !tbaa !42, !noalias !97
  %168 = getelementptr inbounds i64, ptr %163, i64 %160
  %169 = load i64, ptr %168, align 8, !tbaa !42, !noalias !97
  %170 = sub i64 %167, %169
  %171 = and i64 %170, 4294967295
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %158, label %173

173:                                              ; preds = %162
  %174 = trunc i64 %160 to i32
  br label %175

175:                                              ; preds = %158, %173
  %176 = phi i32 [ %174, %173 ], [ %155, %158 ]
  %177 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %178 unwind label %186

178:                                              ; preds = %175
  %179 = icmp ne ptr %141, %177
  %180 = icmp ne i32 %147, %176
  %181 = or i1 %179, %180
  %182 = icmp ne i32 %152, 0
  %183 = or i1 %182, %181
  br i1 %183, label %188, label %686

184:                                              ; preds = %139
  %185 = landingpad { ptr, i32 }
          cleanup
  br label %688

186:                                              ; preds = %175
  %187 = landingpad { ptr, i32 }
          cleanup
  br label %688

188:                                              ; preds = %178
  %189 = load ptr, ptr %143, align 8, !tbaa !43
  %190 = load ptr, ptr %144, align 8, !tbaa !41
  %191 = getelementptr inbounds i64, ptr %190, i64 %148
  %192 = load i64, ptr %191, align 8, !tbaa !42
  %193 = zext i32 %152 to i64
  %194 = add i64 %192, %193
  %195 = getelementptr inbounds i32, ptr %189, i64 %194
  %196 = load i32, ptr %195, align 4, !tbaa !22
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds i32, ptr %70, i64 %197
  %199 = load i32, ptr %198, align 4, !tbaa !22
  %200 = icmp eq i32 %199, -1
  br i1 %200, label %295, label %201

201:                                              ; preds = %188
  %202 = zext i32 %199 to i64
  %203 = load ptr, ptr %71, align 8, !tbaa !72
  %204 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %203, i64 %202, i32 1
  %205 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %204, i64 0, i32 1
  %206 = load ptr, ptr %205, align 8, !tbaa !31
  %207 = load ptr, ptr %204, align 8, !tbaa !32
  %208 = icmp eq ptr %206, %207
  br i1 %208, label %209, label %213

209:                                              ; preds = %244, %201
  %210 = phi i64 [ %202, %201 ], [ %248, %244 ]
  %211 = phi ptr [ %203, %201 ], [ %249, %244 ]
  %212 = load ptr, ptr %8, align 8, !tbaa !47
  br i1 %6, label %278, label %261

213:                                              ; preds = %201, %244
  %214 = phi ptr [ %253, %244 ], [ %207, %201 ]
  %215 = phi i64 [ %246, %244 ], [ 0, %201 ]
  %216 = phi i32 [ %245, %244 ], [ 0, %201 ]
  %217 = load ptr, ptr %84, align 8, !tbaa !44
  %218 = load ptr, ptr %8, align 8, !tbaa !47
  %219 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %218, i64 0, i32 8
  %220 = load ptr, ptr %219, align 8, !tbaa !41
  %221 = getelementptr inbounds i64, ptr %220, i64 %148
  %222 = load i64, ptr %221, align 8, !tbaa !42
  %223 = add i64 %222, %193
  %224 = getelementptr inbounds float, ptr %217, i64 %223
  %225 = load float, ptr %224, align 4, !tbaa !33
  %226 = fpext float %225 to double
  %227 = getelementptr inbounds %"struct.std::pair", ptr %214, i64 %215, i32 1
  %228 = load double, ptr %227, align 8, !tbaa !35
  %229 = fmul double %228, %226
  %230 = fptrunc double %229 to float
  %231 = fcmp oeq float %230, 0.000000e+00
  br i1 %231, label %244, label %232

232:                                              ; preds = %213
  %233 = getelementptr inbounds %"struct.std::pair", ptr %214, i64 %215
  %234 = load i32, ptr %233, align 8, !tbaa !37
  %235 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %218, i32 noundef %118, i32 noundef %234)
          to label %236 unwind label %259

236:                                              ; preds = %232
  %237 = icmp eq i32 %235, -1
  br i1 %237, label %244, label %238

238:                                              ; preds = %236
  %239 = load ptr, ptr %84, align 8, !tbaa !44
  %240 = zext i32 %235 to i64
  %241 = getelementptr inbounds float, ptr %239, i64 %240
  %242 = load float, ptr %241, align 4, !tbaa !33
  %243 = fadd float %242, %230
  store float %243, ptr %241, align 4, !tbaa !33
  br label %244

244:                                              ; preds = %238, %236, %213
  %245 = add i32 %216, 1
  %246 = zext i32 %245 to i64
  %247 = load i32, ptr %198, align 4, !tbaa !22
  %248 = zext i32 %247 to i64
  %249 = load ptr, ptr %71, align 8, !tbaa !72
  %250 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %249, i64 %248, i32 1
  %251 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %250, i64 0, i32 1
  %252 = load ptr, ptr %251, align 8, !tbaa !31
  %253 = load ptr, ptr %250, align 8, !tbaa !32
  %254 = ptrtoint ptr %252 to i64
  %255 = ptrtoint ptr %253 to i64
  %256 = sub i64 %254, %255
  %257 = ashr exact i64 %256, 4
  %258 = icmp eq i64 %257, %246
  br i1 %258, label %209, label %213

259:                                              ; preds = %232
  %260 = landingpad { ptr, i32 }
          cleanup
  br label %691

261:                                              ; preds = %209
  %262 = load ptr, ptr %84, align 8, !tbaa !44
  %263 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %212, i64 0, i32 8
  %264 = load ptr, ptr %263, align 8, !tbaa !41
  %265 = getelementptr inbounds i64, ptr %264, i64 %148
  %266 = load i64, ptr %265, align 8, !tbaa !42
  %267 = add i64 %266, %193
  %268 = getelementptr inbounds float, ptr %262, i64 %267
  %269 = load float, ptr %268, align 4, !tbaa !33
  %270 = fpext float %269 to double
  %271 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %211, i64 %210, i32 2
  %272 = load double, ptr %271, align 8, !tbaa !48
  %273 = load ptr, ptr %85, align 8, !tbaa !60
  %274 = getelementptr inbounds double, ptr %273, i64 %103
  %275 = load double, ptr %274, align 8, !tbaa !52
  %276 = fneg double %270
  %277 = tail call double @llvm.fmuladd.f64(double %276, double %272, double %275)
  store double %277, ptr %274, align 8, !tbaa !52
  br label %278

278:                                              ; preds = %209, %261
  %279 = load ptr, ptr %143, align 8, !tbaa !43
  %280 = load ptr, ptr %144, align 8, !tbaa !41
  %281 = getelementptr inbounds i64, ptr %280, i64 %148
  %282 = load i64, ptr %281, align 8, !tbaa !42
  %283 = add i64 %282, %193
  %284 = getelementptr inbounds i32, ptr %279, i64 %283
  %285 = load i32, ptr %284, align 4, !tbaa !22
  %286 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %212, i32 noundef %147, i32 noundef %285)
          to label %287 unwind label %293

287:                                              ; preds = %278
  %288 = icmp eq i32 %286, -1
  br i1 %288, label %295, label %289

289:                                              ; preds = %287
  %290 = load ptr, ptr %84, align 8, !tbaa !44
  %291 = zext i32 %286 to i64
  %292 = getelementptr inbounds float, ptr %290, i64 %291
  store float 0.000000e+00, ptr %292, align 4, !tbaa !33
  br label %295

293:                                              ; preds = %278
  %294 = landingpad { ptr, i32 }
          cleanup
  br label %691

295:                                              ; preds = %287, %289, %188
  %296 = add i32 %152, 1
  %297 = load ptr, ptr %144, align 8, !tbaa !41
  %298 = getelementptr inbounds i64, ptr %297, i64 %150
  %299 = load i64, ptr %298, align 8, !tbaa !42
  %300 = getelementptr inbounds i64, ptr %297, i64 %148
  %301 = load i64, ptr %300, align 8, !tbaa !42
  %302 = sub i64 %299, %301
  %303 = trunc i64 %302 to i32
  %304 = icmp ult i32 %296, %303
  br i1 %304, label %151, label %305

305:                                              ; preds = %295
  %306 = load i32, ptr %145, align 4, !tbaa !38
  %307 = icmp eq i32 %149, %306
  br i1 %307, label %308, label %310

308:                                              ; preds = %320, %310, %305
  %309 = phi i32 [ %149, %305 ], [ %311, %310 ], [ %306, %320 ]
  br label %146

310:                                              ; preds = %305, %320
  %311 = phi i32 [ %313, %320 ], [ %149, %305 ]
  %312 = phi i64 [ %316, %320 ], [ %299, %305 ]
  %313 = add i32 %311, 1
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds i64, ptr %297, i64 %314
  %316 = load i64, ptr %315, align 8, !tbaa !42
  %317 = sub i64 %316, %312
  %318 = and i64 %317, 4294967295
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %308

320:                                              ; preds = %310
  %321 = icmp eq i32 %313, %306
  br i1 %321, label %308, label %310, !llvm.loop !82

322:                                              ; preds = %102
  br i1 %117, label %323, label %342

323:                                              ; preds = %322
  %324 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %107, i64 0, i32 2
  %325 = load i32, ptr %324, align 4, !tbaa !38, !noalias !100
  %326 = zext i32 %325 to i64
  br label %327

327:                                              ; preds = %332, %323
  %328 = phi i64 [ %330, %332 ], [ %103, %323 ]
  %329 = phi i64 [ %336, %332 ], [ %112, %323 ]
  %330 = add nuw nsw i64 %328, 1
  %331 = icmp ult i64 %330, %326
  br i1 %331, label %332, label %342

332:                                              ; preds = %327
  %333 = add nuw i64 %328, 2
  %334 = and i64 %333, 4294967295
  %335 = getelementptr inbounds i64, ptr %109, i64 %334
  %336 = load i64, ptr %335, align 8, !tbaa !42, !noalias !100
  %337 = sub i64 %336, %329
  %338 = and i64 %337, 4294967295
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %327, label %340

340:                                              ; preds = %332
  %341 = trunc i64 %330 to i32
  br label %342

342:                                              ; preds = %327, %340, %322
  %343 = phi i32 [ %118, %322 ], [ %341, %340 ], [ %325, %327 ]
  %344 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %345 unwind label %404

345:                                              ; preds = %342
  %346 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %344, i64 0, i32 9
  %347 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %344, i64 0, i32 8
  %348 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %344, i64 0, i32 2
  br label %349

349:                                              ; preds = %652, %345
  %350 = phi i32 [ %343, %345 ], [ %653, %652 ]
  %351 = zext i32 %350 to i64
  %352 = add i32 %350, 1
  %353 = zext i32 %352 to i64
  br label %354

354:                                              ; preds = %349, %639
  %355 = phi i32 [ %640, %639 ], [ 0, %349 ]
  %356 = load ptr, ptr %8, align 8, !tbaa !47, !noalias !105
  %357 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %356, i64 0, i32 2
  %358 = load i32, ptr %357, align 4, !tbaa !38, !noalias !105
  %359 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %356, i64 0, i32 8
  %360 = zext i32 %358 to i64
  br label %361

361:                                              ; preds = %365, %354
  %362 = phi i64 [ %363, %365 ], [ %103, %354 ]
  %363 = add nuw nsw i64 %362, 1
  %364 = icmp ult i64 %363, %360
  br i1 %364, label %365, label %378

365:                                              ; preds = %361
  %366 = load ptr, ptr %359, align 8, !tbaa !41, !noalias !105
  %367 = add nuw i64 %362, 2
  %368 = and i64 %367, 4294967295
  %369 = getelementptr inbounds i64, ptr %366, i64 %368
  %370 = load i64, ptr %369, align 8, !tbaa !42, !noalias !105
  %371 = getelementptr inbounds i64, ptr %366, i64 %363
  %372 = load i64, ptr %371, align 8, !tbaa !42, !noalias !105
  %373 = sub i64 %370, %372
  %374 = and i64 %373, 4294967295
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %361, label %376

376:                                              ; preds = %365
  %377 = trunc i64 %363 to i32
  br label %378

378:                                              ; preds = %361, %376
  %379 = phi i32 [ %377, %376 ], [ %358, %361 ]
  %380 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %381 unwind label %406

381:                                              ; preds = %378
  %382 = icmp ne ptr %344, %380
  %383 = icmp ne i32 %350, %379
  %384 = or i1 %382, %383
  %385 = icmp ne i32 %355, 0
  %386 = or i1 %385, %384
  br i1 %386, label %408, label %387

387:                                              ; preds = %381
  br i1 %6, label %686, label %388

388:                                              ; preds = %387
  %389 = load i32, ptr %104, align 4, !tbaa !22
  %390 = zext i32 %389 to i64
  %391 = load ptr, ptr %71, align 8, !tbaa !72
  %392 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %391, i64 %390, i32 1
  %393 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %392, i64 0, i32 1
  %394 = load ptr, ptr %393, align 8, !tbaa !31
  %395 = load ptr, ptr %392, align 8, !tbaa !32
  %396 = ptrtoint ptr %394 to i64
  %397 = ptrtoint ptr %395 to i64
  %398 = sub i64 %396, %397
  %399 = ashr exact i64 %398, 4
  %400 = icmp eq ptr %394, %395
  %401 = load ptr, ptr %85, align 8, !tbaa !60
  br i1 %400, label %666, label %402

402:                                              ; preds = %388
  %403 = getelementptr inbounds double, ptr %401, i64 %103
  br label %671

404:                                              ; preds = %342
  %405 = landingpad { ptr, i32 }
          cleanup
  br label %688

406:                                              ; preds = %378
  %407 = landingpad { ptr, i32 }
          cleanup
  br label %688

408:                                              ; preds = %381
  %409 = load ptr, ptr %346, align 8, !tbaa !43
  %410 = load ptr, ptr %347, align 8, !tbaa !41
  %411 = getelementptr inbounds i64, ptr %410, i64 %351
  %412 = load i64, ptr %411, align 8, !tbaa !42
  %413 = zext i32 %355 to i64
  %414 = add i64 %412, %413
  %415 = getelementptr inbounds i32, ptr %409, i64 %414
  %416 = load i32, ptr %415, align 4, !tbaa !22
  %417 = zext i32 %416 to i64
  %418 = getelementptr inbounds i32, ptr %70, i64 %417
  %419 = load i32, ptr %418, align 4, !tbaa !22
  %420 = icmp eq i32 %419, -1
  %421 = load i32, ptr %104, align 4, !tbaa !22
  %422 = zext i32 %421 to i64
  %423 = load ptr, ptr %71, align 8, !tbaa !72
  %424 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %423, i64 %422, i32 1
  %425 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %424, i64 0, i32 1
  %426 = load ptr, ptr %425, align 8, !tbaa !31
  %427 = load ptr, ptr %424, align 8, !tbaa !32
  %428 = icmp eq ptr %426, %427
  br i1 %420, label %430, label %429

429:                                              ; preds = %408
  br i1 %428, label %623, label %495

430:                                              ; preds = %408
  br i1 %428, label %487, label %431

431:                                              ; preds = %430, %462
  %432 = phi ptr [ %471, %462 ], [ %427, %430 ]
  %433 = phi i64 [ %464, %462 ], [ 0, %430 ]
  %434 = phi i32 [ %463, %462 ], [ 0, %430 ]
  %435 = load ptr, ptr %84, align 8, !tbaa !44
  %436 = load ptr, ptr %8, align 8, !tbaa !47
  %437 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %436, i64 0, i32 8
  %438 = load ptr, ptr %437, align 8, !tbaa !41
  %439 = getelementptr inbounds i64, ptr %438, i64 %351
  %440 = load i64, ptr %439, align 8, !tbaa !42
  %441 = add i64 %440, %413
  %442 = getelementptr inbounds float, ptr %435, i64 %441
  %443 = load float, ptr %442, align 4, !tbaa !33
  %444 = fpext float %443 to double
  %445 = getelementptr inbounds %"struct.std::pair", ptr %432, i64 %433, i32 1
  %446 = load double, ptr %445, align 8, !tbaa !35
  %447 = fmul double %446, %444
  %448 = fptrunc double %447 to float
  %449 = fcmp oeq float %448, 0.000000e+00
  br i1 %449, label %462, label %450

450:                                              ; preds = %431
  %451 = getelementptr inbounds %"struct.std::pair", ptr %432, i64 %433
  %452 = load i32, ptr %451, align 8, !tbaa !37
  %453 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %436, i32 noundef %452, i32 noundef %416)
          to label %454 unwind label %477

454:                                              ; preds = %450
  %455 = icmp eq i32 %453, -1
  br i1 %455, label %462, label %456

456:                                              ; preds = %454
  %457 = load ptr, ptr %84, align 8, !tbaa !44
  %458 = zext i32 %453 to i64
  %459 = getelementptr inbounds float, ptr %457, i64 %458
  %460 = load float, ptr %459, align 4, !tbaa !33
  %461 = fadd float %460, %448
  store float %461, ptr %459, align 4, !tbaa !33
  br label %462

462:                                              ; preds = %456, %454, %431
  %463 = add i32 %434, 1
  %464 = zext i32 %463 to i64
  %465 = load i32, ptr %104, align 4, !tbaa !22
  %466 = zext i32 %465 to i64
  %467 = load ptr, ptr %71, align 8, !tbaa !72
  %468 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %467, i64 %466, i32 1
  %469 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %468, i64 0, i32 1
  %470 = load ptr, ptr %469, align 8, !tbaa !31
  %471 = load ptr, ptr %468, align 8, !tbaa !32
  %472 = ptrtoint ptr %470 to i64
  %473 = ptrtoint ptr %471 to i64
  %474 = sub i64 %472, %473
  %475 = ashr exact i64 %474, 4
  %476 = icmp eq i64 %475, %464
  br i1 %476, label %479, label %431

477:                                              ; preds = %450
  %478 = landingpad { ptr, i32 }
          cleanup
  br label %691

479:                                              ; preds = %462
  %480 = load ptr, ptr %346, align 8, !tbaa !43
  %481 = load ptr, ptr %347, align 8, !tbaa !41
  %482 = getelementptr inbounds i64, ptr %481, i64 %351
  %483 = load i64, ptr %482, align 8, !tbaa !42
  %484 = add i64 %483, %413
  %485 = getelementptr inbounds i32, ptr %480, i64 %484
  %486 = load i32, ptr %485, align 4, !tbaa !22
  br label %487

487:                                              ; preds = %479, %430
  %488 = phi i32 [ %486, %479 ], [ %416, %430 ]
  %489 = load ptr, ptr %8, align 8, !tbaa !47
  %490 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %489, i32 noundef %350, i32 noundef %488)
          to label %491 unwind label %493

491:                                              ; preds = %487
  %492 = icmp eq i32 %490, -1
  br i1 %492, label %639, label %633

493:                                              ; preds = %487
  %494 = landingpad { ptr, i32 }
          cleanup
  br label %691

495:                                              ; preds = %429, %603
  %496 = phi i32 [ %510, %603 ], [ %421, %429 ]
  %497 = phi ptr [ %511, %603 ], [ %423, %429 ]
  %498 = phi i32 [ %512, %603 ], [ %419, %429 ]
  %499 = phi i64 [ %607, %603 ], [ 0, %429 ]
  %500 = phi i32 [ %606, %603 ], [ 0, %429 ]
  %501 = zext i32 %498 to i64
  %502 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %497, i64 %501, i32 1
  %503 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %502, i64 0, i32 1
  %504 = load ptr, ptr %503, align 8, !tbaa !31
  %505 = load ptr, ptr %502, align 8, !tbaa !32
  %506 = icmp eq ptr %504, %505
  br i1 %506, label %509, label %518

507:                                              ; preds = %559
  %508 = load i32, ptr %104, align 4, !tbaa !22
  br label %509

509:                                              ; preds = %507, %495
  %510 = phi i32 [ %496, %495 ], [ %508, %507 ]
  %511 = phi ptr [ %497, %495 ], [ %564, %507 ]
  %512 = phi i32 [ %498, %495 ], [ %562, %507 ]
  %513 = phi i64 [ %501, %495 ], [ %563, %507 ]
  br i1 %6, label %514, label %576

514:                                              ; preds = %509
  %515 = zext i32 %510 to i64
  %516 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %511, i64 %515, i32 1
  %517 = load ptr, ptr %516, align 8, !tbaa !32
  br label %603

518:                                              ; preds = %495, %559
  %519 = phi ptr [ %568, %559 ], [ %505, %495 ]
  %520 = phi ptr [ %564, %559 ], [ %497, %495 ]
  %521 = phi i64 [ %561, %559 ], [ 0, %495 ]
  %522 = phi i32 [ %560, %559 ], [ 0, %495 ]
  %523 = load i32, ptr %104, align 4, !tbaa !22
  %524 = zext i32 %523 to i64
  %525 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %520, i64 %524, i32 1
  %526 = load ptr, ptr %525, align 8, !tbaa !32
  %527 = load ptr, ptr %84, align 8, !tbaa !44
  %528 = load ptr, ptr %8, align 8, !tbaa !47
  %529 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %528, i64 0, i32 8
  %530 = load ptr, ptr %529, align 8, !tbaa !41
  %531 = getelementptr inbounds i64, ptr %530, i64 %351
  %532 = load i64, ptr %531, align 8, !tbaa !42
  %533 = add i64 %532, %413
  %534 = getelementptr inbounds float, ptr %527, i64 %533
  %535 = load float, ptr %534, align 4, !tbaa !33
  %536 = fpext float %535 to double
  %537 = getelementptr inbounds %"struct.std::pair", ptr %526, i64 %499, i32 1
  %538 = load double, ptr %537, align 8, !tbaa !35
  %539 = fmul double %538, %536
  %540 = getelementptr inbounds %"struct.std::pair", ptr %519, i64 %521, i32 1
  %541 = load double, ptr %540, align 8, !tbaa !35
  %542 = fmul double %539, %541
  %543 = fptrunc double %542 to float
  %544 = fcmp oeq float %543, 0.000000e+00
  br i1 %544, label %559, label %545

545:                                              ; preds = %518
  %546 = getelementptr inbounds %"struct.std::pair", ptr %519, i64 %521
  %547 = getelementptr inbounds %"struct.std::pair", ptr %526, i64 %499
  %548 = load i32, ptr %546, align 8, !tbaa !37
  %549 = load i32, ptr %547, align 8, !tbaa !37
  %550 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %528, i32 noundef %549, i32 noundef %548)
          to label %551 unwind label %574

551:                                              ; preds = %545
  %552 = icmp eq i32 %550, -1
  br i1 %552, label %559, label %553

553:                                              ; preds = %551
  %554 = load ptr, ptr %84, align 8, !tbaa !44
  %555 = zext i32 %550 to i64
  %556 = getelementptr inbounds float, ptr %554, i64 %555
  %557 = load float, ptr %556, align 4, !tbaa !33
  %558 = fadd float %557, %543
  store float %558, ptr %556, align 4, !tbaa !33
  br label %559

559:                                              ; preds = %553, %551, %518
  %560 = add i32 %522, 1
  %561 = zext i32 %560 to i64
  %562 = load i32, ptr %418, align 4, !tbaa !22
  %563 = zext i32 %562 to i64
  %564 = load ptr, ptr %71, align 8, !tbaa !72
  %565 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %564, i64 %563, i32 1
  %566 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %565, i64 0, i32 1
  %567 = load ptr, ptr %566, align 8, !tbaa !31
  %568 = load ptr, ptr %565, align 8, !tbaa !32
  %569 = ptrtoint ptr %567 to i64
  %570 = ptrtoint ptr %568 to i64
  %571 = sub i64 %569, %570
  %572 = ashr exact i64 %571, 4
  %573 = icmp eq i64 %572, %561
  br i1 %573, label %507, label %518

574:                                              ; preds = %545
  %575 = landingpad { ptr, i32 }
          cleanup
  br label %691

576:                                              ; preds = %509
  %577 = load ptr, ptr %84, align 8, !tbaa !44
  %578 = load ptr, ptr %8, align 8, !tbaa !47
  %579 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %578, i64 0, i32 8
  %580 = load ptr, ptr %579, align 8, !tbaa !41
  %581 = getelementptr inbounds i64, ptr %580, i64 %351
  %582 = load i64, ptr %581, align 8, !tbaa !42
  %583 = add i64 %582, %413
  %584 = getelementptr inbounds float, ptr %577, i64 %583
  %585 = load float, ptr %584, align 4, !tbaa !33
  %586 = fpext float %585 to double
  %587 = zext i32 %510 to i64
  %588 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %511, i64 %587, i32 1
  %589 = load ptr, ptr %588, align 8, !tbaa !32
  %590 = getelementptr inbounds %"struct.std::pair", ptr %589, i64 %499
  %591 = getelementptr inbounds %"struct.std::pair", ptr %589, i64 %499, i32 1
  %592 = load double, ptr %591, align 8, !tbaa !35
  %593 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %511, i64 %513, i32 2
  %594 = load double, ptr %593, align 8, !tbaa !48
  %595 = load i32, ptr %590, align 8, !tbaa !37
  %596 = load ptr, ptr %85, align 8, !tbaa !60
  %597 = zext i32 %595 to i64
  %598 = getelementptr inbounds double, ptr %596, i64 %597
  %599 = load double, ptr %598, align 8, !tbaa !52
  %600 = fneg double %592
  %601 = fmul double %586, %600
  %602 = tail call double @llvm.fmuladd.f64(double %601, double %594, double %599)
  store double %602, ptr %598, align 8, !tbaa !52
  br label %603

603:                                              ; preds = %514, %576
  %604 = phi i64 [ %515, %514 ], [ %587, %576 ]
  %605 = phi ptr [ %517, %514 ], [ %589, %576 ]
  %606 = add i32 %500, 1
  %607 = zext i32 %606 to i64
  %608 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %511, i64 %604, i32 1, i32 0, i32 0, i32 0, i32 1
  %609 = load ptr, ptr %608, align 8, !tbaa !31
  %610 = ptrtoint ptr %609 to i64
  %611 = ptrtoint ptr %605 to i64
  %612 = sub i64 %610, %611
  %613 = ashr exact i64 %612, 4
  %614 = icmp eq i64 %613, %607
  br i1 %614, label %615, label %495

615:                                              ; preds = %603
  %616 = load ptr, ptr %346, align 8, !tbaa !43
  %617 = load ptr, ptr %347, align 8, !tbaa !41
  %618 = getelementptr inbounds i64, ptr %617, i64 %351
  %619 = load i64, ptr %618, align 8, !tbaa !42
  %620 = add i64 %619, %413
  %621 = getelementptr inbounds i32, ptr %616, i64 %620
  %622 = load i32, ptr %621, align 4, !tbaa !22
  br label %623

623:                                              ; preds = %615, %429
  %624 = phi i32 [ %622, %615 ], [ %416, %429 ]
  %625 = load ptr, ptr %8, align 8, !tbaa !47
  %626 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %625, i32 noundef %350, i32 noundef %624)
          to label %627 unwind label %631

627:                                              ; preds = %623
  %628 = icmp eq i64 %103, %417
  %629 = select i1 %628, float %86, float 0.000000e+00
  %630 = icmp eq i32 %626, -1
  br i1 %630, label %639, label %633

631:                                              ; preds = %623
  %632 = landingpad { ptr, i32 }
          cleanup
  br label %691

633:                                              ; preds = %627, %491
  %634 = phi i32 [ %490, %491 ], [ %626, %627 ]
  %635 = phi float [ 0.000000e+00, %491 ], [ %629, %627 ]
  %636 = load ptr, ptr %84, align 8, !tbaa !44
  %637 = zext i32 %634 to i64
  %638 = getelementptr inbounds float, ptr %636, i64 %637
  store float %635, ptr %638, align 4, !tbaa !33
  br label %639

639:                                              ; preds = %633, %627, %491
  %640 = add i32 %355, 1
  %641 = load ptr, ptr %347, align 8, !tbaa !41
  %642 = getelementptr inbounds i64, ptr %641, i64 %353
  %643 = load i64, ptr %642, align 8, !tbaa !42
  %644 = getelementptr inbounds i64, ptr %641, i64 %351
  %645 = load i64, ptr %644, align 8, !tbaa !42
  %646 = sub i64 %643, %645
  %647 = trunc i64 %646 to i32
  %648 = icmp ult i32 %640, %647
  br i1 %648, label %354, label %649

649:                                              ; preds = %639
  %650 = load i32, ptr %348, align 4, !tbaa !38
  %651 = icmp eq i32 %352, %650
  br i1 %651, label %652, label %654

652:                                              ; preds = %664, %654, %649
  %653 = phi i32 [ %352, %649 ], [ %655, %654 ], [ %650, %664 ]
  br label %349

654:                                              ; preds = %649, %664
  %655 = phi i32 [ %657, %664 ], [ %352, %649 ]
  %656 = phi i64 [ %660, %664 ], [ %643, %649 ]
  %657 = add i32 %655, 1
  %658 = zext i32 %657 to i64
  %659 = getelementptr inbounds i64, ptr %641, i64 %658
  %660 = load i64, ptr %659, align 8, !tbaa !42
  %661 = sub i64 %660, %656
  %662 = and i64 %661, 4294967295
  %663 = icmp eq i64 %662, 0
  br i1 %663, label %664, label %652

664:                                              ; preds = %654
  %665 = icmp eq i32 %657, %650
  br i1 %665, label %652, label %654, !llvm.loop !82

666:                                              ; preds = %671, %388
  %667 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %391, i64 %390
  %668 = load i32, ptr %667, align 8, !tbaa !24
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds double, ptr %401, i64 %669
  store double 0.000000e+00, ptr %670, align 8, !tbaa !52
  br label %686

671:                                              ; preds = %402, %671
  %672 = phi i64 [ 0, %402 ], [ %684, %671 ]
  %673 = phi i32 [ 0, %402 ], [ %683, %671 ]
  %674 = load double, ptr %403, align 8, !tbaa !52
  %675 = getelementptr inbounds %"struct.std::pair", ptr %395, i64 %672
  %676 = getelementptr inbounds %"struct.std::pair", ptr %395, i64 %672, i32 1
  %677 = load double, ptr %676, align 8, !tbaa !35
  %678 = load i32, ptr %675, align 8, !tbaa !37
  %679 = zext i32 %678 to i64
  %680 = getelementptr inbounds double, ptr %401, i64 %679
  %681 = load double, ptr %680, align 8, !tbaa !52
  %682 = tail call double @llvm.fmuladd.f64(double %674, double %677, double %681)
  store double %682, ptr %680, align 8, !tbaa !52
  %683 = add i32 %673, 1
  %684 = zext i32 %683 to i64
  %685 = icmp eq i64 %399, %684
  br i1 %685, label %666, label %671

686:                                              ; preds = %178, %666, %387
  %687 = icmp eq i64 %110, %87
  br i1 %687, label %98, label %102

688:                                              ; preds = %404, %406, %184, %186
  %689 = phi { ptr, i32 } [ %187, %186 ], [ %185, %184 ], [ %407, %406 ], [ %405, %404 ]
  %690 = icmp eq ptr %70, null
  br i1 %690, label %693, label %691

691:                                              ; preds = %259, %477, %293, %493, %631, %574, %688
  %692 = phi { ptr, i32 } [ %689, %688 ], [ %575, %574 ], [ %632, %631 ], [ %494, %493 ], [ %294, %293 ], [ %478, %477 ], [ %260, %259 ]
  tail call void @_ZdlPv(ptr noundef nonnull %70) #23
  br label %693

693:                                              ; preds = %691, %688
  %694 = phi { ptr, i32 } [ %689, %688 ], [ %692, %691 ]
  resume { ptr, i32 } %694
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIdNS_6VectorIdEEEEvRNS_12SparseMatrixIT_EERT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !53
  %6 = icmp eq i32 %5, 0
  %7 = tail call noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !47
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !38
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %41, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %1, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !50
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %17 = load ptr, ptr %16, align 8, !tbaa !41
  %18 = zext i32 %11 to i64
  %19 = and i64 %18, 3
  %20 = icmp ult i32 %11, 4
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = and i64 %18, 4294967292
  br label %52

23:                                               ; preds = %52, %13
  %24 = phi double [ undef, %13 ], [ %82, %52 ]
  %25 = phi i64 [ 0, %13 ], [ %83, %52 ]
  %26 = phi double [ 0.000000e+00, %13 ], [ %82, %52 ]
  %27 = icmp eq i64 %19, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %23, %28
  %29 = phi i64 [ %38, %28 ], [ %25, %23 ]
  %30 = phi double [ %37, %28 ], [ %26, %23 ]
  %31 = phi i64 [ %39, %28 ], [ 0, %23 ]
  %32 = getelementptr inbounds i64, ptr %17, i64 %29
  %33 = load i64, ptr %32, align 8, !tbaa !42
  %34 = getelementptr inbounds double, ptr %15, i64 %33
  %35 = load double, ptr %34, align 8, !tbaa !52
  %36 = tail call double @llvm.fabs.f64(double %35)
  %37 = fadd double %30, %36
  %38 = add nuw nsw i64 %29, 1
  %39 = add i64 %31, 1
  %40 = icmp eq i64 %39, %19
  br i1 %40, label %41, label %28, !llvm.loop !108

41:                                               ; preds = %23, %28, %3
  %42 = phi double [ 0.000000e+00, %3 ], [ %24, %23 ], [ %37, %28 ]
  %43 = uitofp i32 %11 to double
  %44 = fdiv double %42, %43
  %45 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %46 = load i32, ptr %45, align 4, !tbaa !38
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %86, label %48

48:                                               ; preds = %41
  %49 = zext i32 %46 to i64
  %50 = shl nuw nsw i64 %49, 2
  %51 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %50) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %51, i8 -1, i64 %50, i1 false), !tbaa !22
  br label %86

52:                                               ; preds = %52, %21
  %53 = phi i64 [ 0, %21 ], [ %83, %52 ]
  %54 = phi double [ 0.000000e+00, %21 ], [ %82, %52 ]
  %55 = phi i64 [ 0, %21 ], [ %84, %52 ]
  %56 = getelementptr inbounds i64, ptr %17, i64 %53
  %57 = load i64, ptr %56, align 8, !tbaa !42
  %58 = getelementptr inbounds double, ptr %15, i64 %57
  %59 = load double, ptr %58, align 8, !tbaa !52
  %60 = tail call double @llvm.fabs.f64(double %59)
  %61 = fadd double %54, %60
  %62 = or i64 %53, 1
  %63 = getelementptr inbounds i64, ptr %17, i64 %62
  %64 = load i64, ptr %63, align 8, !tbaa !42
  %65 = getelementptr inbounds double, ptr %15, i64 %64
  %66 = load double, ptr %65, align 8, !tbaa !52
  %67 = tail call double @llvm.fabs.f64(double %66)
  %68 = fadd double %61, %67
  %69 = or i64 %53, 2
  %70 = getelementptr inbounds i64, ptr %17, i64 %69
  %71 = load i64, ptr %70, align 8, !tbaa !42
  %72 = getelementptr inbounds double, ptr %15, i64 %71
  %73 = load double, ptr %72, align 8, !tbaa !52
  %74 = tail call double @llvm.fabs.f64(double %73)
  %75 = fadd double %68, %74
  %76 = or i64 %53, 3
  %77 = getelementptr inbounds i64, ptr %17, i64 %76
  %78 = load i64, ptr %77, align 8, !tbaa !42
  %79 = getelementptr inbounds double, ptr %15, i64 %78
  %80 = load double, ptr %79, align 8, !tbaa !52
  %81 = tail call double @llvm.fabs.f64(double %80)
  %82 = fadd double %75, %81
  %83 = add nuw nsw i64 %53, 4
  %84 = add i64 %55, 4
  %85 = icmp eq i64 %84, %22
  br i1 %85, label %23, label %52

86:                                               ; preds = %48, %41
  %87 = phi ptr [ null, %41 ], [ %51, %48 ]
  %88 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %89 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %90 = load ptr, ptr %89, align 8, !tbaa !70
  %91 = load ptr, ptr %88, align 8, !tbaa !72
  %92 = ptrtoint ptr %90 to i64
  %93 = ptrtoint ptr %91 to i64
  %94 = sub i64 %92, %93
  %95 = sdiv exact i64 %94, 40
  %96 = icmp eq ptr %90, %91
  br i1 %96, label %97, label %104

97:                                               ; preds = %104, %86
  %98 = load i32, ptr %45, align 4, !tbaa !38
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %114, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %1, i64 0, i32 2
  %102 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %103 = zext i32 %98 to i64
  br label %118

104:                                              ; preds = %86, %104
  %105 = phi i64 [ %112, %104 ], [ 0, %86 ]
  %106 = phi i32 [ %111, %104 ], [ 0, %86 ]
  %107 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %91, i64 %105
  %108 = load i32, ptr %107, align 8, !tbaa !24
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds i32, ptr %87, i64 %109
  store i32 %106, ptr %110, align 4, !tbaa !22
  %111 = add i32 %106, 1
  %112 = zext i32 %111 to i64
  %113 = icmp ugt i64 %95, %112
  br i1 %113, label %104, label %97

114:                                              ; preds = %694, %97
  %115 = icmp eq ptr %87, null
  br i1 %115, label %117, label %116

116:                                              ; preds = %114
  tail call void @_ZdlPv(ptr noundef nonnull %87) #23
  br label %117

117:                                              ; preds = %114, %116
  ret void

118:                                              ; preds = %100, %694
  %119 = phi i64 [ 0, %100 ], [ %126, %694 ]
  %120 = getelementptr inbounds i32, ptr %87, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !22
  %122 = icmp eq i32 %121, -1
  %123 = load ptr, ptr %8, align 8, !tbaa !47, !noalias !73
  %124 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %123, i64 0, i32 8
  %125 = load ptr, ptr %124, align 8, !tbaa !41, !noalias !73
  %126 = add nuw nsw i64 %119, 1
  %127 = getelementptr inbounds i64, ptr %125, i64 %126
  %128 = load i64, ptr %127, align 8, !tbaa !42, !noalias !73
  %129 = getelementptr inbounds i64, ptr %125, i64 %119
  %130 = load i64, ptr %129, align 8, !tbaa !42, !noalias !73
  %131 = sub i64 %128, %130
  %132 = and i64 %131, 4294967295
  %133 = icmp eq i64 %132, 0
  %134 = trunc i64 %119 to i32
  br i1 %122, label %135, label %335

135:                                              ; preds = %118
  br i1 %133, label %136, label %155

136:                                              ; preds = %135
  %137 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %123, i64 0, i32 2
  %138 = load i32, ptr %137, align 4, !tbaa !38, !noalias !110
  %139 = zext i32 %138 to i64
  br label %140

140:                                              ; preds = %145, %136
  %141 = phi i64 [ %143, %145 ], [ %119, %136 ]
  %142 = phi i64 [ %149, %145 ], [ %128, %136 ]
  %143 = add nuw nsw i64 %141, 1
  %144 = icmp ult i64 %143, %139
  br i1 %144, label %145, label %155

145:                                              ; preds = %140
  %146 = add nuw i64 %141, 2
  %147 = and i64 %146, 4294967295
  %148 = getelementptr inbounds i64, ptr %125, i64 %147
  %149 = load i64, ptr %148, align 8, !tbaa !42, !noalias !110
  %150 = sub i64 %149, %142
  %151 = and i64 %150, 4294967295
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %140, label %153

153:                                              ; preds = %145
  %154 = trunc i64 %143 to i32
  br label %155

155:                                              ; preds = %140, %153, %135
  %156 = phi i32 [ %134, %135 ], [ %154, %153 ], [ %138, %140 ]
  %157 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %158 unwind label %200

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %157, i64 0, i32 9
  %160 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %157, i64 0, i32 8
  %161 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %157, i64 0, i32 2
  br label %162

162:                                              ; preds = %321, %158
  %163 = phi i32 [ %156, %158 ], [ %322, %321 ]
  %164 = zext i32 %163 to i64
  %165 = add i32 %163, 1
  %166 = zext i32 %165 to i64
  br label %167

167:                                              ; preds = %162, %308
  %168 = phi i32 [ %309, %308 ], [ 0, %162 ]
  %169 = load ptr, ptr %8, align 8, !tbaa !47, !noalias !115
  %170 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %169, i64 0, i32 2
  %171 = load i32, ptr %170, align 4, !tbaa !38, !noalias !115
  %172 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %169, i64 0, i32 8
  %173 = zext i32 %171 to i64
  br label %174

174:                                              ; preds = %178, %167
  %175 = phi i64 [ %176, %178 ], [ %119, %167 ]
  %176 = add nuw nsw i64 %175, 1
  %177 = icmp ult i64 %176, %173
  br i1 %177, label %178, label %191

178:                                              ; preds = %174
  %179 = load ptr, ptr %172, align 8, !tbaa !41, !noalias !115
  %180 = add nuw i64 %175, 2
  %181 = and i64 %180, 4294967295
  %182 = getelementptr inbounds i64, ptr %179, i64 %181
  %183 = load i64, ptr %182, align 8, !tbaa !42, !noalias !115
  %184 = getelementptr inbounds i64, ptr %179, i64 %176
  %185 = load i64, ptr %184, align 8, !tbaa !42, !noalias !115
  %186 = sub i64 %183, %185
  %187 = and i64 %186, 4294967295
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %174, label %189

189:                                              ; preds = %178
  %190 = trunc i64 %176 to i32
  br label %191

191:                                              ; preds = %174, %189
  %192 = phi i32 [ %190, %189 ], [ %171, %174 ]
  %193 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %194 unwind label %202

194:                                              ; preds = %191
  %195 = icmp ne ptr %157, %193
  %196 = icmp ne i32 %163, %192
  %197 = or i1 %195, %196
  %198 = icmp ne i32 %168, 0
  %199 = or i1 %198, %197
  br i1 %199, label %204, label %694

200:                                              ; preds = %155
  %201 = landingpad { ptr, i32 }
          cleanup
  br label %696

202:                                              ; preds = %191
  %203 = landingpad { ptr, i32 }
          cleanup
  br label %696

204:                                              ; preds = %194
  %205 = load ptr, ptr %159, align 8, !tbaa !43
  %206 = load ptr, ptr %160, align 8, !tbaa !41
  %207 = getelementptr inbounds i64, ptr %206, i64 %164
  %208 = load i64, ptr %207, align 8, !tbaa !42
  %209 = zext i32 %168 to i64
  %210 = add i64 %208, %209
  %211 = getelementptr inbounds i32, ptr %205, i64 %210
  %212 = load i32, ptr %211, align 4, !tbaa !22
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds i32, ptr %87, i64 %213
  %215 = load i32, ptr %214, align 4, !tbaa !22
  %216 = icmp eq i32 %215, -1
  br i1 %216, label %308, label %217

217:                                              ; preds = %204
  %218 = zext i32 %215 to i64
  %219 = load ptr, ptr %88, align 8, !tbaa !72
  %220 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %219, i64 %218, i32 1
  %221 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %220, i64 0, i32 1
  %222 = load ptr, ptr %221, align 8, !tbaa !31
  %223 = load ptr, ptr %220, align 8, !tbaa !32
  %224 = icmp eq ptr %222, %223
  br i1 %224, label %225, label %229

225:                                              ; preds = %258, %217
  %226 = phi i64 [ %218, %217 ], [ %262, %258 ]
  %227 = phi ptr [ %219, %217 ], [ %263, %258 ]
  %228 = load ptr, ptr %8, align 8, !tbaa !47
  br i1 %6, label %291, label %275

229:                                              ; preds = %217, %258
  %230 = phi ptr [ %267, %258 ], [ %223, %217 ]
  %231 = phi i64 [ %260, %258 ], [ 0, %217 ]
  %232 = phi i32 [ %259, %258 ], [ 0, %217 ]
  %233 = load ptr, ptr %101, align 8, !tbaa !50
  %234 = load ptr, ptr %8, align 8, !tbaa !47
  %235 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %234, i64 0, i32 8
  %236 = load ptr, ptr %235, align 8, !tbaa !41
  %237 = getelementptr inbounds i64, ptr %236, i64 %164
  %238 = load i64, ptr %237, align 8, !tbaa !42
  %239 = add i64 %238, %209
  %240 = getelementptr inbounds double, ptr %233, i64 %239
  %241 = load double, ptr %240, align 8, !tbaa !52
  %242 = getelementptr inbounds %"struct.std::pair", ptr %230, i64 %231, i32 1
  %243 = load double, ptr %242, align 8, !tbaa !35
  %244 = fmul double %241, %243
  %245 = fcmp oeq double %244, 0.000000e+00
  br i1 %245, label %258, label %246

246:                                              ; preds = %229
  %247 = getelementptr inbounds %"struct.std::pair", ptr %230, i64 %231
  %248 = load i32, ptr %247, align 8, !tbaa !37
  %249 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %234, i32 noundef %134, i32 noundef %248)
          to label %250 unwind label %273

250:                                              ; preds = %246
  %251 = icmp eq i32 %249, -1
  br i1 %251, label %258, label %252

252:                                              ; preds = %250
  %253 = load ptr, ptr %101, align 8, !tbaa !50
  %254 = zext i32 %249 to i64
  %255 = getelementptr inbounds double, ptr %253, i64 %254
  %256 = load double, ptr %255, align 8, !tbaa !52
  %257 = fadd double %244, %256
  store double %257, ptr %255, align 8, !tbaa !52
  br label %258

258:                                              ; preds = %252, %250, %229
  %259 = add i32 %232, 1
  %260 = zext i32 %259 to i64
  %261 = load i32, ptr %214, align 4, !tbaa !22
  %262 = zext i32 %261 to i64
  %263 = load ptr, ptr %88, align 8, !tbaa !72
  %264 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %263, i64 %262, i32 1
  %265 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %264, i64 0, i32 1
  %266 = load ptr, ptr %265, align 8, !tbaa !31
  %267 = load ptr, ptr %264, align 8, !tbaa !32
  %268 = ptrtoint ptr %266 to i64
  %269 = ptrtoint ptr %267 to i64
  %270 = sub i64 %268, %269
  %271 = ashr exact i64 %270, 4
  %272 = icmp eq i64 %271, %260
  br i1 %272, label %225, label %229

273:                                              ; preds = %246
  %274 = landingpad { ptr, i32 }
          cleanup
  br label %699

275:                                              ; preds = %225
  %276 = load ptr, ptr %101, align 8, !tbaa !50
  %277 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %228, i64 0, i32 8
  %278 = load ptr, ptr %277, align 8, !tbaa !41
  %279 = getelementptr inbounds i64, ptr %278, i64 %164
  %280 = load i64, ptr %279, align 8, !tbaa !42
  %281 = add i64 %280, %209
  %282 = getelementptr inbounds double, ptr %276, i64 %281
  %283 = load double, ptr %282, align 8, !tbaa !52
  %284 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %227, i64 %226, i32 2
  %285 = load double, ptr %284, align 8, !tbaa !48
  %286 = load ptr, ptr %102, align 8, !tbaa !60
  %287 = getelementptr inbounds double, ptr %286, i64 %119
  %288 = load double, ptr %287, align 8, !tbaa !52
  %289 = fneg double %283
  %290 = tail call double @llvm.fmuladd.f64(double %289, double %285, double %288)
  store double %290, ptr %287, align 8, !tbaa !52
  br label %291

291:                                              ; preds = %225, %275
  %292 = load ptr, ptr %159, align 8, !tbaa !43
  %293 = load ptr, ptr %160, align 8, !tbaa !41
  %294 = getelementptr inbounds i64, ptr %293, i64 %164
  %295 = load i64, ptr %294, align 8, !tbaa !42
  %296 = add i64 %295, %209
  %297 = getelementptr inbounds i32, ptr %292, i64 %296
  %298 = load i32, ptr %297, align 4, !tbaa !22
  %299 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %228, i32 noundef %163, i32 noundef %298)
          to label %300 unwind label %306

300:                                              ; preds = %291
  %301 = icmp eq i32 %299, -1
  br i1 %301, label %308, label %302

302:                                              ; preds = %300
  %303 = load ptr, ptr %101, align 8, !tbaa !50
  %304 = zext i32 %299 to i64
  %305 = getelementptr inbounds double, ptr %303, i64 %304
  store double 0.000000e+00, ptr %305, align 8, !tbaa !52
  br label %308

306:                                              ; preds = %291
  %307 = landingpad { ptr, i32 }
          cleanup
  br label %699

308:                                              ; preds = %300, %302, %204
  %309 = add i32 %168, 1
  %310 = load ptr, ptr %160, align 8, !tbaa !41
  %311 = getelementptr inbounds i64, ptr %310, i64 %166
  %312 = load i64, ptr %311, align 8, !tbaa !42
  %313 = getelementptr inbounds i64, ptr %310, i64 %164
  %314 = load i64, ptr %313, align 8, !tbaa !42
  %315 = sub i64 %312, %314
  %316 = trunc i64 %315 to i32
  %317 = icmp ult i32 %309, %316
  br i1 %317, label %167, label %318

318:                                              ; preds = %308
  %319 = load i32, ptr %161, align 4, !tbaa !38
  %320 = icmp eq i32 %165, %319
  br i1 %320, label %321, label %323

321:                                              ; preds = %333, %323, %318
  %322 = phi i32 [ %165, %318 ], [ %324, %323 ], [ %319, %333 ]
  br label %162

323:                                              ; preds = %318, %333
  %324 = phi i32 [ %326, %333 ], [ %165, %318 ]
  %325 = phi i64 [ %329, %333 ], [ %312, %318 ]
  %326 = add i32 %324, 1
  %327 = zext i32 %326 to i64
  %328 = getelementptr inbounds i64, ptr %310, i64 %327
  %329 = load i64, ptr %328, align 8, !tbaa !42
  %330 = sub i64 %329, %325
  %331 = and i64 %330, 4294967295
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %333, label %321

333:                                              ; preds = %323
  %334 = icmp eq i32 %326, %319
  br i1 %334, label %321, label %323, !llvm.loop !82

335:                                              ; preds = %118
  br i1 %133, label %336, label %355

336:                                              ; preds = %335
  %337 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %123, i64 0, i32 2
  %338 = load i32, ptr %337, align 4, !tbaa !38, !noalias !118
  %339 = zext i32 %338 to i64
  br label %340

340:                                              ; preds = %345, %336
  %341 = phi i64 [ %343, %345 ], [ %119, %336 ]
  %342 = phi i64 [ %349, %345 ], [ %128, %336 ]
  %343 = add nuw nsw i64 %341, 1
  %344 = icmp ult i64 %343, %339
  br i1 %344, label %345, label %355

345:                                              ; preds = %340
  %346 = add nuw i64 %341, 2
  %347 = and i64 %346, 4294967295
  %348 = getelementptr inbounds i64, ptr %125, i64 %347
  %349 = load i64, ptr %348, align 8, !tbaa !42, !noalias !118
  %350 = sub i64 %349, %342
  %351 = and i64 %350, 4294967295
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %340, label %353

353:                                              ; preds = %345
  %354 = trunc i64 %343 to i32
  br label %355

355:                                              ; preds = %340, %353, %335
  %356 = phi i32 [ %134, %335 ], [ %354, %353 ], [ %338, %340 ]
  %357 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %358 unwind label %417

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %357, i64 0, i32 9
  %360 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %357, i64 0, i32 8
  %361 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %357, i64 0, i32 2
  br label %362

362:                                              ; preds = %660, %358
  %363 = phi i32 [ %356, %358 ], [ %661, %660 ]
  %364 = zext i32 %363 to i64
  %365 = add i32 %363, 1
  %366 = zext i32 %365 to i64
  br label %367

367:                                              ; preds = %362, %647
  %368 = phi i32 [ %648, %647 ], [ 0, %362 ]
  %369 = load ptr, ptr %8, align 8, !tbaa !47, !noalias !123
  %370 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %369, i64 0, i32 2
  %371 = load i32, ptr %370, align 4, !tbaa !38, !noalias !123
  %372 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %369, i64 0, i32 8
  %373 = zext i32 %371 to i64
  br label %374

374:                                              ; preds = %378, %367
  %375 = phi i64 [ %376, %378 ], [ %119, %367 ]
  %376 = add nuw nsw i64 %375, 1
  %377 = icmp ult i64 %376, %373
  br i1 %377, label %378, label %391

378:                                              ; preds = %374
  %379 = load ptr, ptr %372, align 8, !tbaa !41, !noalias !123
  %380 = add nuw i64 %375, 2
  %381 = and i64 %380, 4294967295
  %382 = getelementptr inbounds i64, ptr %379, i64 %381
  %383 = load i64, ptr %382, align 8, !tbaa !42, !noalias !123
  %384 = getelementptr inbounds i64, ptr %379, i64 %376
  %385 = load i64, ptr %384, align 8, !tbaa !42, !noalias !123
  %386 = sub i64 %383, %385
  %387 = and i64 %386, 4294967295
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %374, label %389

389:                                              ; preds = %378
  %390 = trunc i64 %376 to i32
  br label %391

391:                                              ; preds = %374, %389
  %392 = phi i32 [ %390, %389 ], [ %371, %374 ]
  %393 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %394 unwind label %419

394:                                              ; preds = %391
  %395 = icmp ne ptr %357, %393
  %396 = icmp ne i32 %363, %392
  %397 = or i1 %395, %396
  %398 = icmp ne i32 %368, 0
  %399 = or i1 %398, %397
  br i1 %399, label %421, label %400

400:                                              ; preds = %394
  br i1 %6, label %694, label %401

401:                                              ; preds = %400
  %402 = load i32, ptr %120, align 4, !tbaa !22
  %403 = zext i32 %402 to i64
  %404 = load ptr, ptr %88, align 8, !tbaa !72
  %405 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %404, i64 %403, i32 1
  %406 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %405, i64 0, i32 1
  %407 = load ptr, ptr %406, align 8, !tbaa !31
  %408 = load ptr, ptr %405, align 8, !tbaa !32
  %409 = ptrtoint ptr %407 to i64
  %410 = ptrtoint ptr %408 to i64
  %411 = sub i64 %409, %410
  %412 = ashr exact i64 %411, 4
  %413 = icmp eq ptr %407, %408
  %414 = load ptr, ptr %102, align 8, !tbaa !60
  br i1 %413, label %674, label %415

415:                                              ; preds = %401
  %416 = getelementptr inbounds double, ptr %414, i64 %119
  br label %679

417:                                              ; preds = %355
  %418 = landingpad { ptr, i32 }
          cleanup
  br label %696

419:                                              ; preds = %391
  %420 = landingpad { ptr, i32 }
          cleanup
  br label %696

421:                                              ; preds = %394
  %422 = load ptr, ptr %359, align 8, !tbaa !43
  %423 = load ptr, ptr %360, align 8, !tbaa !41
  %424 = getelementptr inbounds i64, ptr %423, i64 %364
  %425 = load i64, ptr %424, align 8, !tbaa !42
  %426 = zext i32 %368 to i64
  %427 = add i64 %425, %426
  %428 = getelementptr inbounds i32, ptr %422, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !22
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds i32, ptr %87, i64 %430
  %432 = load i32, ptr %431, align 4, !tbaa !22
  %433 = icmp eq i32 %432, -1
  %434 = load i32, ptr %120, align 4, !tbaa !22
  %435 = zext i32 %434 to i64
  %436 = load ptr, ptr %88, align 8, !tbaa !72
  %437 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %436, i64 %435, i32 1
  %438 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %437, i64 0, i32 1
  %439 = load ptr, ptr %438, align 8, !tbaa !31
  %440 = load ptr, ptr %437, align 8, !tbaa !32
  %441 = icmp eq ptr %439, %440
  br i1 %433, label %443, label %442

442:                                              ; preds = %421
  br i1 %441, label %631, label %506

443:                                              ; preds = %421
  br i1 %441, label %498, label %444

444:                                              ; preds = %443, %473
  %445 = phi ptr [ %482, %473 ], [ %440, %443 ]
  %446 = phi i64 [ %475, %473 ], [ 0, %443 ]
  %447 = phi i32 [ %474, %473 ], [ 0, %443 ]
  %448 = load ptr, ptr %101, align 8, !tbaa !50
  %449 = load ptr, ptr %8, align 8, !tbaa !47
  %450 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %449, i64 0, i32 8
  %451 = load ptr, ptr %450, align 8, !tbaa !41
  %452 = getelementptr inbounds i64, ptr %451, i64 %364
  %453 = load i64, ptr %452, align 8, !tbaa !42
  %454 = add i64 %453, %426
  %455 = getelementptr inbounds double, ptr %448, i64 %454
  %456 = load double, ptr %455, align 8, !tbaa !52
  %457 = getelementptr inbounds %"struct.std::pair", ptr %445, i64 %446, i32 1
  %458 = load double, ptr %457, align 8, !tbaa !35
  %459 = fmul double %456, %458
  %460 = fcmp oeq double %459, 0.000000e+00
  br i1 %460, label %473, label %461

461:                                              ; preds = %444
  %462 = getelementptr inbounds %"struct.std::pair", ptr %445, i64 %446
  %463 = load i32, ptr %462, align 8, !tbaa !37
  %464 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %449, i32 noundef %463, i32 noundef %429)
          to label %465 unwind label %488

465:                                              ; preds = %461
  %466 = icmp eq i32 %464, -1
  br i1 %466, label %473, label %467

467:                                              ; preds = %465
  %468 = load ptr, ptr %101, align 8, !tbaa !50
  %469 = zext i32 %464 to i64
  %470 = getelementptr inbounds double, ptr %468, i64 %469
  %471 = load double, ptr %470, align 8, !tbaa !52
  %472 = fadd double %459, %471
  store double %472, ptr %470, align 8, !tbaa !52
  br label %473

473:                                              ; preds = %467, %465, %444
  %474 = add i32 %447, 1
  %475 = zext i32 %474 to i64
  %476 = load i32, ptr %120, align 4, !tbaa !22
  %477 = zext i32 %476 to i64
  %478 = load ptr, ptr %88, align 8, !tbaa !72
  %479 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %478, i64 %477, i32 1
  %480 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %479, i64 0, i32 1
  %481 = load ptr, ptr %480, align 8, !tbaa !31
  %482 = load ptr, ptr %479, align 8, !tbaa !32
  %483 = ptrtoint ptr %481 to i64
  %484 = ptrtoint ptr %482 to i64
  %485 = sub i64 %483, %484
  %486 = ashr exact i64 %485, 4
  %487 = icmp eq i64 %486, %475
  br i1 %487, label %490, label %444

488:                                              ; preds = %461
  %489 = landingpad { ptr, i32 }
          cleanup
  br label %699

490:                                              ; preds = %473
  %491 = load ptr, ptr %359, align 8, !tbaa !43
  %492 = load ptr, ptr %360, align 8, !tbaa !41
  %493 = getelementptr inbounds i64, ptr %492, i64 %364
  %494 = load i64, ptr %493, align 8, !tbaa !42
  %495 = add i64 %494, %426
  %496 = getelementptr inbounds i32, ptr %491, i64 %495
  %497 = load i32, ptr %496, align 4, !tbaa !22
  br label %498

498:                                              ; preds = %490, %443
  %499 = phi i32 [ %497, %490 ], [ %429, %443 ]
  %500 = load ptr, ptr %8, align 8, !tbaa !47
  %501 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %500, i32 noundef %363, i32 noundef %499)
          to label %502 unwind label %504

502:                                              ; preds = %498
  %503 = icmp eq i32 %501, -1
  br i1 %503, label %647, label %641

504:                                              ; preds = %498
  %505 = landingpad { ptr, i32 }
          cleanup
  br label %699

506:                                              ; preds = %442, %611
  %507 = phi i32 [ %521, %611 ], [ %434, %442 ]
  %508 = phi ptr [ %522, %611 ], [ %436, %442 ]
  %509 = phi i32 [ %523, %611 ], [ %432, %442 ]
  %510 = phi i64 [ %615, %611 ], [ 0, %442 ]
  %511 = phi i32 [ %614, %611 ], [ 0, %442 ]
  %512 = zext i32 %509 to i64
  %513 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %508, i64 %512, i32 1
  %514 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %513, i64 0, i32 1
  %515 = load ptr, ptr %514, align 8, !tbaa !31
  %516 = load ptr, ptr %513, align 8, !tbaa !32
  %517 = icmp eq ptr %515, %516
  br i1 %517, label %520, label %529

518:                                              ; preds = %568
  %519 = load i32, ptr %120, align 4, !tbaa !22
  br label %520

520:                                              ; preds = %518, %506
  %521 = phi i32 [ %507, %506 ], [ %519, %518 ]
  %522 = phi ptr [ %508, %506 ], [ %573, %518 ]
  %523 = phi i32 [ %509, %506 ], [ %571, %518 ]
  %524 = phi i64 [ %512, %506 ], [ %572, %518 ]
  br i1 %6, label %525, label %585

525:                                              ; preds = %520
  %526 = zext i32 %521 to i64
  %527 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %522, i64 %526, i32 1
  %528 = load ptr, ptr %527, align 8, !tbaa !32
  br label %611

529:                                              ; preds = %506, %568
  %530 = phi ptr [ %577, %568 ], [ %516, %506 ]
  %531 = phi ptr [ %573, %568 ], [ %508, %506 ]
  %532 = phi i64 [ %570, %568 ], [ 0, %506 ]
  %533 = phi i32 [ %569, %568 ], [ 0, %506 ]
  %534 = load i32, ptr %120, align 4, !tbaa !22
  %535 = zext i32 %534 to i64
  %536 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %531, i64 %535, i32 1
  %537 = load ptr, ptr %536, align 8, !tbaa !32
  %538 = load ptr, ptr %101, align 8, !tbaa !50
  %539 = load ptr, ptr %8, align 8, !tbaa !47
  %540 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %539, i64 0, i32 8
  %541 = load ptr, ptr %540, align 8, !tbaa !41
  %542 = getelementptr inbounds i64, ptr %541, i64 %364
  %543 = load i64, ptr %542, align 8, !tbaa !42
  %544 = add i64 %543, %426
  %545 = getelementptr inbounds double, ptr %538, i64 %544
  %546 = load double, ptr %545, align 8, !tbaa !52
  %547 = getelementptr inbounds %"struct.std::pair", ptr %537, i64 %510, i32 1
  %548 = load double, ptr %547, align 8, !tbaa !35
  %549 = fmul double %546, %548
  %550 = getelementptr inbounds %"struct.std::pair", ptr %530, i64 %532, i32 1
  %551 = load double, ptr %550, align 8, !tbaa !35
  %552 = fmul double %549, %551
  %553 = fcmp oeq double %552, 0.000000e+00
  br i1 %553, label %568, label %554

554:                                              ; preds = %529
  %555 = getelementptr inbounds %"struct.std::pair", ptr %530, i64 %532
  %556 = getelementptr inbounds %"struct.std::pair", ptr %537, i64 %510
  %557 = load i32, ptr %555, align 8, !tbaa !37
  %558 = load i32, ptr %556, align 8, !tbaa !37
  %559 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %539, i32 noundef %558, i32 noundef %557)
          to label %560 unwind label %583

560:                                              ; preds = %554
  %561 = icmp eq i32 %559, -1
  br i1 %561, label %568, label %562

562:                                              ; preds = %560
  %563 = load ptr, ptr %101, align 8, !tbaa !50
  %564 = zext i32 %559 to i64
  %565 = getelementptr inbounds double, ptr %563, i64 %564
  %566 = load double, ptr %565, align 8, !tbaa !52
  %567 = fadd double %552, %566
  store double %567, ptr %565, align 8, !tbaa !52
  br label %568

568:                                              ; preds = %562, %560, %529
  %569 = add i32 %533, 1
  %570 = zext i32 %569 to i64
  %571 = load i32, ptr %431, align 4, !tbaa !22
  %572 = zext i32 %571 to i64
  %573 = load ptr, ptr %88, align 8, !tbaa !72
  %574 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %573, i64 %572, i32 1
  %575 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %574, i64 0, i32 1
  %576 = load ptr, ptr %575, align 8, !tbaa !31
  %577 = load ptr, ptr %574, align 8, !tbaa !32
  %578 = ptrtoint ptr %576 to i64
  %579 = ptrtoint ptr %577 to i64
  %580 = sub i64 %578, %579
  %581 = ashr exact i64 %580, 4
  %582 = icmp eq i64 %581, %570
  br i1 %582, label %518, label %529

583:                                              ; preds = %554
  %584 = landingpad { ptr, i32 }
          cleanup
  br label %699

585:                                              ; preds = %520
  %586 = load ptr, ptr %101, align 8, !tbaa !50
  %587 = load ptr, ptr %8, align 8, !tbaa !47
  %588 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %587, i64 0, i32 8
  %589 = load ptr, ptr %588, align 8, !tbaa !41
  %590 = getelementptr inbounds i64, ptr %589, i64 %364
  %591 = load i64, ptr %590, align 8, !tbaa !42
  %592 = add i64 %591, %426
  %593 = getelementptr inbounds double, ptr %586, i64 %592
  %594 = load double, ptr %593, align 8, !tbaa !52
  %595 = zext i32 %521 to i64
  %596 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %522, i64 %595, i32 1
  %597 = load ptr, ptr %596, align 8, !tbaa !32
  %598 = getelementptr inbounds %"struct.std::pair", ptr %597, i64 %510
  %599 = getelementptr inbounds %"struct.std::pair", ptr %597, i64 %510, i32 1
  %600 = load double, ptr %599, align 8, !tbaa !35
  %601 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %522, i64 %524, i32 2
  %602 = load double, ptr %601, align 8, !tbaa !48
  %603 = load i32, ptr %598, align 8, !tbaa !37
  %604 = load ptr, ptr %102, align 8, !tbaa !60
  %605 = zext i32 %603 to i64
  %606 = getelementptr inbounds double, ptr %604, i64 %605
  %607 = load double, ptr %606, align 8, !tbaa !52
  %608 = fneg double %594
  %609 = fmul double %600, %608
  %610 = tail call double @llvm.fmuladd.f64(double %609, double %602, double %607)
  store double %610, ptr %606, align 8, !tbaa !52
  br label %611

611:                                              ; preds = %525, %585
  %612 = phi i64 [ %526, %525 ], [ %595, %585 ]
  %613 = phi ptr [ %528, %525 ], [ %597, %585 ]
  %614 = add i32 %511, 1
  %615 = zext i32 %614 to i64
  %616 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %522, i64 %612, i32 1, i32 0, i32 0, i32 0, i32 1
  %617 = load ptr, ptr %616, align 8, !tbaa !31
  %618 = ptrtoint ptr %617 to i64
  %619 = ptrtoint ptr %613 to i64
  %620 = sub i64 %618, %619
  %621 = ashr exact i64 %620, 4
  %622 = icmp eq i64 %621, %615
  br i1 %622, label %623, label %506

623:                                              ; preds = %611
  %624 = load ptr, ptr %359, align 8, !tbaa !43
  %625 = load ptr, ptr %360, align 8, !tbaa !41
  %626 = getelementptr inbounds i64, ptr %625, i64 %364
  %627 = load i64, ptr %626, align 8, !tbaa !42
  %628 = add i64 %627, %426
  %629 = getelementptr inbounds i32, ptr %624, i64 %628
  %630 = load i32, ptr %629, align 4, !tbaa !22
  br label %631

631:                                              ; preds = %623, %442
  %632 = phi i32 [ %630, %623 ], [ %429, %442 ]
  %633 = load ptr, ptr %8, align 8, !tbaa !47
  %634 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %633, i32 noundef %363, i32 noundef %632)
          to label %635 unwind label %639

635:                                              ; preds = %631
  %636 = icmp eq i64 %119, %430
  %637 = select i1 %636, double %44, double 0.000000e+00
  %638 = icmp eq i32 %634, -1
  br i1 %638, label %647, label %641

639:                                              ; preds = %631
  %640 = landingpad { ptr, i32 }
          cleanup
  br label %699

641:                                              ; preds = %635, %502
  %642 = phi i32 [ %501, %502 ], [ %634, %635 ]
  %643 = phi double [ 0.000000e+00, %502 ], [ %637, %635 ]
  %644 = load ptr, ptr %101, align 8, !tbaa !50
  %645 = zext i32 %642 to i64
  %646 = getelementptr inbounds double, ptr %644, i64 %645
  store double %643, ptr %646, align 8, !tbaa !52
  br label %647

647:                                              ; preds = %641, %635, %502
  %648 = add i32 %368, 1
  %649 = load ptr, ptr %360, align 8, !tbaa !41
  %650 = getelementptr inbounds i64, ptr %649, i64 %366
  %651 = load i64, ptr %650, align 8, !tbaa !42
  %652 = getelementptr inbounds i64, ptr %649, i64 %364
  %653 = load i64, ptr %652, align 8, !tbaa !42
  %654 = sub i64 %651, %653
  %655 = trunc i64 %654 to i32
  %656 = icmp ult i32 %648, %655
  br i1 %656, label %367, label %657

657:                                              ; preds = %647
  %658 = load i32, ptr %361, align 4, !tbaa !38
  %659 = icmp eq i32 %365, %658
  br i1 %659, label %660, label %662

660:                                              ; preds = %672, %662, %657
  %661 = phi i32 [ %365, %657 ], [ %663, %662 ], [ %658, %672 ]
  br label %362

662:                                              ; preds = %657, %672
  %663 = phi i32 [ %665, %672 ], [ %365, %657 ]
  %664 = phi i64 [ %668, %672 ], [ %651, %657 ]
  %665 = add i32 %663, 1
  %666 = zext i32 %665 to i64
  %667 = getelementptr inbounds i64, ptr %649, i64 %666
  %668 = load i64, ptr %667, align 8, !tbaa !42
  %669 = sub i64 %668, %664
  %670 = and i64 %669, 4294967295
  %671 = icmp eq i64 %670, 0
  br i1 %671, label %672, label %660

672:                                              ; preds = %662
  %673 = icmp eq i32 %665, %658
  br i1 %673, label %660, label %662, !llvm.loop !82

674:                                              ; preds = %679, %401
  %675 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %404, i64 %403
  %676 = load i32, ptr %675, align 8, !tbaa !24
  %677 = zext i32 %676 to i64
  %678 = getelementptr inbounds double, ptr %414, i64 %677
  store double 0.000000e+00, ptr %678, align 8, !tbaa !52
  br label %694

679:                                              ; preds = %415, %679
  %680 = phi i64 [ 0, %415 ], [ %692, %679 ]
  %681 = phi i32 [ 0, %415 ], [ %691, %679 ]
  %682 = load double, ptr %416, align 8, !tbaa !52
  %683 = getelementptr inbounds %"struct.std::pair", ptr %408, i64 %680
  %684 = getelementptr inbounds %"struct.std::pair", ptr %408, i64 %680, i32 1
  %685 = load double, ptr %684, align 8, !tbaa !35
  %686 = load i32, ptr %683, align 8, !tbaa !37
  %687 = zext i32 %686 to i64
  %688 = getelementptr inbounds double, ptr %414, i64 %687
  %689 = load double, ptr %688, align 8, !tbaa !52
  %690 = tail call double @llvm.fmuladd.f64(double %682, double %685, double %689)
  store double %690, ptr %688, align 8, !tbaa !52
  %691 = add i32 %681, 1
  %692 = zext i32 %691 to i64
  %693 = icmp eq i64 %412, %692
  br i1 %693, label %674, label %679

694:                                              ; preds = %194, %674, %400
  %695 = icmp eq i64 %126, %103
  br i1 %695, label %114, label %118

696:                                              ; preds = %417, %419, %200, %202
  %697 = phi { ptr, i32 } [ %203, %202 ], [ %201, %200 ], [ %420, %419 ], [ %418, %417 ]
  %698 = icmp eq ptr %87, null
  br i1 %698, label %701, label %699

699:                                              ; preds = %273, %488, %306, %504, %639, %583, %696
  %700 = phi { ptr, i32 } [ %697, %696 ], [ %584, %583 ], [ %640, %639 ], [ %505, %504 ], [ %307, %306 ], [ %489, %488 ], [ %274, %273 ]
  tail call void @_ZdlPv(ptr noundef nonnull %87) #23
  br label %701

701:                                              ; preds = %699, %696
  %702 = phi { ptr, i32 } [ %697, %696 ], [ %700, %699 ]
  resume { ptr, i32 } %702
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #3

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIdNS_6VectorIfEEEEvRNS_12SparseMatrixIT_EERT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(88) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !5
  %6 = icmp eq i32 %5, 0
  %7 = tail call noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
  %8 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !47
  %10 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !38
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %41, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %1, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !50
  %16 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %9, i64 0, i32 8
  %17 = load ptr, ptr %16, align 8, !tbaa !41
  %18 = zext i32 %11 to i64
  %19 = and i64 %18, 3
  %20 = icmp ult i32 %11, 4
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = and i64 %18, 4294967292
  br label %52

23:                                               ; preds = %52, %13
  %24 = phi double [ undef, %13 ], [ %82, %52 ]
  %25 = phi i64 [ 0, %13 ], [ %83, %52 ]
  %26 = phi double [ 0.000000e+00, %13 ], [ %82, %52 ]
  %27 = icmp eq i64 %19, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %23, %28
  %29 = phi i64 [ %38, %28 ], [ %25, %23 ]
  %30 = phi double [ %37, %28 ], [ %26, %23 ]
  %31 = phi i64 [ %39, %28 ], [ 0, %23 ]
  %32 = getelementptr inbounds i64, ptr %17, i64 %29
  %33 = load i64, ptr %32, align 8, !tbaa !42
  %34 = getelementptr inbounds double, ptr %15, i64 %33
  %35 = load double, ptr %34, align 8, !tbaa !52
  %36 = tail call double @llvm.fabs.f64(double %35)
  %37 = fadd double %30, %36
  %38 = add nuw nsw i64 %29, 1
  %39 = add i64 %31, 1
  %40 = icmp eq i64 %39, %19
  br i1 %40, label %41, label %28, !llvm.loop !126

41:                                               ; preds = %23, %28, %3
  %42 = phi double [ 0.000000e+00, %3 ], [ %24, %23 ], [ %37, %28 ]
  %43 = uitofp i32 %11 to double
  %44 = fdiv double %42, %43
  %45 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %7, i64 0, i32 2
  %46 = load i32, ptr %45, align 4, !tbaa !38
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %86, label %48

48:                                               ; preds = %41
  %49 = zext i32 %46 to i64
  %50 = shl nuw nsw i64 %49, 2
  %51 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %50) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %51, i8 -1, i64 %50, i1 false), !tbaa !22
  br label %86

52:                                               ; preds = %52, %21
  %53 = phi i64 [ 0, %21 ], [ %83, %52 ]
  %54 = phi double [ 0.000000e+00, %21 ], [ %82, %52 ]
  %55 = phi i64 [ 0, %21 ], [ %84, %52 ]
  %56 = getelementptr inbounds i64, ptr %17, i64 %53
  %57 = load i64, ptr %56, align 8, !tbaa !42
  %58 = getelementptr inbounds double, ptr %15, i64 %57
  %59 = load double, ptr %58, align 8, !tbaa !52
  %60 = tail call double @llvm.fabs.f64(double %59)
  %61 = fadd double %54, %60
  %62 = or i64 %53, 1
  %63 = getelementptr inbounds i64, ptr %17, i64 %62
  %64 = load i64, ptr %63, align 8, !tbaa !42
  %65 = getelementptr inbounds double, ptr %15, i64 %64
  %66 = load double, ptr %65, align 8, !tbaa !52
  %67 = tail call double @llvm.fabs.f64(double %66)
  %68 = fadd double %61, %67
  %69 = or i64 %53, 2
  %70 = getelementptr inbounds i64, ptr %17, i64 %69
  %71 = load i64, ptr %70, align 8, !tbaa !42
  %72 = getelementptr inbounds double, ptr %15, i64 %71
  %73 = load double, ptr %72, align 8, !tbaa !52
  %74 = tail call double @llvm.fabs.f64(double %73)
  %75 = fadd double %68, %74
  %76 = or i64 %53, 3
  %77 = getelementptr inbounds i64, ptr %17, i64 %76
  %78 = load i64, ptr %77, align 8, !tbaa !42
  %79 = getelementptr inbounds double, ptr %15, i64 %78
  %80 = load double, ptr %79, align 8, !tbaa !52
  %81 = tail call double @llvm.fabs.f64(double %80)
  %82 = fadd double %75, %81
  %83 = add nuw nsw i64 %53, 4
  %84 = add i64 %55, 4
  %85 = icmp eq i64 %84, %22
  br i1 %85, label %23, label %52

86:                                               ; preds = %48, %41
  %87 = phi ptr [ null, %41 ], [ %51, %48 ]
  %88 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %89 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %90 = load ptr, ptr %89, align 8, !tbaa !70
  %91 = load ptr, ptr %88, align 8, !tbaa !72
  %92 = ptrtoint ptr %90 to i64
  %93 = ptrtoint ptr %91 to i64
  %94 = sub i64 %92, %93
  %95 = sdiv exact i64 %94, 40
  %96 = icmp eq ptr %90, %91
  br i1 %96, label %97, label %104

97:                                               ; preds = %104, %86
  %98 = load i32, ptr %45, align 4, !tbaa !38
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %114, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %1, i64 0, i32 2
  %102 = getelementptr inbounds %"class.dealii::Vector", ptr %2, i64 0, i32 3
  %103 = zext i32 %98 to i64
  br label %118

104:                                              ; preds = %86, %104
  %105 = phi i64 [ %112, %104 ], [ 0, %86 ]
  %106 = phi i32 [ %111, %104 ], [ 0, %86 ]
  %107 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %91, i64 %105
  %108 = load i32, ptr %107, align 8, !tbaa !24
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds i32, ptr %87, i64 %109
  store i32 %106, ptr %110, align 4, !tbaa !22
  %111 = add i32 %106, 1
  %112 = zext i32 %111 to i64
  %113 = icmp ugt i64 %95, %112
  br i1 %113, label %104, label %97

114:                                              ; preds = %701, %97
  %115 = icmp eq ptr %87, null
  br i1 %115, label %117, label %116

116:                                              ; preds = %114
  tail call void @_ZdlPv(ptr noundef nonnull %87) #23
  br label %117

117:                                              ; preds = %114, %116
  ret void

118:                                              ; preds = %100, %701
  %119 = phi i64 [ 0, %100 ], [ %126, %701 ]
  %120 = getelementptr inbounds i32, ptr %87, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !22
  %122 = icmp eq i32 %121, -1
  %123 = load ptr, ptr %8, align 8, !tbaa !47, !noalias !73
  %124 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %123, i64 0, i32 8
  %125 = load ptr, ptr %124, align 8, !tbaa !41, !noalias !73
  %126 = add nuw nsw i64 %119, 1
  %127 = getelementptr inbounds i64, ptr %125, i64 %126
  %128 = load i64, ptr %127, align 8, !tbaa !42, !noalias !73
  %129 = getelementptr inbounds i64, ptr %125, i64 %119
  %130 = load i64, ptr %129, align 8, !tbaa !42, !noalias !73
  %131 = sub i64 %128, %130
  %132 = and i64 %131, 4294967295
  %133 = icmp eq i64 %132, 0
  %134 = trunc i64 %119 to i32
  br i1 %122, label %135, label %337

135:                                              ; preds = %118
  br i1 %133, label %136, label %155

136:                                              ; preds = %135
  %137 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %123, i64 0, i32 2
  %138 = load i32, ptr %137, align 4, !tbaa !38, !noalias !127
  %139 = zext i32 %138 to i64
  br label %140

140:                                              ; preds = %145, %136
  %141 = phi i64 [ %143, %145 ], [ %119, %136 ]
  %142 = phi i64 [ %149, %145 ], [ %128, %136 ]
  %143 = add nuw nsw i64 %141, 1
  %144 = icmp ult i64 %143, %139
  br i1 %144, label %145, label %155

145:                                              ; preds = %140
  %146 = add nuw i64 %141, 2
  %147 = and i64 %146, 4294967295
  %148 = getelementptr inbounds i64, ptr %125, i64 %147
  %149 = load i64, ptr %148, align 8, !tbaa !42, !noalias !127
  %150 = sub i64 %149, %142
  %151 = and i64 %150, 4294967295
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %140, label %153

153:                                              ; preds = %145
  %154 = trunc i64 %143 to i32
  br label %155

155:                                              ; preds = %140, %153, %135
  %156 = phi i32 [ %134, %135 ], [ %154, %153 ], [ %138, %140 ]
  %157 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %158 unwind label %200

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %157, i64 0, i32 9
  %160 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %157, i64 0, i32 8
  %161 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %157, i64 0, i32 2
  br label %162

162:                                              ; preds = %323, %158
  %163 = phi i32 [ %156, %158 ], [ %324, %323 ]
  %164 = zext i32 %163 to i64
  %165 = add i32 %163, 1
  %166 = zext i32 %165 to i64
  br label %167

167:                                              ; preds = %162, %310
  %168 = phi i32 [ %311, %310 ], [ 0, %162 ]
  %169 = load ptr, ptr %8, align 8, !tbaa !47, !noalias !132
  %170 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %169, i64 0, i32 2
  %171 = load i32, ptr %170, align 4, !tbaa !38, !noalias !132
  %172 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %169, i64 0, i32 8
  %173 = zext i32 %171 to i64
  br label %174

174:                                              ; preds = %178, %167
  %175 = phi i64 [ %176, %178 ], [ %119, %167 ]
  %176 = add nuw nsw i64 %175, 1
  %177 = icmp ult i64 %176, %173
  br i1 %177, label %178, label %191

178:                                              ; preds = %174
  %179 = load ptr, ptr %172, align 8, !tbaa !41, !noalias !132
  %180 = add nuw i64 %175, 2
  %181 = and i64 %180, 4294967295
  %182 = getelementptr inbounds i64, ptr %179, i64 %181
  %183 = load i64, ptr %182, align 8, !tbaa !42, !noalias !132
  %184 = getelementptr inbounds i64, ptr %179, i64 %176
  %185 = load i64, ptr %184, align 8, !tbaa !42, !noalias !132
  %186 = sub i64 %183, %185
  %187 = and i64 %186, 4294967295
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %174, label %189

189:                                              ; preds = %178
  %190 = trunc i64 %176 to i32
  br label %191

191:                                              ; preds = %174, %189
  %192 = phi i32 [ %190, %189 ], [ %171, %174 ]
  %193 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %194 unwind label %202

194:                                              ; preds = %191
  %195 = icmp ne ptr %157, %193
  %196 = icmp ne i32 %163, %192
  %197 = or i1 %195, %196
  %198 = icmp ne i32 %168, 0
  %199 = or i1 %198, %197
  br i1 %199, label %204, label %701

200:                                              ; preds = %155
  %201 = landingpad { ptr, i32 }
          cleanup
  br label %703

202:                                              ; preds = %191
  %203 = landingpad { ptr, i32 }
          cleanup
  br label %703

204:                                              ; preds = %194
  %205 = load ptr, ptr %159, align 8, !tbaa !43
  %206 = load ptr, ptr %160, align 8, !tbaa !41
  %207 = getelementptr inbounds i64, ptr %206, i64 %164
  %208 = load i64, ptr %207, align 8, !tbaa !42
  %209 = zext i32 %168 to i64
  %210 = add i64 %208, %209
  %211 = getelementptr inbounds i32, ptr %205, i64 %210
  %212 = load i32, ptr %211, align 4, !tbaa !22
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds i32, ptr %87, i64 %213
  %215 = load i32, ptr %214, align 4, !tbaa !22
  %216 = icmp eq i32 %215, -1
  br i1 %216, label %310, label %217

217:                                              ; preds = %204
  %218 = zext i32 %215 to i64
  %219 = load ptr, ptr %88, align 8, !tbaa !72
  %220 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %219, i64 %218, i32 1
  %221 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %220, i64 0, i32 1
  %222 = load ptr, ptr %221, align 8, !tbaa !31
  %223 = load ptr, ptr %220, align 8, !tbaa !32
  %224 = icmp eq ptr %222, %223
  br i1 %224, label %225, label %229

225:                                              ; preds = %258, %217
  %226 = phi i64 [ %218, %217 ], [ %262, %258 ]
  %227 = phi ptr [ %219, %217 ], [ %263, %258 ]
  %228 = load ptr, ptr %8, align 8, !tbaa !47
  br i1 %6, label %293, label %275

229:                                              ; preds = %217, %258
  %230 = phi ptr [ %267, %258 ], [ %223, %217 ]
  %231 = phi i64 [ %260, %258 ], [ 0, %217 ]
  %232 = phi i32 [ %259, %258 ], [ 0, %217 ]
  %233 = load ptr, ptr %101, align 8, !tbaa !50
  %234 = load ptr, ptr %8, align 8, !tbaa !47
  %235 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %234, i64 0, i32 8
  %236 = load ptr, ptr %235, align 8, !tbaa !41
  %237 = getelementptr inbounds i64, ptr %236, i64 %164
  %238 = load i64, ptr %237, align 8, !tbaa !42
  %239 = add i64 %238, %209
  %240 = getelementptr inbounds double, ptr %233, i64 %239
  %241 = load double, ptr %240, align 8, !tbaa !52
  %242 = getelementptr inbounds %"struct.std::pair", ptr %230, i64 %231, i32 1
  %243 = load double, ptr %242, align 8, !tbaa !35
  %244 = fmul double %241, %243
  %245 = fcmp oeq double %244, 0.000000e+00
  br i1 %245, label %258, label %246

246:                                              ; preds = %229
  %247 = getelementptr inbounds %"struct.std::pair", ptr %230, i64 %231
  %248 = load i32, ptr %247, align 8, !tbaa !37
  %249 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %234, i32 noundef %134, i32 noundef %248)
          to label %250 unwind label %273

250:                                              ; preds = %246
  %251 = icmp eq i32 %249, -1
  br i1 %251, label %258, label %252

252:                                              ; preds = %250
  %253 = load ptr, ptr %101, align 8, !tbaa !50
  %254 = zext i32 %249 to i64
  %255 = getelementptr inbounds double, ptr %253, i64 %254
  %256 = load double, ptr %255, align 8, !tbaa !52
  %257 = fadd double %244, %256
  store double %257, ptr %255, align 8, !tbaa !52
  br label %258

258:                                              ; preds = %252, %250, %229
  %259 = add i32 %232, 1
  %260 = zext i32 %259 to i64
  %261 = load i32, ptr %214, align 4, !tbaa !22
  %262 = zext i32 %261 to i64
  %263 = load ptr, ptr %88, align 8, !tbaa !72
  %264 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %263, i64 %262, i32 1
  %265 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %264, i64 0, i32 1
  %266 = load ptr, ptr %265, align 8, !tbaa !31
  %267 = load ptr, ptr %264, align 8, !tbaa !32
  %268 = ptrtoint ptr %266 to i64
  %269 = ptrtoint ptr %267 to i64
  %270 = sub i64 %268, %269
  %271 = ashr exact i64 %270, 4
  %272 = icmp eq i64 %271, %260
  br i1 %272, label %225, label %229

273:                                              ; preds = %246
  %274 = landingpad { ptr, i32 }
          cleanup
  br label %706

275:                                              ; preds = %225
  %276 = load ptr, ptr %101, align 8, !tbaa !50
  %277 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %228, i64 0, i32 8
  %278 = load ptr, ptr %277, align 8, !tbaa !41
  %279 = getelementptr inbounds i64, ptr %278, i64 %164
  %280 = load i64, ptr %279, align 8, !tbaa !42
  %281 = add i64 %280, %209
  %282 = getelementptr inbounds double, ptr %276, i64 %281
  %283 = load double, ptr %282, align 8, !tbaa !52
  %284 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %227, i64 %226, i32 2
  %285 = load double, ptr %284, align 8, !tbaa !48
  %286 = load ptr, ptr %102, align 8, !tbaa !49
  %287 = getelementptr inbounds float, ptr %286, i64 %119
  %288 = load float, ptr %287, align 4, !tbaa !33
  %289 = fpext float %288 to double
  %290 = fneg double %283
  %291 = tail call double @llvm.fmuladd.f64(double %290, double %285, double %289)
  %292 = fptrunc double %291 to float
  store float %292, ptr %287, align 4, !tbaa !33
  br label %293

293:                                              ; preds = %225, %275
  %294 = load ptr, ptr %159, align 8, !tbaa !43
  %295 = load ptr, ptr %160, align 8, !tbaa !41
  %296 = getelementptr inbounds i64, ptr %295, i64 %164
  %297 = load i64, ptr %296, align 8, !tbaa !42
  %298 = add i64 %297, %209
  %299 = getelementptr inbounds i32, ptr %294, i64 %298
  %300 = load i32, ptr %299, align 4, !tbaa !22
  %301 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %228, i32 noundef %163, i32 noundef %300)
          to label %302 unwind label %308

302:                                              ; preds = %293
  %303 = icmp eq i32 %301, -1
  br i1 %303, label %310, label %304

304:                                              ; preds = %302
  %305 = load ptr, ptr %101, align 8, !tbaa !50
  %306 = zext i32 %301 to i64
  %307 = getelementptr inbounds double, ptr %305, i64 %306
  store double 0.000000e+00, ptr %307, align 8, !tbaa !52
  br label %310

308:                                              ; preds = %293
  %309 = landingpad { ptr, i32 }
          cleanup
  br label %706

310:                                              ; preds = %302, %304, %204
  %311 = add i32 %168, 1
  %312 = load ptr, ptr %160, align 8, !tbaa !41
  %313 = getelementptr inbounds i64, ptr %312, i64 %166
  %314 = load i64, ptr %313, align 8, !tbaa !42
  %315 = getelementptr inbounds i64, ptr %312, i64 %164
  %316 = load i64, ptr %315, align 8, !tbaa !42
  %317 = sub i64 %314, %316
  %318 = trunc i64 %317 to i32
  %319 = icmp ult i32 %311, %318
  br i1 %319, label %167, label %320

320:                                              ; preds = %310
  %321 = load i32, ptr %161, align 4, !tbaa !38
  %322 = icmp eq i32 %165, %321
  br i1 %322, label %323, label %325

323:                                              ; preds = %335, %325, %320
  %324 = phi i32 [ %165, %320 ], [ %326, %325 ], [ %321, %335 ]
  br label %162

325:                                              ; preds = %320, %335
  %326 = phi i32 [ %328, %335 ], [ %165, %320 ]
  %327 = phi i64 [ %331, %335 ], [ %314, %320 ]
  %328 = add i32 %326, 1
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds i64, ptr %312, i64 %329
  %331 = load i64, ptr %330, align 8, !tbaa !42
  %332 = sub i64 %331, %327
  %333 = and i64 %332, 4294967295
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %323

335:                                              ; preds = %325
  %336 = icmp eq i32 %328, %321
  br i1 %336, label %323, label %325, !llvm.loop !82

337:                                              ; preds = %118
  br i1 %133, label %338, label %357

338:                                              ; preds = %337
  %339 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %123, i64 0, i32 2
  %340 = load i32, ptr %339, align 4, !tbaa !38, !noalias !135
  %341 = zext i32 %340 to i64
  br label %342

342:                                              ; preds = %347, %338
  %343 = phi i64 [ %345, %347 ], [ %119, %338 ]
  %344 = phi i64 [ %351, %347 ], [ %128, %338 ]
  %345 = add nuw nsw i64 %343, 1
  %346 = icmp ult i64 %345, %341
  br i1 %346, label %347, label %357

347:                                              ; preds = %342
  %348 = add nuw i64 %343, 2
  %349 = and i64 %348, 4294967295
  %350 = getelementptr inbounds i64, ptr %125, i64 %349
  %351 = load i64, ptr %350, align 8, !tbaa !42, !noalias !135
  %352 = sub i64 %351, %344
  %353 = and i64 %352, 4294967295
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %342, label %355

355:                                              ; preds = %347
  %356 = trunc i64 %345 to i32
  br label %357

357:                                              ; preds = %342, %355, %337
  %358 = phi i32 [ %134, %337 ], [ %356, %355 ], [ %340, %342 ]
  %359 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %360 unwind label %419

360:                                              ; preds = %357
  %361 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %359, i64 0, i32 9
  %362 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %359, i64 0, i32 8
  %363 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %359, i64 0, i32 2
  br label %364

364:                                              ; preds = %664, %360
  %365 = phi i32 [ %358, %360 ], [ %665, %664 ]
  %366 = zext i32 %365 to i64
  %367 = add i32 %365, 1
  %368 = zext i32 %367 to i64
  br label %369

369:                                              ; preds = %364, %651
  %370 = phi i32 [ %652, %651 ], [ 0, %364 ]
  %371 = load ptr, ptr %8, align 8, !tbaa !47, !noalias !140
  %372 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %371, i64 0, i32 2
  %373 = load i32, ptr %372, align 4, !tbaa !38, !noalias !140
  %374 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %371, i64 0, i32 8
  %375 = zext i32 %373 to i64
  br label %376

376:                                              ; preds = %380, %369
  %377 = phi i64 [ %378, %380 ], [ %119, %369 ]
  %378 = add nuw nsw i64 %377, 1
  %379 = icmp ult i64 %378, %375
  br i1 %379, label %380, label %393

380:                                              ; preds = %376
  %381 = load ptr, ptr %374, align 8, !tbaa !41, !noalias !140
  %382 = add nuw i64 %377, 2
  %383 = and i64 %382, 4294967295
  %384 = getelementptr inbounds i64, ptr %381, i64 %383
  %385 = load i64, ptr %384, align 8, !tbaa !42, !noalias !140
  %386 = getelementptr inbounds i64, ptr %381, i64 %378
  %387 = load i64, ptr %386, align 8, !tbaa !42, !noalias !140
  %388 = sub i64 %385, %387
  %389 = and i64 %388, 4294967295
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %376, label %391

391:                                              ; preds = %380
  %392 = trunc i64 %378 to i32
  br label %393

393:                                              ; preds = %376, %391
  %394 = phi i32 [ %392, %391 ], [ %373, %376 ]
  %395 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %1)
          to label %396 unwind label %421

396:                                              ; preds = %393
  %397 = icmp ne ptr %359, %395
  %398 = icmp ne i32 %365, %394
  %399 = or i1 %397, %398
  %400 = icmp ne i32 %370, 0
  %401 = or i1 %400, %399
  br i1 %401, label %423, label %402

402:                                              ; preds = %396
  br i1 %6, label %701, label %403

403:                                              ; preds = %402
  %404 = load i32, ptr %120, align 4, !tbaa !22
  %405 = zext i32 %404 to i64
  %406 = load ptr, ptr %88, align 8, !tbaa !72
  %407 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %406, i64 %405, i32 1
  %408 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %407, i64 0, i32 1
  %409 = load ptr, ptr %408, align 8, !tbaa !31
  %410 = load ptr, ptr %407, align 8, !tbaa !32
  %411 = ptrtoint ptr %409 to i64
  %412 = ptrtoint ptr %410 to i64
  %413 = sub i64 %411, %412
  %414 = ashr exact i64 %413, 4
  %415 = icmp eq ptr %409, %410
  %416 = load ptr, ptr %102, align 8, !tbaa !49
  br i1 %415, label %678, label %417

417:                                              ; preds = %403
  %418 = getelementptr inbounds float, ptr %416, i64 %119
  br label %683

419:                                              ; preds = %357
  %420 = landingpad { ptr, i32 }
          cleanup
  br label %703

421:                                              ; preds = %393
  %422 = landingpad { ptr, i32 }
          cleanup
  br label %703

423:                                              ; preds = %396
  %424 = load ptr, ptr %361, align 8, !tbaa !43
  %425 = load ptr, ptr %362, align 8, !tbaa !41
  %426 = getelementptr inbounds i64, ptr %425, i64 %366
  %427 = load i64, ptr %426, align 8, !tbaa !42
  %428 = zext i32 %370 to i64
  %429 = add i64 %427, %428
  %430 = getelementptr inbounds i32, ptr %424, i64 %429
  %431 = load i32, ptr %430, align 4, !tbaa !22
  %432 = zext i32 %431 to i64
  %433 = getelementptr inbounds i32, ptr %87, i64 %432
  %434 = load i32, ptr %433, align 4, !tbaa !22
  %435 = icmp eq i32 %434, -1
  %436 = load i32, ptr %120, align 4, !tbaa !22
  %437 = zext i32 %436 to i64
  %438 = load ptr, ptr %88, align 8, !tbaa !72
  %439 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %438, i64 %437, i32 1
  %440 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %439, i64 0, i32 1
  %441 = load ptr, ptr %440, align 8, !tbaa !31
  %442 = load ptr, ptr %439, align 8, !tbaa !32
  %443 = icmp eq ptr %441, %442
  br i1 %435, label %445, label %444

444:                                              ; preds = %423
  br i1 %443, label %635, label %508

445:                                              ; preds = %423
  br i1 %443, label %500, label %446

446:                                              ; preds = %445, %475
  %447 = phi ptr [ %484, %475 ], [ %442, %445 ]
  %448 = phi i64 [ %477, %475 ], [ 0, %445 ]
  %449 = phi i32 [ %476, %475 ], [ 0, %445 ]
  %450 = load ptr, ptr %101, align 8, !tbaa !50
  %451 = load ptr, ptr %8, align 8, !tbaa !47
  %452 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %451, i64 0, i32 8
  %453 = load ptr, ptr %452, align 8, !tbaa !41
  %454 = getelementptr inbounds i64, ptr %453, i64 %366
  %455 = load i64, ptr %454, align 8, !tbaa !42
  %456 = add i64 %455, %428
  %457 = getelementptr inbounds double, ptr %450, i64 %456
  %458 = load double, ptr %457, align 8, !tbaa !52
  %459 = getelementptr inbounds %"struct.std::pair", ptr %447, i64 %448, i32 1
  %460 = load double, ptr %459, align 8, !tbaa !35
  %461 = fmul double %458, %460
  %462 = fcmp oeq double %461, 0.000000e+00
  br i1 %462, label %475, label %463

463:                                              ; preds = %446
  %464 = getelementptr inbounds %"struct.std::pair", ptr %447, i64 %448
  %465 = load i32, ptr %464, align 8, !tbaa !37
  %466 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %451, i32 noundef %465, i32 noundef %431)
          to label %467 unwind label %490

467:                                              ; preds = %463
  %468 = icmp eq i32 %466, -1
  br i1 %468, label %475, label %469

469:                                              ; preds = %467
  %470 = load ptr, ptr %101, align 8, !tbaa !50
  %471 = zext i32 %466 to i64
  %472 = getelementptr inbounds double, ptr %470, i64 %471
  %473 = load double, ptr %472, align 8, !tbaa !52
  %474 = fadd double %461, %473
  store double %474, ptr %472, align 8, !tbaa !52
  br label %475

475:                                              ; preds = %469, %467, %446
  %476 = add i32 %449, 1
  %477 = zext i32 %476 to i64
  %478 = load i32, ptr %120, align 4, !tbaa !22
  %479 = zext i32 %478 to i64
  %480 = load ptr, ptr %88, align 8, !tbaa !72
  %481 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %480, i64 %479, i32 1
  %482 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %481, i64 0, i32 1
  %483 = load ptr, ptr %482, align 8, !tbaa !31
  %484 = load ptr, ptr %481, align 8, !tbaa !32
  %485 = ptrtoint ptr %483 to i64
  %486 = ptrtoint ptr %484 to i64
  %487 = sub i64 %485, %486
  %488 = ashr exact i64 %487, 4
  %489 = icmp eq i64 %488, %477
  br i1 %489, label %492, label %446

490:                                              ; preds = %463
  %491 = landingpad { ptr, i32 }
          cleanup
  br label %706

492:                                              ; preds = %475
  %493 = load ptr, ptr %361, align 8, !tbaa !43
  %494 = load ptr, ptr %362, align 8, !tbaa !41
  %495 = getelementptr inbounds i64, ptr %494, i64 %366
  %496 = load i64, ptr %495, align 8, !tbaa !42
  %497 = add i64 %496, %428
  %498 = getelementptr inbounds i32, ptr %493, i64 %497
  %499 = load i32, ptr %498, align 4, !tbaa !22
  br label %500

500:                                              ; preds = %492, %445
  %501 = phi i32 [ %499, %492 ], [ %431, %445 ]
  %502 = load ptr, ptr %8, align 8, !tbaa !47
  %503 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %502, i32 noundef %365, i32 noundef %501)
          to label %504 unwind label %506

504:                                              ; preds = %500
  %505 = icmp eq i32 %503, -1
  br i1 %505, label %651, label %645

506:                                              ; preds = %500
  %507 = landingpad { ptr, i32 }
          cleanup
  br label %706

508:                                              ; preds = %444, %615
  %509 = phi i32 [ %523, %615 ], [ %436, %444 ]
  %510 = phi ptr [ %524, %615 ], [ %438, %444 ]
  %511 = phi i32 [ %525, %615 ], [ %434, %444 ]
  %512 = phi i64 [ %619, %615 ], [ 0, %444 ]
  %513 = phi i32 [ %618, %615 ], [ 0, %444 ]
  %514 = zext i32 %511 to i64
  %515 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %510, i64 %514, i32 1
  %516 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %515, i64 0, i32 1
  %517 = load ptr, ptr %516, align 8, !tbaa !31
  %518 = load ptr, ptr %515, align 8, !tbaa !32
  %519 = icmp eq ptr %517, %518
  br i1 %519, label %522, label %531

520:                                              ; preds = %570
  %521 = load i32, ptr %120, align 4, !tbaa !22
  br label %522

522:                                              ; preds = %520, %508
  %523 = phi i32 [ %509, %508 ], [ %521, %520 ]
  %524 = phi ptr [ %510, %508 ], [ %575, %520 ]
  %525 = phi i32 [ %511, %508 ], [ %573, %520 ]
  %526 = phi i64 [ %514, %508 ], [ %574, %520 ]
  br i1 %6, label %527, label %587

527:                                              ; preds = %522
  %528 = zext i32 %523 to i64
  %529 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %524, i64 %528, i32 1
  %530 = load ptr, ptr %529, align 8, !tbaa !32
  br label %615

531:                                              ; preds = %508, %570
  %532 = phi ptr [ %579, %570 ], [ %518, %508 ]
  %533 = phi ptr [ %575, %570 ], [ %510, %508 ]
  %534 = phi i64 [ %572, %570 ], [ 0, %508 ]
  %535 = phi i32 [ %571, %570 ], [ 0, %508 ]
  %536 = load i32, ptr %120, align 4, !tbaa !22
  %537 = zext i32 %536 to i64
  %538 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %533, i64 %537, i32 1
  %539 = load ptr, ptr %538, align 8, !tbaa !32
  %540 = load ptr, ptr %101, align 8, !tbaa !50
  %541 = load ptr, ptr %8, align 8, !tbaa !47
  %542 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %541, i64 0, i32 8
  %543 = load ptr, ptr %542, align 8, !tbaa !41
  %544 = getelementptr inbounds i64, ptr %543, i64 %366
  %545 = load i64, ptr %544, align 8, !tbaa !42
  %546 = add i64 %545, %428
  %547 = getelementptr inbounds double, ptr %540, i64 %546
  %548 = load double, ptr %547, align 8, !tbaa !52
  %549 = getelementptr inbounds %"struct.std::pair", ptr %539, i64 %512, i32 1
  %550 = load double, ptr %549, align 8, !tbaa !35
  %551 = fmul double %548, %550
  %552 = getelementptr inbounds %"struct.std::pair", ptr %532, i64 %534, i32 1
  %553 = load double, ptr %552, align 8, !tbaa !35
  %554 = fmul double %551, %553
  %555 = fcmp oeq double %554, 0.000000e+00
  br i1 %555, label %570, label %556

556:                                              ; preds = %531
  %557 = getelementptr inbounds %"struct.std::pair", ptr %532, i64 %534
  %558 = getelementptr inbounds %"struct.std::pair", ptr %539, i64 %512
  %559 = load i32, ptr %557, align 8, !tbaa !37
  %560 = load i32, ptr %558, align 8, !tbaa !37
  %561 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %541, i32 noundef %560, i32 noundef %559)
          to label %562 unwind label %585

562:                                              ; preds = %556
  %563 = icmp eq i32 %561, -1
  br i1 %563, label %570, label %564

564:                                              ; preds = %562
  %565 = load ptr, ptr %101, align 8, !tbaa !50
  %566 = zext i32 %561 to i64
  %567 = getelementptr inbounds double, ptr %565, i64 %566
  %568 = load double, ptr %567, align 8, !tbaa !52
  %569 = fadd double %554, %568
  store double %569, ptr %567, align 8, !tbaa !52
  br label %570

570:                                              ; preds = %564, %562, %531
  %571 = add i32 %535, 1
  %572 = zext i32 %571 to i64
  %573 = load i32, ptr %433, align 4, !tbaa !22
  %574 = zext i32 %573 to i64
  %575 = load ptr, ptr %88, align 8, !tbaa !72
  %576 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %575, i64 %574, i32 1
  %577 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %576, i64 0, i32 1
  %578 = load ptr, ptr %577, align 8, !tbaa !31
  %579 = load ptr, ptr %576, align 8, !tbaa !32
  %580 = ptrtoint ptr %578 to i64
  %581 = ptrtoint ptr %579 to i64
  %582 = sub i64 %580, %581
  %583 = ashr exact i64 %582, 4
  %584 = icmp eq i64 %583, %572
  br i1 %584, label %520, label %531

585:                                              ; preds = %556
  %586 = landingpad { ptr, i32 }
          cleanup
  br label %706

587:                                              ; preds = %522
  %588 = load ptr, ptr %101, align 8, !tbaa !50
  %589 = load ptr, ptr %8, align 8, !tbaa !47
  %590 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %589, i64 0, i32 8
  %591 = load ptr, ptr %590, align 8, !tbaa !41
  %592 = getelementptr inbounds i64, ptr %591, i64 %366
  %593 = load i64, ptr %592, align 8, !tbaa !42
  %594 = add i64 %593, %428
  %595 = getelementptr inbounds double, ptr %588, i64 %594
  %596 = load double, ptr %595, align 8, !tbaa !52
  %597 = zext i32 %523 to i64
  %598 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %524, i64 %597, i32 1
  %599 = load ptr, ptr %598, align 8, !tbaa !32
  %600 = getelementptr inbounds %"struct.std::pair", ptr %599, i64 %512
  %601 = getelementptr inbounds %"struct.std::pair", ptr %599, i64 %512, i32 1
  %602 = load double, ptr %601, align 8, !tbaa !35
  %603 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %524, i64 %526, i32 2
  %604 = load double, ptr %603, align 8, !tbaa !48
  %605 = load i32, ptr %600, align 8, !tbaa !37
  %606 = load ptr, ptr %102, align 8, !tbaa !49
  %607 = zext i32 %605 to i64
  %608 = getelementptr inbounds float, ptr %606, i64 %607
  %609 = load float, ptr %608, align 4, !tbaa !33
  %610 = fpext float %609 to double
  %611 = fneg double %596
  %612 = fmul double %602, %611
  %613 = tail call double @llvm.fmuladd.f64(double %612, double %604, double %610)
  %614 = fptrunc double %613 to float
  store float %614, ptr %608, align 4, !tbaa !33
  br label %615

615:                                              ; preds = %527, %587
  %616 = phi i64 [ %528, %527 ], [ %597, %587 ]
  %617 = phi ptr [ %530, %527 ], [ %599, %587 ]
  %618 = add i32 %513, 1
  %619 = zext i32 %618 to i64
  %620 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %524, i64 %616, i32 1, i32 0, i32 0, i32 0, i32 1
  %621 = load ptr, ptr %620, align 8, !tbaa !31
  %622 = ptrtoint ptr %621 to i64
  %623 = ptrtoint ptr %617 to i64
  %624 = sub i64 %622, %623
  %625 = ashr exact i64 %624, 4
  %626 = icmp eq i64 %625, %619
  br i1 %626, label %627, label %508

627:                                              ; preds = %615
  %628 = load ptr, ptr %361, align 8, !tbaa !43
  %629 = load ptr, ptr %362, align 8, !tbaa !41
  %630 = getelementptr inbounds i64, ptr %629, i64 %366
  %631 = load i64, ptr %630, align 8, !tbaa !42
  %632 = add i64 %631, %428
  %633 = getelementptr inbounds i32, ptr %628, i64 %632
  %634 = load i32, ptr %633, align 4, !tbaa !22
  br label %635

635:                                              ; preds = %627, %444
  %636 = phi i32 [ %634, %627 ], [ %431, %444 ]
  %637 = load ptr, ptr %8, align 8, !tbaa !47
  %638 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %637, i32 noundef %365, i32 noundef %636)
          to label %639 unwind label %643

639:                                              ; preds = %635
  %640 = icmp eq i64 %119, %432
  %641 = select i1 %640, double %44, double 0.000000e+00
  %642 = icmp eq i32 %638, -1
  br i1 %642, label %651, label %645

643:                                              ; preds = %635
  %644 = landingpad { ptr, i32 }
          cleanup
  br label %706

645:                                              ; preds = %639, %504
  %646 = phi i32 [ %503, %504 ], [ %638, %639 ]
  %647 = phi double [ 0.000000e+00, %504 ], [ %641, %639 ]
  %648 = load ptr, ptr %101, align 8, !tbaa !50
  %649 = zext i32 %646 to i64
  %650 = getelementptr inbounds double, ptr %648, i64 %649
  store double %647, ptr %650, align 8, !tbaa !52
  br label %651

651:                                              ; preds = %645, %639, %504
  %652 = add i32 %370, 1
  %653 = load ptr, ptr %362, align 8, !tbaa !41
  %654 = getelementptr inbounds i64, ptr %653, i64 %368
  %655 = load i64, ptr %654, align 8, !tbaa !42
  %656 = getelementptr inbounds i64, ptr %653, i64 %366
  %657 = load i64, ptr %656, align 8, !tbaa !42
  %658 = sub i64 %655, %657
  %659 = trunc i64 %658 to i32
  %660 = icmp ult i32 %652, %659
  br i1 %660, label %369, label %661

661:                                              ; preds = %651
  %662 = load i32, ptr %363, align 4, !tbaa !38
  %663 = icmp eq i32 %367, %662
  br i1 %663, label %664, label %666

664:                                              ; preds = %676, %666, %661
  %665 = phi i32 [ %367, %661 ], [ %667, %666 ], [ %662, %676 ]
  br label %364

666:                                              ; preds = %661, %676
  %667 = phi i32 [ %669, %676 ], [ %367, %661 ]
  %668 = phi i64 [ %672, %676 ], [ %655, %661 ]
  %669 = add i32 %667, 1
  %670 = zext i32 %669 to i64
  %671 = getelementptr inbounds i64, ptr %653, i64 %670
  %672 = load i64, ptr %671, align 8, !tbaa !42
  %673 = sub i64 %672, %668
  %674 = and i64 %673, 4294967295
  %675 = icmp eq i64 %674, 0
  br i1 %675, label %676, label %664

676:                                              ; preds = %666
  %677 = icmp eq i32 %669, %662
  br i1 %677, label %664, label %666, !llvm.loop !82

678:                                              ; preds = %683, %403
  %679 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %406, i64 %405
  %680 = load i32, ptr %679, align 8, !tbaa !24
  %681 = zext i32 %680 to i64
  %682 = getelementptr inbounds float, ptr %416, i64 %681
  store float 0.000000e+00, ptr %682, align 4, !tbaa !33
  br label %701

683:                                              ; preds = %417, %683
  %684 = phi i64 [ 0, %417 ], [ %699, %683 ]
  %685 = phi i32 [ 0, %417 ], [ %698, %683 ]
  %686 = load float, ptr %418, align 4, !tbaa !33
  %687 = fpext float %686 to double
  %688 = getelementptr inbounds %"struct.std::pair", ptr %410, i64 %684
  %689 = getelementptr inbounds %"struct.std::pair", ptr %410, i64 %684, i32 1
  %690 = load double, ptr %689, align 8, !tbaa !35
  %691 = load i32, ptr %688, align 8, !tbaa !37
  %692 = zext i32 %691 to i64
  %693 = getelementptr inbounds float, ptr %416, i64 %692
  %694 = load float, ptr %693, align 4, !tbaa !33
  %695 = fpext float %694 to double
  %696 = tail call double @llvm.fmuladd.f64(double %687, double %690, double %695)
  %697 = fptrunc double %696 to float
  store float %697, ptr %693, align 4, !tbaa !33
  %698 = add i32 %685, 1
  %699 = zext i32 %698 to i64
  %700 = icmp eq i64 %414, %699
  br i1 %700, label %678, label %683

701:                                              ; preds = %194, %678, %402
  %702 = icmp eq i64 %126, %103
  br i1 %702, label %114, label %118

703:                                              ; preds = %419, %421, %200, %202
  %704 = phi { ptr, i32 } [ %203, %202 ], [ %201, %200 ], [ %422, %421 ], [ %420, %419 ]
  %705 = icmp eq ptr %87, null
  br i1 %705, label %708, label %706

706:                                              ; preds = %273, %490, %308, %506, %643, %585, %703
  %707 = phi { ptr, i32 } [ %704, %703 ], [ %586, %585 ], [ %644, %643 ], [ %507, %506 ], [ %309, %308 ], [ %491, %490 ], [ %274, %273 ]
  tail call void @_ZdlPv(ptr noundef nonnull %87) #23
  br label %708

708:                                              ; preds = %706, %703
  %709 = phi { ptr, i32 } [ %704, %703 ], [ %707, %706 ]
  resume { ptr, i32 } %709
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIfNS_11BlockVectorIdEEEEvRNS_17BlockSparseMatrixIT_EERT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(320) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !61
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !61
  %9 = tail call noundef nonnull align 8 dereferenceable(288) ptr @_ZNK6dealii17BlockSparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(320) %1)
  %10 = load i32, ptr %7, align 8, !tbaa !61
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 3, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !143, !noalias !73
  %15 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %16 = load i32, ptr %15, align 8, !tbaa !22, !noalias !73
  %17 = zext i32 %10 to i64
  br label %18

18:                                               ; preds = %12, %71
  %19 = phi i64 [ 0, %12 ], [ %73, %71 ]
  %20 = phi double [ 0.000000e+00, %12 ], [ %72, %71 ]
  %21 = trunc i64 %19 to i32
  %22 = mul i32 %16, %21
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %14, i64 %23
  %25 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %24, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !147
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %26, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !47
  %29 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %28, i64 0, i32 2
  %30 = load i32, ptr %29, align 4, !tbaa !38
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %18
  %33 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %26, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !44
  %35 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %28, i64 0, i32 8
  %36 = load ptr, ptr %35, align 8, !tbaa !41
  %37 = zext i32 %30 to i64
  %38 = and i64 %37, 1
  %39 = icmp eq i32 %30, 1
  br i1 %39, label %58, label %40

40:                                               ; preds = %32
  %41 = and i64 %37, 4294967294
  br label %75

42:                                               ; preds = %71, %3
  %43 = phi i64 [ 0, %3 ], [ %17, %71 ]
  %44 = phi double [ 0.000000e+00, %3 ], [ %72, %71 ]
  %45 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 1, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !58
  %47 = getelementptr inbounds i32, ptr %46, i64 %43
  %48 = load i32, ptr %47, align 4, !tbaa !22
  %49 = uitofp i32 %48 to double
  %50 = fdiv double %44, %49
  %51 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %9, i64 0, i32 5
  %52 = tail call noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %9)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %97, label %54

54:                                               ; preds = %42
  %55 = zext i32 %52 to i64
  %56 = shl nuw nsw i64 %55, 2
  %57 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %56) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %57, i8 -1, i64 %56, i1 false), !tbaa !22
  br label %97

58:                                               ; preds = %75, %32
  %59 = phi double [ undef, %32 ], [ %93, %75 ]
  %60 = phi i64 [ 0, %32 ], [ %94, %75 ]
  %61 = phi double [ %20, %32 ], [ %93, %75 ]
  %62 = icmp eq i64 %38, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds i64, ptr %36, i64 %60
  %65 = load i64, ptr %64, align 8, !tbaa !42
  %66 = getelementptr inbounds float, ptr %34, i64 %65
  %67 = load float, ptr %66, align 4, !tbaa !33
  %68 = tail call float @llvm.fabs.f32(float %67)
  %69 = fpext float %68 to double
  %70 = fadd double %61, %69
  br label %71

71:                                               ; preds = %63, %58, %18
  %72 = phi double [ %20, %18 ], [ %59, %58 ], [ %70, %63 ]
  %73 = add nuw nsw i64 %19, 1
  %74 = icmp eq i64 %73, %17
  br i1 %74, label %42, label %18

75:                                               ; preds = %75, %40
  %76 = phi i64 [ 0, %40 ], [ %94, %75 ]
  %77 = phi double [ %20, %40 ], [ %93, %75 ]
  %78 = phi i64 [ 0, %40 ], [ %95, %75 ]
  %79 = getelementptr inbounds i64, ptr %36, i64 %76
  %80 = load i64, ptr %79, align 8, !tbaa !42
  %81 = getelementptr inbounds float, ptr %34, i64 %80
  %82 = load float, ptr %81, align 4, !tbaa !33
  %83 = tail call float @llvm.fabs.f32(float %82)
  %84 = fpext float %83 to double
  %85 = fadd double %77, %84
  %86 = or i64 %76, 1
  %87 = getelementptr inbounds i64, ptr %36, i64 %86
  %88 = load i64, ptr %87, align 8, !tbaa !42
  %89 = getelementptr inbounds float, ptr %34, i64 %88
  %90 = load float, ptr %89, align 4, !tbaa !33
  %91 = tail call float @llvm.fabs.f32(float %90)
  %92 = fpext float %91 to double
  %93 = fadd double %85, %92
  %94 = add nuw nsw i64 %76, 2
  %95 = add i64 %78, 2
  %96 = icmp eq i64 %95, %41
  br i1 %96, label %58, label %75

97:                                               ; preds = %54, %42
  %98 = phi ptr [ null, %42 ], [ %57, %54 ]
  %99 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %100 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !70
  %102 = load ptr, ptr %99, align 8, !tbaa !72
  %103 = ptrtoint ptr %101 to i64
  %104 = ptrtoint ptr %102 to i64
  %105 = sub i64 %103, %104
  %106 = sdiv exact i64 %105, 40
  %107 = icmp eq ptr %101, %102
  br i1 %107, label %108, label %125

108:                                              ; preds = %125, %97
  %109 = invoke noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %9)
          to label %110 unwind label %139

110:                                              ; preds = %108
  %111 = icmp eq i32 %109, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %9, i64 0, i32 5, i32 1
  %114 = icmp eq i32 %8, 0
  %115 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 3, i32 0, i32 1
  %116 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %117 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 2
  %118 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 2, i32 1
  %119 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %120 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %121 = fptrunc double %50 to float
  %122 = zext i32 %109 to i64
  %123 = zext i32 %8 to i64
  %124 = zext i32 %8 to i64
  br label %141

125:                                              ; preds = %97, %125
  %126 = phi i64 [ %133, %125 ], [ 0, %97 ]
  %127 = phi i32 [ %132, %125 ], [ 0, %97 ]
  %128 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %102, i64 %126
  %129 = load i32, ptr %128, align 8, !tbaa !24
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds i32, ptr %98, i64 %130
  store i32 %127, ptr %131, align 4, !tbaa !22
  %132 = add i32 %127, 1
  %133 = zext i32 %132 to i64
  %134 = icmp ugt i64 %106, %133
  br i1 %134, label %125, label %108

135:                                              ; preds = %944, %110
  %136 = icmp eq ptr %98, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %135
  tail call void @_ZdlPv(ptr noundef nonnull %98) #23
  br label %138

138:                                              ; preds = %135, %137
  ret void

139:                                              ; preds = %108
  %140 = landingpad { ptr, i32 }
          cleanup
  br label %947

141:                                              ; preds = %112, %944
  %142 = phi i64 [ 0, %112 ], [ %945, %944 ]
  %143 = load i32, ptr %51, align 8, !tbaa !61
  %144 = load ptr, ptr %113, align 8, !tbaa !58
  br label %145

145:                                              ; preds = %145, %141
  %146 = phi i32 [ %143, %141 ], [ %147, %145 ]
  %147 = add i32 %146, -1
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i32, ptr %144, i64 %148
  %150 = load i32, ptr %149, align 4, !tbaa !22
  %151 = zext i32 %150 to i64
  %152 = icmp ult i64 %142, %151
  br i1 %152, label %145, label %153

153:                                              ; preds = %145
  %154 = trunc i64 %142 to i32
  %155 = sub i32 %154, %150
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds i32, ptr %98, i64 %142
  %158 = load i32, ptr %157, align 4, !tbaa !22
  %159 = icmp eq i32 %158, -1
  br i1 %159, label %164, label %160

160:                                              ; preds = %153
  br i1 %114, label %453, label %161

161:                                              ; preds = %160
  %162 = add i32 %155, 1
  %163 = zext i32 %162 to i64
  br label %471

164:                                              ; preds = %153
  br i1 %114, label %944, label %165

165:                                              ; preds = %164
  %166 = add i32 %155, 1
  %167 = zext i32 %166 to i64
  br label %168

168:                                              ; preds = %165, %256
  %169 = phi i64 [ 0, %165 ], [ %257, %256 ]
  %170 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !149
  %171 = load i32, ptr %116, align 8, !tbaa !22, !noalias !149
  %172 = mul i32 %171, %147
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %170, i64 %173
  %175 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %174, i64 %169
  %176 = load ptr, ptr %175, align 8, !tbaa !147
  %177 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %176, i64 0, i32 1
  %178 = load ptr, ptr %177, align 8, !tbaa !47, !noalias !152
  %179 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %178, i64 0, i32 8
  %180 = load ptr, ptr %179, align 8, !tbaa !41, !noalias !152
  %181 = getelementptr inbounds i64, ptr %180, i64 %167
  %182 = load i64, ptr %181, align 8, !tbaa !42, !noalias !152
  %183 = getelementptr inbounds i64, ptr %180, i64 %156
  %184 = load i64, ptr %183, align 8, !tbaa !42, !noalias !152
  %185 = sub i64 %182, %184
  %186 = and i64 %185, 4294967295
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %204

188:                                              ; preds = %168
  %189 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %178, i64 0, i32 2
  %190 = load i32, ptr %189, align 4, !tbaa !38, !noalias !155
  br label %191

191:                                              ; preds = %196, %188
  %192 = phi i64 [ %182, %188 ], [ %200, %196 ]
  %193 = phi i32 [ %155, %188 ], [ %194, %196 ]
  %194 = add i32 %193, 1
  %195 = icmp ult i32 %194, %190
  br i1 %195, label %196, label %204

196:                                              ; preds = %191
  %197 = add i32 %193, 2
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds i64, ptr %180, i64 %198
  %200 = load i64, ptr %199, align 8, !tbaa !42, !noalias !155
  %201 = sub i64 %200, %192
  %202 = and i64 %201, 4294967295
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %191, label %204

204:                                              ; preds = %196, %191, %168
  %205 = phi i32 [ %155, %168 ], [ %190, %191 ], [ %194, %196 ]
  %206 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %176)
          to label %207 unwind label %259

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %206, i64 0, i32 9
  %209 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %206, i64 0, i32 8
  %210 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %176, i64 0, i32 2
  %211 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %206, i64 0, i32 2
  br label %212

212:                                              ; preds = %439, %207
  %213 = phi i32 [ %205, %207 ], [ %440, %439 ]
  %214 = zext i32 %213 to i64
  %215 = add i32 %213, 1
  %216 = zext i32 %215 to i64
  br label %217

217:                                              ; preds = %212, %426
  %218 = phi i32 [ %427, %426 ], [ 0, %212 ]
  %219 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !158
  %220 = load i32, ptr %116, align 8, !tbaa !22, !noalias !158
  %221 = mul i32 %220, %147
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %219, i64 %222
  %224 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %223, i64 %169
  %225 = load ptr, ptr %224, align 8, !tbaa !147
  %226 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %225, i64 0, i32 1
  %227 = load ptr, ptr %226, align 8, !tbaa !47, !noalias !161
  %228 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %227, i64 0, i32 2
  %229 = load i32, ptr %228, align 4, !tbaa !38, !noalias !161
  %230 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %227, i64 0, i32 8
  br label %231

231:                                              ; preds = %235, %217
  %232 = phi i32 [ %155, %217 ], [ %233, %235 ]
  %233 = add i32 %232, 1
  %234 = icmp ult i32 %233, %229
  br i1 %234, label %235, label %247

235:                                              ; preds = %231
  %236 = load ptr, ptr %230, align 8, !tbaa !41, !noalias !161
  %237 = add i32 %232, 2
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds i64, ptr %236, i64 %238
  %240 = load i64, ptr %239, align 8, !tbaa !42, !noalias !161
  %241 = zext i32 %233 to i64
  %242 = getelementptr inbounds i64, ptr %236, i64 %241
  %243 = load i64, ptr %242, align 8, !tbaa !42, !noalias !161
  %244 = sub i64 %240, %243
  %245 = and i64 %244, 4294967295
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %231, label %247

247:                                              ; preds = %231, %235
  %248 = phi i32 [ %233, %235 ], [ %229, %231 ]
  %249 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %225)
          to label %250 unwind label %261

250:                                              ; preds = %247
  %251 = icmp ne ptr %206, %249
  %252 = icmp ne i32 %213, %248
  %253 = or i1 %251, %252
  %254 = icmp ne i32 %218, 0
  %255 = or i1 %254, %253
  br i1 %255, label %263, label %256

256:                                              ; preds = %250
  %257 = add nuw nsw i64 %169, 1
  %258 = icmp eq i64 %257, %124
  br i1 %258, label %944, label %168

259:                                              ; preds = %204
  %260 = landingpad { ptr, i32 }
          cleanup
  br label %947

261:                                              ; preds = %247
  %262 = landingpad { ptr, i32 }
          cleanup
  br label %947

263:                                              ; preds = %250
  %264 = load ptr, ptr %208, align 8, !tbaa !43
  %265 = load ptr, ptr %209, align 8, !tbaa !41
  %266 = getelementptr inbounds i64, ptr %265, i64 %214
  %267 = load i64, ptr %266, align 8, !tbaa !42
  %268 = zext i32 %218 to i64
  %269 = add i64 %267, %268
  %270 = getelementptr inbounds i32, ptr %264, i64 %269
  %271 = load i32, ptr %270, align 4, !tbaa !22
  %272 = load ptr, ptr %113, align 8, !tbaa !58
  %273 = getelementptr inbounds i32, ptr %272, i64 %169
  %274 = load i32, ptr %273, align 4, !tbaa !22
  %275 = add i32 %274, %271
  %276 = zext i32 %275 to i64
  %277 = getelementptr inbounds i32, ptr %98, i64 %276
  %278 = load i32, ptr %277, align 4, !tbaa !22
  %279 = icmp eq i32 %278, -1
  br i1 %279, label %426, label %280

280:                                              ; preds = %263
  %281 = load ptr, ptr %210, align 8, !tbaa !44
  %282 = load ptr, ptr %177, align 8, !tbaa !47
  %283 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %282, i64 0, i32 8
  %284 = load ptr, ptr %283, align 8, !tbaa !41
  %285 = getelementptr inbounds i64, ptr %284, i64 %214
  %286 = load i64, ptr %285, align 8, !tbaa !42
  %287 = add i64 %286, %268
  %288 = getelementptr inbounds float, ptr %281, i64 %287
  %289 = load float, ptr %288, align 4, !tbaa !33
  %290 = fpext float %289 to double
  %291 = zext i32 %278 to i64
  %292 = load ptr, ptr %99, align 8, !tbaa !72
  %293 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %292, i64 %291, i32 1
  %294 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %293, i64 0, i32 1
  %295 = load ptr, ptr %294, align 8, !tbaa !31
  %296 = load ptr, ptr %293, align 8, !tbaa !32
  %297 = icmp eq ptr %295, %296
  br i1 %297, label %300, label %306

298:                                              ; preds = %361
  %299 = load ptr, ptr %177, align 8, !tbaa !47
  br label %300

300:                                              ; preds = %298, %280
  %301 = phi ptr [ %282, %280 ], [ %299, %298 ]
  %302 = phi i64 [ %291, %280 ], [ %365, %298 ]
  %303 = phi ptr [ %292, %280 ], [ %366, %298 ]
  br i1 %6, label %409, label %376

304:                                              ; preds = %338
  %305 = landingpad { ptr, i32 }
          cleanup
  br label %947

306:                                              ; preds = %280, %361
  %307 = phi ptr [ %370, %361 ], [ %296, %280 ]
  %308 = phi i64 [ %363, %361 ], [ 0, %280 ]
  %309 = phi i32 [ %362, %361 ], [ 0, %280 ]
  %310 = getelementptr inbounds %"struct.std::pair", ptr %307, i64 %308
  %311 = load i32, ptr %310, align 8, !tbaa !37
  %312 = getelementptr inbounds %"struct.std::pair", ptr %307, i64 %308, i32 1
  %313 = load double, ptr %312, align 8, !tbaa !35
  %314 = fmul double %313, %290
  %315 = fptrunc double %314 to float
  %316 = fcmp oeq float %315, 0.000000e+00
  br i1 %316, label %361, label %317

317:                                              ; preds = %306
  %318 = load i32, ptr %7, align 8, !tbaa !61
  %319 = load ptr, ptr %45, align 8, !tbaa !58
  br label %320

320:                                              ; preds = %320, %317
  %321 = phi i32 [ %318, %317 ], [ %322, %320 ]
  %322 = add i32 %321, -1
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds i32, ptr %319, i64 %323
  %325 = load i32, ptr %324, align 4, !tbaa !22
  %326 = zext i32 %325 to i64
  %327 = icmp ult i64 %142, %326
  br i1 %327, label %320, label %328

328:                                              ; preds = %320
  %329 = load i32, ptr %117, align 8, !tbaa !61
  %330 = load ptr, ptr %118, align 8, !tbaa !58
  br label %331

331:                                              ; preds = %331, %328
  %332 = phi i32 [ %329, %328 ], [ %333, %331 ]
  %333 = add i32 %332, -1
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i32, ptr %330, i64 %334
  %336 = load i32, ptr %335, align 4, !tbaa !22
  %337 = icmp ugt i32 %336, %311
  br i1 %337, label %331, label %338

338:                                              ; preds = %331
  %339 = sub i32 %154, %325
  %340 = sub i32 %311, %336
  %341 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !164
  %342 = load i32, ptr %116, align 8, !tbaa !22, !noalias !164
  %343 = mul i32 %342, %322
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %341, i64 %344
  %346 = zext i32 %333 to i64
  %347 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %345, i64 %346
  %348 = load ptr, ptr %347, align 8, !tbaa !147
  %349 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %348, i64 0, i32 1
  %350 = load ptr, ptr %349, align 8, !tbaa !47
  %351 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %350, i32 noundef %339, i32 noundef %340)
          to label %352 unwind label %304

352:                                              ; preds = %338
  %353 = icmp eq i32 %351, -1
  br i1 %353, label %361, label %354

354:                                              ; preds = %352
  %355 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %348, i64 0, i32 2
  %356 = load ptr, ptr %355, align 8, !tbaa !44
  %357 = zext i32 %351 to i64
  %358 = getelementptr inbounds float, ptr %356, i64 %357
  %359 = load float, ptr %358, align 4, !tbaa !33
  %360 = fadd float %359, %315
  store float %360, ptr %358, align 4, !tbaa !33
  br label %361

361:                                              ; preds = %354, %352, %306
  %362 = add i32 %309, 1
  %363 = zext i32 %362 to i64
  %364 = load i32, ptr %277, align 4, !tbaa !22
  %365 = zext i32 %364 to i64
  %366 = load ptr, ptr %99, align 8, !tbaa !72
  %367 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %366, i64 %365, i32 1
  %368 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %367, i64 0, i32 1
  %369 = load ptr, ptr %368, align 8, !tbaa !31
  %370 = load ptr, ptr %367, align 8, !tbaa !32
  %371 = ptrtoint ptr %369 to i64
  %372 = ptrtoint ptr %370 to i64
  %373 = sub i64 %371, %372
  %374 = ashr exact i64 %373, 4
  %375 = icmp eq i64 %374, %363
  br i1 %375, label %298, label %306

376:                                              ; preds = %300
  %377 = load ptr, ptr %210, align 8, !tbaa !44
  %378 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %301, i64 0, i32 8
  %379 = load ptr, ptr %378, align 8, !tbaa !41
  %380 = getelementptr inbounds i64, ptr %379, i64 %214
  %381 = load i64, ptr %380, align 8, !tbaa !42
  %382 = add i64 %381, %268
  %383 = getelementptr inbounds float, ptr %377, i64 %382
  %384 = load float, ptr %383, align 4, !tbaa !33
  %385 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %303, i64 %302, i32 2
  %386 = load double, ptr %385, align 8, !tbaa !48
  %387 = load i32, ptr %4, align 8, !tbaa !61
  %388 = load ptr, ptr %119, align 8, !tbaa !58
  br label %389

389:                                              ; preds = %389, %376
  %390 = phi i32 [ %387, %376 ], [ %391, %389 ]
  %391 = add i32 %390, -1
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i32, ptr %388, i64 %392
  %394 = load i32, ptr %393, align 4, !tbaa !22
  %395 = zext i32 %394 to i64
  %396 = icmp ult i64 %142, %395
  br i1 %396, label %389, label %397

397:                                              ; preds = %389
  %398 = sub i32 %154, %394
  %399 = zext i32 %398 to i64
  %400 = zext i32 %391 to i64
  %401 = load ptr, ptr %120, align 8, !tbaa !66
  %402 = getelementptr inbounds %"class.dealii::Vector.35", ptr %401, i64 %400, i32 3
  %403 = load ptr, ptr %402, align 8, !tbaa !60
  %404 = getelementptr inbounds double, ptr %403, i64 %399
  %405 = fpext float %384 to double
  %406 = load double, ptr %404, align 8, !tbaa !52
  %407 = fneg double %405
  %408 = tail call double @llvm.fmuladd.f64(double %407, double %386, double %406)
  store double %408, ptr %404, align 8, !tbaa !52
  br label %409

409:                                              ; preds = %300, %397
  %410 = load ptr, ptr %208, align 8, !tbaa !43
  %411 = load ptr, ptr %209, align 8, !tbaa !41
  %412 = getelementptr inbounds i64, ptr %411, i64 %214
  %413 = load i64, ptr %412, align 8, !tbaa !42
  %414 = add i64 %413, %268
  %415 = getelementptr inbounds i32, ptr %410, i64 %414
  %416 = load i32, ptr %415, align 4, !tbaa !22
  %417 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %301, i32 noundef %213, i32 noundef %416)
          to label %418 unwind label %424

418:                                              ; preds = %409
  %419 = icmp eq i32 %417, -1
  br i1 %419, label %426, label %420

420:                                              ; preds = %418
  %421 = load ptr, ptr %210, align 8, !tbaa !44
  %422 = zext i32 %417 to i64
  %423 = getelementptr inbounds float, ptr %421, i64 %422
  store float 0.000000e+00, ptr %423, align 4, !tbaa !33
  br label %426

424:                                              ; preds = %409
  %425 = landingpad { ptr, i32 }
          cleanup
  br label %947

426:                                              ; preds = %418, %420, %263
  %427 = add i32 %218, 1
  %428 = load ptr, ptr %209, align 8, !tbaa !41
  %429 = getelementptr inbounds i64, ptr %428, i64 %216
  %430 = load i64, ptr %429, align 8, !tbaa !42
  %431 = getelementptr inbounds i64, ptr %428, i64 %214
  %432 = load i64, ptr %431, align 8, !tbaa !42
  %433 = sub i64 %430, %432
  %434 = trunc i64 %433 to i32
  %435 = icmp ult i32 %427, %434
  br i1 %435, label %217, label %436

436:                                              ; preds = %426
  %437 = load i32, ptr %211, align 4, !tbaa !38
  %438 = icmp eq i32 %215, %437
  br i1 %438, label %439, label %441

439:                                              ; preds = %451, %441, %436
  %440 = phi i32 [ %215, %436 ], [ %442, %441 ], [ %437, %451 ]
  br label %212

441:                                              ; preds = %436, %451
  %442 = phi i32 [ %444, %451 ], [ %215, %436 ]
  %443 = phi i64 [ %447, %451 ], [ %430, %436 ]
  %444 = add i32 %442, 1
  %445 = zext i32 %444 to i64
  %446 = getelementptr inbounds i64, ptr %428, i64 %445
  %447 = load i64, ptr %446, align 8, !tbaa !42
  %448 = sub i64 %447, %443
  %449 = and i64 %448, 4294967295
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %439

451:                                              ; preds = %441
  %452 = icmp eq i32 %444, %437
  br i1 %452, label %439, label %441, !llvm.loop !82

453:                                              ; preds = %559, %160
  br i1 %6, label %944, label %454

454:                                              ; preds = %453
  %455 = load i32, ptr %157, align 4, !tbaa !22
  %456 = zext i32 %455 to i64
  %457 = load ptr, ptr %99, align 8, !tbaa !72
  %458 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %457, i64 %456, i32 1
  %459 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %458, i64 0, i32 1
  %460 = load ptr, ptr %459, align 8, !tbaa !31
  %461 = load ptr, ptr %458, align 8, !tbaa !32
  %462 = ptrtoint ptr %460 to i64
  %463 = ptrtoint ptr %461 to i64
  %464 = sub i64 %462, %463
  %465 = ashr exact i64 %464, 4
  %466 = icmp eq ptr %460, %461
  %467 = load i32, ptr %4, align 8, !tbaa !61
  %468 = load ptr, ptr %119, align 8, !tbaa !58
  br i1 %466, label %884, label %469

469:                                              ; preds = %454
  %470 = load ptr, ptr %120, align 8, !tbaa !66
  br label %894

471:                                              ; preds = %161, %559
  %472 = phi i64 [ 0, %161 ], [ %560, %559 ]
  %473 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !167
  %474 = load i32, ptr %116, align 8, !tbaa !22, !noalias !167
  %475 = mul i32 %474, %147
  %476 = zext i32 %475 to i64
  %477 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %473, i64 %476
  %478 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %477, i64 %472
  %479 = load ptr, ptr %478, align 8, !tbaa !147
  %480 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %479, i64 0, i32 1
  %481 = load ptr, ptr %480, align 8, !tbaa !47, !noalias !170
  %482 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %481, i64 0, i32 8
  %483 = load ptr, ptr %482, align 8, !tbaa !41, !noalias !170
  %484 = getelementptr inbounds i64, ptr %483, i64 %163
  %485 = load i64, ptr %484, align 8, !tbaa !42, !noalias !170
  %486 = getelementptr inbounds i64, ptr %483, i64 %156
  %487 = load i64, ptr %486, align 8, !tbaa !42, !noalias !170
  %488 = sub i64 %485, %487
  %489 = and i64 %488, 4294967295
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %491, label %507

491:                                              ; preds = %471
  %492 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %481, i64 0, i32 2
  %493 = load i32, ptr %492, align 4, !tbaa !38, !noalias !173
  br label %494

494:                                              ; preds = %499, %491
  %495 = phi i64 [ %485, %491 ], [ %503, %499 ]
  %496 = phi i32 [ %155, %491 ], [ %497, %499 ]
  %497 = add i32 %496, 1
  %498 = icmp ult i32 %497, %493
  br i1 %498, label %499, label %507

499:                                              ; preds = %494
  %500 = add i32 %496, 2
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds i64, ptr %483, i64 %501
  %503 = load i64, ptr %502, align 8, !tbaa !42, !noalias !173
  %504 = sub i64 %503, %495
  %505 = and i64 %504, 4294967295
  %506 = icmp eq i64 %505, 0
  br i1 %506, label %494, label %507

507:                                              ; preds = %499, %494, %471
  %508 = phi i32 [ %155, %471 ], [ %493, %494 ], [ %497, %499 ]
  %509 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %479)
          to label %510 unwind label %562

510:                                              ; preds = %507
  %511 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %509, i64 0, i32 9
  %512 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %509, i64 0, i32 8
  %513 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %479, i64 0, i32 2
  %514 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %509, i64 0, i32 2
  br label %515

515:                                              ; preds = %870, %510
  %516 = phi i32 [ %508, %510 ], [ %871, %870 ]
  %517 = zext i32 %516 to i64
  %518 = add i32 %516, 1
  %519 = zext i32 %518 to i64
  br label %520

520:                                              ; preds = %515, %857
  %521 = phi i32 [ %858, %857 ], [ 0, %515 ]
  %522 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !176
  %523 = load i32, ptr %116, align 8, !tbaa !22, !noalias !176
  %524 = mul i32 %523, %147
  %525 = zext i32 %524 to i64
  %526 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %522, i64 %525
  %527 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %526, i64 %472
  %528 = load ptr, ptr %527, align 8, !tbaa !147
  %529 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %528, i64 0, i32 1
  %530 = load ptr, ptr %529, align 8, !tbaa !47, !noalias !179
  %531 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %530, i64 0, i32 2
  %532 = load i32, ptr %531, align 4, !tbaa !38, !noalias !179
  %533 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %530, i64 0, i32 8
  br label %534

534:                                              ; preds = %538, %520
  %535 = phi i32 [ %155, %520 ], [ %536, %538 ]
  %536 = add i32 %535, 1
  %537 = icmp ult i32 %536, %532
  br i1 %537, label %538, label %550

538:                                              ; preds = %534
  %539 = load ptr, ptr %533, align 8, !tbaa !41, !noalias !179
  %540 = add i32 %535, 2
  %541 = zext i32 %540 to i64
  %542 = getelementptr inbounds i64, ptr %539, i64 %541
  %543 = load i64, ptr %542, align 8, !tbaa !42, !noalias !179
  %544 = zext i32 %536 to i64
  %545 = getelementptr inbounds i64, ptr %539, i64 %544
  %546 = load i64, ptr %545, align 8, !tbaa !42, !noalias !179
  %547 = sub i64 %543, %546
  %548 = and i64 %547, 4294967295
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %534, label %550

550:                                              ; preds = %534, %538
  %551 = phi i32 [ %536, %538 ], [ %532, %534 ]
  %552 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %528)
          to label %553 unwind label %564

553:                                              ; preds = %550
  %554 = icmp ne ptr %509, %552
  %555 = icmp ne i32 %516, %551
  %556 = or i1 %554, %555
  %557 = icmp ne i32 %521, 0
  %558 = or i1 %557, %556
  br i1 %558, label %566, label %559

559:                                              ; preds = %553
  %560 = add nuw nsw i64 %472, 1
  %561 = icmp eq i64 %560, %123
  br i1 %561, label %453, label %471

562:                                              ; preds = %507
  %563 = landingpad { ptr, i32 }
          cleanup
  br label %947

564:                                              ; preds = %550
  %565 = landingpad { ptr, i32 }
          cleanup
  br label %947

566:                                              ; preds = %553
  %567 = load ptr, ptr %511, align 8, !tbaa !43
  %568 = load ptr, ptr %512, align 8, !tbaa !41
  %569 = getelementptr inbounds i64, ptr %568, i64 %517
  %570 = load i64, ptr %569, align 8, !tbaa !42
  %571 = zext i32 %521 to i64
  %572 = add i64 %570, %571
  %573 = getelementptr inbounds i32, ptr %567, i64 %572
  %574 = load i32, ptr %573, align 4, !tbaa !22
  %575 = load ptr, ptr %113, align 8, !tbaa !58
  %576 = getelementptr inbounds i32, ptr %575, i64 %472
  %577 = load i32, ptr %576, align 4, !tbaa !22
  %578 = add i32 %577, %574
  %579 = zext i32 %578 to i64
  %580 = getelementptr inbounds i32, ptr %98, i64 %579
  %581 = load i32, ptr %580, align 4, !tbaa !22
  %582 = icmp eq i32 %581, -1
  %583 = load ptr, ptr %513, align 8, !tbaa !44
  %584 = load ptr, ptr %480, align 8, !tbaa !47
  %585 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %584, i64 0, i32 8
  %586 = load ptr, ptr %585, align 8, !tbaa !41
  %587 = getelementptr inbounds i64, ptr %586, i64 %517
  %588 = load i64, ptr %587, align 8, !tbaa !42
  %589 = add i64 %588, %571
  %590 = getelementptr inbounds float, ptr %583, i64 %589
  %591 = load float, ptr %590, align 4, !tbaa !33
  %592 = fpext float %591 to double
  %593 = load i32, ptr %157, align 4, !tbaa !22
  %594 = zext i32 %593 to i64
  %595 = load ptr, ptr %99, align 8, !tbaa !72
  %596 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %595, i64 %594, i32 1
  %597 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %596, i64 0, i32 1
  %598 = load ptr, ptr %597, align 8, !tbaa !31
  %599 = load ptr, ptr %596, align 8, !tbaa !32
  %600 = icmp eq ptr %598, %599
  br i1 %582, label %601, label %690

601:                                              ; preds = %566
  br i1 %600, label %682, label %604

602:                                              ; preds = %635
  %603 = landingpad { ptr, i32 }
          cleanup
  br label %947

604:                                              ; preds = %601, %658
  %605 = phi ptr [ %667, %658 ], [ %599, %601 ]
  %606 = phi i64 [ %660, %658 ], [ 0, %601 ]
  %607 = phi i32 [ %659, %658 ], [ 0, %601 ]
  %608 = getelementptr inbounds %"struct.std::pair", ptr %605, i64 %606
  %609 = load i32, ptr %608, align 8, !tbaa !37
  %610 = getelementptr inbounds %"struct.std::pair", ptr %605, i64 %606, i32 1
  %611 = load double, ptr %610, align 8, !tbaa !35
  %612 = fmul double %611, %592
  %613 = fptrunc double %612 to float
  %614 = fcmp oeq float %613, 0.000000e+00
  br i1 %614, label %658, label %615

615:                                              ; preds = %604
  %616 = load i32, ptr %7, align 8, !tbaa !61
  %617 = load ptr, ptr %45, align 8, !tbaa !58
  br label %618

618:                                              ; preds = %618, %615
  %619 = phi i32 [ %616, %615 ], [ %620, %618 ]
  %620 = add i32 %619, -1
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds i32, ptr %617, i64 %621
  %623 = load i32, ptr %622, align 4, !tbaa !22
  %624 = icmp ugt i32 %623, %609
  br i1 %624, label %618, label %625

625:                                              ; preds = %618
  %626 = load i32, ptr %117, align 8, !tbaa !61
  %627 = load ptr, ptr %118, align 8, !tbaa !58
  br label %628

628:                                              ; preds = %628, %625
  %629 = phi i32 [ %626, %625 ], [ %630, %628 ]
  %630 = add i32 %629, -1
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds i32, ptr %627, i64 %631
  %633 = load i32, ptr %632, align 4, !tbaa !22
  %634 = icmp ugt i32 %633, %578
  br i1 %634, label %628, label %635

635:                                              ; preds = %628
  %636 = sub i32 %609, %623
  %637 = sub i32 %578, %633
  %638 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !182
  %639 = load i32, ptr %116, align 8, !tbaa !22, !noalias !182
  %640 = mul i32 %639, %620
  %641 = zext i32 %640 to i64
  %642 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %638, i64 %641
  %643 = zext i32 %630 to i64
  %644 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %642, i64 %643
  %645 = load ptr, ptr %644, align 8, !tbaa !147
  %646 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %645, i64 0, i32 1
  %647 = load ptr, ptr %646, align 8, !tbaa !47
  %648 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %647, i32 noundef %636, i32 noundef %637)
          to label %649 unwind label %602

649:                                              ; preds = %635
  %650 = icmp eq i32 %648, -1
  br i1 %650, label %658, label %651

651:                                              ; preds = %649
  %652 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %645, i64 0, i32 2
  %653 = load ptr, ptr %652, align 8, !tbaa !44
  %654 = zext i32 %648 to i64
  %655 = getelementptr inbounds float, ptr %653, i64 %654
  %656 = load float, ptr %655, align 4, !tbaa !33
  %657 = fadd float %656, %613
  store float %657, ptr %655, align 4, !tbaa !33
  br label %658

658:                                              ; preds = %651, %649, %604
  %659 = add i32 %607, 1
  %660 = zext i32 %659 to i64
  %661 = load i32, ptr %157, align 4, !tbaa !22
  %662 = zext i32 %661 to i64
  %663 = load ptr, ptr %99, align 8, !tbaa !72
  %664 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %663, i64 %662, i32 1
  %665 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %664, i64 0, i32 1
  %666 = load ptr, ptr %665, align 8, !tbaa !31
  %667 = load ptr, ptr %664, align 8, !tbaa !32
  %668 = ptrtoint ptr %666 to i64
  %669 = ptrtoint ptr %667 to i64
  %670 = sub i64 %668, %669
  %671 = ashr exact i64 %670, 4
  %672 = icmp eq i64 %671, %660
  br i1 %672, label %673, label %604

673:                                              ; preds = %658
  %674 = load ptr, ptr %511, align 8, !tbaa !43
  %675 = load ptr, ptr %512, align 8, !tbaa !41
  %676 = getelementptr inbounds i64, ptr %675, i64 %517
  %677 = load i64, ptr %676, align 8, !tbaa !42
  %678 = load ptr, ptr %480, align 8, !tbaa !47
  %679 = add i64 %677, %571
  %680 = getelementptr inbounds i32, ptr %674, i64 %679
  %681 = load i32, ptr %680, align 4, !tbaa !22
  br label %682

682:                                              ; preds = %673, %601
  %683 = phi i32 [ %681, %673 ], [ %574, %601 ]
  %684 = phi ptr [ %678, %673 ], [ %584, %601 ]
  %685 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %684, i32 noundef %516, i32 noundef %683)
          to label %686 unwind label %688

686:                                              ; preds = %682
  %687 = icmp eq i32 %685, -1
  br i1 %687, label %857, label %851

688:                                              ; preds = %682
  %689 = landingpad { ptr, i32 }
          cleanup
  br label %950

690:                                              ; preds = %566
  br i1 %600, label %841, label %691

691:                                              ; preds = %690, %822
  %692 = phi i32 [ %706, %822 ], [ %593, %690 ]
  %693 = phi ptr [ %707, %822 ], [ %595, %690 ]
  %694 = phi i32 [ %708, %822 ], [ %581, %690 ]
  %695 = phi i64 [ %824, %822 ], [ 0, %690 ]
  %696 = phi i32 [ %823, %822 ], [ 0, %690 ]
  %697 = zext i32 %694 to i64
  %698 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %693, i64 %697, i32 1
  %699 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %698, i64 0, i32 1
  %700 = load ptr, ptr %699, align 8, !tbaa !31
  %701 = load ptr, ptr %698, align 8, !tbaa !32
  %702 = icmp eq ptr %700, %701
  br i1 %702, label %705, label %715

703:                                              ; preds = %779
  %704 = load i32, ptr %157, align 4, !tbaa !22
  br label %705

705:                                              ; preds = %703, %691
  %706 = phi i32 [ %692, %691 ], [ %704, %703 ]
  %707 = phi ptr [ %693, %691 ], [ %784, %703 ]
  %708 = phi i32 [ %694, %691 ], [ %782, %703 ]
  %709 = phi i64 [ %697, %691 ], [ %783, %703 ]
  %710 = zext i32 %706 to i64
  %711 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %707, i64 %710, i32 1
  %712 = load ptr, ptr %711, align 8, !tbaa !32
  br i1 %6, label %822, label %794

713:                                              ; preds = %756
  %714 = landingpad { ptr, i32 }
          cleanup
  br label %947

715:                                              ; preds = %691, %779
  %716 = phi ptr [ %788, %779 ], [ %701, %691 ]
  %717 = phi ptr [ %784, %779 ], [ %693, %691 ]
  %718 = phi i64 [ %781, %779 ], [ 0, %691 ]
  %719 = phi i32 [ %780, %779 ], [ 0, %691 ]
  %720 = load i32, ptr %157, align 4, !tbaa !22
  %721 = zext i32 %720 to i64
  %722 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %717, i64 %721, i32 1
  %723 = load ptr, ptr %722, align 8, !tbaa !32
  %724 = getelementptr inbounds %"struct.std::pair", ptr %723, i64 %695
  %725 = load i32, ptr %724, align 8, !tbaa !37
  %726 = getelementptr inbounds %"struct.std::pair", ptr %716, i64 %718
  %727 = load i32, ptr %726, align 8, !tbaa !37
  %728 = getelementptr inbounds %"struct.std::pair", ptr %723, i64 %695, i32 1
  %729 = load double, ptr %728, align 8, !tbaa !35
  %730 = fmul double %729, %592
  %731 = getelementptr inbounds %"struct.std::pair", ptr %716, i64 %718, i32 1
  %732 = load double, ptr %731, align 8, !tbaa !35
  %733 = fmul double %730, %732
  %734 = fptrunc double %733 to float
  %735 = fcmp oeq float %734, 0.000000e+00
  br i1 %735, label %779, label %736

736:                                              ; preds = %715
  %737 = load i32, ptr %7, align 8, !tbaa !61
  %738 = load ptr, ptr %45, align 8, !tbaa !58
  br label %739

739:                                              ; preds = %739, %736
  %740 = phi i32 [ %737, %736 ], [ %741, %739 ]
  %741 = add i32 %740, -1
  %742 = sext i32 %741 to i64
  %743 = getelementptr inbounds i32, ptr %738, i64 %742
  %744 = load i32, ptr %743, align 4, !tbaa !22
  %745 = icmp ugt i32 %744, %725
  br i1 %745, label %739, label %746

746:                                              ; preds = %739
  %747 = load i32, ptr %117, align 8, !tbaa !61
  %748 = load ptr, ptr %118, align 8, !tbaa !58
  br label %749

749:                                              ; preds = %749, %746
  %750 = phi i32 [ %747, %746 ], [ %751, %749 ]
  %751 = add i32 %750, -1
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds i32, ptr %748, i64 %752
  %754 = load i32, ptr %753, align 4, !tbaa !22
  %755 = icmp ugt i32 %754, %727
  br i1 %755, label %749, label %756

756:                                              ; preds = %749
  %757 = sub i32 %725, %744
  %758 = sub i32 %727, %754
  %759 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !185
  %760 = load i32, ptr %116, align 8, !tbaa !22, !noalias !185
  %761 = mul i32 %760, %741
  %762 = zext i32 %761 to i64
  %763 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %759, i64 %762
  %764 = zext i32 %751 to i64
  %765 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %763, i64 %764
  %766 = load ptr, ptr %765, align 8, !tbaa !147
  %767 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %766, i64 0, i32 1
  %768 = load ptr, ptr %767, align 8, !tbaa !47
  %769 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %768, i32 noundef %757, i32 noundef %758)
          to label %770 unwind label %713

770:                                              ; preds = %756
  %771 = icmp eq i32 %769, -1
  br i1 %771, label %779, label %772

772:                                              ; preds = %770
  %773 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %766, i64 0, i32 2
  %774 = load ptr, ptr %773, align 8, !tbaa !44
  %775 = zext i32 %769 to i64
  %776 = getelementptr inbounds float, ptr %774, i64 %775
  %777 = load float, ptr %776, align 4, !tbaa !33
  %778 = fadd float %777, %734
  store float %778, ptr %776, align 4, !tbaa !33
  br label %779

779:                                              ; preds = %772, %770, %715
  %780 = add i32 %719, 1
  %781 = zext i32 %780 to i64
  %782 = load i32, ptr %580, align 4, !tbaa !22
  %783 = zext i32 %782 to i64
  %784 = load ptr, ptr %99, align 8, !tbaa !72
  %785 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %784, i64 %783, i32 1
  %786 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %785, i64 0, i32 1
  %787 = load ptr, ptr %786, align 8, !tbaa !31
  %788 = load ptr, ptr %785, align 8, !tbaa !32
  %789 = ptrtoint ptr %787 to i64
  %790 = ptrtoint ptr %788 to i64
  %791 = sub i64 %789, %790
  %792 = ashr exact i64 %791, 4
  %793 = icmp eq i64 %792, %781
  br i1 %793, label %703, label %715

794:                                              ; preds = %705
  %795 = getelementptr inbounds %"struct.std::pair", ptr %712, i64 %695
  %796 = getelementptr inbounds %"struct.std::pair", ptr %712, i64 %695, i32 1
  %797 = load double, ptr %796, align 8, !tbaa !35
  %798 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %707, i64 %709, i32 2
  %799 = load double, ptr %798, align 8, !tbaa !48
  %800 = load i32, ptr %795, align 8, !tbaa !37
  %801 = load i32, ptr %4, align 8, !tbaa !61
  %802 = load ptr, ptr %119, align 8, !tbaa !58
  br label %803

803:                                              ; preds = %803, %794
  %804 = phi i32 [ %801, %794 ], [ %805, %803 ]
  %805 = add i32 %804, -1
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds i32, ptr %802, i64 %806
  %808 = load i32, ptr %807, align 4, !tbaa !22
  %809 = icmp ugt i32 %808, %800
  br i1 %809, label %803, label %810

810:                                              ; preds = %803
  %811 = sub i32 %800, %808
  %812 = zext i32 %811 to i64
  %813 = zext i32 %805 to i64
  %814 = load ptr, ptr %120, align 8, !tbaa !66
  %815 = getelementptr inbounds %"class.dealii::Vector.35", ptr %814, i64 %813, i32 3
  %816 = load ptr, ptr %815, align 8, !tbaa !60
  %817 = getelementptr inbounds double, ptr %816, i64 %812
  %818 = load double, ptr %817, align 8, !tbaa !52
  %819 = fneg double %797
  %820 = fmul double %592, %819
  %821 = tail call double @llvm.fmuladd.f64(double %820, double %799, double %818)
  store double %821, ptr %817, align 8, !tbaa !52
  br label %822

822:                                              ; preds = %705, %810
  %823 = add i32 %696, 1
  %824 = zext i32 %823 to i64
  %825 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %707, i64 %710, i32 1, i32 0, i32 0, i32 0, i32 1
  %826 = load ptr, ptr %825, align 8, !tbaa !31
  %827 = ptrtoint ptr %826 to i64
  %828 = ptrtoint ptr %712 to i64
  %829 = sub i64 %827, %828
  %830 = ashr exact i64 %829, 4
  %831 = icmp eq i64 %830, %824
  br i1 %831, label %832, label %691

832:                                              ; preds = %822
  %833 = load ptr, ptr %511, align 8, !tbaa !43
  %834 = load ptr, ptr %512, align 8, !tbaa !41
  %835 = getelementptr inbounds i64, ptr %834, i64 %517
  %836 = load i64, ptr %835, align 8, !tbaa !42
  %837 = load ptr, ptr %480, align 8, !tbaa !47
  %838 = add i64 %836, %571
  %839 = getelementptr inbounds i32, ptr %833, i64 %838
  %840 = load i32, ptr %839, align 4, !tbaa !22
  br label %841

841:                                              ; preds = %832, %690
  %842 = phi i32 [ %840, %832 ], [ %574, %690 ]
  %843 = phi ptr [ %837, %832 ], [ %584, %690 ]
  %844 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %843, i32 noundef %516, i32 noundef %842)
          to label %845 unwind label %849

845:                                              ; preds = %841
  %846 = icmp eq i64 %142, %579
  %847 = select i1 %846, float %121, float 0.000000e+00
  %848 = icmp eq i32 %844, -1
  br i1 %848, label %857, label %851

849:                                              ; preds = %841
  %850 = landingpad { ptr, i32 }
          cleanup
  br label %950

851:                                              ; preds = %845, %686
  %852 = phi i32 [ %685, %686 ], [ %844, %845 ]
  %853 = phi float [ 0.000000e+00, %686 ], [ %847, %845 ]
  %854 = load ptr, ptr %513, align 8, !tbaa !44
  %855 = zext i32 %852 to i64
  %856 = getelementptr inbounds float, ptr %854, i64 %855
  store float %853, ptr %856, align 4, !tbaa !33
  br label %857

857:                                              ; preds = %851, %845, %686
  %858 = add i32 %521, 1
  %859 = load ptr, ptr %512, align 8, !tbaa !41
  %860 = getelementptr inbounds i64, ptr %859, i64 %519
  %861 = load i64, ptr %860, align 8, !tbaa !42
  %862 = getelementptr inbounds i64, ptr %859, i64 %517
  %863 = load i64, ptr %862, align 8, !tbaa !42
  %864 = sub i64 %861, %863
  %865 = trunc i64 %864 to i32
  %866 = icmp ult i32 %858, %865
  br i1 %866, label %520, label %867

867:                                              ; preds = %857
  %868 = load i32, ptr %514, align 4, !tbaa !38
  %869 = icmp eq i32 %518, %868
  br i1 %869, label %870, label %872

870:                                              ; preds = %882, %872, %867
  %871 = phi i32 [ %518, %867 ], [ %873, %872 ], [ %868, %882 ]
  br label %515

872:                                              ; preds = %867, %882
  %873 = phi i32 [ %875, %882 ], [ %518, %867 ]
  %874 = phi i64 [ %878, %882 ], [ %861, %867 ]
  %875 = add i32 %873, 1
  %876 = zext i32 %875 to i64
  %877 = getelementptr inbounds i64, ptr %859, i64 %876
  %878 = load i64, ptr %877, align 8, !tbaa !42
  %879 = sub i64 %878, %874
  %880 = and i64 %879, 4294967295
  %881 = icmp eq i64 %880, 0
  br i1 %881, label %882, label %870

882:                                              ; preds = %872
  %883 = icmp eq i32 %875, %868
  br i1 %883, label %870, label %872, !llvm.loop !82

884:                                              ; preds = %924, %454
  %885 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %457, i64 %456
  %886 = load i32, ptr %885, align 8, !tbaa !24
  br label %887

887:                                              ; preds = %887, %884
  %888 = phi i32 [ %467, %884 ], [ %889, %887 ]
  %889 = add i32 %888, -1
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds i32, ptr %468, i64 %890
  %892 = load i32, ptr %891, align 4, !tbaa !22
  %893 = icmp ugt i32 %892, %886
  br i1 %893, label %887, label %936

894:                                              ; preds = %469, %924
  %895 = phi i64 [ 0, %469 ], [ %934, %924 ]
  %896 = phi i32 [ 0, %469 ], [ %933, %924 ]
  br label %897

897:                                              ; preds = %897, %894
  %898 = phi i32 [ %467, %894 ], [ %899, %897 ]
  %899 = add i32 %898, -1
  %900 = sext i32 %899 to i64
  %901 = getelementptr inbounds i32, ptr %468, i64 %900
  %902 = load i32, ptr %901, align 4, !tbaa !22
  %903 = zext i32 %902 to i64
  %904 = icmp ult i64 %142, %903
  br i1 %904, label %897, label %905

905:                                              ; preds = %897
  %906 = sub i32 %154, %902
  %907 = zext i32 %906 to i64
  %908 = zext i32 %899 to i64
  %909 = getelementptr inbounds %"class.dealii::Vector.35", ptr %470, i64 %908, i32 3
  %910 = load ptr, ptr %909, align 8, !tbaa !60
  %911 = getelementptr inbounds double, ptr %910, i64 %907
  %912 = load double, ptr %911, align 8, !tbaa !52
  %913 = getelementptr inbounds %"struct.std::pair", ptr %461, i64 %895
  %914 = getelementptr inbounds %"struct.std::pair", ptr %461, i64 %895, i32 1
  %915 = load double, ptr %914, align 8, !tbaa !35
  %916 = load i32, ptr %913, align 8, !tbaa !37
  br label %917

917:                                              ; preds = %917, %905
  %918 = phi i32 [ %467, %905 ], [ %919, %917 ]
  %919 = add i32 %918, -1
  %920 = sext i32 %919 to i64
  %921 = getelementptr inbounds i32, ptr %468, i64 %920
  %922 = load i32, ptr %921, align 4, !tbaa !22
  %923 = icmp ugt i32 %922, %916
  br i1 %923, label %917, label %924

924:                                              ; preds = %917
  %925 = sub i32 %916, %922
  %926 = zext i32 %925 to i64
  %927 = zext i32 %919 to i64
  %928 = getelementptr inbounds %"class.dealii::Vector.35", ptr %470, i64 %927, i32 3
  %929 = load ptr, ptr %928, align 8, !tbaa !60
  %930 = getelementptr inbounds double, ptr %929, i64 %926
  %931 = load double, ptr %930, align 8, !tbaa !52
  %932 = tail call double @llvm.fmuladd.f64(double %912, double %915, double %931)
  store double %932, ptr %930, align 8, !tbaa !52
  %933 = add i32 %896, 1
  %934 = zext i32 %933 to i64
  %935 = icmp eq i64 %465, %934
  br i1 %935, label %884, label %894

936:                                              ; preds = %887
  %937 = sub i32 %886, %892
  %938 = zext i32 %937 to i64
  %939 = zext i32 %889 to i64
  %940 = load ptr, ptr %120, align 8, !tbaa !66
  %941 = getelementptr inbounds %"class.dealii::Vector.35", ptr %940, i64 %939, i32 3
  %942 = load ptr, ptr %941, align 8, !tbaa !60
  %943 = getelementptr inbounds double, ptr %942, i64 %938
  store double 0.000000e+00, ptr %943, align 8, !tbaa !52
  br label %944

944:                                              ; preds = %256, %164, %453, %936
  %945 = add nuw nsw i64 %142, 1
  %946 = icmp eq i64 %945, %122
  br i1 %946, label %135, label %141

947:                                              ; preds = %562, %564, %713, %602, %259, %261, %304, %424, %139
  %948 = phi { ptr, i32 } [ %140, %139 ], [ %262, %261 ], [ %260, %259 ], [ %305, %304 ], [ %425, %424 ], [ %565, %564 ], [ %563, %562 ], [ %603, %602 ], [ %714, %713 ]
  %949 = icmp eq ptr %98, null
  br i1 %949, label %952, label %950

950:                                              ; preds = %688, %849, %947
  %951 = phi { ptr, i32 } [ %948, %947 ], [ %850, %849 ], [ %689, %688 ]
  tail call void @_ZdlPv(ptr noundef nonnull %98) #23
  br label %952

952:                                              ; preds = %950, %947
  %953 = phi { ptr, i32 } [ %948, %947 ], [ %951, %950 ]
  resume { ptr, i32 } %953
}

declare noundef nonnull align 8 dereferenceable(288) ptr @_ZNK6dealii17BlockSparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(320)) local_unnamed_addr #5

declare noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288)) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIfNS_11BlockVectorIfEEEEvRNS_17BlockSparseMatrixIT_EERT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(320) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !61
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !61
  %9 = tail call noundef nonnull align 8 dereferenceable(288) ptr @_ZNK6dealii17BlockSparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(320) %1)
  %10 = load i32, ptr %7, align 8, !tbaa !61
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 3, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !143, !noalias !73
  %15 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %16 = load i32, ptr %15, align 8, !tbaa !22, !noalias !73
  %17 = zext i32 %10 to i64
  br label %18

18:                                               ; preds = %12, %71
  %19 = phi i64 [ 0, %12 ], [ %73, %71 ]
  %20 = phi double [ 0.000000e+00, %12 ], [ %72, %71 ]
  %21 = trunc i64 %19 to i32
  %22 = mul i32 %16, %21
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %14, i64 %23
  %25 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %24, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !147
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %26, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !47
  %29 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %28, i64 0, i32 2
  %30 = load i32, ptr %29, align 4, !tbaa !38
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %18
  %33 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %26, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !44
  %35 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %28, i64 0, i32 8
  %36 = load ptr, ptr %35, align 8, !tbaa !41
  %37 = zext i32 %30 to i64
  %38 = and i64 %37, 1
  %39 = icmp eq i32 %30, 1
  br i1 %39, label %58, label %40

40:                                               ; preds = %32
  %41 = and i64 %37, 4294967294
  br label %75

42:                                               ; preds = %71, %3
  %43 = phi i64 [ 0, %3 ], [ %17, %71 ]
  %44 = phi double [ 0.000000e+00, %3 ], [ %72, %71 ]
  %45 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 1, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !58
  %47 = getelementptr inbounds i32, ptr %46, i64 %43
  %48 = load i32, ptr %47, align 4, !tbaa !22
  %49 = uitofp i32 %48 to double
  %50 = fdiv double %44, %49
  %51 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %9, i64 0, i32 5
  %52 = tail call noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %9)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %97, label %54

54:                                               ; preds = %42
  %55 = zext i32 %52 to i64
  %56 = shl nuw nsw i64 %55, 2
  %57 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %56) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %57, i8 -1, i64 %56, i1 false), !tbaa !22
  br label %97

58:                                               ; preds = %75, %32
  %59 = phi double [ undef, %32 ], [ %93, %75 ]
  %60 = phi i64 [ 0, %32 ], [ %94, %75 ]
  %61 = phi double [ %20, %32 ], [ %93, %75 ]
  %62 = icmp eq i64 %38, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds i64, ptr %36, i64 %60
  %65 = load i64, ptr %64, align 8, !tbaa !42
  %66 = getelementptr inbounds float, ptr %34, i64 %65
  %67 = load float, ptr %66, align 4, !tbaa !33
  %68 = tail call float @llvm.fabs.f32(float %67)
  %69 = fpext float %68 to double
  %70 = fadd double %61, %69
  br label %71

71:                                               ; preds = %63, %58, %18
  %72 = phi double [ %20, %18 ], [ %59, %58 ], [ %70, %63 ]
  %73 = add nuw nsw i64 %19, 1
  %74 = icmp eq i64 %73, %17
  br i1 %74, label %42, label %18

75:                                               ; preds = %75, %40
  %76 = phi i64 [ 0, %40 ], [ %94, %75 ]
  %77 = phi double [ %20, %40 ], [ %93, %75 ]
  %78 = phi i64 [ 0, %40 ], [ %95, %75 ]
  %79 = getelementptr inbounds i64, ptr %36, i64 %76
  %80 = load i64, ptr %79, align 8, !tbaa !42
  %81 = getelementptr inbounds float, ptr %34, i64 %80
  %82 = load float, ptr %81, align 4, !tbaa !33
  %83 = tail call float @llvm.fabs.f32(float %82)
  %84 = fpext float %83 to double
  %85 = fadd double %77, %84
  %86 = or i64 %76, 1
  %87 = getelementptr inbounds i64, ptr %36, i64 %86
  %88 = load i64, ptr %87, align 8, !tbaa !42
  %89 = getelementptr inbounds float, ptr %34, i64 %88
  %90 = load float, ptr %89, align 4, !tbaa !33
  %91 = tail call float @llvm.fabs.f32(float %90)
  %92 = fpext float %91 to double
  %93 = fadd double %85, %92
  %94 = add nuw nsw i64 %76, 2
  %95 = add i64 %78, 2
  %96 = icmp eq i64 %95, %41
  br i1 %96, label %58, label %75

97:                                               ; preds = %54, %42
  %98 = phi ptr [ null, %42 ], [ %57, %54 ]
  %99 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %100 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !70
  %102 = load ptr, ptr %99, align 8, !tbaa !72
  %103 = ptrtoint ptr %101 to i64
  %104 = ptrtoint ptr %102 to i64
  %105 = sub i64 %103, %104
  %106 = sdiv exact i64 %105, 40
  %107 = icmp eq ptr %101, %102
  br i1 %107, label %108, label %125

108:                                              ; preds = %125, %97
  %109 = invoke noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %9)
          to label %110 unwind label %139

110:                                              ; preds = %108
  %111 = icmp eq i32 %109, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %9, i64 0, i32 5, i32 1
  %114 = icmp eq i32 %8, 0
  %115 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 3, i32 0, i32 1
  %116 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %117 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 2
  %118 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %1, i64 0, i32 2, i32 1
  %119 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 2, i32 1
  %120 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 1
  %121 = fptrunc double %50 to float
  %122 = zext i32 %109 to i64
  %123 = zext i32 %8 to i64
  %124 = zext i32 %8 to i64
  br label %141

125:                                              ; preds = %97, %125
  %126 = phi i64 [ %133, %125 ], [ 0, %97 ]
  %127 = phi i32 [ %132, %125 ], [ 0, %97 ]
  %128 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %102, i64 %126
  %129 = load i32, ptr %128, align 8, !tbaa !24
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds i32, ptr %98, i64 %130
  store i32 %127, ptr %131, align 4, !tbaa !22
  %132 = add i32 %127, 1
  %133 = zext i32 %132 to i64
  %134 = icmp ugt i64 %106, %133
  br i1 %134, label %125, label %108

135:                                              ; preds = %951, %110
  %136 = icmp eq ptr %98, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %135
  tail call void @_ZdlPv(ptr noundef nonnull %98) #23
  br label %138

138:                                              ; preds = %135, %137
  ret void

139:                                              ; preds = %108
  %140 = landingpad { ptr, i32 }
          cleanup
  br label %954

141:                                              ; preds = %112, %951
  %142 = phi i64 [ 0, %112 ], [ %952, %951 ]
  %143 = load i32, ptr %51, align 8, !tbaa !61
  %144 = load ptr, ptr %113, align 8, !tbaa !58
  br label %145

145:                                              ; preds = %145, %141
  %146 = phi i32 [ %143, %141 ], [ %147, %145 ]
  %147 = add i32 %146, -1
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i32, ptr %144, i64 %148
  %150 = load i32, ptr %149, align 4, !tbaa !22
  %151 = zext i32 %150 to i64
  %152 = icmp ult i64 %142, %151
  br i1 %152, label %145, label %153

153:                                              ; preds = %145
  %154 = trunc i64 %142 to i32
  %155 = sub i32 %154, %150
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds i32, ptr %98, i64 %142
  %158 = load i32, ptr %157, align 4, !tbaa !22
  %159 = icmp eq i32 %158, -1
  br i1 %159, label %164, label %160

160:                                              ; preds = %153
  br i1 %114, label %455, label %161

161:                                              ; preds = %160
  %162 = add i32 %155, 1
  %163 = zext i32 %162 to i64
  br label %473

164:                                              ; preds = %153
  br i1 %114, label %951, label %165

165:                                              ; preds = %164
  %166 = add i32 %155, 1
  %167 = zext i32 %166 to i64
  br label %168

168:                                              ; preds = %165, %256
  %169 = phi i64 [ 0, %165 ], [ %257, %256 ]
  %170 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !188
  %171 = load i32, ptr %116, align 8, !tbaa !22, !noalias !188
  %172 = mul i32 %171, %147
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %170, i64 %173
  %175 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %174, i64 %169
  %176 = load ptr, ptr %175, align 8, !tbaa !147
  %177 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %176, i64 0, i32 1
  %178 = load ptr, ptr %177, align 8, !tbaa !47, !noalias !191
  %179 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %178, i64 0, i32 8
  %180 = load ptr, ptr %179, align 8, !tbaa !41, !noalias !191
  %181 = getelementptr inbounds i64, ptr %180, i64 %167
  %182 = load i64, ptr %181, align 8, !tbaa !42, !noalias !191
  %183 = getelementptr inbounds i64, ptr %180, i64 %156
  %184 = load i64, ptr %183, align 8, !tbaa !42, !noalias !191
  %185 = sub i64 %182, %184
  %186 = and i64 %185, 4294967295
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %204

188:                                              ; preds = %168
  %189 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %178, i64 0, i32 2
  %190 = load i32, ptr %189, align 4, !tbaa !38, !noalias !194
  br label %191

191:                                              ; preds = %196, %188
  %192 = phi i64 [ %182, %188 ], [ %200, %196 ]
  %193 = phi i32 [ %155, %188 ], [ %194, %196 ]
  %194 = add i32 %193, 1
  %195 = icmp ult i32 %194, %190
  br i1 %195, label %196, label %204

196:                                              ; preds = %191
  %197 = add i32 %193, 2
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds i64, ptr %180, i64 %198
  %200 = load i64, ptr %199, align 8, !tbaa !42, !noalias !194
  %201 = sub i64 %200, %192
  %202 = and i64 %201, 4294967295
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %191, label %204

204:                                              ; preds = %196, %191, %168
  %205 = phi i32 [ %155, %168 ], [ %190, %191 ], [ %194, %196 ]
  %206 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %176)
          to label %207 unwind label %259

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %206, i64 0, i32 9
  %209 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %206, i64 0, i32 8
  %210 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %176, i64 0, i32 2
  %211 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %206, i64 0, i32 2
  br label %212

212:                                              ; preds = %441, %207
  %213 = phi i32 [ %205, %207 ], [ %442, %441 ]
  %214 = zext i32 %213 to i64
  %215 = add i32 %213, 1
  %216 = zext i32 %215 to i64
  br label %217

217:                                              ; preds = %212, %428
  %218 = phi i32 [ %429, %428 ], [ 0, %212 ]
  %219 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !197
  %220 = load i32, ptr %116, align 8, !tbaa !22, !noalias !197
  %221 = mul i32 %220, %147
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %219, i64 %222
  %224 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %223, i64 %169
  %225 = load ptr, ptr %224, align 8, !tbaa !147
  %226 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %225, i64 0, i32 1
  %227 = load ptr, ptr %226, align 8, !tbaa !47, !noalias !200
  %228 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %227, i64 0, i32 2
  %229 = load i32, ptr %228, align 4, !tbaa !38, !noalias !200
  %230 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %227, i64 0, i32 8
  br label %231

231:                                              ; preds = %235, %217
  %232 = phi i32 [ %155, %217 ], [ %233, %235 ]
  %233 = add i32 %232, 1
  %234 = icmp ult i32 %233, %229
  br i1 %234, label %235, label %247

235:                                              ; preds = %231
  %236 = load ptr, ptr %230, align 8, !tbaa !41, !noalias !200
  %237 = add i32 %232, 2
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds i64, ptr %236, i64 %238
  %240 = load i64, ptr %239, align 8, !tbaa !42, !noalias !200
  %241 = zext i32 %233 to i64
  %242 = getelementptr inbounds i64, ptr %236, i64 %241
  %243 = load i64, ptr %242, align 8, !tbaa !42, !noalias !200
  %244 = sub i64 %240, %243
  %245 = and i64 %244, 4294967295
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %231, label %247

247:                                              ; preds = %231, %235
  %248 = phi i32 [ %233, %235 ], [ %229, %231 ]
  %249 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %225)
          to label %250 unwind label %261

250:                                              ; preds = %247
  %251 = icmp ne ptr %206, %249
  %252 = icmp ne i32 %213, %248
  %253 = or i1 %251, %252
  %254 = icmp ne i32 %218, 0
  %255 = or i1 %254, %253
  br i1 %255, label %263, label %256

256:                                              ; preds = %250
  %257 = add nuw nsw i64 %169, 1
  %258 = icmp eq i64 %257, %124
  br i1 %258, label %951, label %168

259:                                              ; preds = %204
  %260 = landingpad { ptr, i32 }
          cleanup
  br label %954

261:                                              ; preds = %247
  %262 = landingpad { ptr, i32 }
          cleanup
  br label %954

263:                                              ; preds = %250
  %264 = load ptr, ptr %208, align 8, !tbaa !43
  %265 = load ptr, ptr %209, align 8, !tbaa !41
  %266 = getelementptr inbounds i64, ptr %265, i64 %214
  %267 = load i64, ptr %266, align 8, !tbaa !42
  %268 = zext i32 %218 to i64
  %269 = add i64 %267, %268
  %270 = getelementptr inbounds i32, ptr %264, i64 %269
  %271 = load i32, ptr %270, align 4, !tbaa !22
  %272 = load ptr, ptr %113, align 8, !tbaa !58
  %273 = getelementptr inbounds i32, ptr %272, i64 %169
  %274 = load i32, ptr %273, align 4, !tbaa !22
  %275 = add i32 %274, %271
  %276 = zext i32 %275 to i64
  %277 = getelementptr inbounds i32, ptr %98, i64 %276
  %278 = load i32, ptr %277, align 4, !tbaa !22
  %279 = icmp eq i32 %278, -1
  br i1 %279, label %428, label %280

280:                                              ; preds = %263
  %281 = load ptr, ptr %210, align 8, !tbaa !44
  %282 = load ptr, ptr %177, align 8, !tbaa !47
  %283 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %282, i64 0, i32 8
  %284 = load ptr, ptr %283, align 8, !tbaa !41
  %285 = getelementptr inbounds i64, ptr %284, i64 %214
  %286 = load i64, ptr %285, align 8, !tbaa !42
  %287 = add i64 %286, %268
  %288 = getelementptr inbounds float, ptr %281, i64 %287
  %289 = load float, ptr %288, align 4, !tbaa !33
  %290 = fpext float %289 to double
  %291 = zext i32 %278 to i64
  %292 = load ptr, ptr %99, align 8, !tbaa !72
  %293 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %292, i64 %291, i32 1
  %294 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %293, i64 0, i32 1
  %295 = load ptr, ptr %294, align 8, !tbaa !31
  %296 = load ptr, ptr %293, align 8, !tbaa !32
  %297 = icmp eq ptr %295, %296
  br i1 %297, label %300, label %306

298:                                              ; preds = %361
  %299 = load ptr, ptr %177, align 8, !tbaa !47
  br label %300

300:                                              ; preds = %298, %280
  %301 = phi ptr [ %282, %280 ], [ %299, %298 ]
  %302 = phi i64 [ %291, %280 ], [ %365, %298 ]
  %303 = phi ptr [ %292, %280 ], [ %366, %298 ]
  br i1 %6, label %411, label %376

304:                                              ; preds = %338
  %305 = landingpad { ptr, i32 }
          cleanup
  br label %954

306:                                              ; preds = %280, %361
  %307 = phi ptr [ %370, %361 ], [ %296, %280 ]
  %308 = phi i64 [ %363, %361 ], [ 0, %280 ]
  %309 = phi i32 [ %362, %361 ], [ 0, %280 ]
  %310 = getelementptr inbounds %"struct.std::pair", ptr %307, i64 %308
  %311 = load i32, ptr %310, align 8, !tbaa !37
  %312 = getelementptr inbounds %"struct.std::pair", ptr %307, i64 %308, i32 1
  %313 = load double, ptr %312, align 8, !tbaa !35
  %314 = fmul double %313, %290
  %315 = fptrunc double %314 to float
  %316 = fcmp oeq float %315, 0.000000e+00
  br i1 %316, label %361, label %317

317:                                              ; preds = %306
  %318 = load i32, ptr %7, align 8, !tbaa !61
  %319 = load ptr, ptr %45, align 8, !tbaa !58
  br label %320

320:                                              ; preds = %320, %317
  %321 = phi i32 [ %318, %317 ], [ %322, %320 ]
  %322 = add i32 %321, -1
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds i32, ptr %319, i64 %323
  %325 = load i32, ptr %324, align 4, !tbaa !22
  %326 = zext i32 %325 to i64
  %327 = icmp ult i64 %142, %326
  br i1 %327, label %320, label %328

328:                                              ; preds = %320
  %329 = load i32, ptr %117, align 8, !tbaa !61
  %330 = load ptr, ptr %118, align 8, !tbaa !58
  br label %331

331:                                              ; preds = %331, %328
  %332 = phi i32 [ %329, %328 ], [ %333, %331 ]
  %333 = add i32 %332, -1
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i32, ptr %330, i64 %334
  %336 = load i32, ptr %335, align 4, !tbaa !22
  %337 = icmp ugt i32 %336, %311
  br i1 %337, label %331, label %338

338:                                              ; preds = %331
  %339 = sub i32 %154, %325
  %340 = sub i32 %311, %336
  %341 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !203
  %342 = load i32, ptr %116, align 8, !tbaa !22, !noalias !203
  %343 = mul i32 %342, %322
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %341, i64 %344
  %346 = zext i32 %333 to i64
  %347 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %345, i64 %346
  %348 = load ptr, ptr %347, align 8, !tbaa !147
  %349 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %348, i64 0, i32 1
  %350 = load ptr, ptr %349, align 8, !tbaa !47
  %351 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %350, i32 noundef %339, i32 noundef %340)
          to label %352 unwind label %304

352:                                              ; preds = %338
  %353 = icmp eq i32 %351, -1
  br i1 %353, label %361, label %354

354:                                              ; preds = %352
  %355 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %348, i64 0, i32 2
  %356 = load ptr, ptr %355, align 8, !tbaa !44
  %357 = zext i32 %351 to i64
  %358 = getelementptr inbounds float, ptr %356, i64 %357
  %359 = load float, ptr %358, align 4, !tbaa !33
  %360 = fadd float %359, %315
  store float %360, ptr %358, align 4, !tbaa !33
  br label %361

361:                                              ; preds = %354, %352, %306
  %362 = add i32 %309, 1
  %363 = zext i32 %362 to i64
  %364 = load i32, ptr %277, align 4, !tbaa !22
  %365 = zext i32 %364 to i64
  %366 = load ptr, ptr %99, align 8, !tbaa !72
  %367 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %366, i64 %365, i32 1
  %368 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %367, i64 0, i32 1
  %369 = load ptr, ptr %368, align 8, !tbaa !31
  %370 = load ptr, ptr %367, align 8, !tbaa !32
  %371 = ptrtoint ptr %369 to i64
  %372 = ptrtoint ptr %370 to i64
  %373 = sub i64 %371, %372
  %374 = ashr exact i64 %373, 4
  %375 = icmp eq i64 %374, %363
  br i1 %375, label %298, label %306

376:                                              ; preds = %300
  %377 = load ptr, ptr %210, align 8, !tbaa !44
  %378 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %301, i64 0, i32 8
  %379 = load ptr, ptr %378, align 8, !tbaa !41
  %380 = getelementptr inbounds i64, ptr %379, i64 %214
  %381 = load i64, ptr %380, align 8, !tbaa !42
  %382 = add i64 %381, %268
  %383 = getelementptr inbounds float, ptr %377, i64 %382
  %384 = load float, ptr %383, align 4, !tbaa !33
  %385 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %303, i64 %302, i32 2
  %386 = load double, ptr %385, align 8, !tbaa !48
  %387 = load i32, ptr %4, align 8, !tbaa !61
  %388 = load ptr, ptr %119, align 8, !tbaa !58
  br label %389

389:                                              ; preds = %389, %376
  %390 = phi i32 [ %387, %376 ], [ %391, %389 ]
  %391 = add i32 %390, -1
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i32, ptr %388, i64 %392
  %394 = load i32, ptr %393, align 4, !tbaa !22
  %395 = zext i32 %394 to i64
  %396 = icmp ult i64 %142, %395
  br i1 %396, label %389, label %397

397:                                              ; preds = %389
  %398 = sub i32 %154, %394
  %399 = zext i32 %398 to i64
  %400 = zext i32 %391 to i64
  %401 = load ptr, ptr %120, align 8, !tbaa !68
  %402 = getelementptr inbounds %"class.dealii::Vector", ptr %401, i64 %400, i32 3
  %403 = load ptr, ptr %402, align 8, !tbaa !49
  %404 = getelementptr inbounds float, ptr %403, i64 %399
  %405 = fpext float %384 to double
  %406 = load float, ptr %404, align 4, !tbaa !33
  %407 = fpext float %406 to double
  %408 = fneg double %405
  %409 = tail call double @llvm.fmuladd.f64(double %408, double %386, double %407)
  %410 = fptrunc double %409 to float
  store float %410, ptr %404, align 4, !tbaa !33
  br label %411

411:                                              ; preds = %300, %397
  %412 = load ptr, ptr %208, align 8, !tbaa !43
  %413 = load ptr, ptr %209, align 8, !tbaa !41
  %414 = getelementptr inbounds i64, ptr %413, i64 %214
  %415 = load i64, ptr %414, align 8, !tbaa !42
  %416 = add i64 %415, %268
  %417 = getelementptr inbounds i32, ptr %412, i64 %416
  %418 = load i32, ptr %417, align 4, !tbaa !22
  %419 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %301, i32 noundef %213, i32 noundef %418)
          to label %420 unwind label %426

420:                                              ; preds = %411
  %421 = icmp eq i32 %419, -1
  br i1 %421, label %428, label %422

422:                                              ; preds = %420
  %423 = load ptr, ptr %210, align 8, !tbaa !44
  %424 = zext i32 %419 to i64
  %425 = getelementptr inbounds float, ptr %423, i64 %424
  store float 0.000000e+00, ptr %425, align 4, !tbaa !33
  br label %428

426:                                              ; preds = %411
  %427 = landingpad { ptr, i32 }
          cleanup
  br label %954

428:                                              ; preds = %420, %422, %263
  %429 = add i32 %218, 1
  %430 = load ptr, ptr %209, align 8, !tbaa !41
  %431 = getelementptr inbounds i64, ptr %430, i64 %216
  %432 = load i64, ptr %431, align 8, !tbaa !42
  %433 = getelementptr inbounds i64, ptr %430, i64 %214
  %434 = load i64, ptr %433, align 8, !tbaa !42
  %435 = sub i64 %432, %434
  %436 = trunc i64 %435 to i32
  %437 = icmp ult i32 %429, %436
  br i1 %437, label %217, label %438

438:                                              ; preds = %428
  %439 = load i32, ptr %211, align 4, !tbaa !38
  %440 = icmp eq i32 %215, %439
  br i1 %440, label %441, label %443

441:                                              ; preds = %453, %443, %438
  %442 = phi i32 [ %215, %438 ], [ %444, %443 ], [ %439, %453 ]
  br label %212

443:                                              ; preds = %438, %453
  %444 = phi i32 [ %446, %453 ], [ %215, %438 ]
  %445 = phi i64 [ %449, %453 ], [ %432, %438 ]
  %446 = add i32 %444, 1
  %447 = zext i32 %446 to i64
  %448 = getelementptr inbounds i64, ptr %430, i64 %447
  %449 = load i64, ptr %448, align 8, !tbaa !42
  %450 = sub i64 %449, %445
  %451 = and i64 %450, 4294967295
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %453, label %441

453:                                              ; preds = %443
  %454 = icmp eq i32 %446, %439
  br i1 %454, label %441, label %443, !llvm.loop !82

455:                                              ; preds = %561, %160
  br i1 %6, label %951, label %456

456:                                              ; preds = %455
  %457 = load i32, ptr %157, align 4, !tbaa !22
  %458 = zext i32 %457 to i64
  %459 = load ptr, ptr %99, align 8, !tbaa !72
  %460 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %459, i64 %458, i32 1
  %461 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %460, i64 0, i32 1
  %462 = load ptr, ptr %461, align 8, !tbaa !31
  %463 = load ptr, ptr %460, align 8, !tbaa !32
  %464 = ptrtoint ptr %462 to i64
  %465 = ptrtoint ptr %463 to i64
  %466 = sub i64 %464, %465
  %467 = ashr exact i64 %466, 4
  %468 = icmp eq ptr %462, %463
  %469 = load i32, ptr %4, align 8, !tbaa !61
  %470 = load ptr, ptr %119, align 8, !tbaa !58
  br i1 %468, label %888, label %471

471:                                              ; preds = %456
  %472 = load ptr, ptr %120, align 8, !tbaa !68
  br label %898

473:                                              ; preds = %161, %561
  %474 = phi i64 [ 0, %161 ], [ %562, %561 ]
  %475 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !206
  %476 = load i32, ptr %116, align 8, !tbaa !22, !noalias !206
  %477 = mul i32 %476, %147
  %478 = zext i32 %477 to i64
  %479 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %475, i64 %478
  %480 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %479, i64 %474
  %481 = load ptr, ptr %480, align 8, !tbaa !147
  %482 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %481, i64 0, i32 1
  %483 = load ptr, ptr %482, align 8, !tbaa !47, !noalias !209
  %484 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %483, i64 0, i32 8
  %485 = load ptr, ptr %484, align 8, !tbaa !41, !noalias !209
  %486 = getelementptr inbounds i64, ptr %485, i64 %163
  %487 = load i64, ptr %486, align 8, !tbaa !42, !noalias !209
  %488 = getelementptr inbounds i64, ptr %485, i64 %156
  %489 = load i64, ptr %488, align 8, !tbaa !42, !noalias !209
  %490 = sub i64 %487, %489
  %491 = and i64 %490, 4294967295
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %493, label %509

493:                                              ; preds = %473
  %494 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %483, i64 0, i32 2
  %495 = load i32, ptr %494, align 4, !tbaa !38, !noalias !212
  br label %496

496:                                              ; preds = %501, %493
  %497 = phi i64 [ %487, %493 ], [ %505, %501 ]
  %498 = phi i32 [ %155, %493 ], [ %499, %501 ]
  %499 = add i32 %498, 1
  %500 = icmp ult i32 %499, %495
  br i1 %500, label %501, label %509

501:                                              ; preds = %496
  %502 = add i32 %498, 2
  %503 = zext i32 %502 to i64
  %504 = getelementptr inbounds i64, ptr %485, i64 %503
  %505 = load i64, ptr %504, align 8, !tbaa !42, !noalias !212
  %506 = sub i64 %505, %497
  %507 = and i64 %506, 4294967295
  %508 = icmp eq i64 %507, 0
  br i1 %508, label %496, label %509

509:                                              ; preds = %501, %496, %473
  %510 = phi i32 [ %155, %473 ], [ %495, %496 ], [ %499, %501 ]
  %511 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %481)
          to label %512 unwind label %564

512:                                              ; preds = %509
  %513 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %511, i64 0, i32 9
  %514 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %511, i64 0, i32 8
  %515 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %481, i64 0, i32 2
  %516 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %511, i64 0, i32 2
  br label %517

517:                                              ; preds = %874, %512
  %518 = phi i32 [ %510, %512 ], [ %875, %874 ]
  %519 = zext i32 %518 to i64
  %520 = add i32 %518, 1
  %521 = zext i32 %520 to i64
  br label %522

522:                                              ; preds = %517, %861
  %523 = phi i32 [ %862, %861 ], [ 0, %517 ]
  %524 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !215
  %525 = load i32, ptr %116, align 8, !tbaa !22, !noalias !215
  %526 = mul i32 %525, %147
  %527 = zext i32 %526 to i64
  %528 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %524, i64 %527
  %529 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %528, i64 %474
  %530 = load ptr, ptr %529, align 8, !tbaa !147
  %531 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %530, i64 0, i32 1
  %532 = load ptr, ptr %531, align 8, !tbaa !47, !noalias !218
  %533 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %532, i64 0, i32 2
  %534 = load i32, ptr %533, align 4, !tbaa !38, !noalias !218
  %535 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %532, i64 0, i32 8
  br label %536

536:                                              ; preds = %540, %522
  %537 = phi i32 [ %155, %522 ], [ %538, %540 ]
  %538 = add i32 %537, 1
  %539 = icmp ult i32 %538, %534
  br i1 %539, label %540, label %552

540:                                              ; preds = %536
  %541 = load ptr, ptr %535, align 8, !tbaa !41, !noalias !218
  %542 = add i32 %537, 2
  %543 = zext i32 %542 to i64
  %544 = getelementptr inbounds i64, ptr %541, i64 %543
  %545 = load i64, ptr %544, align 8, !tbaa !42, !noalias !218
  %546 = zext i32 %538 to i64
  %547 = getelementptr inbounds i64, ptr %541, i64 %546
  %548 = load i64, ptr %547, align 8, !tbaa !42, !noalias !218
  %549 = sub i64 %545, %548
  %550 = and i64 %549, 4294967295
  %551 = icmp eq i64 %550, 0
  br i1 %551, label %536, label %552

552:                                              ; preds = %536, %540
  %553 = phi i32 [ %538, %540 ], [ %534, %536 ]
  %554 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIfE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %530)
          to label %555 unwind label %566

555:                                              ; preds = %552
  %556 = icmp ne ptr %511, %554
  %557 = icmp ne i32 %518, %553
  %558 = or i1 %556, %557
  %559 = icmp ne i32 %523, 0
  %560 = or i1 %559, %558
  br i1 %560, label %568, label %561

561:                                              ; preds = %555
  %562 = add nuw nsw i64 %474, 1
  %563 = icmp eq i64 %562, %123
  br i1 %563, label %455, label %473

564:                                              ; preds = %509
  %565 = landingpad { ptr, i32 }
          cleanup
  br label %954

566:                                              ; preds = %552
  %567 = landingpad { ptr, i32 }
          cleanup
  br label %954

568:                                              ; preds = %555
  %569 = load ptr, ptr %513, align 8, !tbaa !43
  %570 = load ptr, ptr %514, align 8, !tbaa !41
  %571 = getelementptr inbounds i64, ptr %570, i64 %519
  %572 = load i64, ptr %571, align 8, !tbaa !42
  %573 = zext i32 %523 to i64
  %574 = add i64 %572, %573
  %575 = getelementptr inbounds i32, ptr %569, i64 %574
  %576 = load i32, ptr %575, align 4, !tbaa !22
  %577 = load ptr, ptr %113, align 8, !tbaa !58
  %578 = getelementptr inbounds i32, ptr %577, i64 %474
  %579 = load i32, ptr %578, align 4, !tbaa !22
  %580 = add i32 %579, %576
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds i32, ptr %98, i64 %581
  %583 = load i32, ptr %582, align 4, !tbaa !22
  %584 = icmp eq i32 %583, -1
  %585 = load ptr, ptr %515, align 8, !tbaa !44
  %586 = load ptr, ptr %482, align 8, !tbaa !47
  %587 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %586, i64 0, i32 8
  %588 = load ptr, ptr %587, align 8, !tbaa !41
  %589 = getelementptr inbounds i64, ptr %588, i64 %519
  %590 = load i64, ptr %589, align 8, !tbaa !42
  %591 = add i64 %590, %573
  %592 = getelementptr inbounds float, ptr %585, i64 %591
  %593 = load float, ptr %592, align 4, !tbaa !33
  %594 = fpext float %593 to double
  %595 = load i32, ptr %157, align 4, !tbaa !22
  %596 = zext i32 %595 to i64
  %597 = load ptr, ptr %99, align 8, !tbaa !72
  %598 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %597, i64 %596, i32 1
  %599 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %598, i64 0, i32 1
  %600 = load ptr, ptr %599, align 8, !tbaa !31
  %601 = load ptr, ptr %598, align 8, !tbaa !32
  %602 = icmp eq ptr %600, %601
  br i1 %584, label %603, label %692

603:                                              ; preds = %568
  br i1 %602, label %684, label %606

604:                                              ; preds = %637
  %605 = landingpad { ptr, i32 }
          cleanup
  br label %954

606:                                              ; preds = %603, %660
  %607 = phi ptr [ %669, %660 ], [ %601, %603 ]
  %608 = phi i64 [ %662, %660 ], [ 0, %603 ]
  %609 = phi i32 [ %661, %660 ], [ 0, %603 ]
  %610 = getelementptr inbounds %"struct.std::pair", ptr %607, i64 %608
  %611 = load i32, ptr %610, align 8, !tbaa !37
  %612 = getelementptr inbounds %"struct.std::pair", ptr %607, i64 %608, i32 1
  %613 = load double, ptr %612, align 8, !tbaa !35
  %614 = fmul double %613, %594
  %615 = fptrunc double %614 to float
  %616 = fcmp oeq float %615, 0.000000e+00
  br i1 %616, label %660, label %617

617:                                              ; preds = %606
  %618 = load i32, ptr %7, align 8, !tbaa !61
  %619 = load ptr, ptr %45, align 8, !tbaa !58
  br label %620

620:                                              ; preds = %620, %617
  %621 = phi i32 [ %618, %617 ], [ %622, %620 ]
  %622 = add i32 %621, -1
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds i32, ptr %619, i64 %623
  %625 = load i32, ptr %624, align 4, !tbaa !22
  %626 = icmp ugt i32 %625, %611
  br i1 %626, label %620, label %627

627:                                              ; preds = %620
  %628 = load i32, ptr %117, align 8, !tbaa !61
  %629 = load ptr, ptr %118, align 8, !tbaa !58
  br label %630

630:                                              ; preds = %630, %627
  %631 = phi i32 [ %628, %627 ], [ %632, %630 ]
  %632 = add i32 %631, -1
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds i32, ptr %629, i64 %633
  %635 = load i32, ptr %634, align 4, !tbaa !22
  %636 = icmp ugt i32 %635, %580
  br i1 %636, label %630, label %637

637:                                              ; preds = %630
  %638 = sub i32 %611, %625
  %639 = sub i32 %580, %635
  %640 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !221
  %641 = load i32, ptr %116, align 8, !tbaa !22, !noalias !221
  %642 = mul i32 %641, %622
  %643 = zext i32 %642 to i64
  %644 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %640, i64 %643
  %645 = zext i32 %632 to i64
  %646 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %644, i64 %645
  %647 = load ptr, ptr %646, align 8, !tbaa !147
  %648 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %647, i64 0, i32 1
  %649 = load ptr, ptr %648, align 8, !tbaa !47
  %650 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %649, i32 noundef %638, i32 noundef %639)
          to label %651 unwind label %604

651:                                              ; preds = %637
  %652 = icmp eq i32 %650, -1
  br i1 %652, label %660, label %653

653:                                              ; preds = %651
  %654 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %647, i64 0, i32 2
  %655 = load ptr, ptr %654, align 8, !tbaa !44
  %656 = zext i32 %650 to i64
  %657 = getelementptr inbounds float, ptr %655, i64 %656
  %658 = load float, ptr %657, align 4, !tbaa !33
  %659 = fadd float %658, %615
  store float %659, ptr %657, align 4, !tbaa !33
  br label %660

660:                                              ; preds = %653, %651, %606
  %661 = add i32 %609, 1
  %662 = zext i32 %661 to i64
  %663 = load i32, ptr %157, align 4, !tbaa !22
  %664 = zext i32 %663 to i64
  %665 = load ptr, ptr %99, align 8, !tbaa !72
  %666 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %665, i64 %664, i32 1
  %667 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %666, i64 0, i32 1
  %668 = load ptr, ptr %667, align 8, !tbaa !31
  %669 = load ptr, ptr %666, align 8, !tbaa !32
  %670 = ptrtoint ptr %668 to i64
  %671 = ptrtoint ptr %669 to i64
  %672 = sub i64 %670, %671
  %673 = ashr exact i64 %672, 4
  %674 = icmp eq i64 %673, %662
  br i1 %674, label %675, label %606

675:                                              ; preds = %660
  %676 = load ptr, ptr %513, align 8, !tbaa !43
  %677 = load ptr, ptr %514, align 8, !tbaa !41
  %678 = getelementptr inbounds i64, ptr %677, i64 %519
  %679 = load i64, ptr %678, align 8, !tbaa !42
  %680 = load ptr, ptr %482, align 8, !tbaa !47
  %681 = add i64 %679, %573
  %682 = getelementptr inbounds i32, ptr %676, i64 %681
  %683 = load i32, ptr %682, align 4, !tbaa !22
  br label %684

684:                                              ; preds = %675, %603
  %685 = phi i32 [ %683, %675 ], [ %576, %603 ]
  %686 = phi ptr [ %680, %675 ], [ %586, %603 ]
  %687 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %686, i32 noundef %518, i32 noundef %685)
          to label %688 unwind label %690

688:                                              ; preds = %684
  %689 = icmp eq i32 %687, -1
  br i1 %689, label %861, label %855

690:                                              ; preds = %684
  %691 = landingpad { ptr, i32 }
          cleanup
  br label %957

692:                                              ; preds = %568
  br i1 %602, label %845, label %693

693:                                              ; preds = %692, %826
  %694 = phi i32 [ %708, %826 ], [ %595, %692 ]
  %695 = phi ptr [ %709, %826 ], [ %597, %692 ]
  %696 = phi i32 [ %710, %826 ], [ %583, %692 ]
  %697 = phi i64 [ %828, %826 ], [ 0, %692 ]
  %698 = phi i32 [ %827, %826 ], [ 0, %692 ]
  %699 = zext i32 %696 to i64
  %700 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %695, i64 %699, i32 1
  %701 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %700, i64 0, i32 1
  %702 = load ptr, ptr %701, align 8, !tbaa !31
  %703 = load ptr, ptr %700, align 8, !tbaa !32
  %704 = icmp eq ptr %702, %703
  br i1 %704, label %707, label %717

705:                                              ; preds = %781
  %706 = load i32, ptr %157, align 4, !tbaa !22
  br label %707

707:                                              ; preds = %705, %693
  %708 = phi i32 [ %694, %693 ], [ %706, %705 ]
  %709 = phi ptr [ %695, %693 ], [ %786, %705 ]
  %710 = phi i32 [ %696, %693 ], [ %784, %705 ]
  %711 = phi i64 [ %699, %693 ], [ %785, %705 ]
  %712 = zext i32 %708 to i64
  %713 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %709, i64 %712, i32 1
  %714 = load ptr, ptr %713, align 8, !tbaa !32
  br i1 %6, label %826, label %796

715:                                              ; preds = %758
  %716 = landingpad { ptr, i32 }
          cleanup
  br label %954

717:                                              ; preds = %693, %781
  %718 = phi ptr [ %790, %781 ], [ %703, %693 ]
  %719 = phi ptr [ %786, %781 ], [ %695, %693 ]
  %720 = phi i64 [ %783, %781 ], [ 0, %693 ]
  %721 = phi i32 [ %782, %781 ], [ 0, %693 ]
  %722 = load i32, ptr %157, align 4, !tbaa !22
  %723 = zext i32 %722 to i64
  %724 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %719, i64 %723, i32 1
  %725 = load ptr, ptr %724, align 8, !tbaa !32
  %726 = getelementptr inbounds %"struct.std::pair", ptr %725, i64 %697
  %727 = load i32, ptr %726, align 8, !tbaa !37
  %728 = getelementptr inbounds %"struct.std::pair", ptr %718, i64 %720
  %729 = load i32, ptr %728, align 8, !tbaa !37
  %730 = getelementptr inbounds %"struct.std::pair", ptr %725, i64 %697, i32 1
  %731 = load double, ptr %730, align 8, !tbaa !35
  %732 = fmul double %731, %594
  %733 = getelementptr inbounds %"struct.std::pair", ptr %718, i64 %720, i32 1
  %734 = load double, ptr %733, align 8, !tbaa !35
  %735 = fmul double %732, %734
  %736 = fptrunc double %735 to float
  %737 = fcmp oeq float %736, 0.000000e+00
  br i1 %737, label %781, label %738

738:                                              ; preds = %717
  %739 = load i32, ptr %7, align 8, !tbaa !61
  %740 = load ptr, ptr %45, align 8, !tbaa !58
  br label %741

741:                                              ; preds = %741, %738
  %742 = phi i32 [ %739, %738 ], [ %743, %741 ]
  %743 = add i32 %742, -1
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds i32, ptr %740, i64 %744
  %746 = load i32, ptr %745, align 4, !tbaa !22
  %747 = icmp ugt i32 %746, %727
  br i1 %747, label %741, label %748

748:                                              ; preds = %741
  %749 = load i32, ptr %117, align 8, !tbaa !61
  %750 = load ptr, ptr %118, align 8, !tbaa !58
  br label %751

751:                                              ; preds = %751, %748
  %752 = phi i32 [ %749, %748 ], [ %753, %751 ]
  %753 = add i32 %752, -1
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds i32, ptr %750, i64 %754
  %756 = load i32, ptr %755, align 4, !tbaa !22
  %757 = icmp ugt i32 %756, %729
  br i1 %757, label %751, label %758

758:                                              ; preds = %751
  %759 = sub i32 %727, %746
  %760 = sub i32 %729, %756
  %761 = load ptr, ptr %115, align 8, !tbaa !143, !noalias !224
  %762 = load i32, ptr %116, align 8, !tbaa !22, !noalias !224
  %763 = mul i32 %762, %743
  %764 = zext i32 %763 to i64
  %765 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %761, i64 %764
  %766 = zext i32 %753 to i64
  %767 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %765, i64 %766
  %768 = load ptr, ptr %767, align 8, !tbaa !147
  %769 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %768, i64 0, i32 1
  %770 = load ptr, ptr %769, align 8, !tbaa !47
  %771 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %770, i32 noundef %759, i32 noundef %760)
          to label %772 unwind label %715

772:                                              ; preds = %758
  %773 = icmp eq i32 %771, -1
  br i1 %773, label %781, label %774

774:                                              ; preds = %772
  %775 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %768, i64 0, i32 2
  %776 = load ptr, ptr %775, align 8, !tbaa !44
  %777 = zext i32 %771 to i64
  %778 = getelementptr inbounds float, ptr %776, i64 %777
  %779 = load float, ptr %778, align 4, !tbaa !33
  %780 = fadd float %779, %736
  store float %780, ptr %778, align 4, !tbaa !33
  br label %781

781:                                              ; preds = %774, %772, %717
  %782 = add i32 %721, 1
  %783 = zext i32 %782 to i64
  %784 = load i32, ptr %582, align 4, !tbaa !22
  %785 = zext i32 %784 to i64
  %786 = load ptr, ptr %99, align 8, !tbaa !72
  %787 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %786, i64 %785, i32 1
  %788 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %787, i64 0, i32 1
  %789 = load ptr, ptr %788, align 8, !tbaa !31
  %790 = load ptr, ptr %787, align 8, !tbaa !32
  %791 = ptrtoint ptr %789 to i64
  %792 = ptrtoint ptr %790 to i64
  %793 = sub i64 %791, %792
  %794 = ashr exact i64 %793, 4
  %795 = icmp eq i64 %794, %783
  br i1 %795, label %705, label %717

796:                                              ; preds = %707
  %797 = getelementptr inbounds %"struct.std::pair", ptr %714, i64 %697
  %798 = getelementptr inbounds %"struct.std::pair", ptr %714, i64 %697, i32 1
  %799 = load double, ptr %798, align 8, !tbaa !35
  %800 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %709, i64 %711, i32 2
  %801 = load double, ptr %800, align 8, !tbaa !48
  %802 = load i32, ptr %797, align 8, !tbaa !37
  %803 = load i32, ptr %4, align 8, !tbaa !61
  %804 = load ptr, ptr %119, align 8, !tbaa !58
  br label %805

805:                                              ; preds = %805, %796
  %806 = phi i32 [ %803, %796 ], [ %807, %805 ]
  %807 = add i32 %806, -1
  %808 = sext i32 %807 to i64
  %809 = getelementptr inbounds i32, ptr %804, i64 %808
  %810 = load i32, ptr %809, align 4, !tbaa !22
  %811 = icmp ugt i32 %810, %802
  br i1 %811, label %805, label %812

812:                                              ; preds = %805
  %813 = sub i32 %802, %810
  %814 = zext i32 %813 to i64
  %815 = zext i32 %807 to i64
  %816 = load ptr, ptr %120, align 8, !tbaa !68
  %817 = getelementptr inbounds %"class.dealii::Vector", ptr %816, i64 %815, i32 3
  %818 = load ptr, ptr %817, align 8, !tbaa !49
  %819 = getelementptr inbounds float, ptr %818, i64 %814
  %820 = load float, ptr %819, align 4, !tbaa !33
  %821 = fpext float %820 to double
  %822 = fneg double %799
  %823 = fmul double %594, %822
  %824 = tail call double @llvm.fmuladd.f64(double %823, double %801, double %821)
  %825 = fptrunc double %824 to float
  store float %825, ptr %819, align 4, !tbaa !33
  br label %826

826:                                              ; preds = %707, %812
  %827 = add i32 %698, 1
  %828 = zext i32 %827 to i64
  %829 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %709, i64 %712, i32 1, i32 0, i32 0, i32 0, i32 1
  %830 = load ptr, ptr %829, align 8, !tbaa !31
  %831 = ptrtoint ptr %830 to i64
  %832 = ptrtoint ptr %714 to i64
  %833 = sub i64 %831, %832
  %834 = ashr exact i64 %833, 4
  %835 = icmp eq i64 %834, %828
  br i1 %835, label %836, label %693

836:                                              ; preds = %826
  %837 = load ptr, ptr %513, align 8, !tbaa !43
  %838 = load ptr, ptr %514, align 8, !tbaa !41
  %839 = getelementptr inbounds i64, ptr %838, i64 %519
  %840 = load i64, ptr %839, align 8, !tbaa !42
  %841 = load ptr, ptr %482, align 8, !tbaa !47
  %842 = add i64 %840, %573
  %843 = getelementptr inbounds i32, ptr %837, i64 %842
  %844 = load i32, ptr %843, align 4, !tbaa !22
  br label %845

845:                                              ; preds = %836, %692
  %846 = phi i32 [ %844, %836 ], [ %576, %692 ]
  %847 = phi ptr [ %841, %836 ], [ %586, %692 ]
  %848 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %847, i32 noundef %518, i32 noundef %846)
          to label %849 unwind label %853

849:                                              ; preds = %845
  %850 = icmp eq i64 %142, %581
  %851 = select i1 %850, float %121, float 0.000000e+00
  %852 = icmp eq i32 %848, -1
  br i1 %852, label %861, label %855

853:                                              ; preds = %845
  %854 = landingpad { ptr, i32 }
          cleanup
  br label %957

855:                                              ; preds = %849, %688
  %856 = phi i32 [ %687, %688 ], [ %848, %849 ]
  %857 = phi float [ 0.000000e+00, %688 ], [ %851, %849 ]
  %858 = load ptr, ptr %515, align 8, !tbaa !44
  %859 = zext i32 %856 to i64
  %860 = getelementptr inbounds float, ptr %858, i64 %859
  store float %857, ptr %860, align 4, !tbaa !33
  br label %861

861:                                              ; preds = %855, %849, %688
  %862 = add i32 %523, 1
  %863 = load ptr, ptr %514, align 8, !tbaa !41
  %864 = getelementptr inbounds i64, ptr %863, i64 %521
  %865 = load i64, ptr %864, align 8, !tbaa !42
  %866 = getelementptr inbounds i64, ptr %863, i64 %519
  %867 = load i64, ptr %866, align 8, !tbaa !42
  %868 = sub i64 %865, %867
  %869 = trunc i64 %868 to i32
  %870 = icmp ult i32 %862, %869
  br i1 %870, label %522, label %871

871:                                              ; preds = %861
  %872 = load i32, ptr %516, align 4, !tbaa !38
  %873 = icmp eq i32 %520, %872
  br i1 %873, label %874, label %876

874:                                              ; preds = %886, %876, %871
  %875 = phi i32 [ %520, %871 ], [ %877, %876 ], [ %872, %886 ]
  br label %517

876:                                              ; preds = %871, %886
  %877 = phi i32 [ %879, %886 ], [ %520, %871 ]
  %878 = phi i64 [ %882, %886 ], [ %865, %871 ]
  %879 = add i32 %877, 1
  %880 = zext i32 %879 to i64
  %881 = getelementptr inbounds i64, ptr %863, i64 %880
  %882 = load i64, ptr %881, align 8, !tbaa !42
  %883 = sub i64 %882, %878
  %884 = and i64 %883, 4294967295
  %885 = icmp eq i64 %884, 0
  br i1 %885, label %886, label %874

886:                                              ; preds = %876
  %887 = icmp eq i32 %879, %872
  br i1 %887, label %874, label %876, !llvm.loop !82

888:                                              ; preds = %928, %456
  %889 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %459, i64 %458
  %890 = load i32, ptr %889, align 8, !tbaa !24
  br label %891

891:                                              ; preds = %891, %888
  %892 = phi i32 [ %469, %888 ], [ %893, %891 ]
  %893 = add i32 %892, -1
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds i32, ptr %470, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !22
  %897 = icmp ugt i32 %896, %890
  br i1 %897, label %891, label %943

898:                                              ; preds = %471, %928
  %899 = phi i64 [ 0, %471 ], [ %941, %928 ]
  %900 = phi i32 [ 0, %471 ], [ %940, %928 ]
  br label %901

901:                                              ; preds = %901, %898
  %902 = phi i32 [ %469, %898 ], [ %903, %901 ]
  %903 = add i32 %902, -1
  %904 = sext i32 %903 to i64
  %905 = getelementptr inbounds i32, ptr %470, i64 %904
  %906 = load i32, ptr %905, align 4, !tbaa !22
  %907 = zext i32 %906 to i64
  %908 = icmp ult i64 %142, %907
  br i1 %908, label %901, label %909

909:                                              ; preds = %901
  %910 = sub i32 %154, %906
  %911 = zext i32 %910 to i64
  %912 = zext i32 %903 to i64
  %913 = getelementptr inbounds %"class.dealii::Vector", ptr %472, i64 %912, i32 3
  %914 = load ptr, ptr %913, align 8, !tbaa !49
  %915 = getelementptr inbounds float, ptr %914, i64 %911
  %916 = load float, ptr %915, align 4, !tbaa !33
  %917 = getelementptr inbounds %"struct.std::pair", ptr %463, i64 %899
  %918 = getelementptr inbounds %"struct.std::pair", ptr %463, i64 %899, i32 1
  %919 = load double, ptr %918, align 8, !tbaa !35
  %920 = load i32, ptr %917, align 8, !tbaa !37
  br label %921

921:                                              ; preds = %921, %909
  %922 = phi i32 [ %469, %909 ], [ %923, %921 ]
  %923 = add i32 %922, -1
  %924 = sext i32 %923 to i64
  %925 = getelementptr inbounds i32, ptr %470, i64 %924
  %926 = load i32, ptr %925, align 4, !tbaa !22
  %927 = icmp ugt i32 %926, %920
  br i1 %927, label %921, label %928

928:                                              ; preds = %921
  %929 = sub i32 %920, %926
  %930 = zext i32 %929 to i64
  %931 = zext i32 %923 to i64
  %932 = getelementptr inbounds %"class.dealii::Vector", ptr %472, i64 %931, i32 3
  %933 = load ptr, ptr %932, align 8, !tbaa !49
  %934 = getelementptr inbounds float, ptr %933, i64 %930
  %935 = fpext float %916 to double
  %936 = load float, ptr %934, align 4, !tbaa !33
  %937 = fpext float %936 to double
  %938 = tail call double @llvm.fmuladd.f64(double %935, double %919, double %937)
  %939 = fptrunc double %938 to float
  store float %939, ptr %934, align 4, !tbaa !33
  %940 = add i32 %900, 1
  %941 = zext i32 %940 to i64
  %942 = icmp eq i64 %467, %941
  br i1 %942, label %888, label %898

943:                                              ; preds = %891
  %944 = sub i32 %890, %896
  %945 = zext i32 %944 to i64
  %946 = zext i32 %893 to i64
  %947 = load ptr, ptr %120, align 8, !tbaa !68
  %948 = getelementptr inbounds %"class.dealii::Vector", ptr %947, i64 %946, i32 3
  %949 = load ptr, ptr %948, align 8, !tbaa !49
  %950 = getelementptr inbounds float, ptr %949, i64 %945
  store float 0.000000e+00, ptr %950, align 4, !tbaa !33
  br label %951

951:                                              ; preds = %256, %164, %455, %943
  %952 = add nuw nsw i64 %142, 1
  %953 = icmp eq i64 %952, %122
  br i1 %953, label %135, label %141

954:                                              ; preds = %564, %566, %715, %604, %259, %261, %304, %426, %139
  %955 = phi { ptr, i32 } [ %140, %139 ], [ %262, %261 ], [ %260, %259 ], [ %305, %304 ], [ %427, %426 ], [ %567, %566 ], [ %565, %564 ], [ %605, %604 ], [ %716, %715 ]
  %956 = icmp eq ptr %98, null
  br i1 %956, label %959, label %957

957:                                              ; preds = %690, %853, %954
  %958 = phi { ptr, i32 } [ %955, %954 ], [ %854, %853 ], [ %691, %690 ]
  tail call void @_ZdlPv(ptr noundef nonnull %98) #23
  br label %959

959:                                              ; preds = %957, %954
  %960 = phi { ptr, i32 } [ %955, %954 ], [ %958, %957 ]
  resume { ptr, i32 } %960
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIdNS_11BlockVectorIdEEEEvRNS_17BlockSparseMatrixIT_EERT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(320) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !61
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !61
  %9 = tail call noundef nonnull align 8 dereferenceable(288) ptr @_ZNK6dealii17BlockSparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(320) %1)
  %10 = load i32, ptr %7, align 8, !tbaa !61
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 3, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !227, !noalias !73
  %15 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %16 = load i32, ptr %15, align 8, !tbaa !22, !noalias !73
  %17 = zext i32 %10 to i64
  br label %18

18:                                               ; preds = %12, %76
  %19 = phi i64 [ 0, %12 ], [ %78, %76 ]
  %20 = phi double [ 0.000000e+00, %12 ], [ %77, %76 ]
  %21 = trunc i64 %19 to i32
  %22 = mul i32 %16, %21
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %14, i64 %23
  %25 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %24, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !229
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %26, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !47
  %29 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %28, i64 0, i32 2
  %30 = load i32, ptr %29, align 4, !tbaa !38
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %76, label %32

32:                                               ; preds = %18
  %33 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %26, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !50
  %35 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %28, i64 0, i32 8
  %36 = load ptr, ptr %35, align 8, !tbaa !41
  %37 = zext i32 %30 to i64
  %38 = and i64 %37, 3
  %39 = icmp ult i32 %30, 4
  br i1 %39, label %58, label %40

40:                                               ; preds = %32
  %41 = and i64 %37, 4294967292
  br label %80

42:                                               ; preds = %76, %3
  %43 = phi i64 [ 0, %3 ], [ %17, %76 ]
  %44 = phi double [ 0.000000e+00, %3 ], [ %77, %76 ]
  %45 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 1, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !58
  %47 = getelementptr inbounds i32, ptr %46, i64 %43
  %48 = load i32, ptr %47, align 4, !tbaa !22
  %49 = uitofp i32 %48 to double
  %50 = fdiv double %44, %49
  %51 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %9, i64 0, i32 5
  %52 = tail call noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %9)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %114, label %54

54:                                               ; preds = %42
  %55 = zext i32 %52 to i64
  %56 = shl nuw nsw i64 %55, 2
  %57 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %56) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %57, i8 -1, i64 %56, i1 false), !tbaa !22
  br label %114

58:                                               ; preds = %80, %32
  %59 = phi double [ undef, %32 ], [ %110, %80 ]
  %60 = phi i64 [ 0, %32 ], [ %111, %80 ]
  %61 = phi double [ %20, %32 ], [ %110, %80 ]
  %62 = icmp eq i64 %38, 0
  br i1 %62, label %76, label %63

63:                                               ; preds = %58, %63
  %64 = phi i64 [ %73, %63 ], [ %60, %58 ]
  %65 = phi double [ %72, %63 ], [ %61, %58 ]
  %66 = phi i64 [ %74, %63 ], [ 0, %58 ]
  %67 = getelementptr inbounds i64, ptr %36, i64 %64
  %68 = load i64, ptr %67, align 8, !tbaa !42
  %69 = getelementptr inbounds double, ptr %34, i64 %68
  %70 = load double, ptr %69, align 8, !tbaa !52
  %71 = tail call double @llvm.fabs.f64(double %70)
  %72 = fadd double %65, %71
  %73 = add nuw nsw i64 %64, 1
  %74 = add i64 %66, 1
  %75 = icmp eq i64 %74, %38
  br i1 %75, label %76, label %63, !llvm.loop !231

76:                                               ; preds = %58, %63, %18
  %77 = phi double [ %20, %18 ], [ %59, %58 ], [ %72, %63 ]
  %78 = add nuw nsw i64 %19, 1
  %79 = icmp eq i64 %78, %17
  br i1 %79, label %42, label %18

80:                                               ; preds = %80, %40
  %81 = phi i64 [ 0, %40 ], [ %111, %80 ]
  %82 = phi double [ %20, %40 ], [ %110, %80 ]
  %83 = phi i64 [ 0, %40 ], [ %112, %80 ]
  %84 = getelementptr inbounds i64, ptr %36, i64 %81
  %85 = load i64, ptr %84, align 8, !tbaa !42
  %86 = getelementptr inbounds double, ptr %34, i64 %85
  %87 = load double, ptr %86, align 8, !tbaa !52
  %88 = tail call double @llvm.fabs.f64(double %87)
  %89 = fadd double %82, %88
  %90 = or i64 %81, 1
  %91 = getelementptr inbounds i64, ptr %36, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !42
  %93 = getelementptr inbounds double, ptr %34, i64 %92
  %94 = load double, ptr %93, align 8, !tbaa !52
  %95 = tail call double @llvm.fabs.f64(double %94)
  %96 = fadd double %89, %95
  %97 = or i64 %81, 2
  %98 = getelementptr inbounds i64, ptr %36, i64 %97
  %99 = load i64, ptr %98, align 8, !tbaa !42
  %100 = getelementptr inbounds double, ptr %34, i64 %99
  %101 = load double, ptr %100, align 8, !tbaa !52
  %102 = tail call double @llvm.fabs.f64(double %101)
  %103 = fadd double %96, %102
  %104 = or i64 %81, 3
  %105 = getelementptr inbounds i64, ptr %36, i64 %104
  %106 = load i64, ptr %105, align 8, !tbaa !42
  %107 = getelementptr inbounds double, ptr %34, i64 %106
  %108 = load double, ptr %107, align 8, !tbaa !52
  %109 = tail call double @llvm.fabs.f64(double %108)
  %110 = fadd double %103, %109
  %111 = add nuw nsw i64 %81, 4
  %112 = add i64 %83, 4
  %113 = icmp eq i64 %112, %41
  br i1 %113, label %58, label %80

114:                                              ; preds = %54, %42
  %115 = phi ptr [ null, %42 ], [ %57, %54 ]
  %116 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %117 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %118 = load ptr, ptr %117, align 8, !tbaa !70
  %119 = load ptr, ptr %116, align 8, !tbaa !72
  %120 = ptrtoint ptr %118 to i64
  %121 = ptrtoint ptr %119 to i64
  %122 = sub i64 %120, %121
  %123 = sdiv exact i64 %122, 40
  %124 = icmp eq ptr %118, %119
  br i1 %124, label %125, label %141

125:                                              ; preds = %141, %114
  %126 = invoke noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %9)
          to label %127 unwind label %155

127:                                              ; preds = %125
  %128 = icmp eq i32 %126, 0
  br i1 %128, label %151, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %9, i64 0, i32 5, i32 1
  %131 = icmp eq i32 %8, 0
  %132 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 3, i32 0, i32 1
  %133 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %134 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 2
  %135 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 2, i32 1
  %136 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 2, i32 1
  %137 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %2, i64 0, i32 1
  %138 = zext i32 %126 to i64
  %139 = zext i32 %8 to i64
  %140 = zext i32 %8 to i64
  br label %157

141:                                              ; preds = %114, %141
  %142 = phi i64 [ %149, %141 ], [ 0, %114 ]
  %143 = phi i32 [ %148, %141 ], [ 0, %114 ]
  %144 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %119, i64 %142
  %145 = load i32, ptr %144, align 8, !tbaa !24
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i32, ptr %115, i64 %146
  store i32 %143, ptr %147, align 4, !tbaa !22
  %148 = add i32 %143, 1
  %149 = zext i32 %148 to i64
  %150 = icmp ugt i64 %123, %149
  br i1 %150, label %141, label %125

151:                                              ; preds = %955, %127
  %152 = icmp eq ptr %115, null
  br i1 %152, label %154, label %153

153:                                              ; preds = %151
  tail call void @_ZdlPv(ptr noundef nonnull %115) #23
  br label %154

154:                                              ; preds = %151, %153
  ret void

155:                                              ; preds = %125
  %156 = landingpad { ptr, i32 }
          cleanup
  br label %958

157:                                              ; preds = %129, %955
  %158 = phi i64 [ 0, %129 ], [ %956, %955 ]
  %159 = load i32, ptr %51, align 8, !tbaa !61
  %160 = load ptr, ptr %130, align 8, !tbaa !58
  br label %161

161:                                              ; preds = %161, %157
  %162 = phi i32 [ %159, %157 ], [ %163, %161 ]
  %163 = add i32 %162, -1
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i32, ptr %160, i64 %164
  %166 = load i32, ptr %165, align 4, !tbaa !22
  %167 = zext i32 %166 to i64
  %168 = icmp ult i64 %158, %167
  br i1 %168, label %161, label %169

169:                                              ; preds = %161
  %170 = trunc i64 %158 to i32
  %171 = sub i32 %170, %166
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds i32, ptr %115, i64 %158
  %174 = load i32, ptr %173, align 4, !tbaa !22
  %175 = icmp eq i32 %174, -1
  br i1 %175, label %180, label %176

176:                                              ; preds = %169
  br i1 %131, label %466, label %177

177:                                              ; preds = %176
  %178 = add i32 %171, 1
  %179 = zext i32 %178 to i64
  br label %484

180:                                              ; preds = %169
  br i1 %131, label %955, label %181

181:                                              ; preds = %180
  %182 = add i32 %171, 1
  %183 = zext i32 %182 to i64
  br label %184

184:                                              ; preds = %181, %272
  %185 = phi i64 [ 0, %181 ], [ %273, %272 ]
  %186 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !232
  %187 = load i32, ptr %133, align 8, !tbaa !22, !noalias !232
  %188 = mul i32 %187, %163
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %186, i64 %189
  %191 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %190, i64 %185
  %192 = load ptr, ptr %191, align 8, !tbaa !229
  %193 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %192, i64 0, i32 1
  %194 = load ptr, ptr %193, align 8, !tbaa !47, !noalias !235
  %195 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %194, i64 0, i32 8
  %196 = load ptr, ptr %195, align 8, !tbaa !41, !noalias !235
  %197 = getelementptr inbounds i64, ptr %196, i64 %183
  %198 = load i64, ptr %197, align 8, !tbaa !42, !noalias !235
  %199 = getelementptr inbounds i64, ptr %196, i64 %172
  %200 = load i64, ptr %199, align 8, !tbaa !42, !noalias !235
  %201 = sub i64 %198, %200
  %202 = and i64 %201, 4294967295
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %220

204:                                              ; preds = %184
  %205 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %194, i64 0, i32 2
  %206 = load i32, ptr %205, align 4, !tbaa !38, !noalias !238
  br label %207

207:                                              ; preds = %212, %204
  %208 = phi i64 [ %198, %204 ], [ %216, %212 ]
  %209 = phi i32 [ %171, %204 ], [ %210, %212 ]
  %210 = add i32 %209, 1
  %211 = icmp ult i32 %210, %206
  br i1 %211, label %212, label %220

212:                                              ; preds = %207
  %213 = add i32 %209, 2
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds i64, ptr %196, i64 %214
  %216 = load i64, ptr %215, align 8, !tbaa !42, !noalias !238
  %217 = sub i64 %216, %208
  %218 = and i64 %217, 4294967295
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %207, label %220

220:                                              ; preds = %212, %207, %184
  %221 = phi i32 [ %171, %184 ], [ %206, %207 ], [ %210, %212 ]
  %222 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %192)
          to label %223 unwind label %275

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %222, i64 0, i32 9
  %225 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %222, i64 0, i32 8
  %226 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %192, i64 0, i32 2
  %227 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %222, i64 0, i32 2
  br label %228

228:                                              ; preds = %452, %223
  %229 = phi i32 [ %221, %223 ], [ %453, %452 ]
  %230 = zext i32 %229 to i64
  %231 = add i32 %229, 1
  %232 = zext i32 %231 to i64
  br label %233

233:                                              ; preds = %228, %439
  %234 = phi i32 [ %440, %439 ], [ 0, %228 ]
  %235 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !241
  %236 = load i32, ptr %133, align 8, !tbaa !22, !noalias !241
  %237 = mul i32 %236, %163
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %235, i64 %238
  %240 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %239, i64 %185
  %241 = load ptr, ptr %240, align 8, !tbaa !229
  %242 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %241, i64 0, i32 1
  %243 = load ptr, ptr %242, align 8, !tbaa !47, !noalias !244
  %244 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %243, i64 0, i32 2
  %245 = load i32, ptr %244, align 4, !tbaa !38, !noalias !244
  %246 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %243, i64 0, i32 8
  br label %247

247:                                              ; preds = %251, %233
  %248 = phi i32 [ %171, %233 ], [ %249, %251 ]
  %249 = add i32 %248, 1
  %250 = icmp ult i32 %249, %245
  br i1 %250, label %251, label %263

251:                                              ; preds = %247
  %252 = load ptr, ptr %246, align 8, !tbaa !41, !noalias !244
  %253 = add i32 %248, 2
  %254 = zext i32 %253 to i64
  %255 = getelementptr inbounds i64, ptr %252, i64 %254
  %256 = load i64, ptr %255, align 8, !tbaa !42, !noalias !244
  %257 = zext i32 %249 to i64
  %258 = getelementptr inbounds i64, ptr %252, i64 %257
  %259 = load i64, ptr %258, align 8, !tbaa !42, !noalias !244
  %260 = sub i64 %256, %259
  %261 = and i64 %260, 4294967295
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %247, label %263

263:                                              ; preds = %247, %251
  %264 = phi i32 [ %249, %251 ], [ %245, %247 ]
  %265 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %241)
          to label %266 unwind label %277

266:                                              ; preds = %263
  %267 = icmp ne ptr %222, %265
  %268 = icmp ne i32 %229, %264
  %269 = or i1 %267, %268
  %270 = icmp ne i32 %234, 0
  %271 = or i1 %270, %269
  br i1 %271, label %279, label %272

272:                                              ; preds = %266
  %273 = add nuw nsw i64 %185, 1
  %274 = icmp eq i64 %273, %140
  br i1 %274, label %955, label %184

275:                                              ; preds = %220
  %276 = landingpad { ptr, i32 }
          cleanup
  br label %958

277:                                              ; preds = %263
  %278 = landingpad { ptr, i32 }
          cleanup
  br label %958

279:                                              ; preds = %266
  %280 = load ptr, ptr %224, align 8, !tbaa !43
  %281 = load ptr, ptr %225, align 8, !tbaa !41
  %282 = getelementptr inbounds i64, ptr %281, i64 %230
  %283 = load i64, ptr %282, align 8, !tbaa !42
  %284 = zext i32 %234 to i64
  %285 = add i64 %283, %284
  %286 = getelementptr inbounds i32, ptr %280, i64 %285
  %287 = load i32, ptr %286, align 4, !tbaa !22
  %288 = load ptr, ptr %130, align 8, !tbaa !58
  %289 = getelementptr inbounds i32, ptr %288, i64 %185
  %290 = load i32, ptr %289, align 4, !tbaa !22
  %291 = add i32 %290, %287
  %292 = zext i32 %291 to i64
  %293 = getelementptr inbounds i32, ptr %115, i64 %292
  %294 = load i32, ptr %293, align 4, !tbaa !22
  %295 = icmp eq i32 %294, -1
  br i1 %295, label %439, label %296

296:                                              ; preds = %279
  %297 = load ptr, ptr %226, align 8, !tbaa !50
  %298 = load ptr, ptr %193, align 8, !tbaa !47
  %299 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %298, i64 0, i32 8
  %300 = load ptr, ptr %299, align 8, !tbaa !41
  %301 = getelementptr inbounds i64, ptr %300, i64 %230
  %302 = load i64, ptr %301, align 8, !tbaa !42
  %303 = add i64 %302, %284
  %304 = getelementptr inbounds double, ptr %297, i64 %303
  %305 = load double, ptr %304, align 8, !tbaa !52
  %306 = zext i32 %294 to i64
  %307 = load ptr, ptr %116, align 8, !tbaa !72
  %308 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %307, i64 %306, i32 1
  %309 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %308, i64 0, i32 1
  %310 = load ptr, ptr %309, align 8, !tbaa !31
  %311 = load ptr, ptr %308, align 8, !tbaa !32
  %312 = icmp eq ptr %310, %311
  br i1 %312, label %315, label %321

313:                                              ; preds = %375
  %314 = load ptr, ptr %193, align 8, !tbaa !47
  br label %315

315:                                              ; preds = %313, %296
  %316 = phi ptr [ %298, %296 ], [ %314, %313 ]
  %317 = phi i64 [ %306, %296 ], [ %379, %313 ]
  %318 = phi ptr [ %307, %296 ], [ %380, %313 ]
  br i1 %6, label %422, label %390

319:                                              ; preds = %352
  %320 = landingpad { ptr, i32 }
          cleanup
  br label %958

321:                                              ; preds = %296, %375
  %322 = phi ptr [ %384, %375 ], [ %311, %296 ]
  %323 = phi i64 [ %377, %375 ], [ 0, %296 ]
  %324 = phi i32 [ %376, %375 ], [ 0, %296 ]
  %325 = getelementptr inbounds %"struct.std::pair", ptr %322, i64 %323
  %326 = load i32, ptr %325, align 8, !tbaa !37
  %327 = getelementptr inbounds %"struct.std::pair", ptr %322, i64 %323, i32 1
  %328 = load double, ptr %327, align 8, !tbaa !35
  %329 = fmul double %305, %328
  %330 = fcmp oeq double %329, 0.000000e+00
  br i1 %330, label %375, label %331

331:                                              ; preds = %321
  %332 = load i32, ptr %7, align 8, !tbaa !61
  %333 = load ptr, ptr %45, align 8, !tbaa !58
  br label %334

334:                                              ; preds = %334, %331
  %335 = phi i32 [ %332, %331 ], [ %336, %334 ]
  %336 = add i32 %335, -1
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds i32, ptr %333, i64 %337
  %339 = load i32, ptr %338, align 4, !tbaa !22
  %340 = zext i32 %339 to i64
  %341 = icmp ult i64 %158, %340
  br i1 %341, label %334, label %342

342:                                              ; preds = %334
  %343 = load i32, ptr %134, align 8, !tbaa !61
  %344 = load ptr, ptr %135, align 8, !tbaa !58
  br label %345

345:                                              ; preds = %345, %342
  %346 = phi i32 [ %343, %342 ], [ %347, %345 ]
  %347 = add i32 %346, -1
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i32, ptr %344, i64 %348
  %350 = load i32, ptr %349, align 4, !tbaa !22
  %351 = icmp ugt i32 %350, %326
  br i1 %351, label %345, label %352

352:                                              ; preds = %345
  %353 = sub i32 %170, %339
  %354 = sub i32 %326, %350
  %355 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !247
  %356 = load i32, ptr %133, align 8, !tbaa !22, !noalias !247
  %357 = mul i32 %356, %336
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %355, i64 %358
  %360 = zext i32 %347 to i64
  %361 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %359, i64 %360
  %362 = load ptr, ptr %361, align 8, !tbaa !229
  %363 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %362, i64 0, i32 1
  %364 = load ptr, ptr %363, align 8, !tbaa !47
  %365 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %364, i32 noundef %353, i32 noundef %354)
          to label %366 unwind label %319

366:                                              ; preds = %352
  %367 = icmp eq i32 %365, -1
  br i1 %367, label %375, label %368

368:                                              ; preds = %366
  %369 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %362, i64 0, i32 2
  %370 = load ptr, ptr %369, align 8, !tbaa !50
  %371 = zext i32 %365 to i64
  %372 = getelementptr inbounds double, ptr %370, i64 %371
  %373 = load double, ptr %372, align 8, !tbaa !52
  %374 = fadd double %329, %373
  store double %374, ptr %372, align 8, !tbaa !52
  br label %375

375:                                              ; preds = %368, %366, %321
  %376 = add i32 %324, 1
  %377 = zext i32 %376 to i64
  %378 = load i32, ptr %293, align 4, !tbaa !22
  %379 = zext i32 %378 to i64
  %380 = load ptr, ptr %116, align 8, !tbaa !72
  %381 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %380, i64 %379, i32 1
  %382 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %381, i64 0, i32 1
  %383 = load ptr, ptr %382, align 8, !tbaa !31
  %384 = load ptr, ptr %381, align 8, !tbaa !32
  %385 = ptrtoint ptr %383 to i64
  %386 = ptrtoint ptr %384 to i64
  %387 = sub i64 %385, %386
  %388 = ashr exact i64 %387, 4
  %389 = icmp eq i64 %388, %377
  br i1 %389, label %313, label %321

390:                                              ; preds = %315
  %391 = load ptr, ptr %226, align 8, !tbaa !50
  %392 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %316, i64 0, i32 8
  %393 = load ptr, ptr %392, align 8, !tbaa !41
  %394 = getelementptr inbounds i64, ptr %393, i64 %230
  %395 = load i64, ptr %394, align 8, !tbaa !42
  %396 = add i64 %395, %284
  %397 = getelementptr inbounds double, ptr %391, i64 %396
  %398 = load double, ptr %397, align 8, !tbaa !52
  %399 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %318, i64 %317, i32 2
  %400 = load double, ptr %399, align 8, !tbaa !48
  %401 = load i32, ptr %4, align 8, !tbaa !61
  %402 = load ptr, ptr %136, align 8, !tbaa !58
  br label %403

403:                                              ; preds = %403, %390
  %404 = phi i32 [ %401, %390 ], [ %405, %403 ]
  %405 = add i32 %404, -1
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds i32, ptr %402, i64 %406
  %408 = load i32, ptr %407, align 4, !tbaa !22
  %409 = zext i32 %408 to i64
  %410 = icmp ult i64 %158, %409
  br i1 %410, label %403, label %411

411:                                              ; preds = %403
  %412 = sub i32 %170, %408
  %413 = zext i32 %412 to i64
  %414 = zext i32 %405 to i64
  %415 = load ptr, ptr %137, align 8, !tbaa !66
  %416 = getelementptr inbounds %"class.dealii::Vector.35", ptr %415, i64 %414, i32 3
  %417 = load ptr, ptr %416, align 8, !tbaa !60
  %418 = getelementptr inbounds double, ptr %417, i64 %413
  %419 = load double, ptr %418, align 8, !tbaa !52
  %420 = fneg double %398
  %421 = tail call double @llvm.fmuladd.f64(double %420, double %400, double %419)
  store double %421, ptr %418, align 8, !tbaa !52
  br label %422

422:                                              ; preds = %315, %411
  %423 = load ptr, ptr %224, align 8, !tbaa !43
  %424 = load ptr, ptr %225, align 8, !tbaa !41
  %425 = getelementptr inbounds i64, ptr %424, i64 %230
  %426 = load i64, ptr %425, align 8, !tbaa !42
  %427 = add i64 %426, %284
  %428 = getelementptr inbounds i32, ptr %423, i64 %427
  %429 = load i32, ptr %428, align 4, !tbaa !22
  %430 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %316, i32 noundef %229, i32 noundef %429)
          to label %431 unwind label %437

431:                                              ; preds = %422
  %432 = icmp eq i32 %430, -1
  br i1 %432, label %439, label %433

433:                                              ; preds = %431
  %434 = load ptr, ptr %226, align 8, !tbaa !50
  %435 = zext i32 %430 to i64
  %436 = getelementptr inbounds double, ptr %434, i64 %435
  store double 0.000000e+00, ptr %436, align 8, !tbaa !52
  br label %439

437:                                              ; preds = %422
  %438 = landingpad { ptr, i32 }
          cleanup
  br label %958

439:                                              ; preds = %431, %433, %279
  %440 = add i32 %234, 1
  %441 = load ptr, ptr %225, align 8, !tbaa !41
  %442 = getelementptr inbounds i64, ptr %441, i64 %232
  %443 = load i64, ptr %442, align 8, !tbaa !42
  %444 = getelementptr inbounds i64, ptr %441, i64 %230
  %445 = load i64, ptr %444, align 8, !tbaa !42
  %446 = sub i64 %443, %445
  %447 = trunc i64 %446 to i32
  %448 = icmp ult i32 %440, %447
  br i1 %448, label %233, label %449

449:                                              ; preds = %439
  %450 = load i32, ptr %227, align 4, !tbaa !38
  %451 = icmp eq i32 %231, %450
  br i1 %451, label %452, label %454

452:                                              ; preds = %464, %454, %449
  %453 = phi i32 [ %231, %449 ], [ %455, %454 ], [ %450, %464 ]
  br label %228

454:                                              ; preds = %449, %464
  %455 = phi i32 [ %457, %464 ], [ %231, %449 ]
  %456 = phi i64 [ %460, %464 ], [ %443, %449 ]
  %457 = add i32 %455, 1
  %458 = zext i32 %457 to i64
  %459 = getelementptr inbounds i64, ptr %441, i64 %458
  %460 = load i64, ptr %459, align 8, !tbaa !42
  %461 = sub i64 %460, %456
  %462 = and i64 %461, 4294967295
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %464, label %452

464:                                              ; preds = %454
  %465 = icmp eq i32 %457, %450
  br i1 %465, label %452, label %454, !llvm.loop !82

466:                                              ; preds = %572, %176
  br i1 %6, label %955, label %467

467:                                              ; preds = %466
  %468 = load i32, ptr %173, align 4, !tbaa !22
  %469 = zext i32 %468 to i64
  %470 = load ptr, ptr %116, align 8, !tbaa !72
  %471 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %470, i64 %469, i32 1
  %472 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %471, i64 0, i32 1
  %473 = load ptr, ptr %472, align 8, !tbaa !31
  %474 = load ptr, ptr %471, align 8, !tbaa !32
  %475 = ptrtoint ptr %473 to i64
  %476 = ptrtoint ptr %474 to i64
  %477 = sub i64 %475, %476
  %478 = ashr exact i64 %477, 4
  %479 = icmp eq ptr %473, %474
  %480 = load i32, ptr %4, align 8, !tbaa !61
  %481 = load ptr, ptr %136, align 8, !tbaa !58
  br i1 %479, label %895, label %482

482:                                              ; preds = %467
  %483 = load ptr, ptr %137, align 8, !tbaa !66
  br label %905

484:                                              ; preds = %177, %572
  %485 = phi i64 [ 0, %177 ], [ %573, %572 ]
  %486 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !250
  %487 = load i32, ptr %133, align 8, !tbaa !22, !noalias !250
  %488 = mul i32 %487, %163
  %489 = zext i32 %488 to i64
  %490 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %486, i64 %489
  %491 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %490, i64 %485
  %492 = load ptr, ptr %491, align 8, !tbaa !229
  %493 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %492, i64 0, i32 1
  %494 = load ptr, ptr %493, align 8, !tbaa !47, !noalias !253
  %495 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %494, i64 0, i32 8
  %496 = load ptr, ptr %495, align 8, !tbaa !41, !noalias !253
  %497 = getelementptr inbounds i64, ptr %496, i64 %179
  %498 = load i64, ptr %497, align 8, !tbaa !42, !noalias !253
  %499 = getelementptr inbounds i64, ptr %496, i64 %172
  %500 = load i64, ptr %499, align 8, !tbaa !42, !noalias !253
  %501 = sub i64 %498, %500
  %502 = and i64 %501, 4294967295
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %520

504:                                              ; preds = %484
  %505 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %494, i64 0, i32 2
  %506 = load i32, ptr %505, align 4, !tbaa !38, !noalias !256
  br label %507

507:                                              ; preds = %512, %504
  %508 = phi i64 [ %498, %504 ], [ %516, %512 ]
  %509 = phi i32 [ %171, %504 ], [ %510, %512 ]
  %510 = add i32 %509, 1
  %511 = icmp ult i32 %510, %506
  br i1 %511, label %512, label %520

512:                                              ; preds = %507
  %513 = add i32 %509, 2
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds i64, ptr %496, i64 %514
  %516 = load i64, ptr %515, align 8, !tbaa !42, !noalias !256
  %517 = sub i64 %516, %508
  %518 = and i64 %517, 4294967295
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %507, label %520

520:                                              ; preds = %512, %507, %484
  %521 = phi i32 [ %171, %484 ], [ %506, %507 ], [ %510, %512 ]
  %522 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %492)
          to label %523 unwind label %575

523:                                              ; preds = %520
  %524 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %522, i64 0, i32 9
  %525 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %522, i64 0, i32 8
  %526 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %492, i64 0, i32 2
  %527 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %522, i64 0, i32 2
  br label %528

528:                                              ; preds = %881, %523
  %529 = phi i32 [ %521, %523 ], [ %882, %881 ]
  %530 = zext i32 %529 to i64
  %531 = add i32 %529, 1
  %532 = zext i32 %531 to i64
  br label %533

533:                                              ; preds = %528, %868
  %534 = phi i32 [ %869, %868 ], [ 0, %528 ]
  %535 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !259
  %536 = load i32, ptr %133, align 8, !tbaa !22, !noalias !259
  %537 = mul i32 %536, %163
  %538 = zext i32 %537 to i64
  %539 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %535, i64 %538
  %540 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %539, i64 %485
  %541 = load ptr, ptr %540, align 8, !tbaa !229
  %542 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %541, i64 0, i32 1
  %543 = load ptr, ptr %542, align 8, !tbaa !47, !noalias !262
  %544 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %543, i64 0, i32 2
  %545 = load i32, ptr %544, align 4, !tbaa !38, !noalias !262
  %546 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %543, i64 0, i32 8
  br label %547

547:                                              ; preds = %551, %533
  %548 = phi i32 [ %171, %533 ], [ %549, %551 ]
  %549 = add i32 %548, 1
  %550 = icmp ult i32 %549, %545
  br i1 %550, label %551, label %563

551:                                              ; preds = %547
  %552 = load ptr, ptr %546, align 8, !tbaa !41, !noalias !262
  %553 = add i32 %548, 2
  %554 = zext i32 %553 to i64
  %555 = getelementptr inbounds i64, ptr %552, i64 %554
  %556 = load i64, ptr %555, align 8, !tbaa !42, !noalias !262
  %557 = zext i32 %549 to i64
  %558 = getelementptr inbounds i64, ptr %552, i64 %557
  %559 = load i64, ptr %558, align 8, !tbaa !42, !noalias !262
  %560 = sub i64 %556, %559
  %561 = and i64 %560, 4294967295
  %562 = icmp eq i64 %561, 0
  br i1 %562, label %547, label %563

563:                                              ; preds = %547, %551
  %564 = phi i32 [ %549, %551 ], [ %545, %547 ]
  %565 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %541)
          to label %566 unwind label %577

566:                                              ; preds = %563
  %567 = icmp ne ptr %522, %565
  %568 = icmp ne i32 %529, %564
  %569 = or i1 %567, %568
  %570 = icmp ne i32 %534, 0
  %571 = or i1 %570, %569
  br i1 %571, label %579, label %572

572:                                              ; preds = %566
  %573 = add nuw nsw i64 %485, 1
  %574 = icmp eq i64 %573, %139
  br i1 %574, label %466, label %484

575:                                              ; preds = %520
  %576 = landingpad { ptr, i32 }
          cleanup
  br label %958

577:                                              ; preds = %563
  %578 = landingpad { ptr, i32 }
          cleanup
  br label %958

579:                                              ; preds = %566
  %580 = load ptr, ptr %524, align 8, !tbaa !43
  %581 = load ptr, ptr %525, align 8, !tbaa !41
  %582 = getelementptr inbounds i64, ptr %581, i64 %530
  %583 = load i64, ptr %582, align 8, !tbaa !42
  %584 = zext i32 %534 to i64
  %585 = add i64 %583, %584
  %586 = getelementptr inbounds i32, ptr %580, i64 %585
  %587 = load i32, ptr %586, align 4, !tbaa !22
  %588 = load ptr, ptr %130, align 8, !tbaa !58
  %589 = getelementptr inbounds i32, ptr %588, i64 %485
  %590 = load i32, ptr %589, align 4, !tbaa !22
  %591 = add i32 %590, %587
  %592 = zext i32 %591 to i64
  %593 = getelementptr inbounds i32, ptr %115, i64 %592
  %594 = load i32, ptr %593, align 4, !tbaa !22
  %595 = icmp eq i32 %594, -1
  %596 = load ptr, ptr %526, align 8, !tbaa !50
  %597 = load ptr, ptr %493, align 8, !tbaa !47
  %598 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %597, i64 0, i32 8
  %599 = load ptr, ptr %598, align 8, !tbaa !41
  %600 = getelementptr inbounds i64, ptr %599, i64 %530
  %601 = load i64, ptr %600, align 8, !tbaa !42
  %602 = add i64 %601, %584
  %603 = getelementptr inbounds double, ptr %596, i64 %602
  %604 = load double, ptr %603, align 8, !tbaa !52
  %605 = load i32, ptr %173, align 4, !tbaa !22
  %606 = zext i32 %605 to i64
  %607 = load ptr, ptr %116, align 8, !tbaa !72
  %608 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %607, i64 %606, i32 1
  %609 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %608, i64 0, i32 1
  %610 = load ptr, ptr %609, align 8, !tbaa !31
  %611 = load ptr, ptr %608, align 8, !tbaa !32
  %612 = icmp eq ptr %610, %611
  br i1 %595, label %613, label %701

613:                                              ; preds = %579
  br i1 %612, label %693, label %616

614:                                              ; preds = %646
  %615 = landingpad { ptr, i32 }
          cleanup
  br label %958

616:                                              ; preds = %613, %669
  %617 = phi ptr [ %678, %669 ], [ %611, %613 ]
  %618 = phi i64 [ %671, %669 ], [ 0, %613 ]
  %619 = phi i32 [ %670, %669 ], [ 0, %613 ]
  %620 = getelementptr inbounds %"struct.std::pair", ptr %617, i64 %618
  %621 = load i32, ptr %620, align 8, !tbaa !37
  %622 = getelementptr inbounds %"struct.std::pair", ptr %617, i64 %618, i32 1
  %623 = load double, ptr %622, align 8, !tbaa !35
  %624 = fmul double %604, %623
  %625 = fcmp oeq double %624, 0.000000e+00
  br i1 %625, label %669, label %626

626:                                              ; preds = %616
  %627 = load i32, ptr %7, align 8, !tbaa !61
  %628 = load ptr, ptr %45, align 8, !tbaa !58
  br label %629

629:                                              ; preds = %629, %626
  %630 = phi i32 [ %627, %626 ], [ %631, %629 ]
  %631 = add i32 %630, -1
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds i32, ptr %628, i64 %632
  %634 = load i32, ptr %633, align 4, !tbaa !22
  %635 = icmp ugt i32 %634, %621
  br i1 %635, label %629, label %636

636:                                              ; preds = %629
  %637 = load i32, ptr %134, align 8, !tbaa !61
  %638 = load ptr, ptr %135, align 8, !tbaa !58
  br label %639

639:                                              ; preds = %639, %636
  %640 = phi i32 [ %637, %636 ], [ %641, %639 ]
  %641 = add i32 %640, -1
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds i32, ptr %638, i64 %642
  %644 = load i32, ptr %643, align 4, !tbaa !22
  %645 = icmp ugt i32 %644, %591
  br i1 %645, label %639, label %646

646:                                              ; preds = %639
  %647 = sub i32 %621, %634
  %648 = sub i32 %591, %644
  %649 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !265
  %650 = load i32, ptr %133, align 8, !tbaa !22, !noalias !265
  %651 = mul i32 %650, %631
  %652 = zext i32 %651 to i64
  %653 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %649, i64 %652
  %654 = zext i32 %641 to i64
  %655 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %653, i64 %654
  %656 = load ptr, ptr %655, align 8, !tbaa !229
  %657 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %656, i64 0, i32 1
  %658 = load ptr, ptr %657, align 8, !tbaa !47
  %659 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %658, i32 noundef %647, i32 noundef %648)
          to label %660 unwind label %614

660:                                              ; preds = %646
  %661 = icmp eq i32 %659, -1
  br i1 %661, label %669, label %662

662:                                              ; preds = %660
  %663 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %656, i64 0, i32 2
  %664 = load ptr, ptr %663, align 8, !tbaa !50
  %665 = zext i32 %659 to i64
  %666 = getelementptr inbounds double, ptr %664, i64 %665
  %667 = load double, ptr %666, align 8, !tbaa !52
  %668 = fadd double %624, %667
  store double %668, ptr %666, align 8, !tbaa !52
  br label %669

669:                                              ; preds = %662, %660, %616
  %670 = add i32 %619, 1
  %671 = zext i32 %670 to i64
  %672 = load i32, ptr %173, align 4, !tbaa !22
  %673 = zext i32 %672 to i64
  %674 = load ptr, ptr %116, align 8, !tbaa !72
  %675 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %674, i64 %673, i32 1
  %676 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %675, i64 0, i32 1
  %677 = load ptr, ptr %676, align 8, !tbaa !31
  %678 = load ptr, ptr %675, align 8, !tbaa !32
  %679 = ptrtoint ptr %677 to i64
  %680 = ptrtoint ptr %678 to i64
  %681 = sub i64 %679, %680
  %682 = ashr exact i64 %681, 4
  %683 = icmp eq i64 %682, %671
  br i1 %683, label %684, label %616

684:                                              ; preds = %669
  %685 = load ptr, ptr %524, align 8, !tbaa !43
  %686 = load ptr, ptr %525, align 8, !tbaa !41
  %687 = getelementptr inbounds i64, ptr %686, i64 %530
  %688 = load i64, ptr %687, align 8, !tbaa !42
  %689 = load ptr, ptr %493, align 8, !tbaa !47
  %690 = add i64 %688, %584
  %691 = getelementptr inbounds i32, ptr %685, i64 %690
  %692 = load i32, ptr %691, align 4, !tbaa !22
  br label %693

693:                                              ; preds = %684, %613
  %694 = phi i32 [ %692, %684 ], [ %587, %613 ]
  %695 = phi ptr [ %689, %684 ], [ %597, %613 ]
  %696 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %695, i32 noundef %529, i32 noundef %694)
          to label %697 unwind label %699

697:                                              ; preds = %693
  %698 = icmp eq i32 %696, -1
  br i1 %698, label %868, label %862

699:                                              ; preds = %693
  %700 = landingpad { ptr, i32 }
          cleanup
  br label %961

701:                                              ; preds = %579
  br i1 %612, label %852, label %702

702:                                              ; preds = %701
  %703 = fneg double %604
  br label %704

704:                                              ; preds = %702, %833
  %705 = phi i32 [ %605, %702 ], [ %719, %833 ]
  %706 = phi ptr [ %607, %702 ], [ %720, %833 ]
  %707 = phi i32 [ %594, %702 ], [ %721, %833 ]
  %708 = phi i64 [ 0, %702 ], [ %835, %833 ]
  %709 = phi i32 [ 0, %702 ], [ %834, %833 ]
  %710 = zext i32 %707 to i64
  %711 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %706, i64 %710, i32 1
  %712 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %711, i64 0, i32 1
  %713 = load ptr, ptr %712, align 8, !tbaa !31
  %714 = load ptr, ptr %711, align 8, !tbaa !32
  %715 = icmp eq ptr %713, %714
  br i1 %715, label %718, label %728

716:                                              ; preds = %791
  %717 = load i32, ptr %173, align 4, !tbaa !22
  br label %718

718:                                              ; preds = %716, %704
  %719 = phi i32 [ %705, %704 ], [ %717, %716 ]
  %720 = phi ptr [ %706, %704 ], [ %796, %716 ]
  %721 = phi i32 [ %707, %704 ], [ %794, %716 ]
  %722 = phi i64 [ %710, %704 ], [ %795, %716 ]
  %723 = zext i32 %719 to i64
  %724 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %720, i64 %723, i32 1
  %725 = load ptr, ptr %724, align 8, !tbaa !32
  br i1 %6, label %833, label %806

726:                                              ; preds = %768
  %727 = landingpad { ptr, i32 }
          cleanup
  br label %958

728:                                              ; preds = %704, %791
  %729 = phi ptr [ %800, %791 ], [ %714, %704 ]
  %730 = phi ptr [ %796, %791 ], [ %706, %704 ]
  %731 = phi i64 [ %793, %791 ], [ 0, %704 ]
  %732 = phi i32 [ %792, %791 ], [ 0, %704 ]
  %733 = load i32, ptr %173, align 4, !tbaa !22
  %734 = zext i32 %733 to i64
  %735 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %730, i64 %734, i32 1
  %736 = load ptr, ptr %735, align 8, !tbaa !32
  %737 = getelementptr inbounds %"struct.std::pair", ptr %736, i64 %708
  %738 = load i32, ptr %737, align 8, !tbaa !37
  %739 = getelementptr inbounds %"struct.std::pair", ptr %729, i64 %731
  %740 = load i32, ptr %739, align 8, !tbaa !37
  %741 = getelementptr inbounds %"struct.std::pair", ptr %736, i64 %708, i32 1
  %742 = load double, ptr %741, align 8, !tbaa !35
  %743 = fmul double %604, %742
  %744 = getelementptr inbounds %"struct.std::pair", ptr %729, i64 %731, i32 1
  %745 = load double, ptr %744, align 8, !tbaa !35
  %746 = fmul double %743, %745
  %747 = fcmp oeq double %746, 0.000000e+00
  br i1 %747, label %791, label %748

748:                                              ; preds = %728
  %749 = load i32, ptr %7, align 8, !tbaa !61
  %750 = load ptr, ptr %45, align 8, !tbaa !58
  br label %751

751:                                              ; preds = %751, %748
  %752 = phi i32 [ %749, %748 ], [ %753, %751 ]
  %753 = add i32 %752, -1
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds i32, ptr %750, i64 %754
  %756 = load i32, ptr %755, align 4, !tbaa !22
  %757 = icmp ugt i32 %756, %738
  br i1 %757, label %751, label %758

758:                                              ; preds = %751
  %759 = load i32, ptr %134, align 8, !tbaa !61
  %760 = load ptr, ptr %135, align 8, !tbaa !58
  br label %761

761:                                              ; preds = %761, %758
  %762 = phi i32 [ %759, %758 ], [ %763, %761 ]
  %763 = add i32 %762, -1
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds i32, ptr %760, i64 %764
  %766 = load i32, ptr %765, align 4, !tbaa !22
  %767 = icmp ugt i32 %766, %740
  br i1 %767, label %761, label %768

768:                                              ; preds = %761
  %769 = sub i32 %738, %756
  %770 = sub i32 %740, %766
  %771 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !268
  %772 = load i32, ptr %133, align 8, !tbaa !22, !noalias !268
  %773 = mul i32 %772, %753
  %774 = zext i32 %773 to i64
  %775 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %771, i64 %774
  %776 = zext i32 %763 to i64
  %777 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %775, i64 %776
  %778 = load ptr, ptr %777, align 8, !tbaa !229
  %779 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %778, i64 0, i32 1
  %780 = load ptr, ptr %779, align 8, !tbaa !47
  %781 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %780, i32 noundef %769, i32 noundef %770)
          to label %782 unwind label %726

782:                                              ; preds = %768
  %783 = icmp eq i32 %781, -1
  br i1 %783, label %791, label %784

784:                                              ; preds = %782
  %785 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %778, i64 0, i32 2
  %786 = load ptr, ptr %785, align 8, !tbaa !50
  %787 = zext i32 %781 to i64
  %788 = getelementptr inbounds double, ptr %786, i64 %787
  %789 = load double, ptr %788, align 8, !tbaa !52
  %790 = fadd double %746, %789
  store double %790, ptr %788, align 8, !tbaa !52
  br label %791

791:                                              ; preds = %784, %782, %728
  %792 = add i32 %732, 1
  %793 = zext i32 %792 to i64
  %794 = load i32, ptr %593, align 4, !tbaa !22
  %795 = zext i32 %794 to i64
  %796 = load ptr, ptr %116, align 8, !tbaa !72
  %797 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %796, i64 %795, i32 1
  %798 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %797, i64 0, i32 1
  %799 = load ptr, ptr %798, align 8, !tbaa !31
  %800 = load ptr, ptr %797, align 8, !tbaa !32
  %801 = ptrtoint ptr %799 to i64
  %802 = ptrtoint ptr %800 to i64
  %803 = sub i64 %801, %802
  %804 = ashr exact i64 %803, 4
  %805 = icmp eq i64 %804, %793
  br i1 %805, label %716, label %728

806:                                              ; preds = %718
  %807 = getelementptr inbounds %"struct.std::pair", ptr %725, i64 %708
  %808 = getelementptr inbounds %"struct.std::pair", ptr %725, i64 %708, i32 1
  %809 = load double, ptr %808, align 8, !tbaa !35
  %810 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %720, i64 %722, i32 2
  %811 = load double, ptr %810, align 8, !tbaa !48
  %812 = load i32, ptr %807, align 8, !tbaa !37
  %813 = load i32, ptr %4, align 8, !tbaa !61
  %814 = load ptr, ptr %136, align 8, !tbaa !58
  br label %815

815:                                              ; preds = %815, %806
  %816 = phi i32 [ %813, %806 ], [ %817, %815 ]
  %817 = add i32 %816, -1
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds i32, ptr %814, i64 %818
  %820 = load i32, ptr %819, align 4, !tbaa !22
  %821 = icmp ugt i32 %820, %812
  br i1 %821, label %815, label %822

822:                                              ; preds = %815
  %823 = sub i32 %812, %820
  %824 = zext i32 %823 to i64
  %825 = zext i32 %817 to i64
  %826 = load ptr, ptr %137, align 8, !tbaa !66
  %827 = getelementptr inbounds %"class.dealii::Vector.35", ptr %826, i64 %825, i32 3
  %828 = load ptr, ptr %827, align 8, !tbaa !60
  %829 = getelementptr inbounds double, ptr %828, i64 %824
  %830 = load double, ptr %829, align 8, !tbaa !52
  %831 = fmul double %809, %703
  %832 = tail call double @llvm.fmuladd.f64(double %831, double %811, double %830)
  store double %832, ptr %829, align 8, !tbaa !52
  br label %833

833:                                              ; preds = %718, %822
  %834 = add i32 %709, 1
  %835 = zext i32 %834 to i64
  %836 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %720, i64 %723, i32 1, i32 0, i32 0, i32 0, i32 1
  %837 = load ptr, ptr %836, align 8, !tbaa !31
  %838 = ptrtoint ptr %837 to i64
  %839 = ptrtoint ptr %725 to i64
  %840 = sub i64 %838, %839
  %841 = ashr exact i64 %840, 4
  %842 = icmp eq i64 %841, %835
  br i1 %842, label %843, label %704

843:                                              ; preds = %833
  %844 = load ptr, ptr %524, align 8, !tbaa !43
  %845 = load ptr, ptr %525, align 8, !tbaa !41
  %846 = getelementptr inbounds i64, ptr %845, i64 %530
  %847 = load i64, ptr %846, align 8, !tbaa !42
  %848 = load ptr, ptr %493, align 8, !tbaa !47
  %849 = add i64 %847, %584
  %850 = getelementptr inbounds i32, ptr %844, i64 %849
  %851 = load i32, ptr %850, align 4, !tbaa !22
  br label %852

852:                                              ; preds = %843, %701
  %853 = phi i32 [ %851, %843 ], [ %587, %701 ]
  %854 = phi ptr [ %848, %843 ], [ %597, %701 ]
  %855 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %854, i32 noundef %529, i32 noundef %853)
          to label %856 unwind label %860

856:                                              ; preds = %852
  %857 = icmp eq i64 %158, %592
  %858 = select i1 %857, double %50, double 0.000000e+00
  %859 = icmp eq i32 %855, -1
  br i1 %859, label %868, label %862

860:                                              ; preds = %852
  %861 = landingpad { ptr, i32 }
          cleanup
  br label %961

862:                                              ; preds = %856, %697
  %863 = phi i32 [ %696, %697 ], [ %855, %856 ]
  %864 = phi double [ 0.000000e+00, %697 ], [ %858, %856 ]
  %865 = load ptr, ptr %526, align 8, !tbaa !50
  %866 = zext i32 %863 to i64
  %867 = getelementptr inbounds double, ptr %865, i64 %866
  store double %864, ptr %867, align 8, !tbaa !52
  br label %868

868:                                              ; preds = %862, %856, %697
  %869 = add i32 %534, 1
  %870 = load ptr, ptr %525, align 8, !tbaa !41
  %871 = getelementptr inbounds i64, ptr %870, i64 %532
  %872 = load i64, ptr %871, align 8, !tbaa !42
  %873 = getelementptr inbounds i64, ptr %870, i64 %530
  %874 = load i64, ptr %873, align 8, !tbaa !42
  %875 = sub i64 %872, %874
  %876 = trunc i64 %875 to i32
  %877 = icmp ult i32 %869, %876
  br i1 %877, label %533, label %878

878:                                              ; preds = %868
  %879 = load i32, ptr %527, align 4, !tbaa !38
  %880 = icmp eq i32 %531, %879
  br i1 %880, label %881, label %883

881:                                              ; preds = %893, %883, %878
  %882 = phi i32 [ %531, %878 ], [ %884, %883 ], [ %879, %893 ]
  br label %528

883:                                              ; preds = %878, %893
  %884 = phi i32 [ %886, %893 ], [ %531, %878 ]
  %885 = phi i64 [ %889, %893 ], [ %872, %878 ]
  %886 = add i32 %884, 1
  %887 = zext i32 %886 to i64
  %888 = getelementptr inbounds i64, ptr %870, i64 %887
  %889 = load i64, ptr %888, align 8, !tbaa !42
  %890 = sub i64 %889, %885
  %891 = and i64 %890, 4294967295
  %892 = icmp eq i64 %891, 0
  br i1 %892, label %893, label %881

893:                                              ; preds = %883
  %894 = icmp eq i32 %886, %879
  br i1 %894, label %881, label %883, !llvm.loop !82

895:                                              ; preds = %935, %467
  %896 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %470, i64 %469
  %897 = load i32, ptr %896, align 8, !tbaa !24
  br label %898

898:                                              ; preds = %898, %895
  %899 = phi i32 [ %480, %895 ], [ %900, %898 ]
  %900 = add i32 %899, -1
  %901 = sext i32 %900 to i64
  %902 = getelementptr inbounds i32, ptr %481, i64 %901
  %903 = load i32, ptr %902, align 4, !tbaa !22
  %904 = icmp ugt i32 %903, %897
  br i1 %904, label %898, label %947

905:                                              ; preds = %482, %935
  %906 = phi i64 [ 0, %482 ], [ %945, %935 ]
  %907 = phi i32 [ 0, %482 ], [ %944, %935 ]
  br label %908

908:                                              ; preds = %908, %905
  %909 = phi i32 [ %480, %905 ], [ %910, %908 ]
  %910 = add i32 %909, -1
  %911 = sext i32 %910 to i64
  %912 = getelementptr inbounds i32, ptr %481, i64 %911
  %913 = load i32, ptr %912, align 4, !tbaa !22
  %914 = zext i32 %913 to i64
  %915 = icmp ult i64 %158, %914
  br i1 %915, label %908, label %916

916:                                              ; preds = %908
  %917 = sub i32 %170, %913
  %918 = zext i32 %917 to i64
  %919 = zext i32 %910 to i64
  %920 = getelementptr inbounds %"class.dealii::Vector.35", ptr %483, i64 %919, i32 3
  %921 = load ptr, ptr %920, align 8, !tbaa !60
  %922 = getelementptr inbounds double, ptr %921, i64 %918
  %923 = load double, ptr %922, align 8, !tbaa !52
  %924 = getelementptr inbounds %"struct.std::pair", ptr %474, i64 %906
  %925 = getelementptr inbounds %"struct.std::pair", ptr %474, i64 %906, i32 1
  %926 = load double, ptr %925, align 8, !tbaa !35
  %927 = load i32, ptr %924, align 8, !tbaa !37
  br label %928

928:                                              ; preds = %928, %916
  %929 = phi i32 [ %480, %916 ], [ %930, %928 ]
  %930 = add i32 %929, -1
  %931 = sext i32 %930 to i64
  %932 = getelementptr inbounds i32, ptr %481, i64 %931
  %933 = load i32, ptr %932, align 4, !tbaa !22
  %934 = icmp ugt i32 %933, %927
  br i1 %934, label %928, label %935

935:                                              ; preds = %928
  %936 = sub i32 %927, %933
  %937 = zext i32 %936 to i64
  %938 = zext i32 %930 to i64
  %939 = getelementptr inbounds %"class.dealii::Vector.35", ptr %483, i64 %938, i32 3
  %940 = load ptr, ptr %939, align 8, !tbaa !60
  %941 = getelementptr inbounds double, ptr %940, i64 %937
  %942 = load double, ptr %941, align 8, !tbaa !52
  %943 = tail call double @llvm.fmuladd.f64(double %923, double %926, double %942)
  store double %943, ptr %941, align 8, !tbaa !52
  %944 = add i32 %907, 1
  %945 = zext i32 %944 to i64
  %946 = icmp eq i64 %478, %945
  br i1 %946, label %895, label %905

947:                                              ; preds = %898
  %948 = sub i32 %897, %903
  %949 = zext i32 %948 to i64
  %950 = zext i32 %900 to i64
  %951 = load ptr, ptr %137, align 8, !tbaa !66
  %952 = getelementptr inbounds %"class.dealii::Vector.35", ptr %951, i64 %950, i32 3
  %953 = load ptr, ptr %952, align 8, !tbaa !60
  %954 = getelementptr inbounds double, ptr %953, i64 %949
  store double 0.000000e+00, ptr %954, align 8, !tbaa !52
  br label %955

955:                                              ; preds = %272, %180, %466, %947
  %956 = add nuw nsw i64 %158, 1
  %957 = icmp eq i64 %956, %138
  br i1 %957, label %151, label %157

958:                                              ; preds = %575, %577, %726, %614, %275, %277, %319, %437, %155
  %959 = phi { ptr, i32 } [ %156, %155 ], [ %278, %277 ], [ %276, %275 ], [ %320, %319 ], [ %438, %437 ], [ %578, %577 ], [ %576, %575 ], [ %615, %614 ], [ %727, %726 ]
  %960 = icmp eq ptr %115, null
  br i1 %960, label %963, label %961

961:                                              ; preds = %699, %860, %958
  %962 = phi { ptr, i32 } [ %959, %958 ], [ %861, %860 ], [ %700, %699 ]
  tail call void @_ZdlPv(ptr noundef nonnull %115) #23
  br label %963

963:                                              ; preds = %961, %958
  %964 = phi { ptr, i32 } [ %959, %958 ], [ %962, %961 ]
  resume { ptr, i32 } %964
}

declare noundef nonnull align 8 dereferenceable(288) ptr @_ZNK6dealii17BlockSparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(320)) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIdNS_11BlockVectorIfEEEEvRNS_17BlockSparseMatrixIT_EERT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(320) %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !61
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !61
  %9 = tail call noundef nonnull align 8 dereferenceable(288) ptr @_ZNK6dealii17BlockSparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(320) %1)
  %10 = load i32, ptr %7, align 8, !tbaa !61
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 3, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !227, !noalias !73
  %15 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %16 = load i32, ptr %15, align 8, !tbaa !22, !noalias !73
  %17 = zext i32 %10 to i64
  br label %18

18:                                               ; preds = %12, %76
  %19 = phi i64 [ 0, %12 ], [ %78, %76 ]
  %20 = phi double [ 0.000000e+00, %12 ], [ %77, %76 ]
  %21 = trunc i64 %19 to i32
  %22 = mul i32 %16, %21
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %14, i64 %23
  %25 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %24, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !229
  %27 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %26, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !47
  %29 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %28, i64 0, i32 2
  %30 = load i32, ptr %29, align 4, !tbaa !38
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %76, label %32

32:                                               ; preds = %18
  %33 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %26, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !50
  %35 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %28, i64 0, i32 8
  %36 = load ptr, ptr %35, align 8, !tbaa !41
  %37 = zext i32 %30 to i64
  %38 = and i64 %37, 3
  %39 = icmp ult i32 %30, 4
  br i1 %39, label %58, label %40

40:                                               ; preds = %32
  %41 = and i64 %37, 4294967292
  br label %80

42:                                               ; preds = %76, %3
  %43 = phi i64 [ 0, %3 ], [ %17, %76 ]
  %44 = phi double [ 0.000000e+00, %3 ], [ %77, %76 ]
  %45 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 1, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !58
  %47 = getelementptr inbounds i32, ptr %46, i64 %43
  %48 = load i32, ptr %47, align 4, !tbaa !22
  %49 = uitofp i32 %48 to double
  %50 = fdiv double %44, %49
  %51 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %9, i64 0, i32 5
  %52 = tail call noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %9)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %114, label %54

54:                                               ; preds = %42
  %55 = zext i32 %52 to i64
  %56 = shl nuw nsw i64 %55, 2
  %57 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %56) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %57, i8 -1, i64 %56, i1 false), !tbaa !22
  br label %114

58:                                               ; preds = %80, %32
  %59 = phi double [ undef, %32 ], [ %110, %80 ]
  %60 = phi i64 [ 0, %32 ], [ %111, %80 ]
  %61 = phi double [ %20, %32 ], [ %110, %80 ]
  %62 = icmp eq i64 %38, 0
  br i1 %62, label %76, label %63

63:                                               ; preds = %58, %63
  %64 = phi i64 [ %73, %63 ], [ %60, %58 ]
  %65 = phi double [ %72, %63 ], [ %61, %58 ]
  %66 = phi i64 [ %74, %63 ], [ 0, %58 ]
  %67 = getelementptr inbounds i64, ptr %36, i64 %64
  %68 = load i64, ptr %67, align 8, !tbaa !42
  %69 = getelementptr inbounds double, ptr %34, i64 %68
  %70 = load double, ptr %69, align 8, !tbaa !52
  %71 = tail call double @llvm.fabs.f64(double %70)
  %72 = fadd double %65, %71
  %73 = add nuw nsw i64 %64, 1
  %74 = add i64 %66, 1
  %75 = icmp eq i64 %74, %38
  br i1 %75, label %76, label %63, !llvm.loop !271

76:                                               ; preds = %58, %63, %18
  %77 = phi double [ %20, %18 ], [ %59, %58 ], [ %72, %63 ]
  %78 = add nuw nsw i64 %19, 1
  %79 = icmp eq i64 %78, %17
  br i1 %79, label %42, label %18

80:                                               ; preds = %80, %40
  %81 = phi i64 [ 0, %40 ], [ %111, %80 ]
  %82 = phi double [ %20, %40 ], [ %110, %80 ]
  %83 = phi i64 [ 0, %40 ], [ %112, %80 ]
  %84 = getelementptr inbounds i64, ptr %36, i64 %81
  %85 = load i64, ptr %84, align 8, !tbaa !42
  %86 = getelementptr inbounds double, ptr %34, i64 %85
  %87 = load double, ptr %86, align 8, !tbaa !52
  %88 = tail call double @llvm.fabs.f64(double %87)
  %89 = fadd double %82, %88
  %90 = or i64 %81, 1
  %91 = getelementptr inbounds i64, ptr %36, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !42
  %93 = getelementptr inbounds double, ptr %34, i64 %92
  %94 = load double, ptr %93, align 8, !tbaa !52
  %95 = tail call double @llvm.fabs.f64(double %94)
  %96 = fadd double %89, %95
  %97 = or i64 %81, 2
  %98 = getelementptr inbounds i64, ptr %36, i64 %97
  %99 = load i64, ptr %98, align 8, !tbaa !42
  %100 = getelementptr inbounds double, ptr %34, i64 %99
  %101 = load double, ptr %100, align 8, !tbaa !52
  %102 = tail call double @llvm.fabs.f64(double %101)
  %103 = fadd double %96, %102
  %104 = or i64 %81, 3
  %105 = getelementptr inbounds i64, ptr %36, i64 %104
  %106 = load i64, ptr %105, align 8, !tbaa !42
  %107 = getelementptr inbounds double, ptr %34, i64 %106
  %108 = load double, ptr %107, align 8, !tbaa !52
  %109 = tail call double @llvm.fabs.f64(double %108)
  %110 = fadd double %103, %109
  %111 = add nuw nsw i64 %81, 4
  %112 = add i64 %83, 4
  %113 = icmp eq i64 %112, %41
  br i1 %113, label %58, label %80

114:                                              ; preds = %54, %42
  %115 = phi ptr [ null, %42 ], [ %57, %54 ]
  %116 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %117 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %118 = load ptr, ptr %117, align 8, !tbaa !70
  %119 = load ptr, ptr %116, align 8, !tbaa !72
  %120 = ptrtoint ptr %118 to i64
  %121 = ptrtoint ptr %119 to i64
  %122 = sub i64 %120, %121
  %123 = sdiv exact i64 %122, 40
  %124 = icmp eq ptr %118, %119
  br i1 %124, label %125, label %141

125:                                              ; preds = %141, %114
  %126 = invoke noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %9)
          to label %127 unwind label %155

127:                                              ; preds = %125
  %128 = icmp eq i32 %126, 0
  br i1 %128, label %151, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %9, i64 0, i32 5, i32 1
  %131 = icmp eq i32 %8, 0
  %132 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 3, i32 0, i32 1
  %133 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %134 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 2
  %135 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %1, i64 0, i32 2, i32 1
  %136 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 2, i32 1
  %137 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %2, i64 0, i32 1
  %138 = zext i32 %126 to i64
  %139 = zext i32 %8 to i64
  %140 = zext i32 %8 to i64
  br label %157

141:                                              ; preds = %114, %141
  %142 = phi i64 [ %149, %141 ], [ 0, %114 ]
  %143 = phi i32 [ %148, %141 ], [ 0, %114 ]
  %144 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %119, i64 %142
  %145 = load i32, ptr %144, align 8, !tbaa !24
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i32, ptr %115, i64 %146
  store i32 %143, ptr %147, align 4, !tbaa !22
  %148 = add i32 %143, 1
  %149 = zext i32 %148 to i64
  %150 = icmp ugt i64 %123, %149
  br i1 %150, label %141, label %125

151:                                              ; preds = %962, %127
  %152 = icmp eq ptr %115, null
  br i1 %152, label %154, label %153

153:                                              ; preds = %151
  tail call void @_ZdlPv(ptr noundef nonnull %115) #23
  br label %154

154:                                              ; preds = %151, %153
  ret void

155:                                              ; preds = %125
  %156 = landingpad { ptr, i32 }
          cleanup
  br label %965

157:                                              ; preds = %129, %962
  %158 = phi i64 [ 0, %129 ], [ %963, %962 ]
  %159 = load i32, ptr %51, align 8, !tbaa !61
  %160 = load ptr, ptr %130, align 8, !tbaa !58
  br label %161

161:                                              ; preds = %161, %157
  %162 = phi i32 [ %159, %157 ], [ %163, %161 ]
  %163 = add i32 %162, -1
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i32, ptr %160, i64 %164
  %166 = load i32, ptr %165, align 4, !tbaa !22
  %167 = zext i32 %166 to i64
  %168 = icmp ult i64 %158, %167
  br i1 %168, label %161, label %169

169:                                              ; preds = %161
  %170 = trunc i64 %158 to i32
  %171 = sub i32 %170, %166
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds i32, ptr %115, i64 %158
  %174 = load i32, ptr %173, align 4, !tbaa !22
  %175 = icmp eq i32 %174, -1
  br i1 %175, label %180, label %176

176:                                              ; preds = %169
  br i1 %131, label %468, label %177

177:                                              ; preds = %176
  %178 = add i32 %171, 1
  %179 = zext i32 %178 to i64
  br label %486

180:                                              ; preds = %169
  br i1 %131, label %962, label %181

181:                                              ; preds = %180
  %182 = add i32 %171, 1
  %183 = zext i32 %182 to i64
  br label %184

184:                                              ; preds = %181, %272
  %185 = phi i64 [ 0, %181 ], [ %273, %272 ]
  %186 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !272
  %187 = load i32, ptr %133, align 8, !tbaa !22, !noalias !272
  %188 = mul i32 %187, %163
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %186, i64 %189
  %191 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %190, i64 %185
  %192 = load ptr, ptr %191, align 8, !tbaa !229
  %193 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %192, i64 0, i32 1
  %194 = load ptr, ptr %193, align 8, !tbaa !47, !noalias !275
  %195 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %194, i64 0, i32 8
  %196 = load ptr, ptr %195, align 8, !tbaa !41, !noalias !275
  %197 = getelementptr inbounds i64, ptr %196, i64 %183
  %198 = load i64, ptr %197, align 8, !tbaa !42, !noalias !275
  %199 = getelementptr inbounds i64, ptr %196, i64 %172
  %200 = load i64, ptr %199, align 8, !tbaa !42, !noalias !275
  %201 = sub i64 %198, %200
  %202 = and i64 %201, 4294967295
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %220

204:                                              ; preds = %184
  %205 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %194, i64 0, i32 2
  %206 = load i32, ptr %205, align 4, !tbaa !38, !noalias !278
  br label %207

207:                                              ; preds = %212, %204
  %208 = phi i64 [ %198, %204 ], [ %216, %212 ]
  %209 = phi i32 [ %171, %204 ], [ %210, %212 ]
  %210 = add i32 %209, 1
  %211 = icmp ult i32 %210, %206
  br i1 %211, label %212, label %220

212:                                              ; preds = %207
  %213 = add i32 %209, 2
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds i64, ptr %196, i64 %214
  %216 = load i64, ptr %215, align 8, !tbaa !42, !noalias !278
  %217 = sub i64 %216, %208
  %218 = and i64 %217, 4294967295
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %207, label %220

220:                                              ; preds = %212, %207, %184
  %221 = phi i32 [ %171, %184 ], [ %206, %207 ], [ %210, %212 ]
  %222 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %192)
          to label %223 unwind label %275

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %222, i64 0, i32 9
  %225 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %222, i64 0, i32 8
  %226 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %192, i64 0, i32 2
  %227 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %222, i64 0, i32 2
  br label %228

228:                                              ; preds = %454, %223
  %229 = phi i32 [ %221, %223 ], [ %455, %454 ]
  %230 = zext i32 %229 to i64
  %231 = add i32 %229, 1
  %232 = zext i32 %231 to i64
  br label %233

233:                                              ; preds = %228, %441
  %234 = phi i32 [ %442, %441 ], [ 0, %228 ]
  %235 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !281
  %236 = load i32, ptr %133, align 8, !tbaa !22, !noalias !281
  %237 = mul i32 %236, %163
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %235, i64 %238
  %240 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %239, i64 %185
  %241 = load ptr, ptr %240, align 8, !tbaa !229
  %242 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %241, i64 0, i32 1
  %243 = load ptr, ptr %242, align 8, !tbaa !47, !noalias !284
  %244 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %243, i64 0, i32 2
  %245 = load i32, ptr %244, align 4, !tbaa !38, !noalias !284
  %246 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %243, i64 0, i32 8
  br label %247

247:                                              ; preds = %251, %233
  %248 = phi i32 [ %171, %233 ], [ %249, %251 ]
  %249 = add i32 %248, 1
  %250 = icmp ult i32 %249, %245
  br i1 %250, label %251, label %263

251:                                              ; preds = %247
  %252 = load ptr, ptr %246, align 8, !tbaa !41, !noalias !284
  %253 = add i32 %248, 2
  %254 = zext i32 %253 to i64
  %255 = getelementptr inbounds i64, ptr %252, i64 %254
  %256 = load i64, ptr %255, align 8, !tbaa !42, !noalias !284
  %257 = zext i32 %249 to i64
  %258 = getelementptr inbounds i64, ptr %252, i64 %257
  %259 = load i64, ptr %258, align 8, !tbaa !42, !noalias !284
  %260 = sub i64 %256, %259
  %261 = and i64 %260, 4294967295
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %247, label %263

263:                                              ; preds = %247, %251
  %264 = phi i32 [ %249, %251 ], [ %245, %247 ]
  %265 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %241)
          to label %266 unwind label %277

266:                                              ; preds = %263
  %267 = icmp ne ptr %222, %265
  %268 = icmp ne i32 %229, %264
  %269 = or i1 %267, %268
  %270 = icmp ne i32 %234, 0
  %271 = or i1 %270, %269
  br i1 %271, label %279, label %272

272:                                              ; preds = %266
  %273 = add nuw nsw i64 %185, 1
  %274 = icmp eq i64 %273, %140
  br i1 %274, label %962, label %184

275:                                              ; preds = %220
  %276 = landingpad { ptr, i32 }
          cleanup
  br label %965

277:                                              ; preds = %263
  %278 = landingpad { ptr, i32 }
          cleanup
  br label %965

279:                                              ; preds = %266
  %280 = load ptr, ptr %224, align 8, !tbaa !43
  %281 = load ptr, ptr %225, align 8, !tbaa !41
  %282 = getelementptr inbounds i64, ptr %281, i64 %230
  %283 = load i64, ptr %282, align 8, !tbaa !42
  %284 = zext i32 %234 to i64
  %285 = add i64 %283, %284
  %286 = getelementptr inbounds i32, ptr %280, i64 %285
  %287 = load i32, ptr %286, align 4, !tbaa !22
  %288 = load ptr, ptr %130, align 8, !tbaa !58
  %289 = getelementptr inbounds i32, ptr %288, i64 %185
  %290 = load i32, ptr %289, align 4, !tbaa !22
  %291 = add i32 %290, %287
  %292 = zext i32 %291 to i64
  %293 = getelementptr inbounds i32, ptr %115, i64 %292
  %294 = load i32, ptr %293, align 4, !tbaa !22
  %295 = icmp eq i32 %294, -1
  br i1 %295, label %441, label %296

296:                                              ; preds = %279
  %297 = load ptr, ptr %226, align 8, !tbaa !50
  %298 = load ptr, ptr %193, align 8, !tbaa !47
  %299 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %298, i64 0, i32 8
  %300 = load ptr, ptr %299, align 8, !tbaa !41
  %301 = getelementptr inbounds i64, ptr %300, i64 %230
  %302 = load i64, ptr %301, align 8, !tbaa !42
  %303 = add i64 %302, %284
  %304 = getelementptr inbounds double, ptr %297, i64 %303
  %305 = load double, ptr %304, align 8, !tbaa !52
  %306 = zext i32 %294 to i64
  %307 = load ptr, ptr %116, align 8, !tbaa !72
  %308 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %307, i64 %306, i32 1
  %309 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %308, i64 0, i32 1
  %310 = load ptr, ptr %309, align 8, !tbaa !31
  %311 = load ptr, ptr %308, align 8, !tbaa !32
  %312 = icmp eq ptr %310, %311
  br i1 %312, label %315, label %321

313:                                              ; preds = %375
  %314 = load ptr, ptr %193, align 8, !tbaa !47
  br label %315

315:                                              ; preds = %313, %296
  %316 = phi ptr [ %298, %296 ], [ %314, %313 ]
  %317 = phi i64 [ %306, %296 ], [ %379, %313 ]
  %318 = phi ptr [ %307, %296 ], [ %380, %313 ]
  br i1 %6, label %424, label %390

319:                                              ; preds = %352
  %320 = landingpad { ptr, i32 }
          cleanup
  br label %965

321:                                              ; preds = %296, %375
  %322 = phi ptr [ %384, %375 ], [ %311, %296 ]
  %323 = phi i64 [ %377, %375 ], [ 0, %296 ]
  %324 = phi i32 [ %376, %375 ], [ 0, %296 ]
  %325 = getelementptr inbounds %"struct.std::pair", ptr %322, i64 %323
  %326 = load i32, ptr %325, align 8, !tbaa !37
  %327 = getelementptr inbounds %"struct.std::pair", ptr %322, i64 %323, i32 1
  %328 = load double, ptr %327, align 8, !tbaa !35
  %329 = fmul double %305, %328
  %330 = fcmp oeq double %329, 0.000000e+00
  br i1 %330, label %375, label %331

331:                                              ; preds = %321
  %332 = load i32, ptr %7, align 8, !tbaa !61
  %333 = load ptr, ptr %45, align 8, !tbaa !58
  br label %334

334:                                              ; preds = %334, %331
  %335 = phi i32 [ %332, %331 ], [ %336, %334 ]
  %336 = add i32 %335, -1
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds i32, ptr %333, i64 %337
  %339 = load i32, ptr %338, align 4, !tbaa !22
  %340 = zext i32 %339 to i64
  %341 = icmp ult i64 %158, %340
  br i1 %341, label %334, label %342

342:                                              ; preds = %334
  %343 = load i32, ptr %134, align 8, !tbaa !61
  %344 = load ptr, ptr %135, align 8, !tbaa !58
  br label %345

345:                                              ; preds = %345, %342
  %346 = phi i32 [ %343, %342 ], [ %347, %345 ]
  %347 = add i32 %346, -1
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i32, ptr %344, i64 %348
  %350 = load i32, ptr %349, align 4, !tbaa !22
  %351 = icmp ugt i32 %350, %326
  br i1 %351, label %345, label %352

352:                                              ; preds = %345
  %353 = sub i32 %170, %339
  %354 = sub i32 %326, %350
  %355 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !287
  %356 = load i32, ptr %133, align 8, !tbaa !22, !noalias !287
  %357 = mul i32 %356, %336
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %355, i64 %358
  %360 = zext i32 %347 to i64
  %361 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %359, i64 %360
  %362 = load ptr, ptr %361, align 8, !tbaa !229
  %363 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %362, i64 0, i32 1
  %364 = load ptr, ptr %363, align 8, !tbaa !47
  %365 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %364, i32 noundef %353, i32 noundef %354)
          to label %366 unwind label %319

366:                                              ; preds = %352
  %367 = icmp eq i32 %365, -1
  br i1 %367, label %375, label %368

368:                                              ; preds = %366
  %369 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %362, i64 0, i32 2
  %370 = load ptr, ptr %369, align 8, !tbaa !50
  %371 = zext i32 %365 to i64
  %372 = getelementptr inbounds double, ptr %370, i64 %371
  %373 = load double, ptr %372, align 8, !tbaa !52
  %374 = fadd double %329, %373
  store double %374, ptr %372, align 8, !tbaa !52
  br label %375

375:                                              ; preds = %368, %366, %321
  %376 = add i32 %324, 1
  %377 = zext i32 %376 to i64
  %378 = load i32, ptr %293, align 4, !tbaa !22
  %379 = zext i32 %378 to i64
  %380 = load ptr, ptr %116, align 8, !tbaa !72
  %381 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %380, i64 %379, i32 1
  %382 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %381, i64 0, i32 1
  %383 = load ptr, ptr %382, align 8, !tbaa !31
  %384 = load ptr, ptr %381, align 8, !tbaa !32
  %385 = ptrtoint ptr %383 to i64
  %386 = ptrtoint ptr %384 to i64
  %387 = sub i64 %385, %386
  %388 = ashr exact i64 %387, 4
  %389 = icmp eq i64 %388, %377
  br i1 %389, label %313, label %321

390:                                              ; preds = %315
  %391 = load ptr, ptr %226, align 8, !tbaa !50
  %392 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %316, i64 0, i32 8
  %393 = load ptr, ptr %392, align 8, !tbaa !41
  %394 = getelementptr inbounds i64, ptr %393, i64 %230
  %395 = load i64, ptr %394, align 8, !tbaa !42
  %396 = add i64 %395, %284
  %397 = getelementptr inbounds double, ptr %391, i64 %396
  %398 = load double, ptr %397, align 8, !tbaa !52
  %399 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %318, i64 %317, i32 2
  %400 = load double, ptr %399, align 8, !tbaa !48
  %401 = load i32, ptr %4, align 8, !tbaa !61
  %402 = load ptr, ptr %136, align 8, !tbaa !58
  br label %403

403:                                              ; preds = %403, %390
  %404 = phi i32 [ %401, %390 ], [ %405, %403 ]
  %405 = add i32 %404, -1
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds i32, ptr %402, i64 %406
  %408 = load i32, ptr %407, align 4, !tbaa !22
  %409 = zext i32 %408 to i64
  %410 = icmp ult i64 %158, %409
  br i1 %410, label %403, label %411

411:                                              ; preds = %403
  %412 = sub i32 %170, %408
  %413 = zext i32 %412 to i64
  %414 = zext i32 %405 to i64
  %415 = load ptr, ptr %137, align 8, !tbaa !68
  %416 = getelementptr inbounds %"class.dealii::Vector", ptr %415, i64 %414, i32 3
  %417 = load ptr, ptr %416, align 8, !tbaa !49
  %418 = getelementptr inbounds float, ptr %417, i64 %413
  %419 = load float, ptr %418, align 4, !tbaa !33
  %420 = fpext float %419 to double
  %421 = fneg double %398
  %422 = tail call double @llvm.fmuladd.f64(double %421, double %400, double %420)
  %423 = fptrunc double %422 to float
  store float %423, ptr %418, align 4, !tbaa !33
  br label %424

424:                                              ; preds = %315, %411
  %425 = load ptr, ptr %224, align 8, !tbaa !43
  %426 = load ptr, ptr %225, align 8, !tbaa !41
  %427 = getelementptr inbounds i64, ptr %426, i64 %230
  %428 = load i64, ptr %427, align 8, !tbaa !42
  %429 = add i64 %428, %284
  %430 = getelementptr inbounds i32, ptr %425, i64 %429
  %431 = load i32, ptr %430, align 4, !tbaa !22
  %432 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %316, i32 noundef %229, i32 noundef %431)
          to label %433 unwind label %439

433:                                              ; preds = %424
  %434 = icmp eq i32 %432, -1
  br i1 %434, label %441, label %435

435:                                              ; preds = %433
  %436 = load ptr, ptr %226, align 8, !tbaa !50
  %437 = zext i32 %432 to i64
  %438 = getelementptr inbounds double, ptr %436, i64 %437
  store double 0.000000e+00, ptr %438, align 8, !tbaa !52
  br label %441

439:                                              ; preds = %424
  %440 = landingpad { ptr, i32 }
          cleanup
  br label %965

441:                                              ; preds = %433, %435, %279
  %442 = add i32 %234, 1
  %443 = load ptr, ptr %225, align 8, !tbaa !41
  %444 = getelementptr inbounds i64, ptr %443, i64 %232
  %445 = load i64, ptr %444, align 8, !tbaa !42
  %446 = getelementptr inbounds i64, ptr %443, i64 %230
  %447 = load i64, ptr %446, align 8, !tbaa !42
  %448 = sub i64 %445, %447
  %449 = trunc i64 %448 to i32
  %450 = icmp ult i32 %442, %449
  br i1 %450, label %233, label %451

451:                                              ; preds = %441
  %452 = load i32, ptr %227, align 4, !tbaa !38
  %453 = icmp eq i32 %231, %452
  br i1 %453, label %454, label %456

454:                                              ; preds = %466, %456, %451
  %455 = phi i32 [ %231, %451 ], [ %457, %456 ], [ %452, %466 ]
  br label %228

456:                                              ; preds = %451, %466
  %457 = phi i32 [ %459, %466 ], [ %231, %451 ]
  %458 = phi i64 [ %462, %466 ], [ %445, %451 ]
  %459 = add i32 %457, 1
  %460 = zext i32 %459 to i64
  %461 = getelementptr inbounds i64, ptr %443, i64 %460
  %462 = load i64, ptr %461, align 8, !tbaa !42
  %463 = sub i64 %462, %458
  %464 = and i64 %463, 4294967295
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %454

466:                                              ; preds = %456
  %467 = icmp eq i32 %459, %452
  br i1 %467, label %454, label %456, !llvm.loop !82

468:                                              ; preds = %574, %176
  br i1 %6, label %962, label %469

469:                                              ; preds = %468
  %470 = load i32, ptr %173, align 4, !tbaa !22
  %471 = zext i32 %470 to i64
  %472 = load ptr, ptr %116, align 8, !tbaa !72
  %473 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %472, i64 %471, i32 1
  %474 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %473, i64 0, i32 1
  %475 = load ptr, ptr %474, align 8, !tbaa !31
  %476 = load ptr, ptr %473, align 8, !tbaa !32
  %477 = ptrtoint ptr %475 to i64
  %478 = ptrtoint ptr %476 to i64
  %479 = sub i64 %477, %478
  %480 = ashr exact i64 %479, 4
  %481 = icmp eq ptr %475, %476
  %482 = load i32, ptr %4, align 8, !tbaa !61
  %483 = load ptr, ptr %136, align 8, !tbaa !58
  br i1 %481, label %899, label %484

484:                                              ; preds = %469
  %485 = load ptr, ptr %137, align 8, !tbaa !68
  br label %909

486:                                              ; preds = %177, %574
  %487 = phi i64 [ 0, %177 ], [ %575, %574 ]
  %488 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !290
  %489 = load i32, ptr %133, align 8, !tbaa !22, !noalias !290
  %490 = mul i32 %489, %163
  %491 = zext i32 %490 to i64
  %492 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %488, i64 %491
  %493 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %492, i64 %487
  %494 = load ptr, ptr %493, align 8, !tbaa !229
  %495 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %494, i64 0, i32 1
  %496 = load ptr, ptr %495, align 8, !tbaa !47, !noalias !293
  %497 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %496, i64 0, i32 8
  %498 = load ptr, ptr %497, align 8, !tbaa !41, !noalias !293
  %499 = getelementptr inbounds i64, ptr %498, i64 %179
  %500 = load i64, ptr %499, align 8, !tbaa !42, !noalias !293
  %501 = getelementptr inbounds i64, ptr %498, i64 %172
  %502 = load i64, ptr %501, align 8, !tbaa !42, !noalias !293
  %503 = sub i64 %500, %502
  %504 = and i64 %503, 4294967295
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %506, label %522

506:                                              ; preds = %486
  %507 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %496, i64 0, i32 2
  %508 = load i32, ptr %507, align 4, !tbaa !38, !noalias !296
  br label %509

509:                                              ; preds = %514, %506
  %510 = phi i64 [ %500, %506 ], [ %518, %514 ]
  %511 = phi i32 [ %171, %506 ], [ %512, %514 ]
  %512 = add i32 %511, 1
  %513 = icmp ult i32 %512, %508
  br i1 %513, label %514, label %522

514:                                              ; preds = %509
  %515 = add i32 %511, 2
  %516 = zext i32 %515 to i64
  %517 = getelementptr inbounds i64, ptr %498, i64 %516
  %518 = load i64, ptr %517, align 8, !tbaa !42, !noalias !296
  %519 = sub i64 %518, %510
  %520 = and i64 %519, 4294967295
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %509, label %522

522:                                              ; preds = %514, %509, %486
  %523 = phi i32 [ %171, %486 ], [ %508, %509 ], [ %512, %514 ]
  %524 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %494)
          to label %525 unwind label %577

525:                                              ; preds = %522
  %526 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %524, i64 0, i32 9
  %527 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %524, i64 0, i32 8
  %528 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %494, i64 0, i32 2
  %529 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %524, i64 0, i32 2
  br label %530

530:                                              ; preds = %885, %525
  %531 = phi i32 [ %523, %525 ], [ %886, %885 ]
  %532 = zext i32 %531 to i64
  %533 = add i32 %531, 1
  %534 = zext i32 %533 to i64
  br label %535

535:                                              ; preds = %530, %872
  %536 = phi i32 [ %873, %872 ], [ 0, %530 ]
  %537 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !299
  %538 = load i32, ptr %133, align 8, !tbaa !22, !noalias !299
  %539 = mul i32 %538, %163
  %540 = zext i32 %539 to i64
  %541 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %537, i64 %540
  %542 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %541, i64 %487
  %543 = load ptr, ptr %542, align 8, !tbaa !229
  %544 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %543, i64 0, i32 1
  %545 = load ptr, ptr %544, align 8, !tbaa !47, !noalias !302
  %546 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %545, i64 0, i32 2
  %547 = load i32, ptr %546, align 4, !tbaa !38, !noalias !302
  %548 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %545, i64 0, i32 8
  br label %549

549:                                              ; preds = %553, %535
  %550 = phi i32 [ %171, %535 ], [ %551, %553 ]
  %551 = add i32 %550, 1
  %552 = icmp ult i32 %551, %547
  br i1 %552, label %553, label %565

553:                                              ; preds = %549
  %554 = load ptr, ptr %548, align 8, !tbaa !41, !noalias !302
  %555 = add i32 %550, 2
  %556 = zext i32 %555 to i64
  %557 = getelementptr inbounds i64, ptr %554, i64 %556
  %558 = load i64, ptr %557, align 8, !tbaa !42, !noalias !302
  %559 = zext i32 %551 to i64
  %560 = getelementptr inbounds i64, ptr %554, i64 %559
  %561 = load i64, ptr %560, align 8, !tbaa !42, !noalias !302
  %562 = sub i64 %558, %561
  %563 = and i64 %562, 4294967295
  %564 = icmp eq i64 %563, 0
  br i1 %564, label %549, label %565

565:                                              ; preds = %549, %553
  %566 = phi i32 [ %551, %553 ], [ %547, %549 ]
  %567 = invoke noundef nonnull align 8 dereferenceable(122) ptr @_ZNK6dealii12SparseMatrixIdE20get_sparsity_patternEv(ptr noundef nonnull align 8 dereferenceable(36) %543)
          to label %568 unwind label %579

568:                                              ; preds = %565
  %569 = icmp ne ptr %524, %567
  %570 = icmp ne i32 %531, %566
  %571 = or i1 %569, %570
  %572 = icmp ne i32 %536, 0
  %573 = or i1 %572, %571
  br i1 %573, label %581, label %574

574:                                              ; preds = %568
  %575 = add nuw nsw i64 %487, 1
  %576 = icmp eq i64 %575, %139
  br i1 %576, label %468, label %486

577:                                              ; preds = %522
  %578 = landingpad { ptr, i32 }
          cleanup
  br label %965

579:                                              ; preds = %565
  %580 = landingpad { ptr, i32 }
          cleanup
  br label %965

581:                                              ; preds = %568
  %582 = load ptr, ptr %526, align 8, !tbaa !43
  %583 = load ptr, ptr %527, align 8, !tbaa !41
  %584 = getelementptr inbounds i64, ptr %583, i64 %532
  %585 = load i64, ptr %584, align 8, !tbaa !42
  %586 = zext i32 %536 to i64
  %587 = add i64 %585, %586
  %588 = getelementptr inbounds i32, ptr %582, i64 %587
  %589 = load i32, ptr %588, align 4, !tbaa !22
  %590 = load ptr, ptr %130, align 8, !tbaa !58
  %591 = getelementptr inbounds i32, ptr %590, i64 %487
  %592 = load i32, ptr %591, align 4, !tbaa !22
  %593 = add i32 %592, %589
  %594 = zext i32 %593 to i64
  %595 = getelementptr inbounds i32, ptr %115, i64 %594
  %596 = load i32, ptr %595, align 4, !tbaa !22
  %597 = icmp eq i32 %596, -1
  %598 = load ptr, ptr %528, align 8, !tbaa !50
  %599 = load ptr, ptr %495, align 8, !tbaa !47
  %600 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %599, i64 0, i32 8
  %601 = load ptr, ptr %600, align 8, !tbaa !41
  %602 = getelementptr inbounds i64, ptr %601, i64 %532
  %603 = load i64, ptr %602, align 8, !tbaa !42
  %604 = add i64 %603, %586
  %605 = getelementptr inbounds double, ptr %598, i64 %604
  %606 = load double, ptr %605, align 8, !tbaa !52
  %607 = load i32, ptr %173, align 4, !tbaa !22
  %608 = zext i32 %607 to i64
  %609 = load ptr, ptr %116, align 8, !tbaa !72
  %610 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %609, i64 %608, i32 1
  %611 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %610, i64 0, i32 1
  %612 = load ptr, ptr %611, align 8, !tbaa !31
  %613 = load ptr, ptr %610, align 8, !tbaa !32
  %614 = icmp eq ptr %612, %613
  br i1 %597, label %615, label %703

615:                                              ; preds = %581
  br i1 %614, label %695, label %618

616:                                              ; preds = %648
  %617 = landingpad { ptr, i32 }
          cleanup
  br label %965

618:                                              ; preds = %615, %671
  %619 = phi ptr [ %680, %671 ], [ %613, %615 ]
  %620 = phi i64 [ %673, %671 ], [ 0, %615 ]
  %621 = phi i32 [ %672, %671 ], [ 0, %615 ]
  %622 = getelementptr inbounds %"struct.std::pair", ptr %619, i64 %620
  %623 = load i32, ptr %622, align 8, !tbaa !37
  %624 = getelementptr inbounds %"struct.std::pair", ptr %619, i64 %620, i32 1
  %625 = load double, ptr %624, align 8, !tbaa !35
  %626 = fmul double %606, %625
  %627 = fcmp oeq double %626, 0.000000e+00
  br i1 %627, label %671, label %628

628:                                              ; preds = %618
  %629 = load i32, ptr %7, align 8, !tbaa !61
  %630 = load ptr, ptr %45, align 8, !tbaa !58
  br label %631

631:                                              ; preds = %631, %628
  %632 = phi i32 [ %629, %628 ], [ %633, %631 ]
  %633 = add i32 %632, -1
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds i32, ptr %630, i64 %634
  %636 = load i32, ptr %635, align 4, !tbaa !22
  %637 = icmp ugt i32 %636, %623
  br i1 %637, label %631, label %638

638:                                              ; preds = %631
  %639 = load i32, ptr %134, align 8, !tbaa !61
  %640 = load ptr, ptr %135, align 8, !tbaa !58
  br label %641

641:                                              ; preds = %641, %638
  %642 = phi i32 [ %639, %638 ], [ %643, %641 ]
  %643 = add i32 %642, -1
  %644 = sext i32 %643 to i64
  %645 = getelementptr inbounds i32, ptr %640, i64 %644
  %646 = load i32, ptr %645, align 4, !tbaa !22
  %647 = icmp ugt i32 %646, %593
  br i1 %647, label %641, label %648

648:                                              ; preds = %641
  %649 = sub i32 %623, %636
  %650 = sub i32 %593, %646
  %651 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !305
  %652 = load i32, ptr %133, align 8, !tbaa !22, !noalias !305
  %653 = mul i32 %652, %633
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %651, i64 %654
  %656 = zext i32 %643 to i64
  %657 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %655, i64 %656
  %658 = load ptr, ptr %657, align 8, !tbaa !229
  %659 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %658, i64 0, i32 1
  %660 = load ptr, ptr %659, align 8, !tbaa !47
  %661 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %660, i32 noundef %649, i32 noundef %650)
          to label %662 unwind label %616

662:                                              ; preds = %648
  %663 = icmp eq i32 %661, -1
  br i1 %663, label %671, label %664

664:                                              ; preds = %662
  %665 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %658, i64 0, i32 2
  %666 = load ptr, ptr %665, align 8, !tbaa !50
  %667 = zext i32 %661 to i64
  %668 = getelementptr inbounds double, ptr %666, i64 %667
  %669 = load double, ptr %668, align 8, !tbaa !52
  %670 = fadd double %626, %669
  store double %670, ptr %668, align 8, !tbaa !52
  br label %671

671:                                              ; preds = %664, %662, %618
  %672 = add i32 %621, 1
  %673 = zext i32 %672 to i64
  %674 = load i32, ptr %173, align 4, !tbaa !22
  %675 = zext i32 %674 to i64
  %676 = load ptr, ptr %116, align 8, !tbaa !72
  %677 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %676, i64 %675, i32 1
  %678 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %677, i64 0, i32 1
  %679 = load ptr, ptr %678, align 8, !tbaa !31
  %680 = load ptr, ptr %677, align 8, !tbaa !32
  %681 = ptrtoint ptr %679 to i64
  %682 = ptrtoint ptr %680 to i64
  %683 = sub i64 %681, %682
  %684 = ashr exact i64 %683, 4
  %685 = icmp eq i64 %684, %673
  br i1 %685, label %686, label %618

686:                                              ; preds = %671
  %687 = load ptr, ptr %526, align 8, !tbaa !43
  %688 = load ptr, ptr %527, align 8, !tbaa !41
  %689 = getelementptr inbounds i64, ptr %688, i64 %532
  %690 = load i64, ptr %689, align 8, !tbaa !42
  %691 = load ptr, ptr %495, align 8, !tbaa !47
  %692 = add i64 %690, %586
  %693 = getelementptr inbounds i32, ptr %687, i64 %692
  %694 = load i32, ptr %693, align 4, !tbaa !22
  br label %695

695:                                              ; preds = %686, %615
  %696 = phi i32 [ %694, %686 ], [ %589, %615 ]
  %697 = phi ptr [ %691, %686 ], [ %599, %615 ]
  %698 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %697, i32 noundef %531, i32 noundef %696)
          to label %699 unwind label %701

699:                                              ; preds = %695
  %700 = icmp eq i32 %698, -1
  br i1 %700, label %872, label %866

701:                                              ; preds = %695
  %702 = landingpad { ptr, i32 }
          cleanup
  br label %968

703:                                              ; preds = %581
  br i1 %614, label %856, label %704

704:                                              ; preds = %703
  %705 = fneg double %606
  br label %706

706:                                              ; preds = %704, %837
  %707 = phi i32 [ %607, %704 ], [ %721, %837 ]
  %708 = phi ptr [ %609, %704 ], [ %722, %837 ]
  %709 = phi i32 [ %596, %704 ], [ %723, %837 ]
  %710 = phi i64 [ 0, %704 ], [ %839, %837 ]
  %711 = phi i32 [ 0, %704 ], [ %838, %837 ]
  %712 = zext i32 %709 to i64
  %713 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %708, i64 %712, i32 1
  %714 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %713, i64 0, i32 1
  %715 = load ptr, ptr %714, align 8, !tbaa !31
  %716 = load ptr, ptr %713, align 8, !tbaa !32
  %717 = icmp eq ptr %715, %716
  br i1 %717, label %720, label %730

718:                                              ; preds = %793
  %719 = load i32, ptr %173, align 4, !tbaa !22
  br label %720

720:                                              ; preds = %718, %706
  %721 = phi i32 [ %707, %706 ], [ %719, %718 ]
  %722 = phi ptr [ %708, %706 ], [ %798, %718 ]
  %723 = phi i32 [ %709, %706 ], [ %796, %718 ]
  %724 = phi i64 [ %712, %706 ], [ %797, %718 ]
  %725 = zext i32 %721 to i64
  %726 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %722, i64 %725, i32 1
  %727 = load ptr, ptr %726, align 8, !tbaa !32
  br i1 %6, label %837, label %808

728:                                              ; preds = %770
  %729 = landingpad { ptr, i32 }
          cleanup
  br label %965

730:                                              ; preds = %706, %793
  %731 = phi ptr [ %802, %793 ], [ %716, %706 ]
  %732 = phi ptr [ %798, %793 ], [ %708, %706 ]
  %733 = phi i64 [ %795, %793 ], [ 0, %706 ]
  %734 = phi i32 [ %794, %793 ], [ 0, %706 ]
  %735 = load i32, ptr %173, align 4, !tbaa !22
  %736 = zext i32 %735 to i64
  %737 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %732, i64 %736, i32 1
  %738 = load ptr, ptr %737, align 8, !tbaa !32
  %739 = getelementptr inbounds %"struct.std::pair", ptr %738, i64 %710
  %740 = load i32, ptr %739, align 8, !tbaa !37
  %741 = getelementptr inbounds %"struct.std::pair", ptr %731, i64 %733
  %742 = load i32, ptr %741, align 8, !tbaa !37
  %743 = getelementptr inbounds %"struct.std::pair", ptr %738, i64 %710, i32 1
  %744 = load double, ptr %743, align 8, !tbaa !35
  %745 = fmul double %606, %744
  %746 = getelementptr inbounds %"struct.std::pair", ptr %731, i64 %733, i32 1
  %747 = load double, ptr %746, align 8, !tbaa !35
  %748 = fmul double %745, %747
  %749 = fcmp oeq double %748, 0.000000e+00
  br i1 %749, label %793, label %750

750:                                              ; preds = %730
  %751 = load i32, ptr %7, align 8, !tbaa !61
  %752 = load ptr, ptr %45, align 8, !tbaa !58
  br label %753

753:                                              ; preds = %753, %750
  %754 = phi i32 [ %751, %750 ], [ %755, %753 ]
  %755 = add i32 %754, -1
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds i32, ptr %752, i64 %756
  %758 = load i32, ptr %757, align 4, !tbaa !22
  %759 = icmp ugt i32 %758, %740
  br i1 %759, label %753, label %760

760:                                              ; preds = %753
  %761 = load i32, ptr %134, align 8, !tbaa !61
  %762 = load ptr, ptr %135, align 8, !tbaa !58
  br label %763

763:                                              ; preds = %763, %760
  %764 = phi i32 [ %761, %760 ], [ %765, %763 ]
  %765 = add i32 %764, -1
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds i32, ptr %762, i64 %766
  %768 = load i32, ptr %767, align 4, !tbaa !22
  %769 = icmp ugt i32 %768, %742
  br i1 %769, label %763, label %770

770:                                              ; preds = %763
  %771 = sub i32 %740, %758
  %772 = sub i32 %742, %768
  %773 = load ptr, ptr %132, align 8, !tbaa !227, !noalias !308
  %774 = load i32, ptr %133, align 8, !tbaa !22, !noalias !308
  %775 = mul i32 %774, %755
  %776 = zext i32 %775 to i64
  %777 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %773, i64 %776
  %778 = zext i32 %765 to i64
  %779 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %777, i64 %778
  %780 = load ptr, ptr %779, align 8, !tbaa !229
  %781 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %780, i64 0, i32 1
  %782 = load ptr, ptr %781, align 8, !tbaa !47
  %783 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %782, i32 noundef %771, i32 noundef %772)
          to label %784 unwind label %728

784:                                              ; preds = %770
  %785 = icmp eq i32 %783, -1
  br i1 %785, label %793, label %786

786:                                              ; preds = %784
  %787 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %780, i64 0, i32 2
  %788 = load ptr, ptr %787, align 8, !tbaa !50
  %789 = zext i32 %783 to i64
  %790 = getelementptr inbounds double, ptr %788, i64 %789
  %791 = load double, ptr %790, align 8, !tbaa !52
  %792 = fadd double %748, %791
  store double %792, ptr %790, align 8, !tbaa !52
  br label %793

793:                                              ; preds = %786, %784, %730
  %794 = add i32 %734, 1
  %795 = zext i32 %794 to i64
  %796 = load i32, ptr %595, align 4, !tbaa !22
  %797 = zext i32 %796 to i64
  %798 = load ptr, ptr %116, align 8, !tbaa !72
  %799 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %798, i64 %797, i32 1
  %800 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %799, i64 0, i32 1
  %801 = load ptr, ptr %800, align 8, !tbaa !31
  %802 = load ptr, ptr %799, align 8, !tbaa !32
  %803 = ptrtoint ptr %801 to i64
  %804 = ptrtoint ptr %802 to i64
  %805 = sub i64 %803, %804
  %806 = ashr exact i64 %805, 4
  %807 = icmp eq i64 %806, %795
  br i1 %807, label %718, label %730

808:                                              ; preds = %720
  %809 = getelementptr inbounds %"struct.std::pair", ptr %727, i64 %710
  %810 = getelementptr inbounds %"struct.std::pair", ptr %727, i64 %710, i32 1
  %811 = load double, ptr %810, align 8, !tbaa !35
  %812 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %722, i64 %724, i32 2
  %813 = load double, ptr %812, align 8, !tbaa !48
  %814 = load i32, ptr %809, align 8, !tbaa !37
  %815 = load i32, ptr %4, align 8, !tbaa !61
  %816 = load ptr, ptr %136, align 8, !tbaa !58
  br label %817

817:                                              ; preds = %817, %808
  %818 = phi i32 [ %815, %808 ], [ %819, %817 ]
  %819 = add i32 %818, -1
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds i32, ptr %816, i64 %820
  %822 = load i32, ptr %821, align 4, !tbaa !22
  %823 = icmp ugt i32 %822, %814
  br i1 %823, label %817, label %824

824:                                              ; preds = %817
  %825 = sub i32 %814, %822
  %826 = zext i32 %825 to i64
  %827 = zext i32 %819 to i64
  %828 = load ptr, ptr %137, align 8, !tbaa !68
  %829 = getelementptr inbounds %"class.dealii::Vector", ptr %828, i64 %827, i32 3
  %830 = load ptr, ptr %829, align 8, !tbaa !49
  %831 = getelementptr inbounds float, ptr %830, i64 %826
  %832 = load float, ptr %831, align 4, !tbaa !33
  %833 = fpext float %832 to double
  %834 = fmul double %811, %705
  %835 = tail call double @llvm.fmuladd.f64(double %834, double %813, double %833)
  %836 = fptrunc double %835 to float
  store float %836, ptr %831, align 4, !tbaa !33
  br label %837

837:                                              ; preds = %720, %824
  %838 = add i32 %711, 1
  %839 = zext i32 %838 to i64
  %840 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %722, i64 %725, i32 1, i32 0, i32 0, i32 0, i32 1
  %841 = load ptr, ptr %840, align 8, !tbaa !31
  %842 = ptrtoint ptr %841 to i64
  %843 = ptrtoint ptr %727 to i64
  %844 = sub i64 %842, %843
  %845 = ashr exact i64 %844, 4
  %846 = icmp eq i64 %845, %839
  br i1 %846, label %847, label %706

847:                                              ; preds = %837
  %848 = load ptr, ptr %526, align 8, !tbaa !43
  %849 = load ptr, ptr %527, align 8, !tbaa !41
  %850 = getelementptr inbounds i64, ptr %849, i64 %532
  %851 = load i64, ptr %850, align 8, !tbaa !42
  %852 = load ptr, ptr %495, align 8, !tbaa !47
  %853 = add i64 %851, %586
  %854 = getelementptr inbounds i32, ptr %848, i64 %853
  %855 = load i32, ptr %854, align 4, !tbaa !22
  br label %856

856:                                              ; preds = %847, %703
  %857 = phi i32 [ %855, %847 ], [ %589, %703 ]
  %858 = phi ptr [ %852, %847 ], [ %599, %703 ]
  %859 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %858, i32 noundef %531, i32 noundef %857)
          to label %860 unwind label %864

860:                                              ; preds = %856
  %861 = icmp eq i64 %158, %594
  %862 = select i1 %861, double %50, double 0.000000e+00
  %863 = icmp eq i32 %859, -1
  br i1 %863, label %872, label %866

864:                                              ; preds = %856
  %865 = landingpad { ptr, i32 }
          cleanup
  br label %968

866:                                              ; preds = %860, %699
  %867 = phi i32 [ %698, %699 ], [ %859, %860 ]
  %868 = phi double [ 0.000000e+00, %699 ], [ %862, %860 ]
  %869 = load ptr, ptr %528, align 8, !tbaa !50
  %870 = zext i32 %867 to i64
  %871 = getelementptr inbounds double, ptr %869, i64 %870
  store double %868, ptr %871, align 8, !tbaa !52
  br label %872

872:                                              ; preds = %866, %860, %699
  %873 = add i32 %536, 1
  %874 = load ptr, ptr %527, align 8, !tbaa !41
  %875 = getelementptr inbounds i64, ptr %874, i64 %534
  %876 = load i64, ptr %875, align 8, !tbaa !42
  %877 = getelementptr inbounds i64, ptr %874, i64 %532
  %878 = load i64, ptr %877, align 8, !tbaa !42
  %879 = sub i64 %876, %878
  %880 = trunc i64 %879 to i32
  %881 = icmp ult i32 %873, %880
  br i1 %881, label %535, label %882

882:                                              ; preds = %872
  %883 = load i32, ptr %529, align 4, !tbaa !38
  %884 = icmp eq i32 %533, %883
  br i1 %884, label %885, label %887

885:                                              ; preds = %897, %887, %882
  %886 = phi i32 [ %533, %882 ], [ %888, %887 ], [ %883, %897 ]
  br label %530

887:                                              ; preds = %882, %897
  %888 = phi i32 [ %890, %897 ], [ %533, %882 ]
  %889 = phi i64 [ %893, %897 ], [ %876, %882 ]
  %890 = add i32 %888, 1
  %891 = zext i32 %890 to i64
  %892 = getelementptr inbounds i64, ptr %874, i64 %891
  %893 = load i64, ptr %892, align 8, !tbaa !42
  %894 = sub i64 %893, %889
  %895 = and i64 %894, 4294967295
  %896 = icmp eq i64 %895, 0
  br i1 %896, label %897, label %885

897:                                              ; preds = %887
  %898 = icmp eq i32 %890, %883
  br i1 %898, label %885, label %887, !llvm.loop !82

899:                                              ; preds = %939, %469
  %900 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %472, i64 %471
  %901 = load i32, ptr %900, align 8, !tbaa !24
  br label %902

902:                                              ; preds = %902, %899
  %903 = phi i32 [ %482, %899 ], [ %904, %902 ]
  %904 = add i32 %903, -1
  %905 = sext i32 %904 to i64
  %906 = getelementptr inbounds i32, ptr %483, i64 %905
  %907 = load i32, ptr %906, align 4, !tbaa !22
  %908 = icmp ugt i32 %907, %901
  br i1 %908, label %902, label %954

909:                                              ; preds = %484, %939
  %910 = phi i64 [ 0, %484 ], [ %952, %939 ]
  %911 = phi i32 [ 0, %484 ], [ %951, %939 ]
  br label %912

912:                                              ; preds = %912, %909
  %913 = phi i32 [ %482, %909 ], [ %914, %912 ]
  %914 = add i32 %913, -1
  %915 = sext i32 %914 to i64
  %916 = getelementptr inbounds i32, ptr %483, i64 %915
  %917 = load i32, ptr %916, align 4, !tbaa !22
  %918 = zext i32 %917 to i64
  %919 = icmp ult i64 %158, %918
  br i1 %919, label %912, label %920

920:                                              ; preds = %912
  %921 = sub i32 %170, %917
  %922 = zext i32 %921 to i64
  %923 = zext i32 %914 to i64
  %924 = getelementptr inbounds %"class.dealii::Vector", ptr %485, i64 %923, i32 3
  %925 = load ptr, ptr %924, align 8, !tbaa !49
  %926 = getelementptr inbounds float, ptr %925, i64 %922
  %927 = load float, ptr %926, align 4, !tbaa !33
  %928 = getelementptr inbounds %"struct.std::pair", ptr %476, i64 %910
  %929 = getelementptr inbounds %"struct.std::pair", ptr %476, i64 %910, i32 1
  %930 = load double, ptr %929, align 8, !tbaa !35
  %931 = load i32, ptr %928, align 8, !tbaa !37
  br label %932

932:                                              ; preds = %932, %920
  %933 = phi i32 [ %482, %920 ], [ %934, %932 ]
  %934 = add i32 %933, -1
  %935 = sext i32 %934 to i64
  %936 = getelementptr inbounds i32, ptr %483, i64 %935
  %937 = load i32, ptr %936, align 4, !tbaa !22
  %938 = icmp ugt i32 %937, %931
  br i1 %938, label %932, label %939

939:                                              ; preds = %932
  %940 = sub i32 %931, %937
  %941 = zext i32 %940 to i64
  %942 = zext i32 %934 to i64
  %943 = getelementptr inbounds %"class.dealii::Vector", ptr %485, i64 %942, i32 3
  %944 = load ptr, ptr %943, align 8, !tbaa !49
  %945 = getelementptr inbounds float, ptr %944, i64 %941
  %946 = fpext float %927 to double
  %947 = load float, ptr %945, align 4, !tbaa !33
  %948 = fpext float %947 to double
  %949 = tail call double @llvm.fmuladd.f64(double %946, double %930, double %948)
  %950 = fptrunc double %949 to float
  store float %950, ptr %945, align 4, !tbaa !33
  %951 = add i32 %911, 1
  %952 = zext i32 %951 to i64
  %953 = icmp eq i64 %480, %952
  br i1 %953, label %899, label %909

954:                                              ; preds = %902
  %955 = sub i32 %901, %907
  %956 = zext i32 %955 to i64
  %957 = zext i32 %904 to i64
  %958 = load ptr, ptr %137, align 8, !tbaa !68
  %959 = getelementptr inbounds %"class.dealii::Vector", ptr %958, i64 %957, i32 3
  %960 = load ptr, ptr %959, align 8, !tbaa !49
  %961 = getelementptr inbounds float, ptr %960, i64 %956
  store float 0.000000e+00, ptr %961, align 4, !tbaa !33
  br label %962

962:                                              ; preds = %272, %180, %468, %954
  %963 = add nuw nsw i64 %158, 1
  %964 = icmp eq i64 %963, %138
  br i1 %964, label %151, label %157

965:                                              ; preds = %577, %579, %728, %616, %275, %277, %319, %439, %155
  %966 = phi { ptr, i32 } [ %156, %155 ], [ %278, %277 ], [ %276, %275 ], [ %320, %319 ], [ %440, %439 ], [ %580, %579 ], [ %578, %577 ], [ %617, %616 ], [ %729, %728 ]
  %967 = icmp eq ptr %115, null
  br i1 %967, label %970, label %968

968:                                              ; preds = %701, %864, %965
  %969 = phi { ptr, i32 } [ %966, %965 ], [ %865, %864 ], [ %702, %701 ]
  tail call void @_ZdlPv(ptr noundef nonnull %115) #23
  br label %970

970:                                              ; preds = %968, %965
  %971 = phi { ptr, i32 } [ %966, %965 ], [ %969, %968 ]
  resume { ptr, i32 } %971
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIfEEvRKNS_12SparseMatrixIT_EERS4_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(36) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.dealii::Vector", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %4) #24
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %4, align 8, !tbaa !311
  %5 = getelementptr inbounds %"class.dealii::Vector", ptr %4, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, i8 0, i64 16, i1 false)
  invoke void @_ZNK6dealii16ConstraintMatrix8condenseIfNS_6VectorIfEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 8 dereferenceable(88) %4)
          to label %6 unwind label %12

6:                                                ; preds = %3
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %4, align 8, !tbaa !311
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %4, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !49
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  call void @_ZdaPv(ptr noundef nonnull %8) #23
  store ptr null, ptr %7, align 8, !tbaa !49
  br label %11

11:                                               ; preds = %6, %10
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %4) #24
  ret void

12:                                               ; preds = %3
  %13 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIfED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %4)
          to label %14 unwind label %15

14:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %4) #24
  resume { ptr, i32 } %13

15:                                               ; preds = %12
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  call void @__clang_call_terminate(ptr %17) #25
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIfED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #6 comdat align 2 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !311
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !49
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #23
  store ptr null, ptr %2, align 8, !tbaa !49
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIfEEvRNS_12SparseMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::Vector", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %3) #24
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !311
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %3, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %4, i8 0, i64 16, i1 false)
  invoke void @_ZNK6dealii16ConstraintMatrix8condenseIfNS_6VectorIfEEEEvRNS_12SparseMatrixIT_EERT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(88) %3)
          to label %5 unwind label %11

5:                                                ; preds = %2
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !311
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %3, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !49
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  call void @_ZdaPv(ptr noundef nonnull %7) #23
  store ptr null, ptr %6, align 8, !tbaa !49
  br label %10

10:                                               ; preds = %5, %9
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %3) #24
  ret void

11:                                               ; preds = %2
  %12 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIfED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %3)
          to label %13 unwind label %14

13:                                               ; preds = %11
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %3) #24
  resume { ptr, i32 } %12

14:                                               ; preds = %11
  %15 = landingpad { ptr, i32 }
          catch ptr null
  %16 = extractvalue { ptr, i32 } %15, 0
  call void @__clang_call_terminate(ptr %16) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIdEEvRKNS_12SparseMatrixIT_EERS4_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(36) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.dealii::Vector.35", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %4) #24
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %4, align 8, !tbaa !311
  %5 = getelementptr inbounds %"class.dealii::Vector.35", ptr %4, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, i8 0, i64 16, i1 false)
  invoke void @_ZNK6dealii16ConstraintMatrix8condenseIdNS_6VectorIdEEEEvRKNS_12SparseMatrixIT_EERKT0_RS6_RS9_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 8 dereferenceable(88) %4)
          to label %6 unwind label %12

6:                                                ; preds = %3
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %4, align 8, !tbaa !311
  %7 = getelementptr inbounds %"class.dealii::Vector.35", ptr %4, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !60
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  call void @_ZdaPv(ptr noundef nonnull %8) #23
  store ptr null, ptr %7, align 8, !tbaa !60
  br label %11

11:                                               ; preds = %6, %10
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %4)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %4) #24
  ret void

12:                                               ; preds = %3
  %13 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %4)
          to label %14 unwind label %15

14:                                               ; preds = %12
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %4) #24
  resume { ptr, i32 } %13

15:                                               ; preds = %12
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  call void @__clang_call_terminate(ptr %17) #25
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #6 comdat align 2 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !311
  %2 = getelementptr inbounds %"class.dealii::Vector.35", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !60
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #23
  store ptr null, ptr %2, align 8, !tbaa !60
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIdEEvRNS_12SparseMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::Vector.35", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %3) #24
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !311
  %4 = getelementptr inbounds %"class.dealii::Vector.35", ptr %3, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %4, i8 0, i64 16, i1 false)
  invoke void @_ZNK6dealii16ConstraintMatrix8condenseIdNS_6VectorIdEEEEvRNS_12SparseMatrixIT_EERT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 8 dereferenceable(88) %3)
          to label %5 unwind label %11

5:                                                ; preds = %2
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !311
  %6 = getelementptr inbounds %"class.dealii::Vector.35", ptr %3, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !60
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  call void @_ZdaPv(ptr noundef nonnull %7) #23
  store ptr null, ptr %6, align 8, !tbaa !60
  br label %10

10:                                               ; preds = %5, %9
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %3)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %3) #24
  ret void

11:                                               ; preds = %2
  %12 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %3)
          to label %13 unwind label %14

13:                                               ; preds = %11
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %3) #24
  resume { ptr, i32 } %12

14:                                               ; preds = %11
  %15 = landingpad { ptr, i32 }
          catch ptr null
  %16 = extractvalue { ptr, i32 } %15, 0
  call void @__clang_call_terminate(ptr %16) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIdEEvRNS_17BlockSparseMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(320) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::BlockVector", align 8
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %3) #24
  call void @_ZN6dealii11BlockVectorIdEC1Ejj(ptr noundef nonnull align 8 dereferenceable(128) %3, i32 noundef 0, i32 noundef 0)
  invoke void @_ZNK6dealii16ConstraintMatrix8condenseIdNS_11BlockVectorIdEEEEvRNS_17BlockSparseMatrixIT_EERT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(320) %1, ptr noundef nonnull align 8 dereferenceable(128) %3)
          to label %4 unwind label %5

4:                                                ; preds = %2
  call void @_ZN6dealii11BlockVectorIdED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %3)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %3) #24
  ret void

5:                                                ; preds = %2
  %6 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11BlockVectorIdED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %3)
          to label %7 unwind label %8

7:                                                ; preds = %5
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %3) #24
  resume { ptr, i32 } %6

8:                                                ; preds = %5
  %9 = landingpad { ptr, i32 }
          catch ptr null
  %10 = extractvalue { ptr, i32 } %9, 0
  call void @__clang_call_terminate(ptr %10) #25
  unreachable
}

declare void @_ZN6dealii11BlockVectorIdEC1Ejj(ptr noundef nonnull align 8 dereferenceable(128), i32 noundef, i32 noundef) unnamed_addr #5

declare void @_ZN6dealii11BlockVectorIdED1Ev(ptr noundef nonnull align 8 dereferenceable(128)) unnamed_addr #5

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix8condenseIfEEvRNS_17BlockSparseMatrixIT_EE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(320) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::BlockVector.46", align 8
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %3) #24
  call void @_ZN6dealii11BlockVectorIfEC1Ejj(ptr noundef nonnull align 8 dereferenceable(128) %3, i32 noundef 0, i32 noundef 0)
  invoke void @_ZNK6dealii16ConstraintMatrix8condenseIfNS_11BlockVectorIfEEEEvRNS_17BlockSparseMatrixIT_EERT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(320) %1, ptr noundef nonnull align 8 dereferenceable(128) %3)
          to label %4 unwind label %5

4:                                                ; preds = %2
  call void @_ZN6dealii11BlockVectorIfED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %3)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %3) #24
  ret void

5:                                                ; preds = %2
  %6 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11BlockVectorIfED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %3)
          to label %7 unwind label %8

7:                                                ; preds = %5
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %3) #24
  resume { ptr, i32 } %6

8:                                                ; preds = %5
  %9 = landingpad { ptr, i32 }
          catch ptr null
  %10 = extractvalue { ptr, i32 } %9, 0
  call void @__clang_call_terminate(ptr %10) #25
  unreachable
}

declare void @_ZN6dealii11BlockVectorIfEC1Ejj(ptr noundef nonnull align 8 dereferenceable(128), i32 noundef, i32 noundef) unnamed_addr #5

declare void @_ZN6dealii11BlockVectorIfED1Ev(ptr noundef nonnull align 8 dereferenceable(128)) unnamed_addr #5

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIdEEEEvRKNS_10FullMatrixIdEERKSt6vectorIjSaIjEERT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(36) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.dealii::Vector.35", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %5) #24
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !311
  %6 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  invoke void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %7 unwind label %13

7:                                                ; preds = %4
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !311
  %8 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !60
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  call void @_ZdaPv(ptr noundef nonnull %9) #23
  store ptr null, ptr %8, align 8, !tbaa !60
  br label %12

12:                                               ; preds = %7, %11
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #24
  ret void

13:                                               ; preds = %4
  %14 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %15 unwind label %16

15:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #24
  resume { ptr, i32 } %14

16:                                               ; preds = %13
  %17 = landingpad { ptr, i32 }
          catch ptr null
  %18 = extractvalue { ptr, i32 } %17, 0
  call void @__clang_call_terminate(ptr %18) #25
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::vector.178", align 8
  %8 = alloca %"struct.dealii::internals::distributing", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !53
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 1
  %14 = load i32, ptr %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %12, i1 %15, i1 false
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !313
  %19 = load ptr, ptr %3, align 8, !tbaa !58
  %20 = ptrtoint ptr %18 to i64
  %21 = ptrtoint ptr %19 to i64
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 2
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %57, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !314
  %29 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %30 = load i32, ptr %29, align 8, !tbaa !22
  %31 = add i32 %30, 1
  %32 = and i64 %23, 4294967295
  %33 = add nsw i64 %32, -1
  %34 = and i64 %23, 3
  %35 = icmp ult i64 %33, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %26
  %37 = sub nsw i64 %32, %34
  br label %107

38:                                               ; preds = %107, %26
  %39 = phi double [ undef, %26 ], [ %141, %107 ]
  %40 = phi i64 [ 0, %26 ], [ %142, %107 ]
  %41 = phi double [ 0.000000e+00, %26 ], [ %141, %107 ]
  %42 = icmp eq i64 %34, 0
  br i1 %42, label %57, label %43

43:                                               ; preds = %38, %43
  %44 = phi i64 [ %54, %43 ], [ %40, %38 ]
  %45 = phi double [ %53, %43 ], [ %41, %38 ]
  %46 = phi i64 [ %55, %43 ], [ 0, %38 ]
  %47 = trunc i64 %44 to i32
  %48 = mul i32 %31, %47
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds double, ptr %28, i64 %49
  %51 = load double, ptr %50, align 8, !tbaa !52
  %52 = tail call double @llvm.fabs.f64(double %51)
  %53 = fadd double %45, %52
  %54 = add nuw nsw i64 %44, 1
  %55 = add i64 %46, 1
  %56 = icmp eq i64 %55, %34
  br i1 %56, label %57, label %43, !llvm.loop !316

57:                                               ; preds = %38, %43, %6
  %58 = phi double [ 0.000000e+00, %6 ], [ %39, %38 ], [ %53, %43 ]
  %59 = uitofp i32 %24 to double
  %60 = fdiv double %58, %59
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %61 = and i64 %23, 4294967295
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #24
  store i32 -1, ptr %8, align 8, !tbaa !317
  %62 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 1
  store i32 -1, ptr %62, align 4, !tbaa !319
  %63 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 2
  store ptr null, ptr %63, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %148

67:                                               ; preds = %57
  %68 = shl nuw nsw i64 %61, 4
  %69 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %68) #21
          to label %70 unwind label %197

70:                                               ; preds = %67
  store ptr %69, ptr %7, align 8, !tbaa !321
  %71 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %69, i64 %61
  %72 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %71, ptr %72, align 8, !tbaa !323
  %73 = and i64 %23, 3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %70, %75
  %76 = phi ptr [ %82, %75 ], [ %69, %70 ]
  %77 = phi i64 [ %81, %75 ], [ %61, %70 ]
  %78 = phi i64 [ %83, %75 ], [ 0, %70 ]
  %79 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 0, i32 2
  store ptr null, ptr %79, align 8, !tbaa !320
  store i32 -1, ptr %76, align 8, !tbaa !317
  %80 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 0, i32 1
  store i32 -1, ptr %80, align 4, !tbaa !319
  %81 = add nsw i64 %77, -1
  %82 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 1
  %83 = add i64 %78, 1
  %84 = icmp eq i64 %83, %73
  br i1 %84, label %85, label %75, !llvm.loop !324

85:                                               ; preds = %75, %70
  %86 = phi ptr [ undef, %70 ], [ %82, %75 ]
  %87 = phi ptr [ %69, %70 ], [ %82, %75 ]
  %88 = phi i64 [ %61, %70 ], [ %81, %75 ]
  %89 = icmp ult i64 %61, 4
  br i1 %89, label %145, label %90

90:                                               ; preds = %85, %90
  %91 = phi ptr [ %105, %90 ], [ %87, %85 ]
  %92 = phi i64 [ %104, %90 ], [ %88, %85 ]
  %93 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 0, i32 2
  store ptr null, ptr %93, align 8, !tbaa !320
  store i32 -1, ptr %91, align 8, !tbaa !317
  %94 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 0, i32 1
  store i32 -1, ptr %94, align 4, !tbaa !319
  %95 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1
  %96 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1, i32 2
  store ptr null, ptr %96, align 8, !tbaa !320
  store i32 -1, ptr %95, align 8, !tbaa !317
  %97 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1, i32 1
  store i32 -1, ptr %97, align 4, !tbaa !319
  %98 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2
  %99 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2, i32 2
  store ptr null, ptr %99, align 8, !tbaa !320
  store i32 -1, ptr %98, align 8, !tbaa !317
  %100 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2, i32 1
  store i32 -1, ptr %100, align 4, !tbaa !319
  %101 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3
  %102 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3, i32 2
  store ptr null, ptr %102, align 8, !tbaa !320
  store i32 -1, ptr %101, align 8, !tbaa !317
  %103 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3, i32 1
  store i32 -1, ptr %103, align 4, !tbaa !319
  %104 = add nsw i64 %92, -4
  %105 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 4
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %145, label %90

107:                                              ; preds = %107, %36
  %108 = phi i64 [ 0, %36 ], [ %142, %107 ]
  %109 = phi double [ 0.000000e+00, %36 ], [ %141, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %143, %107 ]
  %111 = trunc i64 %108 to i32
  %112 = mul i32 %31, %111
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds double, ptr %28, i64 %113
  %115 = load double, ptr %114, align 8, !tbaa !52
  %116 = tail call double @llvm.fabs.f64(double %115)
  %117 = fadd double %109, %116
  %118 = trunc i64 %108 to i32
  %119 = or i32 %118, 1
  %120 = mul i32 %31, %119
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds double, ptr %28, i64 %121
  %123 = load double, ptr %122, align 8, !tbaa !52
  %124 = tail call double @llvm.fabs.f64(double %123)
  %125 = fadd double %117, %124
  %126 = trunc i64 %108 to i32
  %127 = or i32 %126, 2
  %128 = mul i32 %31, %127
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %28, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !52
  %132 = tail call double @llvm.fabs.f64(double %131)
  %133 = fadd double %125, %132
  %134 = trunc i64 %108 to i32
  %135 = or i32 %134, 3
  %136 = mul i32 %31, %135
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds double, ptr %28, i64 %137
  %139 = load double, ptr %138, align 8, !tbaa !52
  %140 = tail call double @llvm.fabs.f64(double %139)
  %141 = fadd double %133, %140
  %142 = add nuw nsw i64 %108, 4
  %143 = add i64 %110, 4
  %144 = icmp eq i64 %143, %37
  br i1 %144, label %38, label %107

145:                                              ; preds = %90, %85
  %146 = phi ptr [ %86, %85 ], [ %105, %90 ]
  %147 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %146, ptr %147, align 8, !tbaa !325
  br label %148

148:                                              ; preds = %145, %65
  %149 = phi ptr [ null, %65 ], [ %69, %145 ]
  %150 = phi ptr [ null, %65 ], [ %146, %145 ]
  %151 = phi ptr [ %66, %65 ], [ %147, %145 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br i1 %25, label %162, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %154 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %155 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %156 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %157 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %158 = and i64 %23, 4294967295
  br label %200

159:                                              ; preds = %307
  %160 = load ptr, ptr %151, align 8, !tbaa !21
  %161 = load ptr, ptr %7, align 8, !tbaa !321
  br label %162

162:                                              ; preds = %159, %148
  %163 = phi ptr [ %149, %148 ], [ %161, %159 ]
  %164 = phi ptr [ %150, %148 ], [ %160, %159 ]
  %165 = phi ptr [ null, %148 ], [ %309, %159 ]
  %166 = phi ptr [ null, %148 ], [ %310, %159 ]
  %167 = phi i32 [ 0, %148 ], [ %311, %159 ]
  %168 = zext i32 %167 to i64
  store i32 -1, ptr %9, align 8, !tbaa !317
  %169 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %169, align 4, !tbaa !319
  %170 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %170, align 8, !tbaa !320
  %171 = ptrtoint ptr %164 to i64
  %172 = ptrtoint ptr %163 to i64
  %173 = sub i64 %171, %172
  %174 = ashr exact i64 %173, 4
  %175 = icmp ult i64 %174, %168
  br i1 %175, label %176, label %178

176:                                              ; preds = %162
  %177 = sub nsw i64 %168, %174
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %164, i64 noundef %177, ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %318 unwind label %411

178:                                              ; preds = %162
  %179 = icmp ugt i64 %174, %168
  br i1 %179, label %180, label %318

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %163, i64 %168
  %182 = icmp eq ptr %164, %181
  br i1 %182, label %318, label %183

183:                                              ; preds = %180, %193
  %184 = phi ptr [ %194, %193 ], [ %181, %180 ]
  %185 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %184, i64 0, i32 2
  %186 = load ptr, ptr %185, align 8, !tbaa !320
  %187 = icmp eq ptr %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %183
  %189 = load ptr, ptr %186, align 8, !tbaa !32
  %190 = icmp eq ptr %189, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  tail call void @_ZdlPv(ptr noundef nonnull %189) #23
  br label %192

192:                                              ; preds = %191, %188
  tail call void @_ZdlPv(ptr noundef nonnull %186) #23
  store ptr null, ptr %185, align 8, !tbaa !320
  br label %193

193:                                              ; preds = %192, %183
  %194 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %184, i64 1
  %195 = icmp eq ptr %194, %164
  br i1 %195, label %196, label %183

196:                                              ; preds = %193
  store ptr %181, ptr %151, align 8, !tbaa !325
  br label %318

197:                                              ; preds = %67
  %198 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %8)
          to label %199 unwind label %925

199:                                              ; preds = %197
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br label %923

200:                                              ; preds = %152, %307
  %201 = phi i64 [ 0, %152 ], [ %312, %307 ]
  %202 = phi i32 [ 0, %152 ], [ %311, %307 ]
  %203 = phi ptr [ null, %152 ], [ %310, %307 ]
  %204 = phi ptr [ null, %152 ], [ %309, %307 ]
  %205 = phi ptr [ null, %152 ], [ %308, %307 ]
  %206 = load ptr, ptr %154, align 8, !tbaa !55
  %207 = load i32, ptr %155, align 8, !tbaa !57
  %208 = load ptr, ptr %153, align 8, !tbaa !55
  %209 = ptrtoint ptr %206 to i64
  %210 = ptrtoint ptr %208 to i64
  %211 = sub i64 %209, %210
  %212 = shl nsw i64 %211, 3
  %213 = zext i32 %207 to i64
  %214 = add nsw i64 %212, %213
  %215 = load ptr, ptr %3, align 8, !tbaa !58
  %216 = getelementptr inbounds i32, ptr %215, i64 %201
  %217 = load i32, ptr %216, align 4, !tbaa !22
  %218 = zext i32 %217 to i64
  %219 = icmp ugt i64 %214, %218
  br i1 %219, label %220, label %230

220:                                              ; preds = %200
  %221 = lshr i32 %217, 6
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds i64, ptr %208, i64 %222
  %224 = and i32 %217, 63
  %225 = zext i32 %224 to i64
  %226 = shl nuw i64 1, %225
  %227 = load i64, ptr %223, align 8, !tbaa !42
  %228 = and i64 %227, %226
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %237

230:                                              ; preds = %220, %200
  %231 = zext i32 %202 to i64
  %232 = load ptr, ptr %7, align 8, !tbaa !321
  %233 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %232, i64 %231
  store i32 %217, ptr %233, align 8, !tbaa !317
  %234 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %232, i64 %231, i32 1
  %235 = trunc i64 %201 to i32
  store i32 %235, ptr %234, align 4, !tbaa !319
  %236 = add i32 %202, 1
  br label %307

237:                                              ; preds = %220
  %238 = load ptr, ptr %156, align 8, !tbaa !21
  %239 = load ptr, ptr %157, align 8, !tbaa !21
  %240 = ptrtoint ptr %239 to i64
  %241 = ptrtoint ptr %238 to i64
  %242 = sub i64 %240, %241
  %243 = icmp sgt i64 %242, 0
  br i1 %243, label %244, label %259

244:                                              ; preds = %237
  %245 = udiv exact i64 %242, 40
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ %245, %244 ], [ %257, %246 ]
  %248 = phi ptr [ %238, %244 ], [ %256, %246 ]
  %249 = lshr i64 %247, 1
  %250 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %248, i64 %249
  %251 = load i32, ptr %250, align 8, !tbaa !24
  %252 = icmp ult i32 %251, %217
  %253 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %250, i64 1
  %254 = xor i64 %249, -1
  %255 = add nsw i64 %247, %254
  %256 = select i1 %252, ptr %253, ptr %248
  %257 = select i1 %252, i64 %255, i64 %249
  %258 = icmp sgt i64 %257, 0
  br i1 %258, label %246, label %259

259:                                              ; preds = %246, %237
  %260 = phi ptr [ %238, %237 ], [ %256, %246 ]
  %261 = icmp eq ptr %204, %205
  br i1 %261, label %265, label %262

262:                                              ; preds = %259
  %263 = trunc i64 %201 to i32
  store i32 %263, ptr %204, align 8
  %264 = getelementptr inbounds i8, ptr %204, i64 8
  store ptr %260, ptr %264, align 8
  br label %302

265:                                              ; preds = %259
  %266 = ptrtoint ptr %204 to i64
  %267 = ptrtoint ptr %203 to i64
  %268 = sub i64 %266, %267
  %269 = icmp eq i64 %268, 9223372036854775792
  br i1 %269, label %270, label %272

270:                                              ; preds = %265
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %271 unwind label %316

271:                                              ; preds = %270
  unreachable

272:                                              ; preds = %265
  %273 = ashr exact i64 %268, 4
  %274 = tail call i64 @llvm.umax.i64(i64 %273, i64 1)
  %275 = add i64 %274, %273
  %276 = icmp ult i64 %275, %273
  %277 = icmp ugt i64 %275, 576460752303423487
  %278 = or i1 %276, %277
  %279 = select i1 %278, i64 576460752303423487, i64 %275
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %284, label %281

281:                                              ; preds = %272
  %282 = shl nuw nsw i64 %279, 4
  %283 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %282) #21
          to label %284 unwind label %314

284:                                              ; preds = %281, %272
  %285 = phi ptr [ null, %272 ], [ %283, %281 ]
  %286 = getelementptr inbounds %"struct.std::pair.188", ptr %285, i64 %273
  %287 = trunc i64 %201 to i32
  store i32 %287, ptr %286, align 8
  %288 = getelementptr inbounds i8, ptr %286, i64 8
  store ptr %260, ptr %288, align 8
  %289 = icmp eq ptr %203, %204
  br i1 %289, label %296, label %290

290:                                              ; preds = %284, %290
  %291 = phi ptr [ %294, %290 ], [ %285, %284 ]
  %292 = phi ptr [ %293, %290 ], [ %203, %284 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %291, ptr noundef nonnull align 8 dereferenceable(16) %292, i64 16, i1 false)
  %293 = getelementptr inbounds %"struct.std::pair.188", ptr %292, i64 1
  %294 = getelementptr inbounds %"struct.std::pair.188", ptr %291, i64 1
  %295 = icmp eq ptr %293, %204
  br i1 %295, label %296, label %290

296:                                              ; preds = %290, %284
  %297 = phi ptr [ %285, %284 ], [ %294, %290 ]
  %298 = icmp eq ptr %203, null
  br i1 %298, label %300, label %299

299:                                              ; preds = %296
  tail call void @_ZdlPv(ptr noundef nonnull %203) #23
  br label %300

300:                                              ; preds = %299, %296
  %301 = getelementptr inbounds %"struct.std::pair.188", ptr %285, i64 %279
  br label %302

302:                                              ; preds = %300, %262
  %303 = phi ptr [ %301, %300 ], [ %205, %262 ]
  %304 = phi ptr [ %297, %300 ], [ %204, %262 ]
  %305 = phi ptr [ %285, %300 ], [ %203, %262 ]
  %306 = getelementptr inbounds %"struct.std::pair.188", ptr %304, i64 1
  br label %307

307:                                              ; preds = %302, %230
  %308 = phi ptr [ %303, %302 ], [ %205, %230 ]
  %309 = phi ptr [ %306, %302 ], [ %204, %230 ]
  %310 = phi ptr [ %305, %302 ], [ %203, %230 ]
  %311 = phi i32 [ %202, %302 ], [ %236, %230 ]
  %312 = add nuw nsw i64 %201, 1
  %313 = icmp eq i64 %312, %158
  br i1 %313, label %159, label %200

314:                                              ; preds = %281
  %315 = landingpad { ptr, i32 }
          cleanup
  br label %917

316:                                              ; preds = %270
  %317 = landingpad { ptr, i32 }
          cleanup
  br label %917

318:                                              ; preds = %196, %180, %178, %176
  %319 = load ptr, ptr %170, align 8, !tbaa !320
  %320 = icmp eq ptr %319, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %318
  %322 = load ptr, ptr %319, align 8, !tbaa !32
  %323 = icmp eq ptr %322, null
  br i1 %323, label %325, label %324

324:                                              ; preds = %321
  call void @_ZdlPv(ptr noundef nonnull %322) #23
  br label %325

325:                                              ; preds = %324, %321
  call void @_ZdlPv(ptr noundef nonnull %319) #23
  store ptr null, ptr %170, align 8, !tbaa !320
  br label %326

326:                                              ; preds = %325, %318
  %327 = load ptr, ptr %151, align 8, !tbaa !325
  %328 = load ptr, ptr %7, align 8, !tbaa !321
  %329 = ptrtoint ptr %327 to i64
  %330 = ptrtoint ptr %328 to i64
  %331 = sub i64 %329, %330
  %332 = lshr exact i64 %331, 4
  %333 = trunc i64 %332 to i32
  %334 = icmp ult i32 %333, 2
  br i1 %334, label %380, label %337

335:                                              ; preds = %376, %337
  %336 = icmp ult i32 %338, 4
  br i1 %336, label %380, label %337

337:                                              ; preds = %326, %335
  %338 = phi i32 [ %339, %335 ], [ %333, %326 ]
  %339 = lshr i32 %338, 1
  %340 = icmp ult i32 %339, %333
  br i1 %340, label %341, label %335

341:                                              ; preds = %337
  %342 = zext i32 %339 to i64
  br label %343

343:                                              ; preds = %376, %341
  %344 = phi i64 [ %342, %341 ], [ %377, %376 ]
  %345 = sub nuw nsw i64 %344, %342
  %346 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %344
  %347 = load <2 x i32>, ptr %346, align 8, !tbaa !22
  %348 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %345
  %349 = load i32, ptr %348, align 8, !tbaa !317
  %350 = extractelement <2 x i32> %347, i64 0
  %351 = icmp ugt i32 %349, %350
  br i1 %351, label %352, label %376

352:                                              ; preds = %343
  %353 = icmp ult i64 %344, %342
  %354 = trunc i64 %344 to i32
  br i1 %353, label %372, label %355

355:                                              ; preds = %352
  %356 = trunc i64 %345 to i32
  br label %357

357:                                              ; preds = %364, %355
  %358 = phi i32 [ %359, %364 ], [ %354, %355 ]
  %359 = phi i32 [ %370, %364 ], [ %356, %355 ]
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %360
  %362 = load i32, ptr %361, align 8, !tbaa !317
  %363 = icmp ugt i32 %362, %350
  br i1 %363, label %364, label %372

364:                                              ; preds = %357
  %365 = zext i32 %358 to i64
  %366 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %365
  store i32 %362, ptr %366, align 8, !tbaa !317
  %367 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %360, i32 1
  %368 = load i32, ptr %367, align 4, !tbaa !319
  %369 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %365, i32 1
  store i32 %368, ptr %369, align 4, !tbaa !319
  %370 = sub i32 %359, %339
  %371 = icmp ult i32 %359, %339
  br i1 %371, label %372, label %357

372:                                              ; preds = %364, %357, %352
  %373 = phi i32 [ %354, %352 ], [ %358, %357 ], [ %359, %364 ]
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %374
  store <2 x i32> %347, ptr %375, align 8, !tbaa !22
  br label %376

376:                                              ; preds = %372, %343
  %377 = add nuw nsw i64 %344, 1
  %378 = trunc i64 %377 to i32
  %379 = icmp eq i32 %333, %378
  br i1 %379, label %335, label %343

380:                                              ; preds = %335, %326
  %381 = ptrtoint ptr %165 to i64
  %382 = ptrtoint ptr %166 to i64
  %383 = sub i64 %381, %382
  %384 = ashr exact i64 %383, 4
  %385 = and i64 %383, 68719476720
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %399, label %387

387:                                              ; preds = %380
  %388 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %389 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %390 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %4, i64 0, i32 1
  %391 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %4, i64 0, i32 2
  %392 = and i64 %384, 4294967295
  br label %413

393:                                              ; preds = %473
  %394 = load ptr, ptr %151, align 8, !tbaa !325
  %395 = load ptr, ptr %7, align 8, !tbaa !321
  %396 = ptrtoint ptr %394 to i64
  %397 = ptrtoint ptr %395 to i64
  %398 = sub i64 %396, %397
  br label %399

399:                                              ; preds = %393, %380
  %400 = phi i64 [ %398, %393 ], [ %331, %380 ]
  %401 = phi i8 [ %430, %393 ], [ 0, %380 ]
  %402 = ashr exact i64 %400, 4
  %403 = and i64 %402, 4294967295
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %479, label %405

405:                                              ; preds = %399
  %406 = shl nuw nsw i64 %403, 2
  %407 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %406) #21
          to label %408 unwind label %501

408:                                              ; preds = %405
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %407, i8 0, i64 %406, i1 false), !tbaa !22
  %409 = shl nuw nsw i64 %403, 3
  %410 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %409) #21
          to label %478 unwind label %503

411:                                              ; preds = %176
  %412 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %917 unwind label %925

413:                                              ; preds = %387, %473
  %414 = phi i64 [ 0, %387 ], [ %474, %473 ]
  %415 = phi i8 [ 0, %387 ], [ %430, %473 ]
  %416 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %414
  %417 = load i32, ptr %416, align 8, !tbaa !326
  %418 = zext i32 %417 to i64
  %419 = load ptr, ptr %3, align 8, !tbaa !58
  %420 = getelementptr inbounds i32, ptr %419, i64 %418
  %421 = load i32, ptr %420, align 4, !tbaa !22
  %422 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %414, i32 1
  %423 = load ptr, ptr %422, align 8, !tbaa !328
  %424 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %423, i64 0, i32 1
  %425 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %423, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %426 = load ptr, ptr %425, align 8, !tbaa !31
  %427 = load ptr, ptr %424, align 8, !tbaa !32
  %428 = icmp eq ptr %426, %427
  br i1 %428, label %429, label %442

429:                                              ; preds = %450, %413
  %430 = phi i8 [ %415, %413 ], [ 1, %450 ]
  %431 = load ptr, ptr %388, align 8, !tbaa !314
  %432 = load i32, ptr %389, align 8, !tbaa !22
  %433 = add i32 %432, 1
  %434 = mul i32 %433, %417
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds double, ptr %431, i64 %435
  %437 = load double, ptr %436, align 8, !tbaa !52
  %438 = fcmp une double %437, 0.000000e+00
  %439 = call double @llvm.fabs.f64(double %437)
  %440 = select i1 %438, double %439, double %60
  %441 = fcmp oeq double %440, 0.000000e+00
  br i1 %441, label %473, label %462

442:                                              ; preds = %413, %450
  %443 = phi ptr [ %454, %450 ], [ %427, %413 ]
  %444 = phi i64 [ %452, %450 ], [ 0, %413 ]
  %445 = phi i32 [ %451, %450 ], [ 0, %413 ]
  %446 = getelementptr inbounds %"struct.std::pair", ptr %443, i64 %444
  %447 = load i32, ptr %446, align 8, !tbaa !37
  %448 = getelementptr inbounds %"struct.std::pair", ptr %443, i64 %444, i32 1
  %449 = load double, ptr %448, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %447, i32 %417, double %449)
          to label %450 unwind label %460

450:                                              ; preds = %442
  %451 = add i32 %445, 1
  %452 = zext i32 %451 to i64
  %453 = load ptr, ptr %425, align 8, !tbaa !31
  %454 = load ptr, ptr %424, align 8, !tbaa !32
  %455 = ptrtoint ptr %453 to i64
  %456 = ptrtoint ptr %454 to i64
  %457 = sub i64 %455, %456
  %458 = ashr exact i64 %457, 4
  %459 = icmp ugt i64 %458, %452
  br i1 %459, label %442, label %429

460:                                              ; preds = %442
  %461 = landingpad { ptr, i32 }
          cleanup
  br label %917

462:                                              ; preds = %429
  %463 = load ptr, ptr %390, align 8, !tbaa !47
  %464 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %463, i32 noundef %421, i32 noundef %421)
          to label %465 unwind label %476

465:                                              ; preds = %462
  %466 = icmp eq i32 %464, -1
  br i1 %466, label %473, label %467

467:                                              ; preds = %465
  %468 = load ptr, ptr %391, align 8, !tbaa !50
  %469 = zext i32 %464 to i64
  %470 = getelementptr inbounds double, ptr %468, i64 %469
  %471 = load double, ptr %470, align 8, !tbaa !52
  %472 = fadd double %440, %471
  store double %472, ptr %470, align 8, !tbaa !52
  br label %473

473:                                              ; preds = %467, %465, %429
  %474 = add nuw nsw i64 %414, 1
  %475 = icmp eq i64 %474, %392
  br i1 %475, label %393, label %413

476:                                              ; preds = %462
  %477 = landingpad { ptr, i32 }
          cleanup
  br label %917

478:                                              ; preds = %408
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %410, i8 0, i64 %409, i1 false), !tbaa !52
  br label %479

479:                                              ; preds = %478, %399
  %480 = phi ptr [ null, %399 ], [ %407, %478 ]
  %481 = phi ptr [ null, %399 ], [ %410, %478 ]
  %482 = and i64 %400, 68719476720
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %498, label %484

484:                                              ; preds = %479
  %485 = and i8 %401, 1
  %486 = icmp eq i8 %485, 0
  %487 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %488 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %489 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %490 = icmp eq ptr %165, %166
  %491 = ptrtoint ptr %480 to i64
  %492 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 3
  %493 = and i64 %402, 4294967295
  %494 = and i64 %402, 1
  %495 = icmp eq i64 %493, 1
  %496 = sub nsw i64 %493, %494
  %497 = icmp eq i64 %494, 0
  br label %505

498:                                              ; preds = %879, %479
  %499 = icmp eq ptr %481, null
  br i1 %499, label %882, label %500

500:                                              ; preds = %498
  call void @_ZdlPv(ptr noundef nonnull %481) #23
  br label %882

501:                                              ; preds = %405
  %502 = landingpad { ptr, i32 }
          cleanup
  br label %917

503:                                              ; preds = %408
  %504 = landingpad { ptr, i32 }
          cleanup
  br label %914

505:                                              ; preds = %484, %879
  %506 = phi i64 [ 0, %484 ], [ %880, %879 ]
  %507 = load ptr, ptr %7, align 8, !tbaa !321
  %508 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %506
  %509 = load i32, ptr %508, align 8, !tbaa !317
  %510 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %506, i32 1
  %511 = load i32, ptr %510, align 4, !tbaa !319
  br i1 %486, label %512, label %596

512:                                              ; preds = %505
  %513 = load ptr, ptr %487, align 8, !tbaa !314
  %514 = load i32, ptr %488, align 8, !tbaa !22
  %515 = mul i32 %514, %511
  %516 = zext i32 %515 to i64
  %517 = getelementptr inbounds double, ptr %513, i64 %516
  br i1 %495, label %518, label %536

518:                                              ; preds = %567, %512
  %519 = phi ptr [ undef, %512 ], [ %568, %567 ]
  %520 = phi i64 [ 0, %512 ], [ %570, %567 ]
  %521 = phi ptr [ %481, %512 ], [ %569, %567 ]
  %522 = phi ptr [ %480, %512 ], [ %568, %567 ]
  br i1 %497, label %534, label %523

523:                                              ; preds = %518
  %524 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %520, i32 1
  %525 = load i32, ptr %524, align 4, !tbaa !319
  %526 = zext i32 %525 to i64
  %527 = getelementptr inbounds double, ptr %517, i64 %526
  %528 = load double, ptr %527, align 8, !tbaa !52
  %529 = fcmp une double %528, 0.000000e+00
  br i1 %529, label %530, label %534

530:                                              ; preds = %523
  %531 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %520
  store double %528, ptr %521, align 8, !tbaa !52
  %532 = load i32, ptr %531, align 8, !tbaa !317
  %533 = getelementptr inbounds i32, ptr %522, i64 1
  store i32 %532, ptr %522, align 4, !tbaa !22
  br label %534

534:                                              ; preds = %523, %530, %518
  %535 = phi ptr [ %519, %518 ], [ %533, %530 ], [ %522, %523 ]
  br i1 %16, label %858, label %573

536:                                              ; preds = %512, %567
  %537 = phi i64 [ %570, %567 ], [ 0, %512 ]
  %538 = phi ptr [ %569, %567 ], [ %481, %512 ]
  %539 = phi ptr [ %568, %567 ], [ %480, %512 ]
  %540 = phi i64 [ %571, %567 ], [ 0, %512 ]
  %541 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %537, i32 1
  %542 = load i32, ptr %541, align 4, !tbaa !319
  %543 = zext i32 %542 to i64
  %544 = getelementptr inbounds double, ptr %517, i64 %543
  %545 = load double, ptr %544, align 8, !tbaa !52
  %546 = fcmp une double %545, 0.000000e+00
  br i1 %546, label %547, label %552

547:                                              ; preds = %536
  %548 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %537
  %549 = getelementptr inbounds double, ptr %538, i64 1
  store double %545, ptr %538, align 8, !tbaa !52
  %550 = load i32, ptr %548, align 8, !tbaa !317
  %551 = getelementptr inbounds i32, ptr %539, i64 1
  store i32 %550, ptr %539, align 4, !tbaa !22
  br label %552

552:                                              ; preds = %547, %536
  %553 = phi ptr [ %551, %547 ], [ %539, %536 ]
  %554 = phi ptr [ %549, %547 ], [ %538, %536 ]
  %555 = or i64 %537, 1
  %556 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %555, i32 1
  %557 = load i32, ptr %556, align 4, !tbaa !319
  %558 = zext i32 %557 to i64
  %559 = getelementptr inbounds double, ptr %517, i64 %558
  %560 = load double, ptr %559, align 8, !tbaa !52
  %561 = fcmp une double %560, 0.000000e+00
  br i1 %561, label %562, label %567

562:                                              ; preds = %552
  %563 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %555
  %564 = getelementptr inbounds double, ptr %554, i64 1
  store double %560, ptr %554, align 8, !tbaa !52
  %565 = load i32, ptr %563, align 8, !tbaa !317
  %566 = getelementptr inbounds i32, ptr %553, i64 1
  store i32 %565, ptr %553, align 4, !tbaa !22
  br label %567

567:                                              ; preds = %562, %552
  %568 = phi ptr [ %566, %562 ], [ %553, %552 ]
  %569 = phi ptr [ %564, %562 ], [ %554, %552 ]
  %570 = add nuw nsw i64 %537, 2
  %571 = add i64 %540, 2
  %572 = icmp eq i64 %571, %496
  br i1 %572, label %518, label %536

573:                                              ; preds = %534
  %574 = load ptr, ptr %489, align 8, !tbaa !60
  %575 = zext i32 %511 to i64
  %576 = getelementptr inbounds double, ptr %574, i64 %575
  %577 = load double, ptr %576, align 8, !tbaa !52
  br i1 %490, label %858, label %578

578:                                              ; preds = %573, %578
  %579 = phi i64 [ %594, %578 ], [ 0, %573 ]
  %580 = phi i32 [ %593, %578 ], [ 0, %573 ]
  %581 = phi double [ %592, %578 ], [ %577, %573 ]
  %582 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %579
  %583 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %579, i32 1
  %584 = load ptr, ptr %583, align 8, !tbaa !328
  %585 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %584, i64 0, i32 2
  %586 = load double, ptr %585, align 8, !tbaa !48
  %587 = load i32, ptr %582, align 8, !tbaa !326
  %588 = zext i32 %587 to i64
  %589 = getelementptr inbounds double, ptr %517, i64 %588
  %590 = load double, ptr %589, align 8, !tbaa !52
  %591 = fneg double %586
  %592 = call double @llvm.fmuladd.f64(double %591, double %590, double %581)
  %593 = add i32 %580, 1
  %594 = zext i32 %593 to i64
  %595 = icmp ugt i64 %384, %594
  br i1 %595, label %578, label %858

596:                                              ; preds = %505
  %597 = icmp eq i32 %511, -1
  %598 = load ptr, ptr %487, align 8
  %599 = load i32, ptr %488, align 8
  %600 = mul i32 %599, %511
  %601 = zext i32 %600 to i64
  %602 = getelementptr inbounds double, ptr %598, i64 %601
  %603 = select i1 %597, ptr null, ptr %602
  %604 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %506, i32 2
  %605 = load ptr, ptr %604, align 8, !tbaa !320
  %606 = icmp eq ptr %605, null
  %607 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %605, i64 0, i32 1
  br label %609

608:                                              ; preds = %777
  br i1 %16, label %858, label %782

609:                                              ; preds = %596, %777
  %610 = phi i64 [ 0, %596 ], [ %780, %777 ]
  %611 = phi ptr [ %481, %596 ], [ %779, %777 ]
  %612 = phi ptr [ %480, %596 ], [ %778, %777 ]
  %613 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %610
  %614 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %610, i32 1
  %615 = load i32, ptr %614, align 4, !tbaa !319
  br i1 %597, label %651, label %616

616:                                              ; preds = %609
  %617 = icmp eq i32 %615, -1
  br i1 %617, label %622, label %618

618:                                              ; preds = %616
  %619 = zext i32 %615 to i64
  %620 = getelementptr inbounds double, ptr %602, i64 %619
  %621 = load double, ptr %620, align 8, !tbaa !52
  br label %622

622:                                              ; preds = %616, %618
  %623 = phi double [ %621, %618 ], [ 0.000000e+00, %616 ]
  %624 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %610, i32 2
  %625 = load ptr, ptr %624, align 8, !tbaa !320
  %626 = icmp eq ptr %625, null
  br i1 %626, label %651, label %627

627:                                              ; preds = %622
  %628 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %625, i64 0, i32 1
  %629 = load ptr, ptr %628, align 8, !tbaa !31
  %630 = load ptr, ptr %625, align 8, !tbaa !32
  %631 = ptrtoint ptr %629 to i64
  %632 = ptrtoint ptr %630 to i64
  %633 = sub i64 %631, %632
  %634 = ashr exact i64 %633, 4
  %635 = icmp eq ptr %629, %630
  br i1 %635, label %651, label %636

636:                                              ; preds = %627, %636
  %637 = phi i64 [ %649, %636 ], [ 0, %627 ]
  %638 = phi i32 [ %648, %636 ], [ 0, %627 ]
  %639 = phi double [ %647, %636 ], [ %623, %627 ]
  %640 = getelementptr inbounds %"struct.std::pair", ptr %630, i64 %637
  %641 = load i32, ptr %640, align 8, !tbaa !37
  %642 = zext i32 %641 to i64
  %643 = getelementptr inbounds double, ptr %603, i64 %642
  %644 = load double, ptr %643, align 8, !tbaa !52
  %645 = getelementptr inbounds %"struct.std::pair", ptr %630, i64 %637, i32 1
  %646 = load double, ptr %645, align 8, !tbaa !35
  %647 = call double @llvm.fmuladd.f64(double %644, double %646, double %639)
  %648 = add i32 %638, 1
  %649 = zext i32 %648 to i64
  %650 = icmp ugt i64 %634, %649
  br i1 %650, label %636, label %651

651:                                              ; preds = %636, %627, %609, %622
  %652 = phi double [ %623, %622 ], [ 0.000000e+00, %609 ], [ %623, %627 ], [ %647, %636 ]
  br i1 %606, label %770, label %653

653:                                              ; preds = %651
  %654 = load ptr, ptr %607, align 8, !tbaa !31
  %655 = load ptr, ptr %605, align 8, !tbaa !32
  %656 = ptrtoint ptr %654 to i64
  %657 = ptrtoint ptr %655 to i64
  %658 = sub i64 %656, %657
  %659 = ashr exact i64 %658, 4
  %660 = icmp eq ptr %654, %655
  br i1 %660, label %770, label %661

661:                                              ; preds = %653
  %662 = icmp eq i32 %615, -1
  %663 = load ptr, ptr %487, align 8
  %664 = load i32, ptr %488, align 8
  %665 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %507, i64 %610, i32 2
  %666 = load ptr, ptr %665, align 8, !tbaa !320
  %667 = icmp eq ptr %666, null
  br i1 %667, label %668, label %696

668:                                              ; preds = %661
  br i1 %662, label %669, label %679

669:                                              ; preds = %668, %669
  %670 = phi i64 [ %677, %669 ], [ 0, %668 ]
  %671 = phi i32 [ %676, %669 ], [ 0, %668 ]
  %672 = phi double [ %675, %669 ], [ %652, %668 ]
  %673 = getelementptr inbounds %"struct.std::pair", ptr %655, i64 %670, i32 1
  %674 = load double, ptr %673, align 8, !tbaa !35
  %675 = call double @llvm.fmuladd.f64(double %674, double 0.000000e+00, double %672)
  %676 = add i32 %671, 1
  %677 = zext i32 %676 to i64
  %678 = icmp ugt i64 %659, %677
  br i1 %678, label %669, label %770

679:                                              ; preds = %668, %679
  %680 = phi i64 [ %694, %679 ], [ 0, %668 ]
  %681 = phi i32 [ %693, %679 ], [ 0, %668 ]
  %682 = phi double [ %692, %679 ], [ %652, %668 ]
  %683 = getelementptr inbounds %"struct.std::pair", ptr %655, i64 %680
  %684 = load i32, ptr %683, align 8, !tbaa !37
  %685 = mul i32 %664, %684
  %686 = add i32 %685, %615
  %687 = zext i32 %686 to i64
  %688 = getelementptr inbounds double, ptr %663, i64 %687
  %689 = load double, ptr %688, align 8, !tbaa !52
  %690 = getelementptr inbounds %"struct.std::pair", ptr %655, i64 %680, i32 1
  %691 = load double, ptr %690, align 8, !tbaa !35
  %692 = call double @llvm.fmuladd.f64(double %689, double %691, double %682)
  %693 = add i32 %681, 1
  %694 = zext i32 %693 to i64
  %695 = icmp ugt i64 %659, %694
  br i1 %695, label %679, label %770

696:                                              ; preds = %661
  %697 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %666, i64 0, i32 1
  %698 = load ptr, ptr %697, align 8, !tbaa !31
  %699 = load ptr, ptr %666, align 8, !tbaa !32
  %700 = ptrtoint ptr %698 to i64
  %701 = ptrtoint ptr %699 to i64
  %702 = sub i64 %700, %701
  %703 = ashr exact i64 %702, 4
  %704 = icmp eq ptr %698, %699
  br i1 %704, label %742, label %705

705:                                              ; preds = %696, %735
  %706 = phi i64 [ %740, %735 ], [ 0, %696 ]
  %707 = phi i32 [ %739, %735 ], [ 0, %696 ]
  %708 = phi double [ %738, %735 ], [ %652, %696 ]
  %709 = getelementptr inbounds %"struct.std::pair", ptr %655, i64 %706
  %710 = load i32, ptr %709, align 8, !tbaa !37
  %711 = mul i32 %664, %710
  br i1 %662, label %717, label %712

712:                                              ; preds = %705
  %713 = add i32 %711, %615
  %714 = zext i32 %713 to i64
  %715 = getelementptr inbounds double, ptr %663, i64 %714
  %716 = load double, ptr %715, align 8, !tbaa !52
  br label %717

717:                                              ; preds = %705, %712
  %718 = phi double [ %716, %712 ], [ 0.000000e+00, %705 ]
  br label %719

719:                                              ; preds = %717, %719
  %720 = phi i64 [ %733, %719 ], [ 0, %717 ]
  %721 = phi i32 [ %732, %719 ], [ 0, %717 ]
  %722 = phi double [ %731, %719 ], [ %718, %717 ]
  %723 = getelementptr inbounds %"struct.std::pair", ptr %699, i64 %720
  %724 = load i32, ptr %723, align 8, !tbaa !37
  %725 = add i32 %711, %724
  %726 = zext i32 %725 to i64
  %727 = getelementptr inbounds double, ptr %663, i64 %726
  %728 = load double, ptr %727, align 8, !tbaa !52
  %729 = getelementptr inbounds %"struct.std::pair", ptr %699, i64 %720, i32 1
  %730 = load double, ptr %729, align 8, !tbaa !35
  %731 = call double @llvm.fmuladd.f64(double %728, double %730, double %722)
  %732 = add i32 %721, 1
  %733 = zext i32 %732 to i64
  %734 = icmp ugt i64 %703, %733
  br i1 %734, label %719, label %735

735:                                              ; preds = %719
  %736 = getelementptr inbounds %"struct.std::pair", ptr %655, i64 %706, i32 1
  %737 = load double, ptr %736, align 8, !tbaa !35
  %738 = call double @llvm.fmuladd.f64(double %731, double %737, double %708)
  %739 = add i32 %707, 1
  %740 = zext i32 %739 to i64
  %741 = icmp ugt i64 %659, %740
  br i1 %741, label %705, label %770

742:                                              ; preds = %696
  br i1 %662, label %743, label %753

743:                                              ; preds = %742, %743
  %744 = phi i64 [ %751, %743 ], [ 0, %742 ]
  %745 = phi i32 [ %750, %743 ], [ 0, %742 ]
  %746 = phi double [ %749, %743 ], [ %652, %742 ]
  %747 = getelementptr inbounds %"struct.std::pair", ptr %655, i64 %744, i32 1
  %748 = load double, ptr %747, align 8, !tbaa !35
  %749 = call double @llvm.fmuladd.f64(double %748, double 0.000000e+00, double %746)
  %750 = add i32 %745, 1
  %751 = zext i32 %750 to i64
  %752 = icmp ugt i64 %659, %751
  br i1 %752, label %743, label %770

753:                                              ; preds = %742, %753
  %754 = phi i64 [ %768, %753 ], [ 0, %742 ]
  %755 = phi i32 [ %767, %753 ], [ 0, %742 ]
  %756 = phi double [ %766, %753 ], [ %652, %742 ]
  %757 = getelementptr inbounds %"struct.std::pair", ptr %655, i64 %754
  %758 = load i32, ptr %757, align 8, !tbaa !37
  %759 = mul i32 %664, %758
  %760 = add i32 %759, %615
  %761 = zext i32 %760 to i64
  %762 = getelementptr inbounds double, ptr %663, i64 %761
  %763 = load double, ptr %762, align 8, !tbaa !52
  %764 = getelementptr inbounds %"struct.std::pair", ptr %655, i64 %754, i32 1
  %765 = load double, ptr %764, align 8, !tbaa !35
  %766 = call double @llvm.fmuladd.f64(double %763, double %765, double %756)
  %767 = add i32 %755, 1
  %768 = zext i32 %767 to i64
  %769 = icmp ugt i64 %659, %768
  br i1 %769, label %753, label %770

770:                                              ; preds = %735, %753, %743, %679, %669, %653, %651
  %771 = phi double [ %652, %651 ], [ %652, %653 ], [ %675, %669 ], [ %692, %679 ], [ %749, %743 ], [ %766, %753 ], [ %738, %735 ]
  %772 = fcmp une double %771, 0.000000e+00
  br i1 %772, label %773, label %777

773:                                              ; preds = %770
  %774 = getelementptr inbounds double, ptr %611, i64 1
  store double %771, ptr %611, align 8, !tbaa !52
  %775 = load i32, ptr %613, align 8, !tbaa !317
  %776 = getelementptr inbounds i32, ptr %612, i64 1
  store i32 %775, ptr %612, align 4, !tbaa !22
  br label %777

777:                                              ; preds = %773, %770
  %778 = phi ptr [ %776, %773 ], [ %612, %770 ]
  %779 = phi ptr [ %774, %773 ], [ %611, %770 ]
  %780 = add nuw nsw i64 %610, 1
  %781 = icmp eq i64 %780, %493
  br i1 %781, label %608, label %609

782:                                              ; preds = %608
  br i1 %597, label %806, label %783

783:                                              ; preds = %782
  %784 = load ptr, ptr %489, align 8, !tbaa !60
  %785 = zext i32 %511 to i64
  %786 = getelementptr inbounds double, ptr %784, i64 %785
  %787 = load double, ptr %786, align 8, !tbaa !52
  br i1 %490, label %806, label %788

788:                                              ; preds = %783, %788
  %789 = phi i64 [ %804, %788 ], [ 0, %783 ]
  %790 = phi i32 [ %803, %788 ], [ 0, %783 ]
  %791 = phi double [ %802, %788 ], [ %787, %783 ]
  %792 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %789
  %793 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %789, i32 1
  %794 = load ptr, ptr %793, align 8, !tbaa !328
  %795 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %794, i64 0, i32 2
  %796 = load double, ptr %795, align 8, !tbaa !48
  %797 = load i32, ptr %792, align 8, !tbaa !326
  %798 = zext i32 %797 to i64
  %799 = getelementptr inbounds double, ptr %603, i64 %798
  %800 = load double, ptr %799, align 8, !tbaa !52
  %801 = fneg double %796
  %802 = call double @llvm.fmuladd.f64(double %801, double %800, double %791)
  %803 = add i32 %790, 1
  %804 = zext i32 %803 to i64
  %805 = icmp ugt i64 %384, %804
  br i1 %805, label %788, label %806

806:                                              ; preds = %788, %783, %782
  %807 = phi double [ 0.000000e+00, %782 ], [ %787, %783 ], [ %802, %788 ]
  br i1 %606, label %858, label %808

808:                                              ; preds = %806
  %809 = load ptr, ptr %607, align 8, !tbaa !31
  %810 = load ptr, ptr %605, align 8, !tbaa !32
  %811 = ptrtoint ptr %809 to i64
  %812 = ptrtoint ptr %810 to i64
  %813 = sub i64 %811, %812
  %814 = ashr exact i64 %813, 4
  %815 = icmp eq ptr %809, %810
  br i1 %815, label %858, label %816

816:                                              ; preds = %808
  %817 = load ptr, ptr %489, align 8, !tbaa !60
  %818 = load ptr, ptr %487, align 8
  %819 = load i32, ptr %488, align 8
  br label %820

820:                                              ; preds = %816, %831
  %821 = phi i64 [ 0, %816 ], [ %837, %831 ]
  %822 = phi i32 [ 0, %816 ], [ %836, %831 ]
  %823 = phi double [ %807, %816 ], [ %835, %831 ]
  %824 = getelementptr inbounds %"struct.std::pair", ptr %810, i64 %821
  %825 = load i32, ptr %824, align 8, !tbaa !37
  %826 = zext i32 %825 to i64
  %827 = getelementptr inbounds double, ptr %817, i64 %826
  %828 = load double, ptr %827, align 8, !tbaa !52
  br i1 %490, label %831, label %829

829:                                              ; preds = %820
  %830 = mul i32 %819, %825
  br label %839

831:                                              ; preds = %839, %820
  %832 = phi double [ %828, %820 ], [ %854, %839 ]
  %833 = getelementptr inbounds %"struct.std::pair", ptr %810, i64 %821, i32 1
  %834 = load double, ptr %833, align 8, !tbaa !35
  %835 = call double @llvm.fmuladd.f64(double %832, double %834, double %823)
  %836 = add i32 %822, 1
  %837 = zext i32 %836 to i64
  %838 = icmp ugt i64 %814, %837
  br i1 %838, label %820, label %858

839:                                              ; preds = %829, %839
  %840 = phi i64 [ 0, %829 ], [ %856, %839 ]
  %841 = phi i32 [ 0, %829 ], [ %855, %839 ]
  %842 = phi double [ %828, %829 ], [ %854, %839 ]
  %843 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %840
  %844 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %840, i32 1
  %845 = load ptr, ptr %844, align 8, !tbaa !328
  %846 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %845, i64 0, i32 2
  %847 = load double, ptr %846, align 8, !tbaa !48
  %848 = load i32, ptr %843, align 8, !tbaa !326
  %849 = add i32 %830, %848
  %850 = zext i32 %849 to i64
  %851 = getelementptr inbounds double, ptr %818, i64 %850
  %852 = load double, ptr %851, align 8, !tbaa !52
  %853 = fneg double %847
  %854 = call double @llvm.fmuladd.f64(double %853, double %852, double %842)
  %855 = add i32 %841, 1
  %856 = zext i32 %855 to i64
  %857 = icmp ugt i64 %384, %856
  br i1 %857, label %839, label %831

858:                                              ; preds = %831, %578, %808, %573, %608, %806, %534
  %859 = phi ptr [ %535, %534 ], [ %778, %806 ], [ %778, %608 ], [ %535, %573 ], [ %778, %808 ], [ %535, %578 ], [ %778, %831 ]
  %860 = phi double [ 0.000000e+00, %534 ], [ %807, %806 ], [ 0.000000e+00, %608 ], [ %577, %573 ], [ %807, %808 ], [ %592, %578 ], [ %835, %831 ]
  %861 = ptrtoint ptr %859 to i64
  %862 = sub i64 %861, %491
  %863 = lshr exact i64 %862, 2
  %864 = trunc i64 %863 to i32
  %865 = icmp eq i32 %864, 0
  br i1 %865, label %871, label %866

866:                                              ; preds = %858
  invoke void @_ZN6dealii12SparseMatrixIdE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %4, i32 noundef %509, i32 noundef %864, ptr noundef nonnull %480, ptr noundef nonnull %481, i1 noundef zeroext false, i1 noundef zeroext true)
          to label %871 unwind label %867

867:                                              ; preds = %866
  %868 = landingpad { ptr, i32 }
          cleanup
  %869 = icmp eq ptr %481, null
  br i1 %869, label %912, label %870

870:                                              ; preds = %867
  call void @_ZdlPv(ptr noundef nonnull %481) #23
  br label %912

871:                                              ; preds = %866, %858
  %872 = fcmp une double %860, 0.000000e+00
  br i1 %872, label %873, label %879

873:                                              ; preds = %871
  %874 = load ptr, ptr %492, align 8, !tbaa !60
  %875 = zext i32 %509 to i64
  %876 = getelementptr inbounds double, ptr %874, i64 %875
  %877 = load double, ptr %876, align 8, !tbaa !52
  %878 = fadd double %860, %877
  store double %878, ptr %876, align 8, !tbaa !52
  br label %879

879:                                              ; preds = %873, %871
  %880 = add nuw nsw i64 %506, 1
  %881 = icmp eq i64 %880, %493
  br i1 %881, label %498, label %505

882:                                              ; preds = %500, %498
  %883 = icmp eq ptr %480, null
  br i1 %883, label %885, label %884

884:                                              ; preds = %882
  call void @_ZdlPv(ptr noundef nonnull %480) #23
  br label %885

885:                                              ; preds = %884, %882
  %886 = icmp eq ptr %166, null
  br i1 %886, label %888, label %887

887:                                              ; preds = %885
  call void @_ZdlPv(ptr noundef nonnull %166) #23
  br label %888

888:                                              ; preds = %887, %885
  %889 = load ptr, ptr %7, align 8, !tbaa !321
  %890 = load ptr, ptr %151, align 8, !tbaa !325
  %891 = icmp eq ptr %889, %890
  br i1 %891, label %907, label %892

892:                                              ; preds = %888, %902
  %893 = phi ptr [ %903, %902 ], [ %889, %888 ]
  %894 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %893, i64 0, i32 2
  %895 = load ptr, ptr %894, align 8, !tbaa !320
  %896 = icmp eq ptr %895, null
  br i1 %896, label %902, label %897

897:                                              ; preds = %892
  %898 = load ptr, ptr %895, align 8, !tbaa !32
  %899 = icmp eq ptr %898, null
  br i1 %899, label %901, label %900

900:                                              ; preds = %897
  call void @_ZdlPv(ptr noundef nonnull %898) #23
  br label %901

901:                                              ; preds = %900, %897
  call void @_ZdlPv(ptr noundef nonnull %895) #23
  store ptr null, ptr %894, align 8, !tbaa !320
  br label %902

902:                                              ; preds = %901, %892
  %903 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %893, i64 1
  %904 = icmp eq ptr %903, %890
  br i1 %904, label %905, label %892

905:                                              ; preds = %902
  %906 = load ptr, ptr %7, align 8, !tbaa !321
  br label %907

907:                                              ; preds = %905, %888
  %908 = phi ptr [ %906, %905 ], [ %889, %888 ]
  %909 = icmp eq ptr %908, null
  br i1 %909, label %911, label %910

910:                                              ; preds = %907
  call void @_ZdlPv(ptr noundef nonnull %908) #23
  br label %911

911:                                              ; preds = %907, %910
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  ret void

912:                                              ; preds = %870, %867
  %913 = icmp eq ptr %480, null
  br i1 %913, label %917, label %914

914:                                              ; preds = %503, %912
  %915 = phi { ptr, i32 } [ %504, %503 ], [ %868, %912 ]
  %916 = phi ptr [ %407, %503 ], [ %480, %912 ]
  call void @_ZdlPv(ptr noundef nonnull %916) #23
  br label %917

917:                                              ; preds = %314, %316, %476, %460, %914, %912, %501, %411
  %918 = phi ptr [ %166, %411 ], [ %166, %460 ], [ %166, %476 ], [ %166, %501 ], [ %166, %912 ], [ %166, %914 ], [ %203, %314 ], [ %203, %316 ]
  %919 = phi { ptr, i32 } [ %412, %411 ], [ %461, %460 ], [ %477, %476 ], [ %502, %501 ], [ %868, %912 ], [ %915, %914 ], [ %315, %314 ], [ %317, %316 ]
  %920 = icmp eq ptr %918, null
  br i1 %920, label %922, label %921

921:                                              ; preds = %917
  call void @_ZdlPv(ptr noundef nonnull %918) #23
  br label %922

922:                                              ; preds = %921, %917
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %923 unwind label %925

923:                                              ; preds = %922, %199
  %924 = phi { ptr, i32 } [ %919, %922 ], [ %198, %199 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  resume { ptr, i32 } %924

925:                                              ; preds = %922, %411, %197
  %926 = landingpad { ptr, i32 }
          catch ptr null
  %927 = extractvalue { ptr, i32 } %926, 0
  call void @__clang_call_terminate(ptr %927) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(88) %5)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIfEEEEvRKNS_10FullMatrixIdEERKSt6vectorIjSaIjEERT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(36) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.dealii::Vector.35", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %5) #24
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !311
  %6 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  invoke void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIfEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %7 unwind label %13

7:                                                ; preds = %4
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !311
  %8 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !60
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  call void @_ZdaPv(ptr noundef nonnull %9) #23
  store ptr null, ptr %8, align 8, !tbaa !60
  br label %12

12:                                               ; preds = %7, %11
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #24
  ret void

13:                                               ; preds = %4
  %14 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %15 unwind label %16

15:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #24
  resume { ptr, i32 } %14

16:                                               ; preds = %13
  %17 = landingpad { ptr, i32 }
          catch ptr null
  %18 = extractvalue { ptr, i32 } %17, 0
  call void @__clang_call_terminate(ptr %18) #25
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIfEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::vector.178", align 8
  %8 = alloca %"struct.dealii::internals::distributing", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !53
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 1
  %14 = load i32, ptr %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %12, i1 %15, i1 false
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !313
  %19 = load ptr, ptr %3, align 8, !tbaa !58
  %20 = ptrtoint ptr %18 to i64
  %21 = ptrtoint ptr %19 to i64
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 2
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %57, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !314
  %29 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %30 = load i32, ptr %29, align 8, !tbaa !22
  %31 = add i32 %30, 1
  %32 = and i64 %23, 4294967295
  %33 = add nsw i64 %32, -1
  %34 = and i64 %23, 3
  %35 = icmp ult i64 %33, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %26
  %37 = sub nsw i64 %32, %34
  br label %107

38:                                               ; preds = %107, %26
  %39 = phi double [ undef, %26 ], [ %141, %107 ]
  %40 = phi i64 [ 0, %26 ], [ %142, %107 ]
  %41 = phi double [ 0.000000e+00, %26 ], [ %141, %107 ]
  %42 = icmp eq i64 %34, 0
  br i1 %42, label %57, label %43

43:                                               ; preds = %38, %43
  %44 = phi i64 [ %54, %43 ], [ %40, %38 ]
  %45 = phi double [ %53, %43 ], [ %41, %38 ]
  %46 = phi i64 [ %55, %43 ], [ 0, %38 ]
  %47 = trunc i64 %44 to i32
  %48 = mul i32 %31, %47
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds double, ptr %28, i64 %49
  %51 = load double, ptr %50, align 8, !tbaa !52
  %52 = tail call double @llvm.fabs.f64(double %51)
  %53 = fadd double %45, %52
  %54 = add nuw nsw i64 %44, 1
  %55 = add i64 %46, 1
  %56 = icmp eq i64 %55, %34
  br i1 %56, label %57, label %43, !llvm.loop !329

57:                                               ; preds = %38, %43, %6
  %58 = phi double [ 0.000000e+00, %6 ], [ %39, %38 ], [ %53, %43 ]
  %59 = uitofp i32 %24 to double
  %60 = fdiv double %58, %59
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %61 = and i64 %23, 4294967295
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #24
  store i32 -1, ptr %8, align 8, !tbaa !317
  %62 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 1
  store i32 -1, ptr %62, align 4, !tbaa !319
  %63 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 2
  store ptr null, ptr %63, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %148

67:                                               ; preds = %57
  %68 = shl nuw nsw i64 %61, 4
  %69 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %68) #21
          to label %70 unwind label %197

70:                                               ; preds = %67
  store ptr %69, ptr %7, align 8, !tbaa !321
  %71 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %69, i64 %61
  %72 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %71, ptr %72, align 8, !tbaa !323
  %73 = and i64 %23, 3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %70, %75
  %76 = phi ptr [ %82, %75 ], [ %69, %70 ]
  %77 = phi i64 [ %81, %75 ], [ %61, %70 ]
  %78 = phi i64 [ %83, %75 ], [ 0, %70 ]
  %79 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 0, i32 2
  store ptr null, ptr %79, align 8, !tbaa !320
  store i32 -1, ptr %76, align 8, !tbaa !317
  %80 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 0, i32 1
  store i32 -1, ptr %80, align 4, !tbaa !319
  %81 = add nsw i64 %77, -1
  %82 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 1
  %83 = add i64 %78, 1
  %84 = icmp eq i64 %83, %73
  br i1 %84, label %85, label %75, !llvm.loop !330

85:                                               ; preds = %75, %70
  %86 = phi ptr [ undef, %70 ], [ %82, %75 ]
  %87 = phi ptr [ %69, %70 ], [ %82, %75 ]
  %88 = phi i64 [ %61, %70 ], [ %81, %75 ]
  %89 = icmp ult i64 %61, 4
  br i1 %89, label %145, label %90

90:                                               ; preds = %85, %90
  %91 = phi ptr [ %105, %90 ], [ %87, %85 ]
  %92 = phi i64 [ %104, %90 ], [ %88, %85 ]
  %93 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 0, i32 2
  store ptr null, ptr %93, align 8, !tbaa !320
  store i32 -1, ptr %91, align 8, !tbaa !317
  %94 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 0, i32 1
  store i32 -1, ptr %94, align 4, !tbaa !319
  %95 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1
  %96 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1, i32 2
  store ptr null, ptr %96, align 8, !tbaa !320
  store i32 -1, ptr %95, align 8, !tbaa !317
  %97 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1, i32 1
  store i32 -1, ptr %97, align 4, !tbaa !319
  %98 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2
  %99 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2, i32 2
  store ptr null, ptr %99, align 8, !tbaa !320
  store i32 -1, ptr %98, align 8, !tbaa !317
  %100 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2, i32 1
  store i32 -1, ptr %100, align 4, !tbaa !319
  %101 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3
  %102 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3, i32 2
  store ptr null, ptr %102, align 8, !tbaa !320
  store i32 -1, ptr %101, align 8, !tbaa !317
  %103 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3, i32 1
  store i32 -1, ptr %103, align 4, !tbaa !319
  %104 = add nsw i64 %92, -4
  %105 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 4
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %145, label %90

107:                                              ; preds = %107, %36
  %108 = phi i64 [ 0, %36 ], [ %142, %107 ]
  %109 = phi double [ 0.000000e+00, %36 ], [ %141, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %143, %107 ]
  %111 = trunc i64 %108 to i32
  %112 = mul i32 %31, %111
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds double, ptr %28, i64 %113
  %115 = load double, ptr %114, align 8, !tbaa !52
  %116 = tail call double @llvm.fabs.f64(double %115)
  %117 = fadd double %109, %116
  %118 = trunc i64 %108 to i32
  %119 = or i32 %118, 1
  %120 = mul i32 %31, %119
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds double, ptr %28, i64 %121
  %123 = load double, ptr %122, align 8, !tbaa !52
  %124 = tail call double @llvm.fabs.f64(double %123)
  %125 = fadd double %117, %124
  %126 = trunc i64 %108 to i32
  %127 = or i32 %126, 2
  %128 = mul i32 %31, %127
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %28, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !52
  %132 = tail call double @llvm.fabs.f64(double %131)
  %133 = fadd double %125, %132
  %134 = trunc i64 %108 to i32
  %135 = or i32 %134, 3
  %136 = mul i32 %31, %135
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds double, ptr %28, i64 %137
  %139 = load double, ptr %138, align 8, !tbaa !52
  %140 = tail call double @llvm.fabs.f64(double %139)
  %141 = fadd double %133, %140
  %142 = add nuw nsw i64 %108, 4
  %143 = add i64 %110, 4
  %144 = icmp eq i64 %143, %37
  br i1 %144, label %38, label %107

145:                                              ; preds = %90, %85
  %146 = phi ptr [ %86, %85 ], [ %105, %90 ]
  %147 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %146, ptr %147, align 8, !tbaa !325
  br label %148

148:                                              ; preds = %145, %65
  %149 = phi ptr [ null, %65 ], [ %69, %145 ]
  %150 = phi ptr [ null, %65 ], [ %146, %145 ]
  %151 = phi ptr [ %66, %65 ], [ %147, %145 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br i1 %25, label %162, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %154 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %155 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %156 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %157 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %158 = and i64 %23, 4294967295
  br label %200

159:                                              ; preds = %307
  %160 = load ptr, ptr %151, align 8, !tbaa !21
  %161 = load ptr, ptr %7, align 8, !tbaa !321
  br label %162

162:                                              ; preds = %159, %148
  %163 = phi ptr [ %149, %148 ], [ %161, %159 ]
  %164 = phi ptr [ %150, %148 ], [ %160, %159 ]
  %165 = phi ptr [ null, %148 ], [ %309, %159 ]
  %166 = phi ptr [ null, %148 ], [ %310, %159 ]
  %167 = phi i32 [ 0, %148 ], [ %311, %159 ]
  %168 = zext i32 %167 to i64
  store i32 -1, ptr %9, align 8, !tbaa !317
  %169 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %169, align 4, !tbaa !319
  %170 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %170, align 8, !tbaa !320
  %171 = ptrtoint ptr %164 to i64
  %172 = ptrtoint ptr %163 to i64
  %173 = sub i64 %171, %172
  %174 = ashr exact i64 %173, 4
  %175 = icmp ult i64 %174, %168
  br i1 %175, label %176, label %178

176:                                              ; preds = %162
  %177 = sub nsw i64 %168, %174
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %164, i64 noundef %177, ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %318 unwind label %411

178:                                              ; preds = %162
  %179 = icmp ugt i64 %174, %168
  br i1 %179, label %180, label %318

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %163, i64 %168
  %182 = icmp eq ptr %164, %181
  br i1 %182, label %318, label %183

183:                                              ; preds = %180, %193
  %184 = phi ptr [ %194, %193 ], [ %181, %180 ]
  %185 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %184, i64 0, i32 2
  %186 = load ptr, ptr %185, align 8, !tbaa !320
  %187 = icmp eq ptr %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %183
  %189 = load ptr, ptr %186, align 8, !tbaa !32
  %190 = icmp eq ptr %189, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  tail call void @_ZdlPv(ptr noundef nonnull %189) #23
  br label %192

192:                                              ; preds = %191, %188
  tail call void @_ZdlPv(ptr noundef nonnull %186) #23
  store ptr null, ptr %185, align 8, !tbaa !320
  br label %193

193:                                              ; preds = %192, %183
  %194 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %184, i64 1
  %195 = icmp eq ptr %194, %164
  br i1 %195, label %196, label %183

196:                                              ; preds = %193
  store ptr %181, ptr %151, align 8, !tbaa !325
  br label %318

197:                                              ; preds = %67
  %198 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %8)
          to label %199 unwind label %926

199:                                              ; preds = %197
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br label %924

200:                                              ; preds = %152, %307
  %201 = phi i64 [ 0, %152 ], [ %312, %307 ]
  %202 = phi i32 [ 0, %152 ], [ %311, %307 ]
  %203 = phi ptr [ null, %152 ], [ %310, %307 ]
  %204 = phi ptr [ null, %152 ], [ %309, %307 ]
  %205 = phi ptr [ null, %152 ], [ %308, %307 ]
  %206 = load ptr, ptr %154, align 8, !tbaa !55
  %207 = load i32, ptr %155, align 8, !tbaa !57
  %208 = load ptr, ptr %153, align 8, !tbaa !55
  %209 = ptrtoint ptr %206 to i64
  %210 = ptrtoint ptr %208 to i64
  %211 = sub i64 %209, %210
  %212 = shl nsw i64 %211, 3
  %213 = zext i32 %207 to i64
  %214 = add nsw i64 %212, %213
  %215 = load ptr, ptr %3, align 8, !tbaa !58
  %216 = getelementptr inbounds i32, ptr %215, i64 %201
  %217 = load i32, ptr %216, align 4, !tbaa !22
  %218 = zext i32 %217 to i64
  %219 = icmp ugt i64 %214, %218
  br i1 %219, label %220, label %230

220:                                              ; preds = %200
  %221 = lshr i32 %217, 6
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds i64, ptr %208, i64 %222
  %224 = and i32 %217, 63
  %225 = zext i32 %224 to i64
  %226 = shl nuw i64 1, %225
  %227 = load i64, ptr %223, align 8, !tbaa !42
  %228 = and i64 %227, %226
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %237

230:                                              ; preds = %220, %200
  %231 = zext i32 %202 to i64
  %232 = load ptr, ptr %7, align 8, !tbaa !321
  %233 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %232, i64 %231
  store i32 %217, ptr %233, align 8, !tbaa !317
  %234 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %232, i64 %231, i32 1
  %235 = trunc i64 %201 to i32
  store i32 %235, ptr %234, align 4, !tbaa !319
  %236 = add i32 %202, 1
  br label %307

237:                                              ; preds = %220
  %238 = load ptr, ptr %156, align 8, !tbaa !21
  %239 = load ptr, ptr %157, align 8, !tbaa !21
  %240 = ptrtoint ptr %239 to i64
  %241 = ptrtoint ptr %238 to i64
  %242 = sub i64 %240, %241
  %243 = icmp sgt i64 %242, 0
  br i1 %243, label %244, label %259

244:                                              ; preds = %237
  %245 = udiv exact i64 %242, 40
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ %245, %244 ], [ %257, %246 ]
  %248 = phi ptr [ %238, %244 ], [ %256, %246 ]
  %249 = lshr i64 %247, 1
  %250 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %248, i64 %249
  %251 = load i32, ptr %250, align 8, !tbaa !24
  %252 = icmp ult i32 %251, %217
  %253 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %250, i64 1
  %254 = xor i64 %249, -1
  %255 = add nsw i64 %247, %254
  %256 = select i1 %252, ptr %253, ptr %248
  %257 = select i1 %252, i64 %255, i64 %249
  %258 = icmp sgt i64 %257, 0
  br i1 %258, label %246, label %259

259:                                              ; preds = %246, %237
  %260 = phi ptr [ %238, %237 ], [ %256, %246 ]
  %261 = icmp eq ptr %204, %205
  br i1 %261, label %265, label %262

262:                                              ; preds = %259
  %263 = trunc i64 %201 to i32
  store i32 %263, ptr %204, align 8
  %264 = getelementptr inbounds i8, ptr %204, i64 8
  store ptr %260, ptr %264, align 8
  br label %302

265:                                              ; preds = %259
  %266 = ptrtoint ptr %204 to i64
  %267 = ptrtoint ptr %203 to i64
  %268 = sub i64 %266, %267
  %269 = icmp eq i64 %268, 9223372036854775792
  br i1 %269, label %270, label %272

270:                                              ; preds = %265
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %271 unwind label %316

271:                                              ; preds = %270
  unreachable

272:                                              ; preds = %265
  %273 = ashr exact i64 %268, 4
  %274 = tail call i64 @llvm.umax.i64(i64 %273, i64 1)
  %275 = add i64 %274, %273
  %276 = icmp ult i64 %275, %273
  %277 = icmp ugt i64 %275, 576460752303423487
  %278 = or i1 %276, %277
  %279 = select i1 %278, i64 576460752303423487, i64 %275
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %284, label %281

281:                                              ; preds = %272
  %282 = shl nuw nsw i64 %279, 4
  %283 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %282) #21
          to label %284 unwind label %314

284:                                              ; preds = %281, %272
  %285 = phi ptr [ null, %272 ], [ %283, %281 ]
  %286 = getelementptr inbounds %"struct.std::pair.188", ptr %285, i64 %273
  %287 = trunc i64 %201 to i32
  store i32 %287, ptr %286, align 8
  %288 = getelementptr inbounds i8, ptr %286, i64 8
  store ptr %260, ptr %288, align 8
  %289 = icmp eq ptr %203, %204
  br i1 %289, label %296, label %290

290:                                              ; preds = %284, %290
  %291 = phi ptr [ %294, %290 ], [ %285, %284 ]
  %292 = phi ptr [ %293, %290 ], [ %203, %284 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %291, ptr noundef nonnull align 8 dereferenceable(16) %292, i64 16, i1 false)
  %293 = getelementptr inbounds %"struct.std::pair.188", ptr %292, i64 1
  %294 = getelementptr inbounds %"struct.std::pair.188", ptr %291, i64 1
  %295 = icmp eq ptr %293, %204
  br i1 %295, label %296, label %290

296:                                              ; preds = %290, %284
  %297 = phi ptr [ %285, %284 ], [ %294, %290 ]
  %298 = icmp eq ptr %203, null
  br i1 %298, label %300, label %299

299:                                              ; preds = %296
  tail call void @_ZdlPv(ptr noundef nonnull %203) #23
  br label %300

300:                                              ; preds = %299, %296
  %301 = getelementptr inbounds %"struct.std::pair.188", ptr %285, i64 %279
  br label %302

302:                                              ; preds = %300, %262
  %303 = phi ptr [ %301, %300 ], [ %205, %262 ]
  %304 = phi ptr [ %297, %300 ], [ %204, %262 ]
  %305 = phi ptr [ %285, %300 ], [ %203, %262 ]
  %306 = getelementptr inbounds %"struct.std::pair.188", ptr %304, i64 1
  br label %307

307:                                              ; preds = %302, %230
  %308 = phi ptr [ %303, %302 ], [ %205, %230 ]
  %309 = phi ptr [ %306, %302 ], [ %204, %230 ]
  %310 = phi ptr [ %305, %302 ], [ %203, %230 ]
  %311 = phi i32 [ %202, %302 ], [ %236, %230 ]
  %312 = add nuw nsw i64 %201, 1
  %313 = icmp eq i64 %312, %158
  br i1 %313, label %159, label %200

314:                                              ; preds = %281
  %315 = landingpad { ptr, i32 }
          cleanup
  br label %918

316:                                              ; preds = %270
  %317 = landingpad { ptr, i32 }
          cleanup
  br label %918

318:                                              ; preds = %196, %180, %178, %176
  %319 = load ptr, ptr %170, align 8, !tbaa !320
  %320 = icmp eq ptr %319, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %318
  %322 = load ptr, ptr %319, align 8, !tbaa !32
  %323 = icmp eq ptr %322, null
  br i1 %323, label %325, label %324

324:                                              ; preds = %321
  call void @_ZdlPv(ptr noundef nonnull %322) #23
  br label %325

325:                                              ; preds = %324, %321
  call void @_ZdlPv(ptr noundef nonnull %319) #23
  store ptr null, ptr %170, align 8, !tbaa !320
  br label %326

326:                                              ; preds = %325, %318
  %327 = load ptr, ptr %151, align 8, !tbaa !325
  %328 = load ptr, ptr %7, align 8, !tbaa !321
  %329 = ptrtoint ptr %327 to i64
  %330 = ptrtoint ptr %328 to i64
  %331 = sub i64 %329, %330
  %332 = lshr exact i64 %331, 4
  %333 = trunc i64 %332 to i32
  %334 = icmp ult i32 %333, 2
  br i1 %334, label %380, label %337

335:                                              ; preds = %376, %337
  %336 = icmp ult i32 %338, 4
  br i1 %336, label %380, label %337

337:                                              ; preds = %326, %335
  %338 = phi i32 [ %339, %335 ], [ %333, %326 ]
  %339 = lshr i32 %338, 1
  %340 = icmp ult i32 %339, %333
  br i1 %340, label %341, label %335

341:                                              ; preds = %337
  %342 = zext i32 %339 to i64
  br label %343

343:                                              ; preds = %376, %341
  %344 = phi i64 [ %342, %341 ], [ %377, %376 ]
  %345 = sub nuw nsw i64 %344, %342
  %346 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %344
  %347 = load <2 x i32>, ptr %346, align 8, !tbaa !22
  %348 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %345
  %349 = load i32, ptr %348, align 8, !tbaa !317
  %350 = extractelement <2 x i32> %347, i64 0
  %351 = icmp ugt i32 %349, %350
  br i1 %351, label %352, label %376

352:                                              ; preds = %343
  %353 = icmp ult i64 %344, %342
  %354 = trunc i64 %344 to i32
  br i1 %353, label %372, label %355

355:                                              ; preds = %352
  %356 = trunc i64 %345 to i32
  br label %357

357:                                              ; preds = %364, %355
  %358 = phi i32 [ %359, %364 ], [ %354, %355 ]
  %359 = phi i32 [ %370, %364 ], [ %356, %355 ]
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %360
  %362 = load i32, ptr %361, align 8, !tbaa !317
  %363 = icmp ugt i32 %362, %350
  br i1 %363, label %364, label %372

364:                                              ; preds = %357
  %365 = zext i32 %358 to i64
  %366 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %365
  store i32 %362, ptr %366, align 8, !tbaa !317
  %367 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %360, i32 1
  %368 = load i32, ptr %367, align 4, !tbaa !319
  %369 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %365, i32 1
  store i32 %368, ptr %369, align 4, !tbaa !319
  %370 = sub i32 %359, %339
  %371 = icmp ult i32 %359, %339
  br i1 %371, label %372, label %357

372:                                              ; preds = %364, %357, %352
  %373 = phi i32 [ %354, %352 ], [ %358, %357 ], [ %359, %364 ]
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %374
  store <2 x i32> %347, ptr %375, align 8, !tbaa !22
  br label %376

376:                                              ; preds = %372, %343
  %377 = add nuw nsw i64 %344, 1
  %378 = trunc i64 %377 to i32
  %379 = icmp eq i32 %333, %378
  br i1 %379, label %335, label %343

380:                                              ; preds = %335, %326
  %381 = ptrtoint ptr %165 to i64
  %382 = ptrtoint ptr %166 to i64
  %383 = sub i64 %381, %382
  %384 = ashr exact i64 %383, 4
  %385 = and i64 %383, 68719476720
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %399, label %387

387:                                              ; preds = %380
  %388 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %389 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %390 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %4, i64 0, i32 1
  %391 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %4, i64 0, i32 2
  %392 = and i64 %384, 4294967295
  br label %413

393:                                              ; preds = %474
  %394 = load ptr, ptr %151, align 8, !tbaa !325
  %395 = load ptr, ptr %7, align 8, !tbaa !321
  %396 = ptrtoint ptr %394 to i64
  %397 = ptrtoint ptr %395 to i64
  %398 = sub i64 %396, %397
  br label %399

399:                                              ; preds = %393, %380
  %400 = phi i64 [ %398, %393 ], [ %331, %380 ]
  %401 = phi i8 [ %430, %393 ], [ 0, %380 ]
  %402 = ashr exact i64 %400, 4
  %403 = and i64 %402, 4294967295
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %480, label %405

405:                                              ; preds = %399
  %406 = shl nuw nsw i64 %403, 2
  %407 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %406) #21
          to label %408 unwind label %502

408:                                              ; preds = %405
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %407, i8 0, i64 %406, i1 false), !tbaa !22
  %409 = shl nuw nsw i64 %403, 3
  %410 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %409) #21
          to label %479 unwind label %504

411:                                              ; preds = %176
  %412 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %918 unwind label %926

413:                                              ; preds = %387, %474
  %414 = phi i64 [ 0, %387 ], [ %475, %474 ]
  %415 = phi i8 [ 0, %387 ], [ %430, %474 ]
  %416 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %414
  %417 = load i32, ptr %416, align 8, !tbaa !326
  %418 = zext i32 %417 to i64
  %419 = load ptr, ptr %3, align 8, !tbaa !58
  %420 = getelementptr inbounds i32, ptr %419, i64 %418
  %421 = load i32, ptr %420, align 4, !tbaa !22
  %422 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %414, i32 1
  %423 = load ptr, ptr %422, align 8, !tbaa !328
  %424 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %423, i64 0, i32 1
  %425 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %423, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %426 = load ptr, ptr %425, align 8, !tbaa !31
  %427 = load ptr, ptr %424, align 8, !tbaa !32
  %428 = icmp eq ptr %426, %427
  br i1 %428, label %429, label %443

429:                                              ; preds = %451, %413
  %430 = phi i8 [ %415, %413 ], [ 1, %451 ]
  %431 = load ptr, ptr %388, align 8, !tbaa !314
  %432 = load i32, ptr %389, align 8, !tbaa !22
  %433 = add i32 %432, 1
  %434 = mul i32 %433, %417
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds double, ptr %431, i64 %435
  %437 = load double, ptr %436, align 8, !tbaa !52
  %438 = fcmp une double %437, 0.000000e+00
  %439 = call double @llvm.fabs.f64(double %437)
  %440 = select i1 %438, double %439, double %60
  %441 = fptrunc double %440 to float
  %442 = fcmp oeq float %441, 0.000000e+00
  br i1 %442, label %474, label %463

443:                                              ; preds = %413, %451
  %444 = phi ptr [ %455, %451 ], [ %427, %413 ]
  %445 = phi i64 [ %453, %451 ], [ 0, %413 ]
  %446 = phi i32 [ %452, %451 ], [ 0, %413 ]
  %447 = getelementptr inbounds %"struct.std::pair", ptr %444, i64 %445
  %448 = load i32, ptr %447, align 8, !tbaa !37
  %449 = getelementptr inbounds %"struct.std::pair", ptr %444, i64 %445, i32 1
  %450 = load double, ptr %449, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %448, i32 %417, double %450)
          to label %451 unwind label %461

451:                                              ; preds = %443
  %452 = add i32 %446, 1
  %453 = zext i32 %452 to i64
  %454 = load ptr, ptr %425, align 8, !tbaa !31
  %455 = load ptr, ptr %424, align 8, !tbaa !32
  %456 = ptrtoint ptr %454 to i64
  %457 = ptrtoint ptr %455 to i64
  %458 = sub i64 %456, %457
  %459 = ashr exact i64 %458, 4
  %460 = icmp ugt i64 %459, %453
  br i1 %460, label %443, label %429

461:                                              ; preds = %443
  %462 = landingpad { ptr, i32 }
          cleanup
  br label %918

463:                                              ; preds = %429
  %464 = load ptr, ptr %390, align 8, !tbaa !47
  %465 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %464, i32 noundef %421, i32 noundef %421)
          to label %466 unwind label %477

466:                                              ; preds = %463
  %467 = icmp eq i32 %465, -1
  br i1 %467, label %474, label %468

468:                                              ; preds = %466
  %469 = load ptr, ptr %391, align 8, !tbaa !44
  %470 = zext i32 %465 to i64
  %471 = getelementptr inbounds float, ptr %469, i64 %470
  %472 = load float, ptr %471, align 4, !tbaa !33
  %473 = fadd float %472, %441
  store float %473, ptr %471, align 4, !tbaa !33
  br label %474

474:                                              ; preds = %468, %466, %429
  %475 = add nuw nsw i64 %414, 1
  %476 = icmp eq i64 %475, %392
  br i1 %476, label %393, label %413

477:                                              ; preds = %463
  %478 = landingpad { ptr, i32 }
          cleanup
  br label %918

479:                                              ; preds = %408
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %410, i8 0, i64 %409, i1 false), !tbaa !52
  br label %480

480:                                              ; preds = %479, %399
  %481 = phi ptr [ null, %399 ], [ %407, %479 ]
  %482 = phi ptr [ null, %399 ], [ %410, %479 ]
  %483 = and i64 %400, 68719476720
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %499, label %485

485:                                              ; preds = %480
  %486 = and i8 %401, 1
  %487 = icmp eq i8 %486, 0
  %488 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %489 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %490 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %491 = icmp eq ptr %165, %166
  %492 = ptrtoint ptr %481 to i64
  %493 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 3
  %494 = and i64 %402, 4294967295
  %495 = and i64 %402, 1
  %496 = icmp eq i64 %494, 1
  %497 = sub nsw i64 %494, %495
  %498 = icmp eq i64 %495, 0
  br label %506

499:                                              ; preds = %880, %480
  %500 = icmp eq ptr %482, null
  br i1 %500, label %883, label %501

501:                                              ; preds = %499
  call void @_ZdlPv(ptr noundef nonnull %482) #23
  br label %883

502:                                              ; preds = %405
  %503 = landingpad { ptr, i32 }
          cleanup
  br label %918

504:                                              ; preds = %408
  %505 = landingpad { ptr, i32 }
          cleanup
  br label %915

506:                                              ; preds = %485, %880
  %507 = phi i64 [ 0, %485 ], [ %881, %880 ]
  %508 = load ptr, ptr %7, align 8, !tbaa !321
  %509 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %507
  %510 = load i32, ptr %509, align 8, !tbaa !317
  %511 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %507, i32 1
  %512 = load i32, ptr %511, align 4, !tbaa !319
  br i1 %487, label %513, label %597

513:                                              ; preds = %506
  %514 = load ptr, ptr %488, align 8, !tbaa !314
  %515 = load i32, ptr %489, align 8, !tbaa !22
  %516 = mul i32 %515, %512
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds double, ptr %514, i64 %517
  br i1 %496, label %519, label %537

519:                                              ; preds = %568, %513
  %520 = phi ptr [ undef, %513 ], [ %569, %568 ]
  %521 = phi i64 [ 0, %513 ], [ %571, %568 ]
  %522 = phi ptr [ %482, %513 ], [ %570, %568 ]
  %523 = phi ptr [ %481, %513 ], [ %569, %568 ]
  br i1 %498, label %535, label %524

524:                                              ; preds = %519
  %525 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %521, i32 1
  %526 = load i32, ptr %525, align 4, !tbaa !319
  %527 = zext i32 %526 to i64
  %528 = getelementptr inbounds double, ptr %518, i64 %527
  %529 = load double, ptr %528, align 8, !tbaa !52
  %530 = fcmp une double %529, 0.000000e+00
  br i1 %530, label %531, label %535

531:                                              ; preds = %524
  %532 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %521
  store double %529, ptr %522, align 8, !tbaa !52
  %533 = load i32, ptr %532, align 8, !tbaa !317
  %534 = getelementptr inbounds i32, ptr %523, i64 1
  store i32 %533, ptr %523, align 4, !tbaa !22
  br label %535

535:                                              ; preds = %524, %531, %519
  %536 = phi ptr [ %520, %519 ], [ %534, %531 ], [ %523, %524 ]
  br i1 %16, label %859, label %574

537:                                              ; preds = %513, %568
  %538 = phi i64 [ %571, %568 ], [ 0, %513 ]
  %539 = phi ptr [ %570, %568 ], [ %482, %513 ]
  %540 = phi ptr [ %569, %568 ], [ %481, %513 ]
  %541 = phi i64 [ %572, %568 ], [ 0, %513 ]
  %542 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %538, i32 1
  %543 = load i32, ptr %542, align 4, !tbaa !319
  %544 = zext i32 %543 to i64
  %545 = getelementptr inbounds double, ptr %518, i64 %544
  %546 = load double, ptr %545, align 8, !tbaa !52
  %547 = fcmp une double %546, 0.000000e+00
  br i1 %547, label %548, label %553

548:                                              ; preds = %537
  %549 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %538
  %550 = getelementptr inbounds double, ptr %539, i64 1
  store double %546, ptr %539, align 8, !tbaa !52
  %551 = load i32, ptr %549, align 8, !tbaa !317
  %552 = getelementptr inbounds i32, ptr %540, i64 1
  store i32 %551, ptr %540, align 4, !tbaa !22
  br label %553

553:                                              ; preds = %548, %537
  %554 = phi ptr [ %552, %548 ], [ %540, %537 ]
  %555 = phi ptr [ %550, %548 ], [ %539, %537 ]
  %556 = or i64 %538, 1
  %557 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %556, i32 1
  %558 = load i32, ptr %557, align 4, !tbaa !319
  %559 = zext i32 %558 to i64
  %560 = getelementptr inbounds double, ptr %518, i64 %559
  %561 = load double, ptr %560, align 8, !tbaa !52
  %562 = fcmp une double %561, 0.000000e+00
  br i1 %562, label %563, label %568

563:                                              ; preds = %553
  %564 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %556
  %565 = getelementptr inbounds double, ptr %555, i64 1
  store double %561, ptr %555, align 8, !tbaa !52
  %566 = load i32, ptr %564, align 8, !tbaa !317
  %567 = getelementptr inbounds i32, ptr %554, i64 1
  store i32 %566, ptr %554, align 4, !tbaa !22
  br label %568

568:                                              ; preds = %563, %553
  %569 = phi ptr [ %567, %563 ], [ %554, %553 ]
  %570 = phi ptr [ %565, %563 ], [ %555, %553 ]
  %571 = add nuw nsw i64 %538, 2
  %572 = add i64 %541, 2
  %573 = icmp eq i64 %572, %497
  br i1 %573, label %519, label %537

574:                                              ; preds = %535
  %575 = load ptr, ptr %490, align 8, !tbaa !60
  %576 = zext i32 %512 to i64
  %577 = getelementptr inbounds double, ptr %575, i64 %576
  %578 = load double, ptr %577, align 8, !tbaa !52
  br i1 %491, label %859, label %579

579:                                              ; preds = %574, %579
  %580 = phi i64 [ %595, %579 ], [ 0, %574 ]
  %581 = phi i32 [ %594, %579 ], [ 0, %574 ]
  %582 = phi double [ %593, %579 ], [ %578, %574 ]
  %583 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %580
  %584 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %580, i32 1
  %585 = load ptr, ptr %584, align 8, !tbaa !328
  %586 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %585, i64 0, i32 2
  %587 = load double, ptr %586, align 8, !tbaa !48
  %588 = load i32, ptr %583, align 8, !tbaa !326
  %589 = zext i32 %588 to i64
  %590 = getelementptr inbounds double, ptr %518, i64 %589
  %591 = load double, ptr %590, align 8, !tbaa !52
  %592 = fneg double %587
  %593 = call double @llvm.fmuladd.f64(double %592, double %591, double %582)
  %594 = add i32 %581, 1
  %595 = zext i32 %594 to i64
  %596 = icmp ugt i64 %384, %595
  br i1 %596, label %579, label %859

597:                                              ; preds = %506
  %598 = icmp eq i32 %512, -1
  %599 = load ptr, ptr %488, align 8
  %600 = load i32, ptr %489, align 8
  %601 = mul i32 %600, %512
  %602 = zext i32 %601 to i64
  %603 = getelementptr inbounds double, ptr %599, i64 %602
  %604 = select i1 %598, ptr null, ptr %603
  %605 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %507, i32 2
  %606 = load ptr, ptr %605, align 8, !tbaa !320
  %607 = icmp eq ptr %606, null
  %608 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %606, i64 0, i32 1
  br label %610

609:                                              ; preds = %778
  br i1 %16, label %859, label %783

610:                                              ; preds = %597, %778
  %611 = phi i64 [ 0, %597 ], [ %781, %778 ]
  %612 = phi ptr [ %482, %597 ], [ %780, %778 ]
  %613 = phi ptr [ %481, %597 ], [ %779, %778 ]
  %614 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %611
  %615 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %611, i32 1
  %616 = load i32, ptr %615, align 4, !tbaa !319
  br i1 %598, label %652, label %617

617:                                              ; preds = %610
  %618 = icmp eq i32 %616, -1
  br i1 %618, label %623, label %619

619:                                              ; preds = %617
  %620 = zext i32 %616 to i64
  %621 = getelementptr inbounds double, ptr %603, i64 %620
  %622 = load double, ptr %621, align 8, !tbaa !52
  br label %623

623:                                              ; preds = %617, %619
  %624 = phi double [ %622, %619 ], [ 0.000000e+00, %617 ]
  %625 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %611, i32 2
  %626 = load ptr, ptr %625, align 8, !tbaa !320
  %627 = icmp eq ptr %626, null
  br i1 %627, label %652, label %628

628:                                              ; preds = %623
  %629 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %626, i64 0, i32 1
  %630 = load ptr, ptr %629, align 8, !tbaa !31
  %631 = load ptr, ptr %626, align 8, !tbaa !32
  %632 = ptrtoint ptr %630 to i64
  %633 = ptrtoint ptr %631 to i64
  %634 = sub i64 %632, %633
  %635 = ashr exact i64 %634, 4
  %636 = icmp eq ptr %630, %631
  br i1 %636, label %652, label %637

637:                                              ; preds = %628, %637
  %638 = phi i64 [ %650, %637 ], [ 0, %628 ]
  %639 = phi i32 [ %649, %637 ], [ 0, %628 ]
  %640 = phi double [ %648, %637 ], [ %624, %628 ]
  %641 = getelementptr inbounds %"struct.std::pair", ptr %631, i64 %638
  %642 = load i32, ptr %641, align 8, !tbaa !37
  %643 = zext i32 %642 to i64
  %644 = getelementptr inbounds double, ptr %604, i64 %643
  %645 = load double, ptr %644, align 8, !tbaa !52
  %646 = getelementptr inbounds %"struct.std::pair", ptr %631, i64 %638, i32 1
  %647 = load double, ptr %646, align 8, !tbaa !35
  %648 = call double @llvm.fmuladd.f64(double %645, double %647, double %640)
  %649 = add i32 %639, 1
  %650 = zext i32 %649 to i64
  %651 = icmp ugt i64 %635, %650
  br i1 %651, label %637, label %652

652:                                              ; preds = %637, %628, %610, %623
  %653 = phi double [ %624, %623 ], [ 0.000000e+00, %610 ], [ %624, %628 ], [ %648, %637 ]
  br i1 %607, label %771, label %654

654:                                              ; preds = %652
  %655 = load ptr, ptr %608, align 8, !tbaa !31
  %656 = load ptr, ptr %606, align 8, !tbaa !32
  %657 = ptrtoint ptr %655 to i64
  %658 = ptrtoint ptr %656 to i64
  %659 = sub i64 %657, %658
  %660 = ashr exact i64 %659, 4
  %661 = icmp eq ptr %655, %656
  br i1 %661, label %771, label %662

662:                                              ; preds = %654
  %663 = icmp eq i32 %616, -1
  %664 = load ptr, ptr %488, align 8
  %665 = load i32, ptr %489, align 8
  %666 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %611, i32 2
  %667 = load ptr, ptr %666, align 8, !tbaa !320
  %668 = icmp eq ptr %667, null
  br i1 %668, label %669, label %697

669:                                              ; preds = %662
  br i1 %663, label %670, label %680

670:                                              ; preds = %669, %670
  %671 = phi i64 [ %678, %670 ], [ 0, %669 ]
  %672 = phi i32 [ %677, %670 ], [ 0, %669 ]
  %673 = phi double [ %676, %670 ], [ %653, %669 ]
  %674 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %671, i32 1
  %675 = load double, ptr %674, align 8, !tbaa !35
  %676 = call double @llvm.fmuladd.f64(double %675, double 0.000000e+00, double %673)
  %677 = add i32 %672, 1
  %678 = zext i32 %677 to i64
  %679 = icmp ugt i64 %660, %678
  br i1 %679, label %670, label %771

680:                                              ; preds = %669, %680
  %681 = phi i64 [ %695, %680 ], [ 0, %669 ]
  %682 = phi i32 [ %694, %680 ], [ 0, %669 ]
  %683 = phi double [ %693, %680 ], [ %653, %669 ]
  %684 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %681
  %685 = load i32, ptr %684, align 8, !tbaa !37
  %686 = mul i32 %665, %685
  %687 = add i32 %686, %616
  %688 = zext i32 %687 to i64
  %689 = getelementptr inbounds double, ptr %664, i64 %688
  %690 = load double, ptr %689, align 8, !tbaa !52
  %691 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %681, i32 1
  %692 = load double, ptr %691, align 8, !tbaa !35
  %693 = call double @llvm.fmuladd.f64(double %690, double %692, double %683)
  %694 = add i32 %682, 1
  %695 = zext i32 %694 to i64
  %696 = icmp ugt i64 %660, %695
  br i1 %696, label %680, label %771

697:                                              ; preds = %662
  %698 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %667, i64 0, i32 1
  %699 = load ptr, ptr %698, align 8, !tbaa !31
  %700 = load ptr, ptr %667, align 8, !tbaa !32
  %701 = ptrtoint ptr %699 to i64
  %702 = ptrtoint ptr %700 to i64
  %703 = sub i64 %701, %702
  %704 = ashr exact i64 %703, 4
  %705 = icmp eq ptr %699, %700
  br i1 %705, label %743, label %706

706:                                              ; preds = %697, %736
  %707 = phi i64 [ %741, %736 ], [ 0, %697 ]
  %708 = phi i32 [ %740, %736 ], [ 0, %697 ]
  %709 = phi double [ %739, %736 ], [ %653, %697 ]
  %710 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %707
  %711 = load i32, ptr %710, align 8, !tbaa !37
  %712 = mul i32 %665, %711
  br i1 %663, label %718, label %713

713:                                              ; preds = %706
  %714 = add i32 %712, %616
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds double, ptr %664, i64 %715
  %717 = load double, ptr %716, align 8, !tbaa !52
  br label %718

718:                                              ; preds = %706, %713
  %719 = phi double [ %717, %713 ], [ 0.000000e+00, %706 ]
  br label %720

720:                                              ; preds = %718, %720
  %721 = phi i64 [ %734, %720 ], [ 0, %718 ]
  %722 = phi i32 [ %733, %720 ], [ 0, %718 ]
  %723 = phi double [ %732, %720 ], [ %719, %718 ]
  %724 = getelementptr inbounds %"struct.std::pair", ptr %700, i64 %721
  %725 = load i32, ptr %724, align 8, !tbaa !37
  %726 = add i32 %712, %725
  %727 = zext i32 %726 to i64
  %728 = getelementptr inbounds double, ptr %664, i64 %727
  %729 = load double, ptr %728, align 8, !tbaa !52
  %730 = getelementptr inbounds %"struct.std::pair", ptr %700, i64 %721, i32 1
  %731 = load double, ptr %730, align 8, !tbaa !35
  %732 = call double @llvm.fmuladd.f64(double %729, double %731, double %723)
  %733 = add i32 %722, 1
  %734 = zext i32 %733 to i64
  %735 = icmp ugt i64 %704, %734
  br i1 %735, label %720, label %736

736:                                              ; preds = %720
  %737 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %707, i32 1
  %738 = load double, ptr %737, align 8, !tbaa !35
  %739 = call double @llvm.fmuladd.f64(double %732, double %738, double %709)
  %740 = add i32 %708, 1
  %741 = zext i32 %740 to i64
  %742 = icmp ugt i64 %660, %741
  br i1 %742, label %706, label %771

743:                                              ; preds = %697
  br i1 %663, label %744, label %754

744:                                              ; preds = %743, %744
  %745 = phi i64 [ %752, %744 ], [ 0, %743 ]
  %746 = phi i32 [ %751, %744 ], [ 0, %743 ]
  %747 = phi double [ %750, %744 ], [ %653, %743 ]
  %748 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %745, i32 1
  %749 = load double, ptr %748, align 8, !tbaa !35
  %750 = call double @llvm.fmuladd.f64(double %749, double 0.000000e+00, double %747)
  %751 = add i32 %746, 1
  %752 = zext i32 %751 to i64
  %753 = icmp ugt i64 %660, %752
  br i1 %753, label %744, label %771

754:                                              ; preds = %743, %754
  %755 = phi i64 [ %769, %754 ], [ 0, %743 ]
  %756 = phi i32 [ %768, %754 ], [ 0, %743 ]
  %757 = phi double [ %767, %754 ], [ %653, %743 ]
  %758 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %755
  %759 = load i32, ptr %758, align 8, !tbaa !37
  %760 = mul i32 %665, %759
  %761 = add i32 %760, %616
  %762 = zext i32 %761 to i64
  %763 = getelementptr inbounds double, ptr %664, i64 %762
  %764 = load double, ptr %763, align 8, !tbaa !52
  %765 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %755, i32 1
  %766 = load double, ptr %765, align 8, !tbaa !35
  %767 = call double @llvm.fmuladd.f64(double %764, double %766, double %757)
  %768 = add i32 %756, 1
  %769 = zext i32 %768 to i64
  %770 = icmp ugt i64 %660, %769
  br i1 %770, label %754, label %771

771:                                              ; preds = %736, %754, %744, %680, %670, %654, %652
  %772 = phi double [ %653, %652 ], [ %653, %654 ], [ %676, %670 ], [ %693, %680 ], [ %750, %744 ], [ %767, %754 ], [ %739, %736 ]
  %773 = fcmp une double %772, 0.000000e+00
  br i1 %773, label %774, label %778

774:                                              ; preds = %771
  %775 = getelementptr inbounds double, ptr %612, i64 1
  store double %772, ptr %612, align 8, !tbaa !52
  %776 = load i32, ptr %614, align 8, !tbaa !317
  %777 = getelementptr inbounds i32, ptr %613, i64 1
  store i32 %776, ptr %613, align 4, !tbaa !22
  br label %778

778:                                              ; preds = %774, %771
  %779 = phi ptr [ %777, %774 ], [ %613, %771 ]
  %780 = phi ptr [ %775, %774 ], [ %612, %771 ]
  %781 = add nuw nsw i64 %611, 1
  %782 = icmp eq i64 %781, %494
  br i1 %782, label %609, label %610

783:                                              ; preds = %609
  br i1 %598, label %807, label %784

784:                                              ; preds = %783
  %785 = load ptr, ptr %490, align 8, !tbaa !60
  %786 = zext i32 %512 to i64
  %787 = getelementptr inbounds double, ptr %785, i64 %786
  %788 = load double, ptr %787, align 8, !tbaa !52
  br i1 %491, label %807, label %789

789:                                              ; preds = %784, %789
  %790 = phi i64 [ %805, %789 ], [ 0, %784 ]
  %791 = phi i32 [ %804, %789 ], [ 0, %784 ]
  %792 = phi double [ %803, %789 ], [ %788, %784 ]
  %793 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %790
  %794 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %790, i32 1
  %795 = load ptr, ptr %794, align 8, !tbaa !328
  %796 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %795, i64 0, i32 2
  %797 = load double, ptr %796, align 8, !tbaa !48
  %798 = load i32, ptr %793, align 8, !tbaa !326
  %799 = zext i32 %798 to i64
  %800 = getelementptr inbounds double, ptr %604, i64 %799
  %801 = load double, ptr %800, align 8, !tbaa !52
  %802 = fneg double %797
  %803 = call double @llvm.fmuladd.f64(double %802, double %801, double %792)
  %804 = add i32 %791, 1
  %805 = zext i32 %804 to i64
  %806 = icmp ugt i64 %384, %805
  br i1 %806, label %789, label %807

807:                                              ; preds = %789, %784, %783
  %808 = phi double [ 0.000000e+00, %783 ], [ %788, %784 ], [ %803, %789 ]
  br i1 %607, label %859, label %809

809:                                              ; preds = %807
  %810 = load ptr, ptr %608, align 8, !tbaa !31
  %811 = load ptr, ptr %606, align 8, !tbaa !32
  %812 = ptrtoint ptr %810 to i64
  %813 = ptrtoint ptr %811 to i64
  %814 = sub i64 %812, %813
  %815 = ashr exact i64 %814, 4
  %816 = icmp eq ptr %810, %811
  br i1 %816, label %859, label %817

817:                                              ; preds = %809
  %818 = load ptr, ptr %490, align 8, !tbaa !60
  %819 = load ptr, ptr %488, align 8
  %820 = load i32, ptr %489, align 8
  br label %821

821:                                              ; preds = %817, %832
  %822 = phi i64 [ 0, %817 ], [ %838, %832 ]
  %823 = phi i32 [ 0, %817 ], [ %837, %832 ]
  %824 = phi double [ %808, %817 ], [ %836, %832 ]
  %825 = getelementptr inbounds %"struct.std::pair", ptr %811, i64 %822
  %826 = load i32, ptr %825, align 8, !tbaa !37
  %827 = zext i32 %826 to i64
  %828 = getelementptr inbounds double, ptr %818, i64 %827
  %829 = load double, ptr %828, align 8, !tbaa !52
  br i1 %491, label %832, label %830

830:                                              ; preds = %821
  %831 = mul i32 %820, %826
  br label %840

832:                                              ; preds = %840, %821
  %833 = phi double [ %829, %821 ], [ %855, %840 ]
  %834 = getelementptr inbounds %"struct.std::pair", ptr %811, i64 %822, i32 1
  %835 = load double, ptr %834, align 8, !tbaa !35
  %836 = call double @llvm.fmuladd.f64(double %833, double %835, double %824)
  %837 = add i32 %823, 1
  %838 = zext i32 %837 to i64
  %839 = icmp ugt i64 %815, %838
  br i1 %839, label %821, label %859

840:                                              ; preds = %830, %840
  %841 = phi i64 [ 0, %830 ], [ %857, %840 ]
  %842 = phi i32 [ 0, %830 ], [ %856, %840 ]
  %843 = phi double [ %829, %830 ], [ %855, %840 ]
  %844 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %841
  %845 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %841, i32 1
  %846 = load ptr, ptr %845, align 8, !tbaa !328
  %847 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %846, i64 0, i32 2
  %848 = load double, ptr %847, align 8, !tbaa !48
  %849 = load i32, ptr %844, align 8, !tbaa !326
  %850 = add i32 %831, %849
  %851 = zext i32 %850 to i64
  %852 = getelementptr inbounds double, ptr %819, i64 %851
  %853 = load double, ptr %852, align 8, !tbaa !52
  %854 = fneg double %848
  %855 = call double @llvm.fmuladd.f64(double %854, double %853, double %843)
  %856 = add i32 %842, 1
  %857 = zext i32 %856 to i64
  %858 = icmp ugt i64 %384, %857
  br i1 %858, label %840, label %832

859:                                              ; preds = %832, %579, %809, %574, %609, %807, %535
  %860 = phi ptr [ %536, %535 ], [ %779, %807 ], [ %779, %609 ], [ %536, %574 ], [ %779, %809 ], [ %536, %579 ], [ %779, %832 ]
  %861 = phi double [ 0.000000e+00, %535 ], [ %808, %807 ], [ 0.000000e+00, %609 ], [ %578, %574 ], [ %808, %809 ], [ %593, %579 ], [ %836, %832 ]
  %862 = ptrtoint ptr %860 to i64
  %863 = sub i64 %862, %492
  %864 = lshr exact i64 %863, 2
  %865 = trunc i64 %864 to i32
  %866 = icmp eq i32 %865, 0
  br i1 %866, label %872, label %867

867:                                              ; preds = %859
  invoke void @_ZN6dealii12SparseMatrixIfE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %4, i32 noundef %510, i32 noundef %865, ptr noundef nonnull %481, ptr noundef nonnull %482, i1 noundef zeroext false, i1 noundef zeroext true)
          to label %872 unwind label %868

868:                                              ; preds = %867
  %869 = landingpad { ptr, i32 }
          cleanup
  %870 = icmp eq ptr %482, null
  br i1 %870, label %913, label %871

871:                                              ; preds = %868
  call void @_ZdlPv(ptr noundef nonnull %482) #23
  br label %913

872:                                              ; preds = %867, %859
  %873 = fcmp une double %861, 0.000000e+00
  br i1 %873, label %874, label %880

874:                                              ; preds = %872
  %875 = load ptr, ptr %493, align 8, !tbaa !60
  %876 = zext i32 %510 to i64
  %877 = getelementptr inbounds double, ptr %875, i64 %876
  %878 = load double, ptr %877, align 8, !tbaa !52
  %879 = fadd double %861, %878
  store double %879, ptr %877, align 8, !tbaa !52
  br label %880

880:                                              ; preds = %874, %872
  %881 = add nuw nsw i64 %507, 1
  %882 = icmp eq i64 %881, %494
  br i1 %882, label %499, label %506

883:                                              ; preds = %501, %499
  %884 = icmp eq ptr %481, null
  br i1 %884, label %886, label %885

885:                                              ; preds = %883
  call void @_ZdlPv(ptr noundef nonnull %481) #23
  br label %886

886:                                              ; preds = %885, %883
  %887 = icmp eq ptr %166, null
  br i1 %887, label %889, label %888

888:                                              ; preds = %886
  call void @_ZdlPv(ptr noundef nonnull %166) #23
  br label %889

889:                                              ; preds = %888, %886
  %890 = load ptr, ptr %7, align 8, !tbaa !321
  %891 = load ptr, ptr %151, align 8, !tbaa !325
  %892 = icmp eq ptr %890, %891
  br i1 %892, label %908, label %893

893:                                              ; preds = %889, %903
  %894 = phi ptr [ %904, %903 ], [ %890, %889 ]
  %895 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %894, i64 0, i32 2
  %896 = load ptr, ptr %895, align 8, !tbaa !320
  %897 = icmp eq ptr %896, null
  br i1 %897, label %903, label %898

898:                                              ; preds = %893
  %899 = load ptr, ptr %896, align 8, !tbaa !32
  %900 = icmp eq ptr %899, null
  br i1 %900, label %902, label %901

901:                                              ; preds = %898
  call void @_ZdlPv(ptr noundef nonnull %899) #23
  br label %902

902:                                              ; preds = %901, %898
  call void @_ZdlPv(ptr noundef nonnull %896) #23
  store ptr null, ptr %895, align 8, !tbaa !320
  br label %903

903:                                              ; preds = %902, %893
  %904 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %894, i64 1
  %905 = icmp eq ptr %904, %891
  br i1 %905, label %906, label %893

906:                                              ; preds = %903
  %907 = load ptr, ptr %7, align 8, !tbaa !321
  br label %908

908:                                              ; preds = %906, %889
  %909 = phi ptr [ %907, %906 ], [ %890, %889 ]
  %910 = icmp eq ptr %909, null
  br i1 %910, label %912, label %911

911:                                              ; preds = %908
  call void @_ZdlPv(ptr noundef nonnull %909) #23
  br label %912

912:                                              ; preds = %908, %911
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  ret void

913:                                              ; preds = %871, %868
  %914 = icmp eq ptr %481, null
  br i1 %914, label %918, label %915

915:                                              ; preds = %504, %913
  %916 = phi { ptr, i32 } [ %505, %504 ], [ %869, %913 ]
  %917 = phi ptr [ %407, %504 ], [ %481, %913 ]
  call void @_ZdlPv(ptr noundef nonnull %917) #23
  br label %918

918:                                              ; preds = %314, %316, %477, %461, %915, %913, %502, %411
  %919 = phi ptr [ %166, %411 ], [ %166, %461 ], [ %166, %477 ], [ %166, %502 ], [ %166, %913 ], [ %166, %915 ], [ %203, %314 ], [ %203, %316 ]
  %920 = phi { ptr, i32 } [ %412, %411 ], [ %462, %461 ], [ %478, %477 ], [ %503, %502 ], [ %869, %913 ], [ %916, %915 ], [ %315, %314 ], [ %317, %316 ]
  %921 = icmp eq ptr %919, null
  br i1 %921, label %923, label %922

922:                                              ; preds = %918
  call void @_ZdlPv(ptr noundef nonnull %919) #23
  br label %923

923:                                              ; preds = %922, %918
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %924 unwind label %926

924:                                              ; preds = %923, %199
  %925 = phi { ptr, i32 } [ %920, %923 ], [ %198, %199 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  resume { ptr, i32 } %925

926:                                              ; preds = %923, %411, %197
  %927 = landingpad { ptr, i32 }
          catch ptr null
  %928 = extractvalue { ptr, i32 } %927, 0
  call void @__clang_call_terminate(ptr %928) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIfEENS_6VectorIfEEEEvRKNS_10FullMatrixIdEERKNS4_IdEERKSt6vectorIjSaIjEERT_RT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIfEENS_6VectorIfEEEEvRKNS_10FullMatrixIdEERKNS4_IdEERKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(88) %5)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_12SparseMatrixIfEENS_6VectorIfEEEEvRKNS_10FullMatrixIdEERKNS4_IdEERKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::vector.178", align 8
  %8 = alloca %"struct.dealii::internals::distributing", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !53
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 1
  %14 = load i32, ptr %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %12, i1 %15, i1 false
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !313
  %19 = load ptr, ptr %3, align 8, !tbaa !58
  %20 = ptrtoint ptr %18 to i64
  %21 = ptrtoint ptr %19 to i64
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 2
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %57, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !314
  %29 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %30 = load i32, ptr %29, align 8, !tbaa !22
  %31 = add i32 %30, 1
  %32 = and i64 %23, 4294967295
  %33 = add nsw i64 %32, -1
  %34 = and i64 %23, 3
  %35 = icmp ult i64 %33, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %26
  %37 = sub nsw i64 %32, %34
  br label %107

38:                                               ; preds = %107, %26
  %39 = phi double [ undef, %26 ], [ %141, %107 ]
  %40 = phi i64 [ 0, %26 ], [ %142, %107 ]
  %41 = phi double [ 0.000000e+00, %26 ], [ %141, %107 ]
  %42 = icmp eq i64 %34, 0
  br i1 %42, label %57, label %43

43:                                               ; preds = %38, %43
  %44 = phi i64 [ %54, %43 ], [ %40, %38 ]
  %45 = phi double [ %53, %43 ], [ %41, %38 ]
  %46 = phi i64 [ %55, %43 ], [ 0, %38 ]
  %47 = trunc i64 %44 to i32
  %48 = mul i32 %31, %47
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds double, ptr %28, i64 %49
  %51 = load double, ptr %50, align 8, !tbaa !52
  %52 = tail call double @llvm.fabs.f64(double %51)
  %53 = fadd double %45, %52
  %54 = add nuw nsw i64 %44, 1
  %55 = add i64 %46, 1
  %56 = icmp eq i64 %55, %34
  br i1 %56, label %57, label %43, !llvm.loop !331

57:                                               ; preds = %38, %43, %6
  %58 = phi double [ 0.000000e+00, %6 ], [ %39, %38 ], [ %53, %43 ]
  %59 = uitofp i32 %24 to double
  %60 = fdiv double %58, %59
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %61 = and i64 %23, 4294967295
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #24
  store i32 -1, ptr %8, align 8, !tbaa !317
  %62 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 1
  store i32 -1, ptr %62, align 4, !tbaa !319
  %63 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 2
  store ptr null, ptr %63, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %148

67:                                               ; preds = %57
  %68 = shl nuw nsw i64 %61, 4
  %69 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %68) #21
          to label %70 unwind label %197

70:                                               ; preds = %67
  store ptr %69, ptr %7, align 8, !tbaa !321
  %71 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %69, i64 %61
  %72 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %71, ptr %72, align 8, !tbaa !323
  %73 = and i64 %23, 3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %70, %75
  %76 = phi ptr [ %82, %75 ], [ %69, %70 ]
  %77 = phi i64 [ %81, %75 ], [ %61, %70 ]
  %78 = phi i64 [ %83, %75 ], [ 0, %70 ]
  %79 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 0, i32 2
  store ptr null, ptr %79, align 8, !tbaa !320
  store i32 -1, ptr %76, align 8, !tbaa !317
  %80 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 0, i32 1
  store i32 -1, ptr %80, align 4, !tbaa !319
  %81 = add nsw i64 %77, -1
  %82 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 1
  %83 = add i64 %78, 1
  %84 = icmp eq i64 %83, %73
  br i1 %84, label %85, label %75, !llvm.loop !332

85:                                               ; preds = %75, %70
  %86 = phi ptr [ undef, %70 ], [ %82, %75 ]
  %87 = phi ptr [ %69, %70 ], [ %82, %75 ]
  %88 = phi i64 [ %61, %70 ], [ %81, %75 ]
  %89 = icmp ult i64 %61, 4
  br i1 %89, label %145, label %90

90:                                               ; preds = %85, %90
  %91 = phi ptr [ %105, %90 ], [ %87, %85 ]
  %92 = phi i64 [ %104, %90 ], [ %88, %85 ]
  %93 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 0, i32 2
  store ptr null, ptr %93, align 8, !tbaa !320
  store i32 -1, ptr %91, align 8, !tbaa !317
  %94 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 0, i32 1
  store i32 -1, ptr %94, align 4, !tbaa !319
  %95 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1
  %96 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1, i32 2
  store ptr null, ptr %96, align 8, !tbaa !320
  store i32 -1, ptr %95, align 8, !tbaa !317
  %97 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1, i32 1
  store i32 -1, ptr %97, align 4, !tbaa !319
  %98 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2
  %99 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2, i32 2
  store ptr null, ptr %99, align 8, !tbaa !320
  store i32 -1, ptr %98, align 8, !tbaa !317
  %100 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2, i32 1
  store i32 -1, ptr %100, align 4, !tbaa !319
  %101 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3
  %102 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3, i32 2
  store ptr null, ptr %102, align 8, !tbaa !320
  store i32 -1, ptr %101, align 8, !tbaa !317
  %103 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3, i32 1
  store i32 -1, ptr %103, align 4, !tbaa !319
  %104 = add nsw i64 %92, -4
  %105 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 4
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %145, label %90

107:                                              ; preds = %107, %36
  %108 = phi i64 [ 0, %36 ], [ %142, %107 ]
  %109 = phi double [ 0.000000e+00, %36 ], [ %141, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %143, %107 ]
  %111 = trunc i64 %108 to i32
  %112 = mul i32 %31, %111
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds double, ptr %28, i64 %113
  %115 = load double, ptr %114, align 8, !tbaa !52
  %116 = tail call double @llvm.fabs.f64(double %115)
  %117 = fadd double %109, %116
  %118 = trunc i64 %108 to i32
  %119 = or i32 %118, 1
  %120 = mul i32 %31, %119
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds double, ptr %28, i64 %121
  %123 = load double, ptr %122, align 8, !tbaa !52
  %124 = tail call double @llvm.fabs.f64(double %123)
  %125 = fadd double %117, %124
  %126 = trunc i64 %108 to i32
  %127 = or i32 %126, 2
  %128 = mul i32 %31, %127
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %28, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !52
  %132 = tail call double @llvm.fabs.f64(double %131)
  %133 = fadd double %125, %132
  %134 = trunc i64 %108 to i32
  %135 = or i32 %134, 3
  %136 = mul i32 %31, %135
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds double, ptr %28, i64 %137
  %139 = load double, ptr %138, align 8, !tbaa !52
  %140 = tail call double @llvm.fabs.f64(double %139)
  %141 = fadd double %133, %140
  %142 = add nuw nsw i64 %108, 4
  %143 = add i64 %110, 4
  %144 = icmp eq i64 %143, %37
  br i1 %144, label %38, label %107

145:                                              ; preds = %90, %85
  %146 = phi ptr [ %86, %85 ], [ %105, %90 ]
  %147 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %146, ptr %147, align 8, !tbaa !325
  br label %148

148:                                              ; preds = %145, %65
  %149 = phi ptr [ null, %65 ], [ %69, %145 ]
  %150 = phi ptr [ null, %65 ], [ %146, %145 ]
  %151 = phi ptr [ %66, %65 ], [ %147, %145 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br i1 %25, label %162, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %154 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %155 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %156 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %157 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %158 = and i64 %23, 4294967295
  br label %200

159:                                              ; preds = %307
  %160 = load ptr, ptr %151, align 8, !tbaa !21
  %161 = load ptr, ptr %7, align 8, !tbaa !321
  br label %162

162:                                              ; preds = %159, %148
  %163 = phi ptr [ %149, %148 ], [ %161, %159 ]
  %164 = phi ptr [ %150, %148 ], [ %160, %159 ]
  %165 = phi ptr [ null, %148 ], [ %309, %159 ]
  %166 = phi ptr [ null, %148 ], [ %310, %159 ]
  %167 = phi i32 [ 0, %148 ], [ %311, %159 ]
  %168 = zext i32 %167 to i64
  store i32 -1, ptr %9, align 8, !tbaa !317
  %169 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %169, align 4, !tbaa !319
  %170 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %170, align 8, !tbaa !320
  %171 = ptrtoint ptr %164 to i64
  %172 = ptrtoint ptr %163 to i64
  %173 = sub i64 %171, %172
  %174 = ashr exact i64 %173, 4
  %175 = icmp ult i64 %174, %168
  br i1 %175, label %176, label %178

176:                                              ; preds = %162
  %177 = sub nsw i64 %168, %174
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %164, i64 noundef %177, ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %318 unwind label %411

178:                                              ; preds = %162
  %179 = icmp ugt i64 %174, %168
  br i1 %179, label %180, label %318

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %163, i64 %168
  %182 = icmp eq ptr %164, %181
  br i1 %182, label %318, label %183

183:                                              ; preds = %180, %193
  %184 = phi ptr [ %194, %193 ], [ %181, %180 ]
  %185 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %184, i64 0, i32 2
  %186 = load ptr, ptr %185, align 8, !tbaa !320
  %187 = icmp eq ptr %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %183
  %189 = load ptr, ptr %186, align 8, !tbaa !32
  %190 = icmp eq ptr %189, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  tail call void @_ZdlPv(ptr noundef nonnull %189) #23
  br label %192

192:                                              ; preds = %191, %188
  tail call void @_ZdlPv(ptr noundef nonnull %186) #23
  store ptr null, ptr %185, align 8, !tbaa !320
  br label %193

193:                                              ; preds = %192, %183
  %194 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %184, i64 1
  %195 = icmp eq ptr %194, %164
  br i1 %195, label %196, label %183

196:                                              ; preds = %193
  store ptr %181, ptr %151, align 8, !tbaa !325
  br label %318

197:                                              ; preds = %67
  %198 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %8)
          to label %199 unwind label %928

199:                                              ; preds = %197
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br label %926

200:                                              ; preds = %152, %307
  %201 = phi i64 [ 0, %152 ], [ %312, %307 ]
  %202 = phi i32 [ 0, %152 ], [ %311, %307 ]
  %203 = phi ptr [ null, %152 ], [ %310, %307 ]
  %204 = phi ptr [ null, %152 ], [ %309, %307 ]
  %205 = phi ptr [ null, %152 ], [ %308, %307 ]
  %206 = load ptr, ptr %154, align 8, !tbaa !55
  %207 = load i32, ptr %155, align 8, !tbaa !57
  %208 = load ptr, ptr %153, align 8, !tbaa !55
  %209 = ptrtoint ptr %206 to i64
  %210 = ptrtoint ptr %208 to i64
  %211 = sub i64 %209, %210
  %212 = shl nsw i64 %211, 3
  %213 = zext i32 %207 to i64
  %214 = add nsw i64 %212, %213
  %215 = load ptr, ptr %3, align 8, !tbaa !58
  %216 = getelementptr inbounds i32, ptr %215, i64 %201
  %217 = load i32, ptr %216, align 4, !tbaa !22
  %218 = zext i32 %217 to i64
  %219 = icmp ugt i64 %214, %218
  br i1 %219, label %220, label %230

220:                                              ; preds = %200
  %221 = lshr i32 %217, 6
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds i64, ptr %208, i64 %222
  %224 = and i32 %217, 63
  %225 = zext i32 %224 to i64
  %226 = shl nuw i64 1, %225
  %227 = load i64, ptr %223, align 8, !tbaa !42
  %228 = and i64 %227, %226
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %237

230:                                              ; preds = %220, %200
  %231 = zext i32 %202 to i64
  %232 = load ptr, ptr %7, align 8, !tbaa !321
  %233 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %232, i64 %231
  store i32 %217, ptr %233, align 8, !tbaa !317
  %234 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %232, i64 %231, i32 1
  %235 = trunc i64 %201 to i32
  store i32 %235, ptr %234, align 4, !tbaa !319
  %236 = add i32 %202, 1
  br label %307

237:                                              ; preds = %220
  %238 = load ptr, ptr %156, align 8, !tbaa !21
  %239 = load ptr, ptr %157, align 8, !tbaa !21
  %240 = ptrtoint ptr %239 to i64
  %241 = ptrtoint ptr %238 to i64
  %242 = sub i64 %240, %241
  %243 = icmp sgt i64 %242, 0
  br i1 %243, label %244, label %259

244:                                              ; preds = %237
  %245 = udiv exact i64 %242, 40
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ %245, %244 ], [ %257, %246 ]
  %248 = phi ptr [ %238, %244 ], [ %256, %246 ]
  %249 = lshr i64 %247, 1
  %250 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %248, i64 %249
  %251 = load i32, ptr %250, align 8, !tbaa !24
  %252 = icmp ult i32 %251, %217
  %253 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %250, i64 1
  %254 = xor i64 %249, -1
  %255 = add nsw i64 %247, %254
  %256 = select i1 %252, ptr %253, ptr %248
  %257 = select i1 %252, i64 %255, i64 %249
  %258 = icmp sgt i64 %257, 0
  br i1 %258, label %246, label %259

259:                                              ; preds = %246, %237
  %260 = phi ptr [ %238, %237 ], [ %256, %246 ]
  %261 = icmp eq ptr %204, %205
  br i1 %261, label %265, label %262

262:                                              ; preds = %259
  %263 = trunc i64 %201 to i32
  store i32 %263, ptr %204, align 8
  %264 = getelementptr inbounds i8, ptr %204, i64 8
  store ptr %260, ptr %264, align 8
  br label %302

265:                                              ; preds = %259
  %266 = ptrtoint ptr %204 to i64
  %267 = ptrtoint ptr %203 to i64
  %268 = sub i64 %266, %267
  %269 = icmp eq i64 %268, 9223372036854775792
  br i1 %269, label %270, label %272

270:                                              ; preds = %265
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %271 unwind label %316

271:                                              ; preds = %270
  unreachable

272:                                              ; preds = %265
  %273 = ashr exact i64 %268, 4
  %274 = tail call i64 @llvm.umax.i64(i64 %273, i64 1)
  %275 = add i64 %274, %273
  %276 = icmp ult i64 %275, %273
  %277 = icmp ugt i64 %275, 576460752303423487
  %278 = or i1 %276, %277
  %279 = select i1 %278, i64 576460752303423487, i64 %275
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %284, label %281

281:                                              ; preds = %272
  %282 = shl nuw nsw i64 %279, 4
  %283 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %282) #21
          to label %284 unwind label %314

284:                                              ; preds = %281, %272
  %285 = phi ptr [ null, %272 ], [ %283, %281 ]
  %286 = getelementptr inbounds %"struct.std::pair.188", ptr %285, i64 %273
  %287 = trunc i64 %201 to i32
  store i32 %287, ptr %286, align 8
  %288 = getelementptr inbounds i8, ptr %286, i64 8
  store ptr %260, ptr %288, align 8
  %289 = icmp eq ptr %203, %204
  br i1 %289, label %296, label %290

290:                                              ; preds = %284, %290
  %291 = phi ptr [ %294, %290 ], [ %285, %284 ]
  %292 = phi ptr [ %293, %290 ], [ %203, %284 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %291, ptr noundef nonnull align 8 dereferenceable(16) %292, i64 16, i1 false)
  %293 = getelementptr inbounds %"struct.std::pair.188", ptr %292, i64 1
  %294 = getelementptr inbounds %"struct.std::pair.188", ptr %291, i64 1
  %295 = icmp eq ptr %293, %204
  br i1 %295, label %296, label %290

296:                                              ; preds = %290, %284
  %297 = phi ptr [ %285, %284 ], [ %294, %290 ]
  %298 = icmp eq ptr %203, null
  br i1 %298, label %300, label %299

299:                                              ; preds = %296
  tail call void @_ZdlPv(ptr noundef nonnull %203) #23
  br label %300

300:                                              ; preds = %299, %296
  %301 = getelementptr inbounds %"struct.std::pair.188", ptr %285, i64 %279
  br label %302

302:                                              ; preds = %300, %262
  %303 = phi ptr [ %301, %300 ], [ %205, %262 ]
  %304 = phi ptr [ %297, %300 ], [ %204, %262 ]
  %305 = phi ptr [ %285, %300 ], [ %203, %262 ]
  %306 = getelementptr inbounds %"struct.std::pair.188", ptr %304, i64 1
  br label %307

307:                                              ; preds = %302, %230
  %308 = phi ptr [ %303, %302 ], [ %205, %230 ]
  %309 = phi ptr [ %306, %302 ], [ %204, %230 ]
  %310 = phi ptr [ %305, %302 ], [ %203, %230 ]
  %311 = phi i32 [ %202, %302 ], [ %236, %230 ]
  %312 = add nuw nsw i64 %201, 1
  %313 = icmp eq i64 %312, %158
  br i1 %313, label %159, label %200

314:                                              ; preds = %281
  %315 = landingpad { ptr, i32 }
          cleanup
  br label %920

316:                                              ; preds = %270
  %317 = landingpad { ptr, i32 }
          cleanup
  br label %920

318:                                              ; preds = %196, %180, %178, %176
  %319 = load ptr, ptr %170, align 8, !tbaa !320
  %320 = icmp eq ptr %319, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %318
  %322 = load ptr, ptr %319, align 8, !tbaa !32
  %323 = icmp eq ptr %322, null
  br i1 %323, label %325, label %324

324:                                              ; preds = %321
  call void @_ZdlPv(ptr noundef nonnull %322) #23
  br label %325

325:                                              ; preds = %324, %321
  call void @_ZdlPv(ptr noundef nonnull %319) #23
  store ptr null, ptr %170, align 8, !tbaa !320
  br label %326

326:                                              ; preds = %325, %318
  %327 = load ptr, ptr %151, align 8, !tbaa !325
  %328 = load ptr, ptr %7, align 8, !tbaa !321
  %329 = ptrtoint ptr %327 to i64
  %330 = ptrtoint ptr %328 to i64
  %331 = sub i64 %329, %330
  %332 = lshr exact i64 %331, 4
  %333 = trunc i64 %332 to i32
  %334 = icmp ult i32 %333, 2
  br i1 %334, label %380, label %337

335:                                              ; preds = %376, %337
  %336 = icmp ult i32 %338, 4
  br i1 %336, label %380, label %337

337:                                              ; preds = %326, %335
  %338 = phi i32 [ %339, %335 ], [ %333, %326 ]
  %339 = lshr i32 %338, 1
  %340 = icmp ult i32 %339, %333
  br i1 %340, label %341, label %335

341:                                              ; preds = %337
  %342 = zext i32 %339 to i64
  br label %343

343:                                              ; preds = %376, %341
  %344 = phi i64 [ %342, %341 ], [ %377, %376 ]
  %345 = sub nuw nsw i64 %344, %342
  %346 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %344
  %347 = load <2 x i32>, ptr %346, align 8, !tbaa !22
  %348 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %345
  %349 = load i32, ptr %348, align 8, !tbaa !317
  %350 = extractelement <2 x i32> %347, i64 0
  %351 = icmp ugt i32 %349, %350
  br i1 %351, label %352, label %376

352:                                              ; preds = %343
  %353 = icmp ult i64 %344, %342
  %354 = trunc i64 %344 to i32
  br i1 %353, label %372, label %355

355:                                              ; preds = %352
  %356 = trunc i64 %345 to i32
  br label %357

357:                                              ; preds = %364, %355
  %358 = phi i32 [ %359, %364 ], [ %354, %355 ]
  %359 = phi i32 [ %370, %364 ], [ %356, %355 ]
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %360
  %362 = load i32, ptr %361, align 8, !tbaa !317
  %363 = icmp ugt i32 %362, %350
  br i1 %363, label %364, label %372

364:                                              ; preds = %357
  %365 = zext i32 %358 to i64
  %366 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %365
  store i32 %362, ptr %366, align 8, !tbaa !317
  %367 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %360, i32 1
  %368 = load i32, ptr %367, align 4, !tbaa !319
  %369 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %365, i32 1
  store i32 %368, ptr %369, align 4, !tbaa !319
  %370 = sub i32 %359, %339
  %371 = icmp ult i32 %359, %339
  br i1 %371, label %372, label %357

372:                                              ; preds = %364, %357, %352
  %373 = phi i32 [ %354, %352 ], [ %358, %357 ], [ %359, %364 ]
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %374
  store <2 x i32> %347, ptr %375, align 8, !tbaa !22
  br label %376

376:                                              ; preds = %372, %343
  %377 = add nuw nsw i64 %344, 1
  %378 = trunc i64 %377 to i32
  %379 = icmp eq i32 %333, %378
  br i1 %379, label %335, label %343

380:                                              ; preds = %335, %326
  %381 = ptrtoint ptr %165 to i64
  %382 = ptrtoint ptr %166 to i64
  %383 = sub i64 %381, %382
  %384 = ashr exact i64 %383, 4
  %385 = and i64 %383, 68719476720
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %399, label %387

387:                                              ; preds = %380
  %388 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %389 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %390 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %4, i64 0, i32 1
  %391 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %4, i64 0, i32 2
  %392 = and i64 %384, 4294967295
  br label %413

393:                                              ; preds = %474
  %394 = load ptr, ptr %151, align 8, !tbaa !325
  %395 = load ptr, ptr %7, align 8, !tbaa !321
  %396 = ptrtoint ptr %394 to i64
  %397 = ptrtoint ptr %395 to i64
  %398 = sub i64 %396, %397
  br label %399

399:                                              ; preds = %393, %380
  %400 = phi i64 [ %398, %393 ], [ %331, %380 ]
  %401 = phi i8 [ %430, %393 ], [ 0, %380 ]
  %402 = ashr exact i64 %400, 4
  %403 = and i64 %402, 4294967295
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %480, label %405

405:                                              ; preds = %399
  %406 = shl nuw nsw i64 %403, 2
  %407 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %406) #21
          to label %408 unwind label %502

408:                                              ; preds = %405
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %407, i8 0, i64 %406, i1 false), !tbaa !22
  %409 = shl nuw nsw i64 %403, 3
  %410 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %409) #21
          to label %479 unwind label %504

411:                                              ; preds = %176
  %412 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %920 unwind label %928

413:                                              ; preds = %387, %474
  %414 = phi i64 [ 0, %387 ], [ %475, %474 ]
  %415 = phi i8 [ 0, %387 ], [ %430, %474 ]
  %416 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %414
  %417 = load i32, ptr %416, align 8, !tbaa !326
  %418 = zext i32 %417 to i64
  %419 = load ptr, ptr %3, align 8, !tbaa !58
  %420 = getelementptr inbounds i32, ptr %419, i64 %418
  %421 = load i32, ptr %420, align 4, !tbaa !22
  %422 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %414, i32 1
  %423 = load ptr, ptr %422, align 8, !tbaa !328
  %424 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %423, i64 0, i32 1
  %425 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %423, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %426 = load ptr, ptr %425, align 8, !tbaa !31
  %427 = load ptr, ptr %424, align 8, !tbaa !32
  %428 = icmp eq ptr %426, %427
  br i1 %428, label %429, label %443

429:                                              ; preds = %451, %413
  %430 = phi i8 [ %415, %413 ], [ 1, %451 ]
  %431 = load ptr, ptr %388, align 8, !tbaa !314
  %432 = load i32, ptr %389, align 8, !tbaa !22
  %433 = add i32 %432, 1
  %434 = mul i32 %433, %417
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds double, ptr %431, i64 %435
  %437 = load double, ptr %436, align 8, !tbaa !52
  %438 = fcmp une double %437, 0.000000e+00
  %439 = call double @llvm.fabs.f64(double %437)
  %440 = select i1 %438, double %439, double %60
  %441 = fptrunc double %440 to float
  %442 = fcmp oeq float %441, 0.000000e+00
  br i1 %442, label %474, label %463

443:                                              ; preds = %413, %451
  %444 = phi ptr [ %455, %451 ], [ %427, %413 ]
  %445 = phi i64 [ %453, %451 ], [ 0, %413 ]
  %446 = phi i32 [ %452, %451 ], [ 0, %413 ]
  %447 = getelementptr inbounds %"struct.std::pair", ptr %444, i64 %445
  %448 = load i32, ptr %447, align 8, !tbaa !37
  %449 = getelementptr inbounds %"struct.std::pair", ptr %444, i64 %445, i32 1
  %450 = load double, ptr %449, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %448, i32 %417, double %450)
          to label %451 unwind label %461

451:                                              ; preds = %443
  %452 = add i32 %446, 1
  %453 = zext i32 %452 to i64
  %454 = load ptr, ptr %425, align 8, !tbaa !31
  %455 = load ptr, ptr %424, align 8, !tbaa !32
  %456 = ptrtoint ptr %454 to i64
  %457 = ptrtoint ptr %455 to i64
  %458 = sub i64 %456, %457
  %459 = ashr exact i64 %458, 4
  %460 = icmp ugt i64 %459, %453
  br i1 %460, label %443, label %429

461:                                              ; preds = %443
  %462 = landingpad { ptr, i32 }
          cleanup
  br label %920

463:                                              ; preds = %429
  %464 = load ptr, ptr %390, align 8, !tbaa !47
  %465 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %464, i32 noundef %421, i32 noundef %421)
          to label %466 unwind label %477

466:                                              ; preds = %463
  %467 = icmp eq i32 %465, -1
  br i1 %467, label %474, label %468

468:                                              ; preds = %466
  %469 = load ptr, ptr %391, align 8, !tbaa !44
  %470 = zext i32 %465 to i64
  %471 = getelementptr inbounds float, ptr %469, i64 %470
  %472 = load float, ptr %471, align 4, !tbaa !33
  %473 = fadd float %472, %441
  store float %473, ptr %471, align 4, !tbaa !33
  br label %474

474:                                              ; preds = %468, %466, %429
  %475 = add nuw nsw i64 %414, 1
  %476 = icmp eq i64 %475, %392
  br i1 %476, label %393, label %413

477:                                              ; preds = %463
  %478 = landingpad { ptr, i32 }
          cleanup
  br label %920

479:                                              ; preds = %408
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %410, i8 0, i64 %409, i1 false), !tbaa !52
  br label %480

480:                                              ; preds = %479, %399
  %481 = phi ptr [ null, %399 ], [ %407, %479 ]
  %482 = phi ptr [ null, %399 ], [ %410, %479 ]
  %483 = and i64 %400, 68719476720
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %499, label %485

485:                                              ; preds = %480
  %486 = and i8 %401, 1
  %487 = icmp eq i8 %486, 0
  %488 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %489 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %490 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %491 = icmp eq ptr %165, %166
  %492 = ptrtoint ptr %481 to i64
  %493 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 3
  %494 = and i64 %402, 4294967295
  %495 = and i64 %402, 1
  %496 = icmp eq i64 %494, 1
  %497 = sub nsw i64 %494, %495
  %498 = icmp eq i64 %495, 0
  br label %506

499:                                              ; preds = %882, %480
  %500 = icmp eq ptr %482, null
  br i1 %500, label %885, label %501

501:                                              ; preds = %499
  call void @_ZdlPv(ptr noundef nonnull %482) #23
  br label %885

502:                                              ; preds = %405
  %503 = landingpad { ptr, i32 }
          cleanup
  br label %920

504:                                              ; preds = %408
  %505 = landingpad { ptr, i32 }
          cleanup
  br label %917

506:                                              ; preds = %485, %882
  %507 = phi i64 [ 0, %485 ], [ %883, %882 ]
  %508 = load ptr, ptr %7, align 8, !tbaa !321
  %509 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %507
  %510 = load i32, ptr %509, align 8, !tbaa !317
  %511 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %507, i32 1
  %512 = load i32, ptr %511, align 4, !tbaa !319
  br i1 %487, label %513, label %597

513:                                              ; preds = %506
  %514 = load ptr, ptr %488, align 8, !tbaa !314
  %515 = load i32, ptr %489, align 8, !tbaa !22
  %516 = mul i32 %515, %512
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds double, ptr %514, i64 %517
  br i1 %496, label %519, label %537

519:                                              ; preds = %568, %513
  %520 = phi ptr [ undef, %513 ], [ %569, %568 ]
  %521 = phi i64 [ 0, %513 ], [ %571, %568 ]
  %522 = phi ptr [ %482, %513 ], [ %570, %568 ]
  %523 = phi ptr [ %481, %513 ], [ %569, %568 ]
  br i1 %498, label %535, label %524

524:                                              ; preds = %519
  %525 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %521, i32 1
  %526 = load i32, ptr %525, align 4, !tbaa !319
  %527 = zext i32 %526 to i64
  %528 = getelementptr inbounds double, ptr %518, i64 %527
  %529 = load double, ptr %528, align 8, !tbaa !52
  %530 = fcmp une double %529, 0.000000e+00
  br i1 %530, label %531, label %535

531:                                              ; preds = %524
  %532 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %521
  store double %529, ptr %522, align 8, !tbaa !52
  %533 = load i32, ptr %532, align 8, !tbaa !317
  %534 = getelementptr inbounds i32, ptr %523, i64 1
  store i32 %533, ptr %523, align 4, !tbaa !22
  br label %535

535:                                              ; preds = %524, %531, %519
  %536 = phi ptr [ %520, %519 ], [ %534, %531 ], [ %523, %524 ]
  br i1 %16, label %859, label %574

537:                                              ; preds = %513, %568
  %538 = phi i64 [ %571, %568 ], [ 0, %513 ]
  %539 = phi ptr [ %570, %568 ], [ %482, %513 ]
  %540 = phi ptr [ %569, %568 ], [ %481, %513 ]
  %541 = phi i64 [ %572, %568 ], [ 0, %513 ]
  %542 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %538, i32 1
  %543 = load i32, ptr %542, align 4, !tbaa !319
  %544 = zext i32 %543 to i64
  %545 = getelementptr inbounds double, ptr %518, i64 %544
  %546 = load double, ptr %545, align 8, !tbaa !52
  %547 = fcmp une double %546, 0.000000e+00
  br i1 %547, label %548, label %553

548:                                              ; preds = %537
  %549 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %538
  %550 = getelementptr inbounds double, ptr %539, i64 1
  store double %546, ptr %539, align 8, !tbaa !52
  %551 = load i32, ptr %549, align 8, !tbaa !317
  %552 = getelementptr inbounds i32, ptr %540, i64 1
  store i32 %551, ptr %540, align 4, !tbaa !22
  br label %553

553:                                              ; preds = %548, %537
  %554 = phi ptr [ %552, %548 ], [ %540, %537 ]
  %555 = phi ptr [ %550, %548 ], [ %539, %537 ]
  %556 = or i64 %538, 1
  %557 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %556, i32 1
  %558 = load i32, ptr %557, align 4, !tbaa !319
  %559 = zext i32 %558 to i64
  %560 = getelementptr inbounds double, ptr %518, i64 %559
  %561 = load double, ptr %560, align 8, !tbaa !52
  %562 = fcmp une double %561, 0.000000e+00
  br i1 %562, label %563, label %568

563:                                              ; preds = %553
  %564 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %556
  %565 = getelementptr inbounds double, ptr %555, i64 1
  store double %561, ptr %555, align 8, !tbaa !52
  %566 = load i32, ptr %564, align 8, !tbaa !317
  %567 = getelementptr inbounds i32, ptr %554, i64 1
  store i32 %566, ptr %554, align 4, !tbaa !22
  br label %568

568:                                              ; preds = %563, %553
  %569 = phi ptr [ %567, %563 ], [ %554, %553 ]
  %570 = phi ptr [ %565, %563 ], [ %555, %553 ]
  %571 = add nuw nsw i64 %538, 2
  %572 = add i64 %541, 2
  %573 = icmp eq i64 %572, %497
  br i1 %573, label %519, label %537

574:                                              ; preds = %535
  %575 = load ptr, ptr %490, align 8, !tbaa !60
  %576 = zext i32 %512 to i64
  %577 = getelementptr inbounds double, ptr %575, i64 %576
  %578 = load double, ptr %577, align 8, !tbaa !52
  br i1 %491, label %859, label %579

579:                                              ; preds = %574, %579
  %580 = phi i64 [ %595, %579 ], [ 0, %574 ]
  %581 = phi i32 [ %594, %579 ], [ 0, %574 ]
  %582 = phi double [ %593, %579 ], [ %578, %574 ]
  %583 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %580
  %584 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %580, i32 1
  %585 = load ptr, ptr %584, align 8, !tbaa !328
  %586 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %585, i64 0, i32 2
  %587 = load double, ptr %586, align 8, !tbaa !48
  %588 = load i32, ptr %583, align 8, !tbaa !326
  %589 = zext i32 %588 to i64
  %590 = getelementptr inbounds double, ptr %518, i64 %589
  %591 = load double, ptr %590, align 8, !tbaa !52
  %592 = fneg double %587
  %593 = call double @llvm.fmuladd.f64(double %592, double %591, double %582)
  %594 = add i32 %581, 1
  %595 = zext i32 %594 to i64
  %596 = icmp ugt i64 %384, %595
  br i1 %596, label %579, label %859

597:                                              ; preds = %506
  %598 = icmp eq i32 %512, -1
  %599 = load ptr, ptr %488, align 8
  %600 = load i32, ptr %489, align 8
  %601 = mul i32 %600, %512
  %602 = zext i32 %601 to i64
  %603 = getelementptr inbounds double, ptr %599, i64 %602
  %604 = select i1 %598, ptr null, ptr %603
  %605 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %507, i32 2
  %606 = load ptr, ptr %605, align 8, !tbaa !320
  %607 = icmp eq ptr %606, null
  %608 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %606, i64 0, i32 1
  br label %610

609:                                              ; preds = %778
  br i1 %16, label %859, label %783

610:                                              ; preds = %597, %778
  %611 = phi i64 [ 0, %597 ], [ %781, %778 ]
  %612 = phi ptr [ %482, %597 ], [ %780, %778 ]
  %613 = phi ptr [ %481, %597 ], [ %779, %778 ]
  %614 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %611
  %615 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %611, i32 1
  %616 = load i32, ptr %615, align 4, !tbaa !319
  br i1 %598, label %652, label %617

617:                                              ; preds = %610
  %618 = icmp eq i32 %616, -1
  br i1 %618, label %623, label %619

619:                                              ; preds = %617
  %620 = zext i32 %616 to i64
  %621 = getelementptr inbounds double, ptr %603, i64 %620
  %622 = load double, ptr %621, align 8, !tbaa !52
  br label %623

623:                                              ; preds = %617, %619
  %624 = phi double [ %622, %619 ], [ 0.000000e+00, %617 ]
  %625 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %611, i32 2
  %626 = load ptr, ptr %625, align 8, !tbaa !320
  %627 = icmp eq ptr %626, null
  br i1 %627, label %652, label %628

628:                                              ; preds = %623
  %629 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %626, i64 0, i32 1
  %630 = load ptr, ptr %629, align 8, !tbaa !31
  %631 = load ptr, ptr %626, align 8, !tbaa !32
  %632 = ptrtoint ptr %630 to i64
  %633 = ptrtoint ptr %631 to i64
  %634 = sub i64 %632, %633
  %635 = ashr exact i64 %634, 4
  %636 = icmp eq ptr %630, %631
  br i1 %636, label %652, label %637

637:                                              ; preds = %628, %637
  %638 = phi i64 [ %650, %637 ], [ 0, %628 ]
  %639 = phi i32 [ %649, %637 ], [ 0, %628 ]
  %640 = phi double [ %648, %637 ], [ %624, %628 ]
  %641 = getelementptr inbounds %"struct.std::pair", ptr %631, i64 %638
  %642 = load i32, ptr %641, align 8, !tbaa !37
  %643 = zext i32 %642 to i64
  %644 = getelementptr inbounds double, ptr %604, i64 %643
  %645 = load double, ptr %644, align 8, !tbaa !52
  %646 = getelementptr inbounds %"struct.std::pair", ptr %631, i64 %638, i32 1
  %647 = load double, ptr %646, align 8, !tbaa !35
  %648 = call double @llvm.fmuladd.f64(double %645, double %647, double %640)
  %649 = add i32 %639, 1
  %650 = zext i32 %649 to i64
  %651 = icmp ugt i64 %635, %650
  br i1 %651, label %637, label %652

652:                                              ; preds = %637, %628, %610, %623
  %653 = phi double [ %624, %623 ], [ 0.000000e+00, %610 ], [ %624, %628 ], [ %648, %637 ]
  br i1 %607, label %771, label %654

654:                                              ; preds = %652
  %655 = load ptr, ptr %608, align 8, !tbaa !31
  %656 = load ptr, ptr %606, align 8, !tbaa !32
  %657 = ptrtoint ptr %655 to i64
  %658 = ptrtoint ptr %656 to i64
  %659 = sub i64 %657, %658
  %660 = ashr exact i64 %659, 4
  %661 = icmp eq ptr %655, %656
  br i1 %661, label %771, label %662

662:                                              ; preds = %654
  %663 = icmp eq i32 %616, -1
  %664 = load ptr, ptr %488, align 8
  %665 = load i32, ptr %489, align 8
  %666 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %508, i64 %611, i32 2
  %667 = load ptr, ptr %666, align 8, !tbaa !320
  %668 = icmp eq ptr %667, null
  br i1 %668, label %669, label %697

669:                                              ; preds = %662
  br i1 %663, label %670, label %680

670:                                              ; preds = %669, %670
  %671 = phi i64 [ %678, %670 ], [ 0, %669 ]
  %672 = phi i32 [ %677, %670 ], [ 0, %669 ]
  %673 = phi double [ %676, %670 ], [ %653, %669 ]
  %674 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %671, i32 1
  %675 = load double, ptr %674, align 8, !tbaa !35
  %676 = call double @llvm.fmuladd.f64(double %675, double 0.000000e+00, double %673)
  %677 = add i32 %672, 1
  %678 = zext i32 %677 to i64
  %679 = icmp ugt i64 %660, %678
  br i1 %679, label %670, label %771

680:                                              ; preds = %669, %680
  %681 = phi i64 [ %695, %680 ], [ 0, %669 ]
  %682 = phi i32 [ %694, %680 ], [ 0, %669 ]
  %683 = phi double [ %693, %680 ], [ %653, %669 ]
  %684 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %681
  %685 = load i32, ptr %684, align 8, !tbaa !37
  %686 = mul i32 %665, %685
  %687 = add i32 %686, %616
  %688 = zext i32 %687 to i64
  %689 = getelementptr inbounds double, ptr %664, i64 %688
  %690 = load double, ptr %689, align 8, !tbaa !52
  %691 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %681, i32 1
  %692 = load double, ptr %691, align 8, !tbaa !35
  %693 = call double @llvm.fmuladd.f64(double %690, double %692, double %683)
  %694 = add i32 %682, 1
  %695 = zext i32 %694 to i64
  %696 = icmp ugt i64 %660, %695
  br i1 %696, label %680, label %771

697:                                              ; preds = %662
  %698 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %667, i64 0, i32 1
  %699 = load ptr, ptr %698, align 8, !tbaa !31
  %700 = load ptr, ptr %667, align 8, !tbaa !32
  %701 = ptrtoint ptr %699 to i64
  %702 = ptrtoint ptr %700 to i64
  %703 = sub i64 %701, %702
  %704 = ashr exact i64 %703, 4
  %705 = icmp eq ptr %699, %700
  br i1 %705, label %743, label %706

706:                                              ; preds = %697, %736
  %707 = phi i64 [ %741, %736 ], [ 0, %697 ]
  %708 = phi i32 [ %740, %736 ], [ 0, %697 ]
  %709 = phi double [ %739, %736 ], [ %653, %697 ]
  %710 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %707
  %711 = load i32, ptr %710, align 8, !tbaa !37
  %712 = mul i32 %665, %711
  br i1 %663, label %718, label %713

713:                                              ; preds = %706
  %714 = add i32 %712, %616
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds double, ptr %664, i64 %715
  %717 = load double, ptr %716, align 8, !tbaa !52
  br label %718

718:                                              ; preds = %706, %713
  %719 = phi double [ %717, %713 ], [ 0.000000e+00, %706 ]
  br label %720

720:                                              ; preds = %718, %720
  %721 = phi i64 [ %734, %720 ], [ 0, %718 ]
  %722 = phi i32 [ %733, %720 ], [ 0, %718 ]
  %723 = phi double [ %732, %720 ], [ %719, %718 ]
  %724 = getelementptr inbounds %"struct.std::pair", ptr %700, i64 %721
  %725 = load i32, ptr %724, align 8, !tbaa !37
  %726 = add i32 %712, %725
  %727 = zext i32 %726 to i64
  %728 = getelementptr inbounds double, ptr %664, i64 %727
  %729 = load double, ptr %728, align 8, !tbaa !52
  %730 = getelementptr inbounds %"struct.std::pair", ptr %700, i64 %721, i32 1
  %731 = load double, ptr %730, align 8, !tbaa !35
  %732 = call double @llvm.fmuladd.f64(double %729, double %731, double %723)
  %733 = add i32 %722, 1
  %734 = zext i32 %733 to i64
  %735 = icmp ugt i64 %704, %734
  br i1 %735, label %720, label %736

736:                                              ; preds = %720
  %737 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %707, i32 1
  %738 = load double, ptr %737, align 8, !tbaa !35
  %739 = call double @llvm.fmuladd.f64(double %732, double %738, double %709)
  %740 = add i32 %708, 1
  %741 = zext i32 %740 to i64
  %742 = icmp ugt i64 %660, %741
  br i1 %742, label %706, label %771

743:                                              ; preds = %697
  br i1 %663, label %744, label %754

744:                                              ; preds = %743, %744
  %745 = phi i64 [ %752, %744 ], [ 0, %743 ]
  %746 = phi i32 [ %751, %744 ], [ 0, %743 ]
  %747 = phi double [ %750, %744 ], [ %653, %743 ]
  %748 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %745, i32 1
  %749 = load double, ptr %748, align 8, !tbaa !35
  %750 = call double @llvm.fmuladd.f64(double %749, double 0.000000e+00, double %747)
  %751 = add i32 %746, 1
  %752 = zext i32 %751 to i64
  %753 = icmp ugt i64 %660, %752
  br i1 %753, label %744, label %771

754:                                              ; preds = %743, %754
  %755 = phi i64 [ %769, %754 ], [ 0, %743 ]
  %756 = phi i32 [ %768, %754 ], [ 0, %743 ]
  %757 = phi double [ %767, %754 ], [ %653, %743 ]
  %758 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %755
  %759 = load i32, ptr %758, align 8, !tbaa !37
  %760 = mul i32 %665, %759
  %761 = add i32 %760, %616
  %762 = zext i32 %761 to i64
  %763 = getelementptr inbounds double, ptr %664, i64 %762
  %764 = load double, ptr %763, align 8, !tbaa !52
  %765 = getelementptr inbounds %"struct.std::pair", ptr %656, i64 %755, i32 1
  %766 = load double, ptr %765, align 8, !tbaa !35
  %767 = call double @llvm.fmuladd.f64(double %764, double %766, double %757)
  %768 = add i32 %756, 1
  %769 = zext i32 %768 to i64
  %770 = icmp ugt i64 %660, %769
  br i1 %770, label %754, label %771

771:                                              ; preds = %736, %754, %744, %680, %670, %654, %652
  %772 = phi double [ %653, %652 ], [ %653, %654 ], [ %676, %670 ], [ %693, %680 ], [ %750, %744 ], [ %767, %754 ], [ %739, %736 ]
  %773 = fcmp une double %772, 0.000000e+00
  br i1 %773, label %774, label %778

774:                                              ; preds = %771
  %775 = getelementptr inbounds double, ptr %612, i64 1
  store double %772, ptr %612, align 8, !tbaa !52
  %776 = load i32, ptr %614, align 8, !tbaa !317
  %777 = getelementptr inbounds i32, ptr %613, i64 1
  store i32 %776, ptr %613, align 4, !tbaa !22
  br label %778

778:                                              ; preds = %774, %771
  %779 = phi ptr [ %777, %774 ], [ %613, %771 ]
  %780 = phi ptr [ %775, %774 ], [ %612, %771 ]
  %781 = add nuw nsw i64 %611, 1
  %782 = icmp eq i64 %781, %494
  br i1 %782, label %609, label %610

783:                                              ; preds = %609
  br i1 %598, label %807, label %784

784:                                              ; preds = %783
  %785 = load ptr, ptr %490, align 8, !tbaa !60
  %786 = zext i32 %512 to i64
  %787 = getelementptr inbounds double, ptr %785, i64 %786
  %788 = load double, ptr %787, align 8, !tbaa !52
  br i1 %491, label %807, label %789

789:                                              ; preds = %784, %789
  %790 = phi i64 [ %805, %789 ], [ 0, %784 ]
  %791 = phi i32 [ %804, %789 ], [ 0, %784 ]
  %792 = phi double [ %803, %789 ], [ %788, %784 ]
  %793 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %790
  %794 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %790, i32 1
  %795 = load ptr, ptr %794, align 8, !tbaa !328
  %796 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %795, i64 0, i32 2
  %797 = load double, ptr %796, align 8, !tbaa !48
  %798 = load i32, ptr %793, align 8, !tbaa !326
  %799 = zext i32 %798 to i64
  %800 = getelementptr inbounds double, ptr %604, i64 %799
  %801 = load double, ptr %800, align 8, !tbaa !52
  %802 = fneg double %797
  %803 = call double @llvm.fmuladd.f64(double %802, double %801, double %792)
  %804 = add i32 %791, 1
  %805 = zext i32 %804 to i64
  %806 = icmp ugt i64 %384, %805
  br i1 %806, label %789, label %807

807:                                              ; preds = %789, %784, %783
  %808 = phi double [ 0.000000e+00, %783 ], [ %788, %784 ], [ %803, %789 ]
  br i1 %607, label %859, label %809

809:                                              ; preds = %807
  %810 = load ptr, ptr %608, align 8, !tbaa !31
  %811 = load ptr, ptr %606, align 8, !tbaa !32
  %812 = ptrtoint ptr %810 to i64
  %813 = ptrtoint ptr %811 to i64
  %814 = sub i64 %812, %813
  %815 = ashr exact i64 %814, 4
  %816 = icmp eq ptr %810, %811
  br i1 %816, label %859, label %817

817:                                              ; preds = %809
  %818 = load ptr, ptr %490, align 8, !tbaa !60
  %819 = load ptr, ptr %488, align 8
  %820 = load i32, ptr %489, align 8
  br label %821

821:                                              ; preds = %817, %832
  %822 = phi i64 [ 0, %817 ], [ %838, %832 ]
  %823 = phi i32 [ 0, %817 ], [ %837, %832 ]
  %824 = phi double [ %808, %817 ], [ %836, %832 ]
  %825 = getelementptr inbounds %"struct.std::pair", ptr %811, i64 %822
  %826 = load i32, ptr %825, align 8, !tbaa !37
  %827 = zext i32 %826 to i64
  %828 = getelementptr inbounds double, ptr %818, i64 %827
  %829 = load double, ptr %828, align 8, !tbaa !52
  br i1 %491, label %832, label %830

830:                                              ; preds = %821
  %831 = mul i32 %820, %826
  br label %840

832:                                              ; preds = %840, %821
  %833 = phi double [ %829, %821 ], [ %855, %840 ]
  %834 = getelementptr inbounds %"struct.std::pair", ptr %811, i64 %822, i32 1
  %835 = load double, ptr %834, align 8, !tbaa !35
  %836 = call double @llvm.fmuladd.f64(double %833, double %835, double %824)
  %837 = add i32 %823, 1
  %838 = zext i32 %837 to i64
  %839 = icmp ugt i64 %815, %838
  br i1 %839, label %821, label %859

840:                                              ; preds = %830, %840
  %841 = phi i64 [ 0, %830 ], [ %857, %840 ]
  %842 = phi i32 [ 0, %830 ], [ %856, %840 ]
  %843 = phi double [ %829, %830 ], [ %855, %840 ]
  %844 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %841
  %845 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %841, i32 1
  %846 = load ptr, ptr %845, align 8, !tbaa !328
  %847 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %846, i64 0, i32 2
  %848 = load double, ptr %847, align 8, !tbaa !48
  %849 = load i32, ptr %844, align 8, !tbaa !326
  %850 = add i32 %831, %849
  %851 = zext i32 %850 to i64
  %852 = getelementptr inbounds double, ptr %819, i64 %851
  %853 = load double, ptr %852, align 8, !tbaa !52
  %854 = fneg double %848
  %855 = call double @llvm.fmuladd.f64(double %854, double %853, double %843)
  %856 = add i32 %842, 1
  %857 = zext i32 %856 to i64
  %858 = icmp ugt i64 %384, %857
  br i1 %858, label %840, label %832

859:                                              ; preds = %832, %579, %809, %574, %609, %807, %535
  %860 = phi ptr [ %536, %535 ], [ %779, %807 ], [ %779, %609 ], [ %536, %574 ], [ %779, %809 ], [ %536, %579 ], [ %779, %832 ]
  %861 = phi double [ 0.000000e+00, %535 ], [ %808, %807 ], [ 0.000000e+00, %609 ], [ %578, %574 ], [ %808, %809 ], [ %593, %579 ], [ %836, %832 ]
  %862 = ptrtoint ptr %860 to i64
  %863 = sub i64 %862, %492
  %864 = lshr exact i64 %863, 2
  %865 = trunc i64 %864 to i32
  %866 = icmp eq i32 %865, 0
  br i1 %866, label %872, label %867

867:                                              ; preds = %859
  invoke void @_ZN6dealii12SparseMatrixIfE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %4, i32 noundef %510, i32 noundef %865, ptr noundef nonnull %481, ptr noundef nonnull %482, i1 noundef zeroext false, i1 noundef zeroext true)
          to label %872 unwind label %868

868:                                              ; preds = %867
  %869 = landingpad { ptr, i32 }
          cleanup
  %870 = icmp eq ptr %482, null
  br i1 %870, label %915, label %871

871:                                              ; preds = %868
  call void @_ZdlPv(ptr noundef nonnull %482) #23
  br label %915

872:                                              ; preds = %867, %859
  %873 = fcmp une double %861, 0.000000e+00
  br i1 %873, label %874, label %882

874:                                              ; preds = %872
  %875 = load ptr, ptr %493, align 8, !tbaa !49
  %876 = zext i32 %510 to i64
  %877 = getelementptr inbounds float, ptr %875, i64 %876
  %878 = load float, ptr %877, align 4, !tbaa !33
  %879 = fpext float %878 to double
  %880 = fadd double %861, %879
  %881 = fptrunc double %880 to float
  store float %881, ptr %877, align 4, !tbaa !33
  br label %882

882:                                              ; preds = %874, %872
  %883 = add nuw nsw i64 %507, 1
  %884 = icmp eq i64 %883, %494
  br i1 %884, label %499, label %506

885:                                              ; preds = %501, %499
  %886 = icmp eq ptr %481, null
  br i1 %886, label %888, label %887

887:                                              ; preds = %885
  call void @_ZdlPv(ptr noundef nonnull %481) #23
  br label %888

888:                                              ; preds = %887, %885
  %889 = icmp eq ptr %166, null
  br i1 %889, label %891, label %890

890:                                              ; preds = %888
  call void @_ZdlPv(ptr noundef nonnull %166) #23
  br label %891

891:                                              ; preds = %890, %888
  %892 = load ptr, ptr %7, align 8, !tbaa !321
  %893 = load ptr, ptr %151, align 8, !tbaa !325
  %894 = icmp eq ptr %892, %893
  br i1 %894, label %910, label %895

895:                                              ; preds = %891, %905
  %896 = phi ptr [ %906, %905 ], [ %892, %891 ]
  %897 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %896, i64 0, i32 2
  %898 = load ptr, ptr %897, align 8, !tbaa !320
  %899 = icmp eq ptr %898, null
  br i1 %899, label %905, label %900

900:                                              ; preds = %895
  %901 = load ptr, ptr %898, align 8, !tbaa !32
  %902 = icmp eq ptr %901, null
  br i1 %902, label %904, label %903

903:                                              ; preds = %900
  call void @_ZdlPv(ptr noundef nonnull %901) #23
  br label %904

904:                                              ; preds = %903, %900
  call void @_ZdlPv(ptr noundef nonnull %898) #23
  store ptr null, ptr %897, align 8, !tbaa !320
  br label %905

905:                                              ; preds = %904, %895
  %906 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %896, i64 1
  %907 = icmp eq ptr %906, %893
  br i1 %907, label %908, label %895

908:                                              ; preds = %905
  %909 = load ptr, ptr %7, align 8, !tbaa !321
  br label %910

910:                                              ; preds = %908, %891
  %911 = phi ptr [ %909, %908 ], [ %892, %891 ]
  %912 = icmp eq ptr %911, null
  br i1 %912, label %914, label %913

913:                                              ; preds = %910
  call void @_ZdlPv(ptr noundef nonnull %911) #23
  br label %914

914:                                              ; preds = %910, %913
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  ret void

915:                                              ; preds = %871, %868
  %916 = icmp eq ptr %481, null
  br i1 %916, label %920, label %917

917:                                              ; preds = %504, %915
  %918 = phi { ptr, i32 } [ %505, %504 ], [ %869, %915 ]
  %919 = phi ptr [ %407, %504 ], [ %481, %915 ]
  call void @_ZdlPv(ptr noundef nonnull %919) #23
  br label %920

920:                                              ; preds = %314, %316, %477, %461, %917, %915, %502, %411
  %921 = phi ptr [ %166, %411 ], [ %166, %461 ], [ %166, %477 ], [ %166, %502 ], [ %166, %915 ], [ %166, %917 ], [ %203, %314 ], [ %203, %316 ]
  %922 = phi { ptr, i32 } [ %412, %411 ], [ %462, %461 ], [ %478, %477 ], [ %503, %502 ], [ %869, %915 ], [ %918, %917 ], [ %315, %314 ], [ %317, %316 ]
  %923 = icmp eq ptr %921, null
  br i1 %923, label %925, label %924

924:                                              ; preds = %920
  call void @_ZdlPv(ptr noundef nonnull %921) #23
  br label %925

925:                                              ; preds = %924, %920
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %926 unwind label %928

926:                                              ; preds = %925, %199
  %927 = phi { ptr, i32 } [ %922, %925 ], [ %198, %199 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  resume { ptr, i32 } %927

928:                                              ; preds = %925, %411, %197
  %929 = landingpad { ptr, i32 }
          catch ptr null
  %930 = extractvalue { ptr, i32 } %929, 0
  call void @__clang_call_terminate(ptr %930) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIdEEEEvRKNS_10FullMatrixIdEERKSt6vectorIjSaIjEERT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(320) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.dealii::Vector.35", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %5) #24
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !311
  %6 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  invoke void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(320) %3, ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %7 unwind label %13

7:                                                ; preds = %4
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !311
  %8 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !60
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  call void @_ZdaPv(ptr noundef nonnull %9) #23
  store ptr null, ptr %8, align 8, !tbaa !60
  br label %12

12:                                               ; preds = %7, %11
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #24
  ret void

13:                                               ; preds = %4
  %14 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %15 unwind label %16

15:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #24
  resume { ptr, i32 } %14

16:                                               ; preds = %13
  %17 = landingpad { ptr, i32 }
          catch ptr null
  %18 = extractvalue { ptr, i32 } %17, 0
  call void @__clang_call_terminate(ptr %18) #25
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(320) %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::vector.178", align 8
  %8 = alloca %"struct.dealii::internals::distributing", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !53
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 1
  %14 = load i32, ptr %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %12, i1 %15, i1 false
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !313
  %19 = load ptr, ptr %3, align 8, !tbaa !58
  %20 = ptrtoint ptr %18 to i64
  %21 = ptrtoint ptr %19 to i64
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 2
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 1
  %26 = load i32, ptr %25, align 8, !tbaa !61
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %59, label %28

28:                                               ; preds = %6
  %29 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !314
  %31 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %32 = load i32, ptr %31, align 8, !tbaa !22
  %33 = add i32 %32, 1
  %34 = and i64 %23, 4294967295
  %35 = add nsw i64 %34, -1
  %36 = and i64 %23, 3
  %37 = icmp ult i64 %35, 3
  br i1 %37, label %40, label %38

38:                                               ; preds = %28
  %39 = sub nsw i64 %34, %36
  br label %109

40:                                               ; preds = %109, %28
  %41 = phi double [ undef, %28 ], [ %143, %109 ]
  %42 = phi i64 [ 0, %28 ], [ %144, %109 ]
  %43 = phi double [ 0.000000e+00, %28 ], [ %143, %109 ]
  %44 = icmp eq i64 %36, 0
  br i1 %44, label %59, label %45

45:                                               ; preds = %40, %45
  %46 = phi i64 [ %56, %45 ], [ %42, %40 ]
  %47 = phi double [ %55, %45 ], [ %43, %40 ]
  %48 = phi i64 [ %57, %45 ], [ 0, %40 ]
  %49 = trunc i64 %46 to i32
  %50 = mul i32 %33, %49
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds double, ptr %30, i64 %51
  %53 = load double, ptr %52, align 8, !tbaa !52
  %54 = tail call double @llvm.fabs.f64(double %53)
  %55 = fadd double %47, %54
  %56 = add nuw nsw i64 %46, 1
  %57 = add i64 %48, 1
  %58 = icmp eq i64 %57, %36
  br i1 %58, label %59, label %45, !llvm.loop !333

59:                                               ; preds = %40, %45, %6
  %60 = phi double [ 0.000000e+00, %6 ], [ %41, %40 ], [ %55, %45 ]
  %61 = uitofp i32 %24 to double
  %62 = fdiv double %60, %61
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %63 = and i64 %23, 4294967295
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #24
  store i32 -1, ptr %8, align 8, !tbaa !317
  %64 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 1
  store i32 -1, ptr %64, align 4, !tbaa !319
  %65 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 2
  store ptr null, ptr %65, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  %66 = icmp eq i64 %63, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %150

69:                                               ; preds = %59
  %70 = shl nuw nsw i64 %63, 4
  %71 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %70) #21
          to label %72 unwind label %199

72:                                               ; preds = %69
  store ptr %71, ptr %7, align 8, !tbaa !321
  %73 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %71, i64 %63
  %74 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %73, ptr %74, align 8, !tbaa !323
  %75 = and i64 %23, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %72, %77
  %78 = phi ptr [ %84, %77 ], [ %71, %72 ]
  %79 = phi i64 [ %83, %77 ], [ %63, %72 ]
  %80 = phi i64 [ %85, %77 ], [ 0, %72 ]
  %81 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %78, i64 0, i32 2
  store ptr null, ptr %81, align 8, !tbaa !320
  store i32 -1, ptr %78, align 8, !tbaa !317
  %82 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %78, i64 0, i32 1
  store i32 -1, ptr %82, align 4, !tbaa !319
  %83 = add nsw i64 %79, -1
  %84 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %78, i64 1
  %85 = add i64 %80, 1
  %86 = icmp eq i64 %85, %75
  br i1 %86, label %87, label %77, !llvm.loop !334

87:                                               ; preds = %77, %72
  %88 = phi ptr [ undef, %72 ], [ %84, %77 ]
  %89 = phi ptr [ %71, %72 ], [ %84, %77 ]
  %90 = phi i64 [ %63, %72 ], [ %83, %77 ]
  %91 = icmp ult i64 %63, 4
  br i1 %91, label %147, label %92

92:                                               ; preds = %87, %92
  %93 = phi ptr [ %107, %92 ], [ %89, %87 ]
  %94 = phi i64 [ %106, %92 ], [ %90, %87 ]
  %95 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 0, i32 2
  store ptr null, ptr %95, align 8, !tbaa !320
  store i32 -1, ptr %93, align 8, !tbaa !317
  %96 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 0, i32 1
  store i32 -1, ptr %96, align 4, !tbaa !319
  %97 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 1
  %98 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 1, i32 2
  store ptr null, ptr %98, align 8, !tbaa !320
  store i32 -1, ptr %97, align 8, !tbaa !317
  %99 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 1, i32 1
  store i32 -1, ptr %99, align 4, !tbaa !319
  %100 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 2
  %101 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 2, i32 2
  store ptr null, ptr %101, align 8, !tbaa !320
  store i32 -1, ptr %100, align 8, !tbaa !317
  %102 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 2, i32 1
  store i32 -1, ptr %102, align 4, !tbaa !319
  %103 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 3
  %104 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 3, i32 2
  store ptr null, ptr %104, align 8, !tbaa !320
  store i32 -1, ptr %103, align 8, !tbaa !317
  %105 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 3, i32 1
  store i32 -1, ptr %105, align 4, !tbaa !319
  %106 = add nsw i64 %94, -4
  %107 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 4
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %147, label %92

109:                                              ; preds = %109, %38
  %110 = phi i64 [ 0, %38 ], [ %144, %109 ]
  %111 = phi double [ 0.000000e+00, %38 ], [ %143, %109 ]
  %112 = phi i64 [ 0, %38 ], [ %145, %109 ]
  %113 = trunc i64 %110 to i32
  %114 = mul i32 %33, %113
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds double, ptr %30, i64 %115
  %117 = load double, ptr %116, align 8, !tbaa !52
  %118 = tail call double @llvm.fabs.f64(double %117)
  %119 = fadd double %111, %118
  %120 = trunc i64 %110 to i32
  %121 = or i32 %120, 1
  %122 = mul i32 %33, %121
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds double, ptr %30, i64 %123
  %125 = load double, ptr %124, align 8, !tbaa !52
  %126 = tail call double @llvm.fabs.f64(double %125)
  %127 = fadd double %119, %126
  %128 = trunc i64 %110 to i32
  %129 = or i32 %128, 2
  %130 = mul i32 %33, %129
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %30, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !52
  %134 = tail call double @llvm.fabs.f64(double %133)
  %135 = fadd double %127, %134
  %136 = trunc i64 %110 to i32
  %137 = or i32 %136, 3
  %138 = mul i32 %33, %137
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds double, ptr %30, i64 %139
  %141 = load double, ptr %140, align 8, !tbaa !52
  %142 = tail call double @llvm.fabs.f64(double %141)
  %143 = fadd double %135, %142
  %144 = add nuw nsw i64 %110, 4
  %145 = add i64 %112, 4
  %146 = icmp eq i64 %145, %39
  br i1 %146, label %40, label %109

147:                                              ; preds = %92, %87
  %148 = phi ptr [ %88, %87 ], [ %107, %92 ]
  %149 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %148, ptr %149, align 8, !tbaa !325
  br label %150

150:                                              ; preds = %147, %67
  %151 = phi ptr [ null, %67 ], [ %71, %147 ]
  %152 = phi ptr [ null, %67 ], [ %148, %147 ]
  %153 = phi ptr [ %68, %67 ], [ %149, %147 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br i1 %27, label %164, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %156 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %157 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %158 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %159 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %160 = and i64 %23, 4294967295
  br label %202

161:                                              ; preds = %309
  %162 = load ptr, ptr %153, align 8, !tbaa !21
  %163 = load ptr, ptr %7, align 8, !tbaa !321
  br label %164

164:                                              ; preds = %161, %150
  %165 = phi ptr [ %151, %150 ], [ %163, %161 ]
  %166 = phi ptr [ %152, %150 ], [ %162, %161 ]
  %167 = phi ptr [ null, %150 ], [ %311, %161 ]
  %168 = phi ptr [ null, %150 ], [ %312, %161 ]
  %169 = phi i32 [ 0, %150 ], [ %313, %161 ]
  %170 = zext i32 %169 to i64
  store i32 -1, ptr %9, align 8, !tbaa !317
  %171 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %171, align 4, !tbaa !319
  %172 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %172, align 8, !tbaa !320
  %173 = ptrtoint ptr %166 to i64
  %174 = ptrtoint ptr %165 to i64
  %175 = sub i64 %173, %174
  %176 = ashr exact i64 %175, 4
  %177 = icmp ult i64 %176, %170
  br i1 %177, label %178, label %180

178:                                              ; preds = %164
  %179 = sub nsw i64 %170, %176
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %166, i64 noundef %179, ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %320 unwind label %417

180:                                              ; preds = %164
  %181 = icmp ugt i64 %176, %170
  br i1 %181, label %182, label %320

182:                                              ; preds = %180
  %183 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %165, i64 %170
  %184 = icmp eq ptr %166, %183
  br i1 %184, label %320, label %185

185:                                              ; preds = %182, %195
  %186 = phi ptr [ %196, %195 ], [ %183, %182 ]
  %187 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %186, i64 0, i32 2
  %188 = load ptr, ptr %187, align 8, !tbaa !320
  %189 = icmp eq ptr %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = load ptr, ptr %188, align 8, !tbaa !32
  %192 = icmp eq ptr %191, null
  br i1 %192, label %194, label %193

193:                                              ; preds = %190
  tail call void @_ZdlPv(ptr noundef nonnull %191) #23
  br label %194

194:                                              ; preds = %193, %190
  tail call void @_ZdlPv(ptr noundef nonnull %188) #23
  store ptr null, ptr %187, align 8, !tbaa !320
  br label %195

195:                                              ; preds = %194, %185
  %196 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %186, i64 1
  %197 = icmp eq ptr %196, %166
  br i1 %197, label %198, label %185

198:                                              ; preds = %195
  store ptr %183, ptr %153, align 8, !tbaa !325
  br label %320

199:                                              ; preds = %69
  %200 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %8)
          to label %201 unwind label %1261

201:                                              ; preds = %199
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br label %1259

202:                                              ; preds = %154, %309
  %203 = phi i64 [ 0, %154 ], [ %314, %309 ]
  %204 = phi i32 [ 0, %154 ], [ %313, %309 ]
  %205 = phi ptr [ null, %154 ], [ %312, %309 ]
  %206 = phi ptr [ null, %154 ], [ %311, %309 ]
  %207 = phi ptr [ null, %154 ], [ %310, %309 ]
  %208 = load ptr, ptr %156, align 8, !tbaa !55
  %209 = load i32, ptr %157, align 8, !tbaa !57
  %210 = load ptr, ptr %155, align 8, !tbaa !55
  %211 = ptrtoint ptr %208 to i64
  %212 = ptrtoint ptr %210 to i64
  %213 = sub i64 %211, %212
  %214 = shl nsw i64 %213, 3
  %215 = zext i32 %209 to i64
  %216 = add nsw i64 %214, %215
  %217 = load ptr, ptr %3, align 8, !tbaa !58
  %218 = getelementptr inbounds i32, ptr %217, i64 %203
  %219 = load i32, ptr %218, align 4, !tbaa !22
  %220 = zext i32 %219 to i64
  %221 = icmp ugt i64 %216, %220
  br i1 %221, label %222, label %232

222:                                              ; preds = %202
  %223 = lshr i32 %219, 6
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds i64, ptr %210, i64 %224
  %226 = and i32 %219, 63
  %227 = zext i32 %226 to i64
  %228 = shl nuw i64 1, %227
  %229 = load i64, ptr %225, align 8, !tbaa !42
  %230 = and i64 %229, %228
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %239

232:                                              ; preds = %222, %202
  %233 = zext i32 %204 to i64
  %234 = load ptr, ptr %7, align 8, !tbaa !321
  %235 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %234, i64 %233
  store i32 %219, ptr %235, align 8, !tbaa !317
  %236 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %234, i64 %233, i32 1
  %237 = trunc i64 %203 to i32
  store i32 %237, ptr %236, align 4, !tbaa !319
  %238 = add i32 %204, 1
  br label %309

239:                                              ; preds = %222
  %240 = load ptr, ptr %158, align 8, !tbaa !21
  %241 = load ptr, ptr %159, align 8, !tbaa !21
  %242 = ptrtoint ptr %241 to i64
  %243 = ptrtoint ptr %240 to i64
  %244 = sub i64 %242, %243
  %245 = icmp sgt i64 %244, 0
  br i1 %245, label %246, label %261

246:                                              ; preds = %239
  %247 = udiv exact i64 %244, 40
  br label %248

248:                                              ; preds = %248, %246
  %249 = phi i64 [ %247, %246 ], [ %259, %248 ]
  %250 = phi ptr [ %240, %246 ], [ %258, %248 ]
  %251 = lshr i64 %249, 1
  %252 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %250, i64 %251
  %253 = load i32, ptr %252, align 8, !tbaa !24
  %254 = icmp ult i32 %253, %219
  %255 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %252, i64 1
  %256 = xor i64 %251, -1
  %257 = add nsw i64 %249, %256
  %258 = select i1 %254, ptr %255, ptr %250
  %259 = select i1 %254, i64 %257, i64 %251
  %260 = icmp sgt i64 %259, 0
  br i1 %260, label %248, label %261

261:                                              ; preds = %248, %239
  %262 = phi ptr [ %240, %239 ], [ %258, %248 ]
  %263 = icmp eq ptr %206, %207
  br i1 %263, label %267, label %264

264:                                              ; preds = %261
  %265 = trunc i64 %203 to i32
  store i32 %265, ptr %206, align 8
  %266 = getelementptr inbounds i8, ptr %206, i64 8
  store ptr %262, ptr %266, align 8
  br label %304

267:                                              ; preds = %261
  %268 = ptrtoint ptr %206 to i64
  %269 = ptrtoint ptr %205 to i64
  %270 = sub i64 %268, %269
  %271 = icmp eq i64 %270, 9223372036854775792
  br i1 %271, label %272, label %274

272:                                              ; preds = %267
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %273 unwind label %318

273:                                              ; preds = %272
  unreachable

274:                                              ; preds = %267
  %275 = ashr exact i64 %270, 4
  %276 = tail call i64 @llvm.umax.i64(i64 %275, i64 1)
  %277 = add i64 %276, %275
  %278 = icmp ult i64 %277, %275
  %279 = icmp ugt i64 %277, 576460752303423487
  %280 = or i1 %278, %279
  %281 = select i1 %280, i64 576460752303423487, i64 %277
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %286, label %283

283:                                              ; preds = %274
  %284 = shl nuw nsw i64 %281, 4
  %285 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %284) #21
          to label %286 unwind label %316

286:                                              ; preds = %283, %274
  %287 = phi ptr [ null, %274 ], [ %285, %283 ]
  %288 = getelementptr inbounds %"struct.std::pair.188", ptr %287, i64 %275
  %289 = trunc i64 %203 to i32
  store i32 %289, ptr %288, align 8
  %290 = getelementptr inbounds i8, ptr %288, i64 8
  store ptr %262, ptr %290, align 8
  %291 = icmp eq ptr %205, %206
  br i1 %291, label %298, label %292

292:                                              ; preds = %286, %292
  %293 = phi ptr [ %296, %292 ], [ %287, %286 ]
  %294 = phi ptr [ %295, %292 ], [ %205, %286 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %293, ptr noundef nonnull align 8 dereferenceable(16) %294, i64 16, i1 false)
  %295 = getelementptr inbounds %"struct.std::pair.188", ptr %294, i64 1
  %296 = getelementptr inbounds %"struct.std::pair.188", ptr %293, i64 1
  %297 = icmp eq ptr %295, %206
  br i1 %297, label %298, label %292

298:                                              ; preds = %292, %286
  %299 = phi ptr [ %287, %286 ], [ %296, %292 ]
  %300 = icmp eq ptr %205, null
  br i1 %300, label %302, label %301

301:                                              ; preds = %298
  tail call void @_ZdlPv(ptr noundef nonnull %205) #23
  br label %302

302:                                              ; preds = %301, %298
  %303 = getelementptr inbounds %"struct.std::pair.188", ptr %287, i64 %281
  br label %304

304:                                              ; preds = %302, %264
  %305 = phi ptr [ %303, %302 ], [ %207, %264 ]
  %306 = phi ptr [ %299, %302 ], [ %206, %264 ]
  %307 = phi ptr [ %287, %302 ], [ %205, %264 ]
  %308 = getelementptr inbounds %"struct.std::pair.188", ptr %306, i64 1
  br label %309

309:                                              ; preds = %304, %232
  %310 = phi ptr [ %305, %304 ], [ %207, %232 ]
  %311 = phi ptr [ %308, %304 ], [ %206, %232 ]
  %312 = phi ptr [ %307, %304 ], [ %205, %232 ]
  %313 = phi i32 [ %204, %304 ], [ %238, %232 ]
  %314 = add nuw nsw i64 %203, 1
  %315 = icmp eq i64 %314, %160
  br i1 %315, label %161, label %202

316:                                              ; preds = %283
  %317 = landingpad { ptr, i32 }
          cleanup
  br label %1231

318:                                              ; preds = %272
  %319 = landingpad { ptr, i32 }
          cleanup
  br label %1231

320:                                              ; preds = %198, %182, %180, %178
  %321 = load ptr, ptr %172, align 8, !tbaa !320
  %322 = icmp eq ptr %321, null
  br i1 %322, label %328, label %323

323:                                              ; preds = %320
  %324 = load ptr, ptr %321, align 8, !tbaa !32
  %325 = icmp eq ptr %324, null
  br i1 %325, label %327, label %326

326:                                              ; preds = %323
  call void @_ZdlPv(ptr noundef nonnull %324) #23
  br label %327

327:                                              ; preds = %326, %323
  call void @_ZdlPv(ptr noundef nonnull %321) #23
  store ptr null, ptr %172, align 8, !tbaa !320
  br label %328

328:                                              ; preds = %327, %320
  %329 = load ptr, ptr %153, align 8, !tbaa !325
  %330 = load ptr, ptr %7, align 8, !tbaa !321
  %331 = ptrtoint ptr %329 to i64
  %332 = ptrtoint ptr %330 to i64
  %333 = sub i64 %331, %332
  %334 = lshr exact i64 %333, 4
  %335 = trunc i64 %334 to i32
  %336 = icmp ult i32 %335, 2
  br i1 %336, label %382, label %339

337:                                              ; preds = %378, %339
  %338 = icmp ult i32 %340, 4
  br i1 %338, label %382, label %339

339:                                              ; preds = %328, %337
  %340 = phi i32 [ %341, %337 ], [ %335, %328 ]
  %341 = lshr i32 %340, 1
  %342 = icmp ult i32 %341, %335
  br i1 %342, label %343, label %337

343:                                              ; preds = %339
  %344 = zext i32 %341 to i64
  br label %345

345:                                              ; preds = %378, %343
  %346 = phi i64 [ %344, %343 ], [ %379, %378 ]
  %347 = sub nuw nsw i64 %346, %344
  %348 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %346
  %349 = load <2 x i32>, ptr %348, align 8, !tbaa !22
  %350 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %347
  %351 = load i32, ptr %350, align 8, !tbaa !317
  %352 = extractelement <2 x i32> %349, i64 0
  %353 = icmp ugt i32 %351, %352
  br i1 %353, label %354, label %378

354:                                              ; preds = %345
  %355 = icmp ult i64 %346, %344
  %356 = trunc i64 %346 to i32
  br i1 %355, label %374, label %357

357:                                              ; preds = %354
  %358 = trunc i64 %347 to i32
  br label %359

359:                                              ; preds = %366, %357
  %360 = phi i32 [ %361, %366 ], [ %356, %357 ]
  %361 = phi i32 [ %372, %366 ], [ %358, %357 ]
  %362 = zext i32 %361 to i64
  %363 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %362
  %364 = load i32, ptr %363, align 8, !tbaa !317
  %365 = icmp ugt i32 %364, %352
  br i1 %365, label %366, label %374

366:                                              ; preds = %359
  %367 = zext i32 %360 to i64
  %368 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %367
  store i32 %364, ptr %368, align 8, !tbaa !317
  %369 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %362, i32 1
  %370 = load i32, ptr %369, align 4, !tbaa !319
  %371 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %367, i32 1
  store i32 %370, ptr %371, align 4, !tbaa !319
  %372 = sub i32 %361, %341
  %373 = icmp ult i32 %361, %341
  br i1 %373, label %374, label %359

374:                                              ; preds = %366, %359, %354
  %375 = phi i32 [ %356, %354 ], [ %360, %359 ], [ %361, %366 ]
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %376
  store <2 x i32> %349, ptr %377, align 8, !tbaa !22
  br label %378

378:                                              ; preds = %374, %345
  %379 = add nuw nsw i64 %346, 1
  %380 = trunc i64 %379 to i32
  %381 = icmp eq i32 %335, %380
  br i1 %381, label %337, label %345

382:                                              ; preds = %337, %328
  %383 = ptrtoint ptr %167 to i64
  %384 = ptrtoint ptr %168 to i64
  %385 = sub i64 %383, %384
  %386 = ashr exact i64 %385, 4
  %387 = and i64 %385, 68719476720
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %404, label %389

389:                                              ; preds = %382
  %390 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %391 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %392 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 1, i32 1
  %393 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 2
  %394 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 2, i32 1
  %395 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 3, i32 0, i32 1
  %396 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %397 = and i64 %386, 4294967295
  br label %419

398:                                              ; preds = %511
  %399 = load ptr, ptr %153, align 8, !tbaa !325
  %400 = load ptr, ptr %7, align 8, !tbaa !321
  %401 = ptrtoint ptr %399 to i64
  %402 = ptrtoint ptr %400 to i64
  %403 = sub i64 %401, %402
  br label %404

404:                                              ; preds = %398, %382
  %405 = phi i64 [ %403, %398 ], [ %333, %382 ]
  %406 = phi ptr [ %400, %398 ], [ %330, %382 ]
  %407 = phi i8 [ %436, %398 ], [ 0, %382 ]
  %408 = ashr exact i64 %405, 4
  %409 = trunc i64 %408 to i32
  %410 = and i64 %408, 4294967295
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %516, label %412

412:                                              ; preds = %404
  %413 = shl nuw nsw i64 %410, 2
  %414 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %413) #21
          to label %415 unwind label %634

415:                                              ; preds = %412
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %414, i8 0, i64 %413, i1 false), !tbaa !22
  %416 = getelementptr inbounds i32, ptr %414, i64 %410
  br label %516

417:                                              ; preds = %178
  %418 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %1231 unwind label %1261

419:                                              ; preds = %389, %511
  %420 = phi i64 [ 0, %389 ], [ %512, %511 ]
  %421 = phi i8 [ 0, %389 ], [ %436, %511 ]
  %422 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 %420
  %423 = load i32, ptr %422, align 8, !tbaa !326
  %424 = zext i32 %423 to i64
  %425 = load ptr, ptr %3, align 8, !tbaa !58
  %426 = getelementptr inbounds i32, ptr %425, i64 %424
  %427 = load i32, ptr %426, align 4, !tbaa !22
  %428 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 %420, i32 1
  %429 = load ptr, ptr %428, align 8, !tbaa !328
  %430 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %429, i64 0, i32 1
  %431 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %429, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %432 = load ptr, ptr %431, align 8, !tbaa !31
  %433 = load ptr, ptr %430, align 8, !tbaa !32
  %434 = icmp eq ptr %432, %433
  br i1 %434, label %435, label %448

435:                                              ; preds = %456, %419
  %436 = phi i8 [ %421, %419 ], [ 1, %456 ]
  %437 = load ptr, ptr %390, align 8, !tbaa !314
  %438 = load i32, ptr %391, align 8, !tbaa !22
  %439 = add i32 %438, 1
  %440 = mul i32 %439, %423
  %441 = zext i32 %440 to i64
  %442 = getelementptr inbounds double, ptr %437, i64 %441
  %443 = load double, ptr %442, align 8, !tbaa !52
  %444 = fcmp une double %443, 0.000000e+00
  %445 = call double @llvm.fabs.f64(double %443)
  %446 = select i1 %444, double %445, double %62
  %447 = fcmp oeq double %446, 0.000000e+00
  br i1 %447, label %511, label %468

448:                                              ; preds = %419, %456
  %449 = phi ptr [ %460, %456 ], [ %433, %419 ]
  %450 = phi i64 [ %458, %456 ], [ 0, %419 ]
  %451 = phi i32 [ %457, %456 ], [ 0, %419 ]
  %452 = getelementptr inbounds %"struct.std::pair", ptr %449, i64 %450
  %453 = load i32, ptr %452, align 8, !tbaa !37
  %454 = getelementptr inbounds %"struct.std::pair", ptr %449, i64 %450, i32 1
  %455 = load double, ptr %454, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %453, i32 %423, double %455)
          to label %456 unwind label %466

456:                                              ; preds = %448
  %457 = add i32 %451, 1
  %458 = zext i32 %457 to i64
  %459 = load ptr, ptr %431, align 8, !tbaa !31
  %460 = load ptr, ptr %430, align 8, !tbaa !32
  %461 = ptrtoint ptr %459 to i64
  %462 = ptrtoint ptr %460 to i64
  %463 = sub i64 %461, %462
  %464 = ashr exact i64 %463, 4
  %465 = icmp ugt i64 %464, %458
  br i1 %465, label %448, label %435

466:                                              ; preds = %448
  %467 = landingpad { ptr, i32 }
          cleanup
  br label %1231

468:                                              ; preds = %435
  %469 = load i32, ptr %25, align 8, !tbaa !61
  %470 = load ptr, ptr %392, align 8, !tbaa !58
  br label %471

471:                                              ; preds = %471, %468
  %472 = phi i32 [ %469, %468 ], [ %473, %471 ]
  %473 = add i32 %472, -1
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds i32, ptr %470, i64 %474
  %476 = load i32, ptr %475, align 4, !tbaa !22
  %477 = icmp ugt i32 %476, %427
  br i1 %477, label %471, label %478

478:                                              ; preds = %471
  %479 = load i32, ptr %393, align 8, !tbaa !61
  %480 = load ptr, ptr %394, align 8, !tbaa !58
  br label %481

481:                                              ; preds = %481, %478
  %482 = phi i32 [ %479, %478 ], [ %483, %481 ]
  %483 = add i32 %482, -1
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds i32, ptr %480, i64 %484
  %486 = load i32, ptr %485, align 4, !tbaa !22
  %487 = icmp ugt i32 %486, %427
  br i1 %487, label %481, label %488

488:                                              ; preds = %481
  %489 = sub i32 %427, %476
  %490 = sub i32 %427, %486
  %491 = load ptr, ptr %395, align 8, !tbaa !227, !noalias !335
  %492 = load i32, ptr %396, align 8, !tbaa !22, !noalias !335
  %493 = mul i32 %492, %473
  %494 = zext i32 %493 to i64
  %495 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %491, i64 %494
  %496 = zext i32 %483 to i64
  %497 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %495, i64 %496
  %498 = load ptr, ptr %497, align 8, !tbaa !229
  %499 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %498, i64 0, i32 1
  %500 = load ptr, ptr %499, align 8, !tbaa !47
  %501 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %500, i32 noundef %489, i32 noundef %490)
          to label %502 unwind label %514

502:                                              ; preds = %488
  %503 = icmp eq i32 %501, -1
  br i1 %503, label %511, label %504

504:                                              ; preds = %502
  %505 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %498, i64 0, i32 2
  %506 = load ptr, ptr %505, align 8, !tbaa !50
  %507 = zext i32 %501 to i64
  %508 = getelementptr inbounds double, ptr %506, i64 %507
  %509 = load double, ptr %508, align 8, !tbaa !52
  %510 = fadd double %446, %509
  store double %510, ptr %508, align 8, !tbaa !52
  br label %511

511:                                              ; preds = %504, %502, %435
  %512 = add nuw nsw i64 %420, 1
  %513 = icmp eq i64 %512, %397
  br i1 %513, label %398, label %419

514:                                              ; preds = %488
  %515 = landingpad { ptr, i32 }
          cleanup
  br label %1231

516:                                              ; preds = %415, %404
  %517 = phi ptr [ null, %404 ], [ %414, %415 ]
  %518 = phi ptr [ null, %404 ], [ %416, %415 ]
  %519 = icmp eq i32 %409, 0
  br i1 %519, label %592, label %520

520:                                              ; preds = %516
  %521 = and i64 %408, 4294967295
  %522 = icmp ult i64 %521, 17
  br i1 %522, label %523, label %542

523:                                              ; preds = %556, %542, %520
  %524 = phi i64 [ 0, %542 ], [ 0, %520 ], [ %555, %556 ]
  %525 = sub nsw i64 %408, %524
  %526 = xor i64 %524, -1
  %527 = add nsw i64 %521, %526
  %528 = and i64 %525, 3
  %529 = icmp eq i64 %528, 0
  br i1 %529, label %539, label %530

530:                                              ; preds = %523, %530
  %531 = phi i64 [ %536, %530 ], [ %524, %523 ]
  %532 = phi i64 [ %537, %530 ], [ 0, %523 ]
  %533 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %531
  %534 = load i32, ptr %533, align 8, !tbaa !317
  %535 = getelementptr inbounds i32, ptr %517, i64 %531
  store i32 %534, ptr %535, align 4, !tbaa !22
  %536 = add nuw nsw i64 %531, 1
  %537 = add i64 %532, 1
  %538 = icmp eq i64 %537, %528
  br i1 %538, label %539, label %530, !llvm.loop !338

539:                                              ; preds = %530, %523
  %540 = phi i64 [ %524, %523 ], [ %536, %530 ]
  %541 = icmp ult i64 %527, 3
  br i1 %541, label %592, label %636

542:                                              ; preds = %520
  %543 = shl nuw nsw i64 %521, 2
  %544 = getelementptr i8, ptr %517, i64 %543
  %545 = shl nuw nsw i64 %521, 4
  %546 = add nsw i64 %545, -12
  %547 = getelementptr i8, ptr %406, i64 %546
  %548 = icmp ult ptr %517, %547
  %549 = icmp ult ptr %406, %544
  %550 = and i1 %548, %549
  br i1 %550, label %523, label %551

551:                                              ; preds = %542
  %552 = and i64 %408, 7
  %553 = icmp eq i64 %552, 0
  %554 = select i1 %553, i64 8, i64 %552
  %555 = sub nsw i64 %521, %554
  br label %556

556:                                              ; preds = %556, %551
  %557 = phi i64 [ 0, %551 ], [ %590, %556 ]
  %558 = or i64 %557, 1
  %559 = or i64 %557, 2
  %560 = or i64 %557, 3
  %561 = or i64 %557, 4
  %562 = or i64 %557, 5
  %563 = or i64 %557, 6
  %564 = or i64 %557, 7
  %565 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %557
  %566 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %558
  %567 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %559
  %568 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %560
  %569 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %561
  %570 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %562
  %571 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %563
  %572 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %564
  %573 = load i32, ptr %565, align 8, !tbaa !317, !alias.scope !339
  %574 = load i32, ptr %566, align 8, !tbaa !317, !alias.scope !339
  %575 = load i32, ptr %567, align 8, !tbaa !317, !alias.scope !339
  %576 = load i32, ptr %568, align 8, !tbaa !317, !alias.scope !339
  %577 = load i32, ptr %569, align 8, !tbaa !317, !alias.scope !339
  %578 = load i32, ptr %570, align 8, !tbaa !317, !alias.scope !339
  %579 = load i32, ptr %571, align 8, !tbaa !317, !alias.scope !339
  %580 = load i32, ptr %572, align 8, !tbaa !317, !alias.scope !339
  %581 = insertelement <8 x i32> poison, i32 %573, i64 0
  %582 = insertelement <8 x i32> %581, i32 %574, i64 1
  %583 = insertelement <8 x i32> %582, i32 %575, i64 2
  %584 = insertelement <8 x i32> %583, i32 %576, i64 3
  %585 = insertelement <8 x i32> %584, i32 %577, i64 4
  %586 = insertelement <8 x i32> %585, i32 %578, i64 5
  %587 = insertelement <8 x i32> %586, i32 %579, i64 6
  %588 = insertelement <8 x i32> %587, i32 %580, i64 7
  %589 = getelementptr inbounds i32, ptr %517, i64 %557
  store <8 x i32> %588, ptr %589, align 4, !tbaa !22, !alias.scope !342, !noalias !339
  %590 = add nuw i64 %557, 8
  %591 = icmp eq i64 %590, %555
  br i1 %591, label %523, label %556, !llvm.loop !344

592:                                              ; preds = %539, %636, %516
  %593 = add i32 %26, 1
  %594 = zext i32 %593 to i64
  %595 = icmp eq i32 %593, 0
  br i1 %595, label %655, label %596

596:                                              ; preds = %592
  %597 = shl nuw nsw i64 %594, 2
  %598 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %597) #21
          to label %599 unwind label %762

599:                                              ; preds = %596
  %600 = getelementptr inbounds i32, ptr %598, i64 %594
  %601 = add nuw nsw i64 %594, 4611686018427387903
  %602 = and i64 %601, 4611686018427387903
  %603 = add nuw nsw i64 %602, 1
  %604 = icmp ult i64 %602, 31
  br i1 %604, label %628, label %605

605:                                              ; preds = %599
  %606 = and i64 %603, 9223372036854775776
  %607 = shl i64 %606, 2
  %608 = getelementptr i8, ptr %598, i64 %607
  %609 = insertelement <8 x i32> poison, i32 %409, i64 0
  %610 = shufflevector <8 x i32> %609, <8 x i32> poison, <8 x i32> zeroinitializer
  %611 = insertelement <8 x i32> poison, i32 %409, i64 0
  %612 = shufflevector <8 x i32> %611, <8 x i32> poison, <8 x i32> zeroinitializer
  %613 = insertelement <8 x i32> poison, i32 %409, i64 0
  %614 = shufflevector <8 x i32> %613, <8 x i32> poison, <8 x i32> zeroinitializer
  %615 = insertelement <8 x i32> poison, i32 %409, i64 0
  %616 = shufflevector <8 x i32> %615, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %617

617:                                              ; preds = %617, %605
  %618 = phi i64 [ 0, %605 ], [ %624, %617 ]
  %619 = shl i64 %618, 2
  %620 = getelementptr i8, ptr %598, i64 %619
  store <8 x i32> %610, ptr %620, align 4, !tbaa !22
  %621 = getelementptr i32, ptr %620, i64 8
  store <8 x i32> %612, ptr %621, align 4, !tbaa !22
  %622 = getelementptr i32, ptr %620, i64 16
  store <8 x i32> %614, ptr %622, align 4, !tbaa !22
  %623 = getelementptr i32, ptr %620, i64 24
  store <8 x i32> %616, ptr %623, align 4, !tbaa !22
  %624 = add nuw i64 %618, 32
  %625 = icmp eq i64 %624, %606
  br i1 %625, label %626, label %617, !llvm.loop !347

626:                                              ; preds = %617
  %627 = icmp eq i64 %603, %606
  br i1 %627, label %655, label %628

628:                                              ; preds = %599, %626
  %629 = phi ptr [ %598, %599 ], [ %608, %626 ]
  br label %630

630:                                              ; preds = %628, %630
  %631 = phi ptr [ %632, %630 ], [ %629, %628 ]
  store i32 %409, ptr %631, align 4, !tbaa !22
  %632 = getelementptr inbounds i32, ptr %631, i64 1
  %633 = icmp eq ptr %632, %600
  br i1 %633, label %655, label %630, !llvm.loop !348

634:                                              ; preds = %412
  %635 = landingpad { ptr, i32 }
          cleanup
  br label %1231

636:                                              ; preds = %539, %636
  %637 = phi i64 [ %653, %636 ], [ %540, %539 ]
  %638 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %637
  %639 = load i32, ptr %638, align 8, !tbaa !317
  %640 = getelementptr inbounds i32, ptr %517, i64 %637
  store i32 %639, ptr %640, align 4, !tbaa !22
  %641 = add nuw nsw i64 %637, 1
  %642 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %641
  %643 = load i32, ptr %642, align 8, !tbaa !317
  %644 = getelementptr inbounds i32, ptr %517, i64 %641
  store i32 %643, ptr %644, align 4, !tbaa !22
  %645 = add nuw nsw i64 %637, 2
  %646 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %645
  %647 = load i32, ptr %646, align 8, !tbaa !317
  %648 = getelementptr inbounds i32, ptr %517, i64 %645
  store i32 %647, ptr %648, align 4, !tbaa !22
  %649 = add nuw nsw i64 %637, 3
  %650 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %649
  %651 = load i32, ptr %650, align 8, !tbaa !317
  %652 = getelementptr inbounds i32, ptr %517, i64 %649
  store i32 %651, ptr %652, align 4, !tbaa !22
  %653 = add nuw nsw i64 %637, 4
  %654 = icmp eq i64 %653, %521
  br i1 %654, label %592, label %636, !llvm.loop !349

655:                                              ; preds = %630, %626, %592
  %656 = phi ptr [ null, %592 ], [ %598, %626 ], [ %598, %630 ]
  %657 = load i32, ptr %25, align 8, !tbaa !61
  store i32 0, ptr %656, align 4, !tbaa !22
  %658 = icmp ugt i32 %657, 1
  br i1 %658, label %662, label %659

659:                                              ; preds = %655
  %660 = ptrtoint ptr %518 to i64
  %661 = ptrtoint ptr %517 to i64
  br label %668

662:                                              ; preds = %655
  %663 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 1, i32 1
  %664 = load ptr, ptr %663, align 8, !tbaa !58
  %665 = ptrtoint ptr %518 to i64
  %666 = ptrtoint ptr %517 to i64
  %667 = zext i32 %657 to i64
  br label %680

668:                                              ; preds = %705, %659
  %669 = phi i64 [ %661, %659 ], [ %666, %705 ]
  %670 = phi i64 [ %660, %659 ], [ %665, %705 ]
  %671 = getelementptr inbounds i32, ptr %656, i64 1
  %672 = load i32, ptr %671, align 4, !tbaa !22
  %673 = sub i64 %670, %669
  %674 = ashr exact i64 %673, 2
  %675 = zext i32 %672 to i64
  %676 = icmp ugt i64 %674, %675
  br i1 %676, label %677, label %731

677:                                              ; preds = %668
  %678 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 1, i32 1
  %679 = load ptr, ptr %678, align 8, !tbaa !58
  br label %714

680:                                              ; preds = %705, %662
  %681 = phi i64 [ 1, %662 ], [ %712, %705 ]
  %682 = phi ptr [ %517, %662 ], [ %707, %705 ]
  %683 = getelementptr inbounds i32, ptr %664, i64 %681
  %684 = load i32, ptr %683, align 4, !tbaa !22
  %685 = ptrtoint ptr %682 to i64
  %686 = sub i64 %665, %685
  %687 = icmp sgt i64 %686, 0
  br i1 %687, label %688, label %705

688:                                              ; preds = %680
  %689 = lshr exact i64 %686, 2
  br label %690

690:                                              ; preds = %690, %688
  %691 = phi i64 [ %689, %688 ], [ %701, %690 ]
  %692 = phi ptr [ %682, %688 ], [ %700, %690 ]
  %693 = lshr i64 %691, 1
  %694 = getelementptr inbounds i32, ptr %692, i64 %693
  %695 = load i32, ptr %694, align 4, !tbaa !22
  %696 = icmp ult i32 %695, %684
  %697 = getelementptr inbounds i32, ptr %694, i64 1
  %698 = xor i64 %693, -1
  %699 = add nsw i64 %691, %698
  %700 = select i1 %696, ptr %697, ptr %692
  %701 = select i1 %696, i64 %699, i64 %693
  %702 = icmp sgt i64 %701, 0
  br i1 %702, label %690, label %703

703:                                              ; preds = %690
  %704 = ptrtoint ptr %700 to i64
  br label %705

705:                                              ; preds = %703, %680
  %706 = phi i64 [ %704, %703 ], [ %685, %680 ]
  %707 = phi ptr [ %700, %703 ], [ %682, %680 ]
  %708 = sub i64 %706, %666
  %709 = lshr exact i64 %708, 2
  %710 = trunc i64 %709 to i32
  %711 = getelementptr inbounds i32, ptr %656, i64 %681
  store i32 %710, ptr %711, align 4, !tbaa !22
  %712 = add nuw nsw i64 %681, 1
  %713 = icmp eq i64 %712, %667
  br i1 %713, label %668, label %680

714:                                              ; preds = %726, %677
  %715 = phi i64 [ %675, %677 ], [ %729, %726 ]
  %716 = phi i32 [ %672, %677 ], [ %728, %726 ]
  %717 = getelementptr inbounds i32, ptr %517, i64 %715
  %718 = load i32, ptr %717, align 4, !tbaa !22
  br label %719

719:                                              ; preds = %719, %714
  %720 = phi i32 [ %657, %714 ], [ %721, %719 ]
  %721 = add i32 %720, -1
  %722 = sext i32 %721 to i64
  %723 = getelementptr inbounds i32, ptr %679, i64 %722
  %724 = load i32, ptr %723, align 4, !tbaa !22
  %725 = icmp ugt i32 %724, %718
  br i1 %725, label %719, label %726

726:                                              ; preds = %719
  %727 = sub i32 %718, %724
  store i32 %727, ptr %717, align 4, !tbaa !22
  %728 = add i32 %716, 1
  %729 = zext i32 %728 to i64
  %730 = icmp ugt i64 %674, %729
  br i1 %730, label %714, label %731

731:                                              ; preds = %726, %668
  br i1 %411, label %739, label %732

732:                                              ; preds = %731
  %733 = shl nuw nsw i64 %410, 2
  %734 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %733) #21
          to label %735 unwind label %764

735:                                              ; preds = %732
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %734, i8 0, i64 %733, i1 false), !tbaa !22
  %736 = shl nuw nsw i64 %410, 3
  %737 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %736) #21
          to label %738 unwind label %766

738:                                              ; preds = %735
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %737, i8 0, i64 %736, i1 false), !tbaa !52
  br label %739

739:                                              ; preds = %738, %731
  %740 = phi ptr [ null, %731 ], [ %734, %738 ]
  %741 = phi ptr [ null, %731 ], [ %737, %738 ]
  %742 = icmp eq i32 %26, 0
  br i1 %742, label %759, label %743

743:                                              ; preds = %739
  %744 = and i8 %407, 1
  %745 = icmp eq i8 %744, 0
  %746 = ptrtoint ptr %740 to i64
  %747 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %748 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %749 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 3, i32 0, i32 1
  %750 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %751 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %752 = icmp eq ptr %167, %168
  %753 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 3
  %754 = zext i32 %26 to i64
  %755 = getelementptr inbounds double, ptr %741, i64 1
  %756 = getelementptr inbounds i32, ptr %740, i64 1
  br label %768

757:                                              ; preds = %1184, %768
  %758 = icmp eq i64 %770, %754
  br i1 %758, label %759, label %768

759:                                              ; preds = %757, %739
  %760 = icmp eq ptr %741, null
  br i1 %760, label %1187, label %761

761:                                              ; preds = %759
  call void @_ZdlPv(ptr noundef nonnull %741) #23
  br label %1187

762:                                              ; preds = %596
  %763 = landingpad { ptr, i32 }
          cleanup
  br label %1227

764:                                              ; preds = %732
  %765 = landingpad { ptr, i32 }
          cleanup
  br label %1225

766:                                              ; preds = %735
  %767 = landingpad { ptr, i32 }
          cleanup
  br label %1222

768:                                              ; preds = %743, %757
  %769 = phi i64 [ 0, %743 ], [ %770, %757 ]
  %770 = add nuw nsw i64 %769, 1
  %771 = getelementptr inbounds i32, ptr %656, i64 %770
  %772 = load i32, ptr %771, align 4, !tbaa !22
  %773 = getelementptr inbounds i32, ptr %656, i64 %769
  %774 = load i32, ptr %773, align 4, !tbaa !22
  %775 = icmp ult i32 %774, %772
  br i1 %775, label %776, label %757

776:                                              ; preds = %768
  %777 = zext i32 %774 to i64
  %778 = zext i32 %772 to i64
  %779 = trunc i64 %769 to i32
  br label %780

780:                                              ; preds = %776, %1184
  %781 = phi i64 [ %777, %776 ], [ %1185, %1184 ]
  %782 = getelementptr inbounds i32, ptr %517, i64 %781
  %783 = load i32, ptr %782, align 4, !tbaa !22
  %784 = load ptr, ptr %7, align 8, !tbaa !321
  %785 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %784, i64 %781, i32 1
  %786 = load i32, ptr %785, align 4, !tbaa !319
  %787 = icmp eq i32 %786, -1
  br label %789

788:                                              ; preds = %1072
  br i1 %16, label %1184, label %1074

789:                                              ; preds = %780, %1072
  %790 = phi i64 [ 0, %780 ], [ %791, %1072 ]
  %791 = add nuw nsw i64 %790, 1
  %792 = getelementptr inbounds i32, ptr %656, i64 %791
  %793 = load i32, ptr %792, align 4, !tbaa !22
  %794 = load ptr, ptr %747, align 8
  %795 = load i32, ptr %748, align 8
  %796 = mul i32 %795, %786
  %797 = zext i32 %796 to i64
  %798 = getelementptr inbounds double, ptr %794, i64 %797
  %799 = getelementptr inbounds i32, ptr %656, i64 %790
  %800 = load i32, ptr %799, align 4, !tbaa !22
  %801 = icmp ult i32 %800, %793
  br i1 %745, label %802, label %867

802:                                              ; preds = %789
  br i1 %801, label %803, label %1053

803:                                              ; preds = %802
  %804 = load ptr, ptr %7, align 8, !tbaa !321
  %805 = zext i32 %800 to i64
  %806 = zext i32 %793 to i64
  %807 = sub nsw i64 %806, %805
  %808 = xor i64 %805, -1
  %809 = and i64 %807, 1
  %810 = icmp eq i64 %809, 0
  br i1 %810, label %825, label %811

811:                                              ; preds = %803
  %812 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %804, i64 %805, i32 1
  %813 = load i32, ptr %812, align 4, !tbaa !319
  %814 = zext i32 %813 to i64
  %815 = getelementptr inbounds double, ptr %798, i64 %814
  %816 = load double, ptr %815, align 8, !tbaa !52
  %817 = fcmp une double %816, 0.000000e+00
  br i1 %817, label %818, label %821

818:                                              ; preds = %811
  store double %816, ptr %741, align 8, !tbaa !52
  %819 = getelementptr inbounds i32, ptr %517, i64 %805
  %820 = load i32, ptr %819, align 4, !tbaa !22
  store i32 %820, ptr %740, align 4, !tbaa !22
  br label %821

821:                                              ; preds = %818, %811
  %822 = phi ptr [ %756, %818 ], [ %740, %811 ]
  %823 = phi ptr [ %755, %818 ], [ %741, %811 ]
  %824 = add nuw nsw i64 %805, 1
  br label %825

825:                                              ; preds = %821, %803
  %826 = phi ptr [ undef, %803 ], [ %822, %821 ]
  %827 = phi i64 [ %805, %803 ], [ %824, %821 ]
  %828 = phi ptr [ %741, %803 ], [ %823, %821 ]
  %829 = phi ptr [ %740, %803 ], [ %822, %821 ]
  %830 = sub nsw i64 0, %806
  %831 = icmp eq i64 %808, %830
  br i1 %831, label %1053, label %832

832:                                              ; preds = %825, %862
  %833 = phi i64 [ %865, %862 ], [ %827, %825 ]
  %834 = phi ptr [ %864, %862 ], [ %828, %825 ]
  %835 = phi ptr [ %863, %862 ], [ %829, %825 ]
  %836 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %804, i64 %833, i32 1
  %837 = load i32, ptr %836, align 4, !tbaa !319
  %838 = zext i32 %837 to i64
  %839 = getelementptr inbounds double, ptr %798, i64 %838
  %840 = load double, ptr %839, align 8, !tbaa !52
  %841 = fcmp une double %840, 0.000000e+00
  br i1 %841, label %842, label %847

842:                                              ; preds = %832
  %843 = getelementptr inbounds double, ptr %834, i64 1
  store double %840, ptr %834, align 8, !tbaa !52
  %844 = getelementptr inbounds i32, ptr %517, i64 %833
  %845 = load i32, ptr %844, align 4, !tbaa !22
  %846 = getelementptr inbounds i32, ptr %835, i64 1
  store i32 %845, ptr %835, align 4, !tbaa !22
  br label %847

847:                                              ; preds = %842, %832
  %848 = phi ptr [ %846, %842 ], [ %835, %832 ]
  %849 = phi ptr [ %843, %842 ], [ %834, %832 ]
  %850 = add nuw nsw i64 %833, 1
  %851 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %804, i64 %850, i32 1
  %852 = load i32, ptr %851, align 4, !tbaa !319
  %853 = zext i32 %852 to i64
  %854 = getelementptr inbounds double, ptr %798, i64 %853
  %855 = load double, ptr %854, align 8, !tbaa !52
  %856 = fcmp une double %855, 0.000000e+00
  br i1 %856, label %857, label %862

857:                                              ; preds = %847
  %858 = getelementptr inbounds double, ptr %849, i64 1
  store double %855, ptr %849, align 8, !tbaa !52
  %859 = getelementptr inbounds i32, ptr %517, i64 %850
  %860 = load i32, ptr %859, align 4, !tbaa !22
  %861 = getelementptr inbounds i32, ptr %848, i64 1
  store i32 %860, ptr %848, align 4, !tbaa !22
  br label %862

862:                                              ; preds = %857, %847
  %863 = phi ptr [ %861, %857 ], [ %848, %847 ]
  %864 = phi ptr [ %858, %857 ], [ %849, %847 ]
  %865 = add nuw nsw i64 %833, 2
  %866 = icmp eq i64 %865, %806
  br i1 %866, label %1053, label %832

867:                                              ; preds = %789
  br i1 %801, label %868, label %1053

868:                                              ; preds = %867
  %869 = load ptr, ptr %7, align 8, !tbaa !321
  %870 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %869, i64 %781, i32 2
  %871 = load ptr, ptr %870, align 8, !tbaa !320
  %872 = icmp eq ptr %871, null
  %873 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %871, i64 0, i32 1
  %874 = zext i32 %800 to i64
  %875 = zext i32 %793 to i64
  br label %876

876:                                              ; preds = %868, %1048
  %877 = phi i64 [ %874, %868 ], [ %1051, %1048 ]
  %878 = phi ptr [ %741, %868 ], [ %1050, %1048 ]
  %879 = phi ptr [ %740, %868 ], [ %1049, %1048 ]
  %880 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %869, i64 %877, i32 1
  %881 = load i32, ptr %880, align 4, !tbaa !319
  br i1 %787, label %921, label %882

882:                                              ; preds = %876
  %883 = icmp eq i32 %881, -1
  br i1 %883, label %888, label %884

884:                                              ; preds = %882
  %885 = zext i32 %881 to i64
  %886 = getelementptr inbounds double, ptr %798, i64 %885
  %887 = load double, ptr %886, align 8, !tbaa !52
  br label %888

888:                                              ; preds = %882, %884
  %889 = phi double [ %887, %884 ], [ 0.000000e+00, %882 ]
  %890 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %869, i64 %877, i32 2
  %891 = load ptr, ptr %890, align 8, !tbaa !320
  %892 = icmp eq ptr %891, null
  br i1 %892, label %921, label %893

893:                                              ; preds = %888
  %894 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %891, i64 0, i32 1
  %895 = load ptr, ptr %894, align 8, !tbaa !31
  %896 = load ptr, ptr %891, align 8, !tbaa !32
  %897 = ptrtoint ptr %895 to i64
  %898 = ptrtoint ptr %896 to i64
  %899 = sub i64 %897, %898
  %900 = ashr exact i64 %899, 4
  %901 = icmp eq ptr %895, %896
  br i1 %901, label %921, label %902

902:                                              ; preds = %893
  %903 = load i32, ptr %748, align 8, !tbaa !22
  %904 = mul i32 %903, %786
  br label %905

905:                                              ; preds = %902, %905
  %906 = phi i64 [ 0, %902 ], [ %919, %905 ]
  %907 = phi i32 [ 0, %902 ], [ %918, %905 ]
  %908 = phi double [ %889, %902 ], [ %917, %905 ]
  %909 = getelementptr inbounds %"struct.std::pair", ptr %896, i64 %906
  %910 = load i32, ptr %909, align 8, !tbaa !37
  %911 = add i32 %904, %910
  %912 = zext i32 %911 to i64
  %913 = getelementptr inbounds double, ptr %794, i64 %912
  %914 = load double, ptr %913, align 8, !tbaa !52
  %915 = getelementptr inbounds %"struct.std::pair", ptr %896, i64 %906, i32 1
  %916 = load double, ptr %915, align 8, !tbaa !35
  %917 = call double @llvm.fmuladd.f64(double %914, double %916, double %908)
  %918 = add i32 %907, 1
  %919 = zext i32 %918 to i64
  %920 = icmp ugt i64 %900, %919
  br i1 %920, label %905, label %921

921:                                              ; preds = %905, %893, %876, %888
  %922 = phi double [ %889, %888 ], [ 0.000000e+00, %876 ], [ %889, %893 ], [ %917, %905 ]
  br i1 %872, label %1040, label %923

923:                                              ; preds = %921
  %924 = load ptr, ptr %873, align 8, !tbaa !31
  %925 = load ptr, ptr %871, align 8, !tbaa !32
  %926 = ptrtoint ptr %924 to i64
  %927 = ptrtoint ptr %925 to i64
  %928 = sub i64 %926, %927
  %929 = ashr exact i64 %928, 4
  %930 = icmp eq ptr %924, %925
  br i1 %930, label %1040, label %931

931:                                              ; preds = %923
  %932 = icmp eq i32 %881, -1
  %933 = load ptr, ptr %747, align 8
  %934 = load i32, ptr %748, align 8
  %935 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %869, i64 %877, i32 2
  %936 = load ptr, ptr %935, align 8, !tbaa !320
  %937 = icmp eq ptr %936, null
  br i1 %937, label %938, label %966

938:                                              ; preds = %931
  br i1 %932, label %939, label %949

939:                                              ; preds = %938, %939
  %940 = phi i64 [ %947, %939 ], [ 0, %938 ]
  %941 = phi i32 [ %946, %939 ], [ 0, %938 ]
  %942 = phi double [ %945, %939 ], [ %922, %938 ]
  %943 = getelementptr inbounds %"struct.std::pair", ptr %925, i64 %940, i32 1
  %944 = load double, ptr %943, align 8, !tbaa !35
  %945 = call double @llvm.fmuladd.f64(double %944, double 0.000000e+00, double %942)
  %946 = add i32 %941, 1
  %947 = zext i32 %946 to i64
  %948 = icmp ugt i64 %929, %947
  br i1 %948, label %939, label %1040

949:                                              ; preds = %938, %949
  %950 = phi i64 [ %964, %949 ], [ 0, %938 ]
  %951 = phi i32 [ %963, %949 ], [ 0, %938 ]
  %952 = phi double [ %962, %949 ], [ %922, %938 ]
  %953 = getelementptr inbounds %"struct.std::pair", ptr %925, i64 %950
  %954 = load i32, ptr %953, align 8, !tbaa !37
  %955 = mul i32 %934, %954
  %956 = add i32 %955, %881
  %957 = zext i32 %956 to i64
  %958 = getelementptr inbounds double, ptr %933, i64 %957
  %959 = load double, ptr %958, align 8, !tbaa !52
  %960 = getelementptr inbounds %"struct.std::pair", ptr %925, i64 %950, i32 1
  %961 = load double, ptr %960, align 8, !tbaa !35
  %962 = call double @llvm.fmuladd.f64(double %959, double %961, double %952)
  %963 = add i32 %951, 1
  %964 = zext i32 %963 to i64
  %965 = icmp ugt i64 %929, %964
  br i1 %965, label %949, label %1040

966:                                              ; preds = %931
  %967 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %936, i64 0, i32 1
  %968 = load ptr, ptr %967, align 8, !tbaa !31
  %969 = load ptr, ptr %936, align 8, !tbaa !32
  %970 = ptrtoint ptr %968 to i64
  %971 = ptrtoint ptr %969 to i64
  %972 = sub i64 %970, %971
  %973 = ashr exact i64 %972, 4
  %974 = icmp eq ptr %968, %969
  br i1 %974, label %1012, label %975

975:                                              ; preds = %966, %1005
  %976 = phi i64 [ %1010, %1005 ], [ 0, %966 ]
  %977 = phi i32 [ %1009, %1005 ], [ 0, %966 ]
  %978 = phi double [ %1008, %1005 ], [ %922, %966 ]
  %979 = getelementptr inbounds %"struct.std::pair", ptr %925, i64 %976
  %980 = load i32, ptr %979, align 8, !tbaa !37
  %981 = mul i32 %934, %980
  br i1 %932, label %987, label %982

982:                                              ; preds = %975
  %983 = add i32 %981, %881
  %984 = zext i32 %983 to i64
  %985 = getelementptr inbounds double, ptr %933, i64 %984
  %986 = load double, ptr %985, align 8, !tbaa !52
  br label %987

987:                                              ; preds = %975, %982
  %988 = phi double [ %986, %982 ], [ 0.000000e+00, %975 ]
  br label %989

989:                                              ; preds = %987, %989
  %990 = phi i64 [ %1003, %989 ], [ 0, %987 ]
  %991 = phi i32 [ %1002, %989 ], [ 0, %987 ]
  %992 = phi double [ %1001, %989 ], [ %988, %987 ]
  %993 = getelementptr inbounds %"struct.std::pair", ptr %969, i64 %990
  %994 = load i32, ptr %993, align 8, !tbaa !37
  %995 = add i32 %981, %994
  %996 = zext i32 %995 to i64
  %997 = getelementptr inbounds double, ptr %933, i64 %996
  %998 = load double, ptr %997, align 8, !tbaa !52
  %999 = getelementptr inbounds %"struct.std::pair", ptr %969, i64 %990, i32 1
  %1000 = load double, ptr %999, align 8, !tbaa !35
  %1001 = call double @llvm.fmuladd.f64(double %998, double %1000, double %992)
  %1002 = add i32 %991, 1
  %1003 = zext i32 %1002 to i64
  %1004 = icmp ugt i64 %973, %1003
  br i1 %1004, label %989, label %1005

1005:                                             ; preds = %989
  %1006 = getelementptr inbounds %"struct.std::pair", ptr %925, i64 %976, i32 1
  %1007 = load double, ptr %1006, align 8, !tbaa !35
  %1008 = call double @llvm.fmuladd.f64(double %1001, double %1007, double %978)
  %1009 = add i32 %977, 1
  %1010 = zext i32 %1009 to i64
  %1011 = icmp ugt i64 %929, %1010
  br i1 %1011, label %975, label %1040

1012:                                             ; preds = %966
  br i1 %932, label %1013, label %1023

1013:                                             ; preds = %1012, %1013
  %1014 = phi i64 [ %1021, %1013 ], [ 0, %1012 ]
  %1015 = phi i32 [ %1020, %1013 ], [ 0, %1012 ]
  %1016 = phi double [ %1019, %1013 ], [ %922, %1012 ]
  %1017 = getelementptr inbounds %"struct.std::pair", ptr %925, i64 %1014, i32 1
  %1018 = load double, ptr %1017, align 8, !tbaa !35
  %1019 = call double @llvm.fmuladd.f64(double %1018, double 0.000000e+00, double %1016)
  %1020 = add i32 %1015, 1
  %1021 = zext i32 %1020 to i64
  %1022 = icmp ugt i64 %929, %1021
  br i1 %1022, label %1013, label %1040

1023:                                             ; preds = %1012, %1023
  %1024 = phi i64 [ %1038, %1023 ], [ 0, %1012 ]
  %1025 = phi i32 [ %1037, %1023 ], [ 0, %1012 ]
  %1026 = phi double [ %1036, %1023 ], [ %922, %1012 ]
  %1027 = getelementptr inbounds %"struct.std::pair", ptr %925, i64 %1024
  %1028 = load i32, ptr %1027, align 8, !tbaa !37
  %1029 = mul i32 %934, %1028
  %1030 = add i32 %1029, %881
  %1031 = zext i32 %1030 to i64
  %1032 = getelementptr inbounds double, ptr %933, i64 %1031
  %1033 = load double, ptr %1032, align 8, !tbaa !52
  %1034 = getelementptr inbounds %"struct.std::pair", ptr %925, i64 %1024, i32 1
  %1035 = load double, ptr %1034, align 8, !tbaa !35
  %1036 = call double @llvm.fmuladd.f64(double %1033, double %1035, double %1026)
  %1037 = add i32 %1025, 1
  %1038 = zext i32 %1037 to i64
  %1039 = icmp ugt i64 %929, %1038
  br i1 %1039, label %1023, label %1040

1040:                                             ; preds = %1005, %1023, %1013, %949, %939, %923, %921
  %1041 = phi double [ %922, %921 ], [ %922, %923 ], [ %945, %939 ], [ %962, %949 ], [ %1019, %1013 ], [ %1036, %1023 ], [ %1008, %1005 ]
  %1042 = fcmp une double %1041, 0.000000e+00
  br i1 %1042, label %1043, label %1048

1043:                                             ; preds = %1040
  %1044 = getelementptr inbounds i32, ptr %517, i64 %877
  %1045 = load i32, ptr %1044, align 4, !tbaa !22
  %1046 = getelementptr inbounds i32, ptr %879, i64 1
  store i32 %1045, ptr %879, align 4, !tbaa !22
  %1047 = getelementptr inbounds double, ptr %878, i64 1
  store double %1041, ptr %878, align 8, !tbaa !52
  br label %1048

1048:                                             ; preds = %1043, %1040
  %1049 = phi ptr [ %1046, %1043 ], [ %879, %1040 ]
  %1050 = phi ptr [ %1047, %1043 ], [ %878, %1040 ]
  %1051 = add nuw nsw i64 %877, 1
  %1052 = icmp eq i64 %1051, %875
  br i1 %1052, label %1053, label %876

1053:                                             ; preds = %1048, %825, %862, %867, %802
  %1054 = phi ptr [ %740, %802 ], [ %740, %867 ], [ %826, %825 ], [ %863, %862 ], [ %1049, %1048 ]
  %1055 = ptrtoint ptr %1054 to i64
  %1056 = sub i64 %1055, %746
  %1057 = lshr exact i64 %1056, 2
  %1058 = trunc i64 %1057 to i32
  %1059 = icmp eq i32 %1058, 0
  br i1 %1059, label %1072, label %1060

1060:                                             ; preds = %1053
  %1061 = load ptr, ptr %749, align 8, !tbaa !227, !noalias !350
  %1062 = load i32, ptr %750, align 8, !tbaa !22, !noalias !350
  %1063 = mul i32 %1062, %779
  %1064 = zext i32 %1063 to i64
  %1065 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %1061, i64 %1064
  %1066 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %1065, i64 %790
  %1067 = load ptr, ptr %1066, align 8, !tbaa !229
  invoke void @_ZN6dealii12SparseMatrixIdE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %1067, i32 noundef %783, i32 noundef %1058, ptr noundef nonnull %740, ptr noundef nonnull %741, i1 noundef zeroext false, i1 noundef zeroext true)
          to label %1072 unwind label %1068

1068:                                             ; preds = %1060
  %1069 = landingpad { ptr, i32 }
          cleanup
  %1070 = icmp eq ptr %741, null
  br i1 %1070, label %1220, label %1071

1071:                                             ; preds = %1068
  call void @_ZdlPv(ptr noundef nonnull %741) #23
  br label %1220

1072:                                             ; preds = %1060, %1053
  %1073 = icmp eq i64 %791, %754
  br i1 %1073, label %788, label %789

1074:                                             ; preds = %788
  br i1 %787, label %1103, label %1075

1075:                                             ; preds = %1074
  %1076 = load ptr, ptr %751, align 8, !tbaa !60
  %1077 = zext i32 %786 to i64
  %1078 = getelementptr inbounds double, ptr %1076, i64 %1077
  %1079 = load double, ptr %1078, align 8, !tbaa !52
  br i1 %752, label %1103, label %1080

1080:                                             ; preds = %1075
  %1081 = load ptr, ptr %747, align 8, !tbaa !314
  %1082 = load i32, ptr %748, align 8, !tbaa !22
  %1083 = mul i32 %1082, %786
  br label %1084

1084:                                             ; preds = %1080, %1084
  %1085 = phi i64 [ 0, %1080 ], [ %1101, %1084 ]
  %1086 = phi i32 [ 0, %1080 ], [ %1100, %1084 ]
  %1087 = phi double [ %1079, %1080 ], [ %1099, %1084 ]
  %1088 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 %1085
  %1089 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 %1085, i32 1
  %1090 = load ptr, ptr %1089, align 8, !tbaa !328
  %1091 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1090, i64 0, i32 2
  %1092 = load double, ptr %1091, align 8, !tbaa !48
  %1093 = load i32, ptr %1088, align 8, !tbaa !326
  %1094 = add i32 %1083, %1093
  %1095 = zext i32 %1094 to i64
  %1096 = getelementptr inbounds double, ptr %1081, i64 %1095
  %1097 = load double, ptr %1096, align 8, !tbaa !52
  %1098 = fneg double %1092
  %1099 = call double @llvm.fmuladd.f64(double %1098, double %1097, double %1087)
  %1100 = add i32 %1086, 1
  %1101 = zext i32 %1100 to i64
  %1102 = icmp ugt i64 %386, %1101
  br i1 %1102, label %1084, label %1103

1103:                                             ; preds = %1084, %1075, %1074
  %1104 = phi double [ 0.000000e+00, %1074 ], [ %1079, %1075 ], [ %1099, %1084 ]
  %1105 = load ptr, ptr %7, align 8, !tbaa !321
  %1106 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1105, i64 %781
  %1107 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1105, i64 %781, i32 2
  %1108 = load ptr, ptr %1107, align 8, !tbaa !320
  %1109 = icmp eq ptr %1108, null
  br i1 %1109, label %1174, label %1110

1110:                                             ; preds = %1103
  %1111 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1108, i64 0, i32 1
  %1112 = load ptr, ptr %1111, align 8, !tbaa !31
  %1113 = load ptr, ptr %1108, align 8, !tbaa !32
  %1114 = ptrtoint ptr %1112 to i64
  %1115 = ptrtoint ptr %1113 to i64
  %1116 = sub i64 %1114, %1115
  %1117 = ashr exact i64 %1116, 4
  %1118 = icmp eq ptr %1112, %1113
  br i1 %1118, label %1174, label %1119

1119:                                             ; preds = %1110
  %1120 = load ptr, ptr %751, align 8, !tbaa !60
  %1121 = load ptr, ptr %747, align 8
  %1122 = load i32, ptr %748, align 8
  br i1 %752, label %1159, label %1123

1123:                                             ; preds = %1119, %1152
  %1124 = phi i64 [ %1157, %1152 ], [ 0, %1119 ]
  %1125 = phi i32 [ %1156, %1152 ], [ 0, %1119 ]
  %1126 = phi double [ %1155, %1152 ], [ %1104, %1119 ]
  %1127 = getelementptr inbounds %"struct.std::pair", ptr %1113, i64 %1124
  %1128 = load i32, ptr %1127, align 8, !tbaa !37
  %1129 = zext i32 %1128 to i64
  %1130 = getelementptr inbounds double, ptr %1120, i64 %1129
  %1131 = load double, ptr %1130, align 8, !tbaa !52
  %1132 = mul i32 %1122, %1128
  br label %1133

1133:                                             ; preds = %1123, %1133
  %1134 = phi i64 [ 0, %1123 ], [ %1150, %1133 ]
  %1135 = phi i32 [ 0, %1123 ], [ %1149, %1133 ]
  %1136 = phi double [ %1131, %1123 ], [ %1148, %1133 ]
  %1137 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 %1134
  %1138 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 %1134, i32 1
  %1139 = load ptr, ptr %1138, align 8, !tbaa !328
  %1140 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1139, i64 0, i32 2
  %1141 = load double, ptr %1140, align 8, !tbaa !48
  %1142 = load i32, ptr %1137, align 8, !tbaa !326
  %1143 = add i32 %1132, %1142
  %1144 = zext i32 %1143 to i64
  %1145 = getelementptr inbounds double, ptr %1121, i64 %1144
  %1146 = load double, ptr %1145, align 8, !tbaa !52
  %1147 = fneg double %1141
  %1148 = call double @llvm.fmuladd.f64(double %1147, double %1146, double %1136)
  %1149 = add i32 %1135, 1
  %1150 = zext i32 %1149 to i64
  %1151 = icmp ugt i64 %386, %1150
  br i1 %1151, label %1133, label %1152

1152:                                             ; preds = %1133
  %1153 = getelementptr inbounds %"struct.std::pair", ptr %1113, i64 %1124, i32 1
  %1154 = load double, ptr %1153, align 8, !tbaa !35
  %1155 = call double @llvm.fmuladd.f64(double %1148, double %1154, double %1126)
  %1156 = add i32 %1125, 1
  %1157 = zext i32 %1156 to i64
  %1158 = icmp ugt i64 %1117, %1157
  br i1 %1158, label %1123, label %1174

1159:                                             ; preds = %1119, %1159
  %1160 = phi i64 [ %1172, %1159 ], [ 0, %1119 ]
  %1161 = phi i32 [ %1171, %1159 ], [ 0, %1119 ]
  %1162 = phi double [ %1170, %1159 ], [ %1104, %1119 ]
  %1163 = getelementptr inbounds %"struct.std::pair", ptr %1113, i64 %1160
  %1164 = load i32, ptr %1163, align 8, !tbaa !37
  %1165 = zext i32 %1164 to i64
  %1166 = getelementptr inbounds double, ptr %1120, i64 %1165
  %1167 = load double, ptr %1166, align 8, !tbaa !52
  %1168 = getelementptr inbounds %"struct.std::pair", ptr %1113, i64 %1160, i32 1
  %1169 = load double, ptr %1168, align 8, !tbaa !35
  %1170 = call double @llvm.fmuladd.f64(double %1167, double %1169, double %1162)
  %1171 = add i32 %1161, 1
  %1172 = zext i32 %1171 to i64
  %1173 = icmp ugt i64 %1117, %1172
  br i1 %1173, label %1159, label %1174

1174:                                             ; preds = %1152, %1159, %1110, %1103
  %1175 = phi double [ %1104, %1103 ], [ %1104, %1110 ], [ %1170, %1159 ], [ %1155, %1152 ]
  %1176 = fcmp une double %1175, 0.000000e+00
  br i1 %1176, label %1177, label %1184

1177:                                             ; preds = %1174
  %1178 = load i32, ptr %1106, align 8, !tbaa !317
  %1179 = load ptr, ptr %753, align 8, !tbaa !60
  %1180 = zext i32 %1178 to i64
  %1181 = getelementptr inbounds double, ptr %1179, i64 %1180
  %1182 = load double, ptr %1181, align 8, !tbaa !52
  %1183 = fadd double %1175, %1182
  store double %1183, ptr %1181, align 8, !tbaa !52
  br label %1184

1184:                                             ; preds = %1174, %1177, %788
  %1185 = add nuw nsw i64 %781, 1
  %1186 = icmp eq i64 %1185, %778
  br i1 %1186, label %757, label %780

1187:                                             ; preds = %761, %759
  %1188 = icmp eq ptr %740, null
  br i1 %1188, label %1190, label %1189

1189:                                             ; preds = %1187
  call void @_ZdlPv(ptr noundef nonnull %740) #23
  br label %1190

1190:                                             ; preds = %1187, %1189
  call void @_ZdlPv(ptr noundef nonnull %656) #23
  %1191 = icmp eq ptr %517, null
  br i1 %1191, label %1193, label %1192

1192:                                             ; preds = %1190
  call void @_ZdlPv(ptr noundef nonnull %517) #23
  br label %1193

1193:                                             ; preds = %1192, %1190
  %1194 = icmp eq ptr %168, null
  br i1 %1194, label %1196, label %1195

1195:                                             ; preds = %1193
  call void @_ZdlPv(ptr noundef nonnull %168) #23
  br label %1196

1196:                                             ; preds = %1195, %1193
  %1197 = load ptr, ptr %7, align 8, !tbaa !321
  %1198 = load ptr, ptr %153, align 8, !tbaa !325
  %1199 = icmp eq ptr %1197, %1198
  br i1 %1199, label %1215, label %1200

1200:                                             ; preds = %1196, %1210
  %1201 = phi ptr [ %1211, %1210 ], [ %1197, %1196 ]
  %1202 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1201, i64 0, i32 2
  %1203 = load ptr, ptr %1202, align 8, !tbaa !320
  %1204 = icmp eq ptr %1203, null
  br i1 %1204, label %1210, label %1205

1205:                                             ; preds = %1200
  %1206 = load ptr, ptr %1203, align 8, !tbaa !32
  %1207 = icmp eq ptr %1206, null
  br i1 %1207, label %1209, label %1208

1208:                                             ; preds = %1205
  call void @_ZdlPv(ptr noundef nonnull %1206) #23
  br label %1209

1209:                                             ; preds = %1208, %1205
  call void @_ZdlPv(ptr noundef nonnull %1203) #23
  store ptr null, ptr %1202, align 8, !tbaa !320
  br label %1210

1210:                                             ; preds = %1209, %1200
  %1211 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1201, i64 1
  %1212 = icmp eq ptr %1211, %1198
  br i1 %1212, label %1213, label %1200

1213:                                             ; preds = %1210
  %1214 = load ptr, ptr %7, align 8, !tbaa !321
  br label %1215

1215:                                             ; preds = %1213, %1196
  %1216 = phi ptr [ %1214, %1213 ], [ %1197, %1196 ]
  %1217 = icmp eq ptr %1216, null
  br i1 %1217, label %1219, label %1218

1218:                                             ; preds = %1215
  call void @_ZdlPv(ptr noundef nonnull %1216) #23
  br label %1219

1219:                                             ; preds = %1215, %1218
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  ret void

1220:                                             ; preds = %1071, %1068
  %1221 = icmp eq ptr %740, null
  br i1 %1221, label %1225, label %1222

1222:                                             ; preds = %766, %1220
  %1223 = phi { ptr, i32 } [ %767, %766 ], [ %1069, %1220 ]
  %1224 = phi ptr [ %734, %766 ], [ %740, %1220 ]
  call void @_ZdlPv(ptr noundef nonnull %1224) #23
  br label %1225

1225:                                             ; preds = %764, %1220, %1222
  %1226 = phi { ptr, i32 } [ %765, %764 ], [ %1069, %1220 ], [ %1223, %1222 ]
  call void @_ZdlPv(ptr noundef nonnull %656) #23
  br label %1227

1227:                                             ; preds = %1225, %762
  %1228 = phi { ptr, i32 } [ %1226, %1225 ], [ %763, %762 ]
  %1229 = icmp eq ptr %517, null
  br i1 %1229, label %1231, label %1230

1230:                                             ; preds = %1227
  call void @_ZdlPv(ptr noundef nonnull %517) #23
  br label %1231

1231:                                             ; preds = %316, %318, %514, %466, %1230, %1227, %634, %417
  %1232 = phi ptr [ %168, %417 ], [ %168, %466 ], [ %168, %514 ], [ %168, %634 ], [ %168, %1227 ], [ %168, %1230 ], [ %205, %316 ], [ %205, %318 ]
  %1233 = phi { ptr, i32 } [ %418, %417 ], [ %467, %466 ], [ %515, %514 ], [ %635, %634 ], [ %1228, %1227 ], [ %1228, %1230 ], [ %317, %316 ], [ %319, %318 ]
  %1234 = icmp eq ptr %1232, null
  br i1 %1234, label %1236, label %1235

1235:                                             ; preds = %1231
  call void @_ZdlPv(ptr noundef nonnull %1232) #23
  br label %1236

1236:                                             ; preds = %1235, %1231
  %1237 = load ptr, ptr %7, align 8, !tbaa !321
  %1238 = load ptr, ptr %153, align 8, !tbaa !325
  %1239 = icmp eq ptr %1237, %1238
  br i1 %1239, label %1255, label %1240

1240:                                             ; preds = %1236, %1250
  %1241 = phi ptr [ %1251, %1250 ], [ %1237, %1236 ]
  %1242 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1241, i64 0, i32 2
  %1243 = load ptr, ptr %1242, align 8, !tbaa !320
  %1244 = icmp eq ptr %1243, null
  br i1 %1244, label %1250, label %1245

1245:                                             ; preds = %1240
  %1246 = load ptr, ptr %1243, align 8, !tbaa !32
  %1247 = icmp eq ptr %1246, null
  br i1 %1247, label %1249, label %1248

1248:                                             ; preds = %1245
  call void @_ZdlPv(ptr noundef nonnull %1246) #23
  br label %1249

1249:                                             ; preds = %1248, %1245
  call void @_ZdlPv(ptr noundef nonnull %1243) #23
  store ptr null, ptr %1242, align 8, !tbaa !320
  br label %1250

1250:                                             ; preds = %1249, %1240
  %1251 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1241, i64 1
  %1252 = icmp eq ptr %1251, %1238
  br i1 %1252, label %1253, label %1240

1253:                                             ; preds = %1250
  %1254 = load ptr, ptr %7, align 8, !tbaa !321
  br label %1255

1255:                                             ; preds = %1253, %1236
  %1256 = phi ptr [ %1254, %1253 ], [ %1237, %1236 ]
  %1257 = icmp eq ptr %1256, null
  br i1 %1257, label %1259, label %1258

1258:                                             ; preds = %1255
  call void @_ZdlPv(ptr noundef nonnull %1256) #23
  br label %1259

1259:                                             ; preds = %1258, %1255, %201
  %1260 = phi { ptr, i32 } [ %200, %201 ], [ %1233, %1255 ], [ %1233, %1258 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  resume { ptr, i32 } %1260

1261:                                             ; preds = %417, %199
  %1262 = landingpad { ptr, i32 }
          catch ptr null
  %1263 = extractvalue { ptr, i32 } %1262, 0
  call void @__clang_call_terminate(ptr %1263) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIdEENS_11BlockVectorIdEEEEvRKNS_10FullMatrixIdEERKNS_6VectorIdEERKSt6vectorIjSaIjEERT_RT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(320) %4, ptr noundef nonnull align 8 dereferenceable(128) %5) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIdEENS_11BlockVectorIdEEEEvRKNS_10FullMatrixIdEERKNS_6VectorIdEERKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(320) %4, ptr noundef nonnull align 8 dereferenceable(128) %5)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIdEENS_11BlockVectorIdEEEEvRKNS_10FullMatrixIdEERKNS_6VectorIdEERKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(320) %4, ptr noundef nonnull align 8 dereferenceable(128) %5) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::vector.178", align 8
  %8 = alloca %"struct.dealii::internals::distributing", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !53
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %5, i64 0, i32 2
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %5, i64 0, i32 2, i32 1
  %16 = load i32, ptr %14, align 8, !tbaa !61
  %17 = zext i32 %16 to i64
  %18 = load ptr, ptr %15, align 8, !tbaa !58
  %19 = getelementptr inbounds i32, ptr %18, i64 %17
  %20 = load i32, ptr %19, align 4, !tbaa !22
  %21 = icmp eq i32 %20, 0
  br label %22

22:                                               ; preds = %13, %6
  %23 = phi i1 [ false, %6 ], [ %21, %13 ]
  %24 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !313
  %26 = load ptr, ptr %3, align 8, !tbaa !58
  %27 = ptrtoint ptr %25 to i64
  %28 = ptrtoint ptr %26 to i64
  %29 = sub i64 %27, %28
  %30 = ashr exact i64 %29, 2
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !61
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !314
  %38 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %39 = load i32, ptr %38, align 8, !tbaa !22
  %40 = add i32 %39, 1
  %41 = and i64 %30, 4294967295
  %42 = add nsw i64 %41, -1
  %43 = and i64 %30, 3
  %44 = icmp ult i64 %42, 3
  br i1 %44, label %47, label %45

45:                                               ; preds = %35
  %46 = sub nsw i64 %41, %43
  br label %116

47:                                               ; preds = %116, %35
  %48 = phi double [ undef, %35 ], [ %150, %116 ]
  %49 = phi i64 [ 0, %35 ], [ %151, %116 ]
  %50 = phi double [ 0.000000e+00, %35 ], [ %150, %116 ]
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %66, label %52

52:                                               ; preds = %47, %52
  %53 = phi i64 [ %63, %52 ], [ %49, %47 ]
  %54 = phi double [ %62, %52 ], [ %50, %47 ]
  %55 = phi i64 [ %64, %52 ], [ 0, %47 ]
  %56 = trunc i64 %53 to i32
  %57 = mul i32 %40, %56
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds double, ptr %37, i64 %58
  %60 = load double, ptr %59, align 8, !tbaa !52
  %61 = tail call double @llvm.fabs.f64(double %60)
  %62 = fadd double %54, %61
  %63 = add nuw nsw i64 %53, 1
  %64 = add i64 %55, 1
  %65 = icmp eq i64 %64, %43
  br i1 %65, label %66, label %52, !llvm.loop !353

66:                                               ; preds = %47, %52, %22
  %67 = phi double [ 0.000000e+00, %22 ], [ %48, %47 ], [ %62, %52 ]
  %68 = uitofp i32 %31 to double
  %69 = fdiv double %67, %68
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %70 = and i64 %30, 4294967295
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #24
  store i32 -1, ptr %8, align 8, !tbaa !317
  %71 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 1
  store i32 -1, ptr %71, align 4, !tbaa !319
  %72 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 2
  store ptr null, ptr %72, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  %73 = icmp eq i64 %70, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %157

76:                                               ; preds = %66
  %77 = shl nuw nsw i64 %70, 4
  %78 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %77) #21
          to label %79 unwind label %206

79:                                               ; preds = %76
  store ptr %78, ptr %7, align 8, !tbaa !321
  %80 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %78, i64 %70
  %81 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %80, ptr %81, align 8, !tbaa !323
  %82 = and i64 %30, 3
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %79, %84
  %85 = phi ptr [ %91, %84 ], [ %78, %79 ]
  %86 = phi i64 [ %90, %84 ], [ %70, %79 ]
  %87 = phi i64 [ %92, %84 ], [ 0, %79 ]
  %88 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %85, i64 0, i32 2
  store ptr null, ptr %88, align 8, !tbaa !320
  store i32 -1, ptr %85, align 8, !tbaa !317
  %89 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %85, i64 0, i32 1
  store i32 -1, ptr %89, align 4, !tbaa !319
  %90 = add nsw i64 %86, -1
  %91 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %85, i64 1
  %92 = add i64 %87, 1
  %93 = icmp eq i64 %92, %82
  br i1 %93, label %94, label %84, !llvm.loop !354

94:                                               ; preds = %84, %79
  %95 = phi ptr [ undef, %79 ], [ %91, %84 ]
  %96 = phi ptr [ %78, %79 ], [ %91, %84 ]
  %97 = phi i64 [ %70, %79 ], [ %90, %84 ]
  %98 = icmp ult i64 %70, 4
  br i1 %98, label %154, label %99

99:                                               ; preds = %94, %99
  %100 = phi ptr [ %114, %99 ], [ %96, %94 ]
  %101 = phi i64 [ %113, %99 ], [ %97, %94 ]
  %102 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 0, i32 2
  store ptr null, ptr %102, align 8, !tbaa !320
  store i32 -1, ptr %100, align 8, !tbaa !317
  %103 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 0, i32 1
  store i32 -1, ptr %103, align 4, !tbaa !319
  %104 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 1
  %105 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 1, i32 2
  store ptr null, ptr %105, align 8, !tbaa !320
  store i32 -1, ptr %104, align 8, !tbaa !317
  %106 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 1, i32 1
  store i32 -1, ptr %106, align 4, !tbaa !319
  %107 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 2
  %108 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 2, i32 2
  store ptr null, ptr %108, align 8, !tbaa !320
  store i32 -1, ptr %107, align 8, !tbaa !317
  %109 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 2, i32 1
  store i32 -1, ptr %109, align 4, !tbaa !319
  %110 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 3
  %111 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 3, i32 2
  store ptr null, ptr %111, align 8, !tbaa !320
  store i32 -1, ptr %110, align 8, !tbaa !317
  %112 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 3, i32 1
  store i32 -1, ptr %112, align 4, !tbaa !319
  %113 = add nsw i64 %101, -4
  %114 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 4
  %115 = icmp eq i64 %113, 0
  br i1 %115, label %154, label %99

116:                                              ; preds = %116, %45
  %117 = phi i64 [ 0, %45 ], [ %151, %116 ]
  %118 = phi double [ 0.000000e+00, %45 ], [ %150, %116 ]
  %119 = phi i64 [ 0, %45 ], [ %152, %116 ]
  %120 = trunc i64 %117 to i32
  %121 = mul i32 %40, %120
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds double, ptr %37, i64 %122
  %124 = load double, ptr %123, align 8, !tbaa !52
  %125 = tail call double @llvm.fabs.f64(double %124)
  %126 = fadd double %118, %125
  %127 = trunc i64 %117 to i32
  %128 = or i32 %127, 1
  %129 = mul i32 %40, %128
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %37, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !52
  %133 = tail call double @llvm.fabs.f64(double %132)
  %134 = fadd double %126, %133
  %135 = trunc i64 %117 to i32
  %136 = or i32 %135, 2
  %137 = mul i32 %40, %136
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds double, ptr %37, i64 %138
  %140 = load double, ptr %139, align 8, !tbaa !52
  %141 = tail call double @llvm.fabs.f64(double %140)
  %142 = fadd double %134, %141
  %143 = trunc i64 %117 to i32
  %144 = or i32 %143, 3
  %145 = mul i32 %40, %144
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds double, ptr %37, i64 %146
  %148 = load double, ptr %147, align 8, !tbaa !52
  %149 = tail call double @llvm.fabs.f64(double %148)
  %150 = fadd double %142, %149
  %151 = add nuw nsw i64 %117, 4
  %152 = add i64 %119, 4
  %153 = icmp eq i64 %152, %46
  br i1 %153, label %47, label %116

154:                                              ; preds = %99, %94
  %155 = phi ptr [ %95, %94 ], [ %114, %99 ]
  %156 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %155, ptr %156, align 8, !tbaa !325
  br label %157

157:                                              ; preds = %154, %74
  %158 = phi ptr [ null, %74 ], [ %78, %154 ]
  %159 = phi ptr [ null, %74 ], [ %155, %154 ]
  %160 = phi ptr [ %75, %74 ], [ %156, %154 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br i1 %34, label %171, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %163 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %164 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %165 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %166 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %167 = and i64 %30, 4294967295
  br label %209

168:                                              ; preds = %316
  %169 = load ptr, ptr %160, align 8, !tbaa !21
  %170 = load ptr, ptr %7, align 8, !tbaa !321
  br label %171

171:                                              ; preds = %168, %157
  %172 = phi ptr [ %158, %157 ], [ %170, %168 ]
  %173 = phi ptr [ %159, %157 ], [ %169, %168 ]
  %174 = phi ptr [ null, %157 ], [ %318, %168 ]
  %175 = phi ptr [ null, %157 ], [ %319, %168 ]
  %176 = phi i32 [ 0, %157 ], [ %320, %168 ]
  %177 = zext i32 %176 to i64
  store i32 -1, ptr %9, align 8, !tbaa !317
  %178 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %178, align 4, !tbaa !319
  %179 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %179, align 8, !tbaa !320
  %180 = ptrtoint ptr %173 to i64
  %181 = ptrtoint ptr %172 to i64
  %182 = sub i64 %180, %181
  %183 = ashr exact i64 %182, 4
  %184 = icmp ult i64 %183, %177
  br i1 %184, label %185, label %187

185:                                              ; preds = %171
  %186 = sub nsw i64 %177, %183
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %173, i64 noundef %186, ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %327 unwind label %424

187:                                              ; preds = %171
  %188 = icmp ugt i64 %183, %177
  br i1 %188, label %189, label %327

189:                                              ; preds = %187
  %190 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %172, i64 %177
  %191 = icmp eq ptr %173, %190
  br i1 %191, label %327, label %192

192:                                              ; preds = %189, %202
  %193 = phi ptr [ %203, %202 ], [ %190, %189 ]
  %194 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %193, i64 0, i32 2
  %195 = load ptr, ptr %194, align 8, !tbaa !320
  %196 = icmp eq ptr %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %192
  %198 = load ptr, ptr %195, align 8, !tbaa !32
  %199 = icmp eq ptr %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  tail call void @_ZdlPv(ptr noundef nonnull %198) #23
  br label %201

201:                                              ; preds = %200, %197
  tail call void @_ZdlPv(ptr noundef nonnull %195) #23
  store ptr null, ptr %194, align 8, !tbaa !320
  br label %202

202:                                              ; preds = %201, %192
  %203 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %193, i64 1
  %204 = icmp eq ptr %203, %173
  br i1 %204, label %205, label %192

205:                                              ; preds = %202
  store ptr %190, ptr %160, align 8, !tbaa !325
  br label %327

206:                                              ; preds = %76
  %207 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %8)
          to label %208 unwind label %1284

208:                                              ; preds = %206
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br label %1282

209:                                              ; preds = %161, %316
  %210 = phi i64 [ 0, %161 ], [ %321, %316 ]
  %211 = phi i32 [ 0, %161 ], [ %320, %316 ]
  %212 = phi ptr [ null, %161 ], [ %319, %316 ]
  %213 = phi ptr [ null, %161 ], [ %318, %316 ]
  %214 = phi ptr [ null, %161 ], [ %317, %316 ]
  %215 = load ptr, ptr %163, align 8, !tbaa !55
  %216 = load i32, ptr %164, align 8, !tbaa !57
  %217 = load ptr, ptr %162, align 8, !tbaa !55
  %218 = ptrtoint ptr %215 to i64
  %219 = ptrtoint ptr %217 to i64
  %220 = sub i64 %218, %219
  %221 = shl nsw i64 %220, 3
  %222 = zext i32 %216 to i64
  %223 = add nsw i64 %221, %222
  %224 = load ptr, ptr %3, align 8, !tbaa !58
  %225 = getelementptr inbounds i32, ptr %224, i64 %210
  %226 = load i32, ptr %225, align 4, !tbaa !22
  %227 = zext i32 %226 to i64
  %228 = icmp ugt i64 %223, %227
  br i1 %228, label %229, label %239

229:                                              ; preds = %209
  %230 = lshr i32 %226, 6
  %231 = zext i32 %230 to i64
  %232 = getelementptr inbounds i64, ptr %217, i64 %231
  %233 = and i32 %226, 63
  %234 = zext i32 %233 to i64
  %235 = shl nuw i64 1, %234
  %236 = load i64, ptr %232, align 8, !tbaa !42
  %237 = and i64 %236, %235
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %246

239:                                              ; preds = %229, %209
  %240 = zext i32 %211 to i64
  %241 = load ptr, ptr %7, align 8, !tbaa !321
  %242 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %241, i64 %240
  store i32 %226, ptr %242, align 8, !tbaa !317
  %243 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %241, i64 %240, i32 1
  %244 = trunc i64 %210 to i32
  store i32 %244, ptr %243, align 4, !tbaa !319
  %245 = add i32 %211, 1
  br label %316

246:                                              ; preds = %229
  %247 = load ptr, ptr %165, align 8, !tbaa !21
  %248 = load ptr, ptr %166, align 8, !tbaa !21
  %249 = ptrtoint ptr %248 to i64
  %250 = ptrtoint ptr %247 to i64
  %251 = sub i64 %249, %250
  %252 = icmp sgt i64 %251, 0
  br i1 %252, label %253, label %268

253:                                              ; preds = %246
  %254 = udiv exact i64 %251, 40
  br label %255

255:                                              ; preds = %255, %253
  %256 = phi i64 [ %254, %253 ], [ %266, %255 ]
  %257 = phi ptr [ %247, %253 ], [ %265, %255 ]
  %258 = lshr i64 %256, 1
  %259 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %257, i64 %258
  %260 = load i32, ptr %259, align 8, !tbaa !24
  %261 = icmp ult i32 %260, %226
  %262 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %259, i64 1
  %263 = xor i64 %258, -1
  %264 = add nsw i64 %256, %263
  %265 = select i1 %261, ptr %262, ptr %257
  %266 = select i1 %261, i64 %264, i64 %258
  %267 = icmp sgt i64 %266, 0
  br i1 %267, label %255, label %268

268:                                              ; preds = %255, %246
  %269 = phi ptr [ %247, %246 ], [ %265, %255 ]
  %270 = icmp eq ptr %213, %214
  br i1 %270, label %274, label %271

271:                                              ; preds = %268
  %272 = trunc i64 %210 to i32
  store i32 %272, ptr %213, align 8
  %273 = getelementptr inbounds i8, ptr %213, i64 8
  store ptr %269, ptr %273, align 8
  br label %311

274:                                              ; preds = %268
  %275 = ptrtoint ptr %213 to i64
  %276 = ptrtoint ptr %212 to i64
  %277 = sub i64 %275, %276
  %278 = icmp eq i64 %277, 9223372036854775792
  br i1 %278, label %279, label %281

279:                                              ; preds = %274
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %280 unwind label %325

280:                                              ; preds = %279
  unreachable

281:                                              ; preds = %274
  %282 = ashr exact i64 %277, 4
  %283 = tail call i64 @llvm.umax.i64(i64 %282, i64 1)
  %284 = add i64 %283, %282
  %285 = icmp ult i64 %284, %282
  %286 = icmp ugt i64 %284, 576460752303423487
  %287 = or i1 %285, %286
  %288 = select i1 %287, i64 576460752303423487, i64 %284
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %293, label %290

290:                                              ; preds = %281
  %291 = shl nuw nsw i64 %288, 4
  %292 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %291) #21
          to label %293 unwind label %323

293:                                              ; preds = %290, %281
  %294 = phi ptr [ null, %281 ], [ %292, %290 ]
  %295 = getelementptr inbounds %"struct.std::pair.188", ptr %294, i64 %282
  %296 = trunc i64 %210 to i32
  store i32 %296, ptr %295, align 8
  %297 = getelementptr inbounds i8, ptr %295, i64 8
  store ptr %269, ptr %297, align 8
  %298 = icmp eq ptr %212, %213
  br i1 %298, label %305, label %299

299:                                              ; preds = %293, %299
  %300 = phi ptr [ %303, %299 ], [ %294, %293 ]
  %301 = phi ptr [ %302, %299 ], [ %212, %293 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %300, ptr noundef nonnull align 8 dereferenceable(16) %301, i64 16, i1 false)
  %302 = getelementptr inbounds %"struct.std::pair.188", ptr %301, i64 1
  %303 = getelementptr inbounds %"struct.std::pair.188", ptr %300, i64 1
  %304 = icmp eq ptr %302, %213
  br i1 %304, label %305, label %299

305:                                              ; preds = %299, %293
  %306 = phi ptr [ %294, %293 ], [ %303, %299 ]
  %307 = icmp eq ptr %212, null
  br i1 %307, label %309, label %308

308:                                              ; preds = %305
  tail call void @_ZdlPv(ptr noundef nonnull %212) #23
  br label %309

309:                                              ; preds = %308, %305
  %310 = getelementptr inbounds %"struct.std::pair.188", ptr %294, i64 %288
  br label %311

311:                                              ; preds = %309, %271
  %312 = phi ptr [ %310, %309 ], [ %214, %271 ]
  %313 = phi ptr [ %306, %309 ], [ %213, %271 ]
  %314 = phi ptr [ %294, %309 ], [ %212, %271 ]
  %315 = getelementptr inbounds %"struct.std::pair.188", ptr %313, i64 1
  br label %316

316:                                              ; preds = %311, %239
  %317 = phi ptr [ %312, %311 ], [ %214, %239 ]
  %318 = phi ptr [ %315, %311 ], [ %213, %239 ]
  %319 = phi ptr [ %314, %311 ], [ %212, %239 ]
  %320 = phi i32 [ %211, %311 ], [ %245, %239 ]
  %321 = add nuw nsw i64 %210, 1
  %322 = icmp eq i64 %321, %167
  br i1 %322, label %168, label %209

323:                                              ; preds = %290
  %324 = landingpad { ptr, i32 }
          cleanup
  br label %1254

325:                                              ; preds = %279
  %326 = landingpad { ptr, i32 }
          cleanup
  br label %1254

327:                                              ; preds = %205, %189, %187, %185
  %328 = load ptr, ptr %179, align 8, !tbaa !320
  %329 = icmp eq ptr %328, null
  br i1 %329, label %335, label %330

330:                                              ; preds = %327
  %331 = load ptr, ptr %328, align 8, !tbaa !32
  %332 = icmp eq ptr %331, null
  br i1 %332, label %334, label %333

333:                                              ; preds = %330
  call void @_ZdlPv(ptr noundef nonnull %331) #23
  br label %334

334:                                              ; preds = %333, %330
  call void @_ZdlPv(ptr noundef nonnull %328) #23
  store ptr null, ptr %179, align 8, !tbaa !320
  br label %335

335:                                              ; preds = %334, %327
  %336 = load ptr, ptr %160, align 8, !tbaa !325
  %337 = load ptr, ptr %7, align 8, !tbaa !321
  %338 = ptrtoint ptr %336 to i64
  %339 = ptrtoint ptr %337 to i64
  %340 = sub i64 %338, %339
  %341 = lshr exact i64 %340, 4
  %342 = trunc i64 %341 to i32
  %343 = icmp ult i32 %342, 2
  br i1 %343, label %389, label %346

344:                                              ; preds = %385, %346
  %345 = icmp ult i32 %347, 4
  br i1 %345, label %389, label %346

346:                                              ; preds = %335, %344
  %347 = phi i32 [ %348, %344 ], [ %342, %335 ]
  %348 = lshr i32 %347, 1
  %349 = icmp ult i32 %348, %342
  br i1 %349, label %350, label %344

350:                                              ; preds = %346
  %351 = zext i32 %348 to i64
  br label %352

352:                                              ; preds = %385, %350
  %353 = phi i64 [ %351, %350 ], [ %386, %385 ]
  %354 = sub nuw nsw i64 %353, %351
  %355 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %353
  %356 = load <2 x i32>, ptr %355, align 8, !tbaa !22
  %357 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %354
  %358 = load i32, ptr %357, align 8, !tbaa !317
  %359 = extractelement <2 x i32> %356, i64 0
  %360 = icmp ugt i32 %358, %359
  br i1 %360, label %361, label %385

361:                                              ; preds = %352
  %362 = icmp ult i64 %353, %351
  %363 = trunc i64 %353 to i32
  br i1 %362, label %381, label %364

364:                                              ; preds = %361
  %365 = trunc i64 %354 to i32
  br label %366

366:                                              ; preds = %373, %364
  %367 = phi i32 [ %368, %373 ], [ %363, %364 ]
  %368 = phi i32 [ %379, %373 ], [ %365, %364 ]
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %369
  %371 = load i32, ptr %370, align 8, !tbaa !317
  %372 = icmp ugt i32 %371, %359
  br i1 %372, label %373, label %381

373:                                              ; preds = %366
  %374 = zext i32 %367 to i64
  %375 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %374
  store i32 %371, ptr %375, align 8, !tbaa !317
  %376 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %369, i32 1
  %377 = load i32, ptr %376, align 4, !tbaa !319
  %378 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %374, i32 1
  store i32 %377, ptr %378, align 4, !tbaa !319
  %379 = sub i32 %368, %348
  %380 = icmp ult i32 %368, %348
  br i1 %380, label %381, label %366

381:                                              ; preds = %373, %366, %361
  %382 = phi i32 [ %363, %361 ], [ %367, %366 ], [ %368, %373 ]
  %383 = zext i32 %382 to i64
  %384 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %383
  store <2 x i32> %356, ptr %384, align 8, !tbaa !22
  br label %385

385:                                              ; preds = %381, %352
  %386 = add nuw nsw i64 %353, 1
  %387 = trunc i64 %386 to i32
  %388 = icmp eq i32 %342, %387
  br i1 %388, label %344, label %352

389:                                              ; preds = %344, %335
  %390 = ptrtoint ptr %174 to i64
  %391 = ptrtoint ptr %175 to i64
  %392 = sub i64 %390, %391
  %393 = ashr exact i64 %392, 4
  %394 = and i64 %392, 68719476720
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %411, label %396

396:                                              ; preds = %389
  %397 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %398 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %399 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 1, i32 1
  %400 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 2
  %401 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 2, i32 1
  %402 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 3, i32 0, i32 1
  %403 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %404 = and i64 %393, 4294967295
  br label %426

405:                                              ; preds = %518
  %406 = load ptr, ptr %160, align 8, !tbaa !325
  %407 = load ptr, ptr %7, align 8, !tbaa !321
  %408 = ptrtoint ptr %406 to i64
  %409 = ptrtoint ptr %407 to i64
  %410 = sub i64 %408, %409
  br label %411

411:                                              ; preds = %405, %389
  %412 = phi i64 [ %410, %405 ], [ %340, %389 ]
  %413 = phi ptr [ %407, %405 ], [ %337, %389 ]
  %414 = phi i8 [ %443, %405 ], [ 0, %389 ]
  %415 = ashr exact i64 %412, 4
  %416 = trunc i64 %415 to i32
  %417 = and i64 %415, 4294967295
  %418 = icmp eq i64 %417, 0
  br i1 %418, label %523, label %419

419:                                              ; preds = %411
  %420 = shl nuw nsw i64 %417, 2
  %421 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %420) #21
          to label %422 unwind label %641

422:                                              ; preds = %419
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %421, i8 0, i64 %420, i1 false), !tbaa !22
  %423 = getelementptr inbounds i32, ptr %421, i64 %417
  br label %523

424:                                              ; preds = %185
  %425 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %1254 unwind label %1284

426:                                              ; preds = %396, %518
  %427 = phi i64 [ 0, %396 ], [ %519, %518 ]
  %428 = phi i8 [ 0, %396 ], [ %443, %518 ]
  %429 = getelementptr inbounds %"struct.std::pair.188", ptr %175, i64 %427
  %430 = load i32, ptr %429, align 8, !tbaa !326
  %431 = zext i32 %430 to i64
  %432 = load ptr, ptr %3, align 8, !tbaa !58
  %433 = getelementptr inbounds i32, ptr %432, i64 %431
  %434 = load i32, ptr %433, align 4, !tbaa !22
  %435 = getelementptr inbounds %"struct.std::pair.188", ptr %175, i64 %427, i32 1
  %436 = load ptr, ptr %435, align 8, !tbaa !328
  %437 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %436, i64 0, i32 1
  %438 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %436, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %439 = load ptr, ptr %438, align 8, !tbaa !31
  %440 = load ptr, ptr %437, align 8, !tbaa !32
  %441 = icmp eq ptr %439, %440
  br i1 %441, label %442, label %455

442:                                              ; preds = %463, %426
  %443 = phi i8 [ %428, %426 ], [ 1, %463 ]
  %444 = load ptr, ptr %397, align 8, !tbaa !314
  %445 = load i32, ptr %398, align 8, !tbaa !22
  %446 = add i32 %445, 1
  %447 = mul i32 %446, %430
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds double, ptr %444, i64 %448
  %450 = load double, ptr %449, align 8, !tbaa !52
  %451 = fcmp une double %450, 0.000000e+00
  %452 = call double @llvm.fabs.f64(double %450)
  %453 = select i1 %451, double %452, double %69
  %454 = fcmp oeq double %453, 0.000000e+00
  br i1 %454, label %518, label %475

455:                                              ; preds = %426, %463
  %456 = phi ptr [ %467, %463 ], [ %440, %426 ]
  %457 = phi i64 [ %465, %463 ], [ 0, %426 ]
  %458 = phi i32 [ %464, %463 ], [ 0, %426 ]
  %459 = getelementptr inbounds %"struct.std::pair", ptr %456, i64 %457
  %460 = load i32, ptr %459, align 8, !tbaa !37
  %461 = getelementptr inbounds %"struct.std::pair", ptr %456, i64 %457, i32 1
  %462 = load double, ptr %461, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %460, i32 %430, double %462)
          to label %463 unwind label %473

463:                                              ; preds = %455
  %464 = add i32 %458, 1
  %465 = zext i32 %464 to i64
  %466 = load ptr, ptr %438, align 8, !tbaa !31
  %467 = load ptr, ptr %437, align 8, !tbaa !32
  %468 = ptrtoint ptr %466 to i64
  %469 = ptrtoint ptr %467 to i64
  %470 = sub i64 %468, %469
  %471 = ashr exact i64 %470, 4
  %472 = icmp ugt i64 %471, %465
  br i1 %472, label %455, label %442

473:                                              ; preds = %455
  %474 = landingpad { ptr, i32 }
          cleanup
  br label %1254

475:                                              ; preds = %442
  %476 = load i32, ptr %32, align 8, !tbaa !61
  %477 = load ptr, ptr %399, align 8, !tbaa !58
  br label %478

478:                                              ; preds = %478, %475
  %479 = phi i32 [ %476, %475 ], [ %480, %478 ]
  %480 = add i32 %479, -1
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds i32, ptr %477, i64 %481
  %483 = load i32, ptr %482, align 4, !tbaa !22
  %484 = icmp ugt i32 %483, %434
  br i1 %484, label %478, label %485

485:                                              ; preds = %478
  %486 = load i32, ptr %400, align 8, !tbaa !61
  %487 = load ptr, ptr %401, align 8, !tbaa !58
  br label %488

488:                                              ; preds = %488, %485
  %489 = phi i32 [ %486, %485 ], [ %490, %488 ]
  %490 = add i32 %489, -1
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds i32, ptr %487, i64 %491
  %493 = load i32, ptr %492, align 4, !tbaa !22
  %494 = icmp ugt i32 %493, %434
  br i1 %494, label %488, label %495

495:                                              ; preds = %488
  %496 = sub i32 %434, %483
  %497 = sub i32 %434, %493
  %498 = load ptr, ptr %402, align 8, !tbaa !227, !noalias !355
  %499 = load i32, ptr %403, align 8, !tbaa !22, !noalias !355
  %500 = mul i32 %499, %480
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %498, i64 %501
  %503 = zext i32 %490 to i64
  %504 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %502, i64 %503
  %505 = load ptr, ptr %504, align 8, !tbaa !229
  %506 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %505, i64 0, i32 1
  %507 = load ptr, ptr %506, align 8, !tbaa !47
  %508 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %507, i32 noundef %496, i32 noundef %497)
          to label %509 unwind label %521

509:                                              ; preds = %495
  %510 = icmp eq i32 %508, -1
  br i1 %510, label %518, label %511

511:                                              ; preds = %509
  %512 = getelementptr inbounds %"class.dealii::SparseMatrix.33", ptr %505, i64 0, i32 2
  %513 = load ptr, ptr %512, align 8, !tbaa !50
  %514 = zext i32 %508 to i64
  %515 = getelementptr inbounds double, ptr %513, i64 %514
  %516 = load double, ptr %515, align 8, !tbaa !52
  %517 = fadd double %453, %516
  store double %517, ptr %515, align 8, !tbaa !52
  br label %518

518:                                              ; preds = %511, %509, %442
  %519 = add nuw nsw i64 %427, 1
  %520 = icmp eq i64 %519, %404
  br i1 %520, label %405, label %426

521:                                              ; preds = %495
  %522 = landingpad { ptr, i32 }
          cleanup
  br label %1254

523:                                              ; preds = %422, %411
  %524 = phi ptr [ null, %411 ], [ %421, %422 ]
  %525 = phi ptr [ null, %411 ], [ %423, %422 ]
  %526 = icmp eq i32 %416, 0
  br i1 %526, label %599, label %527

527:                                              ; preds = %523
  %528 = and i64 %415, 4294967295
  %529 = icmp ult i64 %528, 17
  br i1 %529, label %530, label %549

530:                                              ; preds = %563, %549, %527
  %531 = phi i64 [ 0, %549 ], [ 0, %527 ], [ %562, %563 ]
  %532 = sub nsw i64 %415, %531
  %533 = xor i64 %531, -1
  %534 = add nsw i64 %528, %533
  %535 = and i64 %532, 3
  %536 = icmp eq i64 %535, 0
  br i1 %536, label %546, label %537

537:                                              ; preds = %530, %537
  %538 = phi i64 [ %543, %537 ], [ %531, %530 ]
  %539 = phi i64 [ %544, %537 ], [ 0, %530 ]
  %540 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %538
  %541 = load i32, ptr %540, align 8, !tbaa !317
  %542 = getelementptr inbounds i32, ptr %524, i64 %538
  store i32 %541, ptr %542, align 4, !tbaa !22
  %543 = add nuw nsw i64 %538, 1
  %544 = add i64 %539, 1
  %545 = icmp eq i64 %544, %535
  br i1 %545, label %546, label %537, !llvm.loop !358

546:                                              ; preds = %537, %530
  %547 = phi i64 [ %531, %530 ], [ %543, %537 ]
  %548 = icmp ult i64 %534, 3
  br i1 %548, label %599, label %643

549:                                              ; preds = %527
  %550 = shl nuw nsw i64 %528, 2
  %551 = getelementptr i8, ptr %524, i64 %550
  %552 = shl nuw nsw i64 %528, 4
  %553 = add nsw i64 %552, -12
  %554 = getelementptr i8, ptr %413, i64 %553
  %555 = icmp ult ptr %524, %554
  %556 = icmp ult ptr %413, %551
  %557 = and i1 %555, %556
  br i1 %557, label %530, label %558

558:                                              ; preds = %549
  %559 = and i64 %415, 7
  %560 = icmp eq i64 %559, 0
  %561 = select i1 %560, i64 8, i64 %559
  %562 = sub nsw i64 %528, %561
  br label %563

563:                                              ; preds = %563, %558
  %564 = phi i64 [ 0, %558 ], [ %597, %563 ]
  %565 = or i64 %564, 1
  %566 = or i64 %564, 2
  %567 = or i64 %564, 3
  %568 = or i64 %564, 4
  %569 = or i64 %564, 5
  %570 = or i64 %564, 6
  %571 = or i64 %564, 7
  %572 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %564
  %573 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %565
  %574 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %566
  %575 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %567
  %576 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %568
  %577 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %569
  %578 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %570
  %579 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %571
  %580 = load i32, ptr %572, align 8, !tbaa !317, !alias.scope !359
  %581 = load i32, ptr %573, align 8, !tbaa !317, !alias.scope !359
  %582 = load i32, ptr %574, align 8, !tbaa !317, !alias.scope !359
  %583 = load i32, ptr %575, align 8, !tbaa !317, !alias.scope !359
  %584 = load i32, ptr %576, align 8, !tbaa !317, !alias.scope !359
  %585 = load i32, ptr %577, align 8, !tbaa !317, !alias.scope !359
  %586 = load i32, ptr %578, align 8, !tbaa !317, !alias.scope !359
  %587 = load i32, ptr %579, align 8, !tbaa !317, !alias.scope !359
  %588 = insertelement <8 x i32> poison, i32 %580, i64 0
  %589 = insertelement <8 x i32> %588, i32 %581, i64 1
  %590 = insertelement <8 x i32> %589, i32 %582, i64 2
  %591 = insertelement <8 x i32> %590, i32 %583, i64 3
  %592 = insertelement <8 x i32> %591, i32 %584, i64 4
  %593 = insertelement <8 x i32> %592, i32 %585, i64 5
  %594 = insertelement <8 x i32> %593, i32 %586, i64 6
  %595 = insertelement <8 x i32> %594, i32 %587, i64 7
  %596 = getelementptr inbounds i32, ptr %524, i64 %564
  store <8 x i32> %595, ptr %596, align 4, !tbaa !22, !alias.scope !362, !noalias !359
  %597 = add nuw i64 %564, 8
  %598 = icmp eq i64 %597, %562
  br i1 %598, label %530, label %563, !llvm.loop !364

599:                                              ; preds = %546, %643, %523
  %600 = add i32 %33, 1
  %601 = zext i32 %600 to i64
  %602 = icmp eq i32 %600, 0
  br i1 %602, label %662, label %603

603:                                              ; preds = %599
  %604 = shl nuw nsw i64 %601, 2
  %605 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %604) #21
          to label %606 unwind label %771

606:                                              ; preds = %603
  %607 = getelementptr inbounds i32, ptr %605, i64 %601
  %608 = add nuw nsw i64 %601, 4611686018427387903
  %609 = and i64 %608, 4611686018427387903
  %610 = add nuw nsw i64 %609, 1
  %611 = icmp ult i64 %609, 31
  br i1 %611, label %635, label %612

612:                                              ; preds = %606
  %613 = and i64 %610, 9223372036854775776
  %614 = shl i64 %613, 2
  %615 = getelementptr i8, ptr %605, i64 %614
  %616 = insertelement <8 x i32> poison, i32 %416, i64 0
  %617 = shufflevector <8 x i32> %616, <8 x i32> poison, <8 x i32> zeroinitializer
  %618 = insertelement <8 x i32> poison, i32 %416, i64 0
  %619 = shufflevector <8 x i32> %618, <8 x i32> poison, <8 x i32> zeroinitializer
  %620 = insertelement <8 x i32> poison, i32 %416, i64 0
  %621 = shufflevector <8 x i32> %620, <8 x i32> poison, <8 x i32> zeroinitializer
  %622 = insertelement <8 x i32> poison, i32 %416, i64 0
  %623 = shufflevector <8 x i32> %622, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %624

624:                                              ; preds = %624, %612
  %625 = phi i64 [ 0, %612 ], [ %631, %624 ]
  %626 = shl i64 %625, 2
  %627 = getelementptr i8, ptr %605, i64 %626
  store <8 x i32> %617, ptr %627, align 4, !tbaa !22
  %628 = getelementptr i32, ptr %627, i64 8
  store <8 x i32> %619, ptr %628, align 4, !tbaa !22
  %629 = getelementptr i32, ptr %627, i64 16
  store <8 x i32> %621, ptr %629, align 4, !tbaa !22
  %630 = getelementptr i32, ptr %627, i64 24
  store <8 x i32> %623, ptr %630, align 4, !tbaa !22
  %631 = add nuw i64 %625, 32
  %632 = icmp eq i64 %631, %613
  br i1 %632, label %633, label %624, !llvm.loop !365

633:                                              ; preds = %624
  %634 = icmp eq i64 %610, %613
  br i1 %634, label %662, label %635

635:                                              ; preds = %606, %633
  %636 = phi ptr [ %605, %606 ], [ %615, %633 ]
  br label %637

637:                                              ; preds = %635, %637
  %638 = phi ptr [ %639, %637 ], [ %636, %635 ]
  store i32 %416, ptr %638, align 4, !tbaa !22
  %639 = getelementptr inbounds i32, ptr %638, i64 1
  %640 = icmp eq ptr %639, %607
  br i1 %640, label %662, label %637, !llvm.loop !366

641:                                              ; preds = %419
  %642 = landingpad { ptr, i32 }
          cleanup
  br label %1254

643:                                              ; preds = %546, %643
  %644 = phi i64 [ %660, %643 ], [ %547, %546 ]
  %645 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %644
  %646 = load i32, ptr %645, align 8, !tbaa !317
  %647 = getelementptr inbounds i32, ptr %524, i64 %644
  store i32 %646, ptr %647, align 4, !tbaa !22
  %648 = add nuw nsw i64 %644, 1
  %649 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %648
  %650 = load i32, ptr %649, align 8, !tbaa !317
  %651 = getelementptr inbounds i32, ptr %524, i64 %648
  store i32 %650, ptr %651, align 4, !tbaa !22
  %652 = add nuw nsw i64 %644, 2
  %653 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %652
  %654 = load i32, ptr %653, align 8, !tbaa !317
  %655 = getelementptr inbounds i32, ptr %524, i64 %652
  store i32 %654, ptr %655, align 4, !tbaa !22
  %656 = add nuw nsw i64 %644, 3
  %657 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %656
  %658 = load i32, ptr %657, align 8, !tbaa !317
  %659 = getelementptr inbounds i32, ptr %524, i64 %656
  store i32 %658, ptr %659, align 4, !tbaa !22
  %660 = add nuw nsw i64 %644, 4
  %661 = icmp eq i64 %660, %528
  br i1 %661, label %599, label %643, !llvm.loop !367

662:                                              ; preds = %637, %633, %599
  %663 = phi ptr [ null, %599 ], [ %605, %633 ], [ %605, %637 ]
  %664 = load i32, ptr %32, align 8, !tbaa !61
  store i32 0, ptr %663, align 4, !tbaa !22
  %665 = icmp ugt i32 %664, 1
  br i1 %665, label %669, label %666

666:                                              ; preds = %662
  %667 = ptrtoint ptr %525 to i64
  %668 = ptrtoint ptr %524 to i64
  br label %675

669:                                              ; preds = %662
  %670 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 1, i32 1
  %671 = load ptr, ptr %670, align 8, !tbaa !58
  %672 = ptrtoint ptr %525 to i64
  %673 = ptrtoint ptr %524 to i64
  %674 = zext i32 %664 to i64
  br label %687

675:                                              ; preds = %712, %666
  %676 = phi i64 [ %668, %666 ], [ %673, %712 ]
  %677 = phi i64 [ %667, %666 ], [ %672, %712 ]
  %678 = getelementptr inbounds i32, ptr %663, i64 1
  %679 = load i32, ptr %678, align 4, !tbaa !22
  %680 = sub i64 %677, %676
  %681 = ashr exact i64 %680, 2
  %682 = zext i32 %679 to i64
  %683 = icmp ugt i64 %681, %682
  br i1 %683, label %684, label %738

684:                                              ; preds = %675
  %685 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 1, i32 1
  %686 = load ptr, ptr %685, align 8, !tbaa !58
  br label %721

687:                                              ; preds = %712, %669
  %688 = phi i64 [ 1, %669 ], [ %719, %712 ]
  %689 = phi ptr [ %524, %669 ], [ %714, %712 ]
  %690 = getelementptr inbounds i32, ptr %671, i64 %688
  %691 = load i32, ptr %690, align 4, !tbaa !22
  %692 = ptrtoint ptr %689 to i64
  %693 = sub i64 %672, %692
  %694 = icmp sgt i64 %693, 0
  br i1 %694, label %695, label %712

695:                                              ; preds = %687
  %696 = lshr exact i64 %693, 2
  br label %697

697:                                              ; preds = %697, %695
  %698 = phi i64 [ %696, %695 ], [ %708, %697 ]
  %699 = phi ptr [ %689, %695 ], [ %707, %697 ]
  %700 = lshr i64 %698, 1
  %701 = getelementptr inbounds i32, ptr %699, i64 %700
  %702 = load i32, ptr %701, align 4, !tbaa !22
  %703 = icmp ult i32 %702, %691
  %704 = getelementptr inbounds i32, ptr %701, i64 1
  %705 = xor i64 %700, -1
  %706 = add nsw i64 %698, %705
  %707 = select i1 %703, ptr %704, ptr %699
  %708 = select i1 %703, i64 %706, i64 %700
  %709 = icmp sgt i64 %708, 0
  br i1 %709, label %697, label %710

710:                                              ; preds = %697
  %711 = ptrtoint ptr %707 to i64
  br label %712

712:                                              ; preds = %710, %687
  %713 = phi i64 [ %711, %710 ], [ %692, %687 ]
  %714 = phi ptr [ %707, %710 ], [ %689, %687 ]
  %715 = sub i64 %713, %673
  %716 = lshr exact i64 %715, 2
  %717 = trunc i64 %716 to i32
  %718 = getelementptr inbounds i32, ptr %663, i64 %688
  store i32 %717, ptr %718, align 4, !tbaa !22
  %719 = add nuw nsw i64 %688, 1
  %720 = icmp eq i64 %719, %674
  br i1 %720, label %675, label %687

721:                                              ; preds = %733, %684
  %722 = phi i64 [ %682, %684 ], [ %736, %733 ]
  %723 = phi i32 [ %679, %684 ], [ %735, %733 ]
  %724 = getelementptr inbounds i32, ptr %524, i64 %722
  %725 = load i32, ptr %724, align 4, !tbaa !22
  br label %726

726:                                              ; preds = %726, %721
  %727 = phi i32 [ %664, %721 ], [ %728, %726 ]
  %728 = add i32 %727, -1
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds i32, ptr %686, i64 %729
  %731 = load i32, ptr %730, align 4, !tbaa !22
  %732 = icmp ugt i32 %731, %725
  br i1 %732, label %726, label %733

733:                                              ; preds = %726
  %734 = sub i32 %725, %731
  store i32 %734, ptr %724, align 4, !tbaa !22
  %735 = add i32 %723, 1
  %736 = zext i32 %735 to i64
  %737 = icmp ugt i64 %681, %736
  br i1 %737, label %721, label %738

738:                                              ; preds = %733, %675
  br i1 %418, label %746, label %739

739:                                              ; preds = %738
  %740 = shl nuw nsw i64 %417, 2
  %741 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %740) #21
          to label %742 unwind label %773

742:                                              ; preds = %739
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %741, i8 0, i64 %740, i1 false), !tbaa !22
  %743 = shl nuw nsw i64 %417, 3
  %744 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %743) #21
          to label %745 unwind label %775

745:                                              ; preds = %742
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %744, i8 0, i64 %743, i1 false), !tbaa !52
  br label %746

746:                                              ; preds = %745, %738
  %747 = phi ptr [ null, %738 ], [ %741, %745 ]
  %748 = phi ptr [ null, %738 ], [ %744, %745 ]
  %749 = icmp eq i32 %33, 0
  br i1 %749, label %768, label %750

750:                                              ; preds = %746
  %751 = and i8 %414, 1
  %752 = icmp eq i8 %751, 0
  %753 = ptrtoint ptr %747 to i64
  %754 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %755 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %756 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 3, i32 0, i32 1
  %757 = getelementptr inbounds %"class.dealii::BlockMatrixBase.73", ptr %4, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %758 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %759 = icmp eq ptr %174, %175
  %760 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %5, i64 0, i32 2
  %761 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %5, i64 0, i32 2, i32 1
  %762 = getelementptr inbounds %"class.dealii::BlockVectorBase", ptr %5, i64 0, i32 1
  %763 = zext i32 %33 to i64
  %764 = getelementptr inbounds double, ptr %748, i64 1
  %765 = getelementptr inbounds i32, ptr %747, i64 1
  br label %777

766:                                              ; preds = %1206, %777
  %767 = icmp eq i64 %779, %763
  br i1 %767, label %768, label %777

768:                                              ; preds = %766, %746
  %769 = icmp eq ptr %748, null
  br i1 %769, label %1210, label %770

770:                                              ; preds = %768
  call void @_ZdlPv(ptr noundef nonnull %748) #23
  br label %1210

771:                                              ; preds = %603
  %772 = landingpad { ptr, i32 }
          cleanup
  br label %1250

773:                                              ; preds = %739
  %774 = landingpad { ptr, i32 }
          cleanup
  br label %1248

775:                                              ; preds = %742
  %776 = landingpad { ptr, i32 }
          cleanup
  br label %1245

777:                                              ; preds = %750, %766
  %778 = phi i64 [ 0, %750 ], [ %779, %766 ]
  %779 = add nuw nsw i64 %778, 1
  %780 = getelementptr inbounds i32, ptr %663, i64 %779
  %781 = load i32, ptr %780, align 4, !tbaa !22
  %782 = getelementptr inbounds i32, ptr %663, i64 %778
  %783 = load i32, ptr %782, align 4, !tbaa !22
  %784 = icmp ult i32 %783, %781
  br i1 %784, label %785, label %766

785:                                              ; preds = %777
  %786 = zext i32 %783 to i64
  %787 = zext i32 %781 to i64
  %788 = trunc i64 %778 to i32
  br label %789

789:                                              ; preds = %785, %1206
  %790 = phi i64 [ %786, %785 ], [ %1207, %1206 ]
  %791 = getelementptr inbounds i32, ptr %524, i64 %790
  %792 = load i32, ptr %791, align 4, !tbaa !22
  %793 = load ptr, ptr %7, align 8, !tbaa !321
  %794 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %793, i64 %790, i32 1
  %795 = load i32, ptr %794, align 4, !tbaa !319
  %796 = icmp eq i32 %795, -1
  br label %798

797:                                              ; preds = %1080
  br i1 %23, label %1206, label %1082

798:                                              ; preds = %789, %1080
  %799 = phi i64 [ 0, %789 ], [ %800, %1080 ]
  %800 = add nuw nsw i64 %799, 1
  %801 = getelementptr inbounds i32, ptr %663, i64 %800
  %802 = load i32, ptr %801, align 4, !tbaa !22
  %803 = load ptr, ptr %754, align 8
  %804 = load i32, ptr %755, align 8
  %805 = mul i32 %804, %795
  %806 = zext i32 %805 to i64
  %807 = getelementptr inbounds double, ptr %803, i64 %806
  %808 = getelementptr inbounds i32, ptr %663, i64 %799
  %809 = load i32, ptr %808, align 4, !tbaa !22
  %810 = icmp ult i32 %809, %802
  br i1 %752, label %811, label %876

811:                                              ; preds = %798
  br i1 %810, label %812, label %1062

812:                                              ; preds = %811
  %813 = load ptr, ptr %7, align 8, !tbaa !321
  %814 = zext i32 %809 to i64
  %815 = zext i32 %802 to i64
  %816 = sub nsw i64 %815, %814
  %817 = xor i64 %814, -1
  %818 = and i64 %816, 1
  %819 = icmp eq i64 %818, 0
  br i1 %819, label %834, label %820

820:                                              ; preds = %812
  %821 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %813, i64 %814, i32 1
  %822 = load i32, ptr %821, align 4, !tbaa !319
  %823 = zext i32 %822 to i64
  %824 = getelementptr inbounds double, ptr %807, i64 %823
  %825 = load double, ptr %824, align 8, !tbaa !52
  %826 = fcmp une double %825, 0.000000e+00
  br i1 %826, label %827, label %830

827:                                              ; preds = %820
  store double %825, ptr %748, align 8, !tbaa !52
  %828 = getelementptr inbounds i32, ptr %524, i64 %814
  %829 = load i32, ptr %828, align 4, !tbaa !22
  store i32 %829, ptr %747, align 4, !tbaa !22
  br label %830

830:                                              ; preds = %827, %820
  %831 = phi ptr [ %765, %827 ], [ %747, %820 ]
  %832 = phi ptr [ %764, %827 ], [ %748, %820 ]
  %833 = add nuw nsw i64 %814, 1
  br label %834

834:                                              ; preds = %830, %812
  %835 = phi ptr [ undef, %812 ], [ %831, %830 ]
  %836 = phi i64 [ %814, %812 ], [ %833, %830 ]
  %837 = phi ptr [ %748, %812 ], [ %832, %830 ]
  %838 = phi ptr [ %747, %812 ], [ %831, %830 ]
  %839 = sub nsw i64 0, %815
  %840 = icmp eq i64 %817, %839
  br i1 %840, label %1062, label %841

841:                                              ; preds = %834, %871
  %842 = phi i64 [ %874, %871 ], [ %836, %834 ]
  %843 = phi ptr [ %873, %871 ], [ %837, %834 ]
  %844 = phi ptr [ %872, %871 ], [ %838, %834 ]
  %845 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %813, i64 %842, i32 1
  %846 = load i32, ptr %845, align 4, !tbaa !319
  %847 = zext i32 %846 to i64
  %848 = getelementptr inbounds double, ptr %807, i64 %847
  %849 = load double, ptr %848, align 8, !tbaa !52
  %850 = fcmp une double %849, 0.000000e+00
  br i1 %850, label %851, label %856

851:                                              ; preds = %841
  %852 = getelementptr inbounds double, ptr %843, i64 1
  store double %849, ptr %843, align 8, !tbaa !52
  %853 = getelementptr inbounds i32, ptr %524, i64 %842
  %854 = load i32, ptr %853, align 4, !tbaa !22
  %855 = getelementptr inbounds i32, ptr %844, i64 1
  store i32 %854, ptr %844, align 4, !tbaa !22
  br label %856

856:                                              ; preds = %851, %841
  %857 = phi ptr [ %855, %851 ], [ %844, %841 ]
  %858 = phi ptr [ %852, %851 ], [ %843, %841 ]
  %859 = add nuw nsw i64 %842, 1
  %860 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %813, i64 %859, i32 1
  %861 = load i32, ptr %860, align 4, !tbaa !319
  %862 = zext i32 %861 to i64
  %863 = getelementptr inbounds double, ptr %807, i64 %862
  %864 = load double, ptr %863, align 8, !tbaa !52
  %865 = fcmp une double %864, 0.000000e+00
  br i1 %865, label %866, label %871

866:                                              ; preds = %856
  %867 = getelementptr inbounds double, ptr %858, i64 1
  store double %864, ptr %858, align 8, !tbaa !52
  %868 = getelementptr inbounds i32, ptr %524, i64 %859
  %869 = load i32, ptr %868, align 4, !tbaa !22
  %870 = getelementptr inbounds i32, ptr %857, i64 1
  store i32 %869, ptr %857, align 4, !tbaa !22
  br label %871

871:                                              ; preds = %866, %856
  %872 = phi ptr [ %870, %866 ], [ %857, %856 ]
  %873 = phi ptr [ %867, %866 ], [ %858, %856 ]
  %874 = add nuw nsw i64 %842, 2
  %875 = icmp eq i64 %874, %815
  br i1 %875, label %1062, label %841

876:                                              ; preds = %798
  br i1 %810, label %877, label %1062

877:                                              ; preds = %876
  %878 = load ptr, ptr %7, align 8, !tbaa !321
  %879 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %878, i64 %790, i32 2
  %880 = load ptr, ptr %879, align 8, !tbaa !320
  %881 = icmp eq ptr %880, null
  %882 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %880, i64 0, i32 1
  %883 = zext i32 %809 to i64
  %884 = zext i32 %802 to i64
  br label %885

885:                                              ; preds = %877, %1057
  %886 = phi i64 [ %883, %877 ], [ %1060, %1057 ]
  %887 = phi ptr [ %748, %877 ], [ %1059, %1057 ]
  %888 = phi ptr [ %747, %877 ], [ %1058, %1057 ]
  %889 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %878, i64 %886, i32 1
  %890 = load i32, ptr %889, align 4, !tbaa !319
  br i1 %796, label %930, label %891

891:                                              ; preds = %885
  %892 = icmp eq i32 %890, -1
  br i1 %892, label %897, label %893

893:                                              ; preds = %891
  %894 = zext i32 %890 to i64
  %895 = getelementptr inbounds double, ptr %807, i64 %894
  %896 = load double, ptr %895, align 8, !tbaa !52
  br label %897

897:                                              ; preds = %891, %893
  %898 = phi double [ %896, %893 ], [ 0.000000e+00, %891 ]
  %899 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %878, i64 %886, i32 2
  %900 = load ptr, ptr %899, align 8, !tbaa !320
  %901 = icmp eq ptr %900, null
  br i1 %901, label %930, label %902

902:                                              ; preds = %897
  %903 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %900, i64 0, i32 1
  %904 = load ptr, ptr %903, align 8, !tbaa !31
  %905 = load ptr, ptr %900, align 8, !tbaa !32
  %906 = ptrtoint ptr %904 to i64
  %907 = ptrtoint ptr %905 to i64
  %908 = sub i64 %906, %907
  %909 = ashr exact i64 %908, 4
  %910 = icmp eq ptr %904, %905
  br i1 %910, label %930, label %911

911:                                              ; preds = %902
  %912 = load i32, ptr %755, align 8, !tbaa !22
  %913 = mul i32 %912, %795
  br label %914

914:                                              ; preds = %911, %914
  %915 = phi i64 [ 0, %911 ], [ %928, %914 ]
  %916 = phi i32 [ 0, %911 ], [ %927, %914 ]
  %917 = phi double [ %898, %911 ], [ %926, %914 ]
  %918 = getelementptr inbounds %"struct.std::pair", ptr %905, i64 %915
  %919 = load i32, ptr %918, align 8, !tbaa !37
  %920 = add i32 %913, %919
  %921 = zext i32 %920 to i64
  %922 = getelementptr inbounds double, ptr %803, i64 %921
  %923 = load double, ptr %922, align 8, !tbaa !52
  %924 = getelementptr inbounds %"struct.std::pair", ptr %905, i64 %915, i32 1
  %925 = load double, ptr %924, align 8, !tbaa !35
  %926 = call double @llvm.fmuladd.f64(double %923, double %925, double %917)
  %927 = add i32 %916, 1
  %928 = zext i32 %927 to i64
  %929 = icmp ugt i64 %909, %928
  br i1 %929, label %914, label %930

930:                                              ; preds = %914, %902, %885, %897
  %931 = phi double [ %898, %897 ], [ 0.000000e+00, %885 ], [ %898, %902 ], [ %926, %914 ]
  br i1 %881, label %1049, label %932

932:                                              ; preds = %930
  %933 = load ptr, ptr %882, align 8, !tbaa !31
  %934 = load ptr, ptr %880, align 8, !tbaa !32
  %935 = ptrtoint ptr %933 to i64
  %936 = ptrtoint ptr %934 to i64
  %937 = sub i64 %935, %936
  %938 = ashr exact i64 %937, 4
  %939 = icmp eq ptr %933, %934
  br i1 %939, label %1049, label %940

940:                                              ; preds = %932
  %941 = icmp eq i32 %890, -1
  %942 = load ptr, ptr %754, align 8
  %943 = load i32, ptr %755, align 8
  %944 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %878, i64 %886, i32 2
  %945 = load ptr, ptr %944, align 8, !tbaa !320
  %946 = icmp eq ptr %945, null
  br i1 %946, label %947, label %975

947:                                              ; preds = %940
  br i1 %941, label %948, label %958

948:                                              ; preds = %947, %948
  %949 = phi i64 [ %956, %948 ], [ 0, %947 ]
  %950 = phi i32 [ %955, %948 ], [ 0, %947 ]
  %951 = phi double [ %954, %948 ], [ %931, %947 ]
  %952 = getelementptr inbounds %"struct.std::pair", ptr %934, i64 %949, i32 1
  %953 = load double, ptr %952, align 8, !tbaa !35
  %954 = call double @llvm.fmuladd.f64(double %953, double 0.000000e+00, double %951)
  %955 = add i32 %950, 1
  %956 = zext i32 %955 to i64
  %957 = icmp ugt i64 %938, %956
  br i1 %957, label %948, label %1049

958:                                              ; preds = %947, %958
  %959 = phi i64 [ %973, %958 ], [ 0, %947 ]
  %960 = phi i32 [ %972, %958 ], [ 0, %947 ]
  %961 = phi double [ %971, %958 ], [ %931, %947 ]
  %962 = getelementptr inbounds %"struct.std::pair", ptr %934, i64 %959
  %963 = load i32, ptr %962, align 8, !tbaa !37
  %964 = mul i32 %943, %963
  %965 = add i32 %964, %890
  %966 = zext i32 %965 to i64
  %967 = getelementptr inbounds double, ptr %942, i64 %966
  %968 = load double, ptr %967, align 8, !tbaa !52
  %969 = getelementptr inbounds %"struct.std::pair", ptr %934, i64 %959, i32 1
  %970 = load double, ptr %969, align 8, !tbaa !35
  %971 = call double @llvm.fmuladd.f64(double %968, double %970, double %961)
  %972 = add i32 %960, 1
  %973 = zext i32 %972 to i64
  %974 = icmp ugt i64 %938, %973
  br i1 %974, label %958, label %1049

975:                                              ; preds = %940
  %976 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %945, i64 0, i32 1
  %977 = load ptr, ptr %976, align 8, !tbaa !31
  %978 = load ptr, ptr %945, align 8, !tbaa !32
  %979 = ptrtoint ptr %977 to i64
  %980 = ptrtoint ptr %978 to i64
  %981 = sub i64 %979, %980
  %982 = ashr exact i64 %981, 4
  %983 = icmp eq ptr %977, %978
  br i1 %983, label %1021, label %984

984:                                              ; preds = %975, %1014
  %985 = phi i64 [ %1019, %1014 ], [ 0, %975 ]
  %986 = phi i32 [ %1018, %1014 ], [ 0, %975 ]
  %987 = phi double [ %1017, %1014 ], [ %931, %975 ]
  %988 = getelementptr inbounds %"struct.std::pair", ptr %934, i64 %985
  %989 = load i32, ptr %988, align 8, !tbaa !37
  %990 = mul i32 %943, %989
  br i1 %941, label %996, label %991

991:                                              ; preds = %984
  %992 = add i32 %990, %890
  %993 = zext i32 %992 to i64
  %994 = getelementptr inbounds double, ptr %942, i64 %993
  %995 = load double, ptr %994, align 8, !tbaa !52
  br label %996

996:                                              ; preds = %984, %991
  %997 = phi double [ %995, %991 ], [ 0.000000e+00, %984 ]
  br label %998

998:                                              ; preds = %996, %998
  %999 = phi i64 [ %1012, %998 ], [ 0, %996 ]
  %1000 = phi i32 [ %1011, %998 ], [ 0, %996 ]
  %1001 = phi double [ %1010, %998 ], [ %997, %996 ]
  %1002 = getelementptr inbounds %"struct.std::pair", ptr %978, i64 %999
  %1003 = load i32, ptr %1002, align 8, !tbaa !37
  %1004 = add i32 %990, %1003
  %1005 = zext i32 %1004 to i64
  %1006 = getelementptr inbounds double, ptr %942, i64 %1005
  %1007 = load double, ptr %1006, align 8, !tbaa !52
  %1008 = getelementptr inbounds %"struct.std::pair", ptr %978, i64 %999, i32 1
  %1009 = load double, ptr %1008, align 8, !tbaa !35
  %1010 = call double @llvm.fmuladd.f64(double %1007, double %1009, double %1001)
  %1011 = add i32 %1000, 1
  %1012 = zext i32 %1011 to i64
  %1013 = icmp ugt i64 %982, %1012
  br i1 %1013, label %998, label %1014

1014:                                             ; preds = %998
  %1015 = getelementptr inbounds %"struct.std::pair", ptr %934, i64 %985, i32 1
  %1016 = load double, ptr %1015, align 8, !tbaa !35
  %1017 = call double @llvm.fmuladd.f64(double %1010, double %1016, double %987)
  %1018 = add i32 %986, 1
  %1019 = zext i32 %1018 to i64
  %1020 = icmp ugt i64 %938, %1019
  br i1 %1020, label %984, label %1049

1021:                                             ; preds = %975
  br i1 %941, label %1022, label %1032

1022:                                             ; preds = %1021, %1022
  %1023 = phi i64 [ %1030, %1022 ], [ 0, %1021 ]
  %1024 = phi i32 [ %1029, %1022 ], [ 0, %1021 ]
  %1025 = phi double [ %1028, %1022 ], [ %931, %1021 ]
  %1026 = getelementptr inbounds %"struct.std::pair", ptr %934, i64 %1023, i32 1
  %1027 = load double, ptr %1026, align 8, !tbaa !35
  %1028 = call double @llvm.fmuladd.f64(double %1027, double 0.000000e+00, double %1025)
  %1029 = add i32 %1024, 1
  %1030 = zext i32 %1029 to i64
  %1031 = icmp ugt i64 %938, %1030
  br i1 %1031, label %1022, label %1049

1032:                                             ; preds = %1021, %1032
  %1033 = phi i64 [ %1047, %1032 ], [ 0, %1021 ]
  %1034 = phi i32 [ %1046, %1032 ], [ 0, %1021 ]
  %1035 = phi double [ %1045, %1032 ], [ %931, %1021 ]
  %1036 = getelementptr inbounds %"struct.std::pair", ptr %934, i64 %1033
  %1037 = load i32, ptr %1036, align 8, !tbaa !37
  %1038 = mul i32 %943, %1037
  %1039 = add i32 %1038, %890
  %1040 = zext i32 %1039 to i64
  %1041 = getelementptr inbounds double, ptr %942, i64 %1040
  %1042 = load double, ptr %1041, align 8, !tbaa !52
  %1043 = getelementptr inbounds %"struct.std::pair", ptr %934, i64 %1033, i32 1
  %1044 = load double, ptr %1043, align 8, !tbaa !35
  %1045 = call double @llvm.fmuladd.f64(double %1042, double %1044, double %1035)
  %1046 = add i32 %1034, 1
  %1047 = zext i32 %1046 to i64
  %1048 = icmp ugt i64 %938, %1047
  br i1 %1048, label %1032, label %1049

1049:                                             ; preds = %1014, %1032, %1022, %958, %948, %932, %930
  %1050 = phi double [ %931, %930 ], [ %931, %932 ], [ %954, %948 ], [ %971, %958 ], [ %1028, %1022 ], [ %1045, %1032 ], [ %1017, %1014 ]
  %1051 = fcmp une double %1050, 0.000000e+00
  br i1 %1051, label %1052, label %1057

1052:                                             ; preds = %1049
  %1053 = getelementptr inbounds i32, ptr %524, i64 %886
  %1054 = load i32, ptr %1053, align 4, !tbaa !22
  %1055 = getelementptr inbounds i32, ptr %888, i64 1
  store i32 %1054, ptr %888, align 4, !tbaa !22
  %1056 = getelementptr inbounds double, ptr %887, i64 1
  store double %1050, ptr %887, align 8, !tbaa !52
  br label %1057

1057:                                             ; preds = %1052, %1049
  %1058 = phi ptr [ %1055, %1052 ], [ %888, %1049 ]
  %1059 = phi ptr [ %1056, %1052 ], [ %887, %1049 ]
  %1060 = add nuw nsw i64 %886, 1
  %1061 = icmp eq i64 %1060, %884
  br i1 %1061, label %1062, label %885

1062:                                             ; preds = %1057, %834, %871, %876, %811
  %1063 = phi ptr [ %747, %811 ], [ %747, %876 ], [ %835, %834 ], [ %872, %871 ], [ %1058, %1057 ]
  %1064 = ptrtoint ptr %1063 to i64
  %1065 = sub i64 %1064, %753
  %1066 = lshr exact i64 %1065, 2
  %1067 = trunc i64 %1066 to i32
  %1068 = icmp eq i32 %1067, 0
  br i1 %1068, label %1080, label %1069

1069:                                             ; preds = %1062
  %1070 = load ptr, ptr %756, align 8, !tbaa !227, !noalias !368
  %1071 = load i32, ptr %757, align 8, !tbaa !22, !noalias !368
  %1072 = mul i32 %1071, %788
  %1073 = zext i32 %1072 to i64
  %1074 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %1070, i64 %1073
  %1075 = getelementptr inbounds %"class.dealii::SmartPointer.177", ptr %1074, i64 %799
  %1076 = load ptr, ptr %1075, align 8, !tbaa !229
  invoke void @_ZN6dealii12SparseMatrixIdE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %1076, i32 noundef %792, i32 noundef %1067, ptr noundef nonnull %747, ptr noundef nonnull %748, i1 noundef zeroext false, i1 noundef zeroext true)
          to label %1080 unwind label %1077

1077:                                             ; preds = %1069
  %1078 = landingpad { ptr, i32 }
          cleanup
  %1079 = icmp eq ptr %748, null
  br i1 %1079, label %1243, label %1209

1080:                                             ; preds = %1069, %1062
  %1081 = icmp eq i64 %800, %763
  br i1 %1081, label %797, label %798

1082:                                             ; preds = %797
  br i1 %796, label %1111, label %1083

1083:                                             ; preds = %1082
  %1084 = load ptr, ptr %758, align 8, !tbaa !60
  %1085 = zext i32 %795 to i64
  %1086 = getelementptr inbounds double, ptr %1084, i64 %1085
  %1087 = load double, ptr %1086, align 8, !tbaa !52
  br i1 %759, label %1111, label %1088

1088:                                             ; preds = %1083
  %1089 = load ptr, ptr %754, align 8, !tbaa !314
  %1090 = load i32, ptr %755, align 8, !tbaa !22
  %1091 = mul i32 %1090, %795
  br label %1092

1092:                                             ; preds = %1088, %1092
  %1093 = phi i64 [ 0, %1088 ], [ %1109, %1092 ]
  %1094 = phi i32 [ 0, %1088 ], [ %1108, %1092 ]
  %1095 = phi double [ %1087, %1088 ], [ %1107, %1092 ]
  %1096 = getelementptr inbounds %"struct.std::pair.188", ptr %175, i64 %1093
  %1097 = getelementptr inbounds %"struct.std::pair.188", ptr %175, i64 %1093, i32 1
  %1098 = load ptr, ptr %1097, align 8, !tbaa !328
  %1099 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1098, i64 0, i32 2
  %1100 = load double, ptr %1099, align 8, !tbaa !48
  %1101 = load i32, ptr %1096, align 8, !tbaa !326
  %1102 = add i32 %1091, %1101
  %1103 = zext i32 %1102 to i64
  %1104 = getelementptr inbounds double, ptr %1089, i64 %1103
  %1105 = load double, ptr %1104, align 8, !tbaa !52
  %1106 = fneg double %1100
  %1107 = call double @llvm.fmuladd.f64(double %1106, double %1105, double %1095)
  %1108 = add i32 %1094, 1
  %1109 = zext i32 %1108 to i64
  %1110 = icmp ugt i64 %393, %1109
  br i1 %1110, label %1092, label %1111

1111:                                             ; preds = %1092, %1083, %1082
  %1112 = phi double [ 0.000000e+00, %1082 ], [ %1087, %1083 ], [ %1107, %1092 ]
  %1113 = load ptr, ptr %7, align 8, !tbaa !321
  %1114 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1113, i64 %790
  %1115 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1113, i64 %790, i32 2
  %1116 = load ptr, ptr %1115, align 8, !tbaa !320
  %1117 = icmp eq ptr %1116, null
  br i1 %1117, label %1182, label %1118

1118:                                             ; preds = %1111
  %1119 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1116, i64 0, i32 1
  %1120 = load ptr, ptr %1119, align 8, !tbaa !31
  %1121 = load ptr, ptr %1116, align 8, !tbaa !32
  %1122 = ptrtoint ptr %1120 to i64
  %1123 = ptrtoint ptr %1121 to i64
  %1124 = sub i64 %1122, %1123
  %1125 = ashr exact i64 %1124, 4
  %1126 = icmp eq ptr %1120, %1121
  br i1 %1126, label %1182, label %1127

1127:                                             ; preds = %1118
  %1128 = load ptr, ptr %758, align 8, !tbaa !60
  %1129 = load ptr, ptr %754, align 8
  %1130 = load i32, ptr %755, align 8
  br i1 %759, label %1167, label %1131

1131:                                             ; preds = %1127, %1160
  %1132 = phi i64 [ %1165, %1160 ], [ 0, %1127 ]
  %1133 = phi i32 [ %1164, %1160 ], [ 0, %1127 ]
  %1134 = phi double [ %1163, %1160 ], [ %1112, %1127 ]
  %1135 = getelementptr inbounds %"struct.std::pair", ptr %1121, i64 %1132
  %1136 = load i32, ptr %1135, align 8, !tbaa !37
  %1137 = zext i32 %1136 to i64
  %1138 = getelementptr inbounds double, ptr %1128, i64 %1137
  %1139 = load double, ptr %1138, align 8, !tbaa !52
  %1140 = mul i32 %1130, %1136
  br label %1141

1141:                                             ; preds = %1131, %1141
  %1142 = phi i64 [ 0, %1131 ], [ %1158, %1141 ]
  %1143 = phi i32 [ 0, %1131 ], [ %1157, %1141 ]
  %1144 = phi double [ %1139, %1131 ], [ %1156, %1141 ]
  %1145 = getelementptr inbounds %"struct.std::pair.188", ptr %175, i64 %1142
  %1146 = getelementptr inbounds %"struct.std::pair.188", ptr %175, i64 %1142, i32 1
  %1147 = load ptr, ptr %1146, align 8, !tbaa !328
  %1148 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1147, i64 0, i32 2
  %1149 = load double, ptr %1148, align 8, !tbaa !48
  %1150 = load i32, ptr %1145, align 8, !tbaa !326
  %1151 = add i32 %1140, %1150
  %1152 = zext i32 %1151 to i64
  %1153 = getelementptr inbounds double, ptr %1129, i64 %1152
  %1154 = load double, ptr %1153, align 8, !tbaa !52
  %1155 = fneg double %1149
  %1156 = call double @llvm.fmuladd.f64(double %1155, double %1154, double %1144)
  %1157 = add i32 %1143, 1
  %1158 = zext i32 %1157 to i64
  %1159 = icmp ugt i64 %393, %1158
  br i1 %1159, label %1141, label %1160

1160:                                             ; preds = %1141
  %1161 = getelementptr inbounds %"struct.std::pair", ptr %1121, i64 %1132, i32 1
  %1162 = load double, ptr %1161, align 8, !tbaa !35
  %1163 = call double @llvm.fmuladd.f64(double %1156, double %1162, double %1134)
  %1164 = add i32 %1133, 1
  %1165 = zext i32 %1164 to i64
  %1166 = icmp ugt i64 %1125, %1165
  br i1 %1166, label %1131, label %1182

1167:                                             ; preds = %1127, %1167
  %1168 = phi i64 [ %1180, %1167 ], [ 0, %1127 ]
  %1169 = phi i32 [ %1179, %1167 ], [ 0, %1127 ]
  %1170 = phi double [ %1178, %1167 ], [ %1112, %1127 ]
  %1171 = getelementptr inbounds %"struct.std::pair", ptr %1121, i64 %1168
  %1172 = load i32, ptr %1171, align 8, !tbaa !37
  %1173 = zext i32 %1172 to i64
  %1174 = getelementptr inbounds double, ptr %1128, i64 %1173
  %1175 = load double, ptr %1174, align 8, !tbaa !52
  %1176 = getelementptr inbounds %"struct.std::pair", ptr %1121, i64 %1168, i32 1
  %1177 = load double, ptr %1176, align 8, !tbaa !35
  %1178 = call double @llvm.fmuladd.f64(double %1175, double %1177, double %1170)
  %1179 = add i32 %1169, 1
  %1180 = zext i32 %1179 to i64
  %1181 = icmp ugt i64 %1125, %1180
  br i1 %1181, label %1167, label %1182

1182:                                             ; preds = %1160, %1167, %1118, %1111
  %1183 = phi double [ %1112, %1111 ], [ %1112, %1118 ], [ %1178, %1167 ], [ %1163, %1160 ]
  %1184 = fcmp une double %1183, 0.000000e+00
  br i1 %1184, label %1185, label %1206

1185:                                             ; preds = %1182
  %1186 = load i32, ptr %1114, align 8, !tbaa !317
  %1187 = load i32, ptr %760, align 8, !tbaa !61
  %1188 = load ptr, ptr %761, align 8, !tbaa !58
  br label %1189

1189:                                             ; preds = %1189, %1185
  %1190 = phi i32 [ %1187, %1185 ], [ %1191, %1189 ]
  %1191 = add i32 %1190, -1
  %1192 = sext i32 %1191 to i64
  %1193 = getelementptr inbounds i32, ptr %1188, i64 %1192
  %1194 = load i32, ptr %1193, align 4, !tbaa !22
  %1195 = icmp ugt i32 %1194, %1186
  br i1 %1195, label %1189, label %1196

1196:                                             ; preds = %1189
  %1197 = sub i32 %1186, %1194
  %1198 = zext i32 %1197 to i64
  %1199 = zext i32 %1191 to i64
  %1200 = load ptr, ptr %762, align 8, !tbaa !66
  %1201 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1200, i64 %1199, i32 3
  %1202 = load ptr, ptr %1201, align 8, !tbaa !60
  %1203 = getelementptr inbounds double, ptr %1202, i64 %1198
  %1204 = load double, ptr %1203, align 8, !tbaa !52
  %1205 = fadd double %1183, %1204
  store double %1205, ptr %1203, align 8, !tbaa !52
  br label %1206

1206:                                             ; preds = %1182, %1196, %797
  %1207 = add nuw nsw i64 %790, 1
  %1208 = icmp eq i64 %1207, %787
  br i1 %1208, label %766, label %789

1209:                                             ; preds = %1077
  call void @_ZdlPv(ptr noundef nonnull %748) #23
  br label %1243

1210:                                             ; preds = %770, %768
  %1211 = icmp eq ptr %747, null
  br i1 %1211, label %1213, label %1212

1212:                                             ; preds = %1210
  call void @_ZdlPv(ptr noundef nonnull %747) #23
  br label %1213

1213:                                             ; preds = %1210, %1212
  call void @_ZdlPv(ptr noundef nonnull %663) #23
  %1214 = icmp eq ptr %524, null
  br i1 %1214, label %1216, label %1215

1215:                                             ; preds = %1213
  call void @_ZdlPv(ptr noundef nonnull %524) #23
  br label %1216

1216:                                             ; preds = %1215, %1213
  %1217 = icmp eq ptr %175, null
  br i1 %1217, label %1219, label %1218

1218:                                             ; preds = %1216
  call void @_ZdlPv(ptr noundef nonnull %175) #23
  br label %1219

1219:                                             ; preds = %1218, %1216
  %1220 = load ptr, ptr %7, align 8, !tbaa !321
  %1221 = load ptr, ptr %160, align 8, !tbaa !325
  %1222 = icmp eq ptr %1220, %1221
  br i1 %1222, label %1238, label %1223

1223:                                             ; preds = %1219, %1233
  %1224 = phi ptr [ %1234, %1233 ], [ %1220, %1219 ]
  %1225 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1224, i64 0, i32 2
  %1226 = load ptr, ptr %1225, align 8, !tbaa !320
  %1227 = icmp eq ptr %1226, null
  br i1 %1227, label %1233, label %1228

1228:                                             ; preds = %1223
  %1229 = load ptr, ptr %1226, align 8, !tbaa !32
  %1230 = icmp eq ptr %1229, null
  br i1 %1230, label %1232, label %1231

1231:                                             ; preds = %1228
  call void @_ZdlPv(ptr noundef nonnull %1229) #23
  br label %1232

1232:                                             ; preds = %1231, %1228
  call void @_ZdlPv(ptr noundef nonnull %1226) #23
  store ptr null, ptr %1225, align 8, !tbaa !320
  br label %1233

1233:                                             ; preds = %1232, %1223
  %1234 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1224, i64 1
  %1235 = icmp eq ptr %1234, %1221
  br i1 %1235, label %1236, label %1223

1236:                                             ; preds = %1233
  %1237 = load ptr, ptr %7, align 8, !tbaa !321
  br label %1238

1238:                                             ; preds = %1236, %1219
  %1239 = phi ptr [ %1237, %1236 ], [ %1220, %1219 ]
  %1240 = icmp eq ptr %1239, null
  br i1 %1240, label %1242, label %1241

1241:                                             ; preds = %1238
  call void @_ZdlPv(ptr noundef nonnull %1239) #23
  br label %1242

1242:                                             ; preds = %1238, %1241
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  ret void

1243:                                             ; preds = %1209, %1077
  %1244 = icmp eq ptr %747, null
  br i1 %1244, label %1248, label %1245

1245:                                             ; preds = %775, %1243
  %1246 = phi { ptr, i32 } [ %776, %775 ], [ %1078, %1243 ]
  %1247 = phi ptr [ %741, %775 ], [ %747, %1243 ]
  call void @_ZdlPv(ptr noundef nonnull %1247) #23
  br label %1248

1248:                                             ; preds = %773, %1243, %1245
  %1249 = phi { ptr, i32 } [ %774, %773 ], [ %1078, %1243 ], [ %1246, %1245 ]
  call void @_ZdlPv(ptr noundef nonnull %663) #23
  br label %1250

1250:                                             ; preds = %1248, %771
  %1251 = phi { ptr, i32 } [ %1249, %1248 ], [ %772, %771 ]
  %1252 = icmp eq ptr %524, null
  br i1 %1252, label %1254, label %1253

1253:                                             ; preds = %1250
  call void @_ZdlPv(ptr noundef nonnull %524) #23
  br label %1254

1254:                                             ; preds = %323, %325, %521, %473, %1253, %1250, %641, %424
  %1255 = phi ptr [ %175, %424 ], [ %175, %473 ], [ %175, %521 ], [ %175, %641 ], [ %175, %1250 ], [ %175, %1253 ], [ %212, %323 ], [ %212, %325 ]
  %1256 = phi { ptr, i32 } [ %425, %424 ], [ %474, %473 ], [ %522, %521 ], [ %642, %641 ], [ %1251, %1250 ], [ %1251, %1253 ], [ %324, %323 ], [ %326, %325 ]
  %1257 = icmp eq ptr %1255, null
  br i1 %1257, label %1259, label %1258

1258:                                             ; preds = %1254
  call void @_ZdlPv(ptr noundef nonnull %1255) #23
  br label %1259

1259:                                             ; preds = %1258, %1254
  %1260 = load ptr, ptr %7, align 8, !tbaa !321
  %1261 = load ptr, ptr %160, align 8, !tbaa !325
  %1262 = icmp eq ptr %1260, %1261
  br i1 %1262, label %1278, label %1263

1263:                                             ; preds = %1259, %1273
  %1264 = phi ptr [ %1274, %1273 ], [ %1260, %1259 ]
  %1265 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1264, i64 0, i32 2
  %1266 = load ptr, ptr %1265, align 8, !tbaa !320
  %1267 = icmp eq ptr %1266, null
  br i1 %1267, label %1273, label %1268

1268:                                             ; preds = %1263
  %1269 = load ptr, ptr %1266, align 8, !tbaa !32
  %1270 = icmp eq ptr %1269, null
  br i1 %1270, label %1272, label %1271

1271:                                             ; preds = %1268
  call void @_ZdlPv(ptr noundef nonnull %1269) #23
  br label %1272

1272:                                             ; preds = %1271, %1268
  call void @_ZdlPv(ptr noundef nonnull %1266) #23
  store ptr null, ptr %1265, align 8, !tbaa !320
  br label %1273

1273:                                             ; preds = %1272, %1263
  %1274 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1264, i64 1
  %1275 = icmp eq ptr %1274, %1261
  br i1 %1275, label %1276, label %1263

1276:                                             ; preds = %1273
  %1277 = load ptr, ptr %7, align 8, !tbaa !321
  br label %1278

1278:                                             ; preds = %1276, %1259
  %1279 = phi ptr [ %1277, %1276 ], [ %1260, %1259 ]
  %1280 = icmp eq ptr %1279, null
  br i1 %1280, label %1282, label %1281

1281:                                             ; preds = %1278
  call void @_ZdlPv(ptr noundef nonnull %1279) #23
  br label %1282

1282:                                             ; preds = %1281, %1278, %208
  %1283 = phi { ptr, i32 } [ %207, %208 ], [ %1256, %1278 ], [ %1256, %1281 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  resume { ptr, i32 } %1283

1284:                                             ; preds = %424, %206
  %1285 = landingpad { ptr, i32 }
          catch ptr null
  %1286 = extractvalue { ptr, i32 } %1285, 0
  call void @__clang_call_terminate(ptr %1286) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIfEEEEvRKNS_10FullMatrixIdEERKSt6vectorIjSaIjEERT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(320) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.dealii::Vector.35", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %5) #24
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !311
  %6 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  invoke void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIfEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(320) %3, ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %7 unwind label %13

7:                                                ; preds = %4
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !311
  %8 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !60
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  call void @_ZdaPv(ptr noundef nonnull %9) #23
  store ptr null, ptr %8, align 8, !tbaa !60
  br label %12

12:                                               ; preds = %7, %11
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #24
  ret void

13:                                               ; preds = %4
  %14 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %15 unwind label %16

15:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #24
  resume { ptr, i32 } %14

16:                                               ; preds = %13
  %17 = landingpad { ptr, i32 }
          catch ptr null
  %18 = extractvalue { ptr, i32 } %17, 0
  call void @__clang_call_terminate(ptr %18) #25
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIfEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(320) %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::vector.178", align 8
  %8 = alloca %"struct.dealii::internals::distributing", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !53
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 1
  %14 = load i32, ptr %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %12, i1 %15, i1 false
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !313
  %19 = load ptr, ptr %3, align 8, !tbaa !58
  %20 = ptrtoint ptr %18 to i64
  %21 = ptrtoint ptr %19 to i64
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 2
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 1
  %26 = load i32, ptr %25, align 8, !tbaa !61
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %59, label %28

28:                                               ; preds = %6
  %29 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !314
  %31 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %32 = load i32, ptr %31, align 8, !tbaa !22
  %33 = add i32 %32, 1
  %34 = and i64 %23, 4294967295
  %35 = add nsw i64 %34, -1
  %36 = and i64 %23, 3
  %37 = icmp ult i64 %35, 3
  br i1 %37, label %40, label %38

38:                                               ; preds = %28
  %39 = sub nsw i64 %34, %36
  br label %109

40:                                               ; preds = %109, %28
  %41 = phi double [ undef, %28 ], [ %143, %109 ]
  %42 = phi i64 [ 0, %28 ], [ %144, %109 ]
  %43 = phi double [ 0.000000e+00, %28 ], [ %143, %109 ]
  %44 = icmp eq i64 %36, 0
  br i1 %44, label %59, label %45

45:                                               ; preds = %40, %45
  %46 = phi i64 [ %56, %45 ], [ %42, %40 ]
  %47 = phi double [ %55, %45 ], [ %43, %40 ]
  %48 = phi i64 [ %57, %45 ], [ 0, %40 ]
  %49 = trunc i64 %46 to i32
  %50 = mul i32 %33, %49
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds double, ptr %30, i64 %51
  %53 = load double, ptr %52, align 8, !tbaa !52
  %54 = tail call double @llvm.fabs.f64(double %53)
  %55 = fadd double %47, %54
  %56 = add nuw nsw i64 %46, 1
  %57 = add i64 %48, 1
  %58 = icmp eq i64 %57, %36
  br i1 %58, label %59, label %45, !llvm.loop !371

59:                                               ; preds = %40, %45, %6
  %60 = phi double [ 0.000000e+00, %6 ], [ %41, %40 ], [ %55, %45 ]
  %61 = uitofp i32 %24 to double
  %62 = fdiv double %60, %61
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %63 = and i64 %23, 4294967295
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #24
  store i32 -1, ptr %8, align 8, !tbaa !317
  %64 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 1
  store i32 -1, ptr %64, align 4, !tbaa !319
  %65 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 2
  store ptr null, ptr %65, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  %66 = icmp eq i64 %63, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %150

69:                                               ; preds = %59
  %70 = shl nuw nsw i64 %63, 4
  %71 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %70) #21
          to label %72 unwind label %199

72:                                               ; preds = %69
  store ptr %71, ptr %7, align 8, !tbaa !321
  %73 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %71, i64 %63
  %74 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %73, ptr %74, align 8, !tbaa !323
  %75 = and i64 %23, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %72, %77
  %78 = phi ptr [ %84, %77 ], [ %71, %72 ]
  %79 = phi i64 [ %83, %77 ], [ %63, %72 ]
  %80 = phi i64 [ %85, %77 ], [ 0, %72 ]
  %81 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %78, i64 0, i32 2
  store ptr null, ptr %81, align 8, !tbaa !320
  store i32 -1, ptr %78, align 8, !tbaa !317
  %82 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %78, i64 0, i32 1
  store i32 -1, ptr %82, align 4, !tbaa !319
  %83 = add nsw i64 %79, -1
  %84 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %78, i64 1
  %85 = add i64 %80, 1
  %86 = icmp eq i64 %85, %75
  br i1 %86, label %87, label %77, !llvm.loop !372

87:                                               ; preds = %77, %72
  %88 = phi ptr [ undef, %72 ], [ %84, %77 ]
  %89 = phi ptr [ %71, %72 ], [ %84, %77 ]
  %90 = phi i64 [ %63, %72 ], [ %83, %77 ]
  %91 = icmp ult i64 %63, 4
  br i1 %91, label %147, label %92

92:                                               ; preds = %87, %92
  %93 = phi ptr [ %107, %92 ], [ %89, %87 ]
  %94 = phi i64 [ %106, %92 ], [ %90, %87 ]
  %95 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 0, i32 2
  store ptr null, ptr %95, align 8, !tbaa !320
  store i32 -1, ptr %93, align 8, !tbaa !317
  %96 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 0, i32 1
  store i32 -1, ptr %96, align 4, !tbaa !319
  %97 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 1
  %98 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 1, i32 2
  store ptr null, ptr %98, align 8, !tbaa !320
  store i32 -1, ptr %97, align 8, !tbaa !317
  %99 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 1, i32 1
  store i32 -1, ptr %99, align 4, !tbaa !319
  %100 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 2
  %101 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 2, i32 2
  store ptr null, ptr %101, align 8, !tbaa !320
  store i32 -1, ptr %100, align 8, !tbaa !317
  %102 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 2, i32 1
  store i32 -1, ptr %102, align 4, !tbaa !319
  %103 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 3
  %104 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 3, i32 2
  store ptr null, ptr %104, align 8, !tbaa !320
  store i32 -1, ptr %103, align 8, !tbaa !317
  %105 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 3, i32 1
  store i32 -1, ptr %105, align 4, !tbaa !319
  %106 = add nsw i64 %94, -4
  %107 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %93, i64 4
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %147, label %92

109:                                              ; preds = %109, %38
  %110 = phi i64 [ 0, %38 ], [ %144, %109 ]
  %111 = phi double [ 0.000000e+00, %38 ], [ %143, %109 ]
  %112 = phi i64 [ 0, %38 ], [ %145, %109 ]
  %113 = trunc i64 %110 to i32
  %114 = mul i32 %33, %113
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds double, ptr %30, i64 %115
  %117 = load double, ptr %116, align 8, !tbaa !52
  %118 = tail call double @llvm.fabs.f64(double %117)
  %119 = fadd double %111, %118
  %120 = trunc i64 %110 to i32
  %121 = or i32 %120, 1
  %122 = mul i32 %33, %121
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds double, ptr %30, i64 %123
  %125 = load double, ptr %124, align 8, !tbaa !52
  %126 = tail call double @llvm.fabs.f64(double %125)
  %127 = fadd double %119, %126
  %128 = trunc i64 %110 to i32
  %129 = or i32 %128, 2
  %130 = mul i32 %33, %129
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %30, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !52
  %134 = tail call double @llvm.fabs.f64(double %133)
  %135 = fadd double %127, %134
  %136 = trunc i64 %110 to i32
  %137 = or i32 %136, 3
  %138 = mul i32 %33, %137
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds double, ptr %30, i64 %139
  %141 = load double, ptr %140, align 8, !tbaa !52
  %142 = tail call double @llvm.fabs.f64(double %141)
  %143 = fadd double %135, %142
  %144 = add nuw nsw i64 %110, 4
  %145 = add i64 %112, 4
  %146 = icmp eq i64 %145, %39
  br i1 %146, label %40, label %109

147:                                              ; preds = %92, %87
  %148 = phi ptr [ %88, %87 ], [ %107, %92 ]
  %149 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %148, ptr %149, align 8, !tbaa !325
  br label %150

150:                                              ; preds = %147, %67
  %151 = phi ptr [ null, %67 ], [ %71, %147 ]
  %152 = phi ptr [ null, %67 ], [ %148, %147 ]
  %153 = phi ptr [ %68, %67 ], [ %149, %147 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br i1 %27, label %164, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %156 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %157 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %158 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %159 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %160 = and i64 %23, 4294967295
  br label %202

161:                                              ; preds = %309
  %162 = load ptr, ptr %153, align 8, !tbaa !21
  %163 = load ptr, ptr %7, align 8, !tbaa !321
  br label %164

164:                                              ; preds = %161, %150
  %165 = phi ptr [ %151, %150 ], [ %163, %161 ]
  %166 = phi ptr [ %152, %150 ], [ %162, %161 ]
  %167 = phi ptr [ null, %150 ], [ %311, %161 ]
  %168 = phi ptr [ null, %150 ], [ %312, %161 ]
  %169 = phi i32 [ 0, %150 ], [ %313, %161 ]
  %170 = zext i32 %169 to i64
  store i32 -1, ptr %9, align 8, !tbaa !317
  %171 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %171, align 4, !tbaa !319
  %172 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %172, align 8, !tbaa !320
  %173 = ptrtoint ptr %166 to i64
  %174 = ptrtoint ptr %165 to i64
  %175 = sub i64 %173, %174
  %176 = ashr exact i64 %175, 4
  %177 = icmp ult i64 %176, %170
  br i1 %177, label %178, label %180

178:                                              ; preds = %164
  %179 = sub nsw i64 %170, %176
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %166, i64 noundef %179, ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %320 unwind label %417

180:                                              ; preds = %164
  %181 = icmp ugt i64 %176, %170
  br i1 %181, label %182, label %320

182:                                              ; preds = %180
  %183 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %165, i64 %170
  %184 = icmp eq ptr %166, %183
  br i1 %184, label %320, label %185

185:                                              ; preds = %182, %195
  %186 = phi ptr [ %196, %195 ], [ %183, %182 ]
  %187 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %186, i64 0, i32 2
  %188 = load ptr, ptr %187, align 8, !tbaa !320
  %189 = icmp eq ptr %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = load ptr, ptr %188, align 8, !tbaa !32
  %192 = icmp eq ptr %191, null
  br i1 %192, label %194, label %193

193:                                              ; preds = %190
  tail call void @_ZdlPv(ptr noundef nonnull %191) #23
  br label %194

194:                                              ; preds = %193, %190
  tail call void @_ZdlPv(ptr noundef nonnull %188) #23
  store ptr null, ptr %187, align 8, !tbaa !320
  br label %195

195:                                              ; preds = %194, %185
  %196 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %186, i64 1
  %197 = icmp eq ptr %196, %166
  br i1 %197, label %198, label %185

198:                                              ; preds = %195
  store ptr %183, ptr %153, align 8, !tbaa !325
  br label %320

199:                                              ; preds = %69
  %200 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %8)
          to label %201 unwind label %1262

201:                                              ; preds = %199
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br label %1260

202:                                              ; preds = %154, %309
  %203 = phi i64 [ 0, %154 ], [ %314, %309 ]
  %204 = phi i32 [ 0, %154 ], [ %313, %309 ]
  %205 = phi ptr [ null, %154 ], [ %312, %309 ]
  %206 = phi ptr [ null, %154 ], [ %311, %309 ]
  %207 = phi ptr [ null, %154 ], [ %310, %309 ]
  %208 = load ptr, ptr %156, align 8, !tbaa !55
  %209 = load i32, ptr %157, align 8, !tbaa !57
  %210 = load ptr, ptr %155, align 8, !tbaa !55
  %211 = ptrtoint ptr %208 to i64
  %212 = ptrtoint ptr %210 to i64
  %213 = sub i64 %211, %212
  %214 = shl nsw i64 %213, 3
  %215 = zext i32 %209 to i64
  %216 = add nsw i64 %214, %215
  %217 = load ptr, ptr %3, align 8, !tbaa !58
  %218 = getelementptr inbounds i32, ptr %217, i64 %203
  %219 = load i32, ptr %218, align 4, !tbaa !22
  %220 = zext i32 %219 to i64
  %221 = icmp ugt i64 %216, %220
  br i1 %221, label %222, label %232

222:                                              ; preds = %202
  %223 = lshr i32 %219, 6
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds i64, ptr %210, i64 %224
  %226 = and i32 %219, 63
  %227 = zext i32 %226 to i64
  %228 = shl nuw i64 1, %227
  %229 = load i64, ptr %225, align 8, !tbaa !42
  %230 = and i64 %229, %228
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %239

232:                                              ; preds = %222, %202
  %233 = zext i32 %204 to i64
  %234 = load ptr, ptr %7, align 8, !tbaa !321
  %235 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %234, i64 %233
  store i32 %219, ptr %235, align 8, !tbaa !317
  %236 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %234, i64 %233, i32 1
  %237 = trunc i64 %203 to i32
  store i32 %237, ptr %236, align 4, !tbaa !319
  %238 = add i32 %204, 1
  br label %309

239:                                              ; preds = %222
  %240 = load ptr, ptr %158, align 8, !tbaa !21
  %241 = load ptr, ptr %159, align 8, !tbaa !21
  %242 = ptrtoint ptr %241 to i64
  %243 = ptrtoint ptr %240 to i64
  %244 = sub i64 %242, %243
  %245 = icmp sgt i64 %244, 0
  br i1 %245, label %246, label %261

246:                                              ; preds = %239
  %247 = udiv exact i64 %244, 40
  br label %248

248:                                              ; preds = %248, %246
  %249 = phi i64 [ %247, %246 ], [ %259, %248 ]
  %250 = phi ptr [ %240, %246 ], [ %258, %248 ]
  %251 = lshr i64 %249, 1
  %252 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %250, i64 %251
  %253 = load i32, ptr %252, align 8, !tbaa !24
  %254 = icmp ult i32 %253, %219
  %255 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %252, i64 1
  %256 = xor i64 %251, -1
  %257 = add nsw i64 %249, %256
  %258 = select i1 %254, ptr %255, ptr %250
  %259 = select i1 %254, i64 %257, i64 %251
  %260 = icmp sgt i64 %259, 0
  br i1 %260, label %248, label %261

261:                                              ; preds = %248, %239
  %262 = phi ptr [ %240, %239 ], [ %258, %248 ]
  %263 = icmp eq ptr %206, %207
  br i1 %263, label %267, label %264

264:                                              ; preds = %261
  %265 = trunc i64 %203 to i32
  store i32 %265, ptr %206, align 8
  %266 = getelementptr inbounds i8, ptr %206, i64 8
  store ptr %262, ptr %266, align 8
  br label %304

267:                                              ; preds = %261
  %268 = ptrtoint ptr %206 to i64
  %269 = ptrtoint ptr %205 to i64
  %270 = sub i64 %268, %269
  %271 = icmp eq i64 %270, 9223372036854775792
  br i1 %271, label %272, label %274

272:                                              ; preds = %267
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %273 unwind label %318

273:                                              ; preds = %272
  unreachable

274:                                              ; preds = %267
  %275 = ashr exact i64 %270, 4
  %276 = tail call i64 @llvm.umax.i64(i64 %275, i64 1)
  %277 = add i64 %276, %275
  %278 = icmp ult i64 %277, %275
  %279 = icmp ugt i64 %277, 576460752303423487
  %280 = or i1 %278, %279
  %281 = select i1 %280, i64 576460752303423487, i64 %277
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %286, label %283

283:                                              ; preds = %274
  %284 = shl nuw nsw i64 %281, 4
  %285 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %284) #21
          to label %286 unwind label %316

286:                                              ; preds = %283, %274
  %287 = phi ptr [ null, %274 ], [ %285, %283 ]
  %288 = getelementptr inbounds %"struct.std::pair.188", ptr %287, i64 %275
  %289 = trunc i64 %203 to i32
  store i32 %289, ptr %288, align 8
  %290 = getelementptr inbounds i8, ptr %288, i64 8
  store ptr %262, ptr %290, align 8
  %291 = icmp eq ptr %205, %206
  br i1 %291, label %298, label %292

292:                                              ; preds = %286, %292
  %293 = phi ptr [ %296, %292 ], [ %287, %286 ]
  %294 = phi ptr [ %295, %292 ], [ %205, %286 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %293, ptr noundef nonnull align 8 dereferenceable(16) %294, i64 16, i1 false)
  %295 = getelementptr inbounds %"struct.std::pair.188", ptr %294, i64 1
  %296 = getelementptr inbounds %"struct.std::pair.188", ptr %293, i64 1
  %297 = icmp eq ptr %295, %206
  br i1 %297, label %298, label %292

298:                                              ; preds = %292, %286
  %299 = phi ptr [ %287, %286 ], [ %296, %292 ]
  %300 = icmp eq ptr %205, null
  br i1 %300, label %302, label %301

301:                                              ; preds = %298
  tail call void @_ZdlPv(ptr noundef nonnull %205) #23
  br label %302

302:                                              ; preds = %301, %298
  %303 = getelementptr inbounds %"struct.std::pair.188", ptr %287, i64 %281
  br label %304

304:                                              ; preds = %302, %264
  %305 = phi ptr [ %303, %302 ], [ %207, %264 ]
  %306 = phi ptr [ %299, %302 ], [ %206, %264 ]
  %307 = phi ptr [ %287, %302 ], [ %205, %264 ]
  %308 = getelementptr inbounds %"struct.std::pair.188", ptr %306, i64 1
  br label %309

309:                                              ; preds = %304, %232
  %310 = phi ptr [ %305, %304 ], [ %207, %232 ]
  %311 = phi ptr [ %308, %304 ], [ %206, %232 ]
  %312 = phi ptr [ %307, %304 ], [ %205, %232 ]
  %313 = phi i32 [ %204, %304 ], [ %238, %232 ]
  %314 = add nuw nsw i64 %203, 1
  %315 = icmp eq i64 %314, %160
  br i1 %315, label %161, label %202

316:                                              ; preds = %283
  %317 = landingpad { ptr, i32 }
          cleanup
  br label %1232

318:                                              ; preds = %272
  %319 = landingpad { ptr, i32 }
          cleanup
  br label %1232

320:                                              ; preds = %198, %182, %180, %178
  %321 = load ptr, ptr %172, align 8, !tbaa !320
  %322 = icmp eq ptr %321, null
  br i1 %322, label %328, label %323

323:                                              ; preds = %320
  %324 = load ptr, ptr %321, align 8, !tbaa !32
  %325 = icmp eq ptr %324, null
  br i1 %325, label %327, label %326

326:                                              ; preds = %323
  call void @_ZdlPv(ptr noundef nonnull %324) #23
  br label %327

327:                                              ; preds = %326, %323
  call void @_ZdlPv(ptr noundef nonnull %321) #23
  store ptr null, ptr %172, align 8, !tbaa !320
  br label %328

328:                                              ; preds = %327, %320
  %329 = load ptr, ptr %153, align 8, !tbaa !325
  %330 = load ptr, ptr %7, align 8, !tbaa !321
  %331 = ptrtoint ptr %329 to i64
  %332 = ptrtoint ptr %330 to i64
  %333 = sub i64 %331, %332
  %334 = lshr exact i64 %333, 4
  %335 = trunc i64 %334 to i32
  %336 = icmp ult i32 %335, 2
  br i1 %336, label %382, label %339

337:                                              ; preds = %378, %339
  %338 = icmp ult i32 %340, 4
  br i1 %338, label %382, label %339

339:                                              ; preds = %328, %337
  %340 = phi i32 [ %341, %337 ], [ %335, %328 ]
  %341 = lshr i32 %340, 1
  %342 = icmp ult i32 %341, %335
  br i1 %342, label %343, label %337

343:                                              ; preds = %339
  %344 = zext i32 %341 to i64
  br label %345

345:                                              ; preds = %378, %343
  %346 = phi i64 [ %344, %343 ], [ %379, %378 ]
  %347 = sub nuw nsw i64 %346, %344
  %348 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %346
  %349 = load <2 x i32>, ptr %348, align 8, !tbaa !22
  %350 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %347
  %351 = load i32, ptr %350, align 8, !tbaa !317
  %352 = extractelement <2 x i32> %349, i64 0
  %353 = icmp ugt i32 %351, %352
  br i1 %353, label %354, label %378

354:                                              ; preds = %345
  %355 = icmp ult i64 %346, %344
  %356 = trunc i64 %346 to i32
  br i1 %355, label %374, label %357

357:                                              ; preds = %354
  %358 = trunc i64 %347 to i32
  br label %359

359:                                              ; preds = %366, %357
  %360 = phi i32 [ %361, %366 ], [ %356, %357 ]
  %361 = phi i32 [ %372, %366 ], [ %358, %357 ]
  %362 = zext i32 %361 to i64
  %363 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %362
  %364 = load i32, ptr %363, align 8, !tbaa !317
  %365 = icmp ugt i32 %364, %352
  br i1 %365, label %366, label %374

366:                                              ; preds = %359
  %367 = zext i32 %360 to i64
  %368 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %367
  store i32 %364, ptr %368, align 8, !tbaa !317
  %369 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %362, i32 1
  %370 = load i32, ptr %369, align 4, !tbaa !319
  %371 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %367, i32 1
  store i32 %370, ptr %371, align 4, !tbaa !319
  %372 = sub i32 %361, %341
  %373 = icmp ult i32 %361, %341
  br i1 %373, label %374, label %359

374:                                              ; preds = %366, %359, %354
  %375 = phi i32 [ %356, %354 ], [ %360, %359 ], [ %361, %366 ]
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %330, i64 %376
  store <2 x i32> %349, ptr %377, align 8, !tbaa !22
  br label %378

378:                                              ; preds = %374, %345
  %379 = add nuw nsw i64 %346, 1
  %380 = trunc i64 %379 to i32
  %381 = icmp eq i32 %335, %380
  br i1 %381, label %337, label %345

382:                                              ; preds = %337, %328
  %383 = ptrtoint ptr %167 to i64
  %384 = ptrtoint ptr %168 to i64
  %385 = sub i64 %383, %384
  %386 = ashr exact i64 %385, 4
  %387 = and i64 %385, 68719476720
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %404, label %389

389:                                              ; preds = %382
  %390 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %391 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %392 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 1, i32 1
  %393 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 2
  %394 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 2, i32 1
  %395 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 3, i32 0, i32 1
  %396 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %397 = and i64 %386, 4294967295
  br label %419

398:                                              ; preds = %512
  %399 = load ptr, ptr %153, align 8, !tbaa !325
  %400 = load ptr, ptr %7, align 8, !tbaa !321
  %401 = ptrtoint ptr %399 to i64
  %402 = ptrtoint ptr %400 to i64
  %403 = sub i64 %401, %402
  br label %404

404:                                              ; preds = %398, %382
  %405 = phi i64 [ %403, %398 ], [ %333, %382 ]
  %406 = phi ptr [ %400, %398 ], [ %330, %382 ]
  %407 = phi i8 [ %436, %398 ], [ 0, %382 ]
  %408 = ashr exact i64 %405, 4
  %409 = trunc i64 %408 to i32
  %410 = and i64 %408, 4294967295
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %517, label %412

412:                                              ; preds = %404
  %413 = shl nuw nsw i64 %410, 2
  %414 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %413) #21
          to label %415 unwind label %635

415:                                              ; preds = %412
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %414, i8 0, i64 %413, i1 false), !tbaa !22
  %416 = getelementptr inbounds i32, ptr %414, i64 %410
  br label %517

417:                                              ; preds = %178
  %418 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %1232 unwind label %1262

419:                                              ; preds = %389, %512
  %420 = phi i64 [ 0, %389 ], [ %513, %512 ]
  %421 = phi i8 [ 0, %389 ], [ %436, %512 ]
  %422 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 %420
  %423 = load i32, ptr %422, align 8, !tbaa !326
  %424 = zext i32 %423 to i64
  %425 = load ptr, ptr %3, align 8, !tbaa !58
  %426 = getelementptr inbounds i32, ptr %425, i64 %424
  %427 = load i32, ptr %426, align 4, !tbaa !22
  %428 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 %420, i32 1
  %429 = load ptr, ptr %428, align 8, !tbaa !328
  %430 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %429, i64 0, i32 1
  %431 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %429, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %432 = load ptr, ptr %431, align 8, !tbaa !31
  %433 = load ptr, ptr %430, align 8, !tbaa !32
  %434 = icmp eq ptr %432, %433
  br i1 %434, label %435, label %449

435:                                              ; preds = %457, %419
  %436 = phi i8 [ %421, %419 ], [ 1, %457 ]
  %437 = load ptr, ptr %390, align 8, !tbaa !314
  %438 = load i32, ptr %391, align 8, !tbaa !22
  %439 = add i32 %438, 1
  %440 = mul i32 %439, %423
  %441 = zext i32 %440 to i64
  %442 = getelementptr inbounds double, ptr %437, i64 %441
  %443 = load double, ptr %442, align 8, !tbaa !52
  %444 = fcmp une double %443, 0.000000e+00
  %445 = call double @llvm.fabs.f64(double %443)
  %446 = select i1 %444, double %445, double %62
  %447 = fptrunc double %446 to float
  %448 = fcmp oeq float %447, 0.000000e+00
  br i1 %448, label %512, label %469

449:                                              ; preds = %419, %457
  %450 = phi ptr [ %461, %457 ], [ %433, %419 ]
  %451 = phi i64 [ %459, %457 ], [ 0, %419 ]
  %452 = phi i32 [ %458, %457 ], [ 0, %419 ]
  %453 = getelementptr inbounds %"struct.std::pair", ptr %450, i64 %451
  %454 = load i32, ptr %453, align 8, !tbaa !37
  %455 = getelementptr inbounds %"struct.std::pair", ptr %450, i64 %451, i32 1
  %456 = load double, ptr %455, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %454, i32 %423, double %456)
          to label %457 unwind label %467

457:                                              ; preds = %449
  %458 = add i32 %452, 1
  %459 = zext i32 %458 to i64
  %460 = load ptr, ptr %431, align 8, !tbaa !31
  %461 = load ptr, ptr %430, align 8, !tbaa !32
  %462 = ptrtoint ptr %460 to i64
  %463 = ptrtoint ptr %461 to i64
  %464 = sub i64 %462, %463
  %465 = ashr exact i64 %464, 4
  %466 = icmp ugt i64 %465, %459
  br i1 %466, label %449, label %435

467:                                              ; preds = %449
  %468 = landingpad { ptr, i32 }
          cleanup
  br label %1232

469:                                              ; preds = %435
  %470 = load i32, ptr %25, align 8, !tbaa !61
  %471 = load ptr, ptr %392, align 8, !tbaa !58
  br label %472

472:                                              ; preds = %472, %469
  %473 = phi i32 [ %470, %469 ], [ %474, %472 ]
  %474 = add i32 %473, -1
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds i32, ptr %471, i64 %475
  %477 = load i32, ptr %476, align 4, !tbaa !22
  %478 = icmp ugt i32 %477, %427
  br i1 %478, label %472, label %479

479:                                              ; preds = %472
  %480 = load i32, ptr %393, align 8, !tbaa !61
  %481 = load ptr, ptr %394, align 8, !tbaa !58
  br label %482

482:                                              ; preds = %482, %479
  %483 = phi i32 [ %480, %479 ], [ %484, %482 ]
  %484 = add i32 %483, -1
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds i32, ptr %481, i64 %485
  %487 = load i32, ptr %486, align 4, !tbaa !22
  %488 = icmp ugt i32 %487, %427
  br i1 %488, label %482, label %489

489:                                              ; preds = %482
  %490 = sub i32 %427, %477
  %491 = sub i32 %427, %487
  %492 = load ptr, ptr %395, align 8, !tbaa !143, !noalias !373
  %493 = load i32, ptr %396, align 8, !tbaa !22, !noalias !373
  %494 = mul i32 %493, %474
  %495 = zext i32 %494 to i64
  %496 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %492, i64 %495
  %497 = zext i32 %484 to i64
  %498 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %496, i64 %497
  %499 = load ptr, ptr %498, align 8, !tbaa !147
  %500 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %499, i64 0, i32 1
  %501 = load ptr, ptr %500, align 8, !tbaa !47
  %502 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %501, i32 noundef %490, i32 noundef %491)
          to label %503 unwind label %515

503:                                              ; preds = %489
  %504 = icmp eq i32 %502, -1
  br i1 %504, label %512, label %505

505:                                              ; preds = %503
  %506 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %499, i64 0, i32 2
  %507 = load ptr, ptr %506, align 8, !tbaa !44
  %508 = zext i32 %502 to i64
  %509 = getelementptr inbounds float, ptr %507, i64 %508
  %510 = load float, ptr %509, align 4, !tbaa !33
  %511 = fadd float %510, %447
  store float %511, ptr %509, align 4, !tbaa !33
  br label %512

512:                                              ; preds = %505, %503, %435
  %513 = add nuw nsw i64 %420, 1
  %514 = icmp eq i64 %513, %397
  br i1 %514, label %398, label %419

515:                                              ; preds = %489
  %516 = landingpad { ptr, i32 }
          cleanup
  br label %1232

517:                                              ; preds = %415, %404
  %518 = phi ptr [ null, %404 ], [ %414, %415 ]
  %519 = phi ptr [ null, %404 ], [ %416, %415 ]
  %520 = icmp eq i32 %409, 0
  br i1 %520, label %593, label %521

521:                                              ; preds = %517
  %522 = and i64 %408, 4294967295
  %523 = icmp ult i64 %522, 17
  br i1 %523, label %524, label %543

524:                                              ; preds = %557, %543, %521
  %525 = phi i64 [ 0, %543 ], [ 0, %521 ], [ %556, %557 ]
  %526 = sub nsw i64 %408, %525
  %527 = xor i64 %525, -1
  %528 = add nsw i64 %522, %527
  %529 = and i64 %526, 3
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %540, label %531

531:                                              ; preds = %524, %531
  %532 = phi i64 [ %537, %531 ], [ %525, %524 ]
  %533 = phi i64 [ %538, %531 ], [ 0, %524 ]
  %534 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %532
  %535 = load i32, ptr %534, align 8, !tbaa !317
  %536 = getelementptr inbounds i32, ptr %518, i64 %532
  store i32 %535, ptr %536, align 4, !tbaa !22
  %537 = add nuw nsw i64 %532, 1
  %538 = add i64 %533, 1
  %539 = icmp eq i64 %538, %529
  br i1 %539, label %540, label %531, !llvm.loop !376

540:                                              ; preds = %531, %524
  %541 = phi i64 [ %525, %524 ], [ %537, %531 ]
  %542 = icmp ult i64 %528, 3
  br i1 %542, label %593, label %637

543:                                              ; preds = %521
  %544 = shl nuw nsw i64 %522, 2
  %545 = getelementptr i8, ptr %518, i64 %544
  %546 = shl nuw nsw i64 %522, 4
  %547 = add nsw i64 %546, -12
  %548 = getelementptr i8, ptr %406, i64 %547
  %549 = icmp ult ptr %518, %548
  %550 = icmp ult ptr %406, %545
  %551 = and i1 %549, %550
  br i1 %551, label %524, label %552

552:                                              ; preds = %543
  %553 = and i64 %408, 7
  %554 = icmp eq i64 %553, 0
  %555 = select i1 %554, i64 8, i64 %553
  %556 = sub nsw i64 %522, %555
  br label %557

557:                                              ; preds = %557, %552
  %558 = phi i64 [ 0, %552 ], [ %591, %557 ]
  %559 = or i64 %558, 1
  %560 = or i64 %558, 2
  %561 = or i64 %558, 3
  %562 = or i64 %558, 4
  %563 = or i64 %558, 5
  %564 = or i64 %558, 6
  %565 = or i64 %558, 7
  %566 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %558
  %567 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %559
  %568 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %560
  %569 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %561
  %570 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %562
  %571 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %563
  %572 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %564
  %573 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %565
  %574 = load i32, ptr %566, align 8, !tbaa !317, !alias.scope !377
  %575 = load i32, ptr %567, align 8, !tbaa !317, !alias.scope !377
  %576 = load i32, ptr %568, align 8, !tbaa !317, !alias.scope !377
  %577 = load i32, ptr %569, align 8, !tbaa !317, !alias.scope !377
  %578 = load i32, ptr %570, align 8, !tbaa !317, !alias.scope !377
  %579 = load i32, ptr %571, align 8, !tbaa !317, !alias.scope !377
  %580 = load i32, ptr %572, align 8, !tbaa !317, !alias.scope !377
  %581 = load i32, ptr %573, align 8, !tbaa !317, !alias.scope !377
  %582 = insertelement <8 x i32> poison, i32 %574, i64 0
  %583 = insertelement <8 x i32> %582, i32 %575, i64 1
  %584 = insertelement <8 x i32> %583, i32 %576, i64 2
  %585 = insertelement <8 x i32> %584, i32 %577, i64 3
  %586 = insertelement <8 x i32> %585, i32 %578, i64 4
  %587 = insertelement <8 x i32> %586, i32 %579, i64 5
  %588 = insertelement <8 x i32> %587, i32 %580, i64 6
  %589 = insertelement <8 x i32> %588, i32 %581, i64 7
  %590 = getelementptr inbounds i32, ptr %518, i64 %558
  store <8 x i32> %589, ptr %590, align 4, !tbaa !22, !alias.scope !380, !noalias !377
  %591 = add nuw i64 %558, 8
  %592 = icmp eq i64 %591, %556
  br i1 %592, label %524, label %557, !llvm.loop !382

593:                                              ; preds = %540, %637, %517
  %594 = add i32 %26, 1
  %595 = zext i32 %594 to i64
  %596 = icmp eq i32 %594, 0
  br i1 %596, label %656, label %597

597:                                              ; preds = %593
  %598 = shl nuw nsw i64 %595, 2
  %599 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %598) #21
          to label %600 unwind label %763

600:                                              ; preds = %597
  %601 = getelementptr inbounds i32, ptr %599, i64 %595
  %602 = add nuw nsw i64 %595, 4611686018427387903
  %603 = and i64 %602, 4611686018427387903
  %604 = add nuw nsw i64 %603, 1
  %605 = icmp ult i64 %603, 31
  br i1 %605, label %629, label %606

606:                                              ; preds = %600
  %607 = and i64 %604, 9223372036854775776
  %608 = shl i64 %607, 2
  %609 = getelementptr i8, ptr %599, i64 %608
  %610 = insertelement <8 x i32> poison, i32 %409, i64 0
  %611 = shufflevector <8 x i32> %610, <8 x i32> poison, <8 x i32> zeroinitializer
  %612 = insertelement <8 x i32> poison, i32 %409, i64 0
  %613 = shufflevector <8 x i32> %612, <8 x i32> poison, <8 x i32> zeroinitializer
  %614 = insertelement <8 x i32> poison, i32 %409, i64 0
  %615 = shufflevector <8 x i32> %614, <8 x i32> poison, <8 x i32> zeroinitializer
  %616 = insertelement <8 x i32> poison, i32 %409, i64 0
  %617 = shufflevector <8 x i32> %616, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %618

618:                                              ; preds = %618, %606
  %619 = phi i64 [ 0, %606 ], [ %625, %618 ]
  %620 = shl i64 %619, 2
  %621 = getelementptr i8, ptr %599, i64 %620
  store <8 x i32> %611, ptr %621, align 4, !tbaa !22
  %622 = getelementptr i32, ptr %621, i64 8
  store <8 x i32> %613, ptr %622, align 4, !tbaa !22
  %623 = getelementptr i32, ptr %621, i64 16
  store <8 x i32> %615, ptr %623, align 4, !tbaa !22
  %624 = getelementptr i32, ptr %621, i64 24
  store <8 x i32> %617, ptr %624, align 4, !tbaa !22
  %625 = add nuw i64 %619, 32
  %626 = icmp eq i64 %625, %607
  br i1 %626, label %627, label %618, !llvm.loop !383

627:                                              ; preds = %618
  %628 = icmp eq i64 %604, %607
  br i1 %628, label %656, label %629

629:                                              ; preds = %600, %627
  %630 = phi ptr [ %599, %600 ], [ %609, %627 ]
  br label %631

631:                                              ; preds = %629, %631
  %632 = phi ptr [ %633, %631 ], [ %630, %629 ]
  store i32 %409, ptr %632, align 4, !tbaa !22
  %633 = getelementptr inbounds i32, ptr %632, i64 1
  %634 = icmp eq ptr %633, %601
  br i1 %634, label %656, label %631, !llvm.loop !384

635:                                              ; preds = %412
  %636 = landingpad { ptr, i32 }
          cleanup
  br label %1232

637:                                              ; preds = %540, %637
  %638 = phi i64 [ %654, %637 ], [ %541, %540 ]
  %639 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %638
  %640 = load i32, ptr %639, align 8, !tbaa !317
  %641 = getelementptr inbounds i32, ptr %518, i64 %638
  store i32 %640, ptr %641, align 4, !tbaa !22
  %642 = add nuw nsw i64 %638, 1
  %643 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %642
  %644 = load i32, ptr %643, align 8, !tbaa !317
  %645 = getelementptr inbounds i32, ptr %518, i64 %642
  store i32 %644, ptr %645, align 4, !tbaa !22
  %646 = add nuw nsw i64 %638, 2
  %647 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %646
  %648 = load i32, ptr %647, align 8, !tbaa !317
  %649 = getelementptr inbounds i32, ptr %518, i64 %646
  store i32 %648, ptr %649, align 4, !tbaa !22
  %650 = add nuw nsw i64 %638, 3
  %651 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %406, i64 %650
  %652 = load i32, ptr %651, align 8, !tbaa !317
  %653 = getelementptr inbounds i32, ptr %518, i64 %650
  store i32 %652, ptr %653, align 4, !tbaa !22
  %654 = add nuw nsw i64 %638, 4
  %655 = icmp eq i64 %654, %522
  br i1 %655, label %593, label %637, !llvm.loop !385

656:                                              ; preds = %631, %627, %593
  %657 = phi ptr [ null, %593 ], [ %599, %627 ], [ %599, %631 ]
  %658 = load i32, ptr %25, align 8, !tbaa !61
  store i32 0, ptr %657, align 4, !tbaa !22
  %659 = icmp ugt i32 %658, 1
  br i1 %659, label %663, label %660

660:                                              ; preds = %656
  %661 = ptrtoint ptr %519 to i64
  %662 = ptrtoint ptr %518 to i64
  br label %669

663:                                              ; preds = %656
  %664 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 1, i32 1
  %665 = load ptr, ptr %664, align 8, !tbaa !58
  %666 = ptrtoint ptr %519 to i64
  %667 = ptrtoint ptr %518 to i64
  %668 = zext i32 %658 to i64
  br label %681

669:                                              ; preds = %706, %660
  %670 = phi i64 [ %662, %660 ], [ %667, %706 ]
  %671 = phi i64 [ %661, %660 ], [ %666, %706 ]
  %672 = getelementptr inbounds i32, ptr %657, i64 1
  %673 = load i32, ptr %672, align 4, !tbaa !22
  %674 = sub i64 %671, %670
  %675 = ashr exact i64 %674, 2
  %676 = zext i32 %673 to i64
  %677 = icmp ugt i64 %675, %676
  br i1 %677, label %678, label %732

678:                                              ; preds = %669
  %679 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 1, i32 1
  %680 = load ptr, ptr %679, align 8, !tbaa !58
  br label %715

681:                                              ; preds = %706, %663
  %682 = phi i64 [ 1, %663 ], [ %713, %706 ]
  %683 = phi ptr [ %518, %663 ], [ %708, %706 ]
  %684 = getelementptr inbounds i32, ptr %665, i64 %682
  %685 = load i32, ptr %684, align 4, !tbaa !22
  %686 = ptrtoint ptr %683 to i64
  %687 = sub i64 %666, %686
  %688 = icmp sgt i64 %687, 0
  br i1 %688, label %689, label %706

689:                                              ; preds = %681
  %690 = lshr exact i64 %687, 2
  br label %691

691:                                              ; preds = %691, %689
  %692 = phi i64 [ %690, %689 ], [ %702, %691 ]
  %693 = phi ptr [ %683, %689 ], [ %701, %691 ]
  %694 = lshr i64 %692, 1
  %695 = getelementptr inbounds i32, ptr %693, i64 %694
  %696 = load i32, ptr %695, align 4, !tbaa !22
  %697 = icmp ult i32 %696, %685
  %698 = getelementptr inbounds i32, ptr %695, i64 1
  %699 = xor i64 %694, -1
  %700 = add nsw i64 %692, %699
  %701 = select i1 %697, ptr %698, ptr %693
  %702 = select i1 %697, i64 %700, i64 %694
  %703 = icmp sgt i64 %702, 0
  br i1 %703, label %691, label %704

704:                                              ; preds = %691
  %705 = ptrtoint ptr %701 to i64
  br label %706

706:                                              ; preds = %704, %681
  %707 = phi i64 [ %705, %704 ], [ %686, %681 ]
  %708 = phi ptr [ %701, %704 ], [ %683, %681 ]
  %709 = sub i64 %707, %667
  %710 = lshr exact i64 %709, 2
  %711 = trunc i64 %710 to i32
  %712 = getelementptr inbounds i32, ptr %657, i64 %682
  store i32 %711, ptr %712, align 4, !tbaa !22
  %713 = add nuw nsw i64 %682, 1
  %714 = icmp eq i64 %713, %668
  br i1 %714, label %669, label %681

715:                                              ; preds = %727, %678
  %716 = phi i64 [ %676, %678 ], [ %730, %727 ]
  %717 = phi i32 [ %673, %678 ], [ %729, %727 ]
  %718 = getelementptr inbounds i32, ptr %518, i64 %716
  %719 = load i32, ptr %718, align 4, !tbaa !22
  br label %720

720:                                              ; preds = %720, %715
  %721 = phi i32 [ %658, %715 ], [ %722, %720 ]
  %722 = add i32 %721, -1
  %723 = sext i32 %722 to i64
  %724 = getelementptr inbounds i32, ptr %680, i64 %723
  %725 = load i32, ptr %724, align 4, !tbaa !22
  %726 = icmp ugt i32 %725, %719
  br i1 %726, label %720, label %727

727:                                              ; preds = %720
  %728 = sub i32 %719, %725
  store i32 %728, ptr %718, align 4, !tbaa !22
  %729 = add i32 %717, 1
  %730 = zext i32 %729 to i64
  %731 = icmp ugt i64 %675, %730
  br i1 %731, label %715, label %732

732:                                              ; preds = %727, %669
  br i1 %411, label %740, label %733

733:                                              ; preds = %732
  %734 = shl nuw nsw i64 %410, 2
  %735 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %734) #21
          to label %736 unwind label %765

736:                                              ; preds = %733
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %735, i8 0, i64 %734, i1 false), !tbaa !22
  %737 = shl nuw nsw i64 %410, 3
  %738 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %737) #21
          to label %739 unwind label %767

739:                                              ; preds = %736
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %738, i8 0, i64 %737, i1 false), !tbaa !52
  br label %740

740:                                              ; preds = %739, %732
  %741 = phi ptr [ null, %732 ], [ %735, %739 ]
  %742 = phi ptr [ null, %732 ], [ %738, %739 ]
  %743 = icmp eq i32 %26, 0
  br i1 %743, label %760, label %744

744:                                              ; preds = %740
  %745 = and i8 %407, 1
  %746 = icmp eq i8 %745, 0
  %747 = ptrtoint ptr %741 to i64
  %748 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %749 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %750 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 3, i32 0, i32 1
  %751 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %752 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %753 = icmp eq ptr %167, %168
  %754 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 3
  %755 = zext i32 %26 to i64
  %756 = getelementptr inbounds double, ptr %742, i64 1
  %757 = getelementptr inbounds i32, ptr %741, i64 1
  br label %769

758:                                              ; preds = %1185, %769
  %759 = icmp eq i64 %771, %755
  br i1 %759, label %760, label %769

760:                                              ; preds = %758, %740
  %761 = icmp eq ptr %742, null
  br i1 %761, label %1188, label %762

762:                                              ; preds = %760
  call void @_ZdlPv(ptr noundef nonnull %742) #23
  br label %1188

763:                                              ; preds = %597
  %764 = landingpad { ptr, i32 }
          cleanup
  br label %1228

765:                                              ; preds = %733
  %766 = landingpad { ptr, i32 }
          cleanup
  br label %1226

767:                                              ; preds = %736
  %768 = landingpad { ptr, i32 }
          cleanup
  br label %1223

769:                                              ; preds = %744, %758
  %770 = phi i64 [ 0, %744 ], [ %771, %758 ]
  %771 = add nuw nsw i64 %770, 1
  %772 = getelementptr inbounds i32, ptr %657, i64 %771
  %773 = load i32, ptr %772, align 4, !tbaa !22
  %774 = getelementptr inbounds i32, ptr %657, i64 %770
  %775 = load i32, ptr %774, align 4, !tbaa !22
  %776 = icmp ult i32 %775, %773
  br i1 %776, label %777, label %758

777:                                              ; preds = %769
  %778 = zext i32 %775 to i64
  %779 = zext i32 %773 to i64
  %780 = trunc i64 %770 to i32
  br label %781

781:                                              ; preds = %777, %1185
  %782 = phi i64 [ %778, %777 ], [ %1186, %1185 ]
  %783 = getelementptr inbounds i32, ptr %518, i64 %782
  %784 = load i32, ptr %783, align 4, !tbaa !22
  %785 = load ptr, ptr %7, align 8, !tbaa !321
  %786 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %785, i64 %782, i32 1
  %787 = load i32, ptr %786, align 4, !tbaa !319
  %788 = icmp eq i32 %787, -1
  br label %790

789:                                              ; preds = %1073
  br i1 %16, label %1185, label %1075

790:                                              ; preds = %781, %1073
  %791 = phi i64 [ 0, %781 ], [ %792, %1073 ]
  %792 = add nuw nsw i64 %791, 1
  %793 = getelementptr inbounds i32, ptr %657, i64 %792
  %794 = load i32, ptr %793, align 4, !tbaa !22
  %795 = load ptr, ptr %748, align 8
  %796 = load i32, ptr %749, align 8
  %797 = mul i32 %796, %787
  %798 = zext i32 %797 to i64
  %799 = getelementptr inbounds double, ptr %795, i64 %798
  %800 = getelementptr inbounds i32, ptr %657, i64 %791
  %801 = load i32, ptr %800, align 4, !tbaa !22
  %802 = icmp ult i32 %801, %794
  br i1 %746, label %803, label %868

803:                                              ; preds = %790
  br i1 %802, label %804, label %1054

804:                                              ; preds = %803
  %805 = load ptr, ptr %7, align 8, !tbaa !321
  %806 = zext i32 %801 to i64
  %807 = zext i32 %794 to i64
  %808 = sub nsw i64 %807, %806
  %809 = xor i64 %806, -1
  %810 = and i64 %808, 1
  %811 = icmp eq i64 %810, 0
  br i1 %811, label %826, label %812

812:                                              ; preds = %804
  %813 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %805, i64 %806, i32 1
  %814 = load i32, ptr %813, align 4, !tbaa !319
  %815 = zext i32 %814 to i64
  %816 = getelementptr inbounds double, ptr %799, i64 %815
  %817 = load double, ptr %816, align 8, !tbaa !52
  %818 = fcmp une double %817, 0.000000e+00
  br i1 %818, label %819, label %822

819:                                              ; preds = %812
  store double %817, ptr %742, align 8, !tbaa !52
  %820 = getelementptr inbounds i32, ptr %518, i64 %806
  %821 = load i32, ptr %820, align 4, !tbaa !22
  store i32 %821, ptr %741, align 4, !tbaa !22
  br label %822

822:                                              ; preds = %819, %812
  %823 = phi ptr [ %757, %819 ], [ %741, %812 ]
  %824 = phi ptr [ %756, %819 ], [ %742, %812 ]
  %825 = add nuw nsw i64 %806, 1
  br label %826

826:                                              ; preds = %822, %804
  %827 = phi ptr [ undef, %804 ], [ %823, %822 ]
  %828 = phi i64 [ %806, %804 ], [ %825, %822 ]
  %829 = phi ptr [ %742, %804 ], [ %824, %822 ]
  %830 = phi ptr [ %741, %804 ], [ %823, %822 ]
  %831 = sub nsw i64 0, %807
  %832 = icmp eq i64 %809, %831
  br i1 %832, label %1054, label %833

833:                                              ; preds = %826, %863
  %834 = phi i64 [ %866, %863 ], [ %828, %826 ]
  %835 = phi ptr [ %865, %863 ], [ %829, %826 ]
  %836 = phi ptr [ %864, %863 ], [ %830, %826 ]
  %837 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %805, i64 %834, i32 1
  %838 = load i32, ptr %837, align 4, !tbaa !319
  %839 = zext i32 %838 to i64
  %840 = getelementptr inbounds double, ptr %799, i64 %839
  %841 = load double, ptr %840, align 8, !tbaa !52
  %842 = fcmp une double %841, 0.000000e+00
  br i1 %842, label %843, label %848

843:                                              ; preds = %833
  %844 = getelementptr inbounds double, ptr %835, i64 1
  store double %841, ptr %835, align 8, !tbaa !52
  %845 = getelementptr inbounds i32, ptr %518, i64 %834
  %846 = load i32, ptr %845, align 4, !tbaa !22
  %847 = getelementptr inbounds i32, ptr %836, i64 1
  store i32 %846, ptr %836, align 4, !tbaa !22
  br label %848

848:                                              ; preds = %843, %833
  %849 = phi ptr [ %847, %843 ], [ %836, %833 ]
  %850 = phi ptr [ %844, %843 ], [ %835, %833 ]
  %851 = add nuw nsw i64 %834, 1
  %852 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %805, i64 %851, i32 1
  %853 = load i32, ptr %852, align 4, !tbaa !319
  %854 = zext i32 %853 to i64
  %855 = getelementptr inbounds double, ptr %799, i64 %854
  %856 = load double, ptr %855, align 8, !tbaa !52
  %857 = fcmp une double %856, 0.000000e+00
  br i1 %857, label %858, label %863

858:                                              ; preds = %848
  %859 = getelementptr inbounds double, ptr %850, i64 1
  store double %856, ptr %850, align 8, !tbaa !52
  %860 = getelementptr inbounds i32, ptr %518, i64 %851
  %861 = load i32, ptr %860, align 4, !tbaa !22
  %862 = getelementptr inbounds i32, ptr %849, i64 1
  store i32 %861, ptr %849, align 4, !tbaa !22
  br label %863

863:                                              ; preds = %858, %848
  %864 = phi ptr [ %862, %858 ], [ %849, %848 ]
  %865 = phi ptr [ %859, %858 ], [ %850, %848 ]
  %866 = add nuw nsw i64 %834, 2
  %867 = icmp eq i64 %866, %807
  br i1 %867, label %1054, label %833

868:                                              ; preds = %790
  br i1 %802, label %869, label %1054

869:                                              ; preds = %868
  %870 = load ptr, ptr %7, align 8, !tbaa !321
  %871 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %870, i64 %782, i32 2
  %872 = load ptr, ptr %871, align 8, !tbaa !320
  %873 = icmp eq ptr %872, null
  %874 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %872, i64 0, i32 1
  %875 = zext i32 %801 to i64
  %876 = zext i32 %794 to i64
  br label %877

877:                                              ; preds = %869, %1049
  %878 = phi i64 [ %875, %869 ], [ %1052, %1049 ]
  %879 = phi ptr [ %742, %869 ], [ %1051, %1049 ]
  %880 = phi ptr [ %741, %869 ], [ %1050, %1049 ]
  %881 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %870, i64 %878, i32 1
  %882 = load i32, ptr %881, align 4, !tbaa !319
  br i1 %788, label %922, label %883

883:                                              ; preds = %877
  %884 = icmp eq i32 %882, -1
  br i1 %884, label %889, label %885

885:                                              ; preds = %883
  %886 = zext i32 %882 to i64
  %887 = getelementptr inbounds double, ptr %799, i64 %886
  %888 = load double, ptr %887, align 8, !tbaa !52
  br label %889

889:                                              ; preds = %883, %885
  %890 = phi double [ %888, %885 ], [ 0.000000e+00, %883 ]
  %891 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %870, i64 %878, i32 2
  %892 = load ptr, ptr %891, align 8, !tbaa !320
  %893 = icmp eq ptr %892, null
  br i1 %893, label %922, label %894

894:                                              ; preds = %889
  %895 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %892, i64 0, i32 1
  %896 = load ptr, ptr %895, align 8, !tbaa !31
  %897 = load ptr, ptr %892, align 8, !tbaa !32
  %898 = ptrtoint ptr %896 to i64
  %899 = ptrtoint ptr %897 to i64
  %900 = sub i64 %898, %899
  %901 = ashr exact i64 %900, 4
  %902 = icmp eq ptr %896, %897
  br i1 %902, label %922, label %903

903:                                              ; preds = %894
  %904 = load i32, ptr %749, align 8, !tbaa !22
  %905 = mul i32 %904, %787
  br label %906

906:                                              ; preds = %903, %906
  %907 = phi i64 [ 0, %903 ], [ %920, %906 ]
  %908 = phi i32 [ 0, %903 ], [ %919, %906 ]
  %909 = phi double [ %890, %903 ], [ %918, %906 ]
  %910 = getelementptr inbounds %"struct.std::pair", ptr %897, i64 %907
  %911 = load i32, ptr %910, align 8, !tbaa !37
  %912 = add i32 %905, %911
  %913 = zext i32 %912 to i64
  %914 = getelementptr inbounds double, ptr %795, i64 %913
  %915 = load double, ptr %914, align 8, !tbaa !52
  %916 = getelementptr inbounds %"struct.std::pair", ptr %897, i64 %907, i32 1
  %917 = load double, ptr %916, align 8, !tbaa !35
  %918 = call double @llvm.fmuladd.f64(double %915, double %917, double %909)
  %919 = add i32 %908, 1
  %920 = zext i32 %919 to i64
  %921 = icmp ugt i64 %901, %920
  br i1 %921, label %906, label %922

922:                                              ; preds = %906, %894, %877, %889
  %923 = phi double [ %890, %889 ], [ 0.000000e+00, %877 ], [ %890, %894 ], [ %918, %906 ]
  br i1 %873, label %1041, label %924

924:                                              ; preds = %922
  %925 = load ptr, ptr %874, align 8, !tbaa !31
  %926 = load ptr, ptr %872, align 8, !tbaa !32
  %927 = ptrtoint ptr %925 to i64
  %928 = ptrtoint ptr %926 to i64
  %929 = sub i64 %927, %928
  %930 = ashr exact i64 %929, 4
  %931 = icmp eq ptr %925, %926
  br i1 %931, label %1041, label %932

932:                                              ; preds = %924
  %933 = icmp eq i32 %882, -1
  %934 = load ptr, ptr %748, align 8
  %935 = load i32, ptr %749, align 8
  %936 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %870, i64 %878, i32 2
  %937 = load ptr, ptr %936, align 8, !tbaa !320
  %938 = icmp eq ptr %937, null
  br i1 %938, label %939, label %967

939:                                              ; preds = %932
  br i1 %933, label %940, label %950

940:                                              ; preds = %939, %940
  %941 = phi i64 [ %948, %940 ], [ 0, %939 ]
  %942 = phi i32 [ %947, %940 ], [ 0, %939 ]
  %943 = phi double [ %946, %940 ], [ %923, %939 ]
  %944 = getelementptr inbounds %"struct.std::pair", ptr %926, i64 %941, i32 1
  %945 = load double, ptr %944, align 8, !tbaa !35
  %946 = call double @llvm.fmuladd.f64(double %945, double 0.000000e+00, double %943)
  %947 = add i32 %942, 1
  %948 = zext i32 %947 to i64
  %949 = icmp ugt i64 %930, %948
  br i1 %949, label %940, label %1041

950:                                              ; preds = %939, %950
  %951 = phi i64 [ %965, %950 ], [ 0, %939 ]
  %952 = phi i32 [ %964, %950 ], [ 0, %939 ]
  %953 = phi double [ %963, %950 ], [ %923, %939 ]
  %954 = getelementptr inbounds %"struct.std::pair", ptr %926, i64 %951
  %955 = load i32, ptr %954, align 8, !tbaa !37
  %956 = mul i32 %935, %955
  %957 = add i32 %956, %882
  %958 = zext i32 %957 to i64
  %959 = getelementptr inbounds double, ptr %934, i64 %958
  %960 = load double, ptr %959, align 8, !tbaa !52
  %961 = getelementptr inbounds %"struct.std::pair", ptr %926, i64 %951, i32 1
  %962 = load double, ptr %961, align 8, !tbaa !35
  %963 = call double @llvm.fmuladd.f64(double %960, double %962, double %953)
  %964 = add i32 %952, 1
  %965 = zext i32 %964 to i64
  %966 = icmp ugt i64 %930, %965
  br i1 %966, label %950, label %1041

967:                                              ; preds = %932
  %968 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %937, i64 0, i32 1
  %969 = load ptr, ptr %968, align 8, !tbaa !31
  %970 = load ptr, ptr %937, align 8, !tbaa !32
  %971 = ptrtoint ptr %969 to i64
  %972 = ptrtoint ptr %970 to i64
  %973 = sub i64 %971, %972
  %974 = ashr exact i64 %973, 4
  %975 = icmp eq ptr %969, %970
  br i1 %975, label %1013, label %976

976:                                              ; preds = %967, %1006
  %977 = phi i64 [ %1011, %1006 ], [ 0, %967 ]
  %978 = phi i32 [ %1010, %1006 ], [ 0, %967 ]
  %979 = phi double [ %1009, %1006 ], [ %923, %967 ]
  %980 = getelementptr inbounds %"struct.std::pair", ptr %926, i64 %977
  %981 = load i32, ptr %980, align 8, !tbaa !37
  %982 = mul i32 %935, %981
  br i1 %933, label %988, label %983

983:                                              ; preds = %976
  %984 = add i32 %982, %882
  %985 = zext i32 %984 to i64
  %986 = getelementptr inbounds double, ptr %934, i64 %985
  %987 = load double, ptr %986, align 8, !tbaa !52
  br label %988

988:                                              ; preds = %976, %983
  %989 = phi double [ %987, %983 ], [ 0.000000e+00, %976 ]
  br label %990

990:                                              ; preds = %988, %990
  %991 = phi i64 [ %1004, %990 ], [ 0, %988 ]
  %992 = phi i32 [ %1003, %990 ], [ 0, %988 ]
  %993 = phi double [ %1002, %990 ], [ %989, %988 ]
  %994 = getelementptr inbounds %"struct.std::pair", ptr %970, i64 %991
  %995 = load i32, ptr %994, align 8, !tbaa !37
  %996 = add i32 %982, %995
  %997 = zext i32 %996 to i64
  %998 = getelementptr inbounds double, ptr %934, i64 %997
  %999 = load double, ptr %998, align 8, !tbaa !52
  %1000 = getelementptr inbounds %"struct.std::pair", ptr %970, i64 %991, i32 1
  %1001 = load double, ptr %1000, align 8, !tbaa !35
  %1002 = call double @llvm.fmuladd.f64(double %999, double %1001, double %993)
  %1003 = add i32 %992, 1
  %1004 = zext i32 %1003 to i64
  %1005 = icmp ugt i64 %974, %1004
  br i1 %1005, label %990, label %1006

1006:                                             ; preds = %990
  %1007 = getelementptr inbounds %"struct.std::pair", ptr %926, i64 %977, i32 1
  %1008 = load double, ptr %1007, align 8, !tbaa !35
  %1009 = call double @llvm.fmuladd.f64(double %1002, double %1008, double %979)
  %1010 = add i32 %978, 1
  %1011 = zext i32 %1010 to i64
  %1012 = icmp ugt i64 %930, %1011
  br i1 %1012, label %976, label %1041

1013:                                             ; preds = %967
  br i1 %933, label %1014, label %1024

1014:                                             ; preds = %1013, %1014
  %1015 = phi i64 [ %1022, %1014 ], [ 0, %1013 ]
  %1016 = phi i32 [ %1021, %1014 ], [ 0, %1013 ]
  %1017 = phi double [ %1020, %1014 ], [ %923, %1013 ]
  %1018 = getelementptr inbounds %"struct.std::pair", ptr %926, i64 %1015, i32 1
  %1019 = load double, ptr %1018, align 8, !tbaa !35
  %1020 = call double @llvm.fmuladd.f64(double %1019, double 0.000000e+00, double %1017)
  %1021 = add i32 %1016, 1
  %1022 = zext i32 %1021 to i64
  %1023 = icmp ugt i64 %930, %1022
  br i1 %1023, label %1014, label %1041

1024:                                             ; preds = %1013, %1024
  %1025 = phi i64 [ %1039, %1024 ], [ 0, %1013 ]
  %1026 = phi i32 [ %1038, %1024 ], [ 0, %1013 ]
  %1027 = phi double [ %1037, %1024 ], [ %923, %1013 ]
  %1028 = getelementptr inbounds %"struct.std::pair", ptr %926, i64 %1025
  %1029 = load i32, ptr %1028, align 8, !tbaa !37
  %1030 = mul i32 %935, %1029
  %1031 = add i32 %1030, %882
  %1032 = zext i32 %1031 to i64
  %1033 = getelementptr inbounds double, ptr %934, i64 %1032
  %1034 = load double, ptr %1033, align 8, !tbaa !52
  %1035 = getelementptr inbounds %"struct.std::pair", ptr %926, i64 %1025, i32 1
  %1036 = load double, ptr %1035, align 8, !tbaa !35
  %1037 = call double @llvm.fmuladd.f64(double %1034, double %1036, double %1027)
  %1038 = add i32 %1026, 1
  %1039 = zext i32 %1038 to i64
  %1040 = icmp ugt i64 %930, %1039
  br i1 %1040, label %1024, label %1041

1041:                                             ; preds = %1006, %1024, %1014, %950, %940, %924, %922
  %1042 = phi double [ %923, %922 ], [ %923, %924 ], [ %946, %940 ], [ %963, %950 ], [ %1020, %1014 ], [ %1037, %1024 ], [ %1009, %1006 ]
  %1043 = fcmp une double %1042, 0.000000e+00
  br i1 %1043, label %1044, label %1049

1044:                                             ; preds = %1041
  %1045 = getelementptr inbounds i32, ptr %518, i64 %878
  %1046 = load i32, ptr %1045, align 4, !tbaa !22
  %1047 = getelementptr inbounds i32, ptr %880, i64 1
  store i32 %1046, ptr %880, align 4, !tbaa !22
  %1048 = getelementptr inbounds double, ptr %879, i64 1
  store double %1042, ptr %879, align 8, !tbaa !52
  br label %1049

1049:                                             ; preds = %1044, %1041
  %1050 = phi ptr [ %1047, %1044 ], [ %880, %1041 ]
  %1051 = phi ptr [ %1048, %1044 ], [ %879, %1041 ]
  %1052 = add nuw nsw i64 %878, 1
  %1053 = icmp eq i64 %1052, %876
  br i1 %1053, label %1054, label %877

1054:                                             ; preds = %1049, %826, %863, %868, %803
  %1055 = phi ptr [ %741, %803 ], [ %741, %868 ], [ %827, %826 ], [ %864, %863 ], [ %1050, %1049 ]
  %1056 = ptrtoint ptr %1055 to i64
  %1057 = sub i64 %1056, %747
  %1058 = lshr exact i64 %1057, 2
  %1059 = trunc i64 %1058 to i32
  %1060 = icmp eq i32 %1059, 0
  br i1 %1060, label %1073, label %1061

1061:                                             ; preds = %1054
  %1062 = load ptr, ptr %750, align 8, !tbaa !143, !noalias !386
  %1063 = load i32, ptr %751, align 8, !tbaa !22, !noalias !386
  %1064 = mul i32 %1063, %780
  %1065 = zext i32 %1064 to i64
  %1066 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %1062, i64 %1065
  %1067 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %1066, i64 %791
  %1068 = load ptr, ptr %1067, align 8, !tbaa !147
  invoke void @_ZN6dealii12SparseMatrixIfE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %1068, i32 noundef %784, i32 noundef %1059, ptr noundef nonnull %741, ptr noundef nonnull %742, i1 noundef zeroext false, i1 noundef zeroext true)
          to label %1073 unwind label %1069

1069:                                             ; preds = %1061
  %1070 = landingpad { ptr, i32 }
          cleanup
  %1071 = icmp eq ptr %742, null
  br i1 %1071, label %1221, label %1072

1072:                                             ; preds = %1069
  call void @_ZdlPv(ptr noundef nonnull %742) #23
  br label %1221

1073:                                             ; preds = %1061, %1054
  %1074 = icmp eq i64 %792, %755
  br i1 %1074, label %789, label %790

1075:                                             ; preds = %789
  br i1 %788, label %1104, label %1076

1076:                                             ; preds = %1075
  %1077 = load ptr, ptr %752, align 8, !tbaa !60
  %1078 = zext i32 %787 to i64
  %1079 = getelementptr inbounds double, ptr %1077, i64 %1078
  %1080 = load double, ptr %1079, align 8, !tbaa !52
  br i1 %753, label %1104, label %1081

1081:                                             ; preds = %1076
  %1082 = load ptr, ptr %748, align 8, !tbaa !314
  %1083 = load i32, ptr %749, align 8, !tbaa !22
  %1084 = mul i32 %1083, %787
  br label %1085

1085:                                             ; preds = %1081, %1085
  %1086 = phi i64 [ 0, %1081 ], [ %1102, %1085 ]
  %1087 = phi i32 [ 0, %1081 ], [ %1101, %1085 ]
  %1088 = phi double [ %1080, %1081 ], [ %1100, %1085 ]
  %1089 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 %1086
  %1090 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 %1086, i32 1
  %1091 = load ptr, ptr %1090, align 8, !tbaa !328
  %1092 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1091, i64 0, i32 2
  %1093 = load double, ptr %1092, align 8, !tbaa !48
  %1094 = load i32, ptr %1089, align 8, !tbaa !326
  %1095 = add i32 %1084, %1094
  %1096 = zext i32 %1095 to i64
  %1097 = getelementptr inbounds double, ptr %1082, i64 %1096
  %1098 = load double, ptr %1097, align 8, !tbaa !52
  %1099 = fneg double %1093
  %1100 = call double @llvm.fmuladd.f64(double %1099, double %1098, double %1088)
  %1101 = add i32 %1087, 1
  %1102 = zext i32 %1101 to i64
  %1103 = icmp ugt i64 %386, %1102
  br i1 %1103, label %1085, label %1104

1104:                                             ; preds = %1085, %1076, %1075
  %1105 = phi double [ 0.000000e+00, %1075 ], [ %1080, %1076 ], [ %1100, %1085 ]
  %1106 = load ptr, ptr %7, align 8, !tbaa !321
  %1107 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1106, i64 %782
  %1108 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1106, i64 %782, i32 2
  %1109 = load ptr, ptr %1108, align 8, !tbaa !320
  %1110 = icmp eq ptr %1109, null
  br i1 %1110, label %1175, label %1111

1111:                                             ; preds = %1104
  %1112 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1109, i64 0, i32 1
  %1113 = load ptr, ptr %1112, align 8, !tbaa !31
  %1114 = load ptr, ptr %1109, align 8, !tbaa !32
  %1115 = ptrtoint ptr %1113 to i64
  %1116 = ptrtoint ptr %1114 to i64
  %1117 = sub i64 %1115, %1116
  %1118 = ashr exact i64 %1117, 4
  %1119 = icmp eq ptr %1113, %1114
  br i1 %1119, label %1175, label %1120

1120:                                             ; preds = %1111
  %1121 = load ptr, ptr %752, align 8, !tbaa !60
  %1122 = load ptr, ptr %748, align 8
  %1123 = load i32, ptr %749, align 8
  br i1 %753, label %1160, label %1124

1124:                                             ; preds = %1120, %1153
  %1125 = phi i64 [ %1158, %1153 ], [ 0, %1120 ]
  %1126 = phi i32 [ %1157, %1153 ], [ 0, %1120 ]
  %1127 = phi double [ %1156, %1153 ], [ %1105, %1120 ]
  %1128 = getelementptr inbounds %"struct.std::pair", ptr %1114, i64 %1125
  %1129 = load i32, ptr %1128, align 8, !tbaa !37
  %1130 = zext i32 %1129 to i64
  %1131 = getelementptr inbounds double, ptr %1121, i64 %1130
  %1132 = load double, ptr %1131, align 8, !tbaa !52
  %1133 = mul i32 %1123, %1129
  br label %1134

1134:                                             ; preds = %1124, %1134
  %1135 = phi i64 [ 0, %1124 ], [ %1151, %1134 ]
  %1136 = phi i32 [ 0, %1124 ], [ %1150, %1134 ]
  %1137 = phi double [ %1132, %1124 ], [ %1149, %1134 ]
  %1138 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 %1135
  %1139 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 %1135, i32 1
  %1140 = load ptr, ptr %1139, align 8, !tbaa !328
  %1141 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1140, i64 0, i32 2
  %1142 = load double, ptr %1141, align 8, !tbaa !48
  %1143 = load i32, ptr %1138, align 8, !tbaa !326
  %1144 = add i32 %1133, %1143
  %1145 = zext i32 %1144 to i64
  %1146 = getelementptr inbounds double, ptr %1122, i64 %1145
  %1147 = load double, ptr %1146, align 8, !tbaa !52
  %1148 = fneg double %1142
  %1149 = call double @llvm.fmuladd.f64(double %1148, double %1147, double %1137)
  %1150 = add i32 %1136, 1
  %1151 = zext i32 %1150 to i64
  %1152 = icmp ugt i64 %386, %1151
  br i1 %1152, label %1134, label %1153

1153:                                             ; preds = %1134
  %1154 = getelementptr inbounds %"struct.std::pair", ptr %1114, i64 %1125, i32 1
  %1155 = load double, ptr %1154, align 8, !tbaa !35
  %1156 = call double @llvm.fmuladd.f64(double %1149, double %1155, double %1127)
  %1157 = add i32 %1126, 1
  %1158 = zext i32 %1157 to i64
  %1159 = icmp ugt i64 %1118, %1158
  br i1 %1159, label %1124, label %1175

1160:                                             ; preds = %1120, %1160
  %1161 = phi i64 [ %1173, %1160 ], [ 0, %1120 ]
  %1162 = phi i32 [ %1172, %1160 ], [ 0, %1120 ]
  %1163 = phi double [ %1171, %1160 ], [ %1105, %1120 ]
  %1164 = getelementptr inbounds %"struct.std::pair", ptr %1114, i64 %1161
  %1165 = load i32, ptr %1164, align 8, !tbaa !37
  %1166 = zext i32 %1165 to i64
  %1167 = getelementptr inbounds double, ptr %1121, i64 %1166
  %1168 = load double, ptr %1167, align 8, !tbaa !52
  %1169 = getelementptr inbounds %"struct.std::pair", ptr %1114, i64 %1161, i32 1
  %1170 = load double, ptr %1169, align 8, !tbaa !35
  %1171 = call double @llvm.fmuladd.f64(double %1168, double %1170, double %1163)
  %1172 = add i32 %1162, 1
  %1173 = zext i32 %1172 to i64
  %1174 = icmp ugt i64 %1118, %1173
  br i1 %1174, label %1160, label %1175

1175:                                             ; preds = %1153, %1160, %1111, %1104
  %1176 = phi double [ %1105, %1104 ], [ %1105, %1111 ], [ %1171, %1160 ], [ %1156, %1153 ]
  %1177 = fcmp une double %1176, 0.000000e+00
  br i1 %1177, label %1178, label %1185

1178:                                             ; preds = %1175
  %1179 = load i32, ptr %1107, align 8, !tbaa !317
  %1180 = load ptr, ptr %754, align 8, !tbaa !60
  %1181 = zext i32 %1179 to i64
  %1182 = getelementptr inbounds double, ptr %1180, i64 %1181
  %1183 = load double, ptr %1182, align 8, !tbaa !52
  %1184 = fadd double %1176, %1183
  store double %1184, ptr %1182, align 8, !tbaa !52
  br label %1185

1185:                                             ; preds = %1175, %1178, %789
  %1186 = add nuw nsw i64 %782, 1
  %1187 = icmp eq i64 %1186, %779
  br i1 %1187, label %758, label %781

1188:                                             ; preds = %762, %760
  %1189 = icmp eq ptr %741, null
  br i1 %1189, label %1191, label %1190

1190:                                             ; preds = %1188
  call void @_ZdlPv(ptr noundef nonnull %741) #23
  br label %1191

1191:                                             ; preds = %1188, %1190
  call void @_ZdlPv(ptr noundef nonnull %657) #23
  %1192 = icmp eq ptr %518, null
  br i1 %1192, label %1194, label %1193

1193:                                             ; preds = %1191
  call void @_ZdlPv(ptr noundef nonnull %518) #23
  br label %1194

1194:                                             ; preds = %1193, %1191
  %1195 = icmp eq ptr %168, null
  br i1 %1195, label %1197, label %1196

1196:                                             ; preds = %1194
  call void @_ZdlPv(ptr noundef nonnull %168) #23
  br label %1197

1197:                                             ; preds = %1196, %1194
  %1198 = load ptr, ptr %7, align 8, !tbaa !321
  %1199 = load ptr, ptr %153, align 8, !tbaa !325
  %1200 = icmp eq ptr %1198, %1199
  br i1 %1200, label %1216, label %1201

1201:                                             ; preds = %1197, %1211
  %1202 = phi ptr [ %1212, %1211 ], [ %1198, %1197 ]
  %1203 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1202, i64 0, i32 2
  %1204 = load ptr, ptr %1203, align 8, !tbaa !320
  %1205 = icmp eq ptr %1204, null
  br i1 %1205, label %1211, label %1206

1206:                                             ; preds = %1201
  %1207 = load ptr, ptr %1204, align 8, !tbaa !32
  %1208 = icmp eq ptr %1207, null
  br i1 %1208, label %1210, label %1209

1209:                                             ; preds = %1206
  call void @_ZdlPv(ptr noundef nonnull %1207) #23
  br label %1210

1210:                                             ; preds = %1209, %1206
  call void @_ZdlPv(ptr noundef nonnull %1204) #23
  store ptr null, ptr %1203, align 8, !tbaa !320
  br label %1211

1211:                                             ; preds = %1210, %1201
  %1212 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1202, i64 1
  %1213 = icmp eq ptr %1212, %1199
  br i1 %1213, label %1214, label %1201

1214:                                             ; preds = %1211
  %1215 = load ptr, ptr %7, align 8, !tbaa !321
  br label %1216

1216:                                             ; preds = %1214, %1197
  %1217 = phi ptr [ %1215, %1214 ], [ %1198, %1197 ]
  %1218 = icmp eq ptr %1217, null
  br i1 %1218, label %1220, label %1219

1219:                                             ; preds = %1216
  call void @_ZdlPv(ptr noundef nonnull %1217) #23
  br label %1220

1220:                                             ; preds = %1216, %1219
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  ret void

1221:                                             ; preds = %1072, %1069
  %1222 = icmp eq ptr %741, null
  br i1 %1222, label %1226, label %1223

1223:                                             ; preds = %767, %1221
  %1224 = phi { ptr, i32 } [ %768, %767 ], [ %1070, %1221 ]
  %1225 = phi ptr [ %735, %767 ], [ %741, %1221 ]
  call void @_ZdlPv(ptr noundef nonnull %1225) #23
  br label %1226

1226:                                             ; preds = %765, %1221, %1223
  %1227 = phi { ptr, i32 } [ %766, %765 ], [ %1070, %1221 ], [ %1224, %1223 ]
  call void @_ZdlPv(ptr noundef nonnull %657) #23
  br label %1228

1228:                                             ; preds = %1226, %763
  %1229 = phi { ptr, i32 } [ %1227, %1226 ], [ %764, %763 ]
  %1230 = icmp eq ptr %518, null
  br i1 %1230, label %1232, label %1231

1231:                                             ; preds = %1228
  call void @_ZdlPv(ptr noundef nonnull %518) #23
  br label %1232

1232:                                             ; preds = %316, %318, %515, %467, %1231, %1228, %635, %417
  %1233 = phi ptr [ %168, %417 ], [ %168, %467 ], [ %168, %515 ], [ %168, %635 ], [ %168, %1228 ], [ %168, %1231 ], [ %205, %316 ], [ %205, %318 ]
  %1234 = phi { ptr, i32 } [ %418, %417 ], [ %468, %467 ], [ %516, %515 ], [ %636, %635 ], [ %1229, %1228 ], [ %1229, %1231 ], [ %317, %316 ], [ %319, %318 ]
  %1235 = icmp eq ptr %1233, null
  br i1 %1235, label %1237, label %1236

1236:                                             ; preds = %1232
  call void @_ZdlPv(ptr noundef nonnull %1233) #23
  br label %1237

1237:                                             ; preds = %1236, %1232
  %1238 = load ptr, ptr %7, align 8, !tbaa !321
  %1239 = load ptr, ptr %153, align 8, !tbaa !325
  %1240 = icmp eq ptr %1238, %1239
  br i1 %1240, label %1256, label %1241

1241:                                             ; preds = %1237, %1251
  %1242 = phi ptr [ %1252, %1251 ], [ %1238, %1237 ]
  %1243 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1242, i64 0, i32 2
  %1244 = load ptr, ptr %1243, align 8, !tbaa !320
  %1245 = icmp eq ptr %1244, null
  br i1 %1245, label %1251, label %1246

1246:                                             ; preds = %1241
  %1247 = load ptr, ptr %1244, align 8, !tbaa !32
  %1248 = icmp eq ptr %1247, null
  br i1 %1248, label %1250, label %1249

1249:                                             ; preds = %1246
  call void @_ZdlPv(ptr noundef nonnull %1247) #23
  br label %1250

1250:                                             ; preds = %1249, %1246
  call void @_ZdlPv(ptr noundef nonnull %1244) #23
  store ptr null, ptr %1243, align 8, !tbaa !320
  br label %1251

1251:                                             ; preds = %1250, %1241
  %1252 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1242, i64 1
  %1253 = icmp eq ptr %1252, %1239
  br i1 %1253, label %1254, label %1241

1254:                                             ; preds = %1251
  %1255 = load ptr, ptr %7, align 8, !tbaa !321
  br label %1256

1256:                                             ; preds = %1254, %1237
  %1257 = phi ptr [ %1255, %1254 ], [ %1238, %1237 ]
  %1258 = icmp eq ptr %1257, null
  br i1 %1258, label %1260, label %1259

1259:                                             ; preds = %1256
  call void @_ZdlPv(ptr noundef nonnull %1257) #23
  br label %1260

1260:                                             ; preds = %1259, %1256, %201
  %1261 = phi { ptr, i32 } [ %200, %201 ], [ %1234, %1256 ], [ %1234, %1259 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  resume { ptr, i32 } %1261

1262:                                             ; preds = %417, %199
  %1263 = landingpad { ptr, i32 }
          catch ptr null
  %1264 = extractvalue { ptr, i32 } %1263, 0
  call void @__clang_call_terminate(ptr %1264) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIfEENS_11BlockVectorIfEEEEvRKNS_10FullMatrixIdEERKNS_6VectorIdEERKSt6vectorIjSaIjEERT_RT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(320) %4, ptr noundef nonnull align 8 dereferenceable(128) %5) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIfEENS_11BlockVectorIfEEEEvRKNS_10FullMatrixIdEERKNS_6VectorIdEERKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(320) %4, ptr noundef nonnull align 8 dereferenceable(128) %5)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_17BlockSparseMatrixIfEENS_11BlockVectorIfEEEEvRKNS_10FullMatrixIdEERKNS_6VectorIdEERKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(320) %4, ptr noundef nonnull align 8 dereferenceable(128) %5) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::vector.178", align 8
  %8 = alloca %"struct.dealii::internals::distributing", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !53
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %5, i64 0, i32 2
  %15 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %5, i64 0, i32 2, i32 1
  %16 = load i32, ptr %14, align 8, !tbaa !61
  %17 = zext i32 %16 to i64
  %18 = load ptr, ptr %15, align 8, !tbaa !58
  %19 = getelementptr inbounds i32, ptr %18, i64 %17
  %20 = load i32, ptr %19, align 4, !tbaa !22
  %21 = icmp eq i32 %20, 0
  br label %22

22:                                               ; preds = %13, %6
  %23 = phi i1 [ false, %6 ], [ %21, %13 ]
  %24 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !313
  %26 = load ptr, ptr %3, align 8, !tbaa !58
  %27 = ptrtoint ptr %25 to i64
  %28 = ptrtoint ptr %26 to i64
  %29 = sub i64 %27, %28
  %30 = ashr exact i64 %29, 2
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !61
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !314
  %38 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %39 = load i32, ptr %38, align 8, !tbaa !22
  %40 = add i32 %39, 1
  %41 = and i64 %30, 4294967295
  %42 = add nsw i64 %41, -1
  %43 = and i64 %30, 3
  %44 = icmp ult i64 %42, 3
  br i1 %44, label %47, label %45

45:                                               ; preds = %35
  %46 = sub nsw i64 %41, %43
  br label %116

47:                                               ; preds = %116, %35
  %48 = phi double [ undef, %35 ], [ %150, %116 ]
  %49 = phi i64 [ 0, %35 ], [ %151, %116 ]
  %50 = phi double [ 0.000000e+00, %35 ], [ %150, %116 ]
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %66, label %52

52:                                               ; preds = %47, %52
  %53 = phi i64 [ %63, %52 ], [ %49, %47 ]
  %54 = phi double [ %62, %52 ], [ %50, %47 ]
  %55 = phi i64 [ %64, %52 ], [ 0, %47 ]
  %56 = trunc i64 %53 to i32
  %57 = mul i32 %40, %56
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds double, ptr %37, i64 %58
  %60 = load double, ptr %59, align 8, !tbaa !52
  %61 = tail call double @llvm.fabs.f64(double %60)
  %62 = fadd double %54, %61
  %63 = add nuw nsw i64 %53, 1
  %64 = add i64 %55, 1
  %65 = icmp eq i64 %64, %43
  br i1 %65, label %66, label %52, !llvm.loop !389

66:                                               ; preds = %47, %52, %22
  %67 = phi double [ 0.000000e+00, %22 ], [ %48, %47 ], [ %62, %52 ]
  %68 = uitofp i32 %31 to double
  %69 = fdiv double %67, %68
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %70 = and i64 %30, 4294967295
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #24
  store i32 -1, ptr %8, align 8, !tbaa !317
  %71 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 1
  store i32 -1, ptr %71, align 4, !tbaa !319
  %72 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 2
  store ptr null, ptr %72, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  %73 = icmp eq i64 %70, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %157

76:                                               ; preds = %66
  %77 = shl nuw nsw i64 %70, 4
  %78 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %77) #21
          to label %79 unwind label %206

79:                                               ; preds = %76
  store ptr %78, ptr %7, align 8, !tbaa !321
  %80 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %78, i64 %70
  %81 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %80, ptr %81, align 8, !tbaa !323
  %82 = and i64 %30, 3
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %79, %84
  %85 = phi ptr [ %91, %84 ], [ %78, %79 ]
  %86 = phi i64 [ %90, %84 ], [ %70, %79 ]
  %87 = phi i64 [ %92, %84 ], [ 0, %79 ]
  %88 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %85, i64 0, i32 2
  store ptr null, ptr %88, align 8, !tbaa !320
  store i32 -1, ptr %85, align 8, !tbaa !317
  %89 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %85, i64 0, i32 1
  store i32 -1, ptr %89, align 4, !tbaa !319
  %90 = add nsw i64 %86, -1
  %91 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %85, i64 1
  %92 = add i64 %87, 1
  %93 = icmp eq i64 %92, %82
  br i1 %93, label %94, label %84, !llvm.loop !390

94:                                               ; preds = %84, %79
  %95 = phi ptr [ undef, %79 ], [ %91, %84 ]
  %96 = phi ptr [ %78, %79 ], [ %91, %84 ]
  %97 = phi i64 [ %70, %79 ], [ %90, %84 ]
  %98 = icmp ult i64 %70, 4
  br i1 %98, label %154, label %99

99:                                               ; preds = %94, %99
  %100 = phi ptr [ %114, %99 ], [ %96, %94 ]
  %101 = phi i64 [ %113, %99 ], [ %97, %94 ]
  %102 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 0, i32 2
  store ptr null, ptr %102, align 8, !tbaa !320
  store i32 -1, ptr %100, align 8, !tbaa !317
  %103 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 0, i32 1
  store i32 -1, ptr %103, align 4, !tbaa !319
  %104 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 1
  %105 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 1, i32 2
  store ptr null, ptr %105, align 8, !tbaa !320
  store i32 -1, ptr %104, align 8, !tbaa !317
  %106 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 1, i32 1
  store i32 -1, ptr %106, align 4, !tbaa !319
  %107 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 2
  %108 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 2, i32 2
  store ptr null, ptr %108, align 8, !tbaa !320
  store i32 -1, ptr %107, align 8, !tbaa !317
  %109 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 2, i32 1
  store i32 -1, ptr %109, align 4, !tbaa !319
  %110 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 3
  %111 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 3, i32 2
  store ptr null, ptr %111, align 8, !tbaa !320
  store i32 -1, ptr %110, align 8, !tbaa !317
  %112 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 3, i32 1
  store i32 -1, ptr %112, align 4, !tbaa !319
  %113 = add nsw i64 %101, -4
  %114 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %100, i64 4
  %115 = icmp eq i64 %113, 0
  br i1 %115, label %154, label %99

116:                                              ; preds = %116, %45
  %117 = phi i64 [ 0, %45 ], [ %151, %116 ]
  %118 = phi double [ 0.000000e+00, %45 ], [ %150, %116 ]
  %119 = phi i64 [ 0, %45 ], [ %152, %116 ]
  %120 = trunc i64 %117 to i32
  %121 = mul i32 %40, %120
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds double, ptr %37, i64 %122
  %124 = load double, ptr %123, align 8, !tbaa !52
  %125 = tail call double @llvm.fabs.f64(double %124)
  %126 = fadd double %118, %125
  %127 = trunc i64 %117 to i32
  %128 = or i32 %127, 1
  %129 = mul i32 %40, %128
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %37, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !52
  %133 = tail call double @llvm.fabs.f64(double %132)
  %134 = fadd double %126, %133
  %135 = trunc i64 %117 to i32
  %136 = or i32 %135, 2
  %137 = mul i32 %40, %136
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds double, ptr %37, i64 %138
  %140 = load double, ptr %139, align 8, !tbaa !52
  %141 = tail call double @llvm.fabs.f64(double %140)
  %142 = fadd double %134, %141
  %143 = trunc i64 %117 to i32
  %144 = or i32 %143, 3
  %145 = mul i32 %40, %144
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds double, ptr %37, i64 %146
  %148 = load double, ptr %147, align 8, !tbaa !52
  %149 = tail call double @llvm.fabs.f64(double %148)
  %150 = fadd double %142, %149
  %151 = add nuw nsw i64 %117, 4
  %152 = add i64 %119, 4
  %153 = icmp eq i64 %152, %46
  br i1 %153, label %47, label %116

154:                                              ; preds = %99, %94
  %155 = phi ptr [ %95, %94 ], [ %114, %99 ]
  %156 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %155, ptr %156, align 8, !tbaa !325
  br label %157

157:                                              ; preds = %154, %74
  %158 = phi ptr [ null, %74 ], [ %78, %154 ]
  %159 = phi ptr [ null, %74 ], [ %155, %154 ]
  %160 = phi ptr [ %75, %74 ], [ %156, %154 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br i1 %34, label %171, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %163 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %164 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %165 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %166 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %167 = and i64 %30, 4294967295
  br label %209

168:                                              ; preds = %316
  %169 = load ptr, ptr %160, align 8, !tbaa !21
  %170 = load ptr, ptr %7, align 8, !tbaa !321
  br label %171

171:                                              ; preds = %168, %157
  %172 = phi ptr [ %158, %157 ], [ %170, %168 ]
  %173 = phi ptr [ %159, %157 ], [ %169, %168 ]
  %174 = phi ptr [ null, %157 ], [ %318, %168 ]
  %175 = phi ptr [ null, %157 ], [ %319, %168 ]
  %176 = phi i32 [ 0, %157 ], [ %320, %168 ]
  %177 = zext i32 %176 to i64
  store i32 -1, ptr %9, align 8, !tbaa !317
  %178 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %178, align 4, !tbaa !319
  %179 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %179, align 8, !tbaa !320
  %180 = ptrtoint ptr %173 to i64
  %181 = ptrtoint ptr %172 to i64
  %182 = sub i64 %180, %181
  %183 = ashr exact i64 %182, 4
  %184 = icmp ult i64 %183, %177
  br i1 %184, label %185, label %187

185:                                              ; preds = %171
  %186 = sub nsw i64 %177, %183
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %173, i64 noundef %186, ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %327 unwind label %424

187:                                              ; preds = %171
  %188 = icmp ugt i64 %183, %177
  br i1 %188, label %189, label %327

189:                                              ; preds = %187
  %190 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %172, i64 %177
  %191 = icmp eq ptr %173, %190
  br i1 %191, label %327, label %192

192:                                              ; preds = %189, %202
  %193 = phi ptr [ %203, %202 ], [ %190, %189 ]
  %194 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %193, i64 0, i32 2
  %195 = load ptr, ptr %194, align 8, !tbaa !320
  %196 = icmp eq ptr %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %192
  %198 = load ptr, ptr %195, align 8, !tbaa !32
  %199 = icmp eq ptr %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  tail call void @_ZdlPv(ptr noundef nonnull %198) #23
  br label %201

201:                                              ; preds = %200, %197
  tail call void @_ZdlPv(ptr noundef nonnull %195) #23
  store ptr null, ptr %194, align 8, !tbaa !320
  br label %202

202:                                              ; preds = %201, %192
  %203 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %193, i64 1
  %204 = icmp eq ptr %203, %173
  br i1 %204, label %205, label %192

205:                                              ; preds = %202
  store ptr %190, ptr %160, align 8, !tbaa !325
  br label %327

206:                                              ; preds = %76
  %207 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %8)
          to label %208 unwind label %1287

208:                                              ; preds = %206
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br label %1285

209:                                              ; preds = %161, %316
  %210 = phi i64 [ 0, %161 ], [ %321, %316 ]
  %211 = phi i32 [ 0, %161 ], [ %320, %316 ]
  %212 = phi ptr [ null, %161 ], [ %319, %316 ]
  %213 = phi ptr [ null, %161 ], [ %318, %316 ]
  %214 = phi ptr [ null, %161 ], [ %317, %316 ]
  %215 = load ptr, ptr %163, align 8, !tbaa !55
  %216 = load i32, ptr %164, align 8, !tbaa !57
  %217 = load ptr, ptr %162, align 8, !tbaa !55
  %218 = ptrtoint ptr %215 to i64
  %219 = ptrtoint ptr %217 to i64
  %220 = sub i64 %218, %219
  %221 = shl nsw i64 %220, 3
  %222 = zext i32 %216 to i64
  %223 = add nsw i64 %221, %222
  %224 = load ptr, ptr %3, align 8, !tbaa !58
  %225 = getelementptr inbounds i32, ptr %224, i64 %210
  %226 = load i32, ptr %225, align 4, !tbaa !22
  %227 = zext i32 %226 to i64
  %228 = icmp ugt i64 %223, %227
  br i1 %228, label %229, label %239

229:                                              ; preds = %209
  %230 = lshr i32 %226, 6
  %231 = zext i32 %230 to i64
  %232 = getelementptr inbounds i64, ptr %217, i64 %231
  %233 = and i32 %226, 63
  %234 = zext i32 %233 to i64
  %235 = shl nuw i64 1, %234
  %236 = load i64, ptr %232, align 8, !tbaa !42
  %237 = and i64 %236, %235
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %246

239:                                              ; preds = %229, %209
  %240 = zext i32 %211 to i64
  %241 = load ptr, ptr %7, align 8, !tbaa !321
  %242 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %241, i64 %240
  store i32 %226, ptr %242, align 8, !tbaa !317
  %243 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %241, i64 %240, i32 1
  %244 = trunc i64 %210 to i32
  store i32 %244, ptr %243, align 4, !tbaa !319
  %245 = add i32 %211, 1
  br label %316

246:                                              ; preds = %229
  %247 = load ptr, ptr %165, align 8, !tbaa !21
  %248 = load ptr, ptr %166, align 8, !tbaa !21
  %249 = ptrtoint ptr %248 to i64
  %250 = ptrtoint ptr %247 to i64
  %251 = sub i64 %249, %250
  %252 = icmp sgt i64 %251, 0
  br i1 %252, label %253, label %268

253:                                              ; preds = %246
  %254 = udiv exact i64 %251, 40
  br label %255

255:                                              ; preds = %255, %253
  %256 = phi i64 [ %254, %253 ], [ %266, %255 ]
  %257 = phi ptr [ %247, %253 ], [ %265, %255 ]
  %258 = lshr i64 %256, 1
  %259 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %257, i64 %258
  %260 = load i32, ptr %259, align 8, !tbaa !24
  %261 = icmp ult i32 %260, %226
  %262 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %259, i64 1
  %263 = xor i64 %258, -1
  %264 = add nsw i64 %256, %263
  %265 = select i1 %261, ptr %262, ptr %257
  %266 = select i1 %261, i64 %264, i64 %258
  %267 = icmp sgt i64 %266, 0
  br i1 %267, label %255, label %268

268:                                              ; preds = %255, %246
  %269 = phi ptr [ %247, %246 ], [ %265, %255 ]
  %270 = icmp eq ptr %213, %214
  br i1 %270, label %274, label %271

271:                                              ; preds = %268
  %272 = trunc i64 %210 to i32
  store i32 %272, ptr %213, align 8
  %273 = getelementptr inbounds i8, ptr %213, i64 8
  store ptr %269, ptr %273, align 8
  br label %311

274:                                              ; preds = %268
  %275 = ptrtoint ptr %213 to i64
  %276 = ptrtoint ptr %212 to i64
  %277 = sub i64 %275, %276
  %278 = icmp eq i64 %277, 9223372036854775792
  br i1 %278, label %279, label %281

279:                                              ; preds = %274
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %280 unwind label %325

280:                                              ; preds = %279
  unreachable

281:                                              ; preds = %274
  %282 = ashr exact i64 %277, 4
  %283 = tail call i64 @llvm.umax.i64(i64 %282, i64 1)
  %284 = add i64 %283, %282
  %285 = icmp ult i64 %284, %282
  %286 = icmp ugt i64 %284, 576460752303423487
  %287 = or i1 %285, %286
  %288 = select i1 %287, i64 576460752303423487, i64 %284
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %293, label %290

290:                                              ; preds = %281
  %291 = shl nuw nsw i64 %288, 4
  %292 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %291) #21
          to label %293 unwind label %323

293:                                              ; preds = %290, %281
  %294 = phi ptr [ null, %281 ], [ %292, %290 ]
  %295 = getelementptr inbounds %"struct.std::pair.188", ptr %294, i64 %282
  %296 = trunc i64 %210 to i32
  store i32 %296, ptr %295, align 8
  %297 = getelementptr inbounds i8, ptr %295, i64 8
  store ptr %269, ptr %297, align 8
  %298 = icmp eq ptr %212, %213
  br i1 %298, label %305, label %299

299:                                              ; preds = %293, %299
  %300 = phi ptr [ %303, %299 ], [ %294, %293 ]
  %301 = phi ptr [ %302, %299 ], [ %212, %293 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %300, ptr noundef nonnull align 8 dereferenceable(16) %301, i64 16, i1 false)
  %302 = getelementptr inbounds %"struct.std::pair.188", ptr %301, i64 1
  %303 = getelementptr inbounds %"struct.std::pair.188", ptr %300, i64 1
  %304 = icmp eq ptr %302, %213
  br i1 %304, label %305, label %299

305:                                              ; preds = %299, %293
  %306 = phi ptr [ %294, %293 ], [ %303, %299 ]
  %307 = icmp eq ptr %212, null
  br i1 %307, label %309, label %308

308:                                              ; preds = %305
  tail call void @_ZdlPv(ptr noundef nonnull %212) #23
  br label %309

309:                                              ; preds = %308, %305
  %310 = getelementptr inbounds %"struct.std::pair.188", ptr %294, i64 %288
  br label %311

311:                                              ; preds = %309, %271
  %312 = phi ptr [ %310, %309 ], [ %214, %271 ]
  %313 = phi ptr [ %306, %309 ], [ %213, %271 ]
  %314 = phi ptr [ %294, %309 ], [ %212, %271 ]
  %315 = getelementptr inbounds %"struct.std::pair.188", ptr %313, i64 1
  br label %316

316:                                              ; preds = %311, %239
  %317 = phi ptr [ %312, %311 ], [ %214, %239 ]
  %318 = phi ptr [ %315, %311 ], [ %213, %239 ]
  %319 = phi ptr [ %314, %311 ], [ %212, %239 ]
  %320 = phi i32 [ %211, %311 ], [ %245, %239 ]
  %321 = add nuw nsw i64 %210, 1
  %322 = icmp eq i64 %321, %167
  br i1 %322, label %168, label %209

323:                                              ; preds = %290
  %324 = landingpad { ptr, i32 }
          cleanup
  br label %1257

325:                                              ; preds = %279
  %326 = landingpad { ptr, i32 }
          cleanup
  br label %1257

327:                                              ; preds = %205, %189, %187, %185
  %328 = load ptr, ptr %179, align 8, !tbaa !320
  %329 = icmp eq ptr %328, null
  br i1 %329, label %335, label %330

330:                                              ; preds = %327
  %331 = load ptr, ptr %328, align 8, !tbaa !32
  %332 = icmp eq ptr %331, null
  br i1 %332, label %334, label %333

333:                                              ; preds = %330
  call void @_ZdlPv(ptr noundef nonnull %331) #23
  br label %334

334:                                              ; preds = %333, %330
  call void @_ZdlPv(ptr noundef nonnull %328) #23
  store ptr null, ptr %179, align 8, !tbaa !320
  br label %335

335:                                              ; preds = %334, %327
  %336 = load ptr, ptr %160, align 8, !tbaa !325
  %337 = load ptr, ptr %7, align 8, !tbaa !321
  %338 = ptrtoint ptr %336 to i64
  %339 = ptrtoint ptr %337 to i64
  %340 = sub i64 %338, %339
  %341 = lshr exact i64 %340, 4
  %342 = trunc i64 %341 to i32
  %343 = icmp ult i32 %342, 2
  br i1 %343, label %389, label %346

344:                                              ; preds = %385, %346
  %345 = icmp ult i32 %347, 4
  br i1 %345, label %389, label %346

346:                                              ; preds = %335, %344
  %347 = phi i32 [ %348, %344 ], [ %342, %335 ]
  %348 = lshr i32 %347, 1
  %349 = icmp ult i32 %348, %342
  br i1 %349, label %350, label %344

350:                                              ; preds = %346
  %351 = zext i32 %348 to i64
  br label %352

352:                                              ; preds = %385, %350
  %353 = phi i64 [ %351, %350 ], [ %386, %385 ]
  %354 = sub nuw nsw i64 %353, %351
  %355 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %353
  %356 = load <2 x i32>, ptr %355, align 8, !tbaa !22
  %357 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %354
  %358 = load i32, ptr %357, align 8, !tbaa !317
  %359 = extractelement <2 x i32> %356, i64 0
  %360 = icmp ugt i32 %358, %359
  br i1 %360, label %361, label %385

361:                                              ; preds = %352
  %362 = icmp ult i64 %353, %351
  %363 = trunc i64 %353 to i32
  br i1 %362, label %381, label %364

364:                                              ; preds = %361
  %365 = trunc i64 %354 to i32
  br label %366

366:                                              ; preds = %373, %364
  %367 = phi i32 [ %368, %373 ], [ %363, %364 ]
  %368 = phi i32 [ %379, %373 ], [ %365, %364 ]
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %369
  %371 = load i32, ptr %370, align 8, !tbaa !317
  %372 = icmp ugt i32 %371, %359
  br i1 %372, label %373, label %381

373:                                              ; preds = %366
  %374 = zext i32 %367 to i64
  %375 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %374
  store i32 %371, ptr %375, align 8, !tbaa !317
  %376 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %369, i32 1
  %377 = load i32, ptr %376, align 4, !tbaa !319
  %378 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %374, i32 1
  store i32 %377, ptr %378, align 4, !tbaa !319
  %379 = sub i32 %368, %348
  %380 = icmp ult i32 %368, %348
  br i1 %380, label %381, label %366

381:                                              ; preds = %373, %366, %361
  %382 = phi i32 [ %363, %361 ], [ %367, %366 ], [ %368, %373 ]
  %383 = zext i32 %382 to i64
  %384 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %337, i64 %383
  store <2 x i32> %356, ptr %384, align 8, !tbaa !22
  br label %385

385:                                              ; preds = %381, %352
  %386 = add nuw nsw i64 %353, 1
  %387 = trunc i64 %386 to i32
  %388 = icmp eq i32 %342, %387
  br i1 %388, label %344, label %352

389:                                              ; preds = %344, %335
  %390 = ptrtoint ptr %174 to i64
  %391 = ptrtoint ptr %175 to i64
  %392 = sub i64 %390, %391
  %393 = ashr exact i64 %392, 4
  %394 = and i64 %392, 68719476720
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %411, label %396

396:                                              ; preds = %389
  %397 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %398 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %399 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 1, i32 1
  %400 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 2
  %401 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 2, i32 1
  %402 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 3, i32 0, i32 1
  %403 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %404 = and i64 %393, 4294967295
  br label %426

405:                                              ; preds = %519
  %406 = load ptr, ptr %160, align 8, !tbaa !325
  %407 = load ptr, ptr %7, align 8, !tbaa !321
  %408 = ptrtoint ptr %406 to i64
  %409 = ptrtoint ptr %407 to i64
  %410 = sub i64 %408, %409
  br label %411

411:                                              ; preds = %405, %389
  %412 = phi i64 [ %410, %405 ], [ %340, %389 ]
  %413 = phi ptr [ %407, %405 ], [ %337, %389 ]
  %414 = phi i8 [ %443, %405 ], [ 0, %389 ]
  %415 = ashr exact i64 %412, 4
  %416 = trunc i64 %415 to i32
  %417 = and i64 %415, 4294967295
  %418 = icmp eq i64 %417, 0
  br i1 %418, label %524, label %419

419:                                              ; preds = %411
  %420 = shl nuw nsw i64 %417, 2
  %421 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %420) #21
          to label %422 unwind label %642

422:                                              ; preds = %419
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %421, i8 0, i64 %420, i1 false), !tbaa !22
  %423 = getelementptr inbounds i32, ptr %421, i64 %417
  br label %524

424:                                              ; preds = %185
  %425 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %1257 unwind label %1287

426:                                              ; preds = %396, %519
  %427 = phi i64 [ 0, %396 ], [ %520, %519 ]
  %428 = phi i8 [ 0, %396 ], [ %443, %519 ]
  %429 = getelementptr inbounds %"struct.std::pair.188", ptr %175, i64 %427
  %430 = load i32, ptr %429, align 8, !tbaa !326
  %431 = zext i32 %430 to i64
  %432 = load ptr, ptr %3, align 8, !tbaa !58
  %433 = getelementptr inbounds i32, ptr %432, i64 %431
  %434 = load i32, ptr %433, align 4, !tbaa !22
  %435 = getelementptr inbounds %"struct.std::pair.188", ptr %175, i64 %427, i32 1
  %436 = load ptr, ptr %435, align 8, !tbaa !328
  %437 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %436, i64 0, i32 1
  %438 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %436, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %439 = load ptr, ptr %438, align 8, !tbaa !31
  %440 = load ptr, ptr %437, align 8, !tbaa !32
  %441 = icmp eq ptr %439, %440
  br i1 %441, label %442, label %456

442:                                              ; preds = %464, %426
  %443 = phi i8 [ %428, %426 ], [ 1, %464 ]
  %444 = load ptr, ptr %397, align 8, !tbaa !314
  %445 = load i32, ptr %398, align 8, !tbaa !22
  %446 = add i32 %445, 1
  %447 = mul i32 %446, %430
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds double, ptr %444, i64 %448
  %450 = load double, ptr %449, align 8, !tbaa !52
  %451 = fcmp une double %450, 0.000000e+00
  %452 = call double @llvm.fabs.f64(double %450)
  %453 = select i1 %451, double %452, double %69
  %454 = fptrunc double %453 to float
  %455 = fcmp oeq float %454, 0.000000e+00
  br i1 %455, label %519, label %476

456:                                              ; preds = %426, %464
  %457 = phi ptr [ %468, %464 ], [ %440, %426 ]
  %458 = phi i64 [ %466, %464 ], [ 0, %426 ]
  %459 = phi i32 [ %465, %464 ], [ 0, %426 ]
  %460 = getelementptr inbounds %"struct.std::pair", ptr %457, i64 %458
  %461 = load i32, ptr %460, align 8, !tbaa !37
  %462 = getelementptr inbounds %"struct.std::pair", ptr %457, i64 %458, i32 1
  %463 = load double, ptr %462, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %461, i32 %430, double %463)
          to label %464 unwind label %474

464:                                              ; preds = %456
  %465 = add i32 %459, 1
  %466 = zext i32 %465 to i64
  %467 = load ptr, ptr %438, align 8, !tbaa !31
  %468 = load ptr, ptr %437, align 8, !tbaa !32
  %469 = ptrtoint ptr %467 to i64
  %470 = ptrtoint ptr %468 to i64
  %471 = sub i64 %469, %470
  %472 = ashr exact i64 %471, 4
  %473 = icmp ugt i64 %472, %466
  br i1 %473, label %456, label %442

474:                                              ; preds = %456
  %475 = landingpad { ptr, i32 }
          cleanup
  br label %1257

476:                                              ; preds = %442
  %477 = load i32, ptr %32, align 8, !tbaa !61
  %478 = load ptr, ptr %399, align 8, !tbaa !58
  br label %479

479:                                              ; preds = %479, %476
  %480 = phi i32 [ %477, %476 ], [ %481, %479 ]
  %481 = add i32 %480, -1
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds i32, ptr %478, i64 %482
  %484 = load i32, ptr %483, align 4, !tbaa !22
  %485 = icmp ugt i32 %484, %434
  br i1 %485, label %479, label %486

486:                                              ; preds = %479
  %487 = load i32, ptr %400, align 8, !tbaa !61
  %488 = load ptr, ptr %401, align 8, !tbaa !58
  br label %489

489:                                              ; preds = %489, %486
  %490 = phi i32 [ %487, %486 ], [ %491, %489 ]
  %491 = add i32 %490, -1
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds i32, ptr %488, i64 %492
  %494 = load i32, ptr %493, align 4, !tbaa !22
  %495 = icmp ugt i32 %494, %434
  br i1 %495, label %489, label %496

496:                                              ; preds = %489
  %497 = sub i32 %434, %484
  %498 = sub i32 %434, %494
  %499 = load ptr, ptr %402, align 8, !tbaa !143, !noalias !391
  %500 = load i32, ptr %403, align 8, !tbaa !22, !noalias !391
  %501 = mul i32 %500, %481
  %502 = zext i32 %501 to i64
  %503 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %499, i64 %502
  %504 = zext i32 %491 to i64
  %505 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %503, i64 %504
  %506 = load ptr, ptr %505, align 8, !tbaa !147
  %507 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %506, i64 0, i32 1
  %508 = load ptr, ptr %507, align 8, !tbaa !47
  %509 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %508, i32 noundef %497, i32 noundef %498)
          to label %510 unwind label %522

510:                                              ; preds = %496
  %511 = icmp eq i32 %509, -1
  br i1 %511, label %519, label %512

512:                                              ; preds = %510
  %513 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %506, i64 0, i32 2
  %514 = load ptr, ptr %513, align 8, !tbaa !44
  %515 = zext i32 %509 to i64
  %516 = getelementptr inbounds float, ptr %514, i64 %515
  %517 = load float, ptr %516, align 4, !tbaa !33
  %518 = fadd float %517, %454
  store float %518, ptr %516, align 4, !tbaa !33
  br label %519

519:                                              ; preds = %512, %510, %442
  %520 = add nuw nsw i64 %427, 1
  %521 = icmp eq i64 %520, %404
  br i1 %521, label %405, label %426

522:                                              ; preds = %496
  %523 = landingpad { ptr, i32 }
          cleanup
  br label %1257

524:                                              ; preds = %422, %411
  %525 = phi ptr [ null, %411 ], [ %421, %422 ]
  %526 = phi ptr [ null, %411 ], [ %423, %422 ]
  %527 = icmp eq i32 %416, 0
  br i1 %527, label %600, label %528

528:                                              ; preds = %524
  %529 = and i64 %415, 4294967295
  %530 = icmp ult i64 %529, 17
  br i1 %530, label %531, label %550

531:                                              ; preds = %564, %550, %528
  %532 = phi i64 [ 0, %550 ], [ 0, %528 ], [ %563, %564 ]
  %533 = sub nsw i64 %415, %532
  %534 = xor i64 %532, -1
  %535 = add nsw i64 %529, %534
  %536 = and i64 %533, 3
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %547, label %538

538:                                              ; preds = %531, %538
  %539 = phi i64 [ %544, %538 ], [ %532, %531 ]
  %540 = phi i64 [ %545, %538 ], [ 0, %531 ]
  %541 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %539
  %542 = load i32, ptr %541, align 8, !tbaa !317
  %543 = getelementptr inbounds i32, ptr %525, i64 %539
  store i32 %542, ptr %543, align 4, !tbaa !22
  %544 = add nuw nsw i64 %539, 1
  %545 = add i64 %540, 1
  %546 = icmp eq i64 %545, %536
  br i1 %546, label %547, label %538, !llvm.loop !394

547:                                              ; preds = %538, %531
  %548 = phi i64 [ %532, %531 ], [ %544, %538 ]
  %549 = icmp ult i64 %535, 3
  br i1 %549, label %600, label %644

550:                                              ; preds = %528
  %551 = shl nuw nsw i64 %529, 2
  %552 = getelementptr i8, ptr %525, i64 %551
  %553 = shl nuw nsw i64 %529, 4
  %554 = add nsw i64 %553, -12
  %555 = getelementptr i8, ptr %413, i64 %554
  %556 = icmp ult ptr %525, %555
  %557 = icmp ult ptr %413, %552
  %558 = and i1 %556, %557
  br i1 %558, label %531, label %559

559:                                              ; preds = %550
  %560 = and i64 %415, 7
  %561 = icmp eq i64 %560, 0
  %562 = select i1 %561, i64 8, i64 %560
  %563 = sub nsw i64 %529, %562
  br label %564

564:                                              ; preds = %564, %559
  %565 = phi i64 [ 0, %559 ], [ %598, %564 ]
  %566 = or i64 %565, 1
  %567 = or i64 %565, 2
  %568 = or i64 %565, 3
  %569 = or i64 %565, 4
  %570 = or i64 %565, 5
  %571 = or i64 %565, 6
  %572 = or i64 %565, 7
  %573 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %565
  %574 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %566
  %575 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %567
  %576 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %568
  %577 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %569
  %578 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %570
  %579 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %571
  %580 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %572
  %581 = load i32, ptr %573, align 8, !tbaa !317, !alias.scope !395
  %582 = load i32, ptr %574, align 8, !tbaa !317, !alias.scope !395
  %583 = load i32, ptr %575, align 8, !tbaa !317, !alias.scope !395
  %584 = load i32, ptr %576, align 8, !tbaa !317, !alias.scope !395
  %585 = load i32, ptr %577, align 8, !tbaa !317, !alias.scope !395
  %586 = load i32, ptr %578, align 8, !tbaa !317, !alias.scope !395
  %587 = load i32, ptr %579, align 8, !tbaa !317, !alias.scope !395
  %588 = load i32, ptr %580, align 8, !tbaa !317, !alias.scope !395
  %589 = insertelement <8 x i32> poison, i32 %581, i64 0
  %590 = insertelement <8 x i32> %589, i32 %582, i64 1
  %591 = insertelement <8 x i32> %590, i32 %583, i64 2
  %592 = insertelement <8 x i32> %591, i32 %584, i64 3
  %593 = insertelement <8 x i32> %592, i32 %585, i64 4
  %594 = insertelement <8 x i32> %593, i32 %586, i64 5
  %595 = insertelement <8 x i32> %594, i32 %587, i64 6
  %596 = insertelement <8 x i32> %595, i32 %588, i64 7
  %597 = getelementptr inbounds i32, ptr %525, i64 %565
  store <8 x i32> %596, ptr %597, align 4, !tbaa !22, !alias.scope !398, !noalias !395
  %598 = add nuw i64 %565, 8
  %599 = icmp eq i64 %598, %563
  br i1 %599, label %531, label %564, !llvm.loop !400

600:                                              ; preds = %547, %644, %524
  %601 = add i32 %33, 1
  %602 = zext i32 %601 to i64
  %603 = icmp eq i32 %601, 0
  br i1 %603, label %663, label %604

604:                                              ; preds = %600
  %605 = shl nuw nsw i64 %602, 2
  %606 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %605) #21
          to label %607 unwind label %772

607:                                              ; preds = %604
  %608 = getelementptr inbounds i32, ptr %606, i64 %602
  %609 = add nuw nsw i64 %602, 4611686018427387903
  %610 = and i64 %609, 4611686018427387903
  %611 = add nuw nsw i64 %610, 1
  %612 = icmp ult i64 %610, 31
  br i1 %612, label %636, label %613

613:                                              ; preds = %607
  %614 = and i64 %611, 9223372036854775776
  %615 = shl i64 %614, 2
  %616 = getelementptr i8, ptr %606, i64 %615
  %617 = insertelement <8 x i32> poison, i32 %416, i64 0
  %618 = shufflevector <8 x i32> %617, <8 x i32> poison, <8 x i32> zeroinitializer
  %619 = insertelement <8 x i32> poison, i32 %416, i64 0
  %620 = shufflevector <8 x i32> %619, <8 x i32> poison, <8 x i32> zeroinitializer
  %621 = insertelement <8 x i32> poison, i32 %416, i64 0
  %622 = shufflevector <8 x i32> %621, <8 x i32> poison, <8 x i32> zeroinitializer
  %623 = insertelement <8 x i32> poison, i32 %416, i64 0
  %624 = shufflevector <8 x i32> %623, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %625

625:                                              ; preds = %625, %613
  %626 = phi i64 [ 0, %613 ], [ %632, %625 ]
  %627 = shl i64 %626, 2
  %628 = getelementptr i8, ptr %606, i64 %627
  store <8 x i32> %618, ptr %628, align 4, !tbaa !22
  %629 = getelementptr i32, ptr %628, i64 8
  store <8 x i32> %620, ptr %629, align 4, !tbaa !22
  %630 = getelementptr i32, ptr %628, i64 16
  store <8 x i32> %622, ptr %630, align 4, !tbaa !22
  %631 = getelementptr i32, ptr %628, i64 24
  store <8 x i32> %624, ptr %631, align 4, !tbaa !22
  %632 = add nuw i64 %626, 32
  %633 = icmp eq i64 %632, %614
  br i1 %633, label %634, label %625, !llvm.loop !401

634:                                              ; preds = %625
  %635 = icmp eq i64 %611, %614
  br i1 %635, label %663, label %636

636:                                              ; preds = %607, %634
  %637 = phi ptr [ %606, %607 ], [ %616, %634 ]
  br label %638

638:                                              ; preds = %636, %638
  %639 = phi ptr [ %640, %638 ], [ %637, %636 ]
  store i32 %416, ptr %639, align 4, !tbaa !22
  %640 = getelementptr inbounds i32, ptr %639, i64 1
  %641 = icmp eq ptr %640, %608
  br i1 %641, label %663, label %638, !llvm.loop !402

642:                                              ; preds = %419
  %643 = landingpad { ptr, i32 }
          cleanup
  br label %1257

644:                                              ; preds = %547, %644
  %645 = phi i64 [ %661, %644 ], [ %548, %547 ]
  %646 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %645
  %647 = load i32, ptr %646, align 8, !tbaa !317
  %648 = getelementptr inbounds i32, ptr %525, i64 %645
  store i32 %647, ptr %648, align 4, !tbaa !22
  %649 = add nuw nsw i64 %645, 1
  %650 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %649
  %651 = load i32, ptr %650, align 8, !tbaa !317
  %652 = getelementptr inbounds i32, ptr %525, i64 %649
  store i32 %651, ptr %652, align 4, !tbaa !22
  %653 = add nuw nsw i64 %645, 2
  %654 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %653
  %655 = load i32, ptr %654, align 8, !tbaa !317
  %656 = getelementptr inbounds i32, ptr %525, i64 %653
  store i32 %655, ptr %656, align 4, !tbaa !22
  %657 = add nuw nsw i64 %645, 3
  %658 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %413, i64 %657
  %659 = load i32, ptr %658, align 8, !tbaa !317
  %660 = getelementptr inbounds i32, ptr %525, i64 %657
  store i32 %659, ptr %660, align 4, !tbaa !22
  %661 = add nuw nsw i64 %645, 4
  %662 = icmp eq i64 %661, %529
  br i1 %662, label %600, label %644, !llvm.loop !403

663:                                              ; preds = %638, %634, %600
  %664 = phi ptr [ null, %600 ], [ %606, %634 ], [ %606, %638 ]
  %665 = load i32, ptr %32, align 8, !tbaa !61
  store i32 0, ptr %664, align 4, !tbaa !22
  %666 = icmp ugt i32 %665, 1
  br i1 %666, label %670, label %667

667:                                              ; preds = %663
  %668 = ptrtoint ptr %526 to i64
  %669 = ptrtoint ptr %525 to i64
  br label %676

670:                                              ; preds = %663
  %671 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 1, i32 1
  %672 = load ptr, ptr %671, align 8, !tbaa !58
  %673 = ptrtoint ptr %526 to i64
  %674 = ptrtoint ptr %525 to i64
  %675 = zext i32 %665 to i64
  br label %688

676:                                              ; preds = %713, %667
  %677 = phi i64 [ %669, %667 ], [ %674, %713 ]
  %678 = phi i64 [ %668, %667 ], [ %673, %713 ]
  %679 = getelementptr inbounds i32, ptr %664, i64 1
  %680 = load i32, ptr %679, align 4, !tbaa !22
  %681 = sub i64 %678, %677
  %682 = ashr exact i64 %681, 2
  %683 = zext i32 %680 to i64
  %684 = icmp ugt i64 %682, %683
  br i1 %684, label %685, label %739

685:                                              ; preds = %676
  %686 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 1, i32 1
  %687 = load ptr, ptr %686, align 8, !tbaa !58
  br label %722

688:                                              ; preds = %713, %670
  %689 = phi i64 [ 1, %670 ], [ %720, %713 ]
  %690 = phi ptr [ %525, %670 ], [ %715, %713 ]
  %691 = getelementptr inbounds i32, ptr %672, i64 %689
  %692 = load i32, ptr %691, align 4, !tbaa !22
  %693 = ptrtoint ptr %690 to i64
  %694 = sub i64 %673, %693
  %695 = icmp sgt i64 %694, 0
  br i1 %695, label %696, label %713

696:                                              ; preds = %688
  %697 = lshr exact i64 %694, 2
  br label %698

698:                                              ; preds = %698, %696
  %699 = phi i64 [ %697, %696 ], [ %709, %698 ]
  %700 = phi ptr [ %690, %696 ], [ %708, %698 ]
  %701 = lshr i64 %699, 1
  %702 = getelementptr inbounds i32, ptr %700, i64 %701
  %703 = load i32, ptr %702, align 4, !tbaa !22
  %704 = icmp ult i32 %703, %692
  %705 = getelementptr inbounds i32, ptr %702, i64 1
  %706 = xor i64 %701, -1
  %707 = add nsw i64 %699, %706
  %708 = select i1 %704, ptr %705, ptr %700
  %709 = select i1 %704, i64 %707, i64 %701
  %710 = icmp sgt i64 %709, 0
  br i1 %710, label %698, label %711

711:                                              ; preds = %698
  %712 = ptrtoint ptr %708 to i64
  br label %713

713:                                              ; preds = %711, %688
  %714 = phi i64 [ %712, %711 ], [ %693, %688 ]
  %715 = phi ptr [ %708, %711 ], [ %690, %688 ]
  %716 = sub i64 %714, %674
  %717 = lshr exact i64 %716, 2
  %718 = trunc i64 %717 to i32
  %719 = getelementptr inbounds i32, ptr %664, i64 %689
  store i32 %718, ptr %719, align 4, !tbaa !22
  %720 = add nuw nsw i64 %689, 1
  %721 = icmp eq i64 %720, %675
  br i1 %721, label %676, label %688

722:                                              ; preds = %734, %685
  %723 = phi i64 [ %683, %685 ], [ %737, %734 ]
  %724 = phi i32 [ %680, %685 ], [ %736, %734 ]
  %725 = getelementptr inbounds i32, ptr %525, i64 %723
  %726 = load i32, ptr %725, align 4, !tbaa !22
  br label %727

727:                                              ; preds = %727, %722
  %728 = phi i32 [ %665, %722 ], [ %729, %727 ]
  %729 = add i32 %728, -1
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds i32, ptr %687, i64 %730
  %732 = load i32, ptr %731, align 4, !tbaa !22
  %733 = icmp ugt i32 %732, %726
  br i1 %733, label %727, label %734

734:                                              ; preds = %727
  %735 = sub i32 %726, %732
  store i32 %735, ptr %725, align 4, !tbaa !22
  %736 = add i32 %724, 1
  %737 = zext i32 %736 to i64
  %738 = icmp ugt i64 %682, %737
  br i1 %738, label %722, label %739

739:                                              ; preds = %734, %676
  br i1 %418, label %747, label %740

740:                                              ; preds = %739
  %741 = shl nuw nsw i64 %417, 2
  %742 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %741) #21
          to label %743 unwind label %774

743:                                              ; preds = %740
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %742, i8 0, i64 %741, i1 false), !tbaa !22
  %744 = shl nuw nsw i64 %417, 3
  %745 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %744) #21
          to label %746 unwind label %776

746:                                              ; preds = %743
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %745, i8 0, i64 %744, i1 false), !tbaa !52
  br label %747

747:                                              ; preds = %746, %739
  %748 = phi ptr [ null, %739 ], [ %742, %746 ]
  %749 = phi ptr [ null, %739 ], [ %745, %746 ]
  %750 = icmp eq i32 %33, 0
  br i1 %750, label %769, label %751

751:                                              ; preds = %747
  %752 = and i8 %414, 1
  %753 = icmp eq i8 %752, 0
  %754 = ptrtoint ptr %748 to i64
  %755 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %756 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %757 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 3, i32 0, i32 1
  %758 = getelementptr inbounds %"class.dealii::BlockMatrixBase", ptr %4, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %759 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %760 = icmp eq ptr %174, %175
  %761 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %5, i64 0, i32 2
  %762 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %5, i64 0, i32 2, i32 1
  %763 = getelementptr inbounds %"class.dealii::BlockVectorBase.47", ptr %5, i64 0, i32 1
  %764 = zext i32 %33 to i64
  %765 = getelementptr inbounds double, ptr %749, i64 1
  %766 = getelementptr inbounds i32, ptr %748, i64 1
  br label %778

767:                                              ; preds = %1209, %778
  %768 = icmp eq i64 %780, %764
  br i1 %768, label %769, label %778

769:                                              ; preds = %767, %747
  %770 = icmp eq ptr %749, null
  br i1 %770, label %1213, label %771

771:                                              ; preds = %769
  call void @_ZdlPv(ptr noundef nonnull %749) #23
  br label %1213

772:                                              ; preds = %604
  %773 = landingpad { ptr, i32 }
          cleanup
  br label %1253

774:                                              ; preds = %740
  %775 = landingpad { ptr, i32 }
          cleanup
  br label %1251

776:                                              ; preds = %743
  %777 = landingpad { ptr, i32 }
          cleanup
  br label %1248

778:                                              ; preds = %751, %767
  %779 = phi i64 [ 0, %751 ], [ %780, %767 ]
  %780 = add nuw nsw i64 %779, 1
  %781 = getelementptr inbounds i32, ptr %664, i64 %780
  %782 = load i32, ptr %781, align 4, !tbaa !22
  %783 = getelementptr inbounds i32, ptr %664, i64 %779
  %784 = load i32, ptr %783, align 4, !tbaa !22
  %785 = icmp ult i32 %784, %782
  br i1 %785, label %786, label %767

786:                                              ; preds = %778
  %787 = zext i32 %784 to i64
  %788 = zext i32 %782 to i64
  %789 = trunc i64 %779 to i32
  br label %790

790:                                              ; preds = %786, %1209
  %791 = phi i64 [ %787, %786 ], [ %1210, %1209 ]
  %792 = getelementptr inbounds i32, ptr %525, i64 %791
  %793 = load i32, ptr %792, align 4, !tbaa !22
  %794 = load ptr, ptr %7, align 8, !tbaa !321
  %795 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %794, i64 %791, i32 1
  %796 = load i32, ptr %795, align 4, !tbaa !319
  %797 = icmp eq i32 %796, -1
  br label %799

798:                                              ; preds = %1081
  br i1 %23, label %1209, label %1083

799:                                              ; preds = %790, %1081
  %800 = phi i64 [ 0, %790 ], [ %801, %1081 ]
  %801 = add nuw nsw i64 %800, 1
  %802 = getelementptr inbounds i32, ptr %664, i64 %801
  %803 = load i32, ptr %802, align 4, !tbaa !22
  %804 = load ptr, ptr %755, align 8
  %805 = load i32, ptr %756, align 8
  %806 = mul i32 %805, %796
  %807 = zext i32 %806 to i64
  %808 = getelementptr inbounds double, ptr %804, i64 %807
  %809 = getelementptr inbounds i32, ptr %664, i64 %800
  %810 = load i32, ptr %809, align 4, !tbaa !22
  %811 = icmp ult i32 %810, %803
  br i1 %753, label %812, label %877

812:                                              ; preds = %799
  br i1 %811, label %813, label %1063

813:                                              ; preds = %812
  %814 = load ptr, ptr %7, align 8, !tbaa !321
  %815 = zext i32 %810 to i64
  %816 = zext i32 %803 to i64
  %817 = sub nsw i64 %816, %815
  %818 = xor i64 %815, -1
  %819 = and i64 %817, 1
  %820 = icmp eq i64 %819, 0
  br i1 %820, label %835, label %821

821:                                              ; preds = %813
  %822 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %814, i64 %815, i32 1
  %823 = load i32, ptr %822, align 4, !tbaa !319
  %824 = zext i32 %823 to i64
  %825 = getelementptr inbounds double, ptr %808, i64 %824
  %826 = load double, ptr %825, align 8, !tbaa !52
  %827 = fcmp une double %826, 0.000000e+00
  br i1 %827, label %828, label %831

828:                                              ; preds = %821
  store double %826, ptr %749, align 8, !tbaa !52
  %829 = getelementptr inbounds i32, ptr %525, i64 %815
  %830 = load i32, ptr %829, align 4, !tbaa !22
  store i32 %830, ptr %748, align 4, !tbaa !22
  br label %831

831:                                              ; preds = %828, %821
  %832 = phi ptr [ %766, %828 ], [ %748, %821 ]
  %833 = phi ptr [ %765, %828 ], [ %749, %821 ]
  %834 = add nuw nsw i64 %815, 1
  br label %835

835:                                              ; preds = %831, %813
  %836 = phi ptr [ undef, %813 ], [ %832, %831 ]
  %837 = phi i64 [ %815, %813 ], [ %834, %831 ]
  %838 = phi ptr [ %749, %813 ], [ %833, %831 ]
  %839 = phi ptr [ %748, %813 ], [ %832, %831 ]
  %840 = sub nsw i64 0, %816
  %841 = icmp eq i64 %818, %840
  br i1 %841, label %1063, label %842

842:                                              ; preds = %835, %872
  %843 = phi i64 [ %875, %872 ], [ %837, %835 ]
  %844 = phi ptr [ %874, %872 ], [ %838, %835 ]
  %845 = phi ptr [ %873, %872 ], [ %839, %835 ]
  %846 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %814, i64 %843, i32 1
  %847 = load i32, ptr %846, align 4, !tbaa !319
  %848 = zext i32 %847 to i64
  %849 = getelementptr inbounds double, ptr %808, i64 %848
  %850 = load double, ptr %849, align 8, !tbaa !52
  %851 = fcmp une double %850, 0.000000e+00
  br i1 %851, label %852, label %857

852:                                              ; preds = %842
  %853 = getelementptr inbounds double, ptr %844, i64 1
  store double %850, ptr %844, align 8, !tbaa !52
  %854 = getelementptr inbounds i32, ptr %525, i64 %843
  %855 = load i32, ptr %854, align 4, !tbaa !22
  %856 = getelementptr inbounds i32, ptr %845, i64 1
  store i32 %855, ptr %845, align 4, !tbaa !22
  br label %857

857:                                              ; preds = %852, %842
  %858 = phi ptr [ %856, %852 ], [ %845, %842 ]
  %859 = phi ptr [ %853, %852 ], [ %844, %842 ]
  %860 = add nuw nsw i64 %843, 1
  %861 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %814, i64 %860, i32 1
  %862 = load i32, ptr %861, align 4, !tbaa !319
  %863 = zext i32 %862 to i64
  %864 = getelementptr inbounds double, ptr %808, i64 %863
  %865 = load double, ptr %864, align 8, !tbaa !52
  %866 = fcmp une double %865, 0.000000e+00
  br i1 %866, label %867, label %872

867:                                              ; preds = %857
  %868 = getelementptr inbounds double, ptr %859, i64 1
  store double %865, ptr %859, align 8, !tbaa !52
  %869 = getelementptr inbounds i32, ptr %525, i64 %860
  %870 = load i32, ptr %869, align 4, !tbaa !22
  %871 = getelementptr inbounds i32, ptr %858, i64 1
  store i32 %870, ptr %858, align 4, !tbaa !22
  br label %872

872:                                              ; preds = %867, %857
  %873 = phi ptr [ %871, %867 ], [ %858, %857 ]
  %874 = phi ptr [ %868, %867 ], [ %859, %857 ]
  %875 = add nuw nsw i64 %843, 2
  %876 = icmp eq i64 %875, %816
  br i1 %876, label %1063, label %842

877:                                              ; preds = %799
  br i1 %811, label %878, label %1063

878:                                              ; preds = %877
  %879 = load ptr, ptr %7, align 8, !tbaa !321
  %880 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %879, i64 %791, i32 2
  %881 = load ptr, ptr %880, align 8, !tbaa !320
  %882 = icmp eq ptr %881, null
  %883 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %881, i64 0, i32 1
  %884 = zext i32 %810 to i64
  %885 = zext i32 %803 to i64
  br label %886

886:                                              ; preds = %878, %1058
  %887 = phi i64 [ %884, %878 ], [ %1061, %1058 ]
  %888 = phi ptr [ %749, %878 ], [ %1060, %1058 ]
  %889 = phi ptr [ %748, %878 ], [ %1059, %1058 ]
  %890 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %879, i64 %887, i32 1
  %891 = load i32, ptr %890, align 4, !tbaa !319
  br i1 %797, label %931, label %892

892:                                              ; preds = %886
  %893 = icmp eq i32 %891, -1
  br i1 %893, label %898, label %894

894:                                              ; preds = %892
  %895 = zext i32 %891 to i64
  %896 = getelementptr inbounds double, ptr %808, i64 %895
  %897 = load double, ptr %896, align 8, !tbaa !52
  br label %898

898:                                              ; preds = %892, %894
  %899 = phi double [ %897, %894 ], [ 0.000000e+00, %892 ]
  %900 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %879, i64 %887, i32 2
  %901 = load ptr, ptr %900, align 8, !tbaa !320
  %902 = icmp eq ptr %901, null
  br i1 %902, label %931, label %903

903:                                              ; preds = %898
  %904 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %901, i64 0, i32 1
  %905 = load ptr, ptr %904, align 8, !tbaa !31
  %906 = load ptr, ptr %901, align 8, !tbaa !32
  %907 = ptrtoint ptr %905 to i64
  %908 = ptrtoint ptr %906 to i64
  %909 = sub i64 %907, %908
  %910 = ashr exact i64 %909, 4
  %911 = icmp eq ptr %905, %906
  br i1 %911, label %931, label %912

912:                                              ; preds = %903
  %913 = load i32, ptr %756, align 8, !tbaa !22
  %914 = mul i32 %913, %796
  br label %915

915:                                              ; preds = %912, %915
  %916 = phi i64 [ 0, %912 ], [ %929, %915 ]
  %917 = phi i32 [ 0, %912 ], [ %928, %915 ]
  %918 = phi double [ %899, %912 ], [ %927, %915 ]
  %919 = getelementptr inbounds %"struct.std::pair", ptr %906, i64 %916
  %920 = load i32, ptr %919, align 8, !tbaa !37
  %921 = add i32 %914, %920
  %922 = zext i32 %921 to i64
  %923 = getelementptr inbounds double, ptr %804, i64 %922
  %924 = load double, ptr %923, align 8, !tbaa !52
  %925 = getelementptr inbounds %"struct.std::pair", ptr %906, i64 %916, i32 1
  %926 = load double, ptr %925, align 8, !tbaa !35
  %927 = call double @llvm.fmuladd.f64(double %924, double %926, double %918)
  %928 = add i32 %917, 1
  %929 = zext i32 %928 to i64
  %930 = icmp ugt i64 %910, %929
  br i1 %930, label %915, label %931

931:                                              ; preds = %915, %903, %886, %898
  %932 = phi double [ %899, %898 ], [ 0.000000e+00, %886 ], [ %899, %903 ], [ %927, %915 ]
  br i1 %882, label %1050, label %933

933:                                              ; preds = %931
  %934 = load ptr, ptr %883, align 8, !tbaa !31
  %935 = load ptr, ptr %881, align 8, !tbaa !32
  %936 = ptrtoint ptr %934 to i64
  %937 = ptrtoint ptr %935 to i64
  %938 = sub i64 %936, %937
  %939 = ashr exact i64 %938, 4
  %940 = icmp eq ptr %934, %935
  br i1 %940, label %1050, label %941

941:                                              ; preds = %933
  %942 = icmp eq i32 %891, -1
  %943 = load ptr, ptr %755, align 8
  %944 = load i32, ptr %756, align 8
  %945 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %879, i64 %887, i32 2
  %946 = load ptr, ptr %945, align 8, !tbaa !320
  %947 = icmp eq ptr %946, null
  br i1 %947, label %948, label %976

948:                                              ; preds = %941
  br i1 %942, label %949, label %959

949:                                              ; preds = %948, %949
  %950 = phi i64 [ %957, %949 ], [ 0, %948 ]
  %951 = phi i32 [ %956, %949 ], [ 0, %948 ]
  %952 = phi double [ %955, %949 ], [ %932, %948 ]
  %953 = getelementptr inbounds %"struct.std::pair", ptr %935, i64 %950, i32 1
  %954 = load double, ptr %953, align 8, !tbaa !35
  %955 = call double @llvm.fmuladd.f64(double %954, double 0.000000e+00, double %952)
  %956 = add i32 %951, 1
  %957 = zext i32 %956 to i64
  %958 = icmp ugt i64 %939, %957
  br i1 %958, label %949, label %1050

959:                                              ; preds = %948, %959
  %960 = phi i64 [ %974, %959 ], [ 0, %948 ]
  %961 = phi i32 [ %973, %959 ], [ 0, %948 ]
  %962 = phi double [ %972, %959 ], [ %932, %948 ]
  %963 = getelementptr inbounds %"struct.std::pair", ptr %935, i64 %960
  %964 = load i32, ptr %963, align 8, !tbaa !37
  %965 = mul i32 %944, %964
  %966 = add i32 %965, %891
  %967 = zext i32 %966 to i64
  %968 = getelementptr inbounds double, ptr %943, i64 %967
  %969 = load double, ptr %968, align 8, !tbaa !52
  %970 = getelementptr inbounds %"struct.std::pair", ptr %935, i64 %960, i32 1
  %971 = load double, ptr %970, align 8, !tbaa !35
  %972 = call double @llvm.fmuladd.f64(double %969, double %971, double %962)
  %973 = add i32 %961, 1
  %974 = zext i32 %973 to i64
  %975 = icmp ugt i64 %939, %974
  br i1 %975, label %959, label %1050

976:                                              ; preds = %941
  %977 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %946, i64 0, i32 1
  %978 = load ptr, ptr %977, align 8, !tbaa !31
  %979 = load ptr, ptr %946, align 8, !tbaa !32
  %980 = ptrtoint ptr %978 to i64
  %981 = ptrtoint ptr %979 to i64
  %982 = sub i64 %980, %981
  %983 = ashr exact i64 %982, 4
  %984 = icmp eq ptr %978, %979
  br i1 %984, label %1022, label %985

985:                                              ; preds = %976, %1015
  %986 = phi i64 [ %1020, %1015 ], [ 0, %976 ]
  %987 = phi i32 [ %1019, %1015 ], [ 0, %976 ]
  %988 = phi double [ %1018, %1015 ], [ %932, %976 ]
  %989 = getelementptr inbounds %"struct.std::pair", ptr %935, i64 %986
  %990 = load i32, ptr %989, align 8, !tbaa !37
  %991 = mul i32 %944, %990
  br i1 %942, label %997, label %992

992:                                              ; preds = %985
  %993 = add i32 %991, %891
  %994 = zext i32 %993 to i64
  %995 = getelementptr inbounds double, ptr %943, i64 %994
  %996 = load double, ptr %995, align 8, !tbaa !52
  br label %997

997:                                              ; preds = %985, %992
  %998 = phi double [ %996, %992 ], [ 0.000000e+00, %985 ]
  br label %999

999:                                              ; preds = %997, %999
  %1000 = phi i64 [ %1013, %999 ], [ 0, %997 ]
  %1001 = phi i32 [ %1012, %999 ], [ 0, %997 ]
  %1002 = phi double [ %1011, %999 ], [ %998, %997 ]
  %1003 = getelementptr inbounds %"struct.std::pair", ptr %979, i64 %1000
  %1004 = load i32, ptr %1003, align 8, !tbaa !37
  %1005 = add i32 %991, %1004
  %1006 = zext i32 %1005 to i64
  %1007 = getelementptr inbounds double, ptr %943, i64 %1006
  %1008 = load double, ptr %1007, align 8, !tbaa !52
  %1009 = getelementptr inbounds %"struct.std::pair", ptr %979, i64 %1000, i32 1
  %1010 = load double, ptr %1009, align 8, !tbaa !35
  %1011 = call double @llvm.fmuladd.f64(double %1008, double %1010, double %1002)
  %1012 = add i32 %1001, 1
  %1013 = zext i32 %1012 to i64
  %1014 = icmp ugt i64 %983, %1013
  br i1 %1014, label %999, label %1015

1015:                                             ; preds = %999
  %1016 = getelementptr inbounds %"struct.std::pair", ptr %935, i64 %986, i32 1
  %1017 = load double, ptr %1016, align 8, !tbaa !35
  %1018 = call double @llvm.fmuladd.f64(double %1011, double %1017, double %988)
  %1019 = add i32 %987, 1
  %1020 = zext i32 %1019 to i64
  %1021 = icmp ugt i64 %939, %1020
  br i1 %1021, label %985, label %1050

1022:                                             ; preds = %976
  br i1 %942, label %1023, label %1033

1023:                                             ; preds = %1022, %1023
  %1024 = phi i64 [ %1031, %1023 ], [ 0, %1022 ]
  %1025 = phi i32 [ %1030, %1023 ], [ 0, %1022 ]
  %1026 = phi double [ %1029, %1023 ], [ %932, %1022 ]
  %1027 = getelementptr inbounds %"struct.std::pair", ptr %935, i64 %1024, i32 1
  %1028 = load double, ptr %1027, align 8, !tbaa !35
  %1029 = call double @llvm.fmuladd.f64(double %1028, double 0.000000e+00, double %1026)
  %1030 = add i32 %1025, 1
  %1031 = zext i32 %1030 to i64
  %1032 = icmp ugt i64 %939, %1031
  br i1 %1032, label %1023, label %1050

1033:                                             ; preds = %1022, %1033
  %1034 = phi i64 [ %1048, %1033 ], [ 0, %1022 ]
  %1035 = phi i32 [ %1047, %1033 ], [ 0, %1022 ]
  %1036 = phi double [ %1046, %1033 ], [ %932, %1022 ]
  %1037 = getelementptr inbounds %"struct.std::pair", ptr %935, i64 %1034
  %1038 = load i32, ptr %1037, align 8, !tbaa !37
  %1039 = mul i32 %944, %1038
  %1040 = add i32 %1039, %891
  %1041 = zext i32 %1040 to i64
  %1042 = getelementptr inbounds double, ptr %943, i64 %1041
  %1043 = load double, ptr %1042, align 8, !tbaa !52
  %1044 = getelementptr inbounds %"struct.std::pair", ptr %935, i64 %1034, i32 1
  %1045 = load double, ptr %1044, align 8, !tbaa !35
  %1046 = call double @llvm.fmuladd.f64(double %1043, double %1045, double %1036)
  %1047 = add i32 %1035, 1
  %1048 = zext i32 %1047 to i64
  %1049 = icmp ugt i64 %939, %1048
  br i1 %1049, label %1033, label %1050

1050:                                             ; preds = %1015, %1033, %1023, %959, %949, %933, %931
  %1051 = phi double [ %932, %931 ], [ %932, %933 ], [ %955, %949 ], [ %972, %959 ], [ %1029, %1023 ], [ %1046, %1033 ], [ %1018, %1015 ]
  %1052 = fcmp une double %1051, 0.000000e+00
  br i1 %1052, label %1053, label %1058

1053:                                             ; preds = %1050
  %1054 = getelementptr inbounds i32, ptr %525, i64 %887
  %1055 = load i32, ptr %1054, align 4, !tbaa !22
  %1056 = getelementptr inbounds i32, ptr %889, i64 1
  store i32 %1055, ptr %889, align 4, !tbaa !22
  %1057 = getelementptr inbounds double, ptr %888, i64 1
  store double %1051, ptr %888, align 8, !tbaa !52
  br label %1058

1058:                                             ; preds = %1053, %1050
  %1059 = phi ptr [ %1056, %1053 ], [ %889, %1050 ]
  %1060 = phi ptr [ %1057, %1053 ], [ %888, %1050 ]
  %1061 = add nuw nsw i64 %887, 1
  %1062 = icmp eq i64 %1061, %885
  br i1 %1062, label %1063, label %886

1063:                                             ; preds = %1058, %835, %872, %877, %812
  %1064 = phi ptr [ %748, %812 ], [ %748, %877 ], [ %836, %835 ], [ %873, %872 ], [ %1059, %1058 ]
  %1065 = ptrtoint ptr %1064 to i64
  %1066 = sub i64 %1065, %754
  %1067 = lshr exact i64 %1066, 2
  %1068 = trunc i64 %1067 to i32
  %1069 = icmp eq i32 %1068, 0
  br i1 %1069, label %1081, label %1070

1070:                                             ; preds = %1063
  %1071 = load ptr, ptr %757, align 8, !tbaa !143, !noalias !404
  %1072 = load i32, ptr %758, align 8, !tbaa !22, !noalias !404
  %1073 = mul i32 %1072, %789
  %1074 = zext i32 %1073 to i64
  %1075 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %1071, i64 %1074
  %1076 = getelementptr inbounds %"class.dealii::SmartPointer.175", ptr %1075, i64 %800
  %1077 = load ptr, ptr %1076, align 8, !tbaa !147
  invoke void @_ZN6dealii12SparseMatrixIfE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %1077, i32 noundef %793, i32 noundef %1068, ptr noundef nonnull %748, ptr noundef nonnull %749, i1 noundef zeroext false, i1 noundef zeroext true)
          to label %1081 unwind label %1078

1078:                                             ; preds = %1070
  %1079 = landingpad { ptr, i32 }
          cleanup
  %1080 = icmp eq ptr %749, null
  br i1 %1080, label %1246, label %1212

1081:                                             ; preds = %1070, %1063
  %1082 = icmp eq i64 %801, %764
  br i1 %1082, label %798, label %799

1083:                                             ; preds = %798
  br i1 %797, label %1112, label %1084

1084:                                             ; preds = %1083
  %1085 = load ptr, ptr %759, align 8, !tbaa !60
  %1086 = zext i32 %796 to i64
  %1087 = getelementptr inbounds double, ptr %1085, i64 %1086
  %1088 = load double, ptr %1087, align 8, !tbaa !52
  br i1 %760, label %1112, label %1089

1089:                                             ; preds = %1084
  %1090 = load ptr, ptr %755, align 8, !tbaa !314
  %1091 = load i32, ptr %756, align 8, !tbaa !22
  %1092 = mul i32 %1091, %796
  br label %1093

1093:                                             ; preds = %1089, %1093
  %1094 = phi i64 [ 0, %1089 ], [ %1110, %1093 ]
  %1095 = phi i32 [ 0, %1089 ], [ %1109, %1093 ]
  %1096 = phi double [ %1088, %1089 ], [ %1108, %1093 ]
  %1097 = getelementptr inbounds %"struct.std::pair.188", ptr %175, i64 %1094
  %1098 = getelementptr inbounds %"struct.std::pair.188", ptr %175, i64 %1094, i32 1
  %1099 = load ptr, ptr %1098, align 8, !tbaa !328
  %1100 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1099, i64 0, i32 2
  %1101 = load double, ptr %1100, align 8, !tbaa !48
  %1102 = load i32, ptr %1097, align 8, !tbaa !326
  %1103 = add i32 %1092, %1102
  %1104 = zext i32 %1103 to i64
  %1105 = getelementptr inbounds double, ptr %1090, i64 %1104
  %1106 = load double, ptr %1105, align 8, !tbaa !52
  %1107 = fneg double %1101
  %1108 = call double @llvm.fmuladd.f64(double %1107, double %1106, double %1096)
  %1109 = add i32 %1095, 1
  %1110 = zext i32 %1109 to i64
  %1111 = icmp ugt i64 %393, %1110
  br i1 %1111, label %1093, label %1112

1112:                                             ; preds = %1093, %1084, %1083
  %1113 = phi double [ 0.000000e+00, %1083 ], [ %1088, %1084 ], [ %1108, %1093 ]
  %1114 = load ptr, ptr %7, align 8, !tbaa !321
  %1115 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1114, i64 %791
  %1116 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1114, i64 %791, i32 2
  %1117 = load ptr, ptr %1116, align 8, !tbaa !320
  %1118 = icmp eq ptr %1117, null
  br i1 %1118, label %1183, label %1119

1119:                                             ; preds = %1112
  %1120 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1117, i64 0, i32 1
  %1121 = load ptr, ptr %1120, align 8, !tbaa !31
  %1122 = load ptr, ptr %1117, align 8, !tbaa !32
  %1123 = ptrtoint ptr %1121 to i64
  %1124 = ptrtoint ptr %1122 to i64
  %1125 = sub i64 %1123, %1124
  %1126 = ashr exact i64 %1125, 4
  %1127 = icmp eq ptr %1121, %1122
  br i1 %1127, label %1183, label %1128

1128:                                             ; preds = %1119
  %1129 = load ptr, ptr %759, align 8, !tbaa !60
  %1130 = load ptr, ptr %755, align 8
  %1131 = load i32, ptr %756, align 8
  br i1 %760, label %1168, label %1132

1132:                                             ; preds = %1128, %1161
  %1133 = phi i64 [ %1166, %1161 ], [ 0, %1128 ]
  %1134 = phi i32 [ %1165, %1161 ], [ 0, %1128 ]
  %1135 = phi double [ %1164, %1161 ], [ %1113, %1128 ]
  %1136 = getelementptr inbounds %"struct.std::pair", ptr %1122, i64 %1133
  %1137 = load i32, ptr %1136, align 8, !tbaa !37
  %1138 = zext i32 %1137 to i64
  %1139 = getelementptr inbounds double, ptr %1129, i64 %1138
  %1140 = load double, ptr %1139, align 8, !tbaa !52
  %1141 = mul i32 %1131, %1137
  br label %1142

1142:                                             ; preds = %1132, %1142
  %1143 = phi i64 [ 0, %1132 ], [ %1159, %1142 ]
  %1144 = phi i32 [ 0, %1132 ], [ %1158, %1142 ]
  %1145 = phi double [ %1140, %1132 ], [ %1157, %1142 ]
  %1146 = getelementptr inbounds %"struct.std::pair.188", ptr %175, i64 %1143
  %1147 = getelementptr inbounds %"struct.std::pair.188", ptr %175, i64 %1143, i32 1
  %1148 = load ptr, ptr %1147, align 8, !tbaa !328
  %1149 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1148, i64 0, i32 2
  %1150 = load double, ptr %1149, align 8, !tbaa !48
  %1151 = load i32, ptr %1146, align 8, !tbaa !326
  %1152 = add i32 %1141, %1151
  %1153 = zext i32 %1152 to i64
  %1154 = getelementptr inbounds double, ptr %1130, i64 %1153
  %1155 = load double, ptr %1154, align 8, !tbaa !52
  %1156 = fneg double %1150
  %1157 = call double @llvm.fmuladd.f64(double %1156, double %1155, double %1145)
  %1158 = add i32 %1144, 1
  %1159 = zext i32 %1158 to i64
  %1160 = icmp ugt i64 %393, %1159
  br i1 %1160, label %1142, label %1161

1161:                                             ; preds = %1142
  %1162 = getelementptr inbounds %"struct.std::pair", ptr %1122, i64 %1133, i32 1
  %1163 = load double, ptr %1162, align 8, !tbaa !35
  %1164 = call double @llvm.fmuladd.f64(double %1157, double %1163, double %1135)
  %1165 = add i32 %1134, 1
  %1166 = zext i32 %1165 to i64
  %1167 = icmp ugt i64 %1126, %1166
  br i1 %1167, label %1132, label %1183

1168:                                             ; preds = %1128, %1168
  %1169 = phi i64 [ %1181, %1168 ], [ 0, %1128 ]
  %1170 = phi i32 [ %1180, %1168 ], [ 0, %1128 ]
  %1171 = phi double [ %1179, %1168 ], [ %1113, %1128 ]
  %1172 = getelementptr inbounds %"struct.std::pair", ptr %1122, i64 %1169
  %1173 = load i32, ptr %1172, align 8, !tbaa !37
  %1174 = zext i32 %1173 to i64
  %1175 = getelementptr inbounds double, ptr %1129, i64 %1174
  %1176 = load double, ptr %1175, align 8, !tbaa !52
  %1177 = getelementptr inbounds %"struct.std::pair", ptr %1122, i64 %1169, i32 1
  %1178 = load double, ptr %1177, align 8, !tbaa !35
  %1179 = call double @llvm.fmuladd.f64(double %1176, double %1178, double %1171)
  %1180 = add i32 %1170, 1
  %1181 = zext i32 %1180 to i64
  %1182 = icmp ugt i64 %1126, %1181
  br i1 %1182, label %1168, label %1183

1183:                                             ; preds = %1161, %1168, %1119, %1112
  %1184 = phi double [ %1113, %1112 ], [ %1113, %1119 ], [ %1179, %1168 ], [ %1164, %1161 ]
  %1185 = fcmp une double %1184, 0.000000e+00
  br i1 %1185, label %1186, label %1209

1186:                                             ; preds = %1183
  %1187 = load i32, ptr %1115, align 8, !tbaa !317
  %1188 = load i32, ptr %761, align 8, !tbaa !61
  %1189 = load ptr, ptr %762, align 8, !tbaa !58
  br label %1190

1190:                                             ; preds = %1190, %1186
  %1191 = phi i32 [ %1188, %1186 ], [ %1192, %1190 ]
  %1192 = add i32 %1191, -1
  %1193 = sext i32 %1192 to i64
  %1194 = getelementptr inbounds i32, ptr %1189, i64 %1193
  %1195 = load i32, ptr %1194, align 4, !tbaa !22
  %1196 = icmp ugt i32 %1195, %1187
  br i1 %1196, label %1190, label %1197

1197:                                             ; preds = %1190
  %1198 = sub i32 %1187, %1195
  %1199 = zext i32 %1198 to i64
  %1200 = zext i32 %1192 to i64
  %1201 = load ptr, ptr %763, align 8, !tbaa !68
  %1202 = getelementptr inbounds %"class.dealii::Vector", ptr %1201, i64 %1200, i32 3
  %1203 = load ptr, ptr %1202, align 8, !tbaa !49
  %1204 = getelementptr inbounds float, ptr %1203, i64 %1199
  %1205 = load float, ptr %1204, align 4, !tbaa !33
  %1206 = fpext float %1205 to double
  %1207 = fadd double %1184, %1206
  %1208 = fptrunc double %1207 to float
  store float %1208, ptr %1204, align 4, !tbaa !33
  br label %1209

1209:                                             ; preds = %1183, %1197, %798
  %1210 = add nuw nsw i64 %791, 1
  %1211 = icmp eq i64 %1210, %788
  br i1 %1211, label %767, label %790

1212:                                             ; preds = %1078
  call void @_ZdlPv(ptr noundef nonnull %749) #23
  br label %1246

1213:                                             ; preds = %771, %769
  %1214 = icmp eq ptr %748, null
  br i1 %1214, label %1216, label %1215

1215:                                             ; preds = %1213
  call void @_ZdlPv(ptr noundef nonnull %748) #23
  br label %1216

1216:                                             ; preds = %1213, %1215
  call void @_ZdlPv(ptr noundef nonnull %664) #23
  %1217 = icmp eq ptr %525, null
  br i1 %1217, label %1219, label %1218

1218:                                             ; preds = %1216
  call void @_ZdlPv(ptr noundef nonnull %525) #23
  br label %1219

1219:                                             ; preds = %1218, %1216
  %1220 = icmp eq ptr %175, null
  br i1 %1220, label %1222, label %1221

1221:                                             ; preds = %1219
  call void @_ZdlPv(ptr noundef nonnull %175) #23
  br label %1222

1222:                                             ; preds = %1221, %1219
  %1223 = load ptr, ptr %7, align 8, !tbaa !321
  %1224 = load ptr, ptr %160, align 8, !tbaa !325
  %1225 = icmp eq ptr %1223, %1224
  br i1 %1225, label %1241, label %1226

1226:                                             ; preds = %1222, %1236
  %1227 = phi ptr [ %1237, %1236 ], [ %1223, %1222 ]
  %1228 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1227, i64 0, i32 2
  %1229 = load ptr, ptr %1228, align 8, !tbaa !320
  %1230 = icmp eq ptr %1229, null
  br i1 %1230, label %1236, label %1231

1231:                                             ; preds = %1226
  %1232 = load ptr, ptr %1229, align 8, !tbaa !32
  %1233 = icmp eq ptr %1232, null
  br i1 %1233, label %1235, label %1234

1234:                                             ; preds = %1231
  call void @_ZdlPv(ptr noundef nonnull %1232) #23
  br label %1235

1235:                                             ; preds = %1234, %1231
  call void @_ZdlPv(ptr noundef nonnull %1229) #23
  store ptr null, ptr %1228, align 8, !tbaa !320
  br label %1236

1236:                                             ; preds = %1235, %1226
  %1237 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1227, i64 1
  %1238 = icmp eq ptr %1237, %1224
  br i1 %1238, label %1239, label %1226

1239:                                             ; preds = %1236
  %1240 = load ptr, ptr %7, align 8, !tbaa !321
  br label %1241

1241:                                             ; preds = %1239, %1222
  %1242 = phi ptr [ %1240, %1239 ], [ %1223, %1222 ]
  %1243 = icmp eq ptr %1242, null
  br i1 %1243, label %1245, label %1244

1244:                                             ; preds = %1241
  call void @_ZdlPv(ptr noundef nonnull %1242) #23
  br label %1245

1245:                                             ; preds = %1241, %1244
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  ret void

1246:                                             ; preds = %1212, %1078
  %1247 = icmp eq ptr %748, null
  br i1 %1247, label %1251, label %1248

1248:                                             ; preds = %776, %1246
  %1249 = phi { ptr, i32 } [ %777, %776 ], [ %1079, %1246 ]
  %1250 = phi ptr [ %742, %776 ], [ %748, %1246 ]
  call void @_ZdlPv(ptr noundef nonnull %1250) #23
  br label %1251

1251:                                             ; preds = %774, %1246, %1248
  %1252 = phi { ptr, i32 } [ %775, %774 ], [ %1079, %1246 ], [ %1249, %1248 ]
  call void @_ZdlPv(ptr noundef nonnull %664) #23
  br label %1253

1253:                                             ; preds = %1251, %772
  %1254 = phi { ptr, i32 } [ %1252, %1251 ], [ %773, %772 ]
  %1255 = icmp eq ptr %525, null
  br i1 %1255, label %1257, label %1256

1256:                                             ; preds = %1253
  call void @_ZdlPv(ptr noundef nonnull %525) #23
  br label %1257

1257:                                             ; preds = %323, %325, %522, %474, %1256, %1253, %642, %424
  %1258 = phi ptr [ %175, %424 ], [ %175, %474 ], [ %175, %522 ], [ %175, %642 ], [ %175, %1253 ], [ %175, %1256 ], [ %212, %323 ], [ %212, %325 ]
  %1259 = phi { ptr, i32 } [ %425, %424 ], [ %475, %474 ], [ %523, %522 ], [ %643, %642 ], [ %1254, %1253 ], [ %1254, %1256 ], [ %324, %323 ], [ %326, %325 ]
  %1260 = icmp eq ptr %1258, null
  br i1 %1260, label %1262, label %1261

1261:                                             ; preds = %1257
  call void @_ZdlPv(ptr noundef nonnull %1258) #23
  br label %1262

1262:                                             ; preds = %1261, %1257
  %1263 = load ptr, ptr %7, align 8, !tbaa !321
  %1264 = load ptr, ptr %160, align 8, !tbaa !325
  %1265 = icmp eq ptr %1263, %1264
  br i1 %1265, label %1281, label %1266

1266:                                             ; preds = %1262, %1276
  %1267 = phi ptr [ %1277, %1276 ], [ %1263, %1262 ]
  %1268 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1267, i64 0, i32 2
  %1269 = load ptr, ptr %1268, align 8, !tbaa !320
  %1270 = icmp eq ptr %1269, null
  br i1 %1270, label %1276, label %1271

1271:                                             ; preds = %1266
  %1272 = load ptr, ptr %1269, align 8, !tbaa !32
  %1273 = icmp eq ptr %1272, null
  br i1 %1273, label %1275, label %1274

1274:                                             ; preds = %1271
  call void @_ZdlPv(ptr noundef nonnull %1272) #23
  br label %1275

1275:                                             ; preds = %1274, %1271
  call void @_ZdlPv(ptr noundef nonnull %1269) #23
  store ptr null, ptr %1268, align 8, !tbaa !320
  br label %1276

1276:                                             ; preds = %1275, %1266
  %1277 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1267, i64 1
  %1278 = icmp eq ptr %1277, %1264
  br i1 %1278, label %1279, label %1266

1279:                                             ; preds = %1276
  %1280 = load ptr, ptr %7, align 8, !tbaa !321
  br label %1281

1281:                                             ; preds = %1279, %1262
  %1282 = phi ptr [ %1280, %1279 ], [ %1263, %1262 ]
  %1283 = icmp eq ptr %1282, null
  br i1 %1283, label %1285, label %1284

1284:                                             ; preds = %1281
  call void @_ZdlPv(ptr noundef nonnull %1282) #23
  br label %1285

1285:                                             ; preds = %1284, %1281, %208
  %1286 = phi { ptr, i32 } [ %207, %208 ], [ %1259, %1281 ], [ %1259, %1284 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  resume { ptr, i32 } %1286

1287:                                             ; preds = %424, %206
  %1288 = landingpad { ptr, i32 }
          catch ptr null
  %1289 = extractvalue { ptr, i32 } %1288, 0
  call void @__clang_call_terminate(ptr %1289) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIdEEEEvRKNS_10FullMatrixIdEERKSt6vectorIjSaIjEERT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(132) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.dealii::Vector.35", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %5) #24
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !311
  %6 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  invoke void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(132) %3, ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %7 unwind label %13

7:                                                ; preds = %4
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !311
  %8 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !60
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  call void @_ZdaPv(ptr noundef nonnull %9) #23
  store ptr null, ptr %8, align 8, !tbaa !60
  br label %12

12:                                               ; preds = %7, %11
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #24
  ret void

13:                                               ; preds = %4
  %14 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %15 unwind label %16

15:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #24
  resume { ptr, i32 } %14

16:                                               ; preds = %13
  %17 = landingpad { ptr, i32 }
          catch ptr null
  %18 = extractvalue { ptr, i32 } %17, 0
  call void @__clang_call_terminate(ptr %18) #25
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(132) %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::vector.178", align 8
  %8 = alloca %"struct.dealii::internals::distributing", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !53
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 1
  %14 = load i32, ptr %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %12, i1 %15, i1 false
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !313
  %19 = load ptr, ptr %3, align 8, !tbaa !58
  %20 = ptrtoint ptr %18 to i64
  %21 = ptrtoint ptr %19 to i64
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 2
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %57, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !314
  %29 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %30 = load i32, ptr %29, align 8, !tbaa !22
  %31 = add i32 %30, 1
  %32 = and i64 %23, 4294967295
  %33 = add nsw i64 %32, -1
  %34 = and i64 %23, 3
  %35 = icmp ult i64 %33, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %26
  %37 = sub nsw i64 %32, %34
  br label %107

38:                                               ; preds = %107, %26
  %39 = phi double [ undef, %26 ], [ %141, %107 ]
  %40 = phi i64 [ 0, %26 ], [ %142, %107 ]
  %41 = phi double [ 0.000000e+00, %26 ], [ %141, %107 ]
  %42 = icmp eq i64 %34, 0
  br i1 %42, label %57, label %43

43:                                               ; preds = %38, %43
  %44 = phi i64 [ %54, %43 ], [ %40, %38 ]
  %45 = phi double [ %53, %43 ], [ %41, %38 ]
  %46 = phi i64 [ %55, %43 ], [ 0, %38 ]
  %47 = trunc i64 %44 to i32
  %48 = mul i32 %31, %47
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds double, ptr %28, i64 %49
  %51 = load double, ptr %50, align 8, !tbaa !52
  %52 = tail call double @llvm.fabs.f64(double %51)
  %53 = fadd double %45, %52
  %54 = add nuw nsw i64 %44, 1
  %55 = add i64 %46, 1
  %56 = icmp eq i64 %55, %34
  br i1 %56, label %57, label %43, !llvm.loop !407

57:                                               ; preds = %38, %43, %6
  %58 = phi double [ 0.000000e+00, %6 ], [ %39, %38 ], [ %53, %43 ]
  %59 = uitofp i32 %24 to double
  %60 = fdiv double %58, %59
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %61 = and i64 %23, 4294967295
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #24
  store i32 -1, ptr %8, align 8, !tbaa !317
  %62 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 1
  store i32 -1, ptr %62, align 4, !tbaa !319
  %63 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 2
  store ptr null, ptr %63, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %148

67:                                               ; preds = %57
  %68 = shl nuw nsw i64 %61, 4
  %69 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %68) #21
          to label %70 unwind label %197

70:                                               ; preds = %67
  store ptr %69, ptr %7, align 8, !tbaa !321
  %71 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %69, i64 %61
  %72 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %71, ptr %72, align 8, !tbaa !323
  %73 = and i64 %23, 3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %70, %75
  %76 = phi ptr [ %82, %75 ], [ %69, %70 ]
  %77 = phi i64 [ %81, %75 ], [ %61, %70 ]
  %78 = phi i64 [ %83, %75 ], [ 0, %70 ]
  %79 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 0, i32 2
  store ptr null, ptr %79, align 8, !tbaa !320
  store i32 -1, ptr %76, align 8, !tbaa !317
  %80 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 0, i32 1
  store i32 -1, ptr %80, align 4, !tbaa !319
  %81 = add nsw i64 %77, -1
  %82 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 1
  %83 = add i64 %78, 1
  %84 = icmp eq i64 %83, %73
  br i1 %84, label %85, label %75, !llvm.loop !408

85:                                               ; preds = %75, %70
  %86 = phi ptr [ undef, %70 ], [ %82, %75 ]
  %87 = phi ptr [ %69, %70 ], [ %82, %75 ]
  %88 = phi i64 [ %61, %70 ], [ %81, %75 ]
  %89 = icmp ult i64 %61, 4
  br i1 %89, label %145, label %90

90:                                               ; preds = %85, %90
  %91 = phi ptr [ %105, %90 ], [ %87, %85 ]
  %92 = phi i64 [ %104, %90 ], [ %88, %85 ]
  %93 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 0, i32 2
  store ptr null, ptr %93, align 8, !tbaa !320
  store i32 -1, ptr %91, align 8, !tbaa !317
  %94 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 0, i32 1
  store i32 -1, ptr %94, align 4, !tbaa !319
  %95 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1
  %96 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1, i32 2
  store ptr null, ptr %96, align 8, !tbaa !320
  store i32 -1, ptr %95, align 8, !tbaa !317
  %97 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1, i32 1
  store i32 -1, ptr %97, align 4, !tbaa !319
  %98 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2
  %99 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2, i32 2
  store ptr null, ptr %99, align 8, !tbaa !320
  store i32 -1, ptr %98, align 8, !tbaa !317
  %100 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2, i32 1
  store i32 -1, ptr %100, align 4, !tbaa !319
  %101 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3
  %102 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3, i32 2
  store ptr null, ptr %102, align 8, !tbaa !320
  store i32 -1, ptr %101, align 8, !tbaa !317
  %103 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3, i32 1
  store i32 -1, ptr %103, align 4, !tbaa !319
  %104 = add nsw i64 %92, -4
  %105 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 4
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %145, label %90

107:                                              ; preds = %107, %36
  %108 = phi i64 [ 0, %36 ], [ %142, %107 ]
  %109 = phi double [ 0.000000e+00, %36 ], [ %141, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %143, %107 ]
  %111 = trunc i64 %108 to i32
  %112 = mul i32 %31, %111
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds double, ptr %28, i64 %113
  %115 = load double, ptr %114, align 8, !tbaa !52
  %116 = tail call double @llvm.fabs.f64(double %115)
  %117 = fadd double %109, %116
  %118 = trunc i64 %108 to i32
  %119 = or i32 %118, 1
  %120 = mul i32 %31, %119
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds double, ptr %28, i64 %121
  %123 = load double, ptr %122, align 8, !tbaa !52
  %124 = tail call double @llvm.fabs.f64(double %123)
  %125 = fadd double %117, %124
  %126 = trunc i64 %108 to i32
  %127 = or i32 %126, 2
  %128 = mul i32 %31, %127
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %28, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !52
  %132 = tail call double @llvm.fabs.f64(double %131)
  %133 = fadd double %125, %132
  %134 = trunc i64 %108 to i32
  %135 = or i32 %134, 3
  %136 = mul i32 %31, %135
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds double, ptr %28, i64 %137
  %139 = load double, ptr %138, align 8, !tbaa !52
  %140 = tail call double @llvm.fabs.f64(double %139)
  %141 = fadd double %133, %140
  %142 = add nuw nsw i64 %108, 4
  %143 = add i64 %110, 4
  %144 = icmp eq i64 %143, %37
  br i1 %144, label %38, label %107

145:                                              ; preds = %90, %85
  %146 = phi ptr [ %86, %85 ], [ %105, %90 ]
  %147 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %146, ptr %147, align 8, !tbaa !325
  br label %148

148:                                              ; preds = %145, %65
  %149 = phi ptr [ null, %65 ], [ %69, %145 ]
  %150 = phi ptr [ null, %65 ], [ %146, %145 ]
  %151 = phi ptr [ %66, %65 ], [ %147, %145 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br i1 %25, label %162, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %154 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %155 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %156 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %157 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %158 = and i64 %23, 4294967295
  br label %200

159:                                              ; preds = %307
  %160 = load ptr, ptr %151, align 8, !tbaa !21
  %161 = load ptr, ptr %7, align 8, !tbaa !321
  br label %162

162:                                              ; preds = %159, %148
  %163 = phi ptr [ %149, %148 ], [ %161, %159 ]
  %164 = phi ptr [ %150, %148 ], [ %160, %159 ]
  %165 = phi ptr [ null, %148 ], [ %309, %159 ]
  %166 = phi ptr [ null, %148 ], [ %310, %159 ]
  %167 = phi i32 [ 0, %148 ], [ %311, %159 ]
  %168 = zext i32 %167 to i64
  store i32 -1, ptr %9, align 8, !tbaa !317
  %169 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %169, align 4, !tbaa !319
  %170 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %170, align 8, !tbaa !320
  %171 = ptrtoint ptr %164 to i64
  %172 = ptrtoint ptr %163 to i64
  %173 = sub i64 %171, %172
  %174 = ashr exact i64 %173, 4
  %175 = icmp ult i64 %174, %168
  br i1 %175, label %176, label %178

176:                                              ; preds = %162
  %177 = sub nsw i64 %168, %174
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %164, i64 noundef %177, ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %318 unwind label %409

178:                                              ; preds = %162
  %179 = icmp ugt i64 %174, %168
  br i1 %179, label %180, label %318

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %163, i64 %168
  %182 = icmp eq ptr %164, %181
  br i1 %182, label %318, label %183

183:                                              ; preds = %180, %193
  %184 = phi ptr [ %194, %193 ], [ %181, %180 ]
  %185 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %184, i64 0, i32 2
  %186 = load ptr, ptr %185, align 8, !tbaa !320
  %187 = icmp eq ptr %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %183
  %189 = load ptr, ptr %186, align 8, !tbaa !32
  %190 = icmp eq ptr %189, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  tail call void @_ZdlPv(ptr noundef nonnull %189) #23
  br label %192

192:                                              ; preds = %191, %188
  tail call void @_ZdlPv(ptr noundef nonnull %186) #23
  store ptr null, ptr %185, align 8, !tbaa !320
  br label %193

193:                                              ; preds = %192, %183
  %194 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %184, i64 1
  %195 = icmp eq ptr %194, %164
  br i1 %195, label %196, label %183

196:                                              ; preds = %193
  store ptr %181, ptr %151, align 8, !tbaa !325
  br label %318

197:                                              ; preds = %67
  %198 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %8)
          to label %199 unwind label %931

199:                                              ; preds = %197
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br label %929

200:                                              ; preds = %152, %307
  %201 = phi i64 [ 0, %152 ], [ %312, %307 ]
  %202 = phi i32 [ 0, %152 ], [ %311, %307 ]
  %203 = phi ptr [ null, %152 ], [ %310, %307 ]
  %204 = phi ptr [ null, %152 ], [ %309, %307 ]
  %205 = phi ptr [ null, %152 ], [ %308, %307 ]
  %206 = load ptr, ptr %154, align 8, !tbaa !55
  %207 = load i32, ptr %155, align 8, !tbaa !57
  %208 = load ptr, ptr %153, align 8, !tbaa !55
  %209 = ptrtoint ptr %206 to i64
  %210 = ptrtoint ptr %208 to i64
  %211 = sub i64 %209, %210
  %212 = shl nsw i64 %211, 3
  %213 = zext i32 %207 to i64
  %214 = add nsw i64 %212, %213
  %215 = load ptr, ptr %3, align 8, !tbaa !58
  %216 = getelementptr inbounds i32, ptr %215, i64 %201
  %217 = load i32, ptr %216, align 4, !tbaa !22
  %218 = zext i32 %217 to i64
  %219 = icmp ugt i64 %214, %218
  br i1 %219, label %220, label %230

220:                                              ; preds = %200
  %221 = lshr i32 %217, 6
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds i64, ptr %208, i64 %222
  %224 = and i32 %217, 63
  %225 = zext i32 %224 to i64
  %226 = shl nuw i64 1, %225
  %227 = load i64, ptr %223, align 8, !tbaa !42
  %228 = and i64 %227, %226
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %237

230:                                              ; preds = %220, %200
  %231 = zext i32 %202 to i64
  %232 = load ptr, ptr %7, align 8, !tbaa !321
  %233 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %232, i64 %231
  store i32 %217, ptr %233, align 8, !tbaa !317
  %234 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %232, i64 %231, i32 1
  %235 = trunc i64 %201 to i32
  store i32 %235, ptr %234, align 4, !tbaa !319
  %236 = add i32 %202, 1
  br label %307

237:                                              ; preds = %220
  %238 = load ptr, ptr %156, align 8, !tbaa !21
  %239 = load ptr, ptr %157, align 8, !tbaa !21
  %240 = ptrtoint ptr %239 to i64
  %241 = ptrtoint ptr %238 to i64
  %242 = sub i64 %240, %241
  %243 = icmp sgt i64 %242, 0
  br i1 %243, label %244, label %259

244:                                              ; preds = %237
  %245 = udiv exact i64 %242, 40
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ %245, %244 ], [ %257, %246 ]
  %248 = phi ptr [ %238, %244 ], [ %256, %246 ]
  %249 = lshr i64 %247, 1
  %250 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %248, i64 %249
  %251 = load i32, ptr %250, align 8, !tbaa !24
  %252 = icmp ult i32 %251, %217
  %253 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %250, i64 1
  %254 = xor i64 %249, -1
  %255 = add nsw i64 %247, %254
  %256 = select i1 %252, ptr %253, ptr %248
  %257 = select i1 %252, i64 %255, i64 %249
  %258 = icmp sgt i64 %257, 0
  br i1 %258, label %246, label %259

259:                                              ; preds = %246, %237
  %260 = phi ptr [ %238, %237 ], [ %256, %246 ]
  %261 = icmp eq ptr %204, %205
  br i1 %261, label %265, label %262

262:                                              ; preds = %259
  %263 = trunc i64 %201 to i32
  store i32 %263, ptr %204, align 8
  %264 = getelementptr inbounds i8, ptr %204, i64 8
  store ptr %260, ptr %264, align 8
  br label %302

265:                                              ; preds = %259
  %266 = ptrtoint ptr %204 to i64
  %267 = ptrtoint ptr %203 to i64
  %268 = sub i64 %266, %267
  %269 = icmp eq i64 %268, 9223372036854775792
  br i1 %269, label %270, label %272

270:                                              ; preds = %265
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %271 unwind label %316

271:                                              ; preds = %270
  unreachable

272:                                              ; preds = %265
  %273 = ashr exact i64 %268, 4
  %274 = tail call i64 @llvm.umax.i64(i64 %273, i64 1)
  %275 = add i64 %274, %273
  %276 = icmp ult i64 %275, %273
  %277 = icmp ugt i64 %275, 576460752303423487
  %278 = or i1 %276, %277
  %279 = select i1 %278, i64 576460752303423487, i64 %275
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %284, label %281

281:                                              ; preds = %272
  %282 = shl nuw nsw i64 %279, 4
  %283 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %282) #21
          to label %284 unwind label %314

284:                                              ; preds = %281, %272
  %285 = phi ptr [ null, %272 ], [ %283, %281 ]
  %286 = getelementptr inbounds %"struct.std::pair.188", ptr %285, i64 %273
  %287 = trunc i64 %201 to i32
  store i32 %287, ptr %286, align 8
  %288 = getelementptr inbounds i8, ptr %286, i64 8
  store ptr %260, ptr %288, align 8
  %289 = icmp eq ptr %203, %204
  br i1 %289, label %296, label %290

290:                                              ; preds = %284, %290
  %291 = phi ptr [ %294, %290 ], [ %285, %284 ]
  %292 = phi ptr [ %293, %290 ], [ %203, %284 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %291, ptr noundef nonnull align 8 dereferenceable(16) %292, i64 16, i1 false)
  %293 = getelementptr inbounds %"struct.std::pair.188", ptr %292, i64 1
  %294 = getelementptr inbounds %"struct.std::pair.188", ptr %291, i64 1
  %295 = icmp eq ptr %293, %204
  br i1 %295, label %296, label %290

296:                                              ; preds = %290, %284
  %297 = phi ptr [ %285, %284 ], [ %294, %290 ]
  %298 = icmp eq ptr %203, null
  br i1 %298, label %300, label %299

299:                                              ; preds = %296
  tail call void @_ZdlPv(ptr noundef nonnull %203) #23
  br label %300

300:                                              ; preds = %299, %296
  %301 = getelementptr inbounds %"struct.std::pair.188", ptr %285, i64 %279
  br label %302

302:                                              ; preds = %300, %262
  %303 = phi ptr [ %301, %300 ], [ %205, %262 ]
  %304 = phi ptr [ %297, %300 ], [ %204, %262 ]
  %305 = phi ptr [ %285, %300 ], [ %203, %262 ]
  %306 = getelementptr inbounds %"struct.std::pair.188", ptr %304, i64 1
  br label %307

307:                                              ; preds = %302, %230
  %308 = phi ptr [ %303, %302 ], [ %205, %230 ]
  %309 = phi ptr [ %306, %302 ], [ %204, %230 ]
  %310 = phi ptr [ %305, %302 ], [ %203, %230 ]
  %311 = phi i32 [ %202, %302 ], [ %236, %230 ]
  %312 = add nuw nsw i64 %201, 1
  %313 = icmp eq i64 %312, %158
  br i1 %313, label %159, label %200

314:                                              ; preds = %281
  %315 = landingpad { ptr, i32 }
          cleanup
  br label %923

316:                                              ; preds = %270
  %317 = landingpad { ptr, i32 }
          cleanup
  br label %923

318:                                              ; preds = %196, %180, %178, %176
  %319 = load ptr, ptr %170, align 8, !tbaa !320
  %320 = icmp eq ptr %319, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %318
  %322 = load ptr, ptr %319, align 8, !tbaa !32
  %323 = icmp eq ptr %322, null
  br i1 %323, label %325, label %324

324:                                              ; preds = %321
  call void @_ZdlPv(ptr noundef nonnull %322) #23
  br label %325

325:                                              ; preds = %324, %321
  call void @_ZdlPv(ptr noundef nonnull %319) #23
  store ptr null, ptr %170, align 8, !tbaa !320
  br label %326

326:                                              ; preds = %325, %318
  %327 = load ptr, ptr %151, align 8, !tbaa !325
  %328 = load ptr, ptr %7, align 8, !tbaa !321
  %329 = ptrtoint ptr %327 to i64
  %330 = ptrtoint ptr %328 to i64
  %331 = sub i64 %329, %330
  %332 = lshr exact i64 %331, 4
  %333 = trunc i64 %332 to i32
  %334 = icmp ult i32 %333, 2
  br i1 %334, label %380, label %337

335:                                              ; preds = %376, %337
  %336 = icmp ult i32 %338, 4
  br i1 %336, label %380, label %337

337:                                              ; preds = %326, %335
  %338 = phi i32 [ %339, %335 ], [ %333, %326 ]
  %339 = lshr i32 %338, 1
  %340 = icmp ult i32 %339, %333
  br i1 %340, label %341, label %335

341:                                              ; preds = %337
  %342 = zext i32 %339 to i64
  br label %343

343:                                              ; preds = %376, %341
  %344 = phi i64 [ %342, %341 ], [ %377, %376 ]
  %345 = sub nuw nsw i64 %344, %342
  %346 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %344
  %347 = load <2 x i32>, ptr %346, align 8, !tbaa !22
  %348 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %345
  %349 = load i32, ptr %348, align 8, !tbaa !317
  %350 = extractelement <2 x i32> %347, i64 0
  %351 = icmp ugt i32 %349, %350
  br i1 %351, label %352, label %376

352:                                              ; preds = %343
  %353 = icmp ult i64 %344, %342
  %354 = trunc i64 %344 to i32
  br i1 %353, label %372, label %355

355:                                              ; preds = %352
  %356 = trunc i64 %345 to i32
  br label %357

357:                                              ; preds = %364, %355
  %358 = phi i32 [ %359, %364 ], [ %354, %355 ]
  %359 = phi i32 [ %370, %364 ], [ %356, %355 ]
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %360
  %362 = load i32, ptr %361, align 8, !tbaa !317
  %363 = icmp ugt i32 %362, %350
  br i1 %363, label %364, label %372

364:                                              ; preds = %357
  %365 = zext i32 %358 to i64
  %366 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %365
  store i32 %362, ptr %366, align 8, !tbaa !317
  %367 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %360, i32 1
  %368 = load i32, ptr %367, align 4, !tbaa !319
  %369 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %365, i32 1
  store i32 %368, ptr %369, align 4, !tbaa !319
  %370 = sub i32 %359, %339
  %371 = icmp ult i32 %359, %339
  br i1 %371, label %372, label %357

372:                                              ; preds = %364, %357, %352
  %373 = phi i32 [ %354, %352 ], [ %358, %357 ], [ %359, %364 ]
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %374
  store <2 x i32> %347, ptr %375, align 8, !tbaa !22
  br label %376

376:                                              ; preds = %372, %343
  %377 = add nuw nsw i64 %344, 1
  %378 = trunc i64 %377 to i32
  %379 = icmp eq i32 %333, %378
  br i1 %379, label %335, label %343

380:                                              ; preds = %335, %326
  %381 = ptrtoint ptr %165 to i64
  %382 = ptrtoint ptr %166 to i64
  %383 = sub i64 %381, %382
  %384 = ashr exact i64 %383, 4
  %385 = and i64 %383, 68719476720
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %397, label %387

387:                                              ; preds = %380
  %388 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %389 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %390 = and i64 %384, 4294967295
  br label %411

391:                                              ; preds = %466
  %392 = load ptr, ptr %151, align 8, !tbaa !325
  %393 = load ptr, ptr %7, align 8, !tbaa !321
  %394 = ptrtoint ptr %392 to i64
  %395 = ptrtoint ptr %393 to i64
  %396 = sub i64 %394, %395
  br label %397

397:                                              ; preds = %391, %380
  %398 = phi i64 [ %396, %391 ], [ %331, %380 ]
  %399 = phi i8 [ %428, %391 ], [ 0, %380 ]
  %400 = ashr exact i64 %398, 4
  %401 = and i64 %400, 4294967295
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %472, label %403

403:                                              ; preds = %397
  %404 = shl nuw nsw i64 %401, 2
  %405 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %404) #21
          to label %406 unwind label %494

406:                                              ; preds = %403
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %405, i8 0, i64 %404, i1 false), !tbaa !22
  %407 = shl nuw nsw i64 %401, 3
  %408 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %407) #21
          to label %471 unwind label %496

409:                                              ; preds = %176
  %410 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %923 unwind label %931

411:                                              ; preds = %387, %466
  %412 = phi i64 [ 0, %387 ], [ %467, %466 ]
  %413 = phi i8 [ 0, %387 ], [ %428, %466 ]
  %414 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %412
  %415 = load i32, ptr %414, align 8, !tbaa !326
  %416 = zext i32 %415 to i64
  %417 = load ptr, ptr %3, align 8, !tbaa !58
  %418 = getelementptr inbounds i32, ptr %417, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !22
  %420 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %412, i32 1
  %421 = load ptr, ptr %420, align 8, !tbaa !328
  %422 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %421, i64 0, i32 1
  %423 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %421, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %424 = load ptr, ptr %423, align 8, !tbaa !31
  %425 = load ptr, ptr %422, align 8, !tbaa !32
  %426 = icmp eq ptr %424, %425
  br i1 %426, label %427, label %440

427:                                              ; preds = %448, %411
  %428 = phi i8 [ %413, %411 ], [ 1, %448 ]
  %429 = load ptr, ptr %388, align 8, !tbaa !314
  %430 = load i32, ptr %389, align 8, !tbaa !22
  %431 = add i32 %430, 1
  %432 = mul i32 %431, %415
  %433 = zext i32 %432 to i64
  %434 = getelementptr inbounds double, ptr %429, i64 %433
  %435 = load double, ptr %434, align 8, !tbaa !52
  %436 = fcmp une double %435, 0.000000e+00
  %437 = call double @llvm.fabs.f64(double %435)
  %438 = select i1 %436, double %437, double %60
  %439 = fcmp oeq double %438, 0.000000e+00
  br i1 %439, label %466, label %460

440:                                              ; preds = %411, %448
  %441 = phi ptr [ %452, %448 ], [ %425, %411 ]
  %442 = phi i64 [ %450, %448 ], [ 0, %411 ]
  %443 = phi i32 [ %449, %448 ], [ 0, %411 ]
  %444 = getelementptr inbounds %"struct.std::pair", ptr %441, i64 %442
  %445 = load i32, ptr %444, align 8, !tbaa !37
  %446 = getelementptr inbounds %"struct.std::pair", ptr %441, i64 %442, i32 1
  %447 = load double, ptr %446, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %445, i32 %415, double %447)
          to label %448 unwind label %458

448:                                              ; preds = %440
  %449 = add i32 %443, 1
  %450 = zext i32 %449 to i64
  %451 = load ptr, ptr %423, align 8, !tbaa !31
  %452 = load ptr, ptr %422, align 8, !tbaa !32
  %453 = ptrtoint ptr %451 to i64
  %454 = ptrtoint ptr %452 to i64
  %455 = sub i64 %453, %454
  %456 = ashr exact i64 %455, 4
  %457 = icmp ugt i64 %456, %450
  br i1 %457, label %440, label %427

458:                                              ; preds = %440
  %459 = landingpad { ptr, i32 }
          cleanup
  br label %923

460:                                              ; preds = %427
  %461 = invoke noundef ptr @_ZN6dealii14SparseMatrixEZIdE8allocateEjj(ptr noundef nonnull align 8 dereferenceable(132) %4, i32 noundef %419, i32 noundef %419)
          to label %462 unwind label %469

462:                                              ; preds = %460
  %463 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %461, i64 0, i32 1
  %464 = load double, ptr %463, align 8, !tbaa !409
  %465 = fadd double %438, %464
  store double %465, ptr %463, align 8, !tbaa !409
  br label %466

466:                                              ; preds = %462, %427
  %467 = add nuw nsw i64 %412, 1
  %468 = icmp eq i64 %467, %390
  br i1 %468, label %391, label %411

469:                                              ; preds = %460
  %470 = landingpad { ptr, i32 }
          cleanup
  br label %923

471:                                              ; preds = %406
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %408, i8 0, i64 %407, i1 false), !tbaa !52
  br label %472

472:                                              ; preds = %471, %397
  %473 = phi ptr [ null, %397 ], [ %405, %471 ]
  %474 = phi ptr [ null, %397 ], [ %408, %471 ]
  %475 = and i64 %398, 68719476720
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %491, label %477

477:                                              ; preds = %472
  %478 = and i8 %399, 1
  %479 = icmp eq i8 %478, 0
  %480 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %481 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %482 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %483 = icmp eq ptr %165, %166
  %484 = ptrtoint ptr %473 to i64
  %485 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 3
  %486 = and i64 %400, 4294967295
  %487 = and i64 %400, 1
  %488 = icmp eq i64 %486, 1
  %489 = sub nsw i64 %486, %487
  %490 = icmp eq i64 %487, 0
  br label %498

491:                                              ; preds = %887, %472
  %492 = icmp eq ptr %474, null
  br i1 %492, label %890, label %493

493:                                              ; preds = %491
  call void @_ZdlPv(ptr noundef nonnull %474) #23
  br label %890

494:                                              ; preds = %403
  %495 = landingpad { ptr, i32 }
          cleanup
  br label %923

496:                                              ; preds = %406
  %497 = landingpad { ptr, i32 }
          cleanup
  br label %920

498:                                              ; preds = %477, %887
  %499 = phi i64 [ 0, %477 ], [ %888, %887 ]
  %500 = load ptr, ptr %7, align 8, !tbaa !321
  %501 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %499
  %502 = load i32, ptr %501, align 8, !tbaa !317
  %503 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %499, i32 1
  %504 = load i32, ptr %503, align 4, !tbaa !319
  br i1 %479, label %505, label %589

505:                                              ; preds = %498
  %506 = load ptr, ptr %480, align 8, !tbaa !314
  %507 = load i32, ptr %481, align 8, !tbaa !22
  %508 = mul i32 %507, %504
  %509 = zext i32 %508 to i64
  %510 = getelementptr inbounds double, ptr %506, i64 %509
  br i1 %488, label %511, label %529

511:                                              ; preds = %560, %505
  %512 = phi ptr [ undef, %505 ], [ %561, %560 ]
  %513 = phi i64 [ 0, %505 ], [ %563, %560 ]
  %514 = phi ptr [ %474, %505 ], [ %562, %560 ]
  %515 = phi ptr [ %473, %505 ], [ %561, %560 ]
  br i1 %490, label %527, label %516

516:                                              ; preds = %511
  %517 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %513, i32 1
  %518 = load i32, ptr %517, align 4, !tbaa !319
  %519 = zext i32 %518 to i64
  %520 = getelementptr inbounds double, ptr %510, i64 %519
  %521 = load double, ptr %520, align 8, !tbaa !52
  %522 = fcmp une double %521, 0.000000e+00
  br i1 %522, label %523, label %527

523:                                              ; preds = %516
  %524 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %513
  store double %521, ptr %514, align 8, !tbaa !52
  %525 = load i32, ptr %524, align 8, !tbaa !317
  %526 = getelementptr inbounds i32, ptr %515, i64 1
  store i32 %525, ptr %515, align 4, !tbaa !22
  br label %527

527:                                              ; preds = %516, %523, %511
  %528 = phi ptr [ %512, %511 ], [ %526, %523 ], [ %515, %516 ]
  br i1 %16, label %851, label %566

529:                                              ; preds = %505, %560
  %530 = phi i64 [ %563, %560 ], [ 0, %505 ]
  %531 = phi ptr [ %562, %560 ], [ %474, %505 ]
  %532 = phi ptr [ %561, %560 ], [ %473, %505 ]
  %533 = phi i64 [ %564, %560 ], [ 0, %505 ]
  %534 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %530, i32 1
  %535 = load i32, ptr %534, align 4, !tbaa !319
  %536 = zext i32 %535 to i64
  %537 = getelementptr inbounds double, ptr %510, i64 %536
  %538 = load double, ptr %537, align 8, !tbaa !52
  %539 = fcmp une double %538, 0.000000e+00
  br i1 %539, label %540, label %545

540:                                              ; preds = %529
  %541 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %530
  %542 = getelementptr inbounds double, ptr %531, i64 1
  store double %538, ptr %531, align 8, !tbaa !52
  %543 = load i32, ptr %541, align 8, !tbaa !317
  %544 = getelementptr inbounds i32, ptr %532, i64 1
  store i32 %543, ptr %532, align 4, !tbaa !22
  br label %545

545:                                              ; preds = %540, %529
  %546 = phi ptr [ %544, %540 ], [ %532, %529 ]
  %547 = phi ptr [ %542, %540 ], [ %531, %529 ]
  %548 = or i64 %530, 1
  %549 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %548, i32 1
  %550 = load i32, ptr %549, align 4, !tbaa !319
  %551 = zext i32 %550 to i64
  %552 = getelementptr inbounds double, ptr %510, i64 %551
  %553 = load double, ptr %552, align 8, !tbaa !52
  %554 = fcmp une double %553, 0.000000e+00
  br i1 %554, label %555, label %560

555:                                              ; preds = %545
  %556 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %548
  %557 = getelementptr inbounds double, ptr %547, i64 1
  store double %553, ptr %547, align 8, !tbaa !52
  %558 = load i32, ptr %556, align 8, !tbaa !317
  %559 = getelementptr inbounds i32, ptr %546, i64 1
  store i32 %558, ptr %546, align 4, !tbaa !22
  br label %560

560:                                              ; preds = %555, %545
  %561 = phi ptr [ %559, %555 ], [ %546, %545 ]
  %562 = phi ptr [ %557, %555 ], [ %547, %545 ]
  %563 = add nuw nsw i64 %530, 2
  %564 = add i64 %533, 2
  %565 = icmp eq i64 %564, %489
  br i1 %565, label %511, label %529

566:                                              ; preds = %527
  %567 = load ptr, ptr %482, align 8, !tbaa !60
  %568 = zext i32 %504 to i64
  %569 = getelementptr inbounds double, ptr %567, i64 %568
  %570 = load double, ptr %569, align 8, !tbaa !52
  br i1 %483, label %851, label %571

571:                                              ; preds = %566, %571
  %572 = phi i64 [ %587, %571 ], [ 0, %566 ]
  %573 = phi i32 [ %586, %571 ], [ 0, %566 ]
  %574 = phi double [ %585, %571 ], [ %570, %566 ]
  %575 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %572
  %576 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %572, i32 1
  %577 = load ptr, ptr %576, align 8, !tbaa !328
  %578 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %577, i64 0, i32 2
  %579 = load double, ptr %578, align 8, !tbaa !48
  %580 = load i32, ptr %575, align 8, !tbaa !326
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds double, ptr %510, i64 %581
  %583 = load double, ptr %582, align 8, !tbaa !52
  %584 = fneg double %579
  %585 = call double @llvm.fmuladd.f64(double %584, double %583, double %574)
  %586 = add i32 %573, 1
  %587 = zext i32 %586 to i64
  %588 = icmp ugt i64 %384, %587
  br i1 %588, label %571, label %851

589:                                              ; preds = %498
  %590 = icmp eq i32 %504, -1
  %591 = load ptr, ptr %480, align 8
  %592 = load i32, ptr %481, align 8
  %593 = mul i32 %592, %504
  %594 = zext i32 %593 to i64
  %595 = getelementptr inbounds double, ptr %591, i64 %594
  %596 = select i1 %590, ptr null, ptr %595
  %597 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %499, i32 2
  %598 = load ptr, ptr %597, align 8, !tbaa !320
  %599 = icmp eq ptr %598, null
  %600 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %598, i64 0, i32 1
  br label %602

601:                                              ; preds = %770
  br i1 %16, label %851, label %775

602:                                              ; preds = %589, %770
  %603 = phi i64 [ 0, %589 ], [ %773, %770 ]
  %604 = phi ptr [ %474, %589 ], [ %772, %770 ]
  %605 = phi ptr [ %473, %589 ], [ %771, %770 ]
  %606 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %603
  %607 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %603, i32 1
  %608 = load i32, ptr %607, align 4, !tbaa !319
  br i1 %590, label %644, label %609

609:                                              ; preds = %602
  %610 = icmp eq i32 %608, -1
  br i1 %610, label %615, label %611

611:                                              ; preds = %609
  %612 = zext i32 %608 to i64
  %613 = getelementptr inbounds double, ptr %595, i64 %612
  %614 = load double, ptr %613, align 8, !tbaa !52
  br label %615

615:                                              ; preds = %609, %611
  %616 = phi double [ %614, %611 ], [ 0.000000e+00, %609 ]
  %617 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %603, i32 2
  %618 = load ptr, ptr %617, align 8, !tbaa !320
  %619 = icmp eq ptr %618, null
  br i1 %619, label %644, label %620

620:                                              ; preds = %615
  %621 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %618, i64 0, i32 1
  %622 = load ptr, ptr %621, align 8, !tbaa !31
  %623 = load ptr, ptr %618, align 8, !tbaa !32
  %624 = ptrtoint ptr %622 to i64
  %625 = ptrtoint ptr %623 to i64
  %626 = sub i64 %624, %625
  %627 = ashr exact i64 %626, 4
  %628 = icmp eq ptr %622, %623
  br i1 %628, label %644, label %629

629:                                              ; preds = %620, %629
  %630 = phi i64 [ %642, %629 ], [ 0, %620 ]
  %631 = phi i32 [ %641, %629 ], [ 0, %620 ]
  %632 = phi double [ %640, %629 ], [ %616, %620 ]
  %633 = getelementptr inbounds %"struct.std::pair", ptr %623, i64 %630
  %634 = load i32, ptr %633, align 8, !tbaa !37
  %635 = zext i32 %634 to i64
  %636 = getelementptr inbounds double, ptr %596, i64 %635
  %637 = load double, ptr %636, align 8, !tbaa !52
  %638 = getelementptr inbounds %"struct.std::pair", ptr %623, i64 %630, i32 1
  %639 = load double, ptr %638, align 8, !tbaa !35
  %640 = call double @llvm.fmuladd.f64(double %637, double %639, double %632)
  %641 = add i32 %631, 1
  %642 = zext i32 %641 to i64
  %643 = icmp ugt i64 %627, %642
  br i1 %643, label %629, label %644

644:                                              ; preds = %629, %620, %602, %615
  %645 = phi double [ %616, %615 ], [ 0.000000e+00, %602 ], [ %616, %620 ], [ %640, %629 ]
  br i1 %599, label %763, label %646

646:                                              ; preds = %644
  %647 = load ptr, ptr %600, align 8, !tbaa !31
  %648 = load ptr, ptr %598, align 8, !tbaa !32
  %649 = ptrtoint ptr %647 to i64
  %650 = ptrtoint ptr %648 to i64
  %651 = sub i64 %649, %650
  %652 = ashr exact i64 %651, 4
  %653 = icmp eq ptr %647, %648
  br i1 %653, label %763, label %654

654:                                              ; preds = %646
  %655 = icmp eq i32 %608, -1
  %656 = load ptr, ptr %480, align 8
  %657 = load i32, ptr %481, align 8
  %658 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %500, i64 %603, i32 2
  %659 = load ptr, ptr %658, align 8, !tbaa !320
  %660 = icmp eq ptr %659, null
  br i1 %660, label %661, label %689

661:                                              ; preds = %654
  br i1 %655, label %662, label %672

662:                                              ; preds = %661, %662
  %663 = phi i64 [ %670, %662 ], [ 0, %661 ]
  %664 = phi i32 [ %669, %662 ], [ 0, %661 ]
  %665 = phi double [ %668, %662 ], [ %645, %661 ]
  %666 = getelementptr inbounds %"struct.std::pair", ptr %648, i64 %663, i32 1
  %667 = load double, ptr %666, align 8, !tbaa !35
  %668 = call double @llvm.fmuladd.f64(double %667, double 0.000000e+00, double %665)
  %669 = add i32 %664, 1
  %670 = zext i32 %669 to i64
  %671 = icmp ugt i64 %652, %670
  br i1 %671, label %662, label %763

672:                                              ; preds = %661, %672
  %673 = phi i64 [ %687, %672 ], [ 0, %661 ]
  %674 = phi i32 [ %686, %672 ], [ 0, %661 ]
  %675 = phi double [ %685, %672 ], [ %645, %661 ]
  %676 = getelementptr inbounds %"struct.std::pair", ptr %648, i64 %673
  %677 = load i32, ptr %676, align 8, !tbaa !37
  %678 = mul i32 %657, %677
  %679 = add i32 %678, %608
  %680 = zext i32 %679 to i64
  %681 = getelementptr inbounds double, ptr %656, i64 %680
  %682 = load double, ptr %681, align 8, !tbaa !52
  %683 = getelementptr inbounds %"struct.std::pair", ptr %648, i64 %673, i32 1
  %684 = load double, ptr %683, align 8, !tbaa !35
  %685 = call double @llvm.fmuladd.f64(double %682, double %684, double %675)
  %686 = add i32 %674, 1
  %687 = zext i32 %686 to i64
  %688 = icmp ugt i64 %652, %687
  br i1 %688, label %672, label %763

689:                                              ; preds = %654
  %690 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %659, i64 0, i32 1
  %691 = load ptr, ptr %690, align 8, !tbaa !31
  %692 = load ptr, ptr %659, align 8, !tbaa !32
  %693 = ptrtoint ptr %691 to i64
  %694 = ptrtoint ptr %692 to i64
  %695 = sub i64 %693, %694
  %696 = ashr exact i64 %695, 4
  %697 = icmp eq ptr %691, %692
  br i1 %697, label %735, label %698

698:                                              ; preds = %689, %728
  %699 = phi i64 [ %733, %728 ], [ 0, %689 ]
  %700 = phi i32 [ %732, %728 ], [ 0, %689 ]
  %701 = phi double [ %731, %728 ], [ %645, %689 ]
  %702 = getelementptr inbounds %"struct.std::pair", ptr %648, i64 %699
  %703 = load i32, ptr %702, align 8, !tbaa !37
  %704 = mul i32 %657, %703
  br i1 %655, label %710, label %705

705:                                              ; preds = %698
  %706 = add i32 %704, %608
  %707 = zext i32 %706 to i64
  %708 = getelementptr inbounds double, ptr %656, i64 %707
  %709 = load double, ptr %708, align 8, !tbaa !52
  br label %710

710:                                              ; preds = %698, %705
  %711 = phi double [ %709, %705 ], [ 0.000000e+00, %698 ]
  br label %712

712:                                              ; preds = %710, %712
  %713 = phi i64 [ %726, %712 ], [ 0, %710 ]
  %714 = phi i32 [ %725, %712 ], [ 0, %710 ]
  %715 = phi double [ %724, %712 ], [ %711, %710 ]
  %716 = getelementptr inbounds %"struct.std::pair", ptr %692, i64 %713
  %717 = load i32, ptr %716, align 8, !tbaa !37
  %718 = add i32 %704, %717
  %719 = zext i32 %718 to i64
  %720 = getelementptr inbounds double, ptr %656, i64 %719
  %721 = load double, ptr %720, align 8, !tbaa !52
  %722 = getelementptr inbounds %"struct.std::pair", ptr %692, i64 %713, i32 1
  %723 = load double, ptr %722, align 8, !tbaa !35
  %724 = call double @llvm.fmuladd.f64(double %721, double %723, double %715)
  %725 = add i32 %714, 1
  %726 = zext i32 %725 to i64
  %727 = icmp ugt i64 %696, %726
  br i1 %727, label %712, label %728

728:                                              ; preds = %712
  %729 = getelementptr inbounds %"struct.std::pair", ptr %648, i64 %699, i32 1
  %730 = load double, ptr %729, align 8, !tbaa !35
  %731 = call double @llvm.fmuladd.f64(double %724, double %730, double %701)
  %732 = add i32 %700, 1
  %733 = zext i32 %732 to i64
  %734 = icmp ugt i64 %652, %733
  br i1 %734, label %698, label %763

735:                                              ; preds = %689
  br i1 %655, label %736, label %746

736:                                              ; preds = %735, %736
  %737 = phi i64 [ %744, %736 ], [ 0, %735 ]
  %738 = phi i32 [ %743, %736 ], [ 0, %735 ]
  %739 = phi double [ %742, %736 ], [ %645, %735 ]
  %740 = getelementptr inbounds %"struct.std::pair", ptr %648, i64 %737, i32 1
  %741 = load double, ptr %740, align 8, !tbaa !35
  %742 = call double @llvm.fmuladd.f64(double %741, double 0.000000e+00, double %739)
  %743 = add i32 %738, 1
  %744 = zext i32 %743 to i64
  %745 = icmp ugt i64 %652, %744
  br i1 %745, label %736, label %763

746:                                              ; preds = %735, %746
  %747 = phi i64 [ %761, %746 ], [ 0, %735 ]
  %748 = phi i32 [ %760, %746 ], [ 0, %735 ]
  %749 = phi double [ %759, %746 ], [ %645, %735 ]
  %750 = getelementptr inbounds %"struct.std::pair", ptr %648, i64 %747
  %751 = load i32, ptr %750, align 8, !tbaa !37
  %752 = mul i32 %657, %751
  %753 = add i32 %752, %608
  %754 = zext i32 %753 to i64
  %755 = getelementptr inbounds double, ptr %656, i64 %754
  %756 = load double, ptr %755, align 8, !tbaa !52
  %757 = getelementptr inbounds %"struct.std::pair", ptr %648, i64 %747, i32 1
  %758 = load double, ptr %757, align 8, !tbaa !35
  %759 = call double @llvm.fmuladd.f64(double %756, double %758, double %749)
  %760 = add i32 %748, 1
  %761 = zext i32 %760 to i64
  %762 = icmp ugt i64 %652, %761
  br i1 %762, label %746, label %763

763:                                              ; preds = %728, %746, %736, %672, %662, %646, %644
  %764 = phi double [ %645, %644 ], [ %645, %646 ], [ %668, %662 ], [ %685, %672 ], [ %742, %736 ], [ %759, %746 ], [ %731, %728 ]
  %765 = fcmp une double %764, 0.000000e+00
  br i1 %765, label %766, label %770

766:                                              ; preds = %763
  %767 = getelementptr inbounds double, ptr %604, i64 1
  store double %764, ptr %604, align 8, !tbaa !52
  %768 = load i32, ptr %606, align 8, !tbaa !317
  %769 = getelementptr inbounds i32, ptr %605, i64 1
  store i32 %768, ptr %605, align 4, !tbaa !22
  br label %770

770:                                              ; preds = %766, %763
  %771 = phi ptr [ %769, %766 ], [ %605, %763 ]
  %772 = phi ptr [ %767, %766 ], [ %604, %763 ]
  %773 = add nuw nsw i64 %603, 1
  %774 = icmp eq i64 %773, %486
  br i1 %774, label %601, label %602

775:                                              ; preds = %601
  br i1 %590, label %799, label %776

776:                                              ; preds = %775
  %777 = load ptr, ptr %482, align 8, !tbaa !60
  %778 = zext i32 %504 to i64
  %779 = getelementptr inbounds double, ptr %777, i64 %778
  %780 = load double, ptr %779, align 8, !tbaa !52
  br i1 %483, label %799, label %781

781:                                              ; preds = %776, %781
  %782 = phi i64 [ %797, %781 ], [ 0, %776 ]
  %783 = phi i32 [ %796, %781 ], [ 0, %776 ]
  %784 = phi double [ %795, %781 ], [ %780, %776 ]
  %785 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %782
  %786 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %782, i32 1
  %787 = load ptr, ptr %786, align 8, !tbaa !328
  %788 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %787, i64 0, i32 2
  %789 = load double, ptr %788, align 8, !tbaa !48
  %790 = load i32, ptr %785, align 8, !tbaa !326
  %791 = zext i32 %790 to i64
  %792 = getelementptr inbounds double, ptr %596, i64 %791
  %793 = load double, ptr %792, align 8, !tbaa !52
  %794 = fneg double %789
  %795 = call double @llvm.fmuladd.f64(double %794, double %793, double %784)
  %796 = add i32 %783, 1
  %797 = zext i32 %796 to i64
  %798 = icmp ugt i64 %384, %797
  br i1 %798, label %781, label %799

799:                                              ; preds = %781, %776, %775
  %800 = phi double [ 0.000000e+00, %775 ], [ %780, %776 ], [ %795, %781 ]
  br i1 %599, label %851, label %801

801:                                              ; preds = %799
  %802 = load ptr, ptr %600, align 8, !tbaa !31
  %803 = load ptr, ptr %598, align 8, !tbaa !32
  %804 = ptrtoint ptr %802 to i64
  %805 = ptrtoint ptr %803 to i64
  %806 = sub i64 %804, %805
  %807 = ashr exact i64 %806, 4
  %808 = icmp eq ptr %802, %803
  br i1 %808, label %851, label %809

809:                                              ; preds = %801
  %810 = load ptr, ptr %482, align 8, !tbaa !60
  %811 = load ptr, ptr %480, align 8
  %812 = load i32, ptr %481, align 8
  br label %813

813:                                              ; preds = %809, %824
  %814 = phi i64 [ 0, %809 ], [ %830, %824 ]
  %815 = phi i32 [ 0, %809 ], [ %829, %824 ]
  %816 = phi double [ %800, %809 ], [ %828, %824 ]
  %817 = getelementptr inbounds %"struct.std::pair", ptr %803, i64 %814
  %818 = load i32, ptr %817, align 8, !tbaa !37
  %819 = zext i32 %818 to i64
  %820 = getelementptr inbounds double, ptr %810, i64 %819
  %821 = load double, ptr %820, align 8, !tbaa !52
  br i1 %483, label %824, label %822

822:                                              ; preds = %813
  %823 = mul i32 %812, %818
  br label %832

824:                                              ; preds = %832, %813
  %825 = phi double [ %821, %813 ], [ %847, %832 ]
  %826 = getelementptr inbounds %"struct.std::pair", ptr %803, i64 %814, i32 1
  %827 = load double, ptr %826, align 8, !tbaa !35
  %828 = call double @llvm.fmuladd.f64(double %825, double %827, double %816)
  %829 = add i32 %815, 1
  %830 = zext i32 %829 to i64
  %831 = icmp ugt i64 %807, %830
  br i1 %831, label %813, label %851

832:                                              ; preds = %822, %832
  %833 = phi i64 [ 0, %822 ], [ %849, %832 ]
  %834 = phi i32 [ 0, %822 ], [ %848, %832 ]
  %835 = phi double [ %821, %822 ], [ %847, %832 ]
  %836 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %833
  %837 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %833, i32 1
  %838 = load ptr, ptr %837, align 8, !tbaa !328
  %839 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %838, i64 0, i32 2
  %840 = load double, ptr %839, align 8, !tbaa !48
  %841 = load i32, ptr %836, align 8, !tbaa !326
  %842 = add i32 %823, %841
  %843 = zext i32 %842 to i64
  %844 = getelementptr inbounds double, ptr %811, i64 %843
  %845 = load double, ptr %844, align 8, !tbaa !52
  %846 = fneg double %840
  %847 = call double @llvm.fmuladd.f64(double %846, double %845, double %835)
  %848 = add i32 %834, 1
  %849 = zext i32 %848 to i64
  %850 = icmp ugt i64 %384, %849
  br i1 %850, label %832, label %824

851:                                              ; preds = %824, %571, %801, %566, %601, %799, %527
  %852 = phi ptr [ %528, %527 ], [ %771, %799 ], [ %771, %601 ], [ %528, %566 ], [ %771, %801 ], [ %528, %571 ], [ %771, %824 ]
  %853 = phi double [ 0.000000e+00, %527 ], [ %800, %799 ], [ 0.000000e+00, %601 ], [ %570, %566 ], [ %800, %801 ], [ %585, %571 ], [ %828, %824 ]
  %854 = ptrtoint ptr %852 to i64
  %855 = sub i64 %854, %484
  %856 = and i64 %855, 17179869180
  %857 = icmp eq i64 %856, 0
  br i1 %857, label %879, label %858

858:                                              ; preds = %851
  %859 = lshr exact i64 %855, 2
  %860 = and i64 %859, 4294967295
  br label %861

861:                                              ; preds = %874, %858
  %862 = phi i64 [ 0, %858 ], [ %875, %874 ]
  %863 = getelementptr inbounds double, ptr %474, i64 %862
  %864 = load double, ptr %863, align 8, !tbaa !52
  %865 = fcmp oeq double %864, 0.000000e+00
  br i1 %865, label %874, label %866

866:                                              ; preds = %861
  %867 = getelementptr inbounds i32, ptr %473, i64 %862
  %868 = load i32, ptr %867, align 4, !tbaa !22
  %869 = invoke noundef ptr @_ZN6dealii14SparseMatrixEZIdE8allocateEjj(ptr noundef nonnull align 8 dereferenceable(132) %4, i32 noundef %502, i32 noundef %868)
          to label %870 unwind label %877

870:                                              ; preds = %866
  %871 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %869, i64 0, i32 1
  %872 = load double, ptr %871, align 8, !tbaa !409
  %873 = fadd double %864, %872
  store double %873, ptr %871, align 8, !tbaa !409
  br label %874

874:                                              ; preds = %870, %861
  %875 = add nuw nsw i64 %862, 1
  %876 = icmp eq i64 %875, %860
  br i1 %876, label %879, label %861

877:                                              ; preds = %866
  %878 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %474) #23
  br label %920

879:                                              ; preds = %874, %851
  %880 = fcmp une double %853, 0.000000e+00
  br i1 %880, label %881, label %887

881:                                              ; preds = %879
  %882 = load ptr, ptr %485, align 8, !tbaa !60
  %883 = zext i32 %502 to i64
  %884 = getelementptr inbounds double, ptr %882, i64 %883
  %885 = load double, ptr %884, align 8, !tbaa !52
  %886 = fadd double %853, %885
  store double %886, ptr %884, align 8, !tbaa !52
  br label %887

887:                                              ; preds = %881, %879
  %888 = add nuw nsw i64 %499, 1
  %889 = icmp eq i64 %888, %486
  br i1 %889, label %491, label %498

890:                                              ; preds = %493, %491
  %891 = icmp eq ptr %473, null
  br i1 %891, label %893, label %892

892:                                              ; preds = %890
  call void @_ZdlPv(ptr noundef nonnull %473) #23
  br label %893

893:                                              ; preds = %892, %890
  %894 = icmp eq ptr %166, null
  br i1 %894, label %896, label %895

895:                                              ; preds = %893
  call void @_ZdlPv(ptr noundef nonnull %166) #23
  br label %896

896:                                              ; preds = %895, %893
  %897 = load ptr, ptr %7, align 8, !tbaa !321
  %898 = load ptr, ptr %151, align 8, !tbaa !325
  %899 = icmp eq ptr %897, %898
  br i1 %899, label %915, label %900

900:                                              ; preds = %896, %910
  %901 = phi ptr [ %911, %910 ], [ %897, %896 ]
  %902 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %901, i64 0, i32 2
  %903 = load ptr, ptr %902, align 8, !tbaa !320
  %904 = icmp eq ptr %903, null
  br i1 %904, label %910, label %905

905:                                              ; preds = %900
  %906 = load ptr, ptr %903, align 8, !tbaa !32
  %907 = icmp eq ptr %906, null
  br i1 %907, label %909, label %908

908:                                              ; preds = %905
  call void @_ZdlPv(ptr noundef nonnull %906) #23
  br label %909

909:                                              ; preds = %908, %905
  call void @_ZdlPv(ptr noundef nonnull %903) #23
  store ptr null, ptr %902, align 8, !tbaa !320
  br label %910

910:                                              ; preds = %909, %900
  %911 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %901, i64 1
  %912 = icmp eq ptr %911, %898
  br i1 %912, label %913, label %900

913:                                              ; preds = %910
  %914 = load ptr, ptr %7, align 8, !tbaa !321
  br label %915

915:                                              ; preds = %913, %896
  %916 = phi ptr [ %914, %913 ], [ %897, %896 ]
  %917 = icmp eq ptr %916, null
  br i1 %917, label %919, label %918

918:                                              ; preds = %915
  call void @_ZdlPv(ptr noundef nonnull %916) #23
  br label %919

919:                                              ; preds = %915, %918
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  ret void

920:                                              ; preds = %496, %877
  %921 = phi ptr [ %405, %496 ], [ %473, %877 ]
  %922 = phi { ptr, i32 } [ %497, %496 ], [ %878, %877 ]
  call void @_ZdlPv(ptr noundef nonnull %921) #23
  br label %923

923:                                              ; preds = %314, %316, %469, %458, %920, %494, %409
  %924 = phi ptr [ %166, %409 ], [ %166, %458 ], [ %166, %469 ], [ %166, %920 ], [ %166, %494 ], [ %203, %314 ], [ %203, %316 ]
  %925 = phi { ptr, i32 } [ %410, %409 ], [ %459, %458 ], [ %470, %469 ], [ %922, %920 ], [ %495, %494 ], [ %315, %314 ], [ %317, %316 ]
  %926 = icmp eq ptr %924, null
  br i1 %926, label %928, label %927

927:                                              ; preds = %923
  call void @_ZdlPv(ptr noundef nonnull %924) #23
  br label %928

928:                                              ; preds = %927, %923
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %929 unwind label %931

929:                                              ; preds = %928, %199
  %930 = phi { ptr, i32 } [ %925, %928 ], [ %198, %199 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  resume { ptr, i32 } %930

931:                                              ; preds = %928, %409, %197
  %932 = landingpad { ptr, i32 }
          catch ptr null
  %933 = extractvalue { ptr, i32 } %932, 0
  call void @__clang_call_terminate(ptr %933) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(132) %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIdEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(132) %4, ptr noundef nonnull align 8 dereferenceable(88) %5)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIfEEEEvRKNS_10FullMatrixIdEERKSt6vectorIjSaIjEERT_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(132) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.dealii::Vector.35", align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %5) #24
  call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !311
  %6 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  invoke void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIfEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(132) %3, ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %7 unwind label %13

7:                                                ; preds = %4
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !311
  %8 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !60
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  call void @_ZdaPv(ptr noundef nonnull %9) #23
  store ptr null, ptr %8, align 8, !tbaa !60
  br label %12

12:                                               ; preds = %7, %11
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #24
  ret void

13:                                               ; preds = %4
  %14 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %15 unwind label %16

15:                                               ; preds = %13
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #24
  resume { ptr, i32 } %14

16:                                               ; preds = %13
  %17 = landingpad { ptr, i32 }
          catch ptr null
  %18 = extractvalue { ptr, i32 } %17, 0
  call void @__clang_call_terminate(ptr %18) #25
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIfEENS_6VectorIdEEEEvRKNS_10FullMatrixIdEERKS5_RKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(132) %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::vector.178", align 8
  %8 = alloca %"struct.dealii::internals::distributing", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !53
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 1
  %14 = load i32, ptr %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %12, i1 %15, i1 false
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !313
  %19 = load ptr, ptr %3, align 8, !tbaa !58
  %20 = ptrtoint ptr %18 to i64
  %21 = ptrtoint ptr %19 to i64
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 2
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %57, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !314
  %29 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %30 = load i32, ptr %29, align 8, !tbaa !22
  %31 = add i32 %30, 1
  %32 = and i64 %23, 4294967295
  %33 = add nsw i64 %32, -1
  %34 = and i64 %23, 3
  %35 = icmp ult i64 %33, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %26
  %37 = sub nsw i64 %32, %34
  br label %107

38:                                               ; preds = %107, %26
  %39 = phi double [ undef, %26 ], [ %141, %107 ]
  %40 = phi i64 [ 0, %26 ], [ %142, %107 ]
  %41 = phi double [ 0.000000e+00, %26 ], [ %141, %107 ]
  %42 = icmp eq i64 %34, 0
  br i1 %42, label %57, label %43

43:                                               ; preds = %38, %43
  %44 = phi i64 [ %54, %43 ], [ %40, %38 ]
  %45 = phi double [ %53, %43 ], [ %41, %38 ]
  %46 = phi i64 [ %55, %43 ], [ 0, %38 ]
  %47 = trunc i64 %44 to i32
  %48 = mul i32 %31, %47
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds double, ptr %28, i64 %49
  %51 = load double, ptr %50, align 8, !tbaa !52
  %52 = tail call double @llvm.fabs.f64(double %51)
  %53 = fadd double %45, %52
  %54 = add nuw nsw i64 %44, 1
  %55 = add i64 %46, 1
  %56 = icmp eq i64 %55, %34
  br i1 %56, label %57, label %43, !llvm.loop !411

57:                                               ; preds = %38, %43, %6
  %58 = phi double [ 0.000000e+00, %6 ], [ %39, %38 ], [ %53, %43 ]
  %59 = uitofp i32 %24 to double
  %60 = fdiv double %58, %59
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %61 = and i64 %23, 4294967295
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #24
  store i32 -1, ptr %8, align 8, !tbaa !317
  %62 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 1
  store i32 -1, ptr %62, align 4, !tbaa !319
  %63 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 2
  store ptr null, ptr %63, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %148

67:                                               ; preds = %57
  %68 = shl nuw nsw i64 %61, 4
  %69 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %68) #21
          to label %70 unwind label %197

70:                                               ; preds = %67
  store ptr %69, ptr %7, align 8, !tbaa !321
  %71 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %69, i64 %61
  %72 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %71, ptr %72, align 8, !tbaa !323
  %73 = and i64 %23, 3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %70, %75
  %76 = phi ptr [ %82, %75 ], [ %69, %70 ]
  %77 = phi i64 [ %81, %75 ], [ %61, %70 ]
  %78 = phi i64 [ %83, %75 ], [ 0, %70 ]
  %79 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 0, i32 2
  store ptr null, ptr %79, align 8, !tbaa !320
  store i32 -1, ptr %76, align 8, !tbaa !317
  %80 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 0, i32 1
  store i32 -1, ptr %80, align 4, !tbaa !319
  %81 = add nsw i64 %77, -1
  %82 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 1
  %83 = add i64 %78, 1
  %84 = icmp eq i64 %83, %73
  br i1 %84, label %85, label %75, !llvm.loop !412

85:                                               ; preds = %75, %70
  %86 = phi ptr [ undef, %70 ], [ %82, %75 ]
  %87 = phi ptr [ %69, %70 ], [ %82, %75 ]
  %88 = phi i64 [ %61, %70 ], [ %81, %75 ]
  %89 = icmp ult i64 %61, 4
  br i1 %89, label %145, label %90

90:                                               ; preds = %85, %90
  %91 = phi ptr [ %105, %90 ], [ %87, %85 ]
  %92 = phi i64 [ %104, %90 ], [ %88, %85 ]
  %93 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 0, i32 2
  store ptr null, ptr %93, align 8, !tbaa !320
  store i32 -1, ptr %91, align 8, !tbaa !317
  %94 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 0, i32 1
  store i32 -1, ptr %94, align 4, !tbaa !319
  %95 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1
  %96 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1, i32 2
  store ptr null, ptr %96, align 8, !tbaa !320
  store i32 -1, ptr %95, align 8, !tbaa !317
  %97 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1, i32 1
  store i32 -1, ptr %97, align 4, !tbaa !319
  %98 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2
  %99 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2, i32 2
  store ptr null, ptr %99, align 8, !tbaa !320
  store i32 -1, ptr %98, align 8, !tbaa !317
  %100 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2, i32 1
  store i32 -1, ptr %100, align 4, !tbaa !319
  %101 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3
  %102 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3, i32 2
  store ptr null, ptr %102, align 8, !tbaa !320
  store i32 -1, ptr %101, align 8, !tbaa !317
  %103 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3, i32 1
  store i32 -1, ptr %103, align 4, !tbaa !319
  %104 = add nsw i64 %92, -4
  %105 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 4
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %145, label %90

107:                                              ; preds = %107, %36
  %108 = phi i64 [ 0, %36 ], [ %142, %107 ]
  %109 = phi double [ 0.000000e+00, %36 ], [ %141, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %143, %107 ]
  %111 = trunc i64 %108 to i32
  %112 = mul i32 %31, %111
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds double, ptr %28, i64 %113
  %115 = load double, ptr %114, align 8, !tbaa !52
  %116 = tail call double @llvm.fabs.f64(double %115)
  %117 = fadd double %109, %116
  %118 = trunc i64 %108 to i32
  %119 = or i32 %118, 1
  %120 = mul i32 %31, %119
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds double, ptr %28, i64 %121
  %123 = load double, ptr %122, align 8, !tbaa !52
  %124 = tail call double @llvm.fabs.f64(double %123)
  %125 = fadd double %117, %124
  %126 = trunc i64 %108 to i32
  %127 = or i32 %126, 2
  %128 = mul i32 %31, %127
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %28, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !52
  %132 = tail call double @llvm.fabs.f64(double %131)
  %133 = fadd double %125, %132
  %134 = trunc i64 %108 to i32
  %135 = or i32 %134, 3
  %136 = mul i32 %31, %135
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds double, ptr %28, i64 %137
  %139 = load double, ptr %138, align 8, !tbaa !52
  %140 = tail call double @llvm.fabs.f64(double %139)
  %141 = fadd double %133, %140
  %142 = add nuw nsw i64 %108, 4
  %143 = add i64 %110, 4
  %144 = icmp eq i64 %143, %37
  br i1 %144, label %38, label %107

145:                                              ; preds = %90, %85
  %146 = phi ptr [ %86, %85 ], [ %105, %90 ]
  %147 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %146, ptr %147, align 8, !tbaa !325
  br label %148

148:                                              ; preds = %145, %65
  %149 = phi ptr [ null, %65 ], [ %69, %145 ]
  %150 = phi ptr [ null, %65 ], [ %146, %145 ]
  %151 = phi ptr [ %66, %65 ], [ %147, %145 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br i1 %25, label %162, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %154 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %155 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %156 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %157 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %158 = and i64 %23, 4294967295
  br label %200

159:                                              ; preds = %307
  %160 = load ptr, ptr %151, align 8, !tbaa !21
  %161 = load ptr, ptr %7, align 8, !tbaa !321
  br label %162

162:                                              ; preds = %159, %148
  %163 = phi ptr [ %149, %148 ], [ %161, %159 ]
  %164 = phi ptr [ %150, %148 ], [ %160, %159 ]
  %165 = phi ptr [ null, %148 ], [ %309, %159 ]
  %166 = phi ptr [ null, %148 ], [ %310, %159 ]
  %167 = phi i32 [ 0, %148 ], [ %311, %159 ]
  %168 = zext i32 %167 to i64
  store i32 -1, ptr %9, align 8, !tbaa !317
  %169 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %169, align 4, !tbaa !319
  %170 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %170, align 8, !tbaa !320
  %171 = ptrtoint ptr %164 to i64
  %172 = ptrtoint ptr %163 to i64
  %173 = sub i64 %171, %172
  %174 = ashr exact i64 %173, 4
  %175 = icmp ult i64 %174, %168
  br i1 %175, label %176, label %178

176:                                              ; preds = %162
  %177 = sub nsw i64 %168, %174
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %164, i64 noundef %177, ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %318 unwind label %409

178:                                              ; preds = %162
  %179 = icmp ugt i64 %174, %168
  br i1 %179, label %180, label %318

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %163, i64 %168
  %182 = icmp eq ptr %164, %181
  br i1 %182, label %318, label %183

183:                                              ; preds = %180, %193
  %184 = phi ptr [ %194, %193 ], [ %181, %180 ]
  %185 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %184, i64 0, i32 2
  %186 = load ptr, ptr %185, align 8, !tbaa !320
  %187 = icmp eq ptr %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %183
  %189 = load ptr, ptr %186, align 8, !tbaa !32
  %190 = icmp eq ptr %189, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  tail call void @_ZdlPv(ptr noundef nonnull %189) #23
  br label %192

192:                                              ; preds = %191, %188
  tail call void @_ZdlPv(ptr noundef nonnull %186) #23
  store ptr null, ptr %185, align 8, !tbaa !320
  br label %193

193:                                              ; preds = %192, %183
  %194 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %184, i64 1
  %195 = icmp eq ptr %194, %164
  br i1 %195, label %196, label %183

196:                                              ; preds = %193
  store ptr %181, ptr %151, align 8, !tbaa !325
  br label %318

197:                                              ; preds = %67
  %198 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %8)
          to label %199 unwind label %933

199:                                              ; preds = %197
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br label %931

200:                                              ; preds = %152, %307
  %201 = phi i64 [ 0, %152 ], [ %312, %307 ]
  %202 = phi i32 [ 0, %152 ], [ %311, %307 ]
  %203 = phi ptr [ null, %152 ], [ %310, %307 ]
  %204 = phi ptr [ null, %152 ], [ %309, %307 ]
  %205 = phi ptr [ null, %152 ], [ %308, %307 ]
  %206 = load ptr, ptr %154, align 8, !tbaa !55
  %207 = load i32, ptr %155, align 8, !tbaa !57
  %208 = load ptr, ptr %153, align 8, !tbaa !55
  %209 = ptrtoint ptr %206 to i64
  %210 = ptrtoint ptr %208 to i64
  %211 = sub i64 %209, %210
  %212 = shl nsw i64 %211, 3
  %213 = zext i32 %207 to i64
  %214 = add nsw i64 %212, %213
  %215 = load ptr, ptr %3, align 8, !tbaa !58
  %216 = getelementptr inbounds i32, ptr %215, i64 %201
  %217 = load i32, ptr %216, align 4, !tbaa !22
  %218 = zext i32 %217 to i64
  %219 = icmp ugt i64 %214, %218
  br i1 %219, label %220, label %230

220:                                              ; preds = %200
  %221 = lshr i32 %217, 6
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds i64, ptr %208, i64 %222
  %224 = and i32 %217, 63
  %225 = zext i32 %224 to i64
  %226 = shl nuw i64 1, %225
  %227 = load i64, ptr %223, align 8, !tbaa !42
  %228 = and i64 %227, %226
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %237

230:                                              ; preds = %220, %200
  %231 = zext i32 %202 to i64
  %232 = load ptr, ptr %7, align 8, !tbaa !321
  %233 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %232, i64 %231
  store i32 %217, ptr %233, align 8, !tbaa !317
  %234 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %232, i64 %231, i32 1
  %235 = trunc i64 %201 to i32
  store i32 %235, ptr %234, align 4, !tbaa !319
  %236 = add i32 %202, 1
  br label %307

237:                                              ; preds = %220
  %238 = load ptr, ptr %156, align 8, !tbaa !21
  %239 = load ptr, ptr %157, align 8, !tbaa !21
  %240 = ptrtoint ptr %239 to i64
  %241 = ptrtoint ptr %238 to i64
  %242 = sub i64 %240, %241
  %243 = icmp sgt i64 %242, 0
  br i1 %243, label %244, label %259

244:                                              ; preds = %237
  %245 = udiv exact i64 %242, 40
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ %245, %244 ], [ %257, %246 ]
  %248 = phi ptr [ %238, %244 ], [ %256, %246 ]
  %249 = lshr i64 %247, 1
  %250 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %248, i64 %249
  %251 = load i32, ptr %250, align 8, !tbaa !24
  %252 = icmp ult i32 %251, %217
  %253 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %250, i64 1
  %254 = xor i64 %249, -1
  %255 = add nsw i64 %247, %254
  %256 = select i1 %252, ptr %253, ptr %248
  %257 = select i1 %252, i64 %255, i64 %249
  %258 = icmp sgt i64 %257, 0
  br i1 %258, label %246, label %259

259:                                              ; preds = %246, %237
  %260 = phi ptr [ %238, %237 ], [ %256, %246 ]
  %261 = icmp eq ptr %204, %205
  br i1 %261, label %265, label %262

262:                                              ; preds = %259
  %263 = trunc i64 %201 to i32
  store i32 %263, ptr %204, align 8
  %264 = getelementptr inbounds i8, ptr %204, i64 8
  store ptr %260, ptr %264, align 8
  br label %302

265:                                              ; preds = %259
  %266 = ptrtoint ptr %204 to i64
  %267 = ptrtoint ptr %203 to i64
  %268 = sub i64 %266, %267
  %269 = icmp eq i64 %268, 9223372036854775792
  br i1 %269, label %270, label %272

270:                                              ; preds = %265
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %271 unwind label %316

271:                                              ; preds = %270
  unreachable

272:                                              ; preds = %265
  %273 = ashr exact i64 %268, 4
  %274 = tail call i64 @llvm.umax.i64(i64 %273, i64 1)
  %275 = add i64 %274, %273
  %276 = icmp ult i64 %275, %273
  %277 = icmp ugt i64 %275, 576460752303423487
  %278 = or i1 %276, %277
  %279 = select i1 %278, i64 576460752303423487, i64 %275
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %284, label %281

281:                                              ; preds = %272
  %282 = shl nuw nsw i64 %279, 4
  %283 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %282) #21
          to label %284 unwind label %314

284:                                              ; preds = %281, %272
  %285 = phi ptr [ null, %272 ], [ %283, %281 ]
  %286 = getelementptr inbounds %"struct.std::pair.188", ptr %285, i64 %273
  %287 = trunc i64 %201 to i32
  store i32 %287, ptr %286, align 8
  %288 = getelementptr inbounds i8, ptr %286, i64 8
  store ptr %260, ptr %288, align 8
  %289 = icmp eq ptr %203, %204
  br i1 %289, label %296, label %290

290:                                              ; preds = %284, %290
  %291 = phi ptr [ %294, %290 ], [ %285, %284 ]
  %292 = phi ptr [ %293, %290 ], [ %203, %284 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %291, ptr noundef nonnull align 8 dereferenceable(16) %292, i64 16, i1 false)
  %293 = getelementptr inbounds %"struct.std::pair.188", ptr %292, i64 1
  %294 = getelementptr inbounds %"struct.std::pair.188", ptr %291, i64 1
  %295 = icmp eq ptr %293, %204
  br i1 %295, label %296, label %290

296:                                              ; preds = %290, %284
  %297 = phi ptr [ %285, %284 ], [ %294, %290 ]
  %298 = icmp eq ptr %203, null
  br i1 %298, label %300, label %299

299:                                              ; preds = %296
  tail call void @_ZdlPv(ptr noundef nonnull %203) #23
  br label %300

300:                                              ; preds = %299, %296
  %301 = getelementptr inbounds %"struct.std::pair.188", ptr %285, i64 %279
  br label %302

302:                                              ; preds = %300, %262
  %303 = phi ptr [ %301, %300 ], [ %205, %262 ]
  %304 = phi ptr [ %297, %300 ], [ %204, %262 ]
  %305 = phi ptr [ %285, %300 ], [ %203, %262 ]
  %306 = getelementptr inbounds %"struct.std::pair.188", ptr %304, i64 1
  br label %307

307:                                              ; preds = %302, %230
  %308 = phi ptr [ %303, %302 ], [ %205, %230 ]
  %309 = phi ptr [ %306, %302 ], [ %204, %230 ]
  %310 = phi ptr [ %305, %302 ], [ %203, %230 ]
  %311 = phi i32 [ %202, %302 ], [ %236, %230 ]
  %312 = add nuw nsw i64 %201, 1
  %313 = icmp eq i64 %312, %158
  br i1 %313, label %159, label %200

314:                                              ; preds = %281
  %315 = landingpad { ptr, i32 }
          cleanup
  br label %925

316:                                              ; preds = %270
  %317 = landingpad { ptr, i32 }
          cleanup
  br label %925

318:                                              ; preds = %196, %180, %178, %176
  %319 = load ptr, ptr %170, align 8, !tbaa !320
  %320 = icmp eq ptr %319, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %318
  %322 = load ptr, ptr %319, align 8, !tbaa !32
  %323 = icmp eq ptr %322, null
  br i1 %323, label %325, label %324

324:                                              ; preds = %321
  call void @_ZdlPv(ptr noundef nonnull %322) #23
  br label %325

325:                                              ; preds = %324, %321
  call void @_ZdlPv(ptr noundef nonnull %319) #23
  store ptr null, ptr %170, align 8, !tbaa !320
  br label %326

326:                                              ; preds = %325, %318
  %327 = load ptr, ptr %151, align 8, !tbaa !325
  %328 = load ptr, ptr %7, align 8, !tbaa !321
  %329 = ptrtoint ptr %327 to i64
  %330 = ptrtoint ptr %328 to i64
  %331 = sub i64 %329, %330
  %332 = lshr exact i64 %331, 4
  %333 = trunc i64 %332 to i32
  %334 = icmp ult i32 %333, 2
  br i1 %334, label %380, label %337

335:                                              ; preds = %376, %337
  %336 = icmp ult i32 %338, 4
  br i1 %336, label %380, label %337

337:                                              ; preds = %326, %335
  %338 = phi i32 [ %339, %335 ], [ %333, %326 ]
  %339 = lshr i32 %338, 1
  %340 = icmp ult i32 %339, %333
  br i1 %340, label %341, label %335

341:                                              ; preds = %337
  %342 = zext i32 %339 to i64
  br label %343

343:                                              ; preds = %376, %341
  %344 = phi i64 [ %342, %341 ], [ %377, %376 ]
  %345 = sub nuw nsw i64 %344, %342
  %346 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %344
  %347 = load <2 x i32>, ptr %346, align 8, !tbaa !22
  %348 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %345
  %349 = load i32, ptr %348, align 8, !tbaa !317
  %350 = extractelement <2 x i32> %347, i64 0
  %351 = icmp ugt i32 %349, %350
  br i1 %351, label %352, label %376

352:                                              ; preds = %343
  %353 = icmp ult i64 %344, %342
  %354 = trunc i64 %344 to i32
  br i1 %353, label %372, label %355

355:                                              ; preds = %352
  %356 = trunc i64 %345 to i32
  br label %357

357:                                              ; preds = %364, %355
  %358 = phi i32 [ %359, %364 ], [ %354, %355 ]
  %359 = phi i32 [ %370, %364 ], [ %356, %355 ]
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %360
  %362 = load i32, ptr %361, align 8, !tbaa !317
  %363 = icmp ugt i32 %362, %350
  br i1 %363, label %364, label %372

364:                                              ; preds = %357
  %365 = zext i32 %358 to i64
  %366 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %365
  store i32 %362, ptr %366, align 8, !tbaa !317
  %367 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %360, i32 1
  %368 = load i32, ptr %367, align 4, !tbaa !319
  %369 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %365, i32 1
  store i32 %368, ptr %369, align 4, !tbaa !319
  %370 = sub i32 %359, %339
  %371 = icmp ult i32 %359, %339
  br i1 %371, label %372, label %357

372:                                              ; preds = %364, %357, %352
  %373 = phi i32 [ %354, %352 ], [ %358, %357 ], [ %359, %364 ]
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %374
  store <2 x i32> %347, ptr %375, align 8, !tbaa !22
  br label %376

376:                                              ; preds = %372, %343
  %377 = add nuw nsw i64 %344, 1
  %378 = trunc i64 %377 to i32
  %379 = icmp eq i32 %333, %378
  br i1 %379, label %335, label %343

380:                                              ; preds = %335, %326
  %381 = ptrtoint ptr %165 to i64
  %382 = ptrtoint ptr %166 to i64
  %383 = sub i64 %381, %382
  %384 = ashr exact i64 %383, 4
  %385 = and i64 %383, 68719476720
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %397, label %387

387:                                              ; preds = %380
  %388 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %389 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %390 = and i64 %384, 4294967295
  br label %411

391:                                              ; preds = %467
  %392 = load ptr, ptr %151, align 8, !tbaa !325
  %393 = load ptr, ptr %7, align 8, !tbaa !321
  %394 = ptrtoint ptr %392 to i64
  %395 = ptrtoint ptr %393 to i64
  %396 = sub i64 %394, %395
  br label %397

397:                                              ; preds = %391, %380
  %398 = phi i64 [ %396, %391 ], [ %331, %380 ]
  %399 = phi i8 [ %428, %391 ], [ 0, %380 ]
  %400 = ashr exact i64 %398, 4
  %401 = and i64 %400, 4294967295
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %473, label %403

403:                                              ; preds = %397
  %404 = shl nuw nsw i64 %401, 2
  %405 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %404) #21
          to label %406 unwind label %495

406:                                              ; preds = %403
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %405, i8 0, i64 %404, i1 false), !tbaa !22
  %407 = shl nuw nsw i64 %401, 3
  %408 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %407) #21
          to label %472 unwind label %497

409:                                              ; preds = %176
  %410 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %925 unwind label %933

411:                                              ; preds = %387, %467
  %412 = phi i64 [ 0, %387 ], [ %468, %467 ]
  %413 = phi i8 [ 0, %387 ], [ %428, %467 ]
  %414 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %412
  %415 = load i32, ptr %414, align 8, !tbaa !326
  %416 = zext i32 %415 to i64
  %417 = load ptr, ptr %3, align 8, !tbaa !58
  %418 = getelementptr inbounds i32, ptr %417, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !22
  %420 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %412, i32 1
  %421 = load ptr, ptr %420, align 8, !tbaa !328
  %422 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %421, i64 0, i32 1
  %423 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %421, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %424 = load ptr, ptr %423, align 8, !tbaa !31
  %425 = load ptr, ptr %422, align 8, !tbaa !32
  %426 = icmp eq ptr %424, %425
  br i1 %426, label %427, label %441

427:                                              ; preds = %449, %411
  %428 = phi i8 [ %413, %411 ], [ 1, %449 ]
  %429 = load ptr, ptr %388, align 8, !tbaa !314
  %430 = load i32, ptr %389, align 8, !tbaa !22
  %431 = add i32 %430, 1
  %432 = mul i32 %431, %415
  %433 = zext i32 %432 to i64
  %434 = getelementptr inbounds double, ptr %429, i64 %433
  %435 = load double, ptr %434, align 8, !tbaa !52
  %436 = fcmp une double %435, 0.000000e+00
  %437 = call double @llvm.fabs.f64(double %435)
  %438 = select i1 %436, double %437, double %60
  %439 = fptrunc double %438 to float
  %440 = fcmp oeq float %439, 0.000000e+00
  br i1 %440, label %467, label %461

441:                                              ; preds = %411, %449
  %442 = phi ptr [ %453, %449 ], [ %425, %411 ]
  %443 = phi i64 [ %451, %449 ], [ 0, %411 ]
  %444 = phi i32 [ %450, %449 ], [ 0, %411 ]
  %445 = getelementptr inbounds %"struct.std::pair", ptr %442, i64 %443
  %446 = load i32, ptr %445, align 8, !tbaa !37
  %447 = getelementptr inbounds %"struct.std::pair", ptr %442, i64 %443, i32 1
  %448 = load double, ptr %447, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %446, i32 %415, double %448)
          to label %449 unwind label %459

449:                                              ; preds = %441
  %450 = add i32 %444, 1
  %451 = zext i32 %450 to i64
  %452 = load ptr, ptr %423, align 8, !tbaa !31
  %453 = load ptr, ptr %422, align 8, !tbaa !32
  %454 = ptrtoint ptr %452 to i64
  %455 = ptrtoint ptr %453 to i64
  %456 = sub i64 %454, %455
  %457 = ashr exact i64 %456, 4
  %458 = icmp ugt i64 %457, %451
  br i1 %458, label %441, label %427

459:                                              ; preds = %441
  %460 = landingpad { ptr, i32 }
          cleanup
  br label %925

461:                                              ; preds = %427
  %462 = invoke noundef ptr @_ZN6dealii14SparseMatrixEZIfE8allocateEjj(ptr noundef nonnull align 8 dereferenceable(132) %4, i32 noundef %419, i32 noundef %419)
          to label %463 unwind label %470

463:                                              ; preds = %461
  %464 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %462, i64 0, i32 1
  %465 = load float, ptr %464, align 4, !tbaa !413
  %466 = fadd float %465, %439
  store float %466, ptr %464, align 4, !tbaa !413
  br label %467

467:                                              ; preds = %463, %427
  %468 = add nuw nsw i64 %412, 1
  %469 = icmp eq i64 %468, %390
  br i1 %469, label %391, label %411

470:                                              ; preds = %461
  %471 = landingpad { ptr, i32 }
          cleanup
  br label %925

472:                                              ; preds = %406
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %408, i8 0, i64 %407, i1 false), !tbaa !52
  br label %473

473:                                              ; preds = %472, %397
  %474 = phi ptr [ null, %397 ], [ %405, %472 ]
  %475 = phi ptr [ null, %397 ], [ %408, %472 ]
  %476 = and i64 %398, 68719476720
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %492, label %478

478:                                              ; preds = %473
  %479 = and i8 %399, 1
  %480 = icmp eq i8 %479, 0
  %481 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %482 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %483 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %484 = icmp eq ptr %165, %166
  %485 = ptrtoint ptr %474 to i64
  %486 = getelementptr inbounds %"class.dealii::Vector.35", ptr %5, i64 0, i32 3
  %487 = and i64 %400, 4294967295
  %488 = and i64 %400, 1
  %489 = icmp eq i64 %487, 1
  %490 = sub nsw i64 %487, %488
  %491 = icmp eq i64 %488, 0
  br label %499

492:                                              ; preds = %889, %473
  %493 = icmp eq ptr %475, null
  br i1 %493, label %892, label %494

494:                                              ; preds = %492
  call void @_ZdlPv(ptr noundef nonnull %475) #23
  br label %892

495:                                              ; preds = %403
  %496 = landingpad { ptr, i32 }
          cleanup
  br label %925

497:                                              ; preds = %406
  %498 = landingpad { ptr, i32 }
          cleanup
  br label %922

499:                                              ; preds = %478, %889
  %500 = phi i64 [ 0, %478 ], [ %890, %889 ]
  %501 = load ptr, ptr %7, align 8, !tbaa !321
  %502 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %500
  %503 = load i32, ptr %502, align 8, !tbaa !317
  %504 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %500, i32 1
  %505 = load i32, ptr %504, align 4, !tbaa !319
  br i1 %480, label %506, label %590

506:                                              ; preds = %499
  %507 = load ptr, ptr %481, align 8, !tbaa !314
  %508 = load i32, ptr %482, align 8, !tbaa !22
  %509 = mul i32 %508, %505
  %510 = zext i32 %509 to i64
  %511 = getelementptr inbounds double, ptr %507, i64 %510
  br i1 %489, label %512, label %530

512:                                              ; preds = %561, %506
  %513 = phi ptr [ undef, %506 ], [ %562, %561 ]
  %514 = phi i64 [ 0, %506 ], [ %564, %561 ]
  %515 = phi ptr [ %475, %506 ], [ %563, %561 ]
  %516 = phi ptr [ %474, %506 ], [ %562, %561 ]
  br i1 %491, label %528, label %517

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %514, i32 1
  %519 = load i32, ptr %518, align 4, !tbaa !319
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds double, ptr %511, i64 %520
  %522 = load double, ptr %521, align 8, !tbaa !52
  %523 = fcmp une double %522, 0.000000e+00
  br i1 %523, label %524, label %528

524:                                              ; preds = %517
  %525 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %514
  store double %522, ptr %515, align 8, !tbaa !52
  %526 = load i32, ptr %525, align 8, !tbaa !317
  %527 = getelementptr inbounds i32, ptr %516, i64 1
  store i32 %526, ptr %516, align 4, !tbaa !22
  br label %528

528:                                              ; preds = %517, %524, %512
  %529 = phi ptr [ %513, %512 ], [ %527, %524 ], [ %516, %517 ]
  br i1 %16, label %852, label %567

530:                                              ; preds = %506, %561
  %531 = phi i64 [ %564, %561 ], [ 0, %506 ]
  %532 = phi ptr [ %563, %561 ], [ %475, %506 ]
  %533 = phi ptr [ %562, %561 ], [ %474, %506 ]
  %534 = phi i64 [ %565, %561 ], [ 0, %506 ]
  %535 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %531, i32 1
  %536 = load i32, ptr %535, align 4, !tbaa !319
  %537 = zext i32 %536 to i64
  %538 = getelementptr inbounds double, ptr %511, i64 %537
  %539 = load double, ptr %538, align 8, !tbaa !52
  %540 = fcmp une double %539, 0.000000e+00
  br i1 %540, label %541, label %546

541:                                              ; preds = %530
  %542 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %531
  %543 = getelementptr inbounds double, ptr %532, i64 1
  store double %539, ptr %532, align 8, !tbaa !52
  %544 = load i32, ptr %542, align 8, !tbaa !317
  %545 = getelementptr inbounds i32, ptr %533, i64 1
  store i32 %544, ptr %533, align 4, !tbaa !22
  br label %546

546:                                              ; preds = %541, %530
  %547 = phi ptr [ %545, %541 ], [ %533, %530 ]
  %548 = phi ptr [ %543, %541 ], [ %532, %530 ]
  %549 = or i64 %531, 1
  %550 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %549, i32 1
  %551 = load i32, ptr %550, align 4, !tbaa !319
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds double, ptr %511, i64 %552
  %554 = load double, ptr %553, align 8, !tbaa !52
  %555 = fcmp une double %554, 0.000000e+00
  br i1 %555, label %556, label %561

556:                                              ; preds = %546
  %557 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %549
  %558 = getelementptr inbounds double, ptr %548, i64 1
  store double %554, ptr %548, align 8, !tbaa !52
  %559 = load i32, ptr %557, align 8, !tbaa !317
  %560 = getelementptr inbounds i32, ptr %547, i64 1
  store i32 %559, ptr %547, align 4, !tbaa !22
  br label %561

561:                                              ; preds = %556, %546
  %562 = phi ptr [ %560, %556 ], [ %547, %546 ]
  %563 = phi ptr [ %558, %556 ], [ %548, %546 ]
  %564 = add nuw nsw i64 %531, 2
  %565 = add i64 %534, 2
  %566 = icmp eq i64 %565, %490
  br i1 %566, label %512, label %530

567:                                              ; preds = %528
  %568 = load ptr, ptr %483, align 8, !tbaa !60
  %569 = zext i32 %505 to i64
  %570 = getelementptr inbounds double, ptr %568, i64 %569
  %571 = load double, ptr %570, align 8, !tbaa !52
  br i1 %484, label %852, label %572

572:                                              ; preds = %567, %572
  %573 = phi i64 [ %588, %572 ], [ 0, %567 ]
  %574 = phi i32 [ %587, %572 ], [ 0, %567 ]
  %575 = phi double [ %586, %572 ], [ %571, %567 ]
  %576 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %573
  %577 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %573, i32 1
  %578 = load ptr, ptr %577, align 8, !tbaa !328
  %579 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %578, i64 0, i32 2
  %580 = load double, ptr %579, align 8, !tbaa !48
  %581 = load i32, ptr %576, align 8, !tbaa !326
  %582 = zext i32 %581 to i64
  %583 = getelementptr inbounds double, ptr %511, i64 %582
  %584 = load double, ptr %583, align 8, !tbaa !52
  %585 = fneg double %580
  %586 = call double @llvm.fmuladd.f64(double %585, double %584, double %575)
  %587 = add i32 %574, 1
  %588 = zext i32 %587 to i64
  %589 = icmp ugt i64 %384, %588
  br i1 %589, label %572, label %852

590:                                              ; preds = %499
  %591 = icmp eq i32 %505, -1
  %592 = load ptr, ptr %481, align 8
  %593 = load i32, ptr %482, align 8
  %594 = mul i32 %593, %505
  %595 = zext i32 %594 to i64
  %596 = getelementptr inbounds double, ptr %592, i64 %595
  %597 = select i1 %591, ptr null, ptr %596
  %598 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %500, i32 2
  %599 = load ptr, ptr %598, align 8, !tbaa !320
  %600 = icmp eq ptr %599, null
  %601 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %599, i64 0, i32 1
  br label %603

602:                                              ; preds = %771
  br i1 %16, label %852, label %776

603:                                              ; preds = %590, %771
  %604 = phi i64 [ 0, %590 ], [ %774, %771 ]
  %605 = phi ptr [ %475, %590 ], [ %773, %771 ]
  %606 = phi ptr [ %474, %590 ], [ %772, %771 ]
  %607 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %604
  %608 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %604, i32 1
  %609 = load i32, ptr %608, align 4, !tbaa !319
  br i1 %591, label %645, label %610

610:                                              ; preds = %603
  %611 = icmp eq i32 %609, -1
  br i1 %611, label %616, label %612

612:                                              ; preds = %610
  %613 = zext i32 %609 to i64
  %614 = getelementptr inbounds double, ptr %596, i64 %613
  %615 = load double, ptr %614, align 8, !tbaa !52
  br label %616

616:                                              ; preds = %610, %612
  %617 = phi double [ %615, %612 ], [ 0.000000e+00, %610 ]
  %618 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %604, i32 2
  %619 = load ptr, ptr %618, align 8, !tbaa !320
  %620 = icmp eq ptr %619, null
  br i1 %620, label %645, label %621

621:                                              ; preds = %616
  %622 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %619, i64 0, i32 1
  %623 = load ptr, ptr %622, align 8, !tbaa !31
  %624 = load ptr, ptr %619, align 8, !tbaa !32
  %625 = ptrtoint ptr %623 to i64
  %626 = ptrtoint ptr %624 to i64
  %627 = sub i64 %625, %626
  %628 = ashr exact i64 %627, 4
  %629 = icmp eq ptr %623, %624
  br i1 %629, label %645, label %630

630:                                              ; preds = %621, %630
  %631 = phi i64 [ %643, %630 ], [ 0, %621 ]
  %632 = phi i32 [ %642, %630 ], [ 0, %621 ]
  %633 = phi double [ %641, %630 ], [ %617, %621 ]
  %634 = getelementptr inbounds %"struct.std::pair", ptr %624, i64 %631
  %635 = load i32, ptr %634, align 8, !tbaa !37
  %636 = zext i32 %635 to i64
  %637 = getelementptr inbounds double, ptr %597, i64 %636
  %638 = load double, ptr %637, align 8, !tbaa !52
  %639 = getelementptr inbounds %"struct.std::pair", ptr %624, i64 %631, i32 1
  %640 = load double, ptr %639, align 8, !tbaa !35
  %641 = call double @llvm.fmuladd.f64(double %638, double %640, double %633)
  %642 = add i32 %632, 1
  %643 = zext i32 %642 to i64
  %644 = icmp ugt i64 %628, %643
  br i1 %644, label %630, label %645

645:                                              ; preds = %630, %621, %603, %616
  %646 = phi double [ %617, %616 ], [ 0.000000e+00, %603 ], [ %617, %621 ], [ %641, %630 ]
  br i1 %600, label %764, label %647

647:                                              ; preds = %645
  %648 = load ptr, ptr %601, align 8, !tbaa !31
  %649 = load ptr, ptr %599, align 8, !tbaa !32
  %650 = ptrtoint ptr %648 to i64
  %651 = ptrtoint ptr %649 to i64
  %652 = sub i64 %650, %651
  %653 = ashr exact i64 %652, 4
  %654 = icmp eq ptr %648, %649
  br i1 %654, label %764, label %655

655:                                              ; preds = %647
  %656 = icmp eq i32 %609, -1
  %657 = load ptr, ptr %481, align 8
  %658 = load i32, ptr %482, align 8
  %659 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %604, i32 2
  %660 = load ptr, ptr %659, align 8, !tbaa !320
  %661 = icmp eq ptr %660, null
  br i1 %661, label %662, label %690

662:                                              ; preds = %655
  br i1 %656, label %663, label %673

663:                                              ; preds = %662, %663
  %664 = phi i64 [ %671, %663 ], [ 0, %662 ]
  %665 = phi i32 [ %670, %663 ], [ 0, %662 ]
  %666 = phi double [ %669, %663 ], [ %646, %662 ]
  %667 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %664, i32 1
  %668 = load double, ptr %667, align 8, !tbaa !35
  %669 = call double @llvm.fmuladd.f64(double %668, double 0.000000e+00, double %666)
  %670 = add i32 %665, 1
  %671 = zext i32 %670 to i64
  %672 = icmp ugt i64 %653, %671
  br i1 %672, label %663, label %764

673:                                              ; preds = %662, %673
  %674 = phi i64 [ %688, %673 ], [ 0, %662 ]
  %675 = phi i32 [ %687, %673 ], [ 0, %662 ]
  %676 = phi double [ %686, %673 ], [ %646, %662 ]
  %677 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %674
  %678 = load i32, ptr %677, align 8, !tbaa !37
  %679 = mul i32 %658, %678
  %680 = add i32 %679, %609
  %681 = zext i32 %680 to i64
  %682 = getelementptr inbounds double, ptr %657, i64 %681
  %683 = load double, ptr %682, align 8, !tbaa !52
  %684 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %674, i32 1
  %685 = load double, ptr %684, align 8, !tbaa !35
  %686 = call double @llvm.fmuladd.f64(double %683, double %685, double %676)
  %687 = add i32 %675, 1
  %688 = zext i32 %687 to i64
  %689 = icmp ugt i64 %653, %688
  br i1 %689, label %673, label %764

690:                                              ; preds = %655
  %691 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %660, i64 0, i32 1
  %692 = load ptr, ptr %691, align 8, !tbaa !31
  %693 = load ptr, ptr %660, align 8, !tbaa !32
  %694 = ptrtoint ptr %692 to i64
  %695 = ptrtoint ptr %693 to i64
  %696 = sub i64 %694, %695
  %697 = ashr exact i64 %696, 4
  %698 = icmp eq ptr %692, %693
  br i1 %698, label %736, label %699

699:                                              ; preds = %690, %729
  %700 = phi i64 [ %734, %729 ], [ 0, %690 ]
  %701 = phi i32 [ %733, %729 ], [ 0, %690 ]
  %702 = phi double [ %732, %729 ], [ %646, %690 ]
  %703 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %700
  %704 = load i32, ptr %703, align 8, !tbaa !37
  %705 = mul i32 %658, %704
  br i1 %656, label %711, label %706

706:                                              ; preds = %699
  %707 = add i32 %705, %609
  %708 = zext i32 %707 to i64
  %709 = getelementptr inbounds double, ptr %657, i64 %708
  %710 = load double, ptr %709, align 8, !tbaa !52
  br label %711

711:                                              ; preds = %699, %706
  %712 = phi double [ %710, %706 ], [ 0.000000e+00, %699 ]
  br label %713

713:                                              ; preds = %711, %713
  %714 = phi i64 [ %727, %713 ], [ 0, %711 ]
  %715 = phi i32 [ %726, %713 ], [ 0, %711 ]
  %716 = phi double [ %725, %713 ], [ %712, %711 ]
  %717 = getelementptr inbounds %"struct.std::pair", ptr %693, i64 %714
  %718 = load i32, ptr %717, align 8, !tbaa !37
  %719 = add i32 %705, %718
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds double, ptr %657, i64 %720
  %722 = load double, ptr %721, align 8, !tbaa !52
  %723 = getelementptr inbounds %"struct.std::pair", ptr %693, i64 %714, i32 1
  %724 = load double, ptr %723, align 8, !tbaa !35
  %725 = call double @llvm.fmuladd.f64(double %722, double %724, double %716)
  %726 = add i32 %715, 1
  %727 = zext i32 %726 to i64
  %728 = icmp ugt i64 %697, %727
  br i1 %728, label %713, label %729

729:                                              ; preds = %713
  %730 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %700, i32 1
  %731 = load double, ptr %730, align 8, !tbaa !35
  %732 = call double @llvm.fmuladd.f64(double %725, double %731, double %702)
  %733 = add i32 %701, 1
  %734 = zext i32 %733 to i64
  %735 = icmp ugt i64 %653, %734
  br i1 %735, label %699, label %764

736:                                              ; preds = %690
  br i1 %656, label %737, label %747

737:                                              ; preds = %736, %737
  %738 = phi i64 [ %745, %737 ], [ 0, %736 ]
  %739 = phi i32 [ %744, %737 ], [ 0, %736 ]
  %740 = phi double [ %743, %737 ], [ %646, %736 ]
  %741 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %738, i32 1
  %742 = load double, ptr %741, align 8, !tbaa !35
  %743 = call double @llvm.fmuladd.f64(double %742, double 0.000000e+00, double %740)
  %744 = add i32 %739, 1
  %745 = zext i32 %744 to i64
  %746 = icmp ugt i64 %653, %745
  br i1 %746, label %737, label %764

747:                                              ; preds = %736, %747
  %748 = phi i64 [ %762, %747 ], [ 0, %736 ]
  %749 = phi i32 [ %761, %747 ], [ 0, %736 ]
  %750 = phi double [ %760, %747 ], [ %646, %736 ]
  %751 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %748
  %752 = load i32, ptr %751, align 8, !tbaa !37
  %753 = mul i32 %658, %752
  %754 = add i32 %753, %609
  %755 = zext i32 %754 to i64
  %756 = getelementptr inbounds double, ptr %657, i64 %755
  %757 = load double, ptr %756, align 8, !tbaa !52
  %758 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %748, i32 1
  %759 = load double, ptr %758, align 8, !tbaa !35
  %760 = call double @llvm.fmuladd.f64(double %757, double %759, double %750)
  %761 = add i32 %749, 1
  %762 = zext i32 %761 to i64
  %763 = icmp ugt i64 %653, %762
  br i1 %763, label %747, label %764

764:                                              ; preds = %729, %747, %737, %673, %663, %647, %645
  %765 = phi double [ %646, %645 ], [ %646, %647 ], [ %669, %663 ], [ %686, %673 ], [ %743, %737 ], [ %760, %747 ], [ %732, %729 ]
  %766 = fcmp une double %765, 0.000000e+00
  br i1 %766, label %767, label %771

767:                                              ; preds = %764
  %768 = getelementptr inbounds double, ptr %605, i64 1
  store double %765, ptr %605, align 8, !tbaa !52
  %769 = load i32, ptr %607, align 8, !tbaa !317
  %770 = getelementptr inbounds i32, ptr %606, i64 1
  store i32 %769, ptr %606, align 4, !tbaa !22
  br label %771

771:                                              ; preds = %767, %764
  %772 = phi ptr [ %770, %767 ], [ %606, %764 ]
  %773 = phi ptr [ %768, %767 ], [ %605, %764 ]
  %774 = add nuw nsw i64 %604, 1
  %775 = icmp eq i64 %774, %487
  br i1 %775, label %602, label %603

776:                                              ; preds = %602
  br i1 %591, label %800, label %777

777:                                              ; preds = %776
  %778 = load ptr, ptr %483, align 8, !tbaa !60
  %779 = zext i32 %505 to i64
  %780 = getelementptr inbounds double, ptr %778, i64 %779
  %781 = load double, ptr %780, align 8, !tbaa !52
  br i1 %484, label %800, label %782

782:                                              ; preds = %777, %782
  %783 = phi i64 [ %798, %782 ], [ 0, %777 ]
  %784 = phi i32 [ %797, %782 ], [ 0, %777 ]
  %785 = phi double [ %796, %782 ], [ %781, %777 ]
  %786 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %783
  %787 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %783, i32 1
  %788 = load ptr, ptr %787, align 8, !tbaa !328
  %789 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %788, i64 0, i32 2
  %790 = load double, ptr %789, align 8, !tbaa !48
  %791 = load i32, ptr %786, align 8, !tbaa !326
  %792 = zext i32 %791 to i64
  %793 = getelementptr inbounds double, ptr %597, i64 %792
  %794 = load double, ptr %793, align 8, !tbaa !52
  %795 = fneg double %790
  %796 = call double @llvm.fmuladd.f64(double %795, double %794, double %785)
  %797 = add i32 %784, 1
  %798 = zext i32 %797 to i64
  %799 = icmp ugt i64 %384, %798
  br i1 %799, label %782, label %800

800:                                              ; preds = %782, %777, %776
  %801 = phi double [ 0.000000e+00, %776 ], [ %781, %777 ], [ %796, %782 ]
  br i1 %600, label %852, label %802

802:                                              ; preds = %800
  %803 = load ptr, ptr %601, align 8, !tbaa !31
  %804 = load ptr, ptr %599, align 8, !tbaa !32
  %805 = ptrtoint ptr %803 to i64
  %806 = ptrtoint ptr %804 to i64
  %807 = sub i64 %805, %806
  %808 = ashr exact i64 %807, 4
  %809 = icmp eq ptr %803, %804
  br i1 %809, label %852, label %810

810:                                              ; preds = %802
  %811 = load ptr, ptr %483, align 8, !tbaa !60
  %812 = load ptr, ptr %481, align 8
  %813 = load i32, ptr %482, align 8
  br label %814

814:                                              ; preds = %810, %825
  %815 = phi i64 [ 0, %810 ], [ %831, %825 ]
  %816 = phi i32 [ 0, %810 ], [ %830, %825 ]
  %817 = phi double [ %801, %810 ], [ %829, %825 ]
  %818 = getelementptr inbounds %"struct.std::pair", ptr %804, i64 %815
  %819 = load i32, ptr %818, align 8, !tbaa !37
  %820 = zext i32 %819 to i64
  %821 = getelementptr inbounds double, ptr %811, i64 %820
  %822 = load double, ptr %821, align 8, !tbaa !52
  br i1 %484, label %825, label %823

823:                                              ; preds = %814
  %824 = mul i32 %813, %819
  br label %833

825:                                              ; preds = %833, %814
  %826 = phi double [ %822, %814 ], [ %848, %833 ]
  %827 = getelementptr inbounds %"struct.std::pair", ptr %804, i64 %815, i32 1
  %828 = load double, ptr %827, align 8, !tbaa !35
  %829 = call double @llvm.fmuladd.f64(double %826, double %828, double %817)
  %830 = add i32 %816, 1
  %831 = zext i32 %830 to i64
  %832 = icmp ugt i64 %808, %831
  br i1 %832, label %814, label %852

833:                                              ; preds = %823, %833
  %834 = phi i64 [ 0, %823 ], [ %850, %833 ]
  %835 = phi i32 [ 0, %823 ], [ %849, %833 ]
  %836 = phi double [ %822, %823 ], [ %848, %833 ]
  %837 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %834
  %838 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %834, i32 1
  %839 = load ptr, ptr %838, align 8, !tbaa !328
  %840 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %839, i64 0, i32 2
  %841 = load double, ptr %840, align 8, !tbaa !48
  %842 = load i32, ptr %837, align 8, !tbaa !326
  %843 = add i32 %824, %842
  %844 = zext i32 %843 to i64
  %845 = getelementptr inbounds double, ptr %812, i64 %844
  %846 = load double, ptr %845, align 8, !tbaa !52
  %847 = fneg double %841
  %848 = call double @llvm.fmuladd.f64(double %847, double %846, double %836)
  %849 = add i32 %835, 1
  %850 = zext i32 %849 to i64
  %851 = icmp ugt i64 %384, %850
  br i1 %851, label %833, label %825

852:                                              ; preds = %825, %572, %802, %567, %602, %800, %528
  %853 = phi ptr [ %529, %528 ], [ %772, %800 ], [ %772, %602 ], [ %529, %567 ], [ %772, %802 ], [ %529, %572 ], [ %772, %825 ]
  %854 = phi double [ 0.000000e+00, %528 ], [ %801, %800 ], [ 0.000000e+00, %602 ], [ %571, %567 ], [ %801, %802 ], [ %586, %572 ], [ %829, %825 ]
  %855 = ptrtoint ptr %853 to i64
  %856 = sub i64 %855, %485
  %857 = and i64 %856, 17179869180
  %858 = icmp eq i64 %857, 0
  br i1 %858, label %881, label %859

859:                                              ; preds = %852
  %860 = lshr exact i64 %856, 2
  %861 = and i64 %860, 4294967295
  br label %862

862:                                              ; preds = %876, %859
  %863 = phi i64 [ %877, %876 ], [ 0, %859 ]
  %864 = getelementptr inbounds double, ptr %475, i64 %863
  %865 = load double, ptr %864, align 8, !tbaa !52
  %866 = fptrunc double %865 to float
  %867 = fcmp oeq float %866, 0.000000e+00
  br i1 %867, label %876, label %868

868:                                              ; preds = %862
  %869 = getelementptr inbounds i32, ptr %474, i64 %863
  %870 = load i32, ptr %869, align 4, !tbaa !22
  %871 = invoke noundef ptr @_ZN6dealii14SparseMatrixEZIfE8allocateEjj(ptr noundef nonnull align 8 dereferenceable(132) %4, i32 noundef %503, i32 noundef %870)
          to label %872 unwind label %879

872:                                              ; preds = %868
  %873 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %871, i64 0, i32 1
  %874 = load float, ptr %873, align 4, !tbaa !413
  %875 = fadd float %874, %866
  store float %875, ptr %873, align 4, !tbaa !413
  br label %876

876:                                              ; preds = %872, %862
  %877 = add nuw nsw i64 %863, 1
  %878 = icmp eq i64 %877, %861
  br i1 %878, label %881, label %862

879:                                              ; preds = %868
  %880 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %475) #23
  br label %922

881:                                              ; preds = %876, %852
  %882 = fcmp une double %854, 0.000000e+00
  br i1 %882, label %883, label %889

883:                                              ; preds = %881
  %884 = load ptr, ptr %486, align 8, !tbaa !60
  %885 = zext i32 %503 to i64
  %886 = getelementptr inbounds double, ptr %884, i64 %885
  %887 = load double, ptr %886, align 8, !tbaa !52
  %888 = fadd double %854, %887
  store double %888, ptr %886, align 8, !tbaa !52
  br label %889

889:                                              ; preds = %883, %881
  %890 = add nuw nsw i64 %500, 1
  %891 = icmp eq i64 %890, %487
  br i1 %891, label %492, label %499

892:                                              ; preds = %494, %492
  %893 = icmp eq ptr %474, null
  br i1 %893, label %895, label %894

894:                                              ; preds = %892
  call void @_ZdlPv(ptr noundef nonnull %474) #23
  br label %895

895:                                              ; preds = %894, %892
  %896 = icmp eq ptr %166, null
  br i1 %896, label %898, label %897

897:                                              ; preds = %895
  call void @_ZdlPv(ptr noundef nonnull %166) #23
  br label %898

898:                                              ; preds = %897, %895
  %899 = load ptr, ptr %7, align 8, !tbaa !321
  %900 = load ptr, ptr %151, align 8, !tbaa !325
  %901 = icmp eq ptr %899, %900
  br i1 %901, label %917, label %902

902:                                              ; preds = %898, %912
  %903 = phi ptr [ %913, %912 ], [ %899, %898 ]
  %904 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %903, i64 0, i32 2
  %905 = load ptr, ptr %904, align 8, !tbaa !320
  %906 = icmp eq ptr %905, null
  br i1 %906, label %912, label %907

907:                                              ; preds = %902
  %908 = load ptr, ptr %905, align 8, !tbaa !32
  %909 = icmp eq ptr %908, null
  br i1 %909, label %911, label %910

910:                                              ; preds = %907
  call void @_ZdlPv(ptr noundef nonnull %908) #23
  br label %911

911:                                              ; preds = %910, %907
  call void @_ZdlPv(ptr noundef nonnull %905) #23
  store ptr null, ptr %904, align 8, !tbaa !320
  br label %912

912:                                              ; preds = %911, %902
  %913 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %903, i64 1
  %914 = icmp eq ptr %913, %900
  br i1 %914, label %915, label %902

915:                                              ; preds = %912
  %916 = load ptr, ptr %7, align 8, !tbaa !321
  br label %917

917:                                              ; preds = %915, %898
  %918 = phi ptr [ %916, %915 ], [ %899, %898 ]
  %919 = icmp eq ptr %918, null
  br i1 %919, label %921, label %920

920:                                              ; preds = %917
  call void @_ZdlPv(ptr noundef nonnull %918) #23
  br label %921

921:                                              ; preds = %917, %920
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  ret void

922:                                              ; preds = %497, %879
  %923 = phi ptr [ %405, %497 ], [ %474, %879 ]
  %924 = phi { ptr, i32 } [ %498, %497 ], [ %880, %879 ]
  call void @_ZdlPv(ptr noundef nonnull %923) #23
  br label %925

925:                                              ; preds = %314, %316, %470, %459, %922, %495, %409
  %926 = phi ptr [ %166, %409 ], [ %166, %459 ], [ %166, %470 ], [ %166, %922 ], [ %166, %495 ], [ %203, %314 ], [ %203, %316 ]
  %927 = phi { ptr, i32 } [ %410, %409 ], [ %460, %459 ], [ %471, %470 ], [ %924, %922 ], [ %496, %495 ], [ %315, %314 ], [ %317, %316 ]
  %928 = icmp eq ptr %926, null
  br i1 %928, label %930, label %929

929:                                              ; preds = %925
  call void @_ZdlPv(ptr noundef nonnull %926) #23
  br label %930

930:                                              ; preds = %929, %925
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %931 unwind label %933

931:                                              ; preds = %930, %199
  %932 = phi { ptr, i32 } [ %927, %930 ], [ %198, %199 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  resume { ptr, i32 } %932

933:                                              ; preds = %930, %409, %197
  %934 = landingpad { ptr, i32 }
          catch ptr null
  %935 = extractvalue { ptr, i32 } %934, 0
  call void @__clang_call_terminate(ptr %935) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIfEENS_6VectorIfEEEEvRKNS_10FullMatrixIdEERKNS4_IdEERKSt6vectorIjSaIjEERT_RT0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(132) %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIfEENS_6VectorIfEEEEvRKNS_10FullMatrixIdEERKNS4_IdEERKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(132) %4, ptr noundef nonnull align 8 dereferenceable(88) %5)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix26distribute_local_to_globalINS_14SparseMatrixEZIfEENS_6VectorIfEEEEvRKNS_10FullMatrixIdEERKNS4_IdEERKSt6vectorIjSaIjEERT_RT0_NS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(92) %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(132) %4, ptr noundef nonnull align 8 dereferenceable(88) %5) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::vector.178", align 8
  %8 = alloca %"struct.dealii::internals::distributing", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !53
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 1
  %14 = load i32, ptr %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %12, i1 %15, i1 false
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !313
  %19 = load ptr, ptr %3, align 8, !tbaa !58
  %20 = ptrtoint ptr %18 to i64
  %21 = ptrtoint ptr %19 to i64
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 2
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %57, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !314
  %29 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %30 = load i32, ptr %29, align 8, !tbaa !22
  %31 = add i32 %30, 1
  %32 = and i64 %23, 4294967295
  %33 = add nsw i64 %32, -1
  %34 = and i64 %23, 3
  %35 = icmp ult i64 %33, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %26
  %37 = sub nsw i64 %32, %34
  br label %107

38:                                               ; preds = %107, %26
  %39 = phi double [ undef, %26 ], [ %141, %107 ]
  %40 = phi i64 [ 0, %26 ], [ %142, %107 ]
  %41 = phi double [ 0.000000e+00, %26 ], [ %141, %107 ]
  %42 = icmp eq i64 %34, 0
  br i1 %42, label %57, label %43

43:                                               ; preds = %38, %43
  %44 = phi i64 [ %54, %43 ], [ %40, %38 ]
  %45 = phi double [ %53, %43 ], [ %41, %38 ]
  %46 = phi i64 [ %55, %43 ], [ 0, %38 ]
  %47 = trunc i64 %44 to i32
  %48 = mul i32 %31, %47
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds double, ptr %28, i64 %49
  %51 = load double, ptr %50, align 8, !tbaa !52
  %52 = tail call double @llvm.fabs.f64(double %51)
  %53 = fadd double %45, %52
  %54 = add nuw nsw i64 %44, 1
  %55 = add i64 %46, 1
  %56 = icmp eq i64 %55, %34
  br i1 %56, label %57, label %43, !llvm.loop !415

57:                                               ; preds = %38, %43, %6
  %58 = phi double [ 0.000000e+00, %6 ], [ %39, %38 ], [ %53, %43 ]
  %59 = uitofp i32 %24 to double
  %60 = fdiv double %58, %59
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %61 = and i64 %23, 4294967295
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #24
  store i32 -1, ptr %8, align 8, !tbaa !317
  %62 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 1
  store i32 -1, ptr %62, align 4, !tbaa !319
  %63 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %8, i64 0, i32 2
  store ptr null, ptr %63, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %148

67:                                               ; preds = %57
  %68 = shl nuw nsw i64 %61, 4
  %69 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %68) #21
          to label %70 unwind label %197

70:                                               ; preds = %67
  store ptr %69, ptr %7, align 8, !tbaa !321
  %71 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %69, i64 %61
  %72 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %71, ptr %72, align 8, !tbaa !323
  %73 = and i64 %23, 3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %70, %75
  %76 = phi ptr [ %82, %75 ], [ %69, %70 ]
  %77 = phi i64 [ %81, %75 ], [ %61, %70 ]
  %78 = phi i64 [ %83, %75 ], [ 0, %70 ]
  %79 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 0, i32 2
  store ptr null, ptr %79, align 8, !tbaa !320
  store i32 -1, ptr %76, align 8, !tbaa !317
  %80 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 0, i32 1
  store i32 -1, ptr %80, align 4, !tbaa !319
  %81 = add nsw i64 %77, -1
  %82 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %76, i64 1
  %83 = add i64 %78, 1
  %84 = icmp eq i64 %83, %73
  br i1 %84, label %85, label %75, !llvm.loop !416

85:                                               ; preds = %75, %70
  %86 = phi ptr [ undef, %70 ], [ %82, %75 ]
  %87 = phi ptr [ %69, %70 ], [ %82, %75 ]
  %88 = phi i64 [ %61, %70 ], [ %81, %75 ]
  %89 = icmp ult i64 %61, 4
  br i1 %89, label %145, label %90

90:                                               ; preds = %85, %90
  %91 = phi ptr [ %105, %90 ], [ %87, %85 ]
  %92 = phi i64 [ %104, %90 ], [ %88, %85 ]
  %93 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 0, i32 2
  store ptr null, ptr %93, align 8, !tbaa !320
  store i32 -1, ptr %91, align 8, !tbaa !317
  %94 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 0, i32 1
  store i32 -1, ptr %94, align 4, !tbaa !319
  %95 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1
  %96 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1, i32 2
  store ptr null, ptr %96, align 8, !tbaa !320
  store i32 -1, ptr %95, align 8, !tbaa !317
  %97 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 1, i32 1
  store i32 -1, ptr %97, align 4, !tbaa !319
  %98 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2
  %99 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2, i32 2
  store ptr null, ptr %99, align 8, !tbaa !320
  store i32 -1, ptr %98, align 8, !tbaa !317
  %100 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 2, i32 1
  store i32 -1, ptr %100, align 4, !tbaa !319
  %101 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3
  %102 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3, i32 2
  store ptr null, ptr %102, align 8, !tbaa !320
  store i32 -1, ptr %101, align 8, !tbaa !317
  %103 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 3, i32 1
  store i32 -1, ptr %103, align 4, !tbaa !319
  %104 = add nsw i64 %92, -4
  %105 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %91, i64 4
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %145, label %90

107:                                              ; preds = %107, %36
  %108 = phi i64 [ 0, %36 ], [ %142, %107 ]
  %109 = phi double [ 0.000000e+00, %36 ], [ %141, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %143, %107 ]
  %111 = trunc i64 %108 to i32
  %112 = mul i32 %31, %111
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds double, ptr %28, i64 %113
  %115 = load double, ptr %114, align 8, !tbaa !52
  %116 = tail call double @llvm.fabs.f64(double %115)
  %117 = fadd double %109, %116
  %118 = trunc i64 %108 to i32
  %119 = or i32 %118, 1
  %120 = mul i32 %31, %119
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds double, ptr %28, i64 %121
  %123 = load double, ptr %122, align 8, !tbaa !52
  %124 = tail call double @llvm.fabs.f64(double %123)
  %125 = fadd double %117, %124
  %126 = trunc i64 %108 to i32
  %127 = or i32 %126, 2
  %128 = mul i32 %31, %127
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %28, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !52
  %132 = tail call double @llvm.fabs.f64(double %131)
  %133 = fadd double %125, %132
  %134 = trunc i64 %108 to i32
  %135 = or i32 %134, 3
  %136 = mul i32 %31, %135
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds double, ptr %28, i64 %137
  %139 = load double, ptr %138, align 8, !tbaa !52
  %140 = tail call double @llvm.fabs.f64(double %139)
  %141 = fadd double %133, %140
  %142 = add nuw nsw i64 %108, 4
  %143 = add i64 %110, 4
  %144 = icmp eq i64 %143, %37
  br i1 %144, label %38, label %107

145:                                              ; preds = %90, %85
  %146 = phi ptr [ %86, %85 ], [ %105, %90 ]
  %147 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %146, ptr %147, align 8, !tbaa !325
  br label %148

148:                                              ; preds = %145, %65
  %149 = phi ptr [ null, %65 ], [ %69, %145 ]
  %150 = phi ptr [ null, %65 ], [ %146, %145 ]
  %151 = phi ptr [ %66, %65 ], [ %147, %145 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br i1 %25, label %162, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %154 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %155 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %156 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %157 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %158 = and i64 %23, 4294967295
  br label %200

159:                                              ; preds = %307
  %160 = load ptr, ptr %151, align 8, !tbaa !21
  %161 = load ptr, ptr %7, align 8, !tbaa !321
  br label %162

162:                                              ; preds = %159, %148
  %163 = phi ptr [ %149, %148 ], [ %161, %159 ]
  %164 = phi ptr [ %150, %148 ], [ %160, %159 ]
  %165 = phi ptr [ null, %148 ], [ %309, %159 ]
  %166 = phi ptr [ null, %148 ], [ %310, %159 ]
  %167 = phi i32 [ 0, %148 ], [ %311, %159 ]
  %168 = zext i32 %167 to i64
  store i32 -1, ptr %9, align 8, !tbaa !317
  %169 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %169, align 4, !tbaa !319
  %170 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %170, align 8, !tbaa !320
  %171 = ptrtoint ptr %164 to i64
  %172 = ptrtoint ptr %163 to i64
  %173 = sub i64 %171, %172
  %174 = ashr exact i64 %173, 4
  %175 = icmp ult i64 %174, %168
  br i1 %175, label %176, label %178

176:                                              ; preds = %162
  %177 = sub nsw i64 %168, %174
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %164, i64 noundef %177, ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %318 unwind label %409

178:                                              ; preds = %162
  %179 = icmp ugt i64 %174, %168
  br i1 %179, label %180, label %318

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %163, i64 %168
  %182 = icmp eq ptr %164, %181
  br i1 %182, label %318, label %183

183:                                              ; preds = %180, %193
  %184 = phi ptr [ %194, %193 ], [ %181, %180 ]
  %185 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %184, i64 0, i32 2
  %186 = load ptr, ptr %185, align 8, !tbaa !320
  %187 = icmp eq ptr %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %183
  %189 = load ptr, ptr %186, align 8, !tbaa !32
  %190 = icmp eq ptr %189, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  tail call void @_ZdlPv(ptr noundef nonnull %189) #23
  br label %192

192:                                              ; preds = %191, %188
  tail call void @_ZdlPv(ptr noundef nonnull %186) #23
  store ptr null, ptr %185, align 8, !tbaa !320
  br label %193

193:                                              ; preds = %192, %183
  %194 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %184, i64 1
  %195 = icmp eq ptr %194, %164
  br i1 %195, label %196, label %183

196:                                              ; preds = %193
  store ptr %181, ptr %151, align 8, !tbaa !325
  br label %318

197:                                              ; preds = %67
  %198 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %8)
          to label %199 unwind label %935

199:                                              ; preds = %197
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #24
  br label %933

200:                                              ; preds = %152, %307
  %201 = phi i64 [ 0, %152 ], [ %312, %307 ]
  %202 = phi i32 [ 0, %152 ], [ %311, %307 ]
  %203 = phi ptr [ null, %152 ], [ %310, %307 ]
  %204 = phi ptr [ null, %152 ], [ %309, %307 ]
  %205 = phi ptr [ null, %152 ], [ %308, %307 ]
  %206 = load ptr, ptr %154, align 8, !tbaa !55
  %207 = load i32, ptr %155, align 8, !tbaa !57
  %208 = load ptr, ptr %153, align 8, !tbaa !55
  %209 = ptrtoint ptr %206 to i64
  %210 = ptrtoint ptr %208 to i64
  %211 = sub i64 %209, %210
  %212 = shl nsw i64 %211, 3
  %213 = zext i32 %207 to i64
  %214 = add nsw i64 %212, %213
  %215 = load ptr, ptr %3, align 8, !tbaa !58
  %216 = getelementptr inbounds i32, ptr %215, i64 %201
  %217 = load i32, ptr %216, align 4, !tbaa !22
  %218 = zext i32 %217 to i64
  %219 = icmp ugt i64 %214, %218
  br i1 %219, label %220, label %230

220:                                              ; preds = %200
  %221 = lshr i32 %217, 6
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds i64, ptr %208, i64 %222
  %224 = and i32 %217, 63
  %225 = zext i32 %224 to i64
  %226 = shl nuw i64 1, %225
  %227 = load i64, ptr %223, align 8, !tbaa !42
  %228 = and i64 %227, %226
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %237

230:                                              ; preds = %220, %200
  %231 = zext i32 %202 to i64
  %232 = load ptr, ptr %7, align 8, !tbaa !321
  %233 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %232, i64 %231
  store i32 %217, ptr %233, align 8, !tbaa !317
  %234 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %232, i64 %231, i32 1
  %235 = trunc i64 %201 to i32
  store i32 %235, ptr %234, align 4, !tbaa !319
  %236 = add i32 %202, 1
  br label %307

237:                                              ; preds = %220
  %238 = load ptr, ptr %156, align 8, !tbaa !21
  %239 = load ptr, ptr %157, align 8, !tbaa !21
  %240 = ptrtoint ptr %239 to i64
  %241 = ptrtoint ptr %238 to i64
  %242 = sub i64 %240, %241
  %243 = icmp sgt i64 %242, 0
  br i1 %243, label %244, label %259

244:                                              ; preds = %237
  %245 = udiv exact i64 %242, 40
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ %245, %244 ], [ %257, %246 ]
  %248 = phi ptr [ %238, %244 ], [ %256, %246 ]
  %249 = lshr i64 %247, 1
  %250 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %248, i64 %249
  %251 = load i32, ptr %250, align 8, !tbaa !24
  %252 = icmp ult i32 %251, %217
  %253 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %250, i64 1
  %254 = xor i64 %249, -1
  %255 = add nsw i64 %247, %254
  %256 = select i1 %252, ptr %253, ptr %248
  %257 = select i1 %252, i64 %255, i64 %249
  %258 = icmp sgt i64 %257, 0
  br i1 %258, label %246, label %259

259:                                              ; preds = %246, %237
  %260 = phi ptr [ %238, %237 ], [ %256, %246 ]
  %261 = icmp eq ptr %204, %205
  br i1 %261, label %265, label %262

262:                                              ; preds = %259
  %263 = trunc i64 %201 to i32
  store i32 %263, ptr %204, align 8
  %264 = getelementptr inbounds i8, ptr %204, i64 8
  store ptr %260, ptr %264, align 8
  br label %302

265:                                              ; preds = %259
  %266 = ptrtoint ptr %204 to i64
  %267 = ptrtoint ptr %203 to i64
  %268 = sub i64 %266, %267
  %269 = icmp eq i64 %268, 9223372036854775792
  br i1 %269, label %270, label %272

270:                                              ; preds = %265
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %271 unwind label %316

271:                                              ; preds = %270
  unreachable

272:                                              ; preds = %265
  %273 = ashr exact i64 %268, 4
  %274 = tail call i64 @llvm.umax.i64(i64 %273, i64 1)
  %275 = add i64 %274, %273
  %276 = icmp ult i64 %275, %273
  %277 = icmp ugt i64 %275, 576460752303423487
  %278 = or i1 %276, %277
  %279 = select i1 %278, i64 576460752303423487, i64 %275
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %284, label %281

281:                                              ; preds = %272
  %282 = shl nuw nsw i64 %279, 4
  %283 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %282) #21
          to label %284 unwind label %314

284:                                              ; preds = %281, %272
  %285 = phi ptr [ null, %272 ], [ %283, %281 ]
  %286 = getelementptr inbounds %"struct.std::pair.188", ptr %285, i64 %273
  %287 = trunc i64 %201 to i32
  store i32 %287, ptr %286, align 8
  %288 = getelementptr inbounds i8, ptr %286, i64 8
  store ptr %260, ptr %288, align 8
  %289 = icmp eq ptr %203, %204
  br i1 %289, label %296, label %290

290:                                              ; preds = %284, %290
  %291 = phi ptr [ %294, %290 ], [ %285, %284 ]
  %292 = phi ptr [ %293, %290 ], [ %203, %284 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %291, ptr noundef nonnull align 8 dereferenceable(16) %292, i64 16, i1 false)
  %293 = getelementptr inbounds %"struct.std::pair.188", ptr %292, i64 1
  %294 = getelementptr inbounds %"struct.std::pair.188", ptr %291, i64 1
  %295 = icmp eq ptr %293, %204
  br i1 %295, label %296, label %290

296:                                              ; preds = %290, %284
  %297 = phi ptr [ %285, %284 ], [ %294, %290 ]
  %298 = icmp eq ptr %203, null
  br i1 %298, label %300, label %299

299:                                              ; preds = %296
  tail call void @_ZdlPv(ptr noundef nonnull %203) #23
  br label %300

300:                                              ; preds = %299, %296
  %301 = getelementptr inbounds %"struct.std::pair.188", ptr %285, i64 %279
  br label %302

302:                                              ; preds = %300, %262
  %303 = phi ptr [ %301, %300 ], [ %205, %262 ]
  %304 = phi ptr [ %297, %300 ], [ %204, %262 ]
  %305 = phi ptr [ %285, %300 ], [ %203, %262 ]
  %306 = getelementptr inbounds %"struct.std::pair.188", ptr %304, i64 1
  br label %307

307:                                              ; preds = %302, %230
  %308 = phi ptr [ %303, %302 ], [ %205, %230 ]
  %309 = phi ptr [ %306, %302 ], [ %204, %230 ]
  %310 = phi ptr [ %305, %302 ], [ %203, %230 ]
  %311 = phi i32 [ %202, %302 ], [ %236, %230 ]
  %312 = add nuw nsw i64 %201, 1
  %313 = icmp eq i64 %312, %158
  br i1 %313, label %159, label %200

314:                                              ; preds = %281
  %315 = landingpad { ptr, i32 }
          cleanup
  br label %927

316:                                              ; preds = %270
  %317 = landingpad { ptr, i32 }
          cleanup
  br label %927

318:                                              ; preds = %196, %180, %178, %176
  %319 = load ptr, ptr %170, align 8, !tbaa !320
  %320 = icmp eq ptr %319, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %318
  %322 = load ptr, ptr %319, align 8, !tbaa !32
  %323 = icmp eq ptr %322, null
  br i1 %323, label %325, label %324

324:                                              ; preds = %321
  call void @_ZdlPv(ptr noundef nonnull %322) #23
  br label %325

325:                                              ; preds = %324, %321
  call void @_ZdlPv(ptr noundef nonnull %319) #23
  store ptr null, ptr %170, align 8, !tbaa !320
  br label %326

326:                                              ; preds = %325, %318
  %327 = load ptr, ptr %151, align 8, !tbaa !325
  %328 = load ptr, ptr %7, align 8, !tbaa !321
  %329 = ptrtoint ptr %327 to i64
  %330 = ptrtoint ptr %328 to i64
  %331 = sub i64 %329, %330
  %332 = lshr exact i64 %331, 4
  %333 = trunc i64 %332 to i32
  %334 = icmp ult i32 %333, 2
  br i1 %334, label %380, label %337

335:                                              ; preds = %376, %337
  %336 = icmp ult i32 %338, 4
  br i1 %336, label %380, label %337

337:                                              ; preds = %326, %335
  %338 = phi i32 [ %339, %335 ], [ %333, %326 ]
  %339 = lshr i32 %338, 1
  %340 = icmp ult i32 %339, %333
  br i1 %340, label %341, label %335

341:                                              ; preds = %337
  %342 = zext i32 %339 to i64
  br label %343

343:                                              ; preds = %376, %341
  %344 = phi i64 [ %342, %341 ], [ %377, %376 ]
  %345 = sub nuw nsw i64 %344, %342
  %346 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %344
  %347 = load <2 x i32>, ptr %346, align 8, !tbaa !22
  %348 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %345
  %349 = load i32, ptr %348, align 8, !tbaa !317
  %350 = extractelement <2 x i32> %347, i64 0
  %351 = icmp ugt i32 %349, %350
  br i1 %351, label %352, label %376

352:                                              ; preds = %343
  %353 = icmp ult i64 %344, %342
  %354 = trunc i64 %344 to i32
  br i1 %353, label %372, label %355

355:                                              ; preds = %352
  %356 = trunc i64 %345 to i32
  br label %357

357:                                              ; preds = %364, %355
  %358 = phi i32 [ %359, %364 ], [ %354, %355 ]
  %359 = phi i32 [ %370, %364 ], [ %356, %355 ]
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %360
  %362 = load i32, ptr %361, align 8, !tbaa !317
  %363 = icmp ugt i32 %362, %350
  br i1 %363, label %364, label %372

364:                                              ; preds = %357
  %365 = zext i32 %358 to i64
  %366 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %365
  store i32 %362, ptr %366, align 8, !tbaa !317
  %367 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %360, i32 1
  %368 = load i32, ptr %367, align 4, !tbaa !319
  %369 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %365, i32 1
  store i32 %368, ptr %369, align 4, !tbaa !319
  %370 = sub i32 %359, %339
  %371 = icmp ult i32 %359, %339
  br i1 %371, label %372, label %357

372:                                              ; preds = %364, %357, %352
  %373 = phi i32 [ %354, %352 ], [ %358, %357 ], [ %359, %364 ]
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %328, i64 %374
  store <2 x i32> %347, ptr %375, align 8, !tbaa !22
  br label %376

376:                                              ; preds = %372, %343
  %377 = add nuw nsw i64 %344, 1
  %378 = trunc i64 %377 to i32
  %379 = icmp eq i32 %333, %378
  br i1 %379, label %335, label %343

380:                                              ; preds = %335, %326
  %381 = ptrtoint ptr %165 to i64
  %382 = ptrtoint ptr %166 to i64
  %383 = sub i64 %381, %382
  %384 = ashr exact i64 %383, 4
  %385 = and i64 %383, 68719476720
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %397, label %387

387:                                              ; preds = %380
  %388 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %389 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %390 = and i64 %384, 4294967295
  br label %411

391:                                              ; preds = %467
  %392 = load ptr, ptr %151, align 8, !tbaa !325
  %393 = load ptr, ptr %7, align 8, !tbaa !321
  %394 = ptrtoint ptr %392 to i64
  %395 = ptrtoint ptr %393 to i64
  %396 = sub i64 %394, %395
  br label %397

397:                                              ; preds = %391, %380
  %398 = phi i64 [ %396, %391 ], [ %331, %380 ]
  %399 = phi i8 [ %428, %391 ], [ 0, %380 ]
  %400 = ashr exact i64 %398, 4
  %401 = and i64 %400, 4294967295
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %473, label %403

403:                                              ; preds = %397
  %404 = shl nuw nsw i64 %401, 2
  %405 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %404) #21
          to label %406 unwind label %495

406:                                              ; preds = %403
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %405, i8 0, i64 %404, i1 false), !tbaa !22
  %407 = shl nuw nsw i64 %401, 3
  %408 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %407) #21
          to label %472 unwind label %497

409:                                              ; preds = %176
  %410 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %927 unwind label %935

411:                                              ; preds = %387, %467
  %412 = phi i64 [ 0, %387 ], [ %468, %467 ]
  %413 = phi i8 [ 0, %387 ], [ %428, %467 ]
  %414 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %412
  %415 = load i32, ptr %414, align 8, !tbaa !326
  %416 = zext i32 %415 to i64
  %417 = load ptr, ptr %3, align 8, !tbaa !58
  %418 = getelementptr inbounds i32, ptr %417, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !22
  %420 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %412, i32 1
  %421 = load ptr, ptr %420, align 8, !tbaa !328
  %422 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %421, i64 0, i32 1
  %423 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %421, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %424 = load ptr, ptr %423, align 8, !tbaa !31
  %425 = load ptr, ptr %422, align 8, !tbaa !32
  %426 = icmp eq ptr %424, %425
  br i1 %426, label %427, label %441

427:                                              ; preds = %449, %411
  %428 = phi i8 [ %413, %411 ], [ 1, %449 ]
  %429 = load ptr, ptr %388, align 8, !tbaa !314
  %430 = load i32, ptr %389, align 8, !tbaa !22
  %431 = add i32 %430, 1
  %432 = mul i32 %431, %415
  %433 = zext i32 %432 to i64
  %434 = getelementptr inbounds double, ptr %429, i64 %433
  %435 = load double, ptr %434, align 8, !tbaa !52
  %436 = fcmp une double %435, 0.000000e+00
  %437 = call double @llvm.fabs.f64(double %435)
  %438 = select i1 %436, double %437, double %60
  %439 = fptrunc double %438 to float
  %440 = fcmp oeq float %439, 0.000000e+00
  br i1 %440, label %467, label %461

441:                                              ; preds = %411, %449
  %442 = phi ptr [ %453, %449 ], [ %425, %411 ]
  %443 = phi i64 [ %451, %449 ], [ 0, %411 ]
  %444 = phi i32 [ %450, %449 ], [ 0, %411 ]
  %445 = getelementptr inbounds %"struct.std::pair", ptr %442, i64 %443
  %446 = load i32, ptr %445, align 8, !tbaa !37
  %447 = getelementptr inbounds %"struct.std::pair", ptr %442, i64 %443, i32 1
  %448 = load double, ptr %447, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %446, i32 %415, double %448)
          to label %449 unwind label %459

449:                                              ; preds = %441
  %450 = add i32 %444, 1
  %451 = zext i32 %450 to i64
  %452 = load ptr, ptr %423, align 8, !tbaa !31
  %453 = load ptr, ptr %422, align 8, !tbaa !32
  %454 = ptrtoint ptr %452 to i64
  %455 = ptrtoint ptr %453 to i64
  %456 = sub i64 %454, %455
  %457 = ashr exact i64 %456, 4
  %458 = icmp ugt i64 %457, %451
  br i1 %458, label %441, label %427

459:                                              ; preds = %441
  %460 = landingpad { ptr, i32 }
          cleanup
  br label %927

461:                                              ; preds = %427
  %462 = invoke noundef ptr @_ZN6dealii14SparseMatrixEZIfE8allocateEjj(ptr noundef nonnull align 8 dereferenceable(132) %4, i32 noundef %419, i32 noundef %419)
          to label %463 unwind label %470

463:                                              ; preds = %461
  %464 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %462, i64 0, i32 1
  %465 = load float, ptr %464, align 4, !tbaa !413
  %466 = fadd float %465, %439
  store float %466, ptr %464, align 4, !tbaa !413
  br label %467

467:                                              ; preds = %463, %427
  %468 = add nuw nsw i64 %412, 1
  %469 = icmp eq i64 %468, %390
  br i1 %469, label %391, label %411

470:                                              ; preds = %461
  %471 = landingpad { ptr, i32 }
          cleanup
  br label %927

472:                                              ; preds = %406
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %408, i8 0, i64 %407, i1 false), !tbaa !52
  br label %473

473:                                              ; preds = %472, %397
  %474 = phi ptr [ null, %397 ], [ %405, %472 ]
  %475 = phi ptr [ null, %397 ], [ %408, %472 ]
  %476 = and i64 %398, 68719476720
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %492, label %478

478:                                              ; preds = %473
  %479 = and i8 %399, 1
  %480 = icmp eq i8 %479, 0
  %481 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 1
  %482 = getelementptr inbounds %"class.dealii::TableBase.79", ptr %1, i64 0, i32 3, i32 0, i32 0, i64 1
  %483 = getelementptr inbounds %"class.dealii::Vector.35", ptr %2, i64 0, i32 3
  %484 = icmp eq ptr %165, %166
  %485 = ptrtoint ptr %474 to i64
  %486 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 3
  %487 = and i64 %400, 4294967295
  %488 = and i64 %400, 1
  %489 = icmp eq i64 %487, 1
  %490 = sub nsw i64 %487, %488
  %491 = icmp eq i64 %488, 0
  br label %499

492:                                              ; preds = %891, %473
  %493 = icmp eq ptr %475, null
  br i1 %493, label %894, label %494

494:                                              ; preds = %492
  call void @_ZdlPv(ptr noundef nonnull %475) #23
  br label %894

495:                                              ; preds = %403
  %496 = landingpad { ptr, i32 }
          cleanup
  br label %927

497:                                              ; preds = %406
  %498 = landingpad { ptr, i32 }
          cleanup
  br label %924

499:                                              ; preds = %478, %891
  %500 = phi i64 [ 0, %478 ], [ %892, %891 ]
  %501 = load ptr, ptr %7, align 8, !tbaa !321
  %502 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %500
  %503 = load i32, ptr %502, align 8, !tbaa !317
  %504 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %500, i32 1
  %505 = load i32, ptr %504, align 4, !tbaa !319
  br i1 %480, label %506, label %590

506:                                              ; preds = %499
  %507 = load ptr, ptr %481, align 8, !tbaa !314
  %508 = load i32, ptr %482, align 8, !tbaa !22
  %509 = mul i32 %508, %505
  %510 = zext i32 %509 to i64
  %511 = getelementptr inbounds double, ptr %507, i64 %510
  br i1 %489, label %512, label %530

512:                                              ; preds = %561, %506
  %513 = phi ptr [ undef, %506 ], [ %562, %561 ]
  %514 = phi i64 [ 0, %506 ], [ %564, %561 ]
  %515 = phi ptr [ %475, %506 ], [ %563, %561 ]
  %516 = phi ptr [ %474, %506 ], [ %562, %561 ]
  br i1 %491, label %528, label %517

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %514, i32 1
  %519 = load i32, ptr %518, align 4, !tbaa !319
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds double, ptr %511, i64 %520
  %522 = load double, ptr %521, align 8, !tbaa !52
  %523 = fcmp une double %522, 0.000000e+00
  br i1 %523, label %524, label %528

524:                                              ; preds = %517
  %525 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %514
  store double %522, ptr %515, align 8, !tbaa !52
  %526 = load i32, ptr %525, align 8, !tbaa !317
  %527 = getelementptr inbounds i32, ptr %516, i64 1
  store i32 %526, ptr %516, align 4, !tbaa !22
  br label %528

528:                                              ; preds = %517, %524, %512
  %529 = phi ptr [ %513, %512 ], [ %527, %524 ], [ %516, %517 ]
  br i1 %16, label %852, label %567

530:                                              ; preds = %506, %561
  %531 = phi i64 [ %564, %561 ], [ 0, %506 ]
  %532 = phi ptr [ %563, %561 ], [ %475, %506 ]
  %533 = phi ptr [ %562, %561 ], [ %474, %506 ]
  %534 = phi i64 [ %565, %561 ], [ 0, %506 ]
  %535 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %531, i32 1
  %536 = load i32, ptr %535, align 4, !tbaa !319
  %537 = zext i32 %536 to i64
  %538 = getelementptr inbounds double, ptr %511, i64 %537
  %539 = load double, ptr %538, align 8, !tbaa !52
  %540 = fcmp une double %539, 0.000000e+00
  br i1 %540, label %541, label %546

541:                                              ; preds = %530
  %542 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %531
  %543 = getelementptr inbounds double, ptr %532, i64 1
  store double %539, ptr %532, align 8, !tbaa !52
  %544 = load i32, ptr %542, align 8, !tbaa !317
  %545 = getelementptr inbounds i32, ptr %533, i64 1
  store i32 %544, ptr %533, align 4, !tbaa !22
  br label %546

546:                                              ; preds = %541, %530
  %547 = phi ptr [ %545, %541 ], [ %533, %530 ]
  %548 = phi ptr [ %543, %541 ], [ %532, %530 ]
  %549 = or i64 %531, 1
  %550 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %549, i32 1
  %551 = load i32, ptr %550, align 4, !tbaa !319
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds double, ptr %511, i64 %552
  %554 = load double, ptr %553, align 8, !tbaa !52
  %555 = fcmp une double %554, 0.000000e+00
  br i1 %555, label %556, label %561

556:                                              ; preds = %546
  %557 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %549
  %558 = getelementptr inbounds double, ptr %548, i64 1
  store double %554, ptr %548, align 8, !tbaa !52
  %559 = load i32, ptr %557, align 8, !tbaa !317
  %560 = getelementptr inbounds i32, ptr %547, i64 1
  store i32 %559, ptr %547, align 4, !tbaa !22
  br label %561

561:                                              ; preds = %556, %546
  %562 = phi ptr [ %560, %556 ], [ %547, %546 ]
  %563 = phi ptr [ %558, %556 ], [ %548, %546 ]
  %564 = add nuw nsw i64 %531, 2
  %565 = add i64 %534, 2
  %566 = icmp eq i64 %565, %490
  br i1 %566, label %512, label %530

567:                                              ; preds = %528
  %568 = load ptr, ptr %483, align 8, !tbaa !60
  %569 = zext i32 %505 to i64
  %570 = getelementptr inbounds double, ptr %568, i64 %569
  %571 = load double, ptr %570, align 8, !tbaa !52
  br i1 %484, label %852, label %572

572:                                              ; preds = %567, %572
  %573 = phi i64 [ %588, %572 ], [ 0, %567 ]
  %574 = phi i32 [ %587, %572 ], [ 0, %567 ]
  %575 = phi double [ %586, %572 ], [ %571, %567 ]
  %576 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %573
  %577 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %573, i32 1
  %578 = load ptr, ptr %577, align 8, !tbaa !328
  %579 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %578, i64 0, i32 2
  %580 = load double, ptr %579, align 8, !tbaa !48
  %581 = load i32, ptr %576, align 8, !tbaa !326
  %582 = zext i32 %581 to i64
  %583 = getelementptr inbounds double, ptr %511, i64 %582
  %584 = load double, ptr %583, align 8, !tbaa !52
  %585 = fneg double %580
  %586 = call double @llvm.fmuladd.f64(double %585, double %584, double %575)
  %587 = add i32 %574, 1
  %588 = zext i32 %587 to i64
  %589 = icmp ugt i64 %384, %588
  br i1 %589, label %572, label %852

590:                                              ; preds = %499
  %591 = icmp eq i32 %505, -1
  %592 = load ptr, ptr %481, align 8
  %593 = load i32, ptr %482, align 8
  %594 = mul i32 %593, %505
  %595 = zext i32 %594 to i64
  %596 = getelementptr inbounds double, ptr %592, i64 %595
  %597 = select i1 %591, ptr null, ptr %596
  %598 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %500, i32 2
  %599 = load ptr, ptr %598, align 8, !tbaa !320
  %600 = icmp eq ptr %599, null
  %601 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %599, i64 0, i32 1
  br label %603

602:                                              ; preds = %771
  br i1 %16, label %852, label %776

603:                                              ; preds = %590, %771
  %604 = phi i64 [ 0, %590 ], [ %774, %771 ]
  %605 = phi ptr [ %475, %590 ], [ %773, %771 ]
  %606 = phi ptr [ %474, %590 ], [ %772, %771 ]
  %607 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %604
  %608 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %604, i32 1
  %609 = load i32, ptr %608, align 4, !tbaa !319
  br i1 %591, label %645, label %610

610:                                              ; preds = %603
  %611 = icmp eq i32 %609, -1
  br i1 %611, label %616, label %612

612:                                              ; preds = %610
  %613 = zext i32 %609 to i64
  %614 = getelementptr inbounds double, ptr %596, i64 %613
  %615 = load double, ptr %614, align 8, !tbaa !52
  br label %616

616:                                              ; preds = %610, %612
  %617 = phi double [ %615, %612 ], [ 0.000000e+00, %610 ]
  %618 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %604, i32 2
  %619 = load ptr, ptr %618, align 8, !tbaa !320
  %620 = icmp eq ptr %619, null
  br i1 %620, label %645, label %621

621:                                              ; preds = %616
  %622 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %619, i64 0, i32 1
  %623 = load ptr, ptr %622, align 8, !tbaa !31
  %624 = load ptr, ptr %619, align 8, !tbaa !32
  %625 = ptrtoint ptr %623 to i64
  %626 = ptrtoint ptr %624 to i64
  %627 = sub i64 %625, %626
  %628 = ashr exact i64 %627, 4
  %629 = icmp eq ptr %623, %624
  br i1 %629, label %645, label %630

630:                                              ; preds = %621, %630
  %631 = phi i64 [ %643, %630 ], [ 0, %621 ]
  %632 = phi i32 [ %642, %630 ], [ 0, %621 ]
  %633 = phi double [ %641, %630 ], [ %617, %621 ]
  %634 = getelementptr inbounds %"struct.std::pair", ptr %624, i64 %631
  %635 = load i32, ptr %634, align 8, !tbaa !37
  %636 = zext i32 %635 to i64
  %637 = getelementptr inbounds double, ptr %597, i64 %636
  %638 = load double, ptr %637, align 8, !tbaa !52
  %639 = getelementptr inbounds %"struct.std::pair", ptr %624, i64 %631, i32 1
  %640 = load double, ptr %639, align 8, !tbaa !35
  %641 = call double @llvm.fmuladd.f64(double %638, double %640, double %633)
  %642 = add i32 %632, 1
  %643 = zext i32 %642 to i64
  %644 = icmp ugt i64 %628, %643
  br i1 %644, label %630, label %645

645:                                              ; preds = %630, %621, %603, %616
  %646 = phi double [ %617, %616 ], [ 0.000000e+00, %603 ], [ %617, %621 ], [ %641, %630 ]
  br i1 %600, label %764, label %647

647:                                              ; preds = %645
  %648 = load ptr, ptr %601, align 8, !tbaa !31
  %649 = load ptr, ptr %599, align 8, !tbaa !32
  %650 = ptrtoint ptr %648 to i64
  %651 = ptrtoint ptr %649 to i64
  %652 = sub i64 %650, %651
  %653 = ashr exact i64 %652, 4
  %654 = icmp eq ptr %648, %649
  br i1 %654, label %764, label %655

655:                                              ; preds = %647
  %656 = icmp eq i32 %609, -1
  %657 = load ptr, ptr %481, align 8
  %658 = load i32, ptr %482, align 8
  %659 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %501, i64 %604, i32 2
  %660 = load ptr, ptr %659, align 8, !tbaa !320
  %661 = icmp eq ptr %660, null
  br i1 %661, label %662, label %690

662:                                              ; preds = %655
  br i1 %656, label %663, label %673

663:                                              ; preds = %662, %663
  %664 = phi i64 [ %671, %663 ], [ 0, %662 ]
  %665 = phi i32 [ %670, %663 ], [ 0, %662 ]
  %666 = phi double [ %669, %663 ], [ %646, %662 ]
  %667 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %664, i32 1
  %668 = load double, ptr %667, align 8, !tbaa !35
  %669 = call double @llvm.fmuladd.f64(double %668, double 0.000000e+00, double %666)
  %670 = add i32 %665, 1
  %671 = zext i32 %670 to i64
  %672 = icmp ugt i64 %653, %671
  br i1 %672, label %663, label %764

673:                                              ; preds = %662, %673
  %674 = phi i64 [ %688, %673 ], [ 0, %662 ]
  %675 = phi i32 [ %687, %673 ], [ 0, %662 ]
  %676 = phi double [ %686, %673 ], [ %646, %662 ]
  %677 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %674
  %678 = load i32, ptr %677, align 8, !tbaa !37
  %679 = mul i32 %658, %678
  %680 = add i32 %679, %609
  %681 = zext i32 %680 to i64
  %682 = getelementptr inbounds double, ptr %657, i64 %681
  %683 = load double, ptr %682, align 8, !tbaa !52
  %684 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %674, i32 1
  %685 = load double, ptr %684, align 8, !tbaa !35
  %686 = call double @llvm.fmuladd.f64(double %683, double %685, double %676)
  %687 = add i32 %675, 1
  %688 = zext i32 %687 to i64
  %689 = icmp ugt i64 %653, %688
  br i1 %689, label %673, label %764

690:                                              ; preds = %655
  %691 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %660, i64 0, i32 1
  %692 = load ptr, ptr %691, align 8, !tbaa !31
  %693 = load ptr, ptr %660, align 8, !tbaa !32
  %694 = ptrtoint ptr %692 to i64
  %695 = ptrtoint ptr %693 to i64
  %696 = sub i64 %694, %695
  %697 = ashr exact i64 %696, 4
  %698 = icmp eq ptr %692, %693
  br i1 %698, label %736, label %699

699:                                              ; preds = %690, %729
  %700 = phi i64 [ %734, %729 ], [ 0, %690 ]
  %701 = phi i32 [ %733, %729 ], [ 0, %690 ]
  %702 = phi double [ %732, %729 ], [ %646, %690 ]
  %703 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %700
  %704 = load i32, ptr %703, align 8, !tbaa !37
  %705 = mul i32 %658, %704
  br i1 %656, label %711, label %706

706:                                              ; preds = %699
  %707 = add i32 %705, %609
  %708 = zext i32 %707 to i64
  %709 = getelementptr inbounds double, ptr %657, i64 %708
  %710 = load double, ptr %709, align 8, !tbaa !52
  br label %711

711:                                              ; preds = %699, %706
  %712 = phi double [ %710, %706 ], [ 0.000000e+00, %699 ]
  br label %713

713:                                              ; preds = %711, %713
  %714 = phi i64 [ %727, %713 ], [ 0, %711 ]
  %715 = phi i32 [ %726, %713 ], [ 0, %711 ]
  %716 = phi double [ %725, %713 ], [ %712, %711 ]
  %717 = getelementptr inbounds %"struct.std::pair", ptr %693, i64 %714
  %718 = load i32, ptr %717, align 8, !tbaa !37
  %719 = add i32 %705, %718
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds double, ptr %657, i64 %720
  %722 = load double, ptr %721, align 8, !tbaa !52
  %723 = getelementptr inbounds %"struct.std::pair", ptr %693, i64 %714, i32 1
  %724 = load double, ptr %723, align 8, !tbaa !35
  %725 = call double @llvm.fmuladd.f64(double %722, double %724, double %716)
  %726 = add i32 %715, 1
  %727 = zext i32 %726 to i64
  %728 = icmp ugt i64 %697, %727
  br i1 %728, label %713, label %729

729:                                              ; preds = %713
  %730 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %700, i32 1
  %731 = load double, ptr %730, align 8, !tbaa !35
  %732 = call double @llvm.fmuladd.f64(double %725, double %731, double %702)
  %733 = add i32 %701, 1
  %734 = zext i32 %733 to i64
  %735 = icmp ugt i64 %653, %734
  br i1 %735, label %699, label %764

736:                                              ; preds = %690
  br i1 %656, label %737, label %747

737:                                              ; preds = %736, %737
  %738 = phi i64 [ %745, %737 ], [ 0, %736 ]
  %739 = phi i32 [ %744, %737 ], [ 0, %736 ]
  %740 = phi double [ %743, %737 ], [ %646, %736 ]
  %741 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %738, i32 1
  %742 = load double, ptr %741, align 8, !tbaa !35
  %743 = call double @llvm.fmuladd.f64(double %742, double 0.000000e+00, double %740)
  %744 = add i32 %739, 1
  %745 = zext i32 %744 to i64
  %746 = icmp ugt i64 %653, %745
  br i1 %746, label %737, label %764

747:                                              ; preds = %736, %747
  %748 = phi i64 [ %762, %747 ], [ 0, %736 ]
  %749 = phi i32 [ %761, %747 ], [ 0, %736 ]
  %750 = phi double [ %760, %747 ], [ %646, %736 ]
  %751 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %748
  %752 = load i32, ptr %751, align 8, !tbaa !37
  %753 = mul i32 %658, %752
  %754 = add i32 %753, %609
  %755 = zext i32 %754 to i64
  %756 = getelementptr inbounds double, ptr %657, i64 %755
  %757 = load double, ptr %756, align 8, !tbaa !52
  %758 = getelementptr inbounds %"struct.std::pair", ptr %649, i64 %748, i32 1
  %759 = load double, ptr %758, align 8, !tbaa !35
  %760 = call double @llvm.fmuladd.f64(double %757, double %759, double %750)
  %761 = add i32 %749, 1
  %762 = zext i32 %761 to i64
  %763 = icmp ugt i64 %653, %762
  br i1 %763, label %747, label %764

764:                                              ; preds = %729, %747, %737, %673, %663, %647, %645
  %765 = phi double [ %646, %645 ], [ %646, %647 ], [ %669, %663 ], [ %686, %673 ], [ %743, %737 ], [ %760, %747 ], [ %732, %729 ]
  %766 = fcmp une double %765, 0.000000e+00
  br i1 %766, label %767, label %771

767:                                              ; preds = %764
  %768 = getelementptr inbounds double, ptr %605, i64 1
  store double %765, ptr %605, align 8, !tbaa !52
  %769 = load i32, ptr %607, align 8, !tbaa !317
  %770 = getelementptr inbounds i32, ptr %606, i64 1
  store i32 %769, ptr %606, align 4, !tbaa !22
  br label %771

771:                                              ; preds = %767, %764
  %772 = phi ptr [ %770, %767 ], [ %606, %764 ]
  %773 = phi ptr [ %768, %767 ], [ %605, %764 ]
  %774 = add nuw nsw i64 %604, 1
  %775 = icmp eq i64 %774, %487
  br i1 %775, label %602, label %603

776:                                              ; preds = %602
  br i1 %591, label %800, label %777

777:                                              ; preds = %776
  %778 = load ptr, ptr %483, align 8, !tbaa !60
  %779 = zext i32 %505 to i64
  %780 = getelementptr inbounds double, ptr %778, i64 %779
  %781 = load double, ptr %780, align 8, !tbaa !52
  br i1 %484, label %800, label %782

782:                                              ; preds = %777, %782
  %783 = phi i64 [ %798, %782 ], [ 0, %777 ]
  %784 = phi i32 [ %797, %782 ], [ 0, %777 ]
  %785 = phi double [ %796, %782 ], [ %781, %777 ]
  %786 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %783
  %787 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %783, i32 1
  %788 = load ptr, ptr %787, align 8, !tbaa !328
  %789 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %788, i64 0, i32 2
  %790 = load double, ptr %789, align 8, !tbaa !48
  %791 = load i32, ptr %786, align 8, !tbaa !326
  %792 = zext i32 %791 to i64
  %793 = getelementptr inbounds double, ptr %597, i64 %792
  %794 = load double, ptr %793, align 8, !tbaa !52
  %795 = fneg double %790
  %796 = call double @llvm.fmuladd.f64(double %795, double %794, double %785)
  %797 = add i32 %784, 1
  %798 = zext i32 %797 to i64
  %799 = icmp ugt i64 %384, %798
  br i1 %799, label %782, label %800

800:                                              ; preds = %782, %777, %776
  %801 = phi double [ 0.000000e+00, %776 ], [ %781, %777 ], [ %796, %782 ]
  br i1 %600, label %852, label %802

802:                                              ; preds = %800
  %803 = load ptr, ptr %601, align 8, !tbaa !31
  %804 = load ptr, ptr %599, align 8, !tbaa !32
  %805 = ptrtoint ptr %803 to i64
  %806 = ptrtoint ptr %804 to i64
  %807 = sub i64 %805, %806
  %808 = ashr exact i64 %807, 4
  %809 = icmp eq ptr %803, %804
  br i1 %809, label %852, label %810

810:                                              ; preds = %802
  %811 = load ptr, ptr %483, align 8, !tbaa !60
  %812 = load ptr, ptr %481, align 8
  %813 = load i32, ptr %482, align 8
  br label %814

814:                                              ; preds = %810, %825
  %815 = phi i64 [ 0, %810 ], [ %831, %825 ]
  %816 = phi i32 [ 0, %810 ], [ %830, %825 ]
  %817 = phi double [ %801, %810 ], [ %829, %825 ]
  %818 = getelementptr inbounds %"struct.std::pair", ptr %804, i64 %815
  %819 = load i32, ptr %818, align 8, !tbaa !37
  %820 = zext i32 %819 to i64
  %821 = getelementptr inbounds double, ptr %811, i64 %820
  %822 = load double, ptr %821, align 8, !tbaa !52
  br i1 %484, label %825, label %823

823:                                              ; preds = %814
  %824 = mul i32 %813, %819
  br label %833

825:                                              ; preds = %833, %814
  %826 = phi double [ %822, %814 ], [ %848, %833 ]
  %827 = getelementptr inbounds %"struct.std::pair", ptr %804, i64 %815, i32 1
  %828 = load double, ptr %827, align 8, !tbaa !35
  %829 = call double @llvm.fmuladd.f64(double %826, double %828, double %817)
  %830 = add i32 %816, 1
  %831 = zext i32 %830 to i64
  %832 = icmp ugt i64 %808, %831
  br i1 %832, label %814, label %852

833:                                              ; preds = %823, %833
  %834 = phi i64 [ 0, %823 ], [ %850, %833 ]
  %835 = phi i32 [ 0, %823 ], [ %849, %833 ]
  %836 = phi double [ %822, %823 ], [ %848, %833 ]
  %837 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %834
  %838 = getelementptr inbounds %"struct.std::pair.188", ptr %166, i64 %834, i32 1
  %839 = load ptr, ptr %838, align 8, !tbaa !328
  %840 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %839, i64 0, i32 2
  %841 = load double, ptr %840, align 8, !tbaa !48
  %842 = load i32, ptr %837, align 8, !tbaa !326
  %843 = add i32 %824, %842
  %844 = zext i32 %843 to i64
  %845 = getelementptr inbounds double, ptr %812, i64 %844
  %846 = load double, ptr %845, align 8, !tbaa !52
  %847 = fneg double %841
  %848 = call double @llvm.fmuladd.f64(double %847, double %846, double %836)
  %849 = add i32 %835, 1
  %850 = zext i32 %849 to i64
  %851 = icmp ugt i64 %384, %850
  br i1 %851, label %833, label %825

852:                                              ; preds = %825, %572, %802, %567, %602, %800, %528
  %853 = phi ptr [ %529, %528 ], [ %772, %800 ], [ %772, %602 ], [ %529, %567 ], [ %772, %802 ], [ %529, %572 ], [ %772, %825 ]
  %854 = phi double [ 0.000000e+00, %528 ], [ %801, %800 ], [ 0.000000e+00, %602 ], [ %571, %567 ], [ %801, %802 ], [ %586, %572 ], [ %829, %825 ]
  %855 = ptrtoint ptr %853 to i64
  %856 = sub i64 %855, %485
  %857 = and i64 %856, 17179869180
  %858 = icmp eq i64 %857, 0
  br i1 %858, label %881, label %859

859:                                              ; preds = %852
  %860 = lshr exact i64 %856, 2
  %861 = and i64 %860, 4294967295
  br label %862

862:                                              ; preds = %876, %859
  %863 = phi i64 [ %877, %876 ], [ 0, %859 ]
  %864 = getelementptr inbounds double, ptr %475, i64 %863
  %865 = load double, ptr %864, align 8, !tbaa !52
  %866 = fptrunc double %865 to float
  %867 = fcmp oeq float %866, 0.000000e+00
  br i1 %867, label %876, label %868

868:                                              ; preds = %862
  %869 = getelementptr inbounds i32, ptr %474, i64 %863
  %870 = load i32, ptr %869, align 4, !tbaa !22
  %871 = invoke noundef ptr @_ZN6dealii14SparseMatrixEZIfE8allocateEjj(ptr noundef nonnull align 8 dereferenceable(132) %4, i32 noundef %503, i32 noundef %870)
          to label %872 unwind label %879

872:                                              ; preds = %868
  %873 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %871, i64 0, i32 1
  %874 = load float, ptr %873, align 4, !tbaa !413
  %875 = fadd float %874, %866
  store float %875, ptr %873, align 4, !tbaa !413
  br label %876

876:                                              ; preds = %872, %862
  %877 = add nuw nsw i64 %863, 1
  %878 = icmp eq i64 %877, %861
  br i1 %878, label %881, label %862

879:                                              ; preds = %868
  %880 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %475) #23
  br label %924

881:                                              ; preds = %876, %852
  %882 = fcmp une double %854, 0.000000e+00
  br i1 %882, label %883, label %891

883:                                              ; preds = %881
  %884 = load ptr, ptr %486, align 8, !tbaa !49
  %885 = zext i32 %503 to i64
  %886 = getelementptr inbounds float, ptr %884, i64 %885
  %887 = load float, ptr %886, align 4, !tbaa !33
  %888 = fpext float %887 to double
  %889 = fadd double %854, %888
  %890 = fptrunc double %889 to float
  store float %890, ptr %886, align 4, !tbaa !33
  br label %891

891:                                              ; preds = %883, %881
  %892 = add nuw nsw i64 %500, 1
  %893 = icmp eq i64 %892, %487
  br i1 %893, label %492, label %499

894:                                              ; preds = %494, %492
  %895 = icmp eq ptr %474, null
  br i1 %895, label %897, label %896

896:                                              ; preds = %894
  call void @_ZdlPv(ptr noundef nonnull %474) #23
  br label %897

897:                                              ; preds = %896, %894
  %898 = icmp eq ptr %166, null
  br i1 %898, label %900, label %899

899:                                              ; preds = %897
  call void @_ZdlPv(ptr noundef nonnull %166) #23
  br label %900

900:                                              ; preds = %899, %897
  %901 = load ptr, ptr %7, align 8, !tbaa !321
  %902 = load ptr, ptr %151, align 8, !tbaa !325
  %903 = icmp eq ptr %901, %902
  br i1 %903, label %919, label %904

904:                                              ; preds = %900, %914
  %905 = phi ptr [ %915, %914 ], [ %901, %900 ]
  %906 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %905, i64 0, i32 2
  %907 = load ptr, ptr %906, align 8, !tbaa !320
  %908 = icmp eq ptr %907, null
  br i1 %908, label %914, label %909

909:                                              ; preds = %904
  %910 = load ptr, ptr %907, align 8, !tbaa !32
  %911 = icmp eq ptr %910, null
  br i1 %911, label %913, label %912

912:                                              ; preds = %909
  call void @_ZdlPv(ptr noundef nonnull %910) #23
  br label %913

913:                                              ; preds = %912, %909
  call void @_ZdlPv(ptr noundef nonnull %907) #23
  store ptr null, ptr %906, align 8, !tbaa !320
  br label %914

914:                                              ; preds = %913, %904
  %915 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %905, i64 1
  %916 = icmp eq ptr %915, %902
  br i1 %916, label %917, label %904

917:                                              ; preds = %914
  %918 = load ptr, ptr %7, align 8, !tbaa !321
  br label %919

919:                                              ; preds = %917, %900
  %920 = phi ptr [ %918, %917 ], [ %901, %900 ]
  %921 = icmp eq ptr %920, null
  br i1 %921, label %923, label %922

922:                                              ; preds = %919
  call void @_ZdlPv(ptr noundef nonnull %920) #23
  br label %923

923:                                              ; preds = %919, %922
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  ret void

924:                                              ; preds = %497, %879
  %925 = phi ptr [ %405, %497 ], [ %474, %879 ]
  %926 = phi { ptr, i32 } [ %498, %497 ], [ %880, %879 ]
  call void @_ZdlPv(ptr noundef nonnull %925) #23
  br label %927

927:                                              ; preds = %314, %316, %470, %459, %924, %495, %409
  %928 = phi ptr [ %166, %409 ], [ %166, %459 ], [ %166, %470 ], [ %166, %924 ], [ %166, %495 ], [ %203, %314 ], [ %203, %316 ]
  %929 = phi { ptr, i32 } [ %410, %409 ], [ %460, %459 ], [ %471, %470 ], [ %926, %924 ], [ %496, %495 ], [ %315, %314 ], [ %317, %316 ]
  %930 = icmp eq ptr %928, null
  br i1 %930, label %932, label %931

931:                                              ; preds = %927
  call void @_ZdlPv(ptr noundef nonnull %928) #23
  br label %932

932:                                              ; preds = %931, %927
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %933 unwind label %935

933:                                              ; preds = %932, %199
  %934 = phi { ptr, i32 } [ %929, %932 ], [ %198, %199 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  resume { ptr, i32 } %934

935:                                              ; preds = %932, %409, %197
  %936 = landingpad { ptr, i32 }
          catch ptr null
  %937 = extractvalue { ptr, i32 } %936, 0
  call void @__clang_call_terminate(ptr %937) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_15SparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(122) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_15SparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(122) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_15SparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(122) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::vector.36", align 8
  %8 = alloca %"class.std::vector.178", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = alloca %"struct.dealii::internals::distributing", align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !313
  %13 = load ptr, ptr %1, align 8, !tbaa !58
  %14 = ptrtoint ptr %12 to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 2
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3
  %20 = load i32, ptr %19, align 4, !tbaa !22
  %21 = icmp eq i32 %20, %18
  %22 = and i64 %17, 4294967295
  br i1 %21, label %461, label %23

23:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %23
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %32

26:                                               ; preds = %23
  %27 = shl nuw nsw i64 %22, 2
  %28 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %27) #21
          to label %29 unwind label %70

29:                                               ; preds = %26
  store ptr %28, ptr %7, align 8, !tbaa !58
  %30 = getelementptr inbounds i32, ptr %28, i64 %22
  %31 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %30, ptr %31, align 8, !tbaa !417
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %28, i8 0, i64 %27, i1 false), !tbaa !22
  br label %32

32:                                               ; preds = %29, %25
  %33 = phi ptr [ null, %25 ], [ %28, %29 ]
  %34 = phi ptr [ null, %25 ], [ %30, %29 ]
  %35 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %34, ptr %35, align 8, !tbaa !313
  %36 = icmp eq i32 %18, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %41 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %43 = and i64 %17, 4294967295
  br label %72

44:                                               ; preds = %177
  %45 = load ptr, ptr %35, align 8, !tbaa !21
  %46 = load ptr, ptr %7, align 8, !tbaa !21
  br label %47

47:                                               ; preds = %44, %32
  %48 = phi ptr [ %33, %32 ], [ %46, %44 ]
  %49 = phi ptr [ %34, %32 ], [ %45, %44 ]
  %50 = phi ptr [ null, %32 ], [ %179, %44 ]
  %51 = phi ptr [ null, %32 ], [ %180, %44 ]
  %52 = phi i32 [ 0, %32 ], [ %181, %44 ]
  %53 = zext i32 %52 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6)
  store i32 0, ptr %6, align 4, !tbaa !22
  %54 = ptrtoint ptr %49 to i64
  %55 = ptrtoint ptr %48 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = icmp ult i64 %57, %53
  br i1 %58, label %59, label %64

59:                                               ; preds = %47
  %60 = sub nsw i64 %53, %57
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %49, i64 noundef %60, ptr noundef nonnull align 4 dereferenceable(4) %6)
          to label %61 unwind label %225

61:                                               ; preds = %59
  %62 = load ptr, ptr %7, align 8, !tbaa !21
  %63 = load ptr, ptr %35, align 8, !tbaa !21
  br label %188

64:                                               ; preds = %47
  %65 = icmp ugt i64 %57, %53
  br i1 %65, label %66, label %188

66:                                               ; preds = %64
  %67 = getelementptr inbounds i32, ptr %48, i64 %53
  %68 = icmp eq ptr %49, %67
  br i1 %68, label %188, label %69

69:                                               ; preds = %66
  store ptr %67, ptr %35, align 8, !tbaa !313
  br label %188

70:                                               ; preds = %26
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %459

72:                                               ; preds = %37, %177
  %73 = phi i64 [ 0, %37 ], [ %182, %177 ]
  %74 = phi i32 [ 0, %37 ], [ %181, %177 ]
  %75 = phi ptr [ null, %37 ], [ %180, %177 ]
  %76 = phi ptr [ null, %37 ], [ %179, %177 ]
  %77 = phi ptr [ null, %37 ], [ %178, %177 ]
  %78 = load ptr, ptr %39, align 8, !tbaa !55
  %79 = load i32, ptr %40, align 8, !tbaa !57
  %80 = load ptr, ptr %38, align 8, !tbaa !55
  %81 = ptrtoint ptr %78 to i64
  %82 = ptrtoint ptr %80 to i64
  %83 = sub i64 %81, %82
  %84 = shl nsw i64 %83, 3
  %85 = zext i32 %79 to i64
  %86 = add nsw i64 %84, %85
  %87 = load ptr, ptr %1, align 8, !tbaa !58
  %88 = getelementptr inbounds i32, ptr %87, i64 %73
  %89 = load i32, ptr %88, align 4, !tbaa !22
  %90 = zext i32 %89 to i64
  %91 = icmp ugt i64 %86, %90
  br i1 %91, label %92, label %102

92:                                               ; preds = %72
  %93 = lshr i32 %89, 6
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i64, ptr %80, i64 %94
  %96 = and i32 %89, 63
  %97 = zext i32 %96 to i64
  %98 = shl nuw i64 1, %97
  %99 = load i64, ptr %95, align 8, !tbaa !42
  %100 = and i64 %99, %98
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %107

102:                                              ; preds = %92, %72
  %103 = zext i32 %74 to i64
  %104 = load ptr, ptr %7, align 8, !tbaa !58
  %105 = getelementptr inbounds i32, ptr %104, i64 %103
  store i32 %89, ptr %105, align 4, !tbaa !22
  %106 = add i32 %74, 1
  br label %177

107:                                              ; preds = %92
  %108 = load ptr, ptr %41, align 8, !tbaa !21
  %109 = load ptr, ptr %42, align 8, !tbaa !21
  %110 = ptrtoint ptr %109 to i64
  %111 = ptrtoint ptr %108 to i64
  %112 = sub i64 %110, %111
  %113 = icmp sgt i64 %112, 0
  br i1 %113, label %114, label %129

114:                                              ; preds = %107
  %115 = udiv exact i64 %112, 40
  br label %116

116:                                              ; preds = %116, %114
  %117 = phi i64 [ %115, %114 ], [ %127, %116 ]
  %118 = phi ptr [ %108, %114 ], [ %126, %116 ]
  %119 = lshr i64 %117, 1
  %120 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %118, i64 %119
  %121 = load i32, ptr %120, align 8, !tbaa !24
  %122 = icmp ult i32 %121, %89
  %123 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %120, i64 1
  %124 = xor i64 %119, -1
  %125 = add nsw i64 %117, %124
  %126 = select i1 %122, ptr %123, ptr %118
  %127 = select i1 %122, i64 %125, i64 %119
  %128 = icmp sgt i64 %127, 0
  br i1 %128, label %116, label %129

129:                                              ; preds = %116, %107
  %130 = phi ptr [ %108, %107 ], [ %126, %116 ]
  %131 = icmp eq ptr %76, %77
  br i1 %131, label %135, label %132

132:                                              ; preds = %129
  %133 = trunc i64 %73 to i32
  store i32 %133, ptr %76, align 8
  %134 = getelementptr inbounds i8, ptr %76, i64 8
  store ptr %130, ptr %134, align 8
  br label %172

135:                                              ; preds = %129
  %136 = ptrtoint ptr %76 to i64
  %137 = ptrtoint ptr %75 to i64
  %138 = sub i64 %136, %137
  %139 = icmp eq i64 %138, 9223372036854775792
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %141 unwind label %186

141:                                              ; preds = %140
  unreachable

142:                                              ; preds = %135
  %143 = ashr exact i64 %138, 4
  %144 = tail call i64 @llvm.umax.i64(i64 %143, i64 1)
  %145 = add i64 %144, %143
  %146 = icmp ult i64 %145, %143
  %147 = icmp ugt i64 %145, 576460752303423487
  %148 = or i1 %146, %147
  %149 = select i1 %148, i64 576460752303423487, i64 %145
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %142
  %152 = shl nuw nsw i64 %149, 4
  %153 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %152) #21
          to label %154 unwind label %184

154:                                              ; preds = %151, %142
  %155 = phi ptr [ null, %142 ], [ %153, %151 ]
  %156 = getelementptr inbounds %"struct.std::pair.188", ptr %155, i64 %143
  %157 = trunc i64 %73 to i32
  store i32 %157, ptr %156, align 8
  %158 = getelementptr inbounds i8, ptr %156, i64 8
  store ptr %130, ptr %158, align 8
  %159 = icmp eq ptr %75, %76
  br i1 %159, label %166, label %160

160:                                              ; preds = %154, %160
  %161 = phi ptr [ %164, %160 ], [ %155, %154 ]
  %162 = phi ptr [ %163, %160 ], [ %75, %154 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %161, ptr noundef nonnull align 8 dereferenceable(16) %162, i64 16, i1 false)
  %163 = getelementptr inbounds %"struct.std::pair.188", ptr %162, i64 1
  %164 = getelementptr inbounds %"struct.std::pair.188", ptr %161, i64 1
  %165 = icmp eq ptr %163, %76
  br i1 %165, label %166, label %160

166:                                              ; preds = %160, %154
  %167 = phi ptr [ %155, %154 ], [ %164, %160 ]
  %168 = icmp eq ptr %75, null
  br i1 %168, label %170, label %169

169:                                              ; preds = %166
  tail call void @_ZdlPv(ptr noundef nonnull %75) #23
  br label %170

170:                                              ; preds = %169, %166
  %171 = getelementptr inbounds %"struct.std::pair.188", ptr %155, i64 %149
  br label %172

172:                                              ; preds = %170, %132
  %173 = phi ptr [ %171, %170 ], [ %77, %132 ]
  %174 = phi ptr [ %167, %170 ], [ %76, %132 ]
  %175 = phi ptr [ %155, %170 ], [ %75, %132 ]
  %176 = getelementptr inbounds %"struct.std::pair.188", ptr %174, i64 1
  br label %177

177:                                              ; preds = %172, %102
  %178 = phi ptr [ %173, %172 ], [ %77, %102 ]
  %179 = phi ptr [ %176, %172 ], [ %76, %102 ]
  %180 = phi ptr [ %175, %172 ], [ %75, %102 ]
  %181 = phi i32 [ %74, %172 ], [ %106, %102 ]
  %182 = add nuw nsw i64 %73, 1
  %183 = icmp eq i64 %182, %43
  br i1 %183, label %44, label %72

184:                                              ; preds = %151
  %185 = landingpad { ptr, i32 }
          cleanup
  br label %450

186:                                              ; preds = %140
  %187 = landingpad { ptr, i32 }
          cleanup
  br label %450

188:                                              ; preds = %61, %69, %66, %64
  %189 = phi ptr [ %63, %61 ], [ %67, %69 ], [ %49, %66 ], [ %49, %64 ]
  %190 = phi ptr [ %62, %61 ], [ %48, %69 ], [ %48, %66 ], [ %48, %64 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6)
  %191 = icmp eq ptr %190, %189
  br i1 %191, label %201, label %192

192:                                              ; preds = %188
  %193 = ptrtoint ptr %189 to i64
  %194 = ptrtoint ptr %190 to i64
  %195 = sub i64 %193, %194
  %196 = ashr exact i64 %195, 2
  %197 = call i64 @llvm.ctlz.i64(i64 %196, i1 true), !range !418
  %198 = shl nuw nsw i64 %197, 1
  %199 = xor i64 %198, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %190, ptr %189, i64 noundef %199)
          to label %200 unwind label %225

200:                                              ; preds = %192
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %190, ptr %189)
          to label %201 unwind label %225

201:                                              ; preds = %188, %200
  %202 = ptrtoint ptr %50 to i64
  %203 = ptrtoint ptr %51 to i64
  %204 = sub i64 %202, %203
  %205 = and i64 %204, 68719476720
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %212, label %207

207:                                              ; preds = %201
  %208 = lshr exact i64 %204, 4
  %209 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  %210 = and i64 %208, 4294967295
  %211 = and i64 %17, 4294967295
  br label %227

212:                                              ; preds = %421, %201
  %213 = load ptr, ptr %35, align 8, !tbaa !21
  %214 = load ptr, ptr %7, align 8, !tbaa !21
  %215 = ptrtoint ptr %213 to i64
  %216 = ptrtoint ptr %214 to i64
  %217 = sub i64 %215, %216
  %218 = and i64 %217, 17179869180
  %219 = icmp eq i64 %218, 0
  %220 = icmp eq ptr %214, %213
  %221 = or i1 %219, %220
  br i1 %221, label %424, label %222

222:                                              ; preds = %212
  %223 = lshr exact i64 %217, 2
  %224 = and i64 %223, 4294967295
  br label %427

225:                                              ; preds = %200, %192, %59
  %226 = landingpad { ptr, i32 }
          cleanup
  br label %450

227:                                              ; preds = %207, %421
  %228 = phi i64 [ 0, %207 ], [ %422, %421 ]
  %229 = getelementptr inbounds %"struct.std::pair.188", ptr %51, i64 %228
  %230 = load i32, ptr %229, align 8, !tbaa !326
  %231 = zext i32 %230 to i64
  %232 = load ptr, ptr %1, align 8, !tbaa !58
  %233 = getelementptr inbounds i32, ptr %232, i64 %231
  %234 = load i32, ptr %233, align 4, !tbaa !22
  %235 = getelementptr inbounds %"struct.std::pair.188", ptr %51, i64 %228, i32 1
  %236 = load ptr, ptr %235, align 8, !tbaa !328
  %237 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %236, i64 0, i32 1
  %238 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %236, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %239 = load ptr, ptr %238, align 8, !tbaa !31
  %240 = load ptr, ptr %237, align 8, !tbaa !32
  %241 = icmp eq ptr %239, %240
  br i1 %241, label %242, label %244

242:                                              ; preds = %394, %227
  br i1 %3, label %243, label %418

243:                                              ; preds = %242
  br i1 %36, label %421, label %404

244:                                              ; preds = %227, %394
  %245 = phi ptr [ %398, %394 ], [ %240, %227 ]
  %246 = phi i64 [ %396, %394 ], [ 0, %227 ]
  %247 = phi i32 [ %395, %394 ], [ 0, %227 ]
  %248 = getelementptr inbounds %"struct.std::pair", ptr %245, i64 %246
  %249 = load i32, ptr %248, align 8, !tbaa !37
  %250 = load ptr, ptr %35, align 8, !tbaa !21
  %251 = getelementptr inbounds i32, ptr %250, i64 -1
  %252 = load i32, ptr %251, align 4, !tbaa !22
  %253 = icmp ult i32 %252, %249
  br i1 %253, label %254, label %301

254:                                              ; preds = %244
  %255 = load ptr, ptr %209, align 8, !tbaa !417
  %256 = icmp eq ptr %250, %255
  br i1 %256, label %259, label %257

257:                                              ; preds = %254
  store i32 %249, ptr %250, align 4, !tbaa !22
  %258 = getelementptr inbounds i32, ptr %250, i64 1
  store ptr %258, ptr %35, align 8, !tbaa !313
  br label %394

259:                                              ; preds = %254
  %260 = load ptr, ptr %7, align 8, !tbaa !21
  %261 = ptrtoint ptr %250 to i64
  %262 = ptrtoint ptr %260 to i64
  %263 = sub i64 %261, %262
  %264 = icmp eq i64 %263, 9223372036854775804
  br i1 %264, label %265, label %267

265:                                              ; preds = %259
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %266 unwind label %299

266:                                              ; preds = %265
  unreachable

267:                                              ; preds = %259
  %268 = ashr exact i64 %263, 2
  %269 = call i64 @llvm.umax.i64(i64 %268, i64 1)
  %270 = add i64 %269, %268
  %271 = icmp ult i64 %270, %268
  %272 = icmp ugt i64 %270, 2305843009213693951
  %273 = or i1 %271, %272
  %274 = select i1 %273, i64 2305843009213693951, i64 %270
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %279, label %276

276:                                              ; preds = %267
  %277 = shl nuw nsw i64 %274, 2
  %278 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %277) #21
          to label %279 unwind label %297

279:                                              ; preds = %276, %267
  %280 = phi ptr [ null, %267 ], [ %278, %276 ]
  %281 = getelementptr inbounds i32, ptr %280, i64 %268
  store i32 %249, ptr %281, align 4, !tbaa !22
  %282 = icmp sgt i64 %263, 4
  br i1 %282, label %283, label %284, !prof !23

283:                                              ; preds = %279
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %280, ptr align 4 %260, i64 %263, i1 false)
  br label %289

284:                                              ; preds = %279
  %285 = icmp eq i64 %263, 4
  br i1 %285, label %286, label %289

286:                                              ; preds = %284
  %287 = load i32, ptr %260, align 4, !tbaa !22
  store i32 %287, ptr %280, align 4, !tbaa !22
  %288 = getelementptr inbounds i32, ptr %281, i64 1
  br label %292

289:                                              ; preds = %284, %283
  %290 = getelementptr inbounds i32, ptr %281, i64 1
  %291 = icmp eq ptr %260, null
  br i1 %291, label %294, label %292

292:                                              ; preds = %286, %289
  %293 = phi ptr [ %288, %286 ], [ %290, %289 ]
  call void @_ZdlPv(ptr noundef nonnull %260) #23
  br label %294

294:                                              ; preds = %292, %289
  %295 = phi ptr [ %290, %289 ], [ %293, %292 ]
  store ptr %280, ptr %7, align 8, !tbaa !58
  store ptr %295, ptr %35, align 8, !tbaa !313
  %296 = getelementptr inbounds i32, ptr %280, i64 %274
  store ptr %296, ptr %209, align 8, !tbaa !417
  br label %394

297:                                              ; preds = %276
  %298 = landingpad { ptr, i32 }
          cleanup
  br label %450

299:                                              ; preds = %265
  %300 = landingpad { ptr, i32 }
          cleanup
  br label %450

301:                                              ; preds = %244
  %302 = load ptr, ptr %7, align 8, !tbaa !21
  %303 = ptrtoint ptr %250 to i64
  %304 = ptrtoint ptr %302 to i64
  %305 = sub i64 %303, %304
  %306 = icmp sgt i64 %305, 0
  br i1 %306, label %307, label %322

307:                                              ; preds = %301
  %308 = lshr exact i64 %305, 2
  br label %309

309:                                              ; preds = %309, %307
  %310 = phi i64 [ %308, %307 ], [ %320, %309 ]
  %311 = phi ptr [ %302, %307 ], [ %319, %309 ]
  %312 = lshr i64 %310, 1
  %313 = getelementptr inbounds i32, ptr %311, i64 %312
  %314 = load i32, ptr %313, align 4, !tbaa !22
  %315 = icmp ult i32 %314, %249
  %316 = getelementptr inbounds i32, ptr %313, i64 1
  %317 = xor i64 %312, -1
  %318 = add nsw i64 %310, %317
  %319 = select i1 %315, ptr %316, ptr %311
  %320 = select i1 %315, i64 %318, i64 %312
  %321 = icmp sgt i64 %320, 0
  br i1 %321, label %309, label %322

322:                                              ; preds = %309, %301
  %323 = phi ptr [ %302, %301 ], [ %319, %309 ]
  %324 = load i32, ptr %323, align 4, !tbaa !22
  %325 = icmp eq i32 %324, %249
  br i1 %325, label %394, label %326

326:                                              ; preds = %322
  %327 = ptrtoint ptr %323 to i64
  %328 = load ptr, ptr %209, align 8, !tbaa !417
  %329 = icmp eq ptr %250, %328
  br i1 %329, label %347, label %330

330:                                              ; preds = %326
  %331 = icmp eq ptr %250, %323
  %332 = getelementptr inbounds i32, ptr %250, i64 1
  br i1 %331, label %333, label %334

333:                                              ; preds = %330
  store i32 %249, ptr %250, align 4, !tbaa !22
  store ptr %332, ptr %35, align 8, !tbaa !313
  br label %394

334:                                              ; preds = %330
  store i32 %252, ptr %250, align 4, !tbaa !22
  store ptr %332, ptr %35, align 8, !tbaa !313
  %335 = ptrtoint ptr %251 to i64
  %336 = sub i64 %335, %327
  %337 = icmp sgt i64 %336, 4
  br i1 %337, label %338, label %342, !prof !23

338:                                              ; preds = %334
  %339 = lshr exact i64 %336, 2
  %340 = sub nsw i64 0, %339
  %341 = getelementptr inbounds i32, ptr %250, i64 %340
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %341, ptr nonnull align 4 %323, i64 %336, i1 false)
  br label %346

342:                                              ; preds = %334
  %343 = icmp eq i64 %336, 4
  br i1 %343, label %344, label %346

344:                                              ; preds = %342
  %345 = load i32, ptr %323, align 4, !tbaa !22
  store i32 %345, ptr %251, align 4, !tbaa !22
  br label %346

346:                                              ; preds = %344, %342, %338
  store i32 %249, ptr %323, align 4, !tbaa !22
  br label %394

347:                                              ; preds = %326
  %348 = icmp eq i64 %305, 9223372036854775804
  br i1 %348, label %349, label %351

349:                                              ; preds = %347
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %350 unwind label %392

350:                                              ; preds = %349
  unreachable

351:                                              ; preds = %347
  %352 = ashr exact i64 %305, 2
  %353 = call i64 @llvm.umax.i64(i64 %352, i64 1)
  %354 = add i64 %353, %352
  %355 = icmp ult i64 %354, %352
  %356 = icmp ugt i64 %354, 2305843009213693951
  %357 = or i1 %355, %356
  %358 = select i1 %357, i64 2305843009213693951, i64 %354
  %359 = sub i64 %327, %304
  %360 = ashr exact i64 %359, 2
  %361 = icmp eq i64 %358, 0
  br i1 %361, label %365, label %362

362:                                              ; preds = %351
  %363 = shl nuw nsw i64 %358, 2
  %364 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %363) #21
          to label %365 unwind label %390

365:                                              ; preds = %362, %351
  %366 = phi ptr [ null, %351 ], [ %364, %362 ]
  %367 = getelementptr inbounds i32, ptr %366, i64 %360
  store i32 %249, ptr %367, align 4, !tbaa !22
  %368 = icmp sgt i64 %359, 4
  br i1 %368, label %369, label %370, !prof !23

369:                                              ; preds = %365
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %366, ptr align 4 %302, i64 %359, i1 false)
  br label %374

370:                                              ; preds = %365
  %371 = icmp eq i64 %359, 4
  br i1 %371, label %372, label %374

372:                                              ; preds = %370
  %373 = load i32, ptr %302, align 4, !tbaa !22
  store i32 %373, ptr %366, align 4, !tbaa !22
  br label %374

374:                                              ; preds = %372, %370, %369
  %375 = getelementptr inbounds i32, ptr %367, i64 1
  %376 = sub i64 %303, %327
  %377 = icmp sgt i64 %376, 4
  br i1 %377, label %378, label %379, !prof !23

378:                                              ; preds = %374
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %375, ptr nonnull align 4 %323, i64 %376, i1 false)
  br label %383

379:                                              ; preds = %374
  %380 = icmp eq i64 %376, 4
  br i1 %380, label %381, label %383

381:                                              ; preds = %379
  %382 = load i32, ptr %323, align 4, !tbaa !22
  store i32 %382, ptr %375, align 4, !tbaa !22
  br label %383

383:                                              ; preds = %381, %379, %378
  %384 = icmp eq ptr %302, null
  br i1 %384, label %386, label %385

385:                                              ; preds = %383
  call void @_ZdlPv(ptr noundef nonnull %302) #23
  br label %386

386:                                              ; preds = %385, %383
  %387 = ashr exact i64 %376, 2
  %388 = getelementptr inbounds i32, ptr %375, i64 %387
  store ptr %366, ptr %7, align 8, !tbaa !58
  store ptr %388, ptr %35, align 8, !tbaa !313
  %389 = getelementptr inbounds i32, ptr %366, i64 %358
  store ptr %389, ptr %209, align 8, !tbaa !417
  br label %394

390:                                              ; preds = %362
  %391 = landingpad { ptr, i32 }
          cleanup
  br label %450

392:                                              ; preds = %349
  %393 = landingpad { ptr, i32 }
          cleanup
  br label %450

394:                                              ; preds = %386, %346, %333, %322, %294, %257
  %395 = add i32 %247, 1
  %396 = zext i32 %395 to i64
  %397 = load ptr, ptr %238, align 8, !tbaa !31
  %398 = load ptr, ptr %237, align 8, !tbaa !32
  %399 = ptrtoint ptr %397 to i64
  %400 = ptrtoint ptr %398 to i64
  %401 = sub i64 %399, %400
  %402 = ashr exact i64 %401, 4
  %403 = icmp ugt i64 %402, %396
  br i1 %403, label %244, label %242

404:                                              ; preds = %243, %413
  %405 = phi i64 [ %414, %413 ], [ 0, %243 ]
  %406 = load ptr, ptr %1, align 8, !tbaa !58
  %407 = getelementptr inbounds i32, ptr %406, i64 %405
  %408 = load i32, ptr %407, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %2, i32 noundef %234, i32 noundef %408)
          to label %409 unwind label %416

409:                                              ; preds = %404
  %410 = load ptr, ptr %1, align 8, !tbaa !58
  %411 = getelementptr inbounds i32, ptr %410, i64 %405
  %412 = load i32, ptr %411, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %2, i32 noundef %412, i32 noundef %234)
          to label %413 unwind label %416

413:                                              ; preds = %409
  %414 = add nuw nsw i64 %405, 1
  %415 = icmp eq i64 %414, %211
  br i1 %415, label %421, label %404

416:                                              ; preds = %409, %404
  %417 = landingpad { ptr, i32 }
          cleanup
  br label %450

418:                                              ; preds = %242
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %2, i32 noundef %234, i32 noundef %234)
          to label %421 unwind label %419

419:                                              ; preds = %418
  %420 = landingpad { ptr, i32 }
          cleanup
  br label %450

421:                                              ; preds = %413, %243, %418
  %422 = add nuw nsw i64 %228, 1
  %423 = icmp eq i64 %422, %210
  br i1 %423, label %212, label %227

424:                                              ; preds = %440, %212
  %425 = icmp eq ptr %51, null
  br i1 %425, label %445, label %426

426:                                              ; preds = %424
  call void @_ZdlPv(ptr noundef nonnull %51) #23
  br label %445

427:                                              ; preds = %222, %440
  %428 = phi i64 [ 0, %222 ], [ %441, %440 ]
  %429 = load ptr, ptr %7, align 8, !tbaa !21
  %430 = getelementptr inbounds i32, ptr %429, i64 %428
  %431 = load i32, ptr %430, align 4, !tbaa !22
  %432 = load ptr, ptr %35, align 8, !tbaa !21
  %433 = icmp eq ptr %429, %432
  br i1 %433, label %440, label %434

434:                                              ; preds = %427, %437
  %435 = phi ptr [ %438, %437 ], [ %429, %427 ]
  %436 = load i32, ptr %435, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %2, i32 noundef %431, i32 noundef %436)
          to label %437 unwind label %443

437:                                              ; preds = %434
  %438 = getelementptr inbounds i32, ptr %435, i64 1
  %439 = icmp eq ptr %438, %432
  br i1 %439, label %440, label %434

440:                                              ; preds = %437, %427
  %441 = add nuw nsw i64 %428, 1
  %442 = icmp eq i64 %441, %224
  br i1 %442, label %424, label %427, !llvm.loop !419

443:                                              ; preds = %434
  %444 = landingpad { ptr, i32 }
          cleanup
  br label %450

445:                                              ; preds = %426, %424
  %446 = load ptr, ptr %7, align 8, !tbaa !58
  %447 = icmp eq ptr %446, null
  br i1 %447, label %449, label %448

448:                                              ; preds = %445
  call void @_ZdlPv(ptr noundef nonnull %446) #23
  br label %449

449:                                              ; preds = %445, %448
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  br label %1108

450:                                              ; preds = %390, %392, %297, %299, %184, %186, %443, %419, %416, %225
  %451 = phi ptr [ %51, %225 ], [ %51, %443 ], [ %51, %416 ], [ %51, %419 ], [ %75, %184 ], [ %75, %186 ], [ %51, %299 ], [ %51, %297 ], [ %51, %392 ], [ %51, %390 ]
  %452 = phi { ptr, i32 } [ %226, %225 ], [ %444, %443 ], [ %417, %416 ], [ %420, %419 ], [ %185, %184 ], [ %187, %186 ], [ %300, %299 ], [ %298, %297 ], [ %393, %392 ], [ %391, %390 ]
  %453 = icmp eq ptr %451, null
  br i1 %453, label %455, label %454

454:                                              ; preds = %450
  call void @_ZdlPv(ptr noundef nonnull %451) #23
  br label %455

455:                                              ; preds = %454, %450
  %456 = load ptr, ptr %7, align 8, !tbaa !58
  %457 = icmp eq ptr %456, null
  br i1 %457, label %459, label %458

458:                                              ; preds = %455
  call void @_ZdlPv(ptr noundef nonnull %456) #23
  br label %459

459:                                              ; preds = %458, %455, %70
  %460 = phi { ptr, i32 } [ %71, %70 ], [ %452, %455 ], [ %452, %458 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  br label %1117

461:                                              ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #24
  store i32 -1, ptr %9, align 8, !tbaa !317
  %462 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %462, align 4, !tbaa !319
  %463 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %463, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  %464 = icmp eq i64 %22, 0
  br i1 %464, label %465, label %467

465:                                              ; preds = %461
  %466 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  br label %510

467:                                              ; preds = %461
  %468 = shl nuw nsw i64 %22, 4
  %469 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %468) #21
          to label %470 unwind label %560

470:                                              ; preds = %467
  store ptr %469, ptr %8, align 8, !tbaa !321
  %471 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %469, i64 %22
  %472 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 2
  store ptr %471, ptr %472, align 8, !tbaa !323
  %473 = and i64 %17, 3
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %485, label %475

475:                                              ; preds = %470, %475
  %476 = phi ptr [ %482, %475 ], [ %469, %470 ]
  %477 = phi i64 [ %481, %475 ], [ %22, %470 ]
  %478 = phi i64 [ %483, %475 ], [ 0, %470 ]
  %479 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %476, i64 0, i32 2
  store ptr null, ptr %479, align 8, !tbaa !320
  store i32 -1, ptr %476, align 8, !tbaa !317
  %480 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %476, i64 0, i32 1
  store i32 -1, ptr %480, align 4, !tbaa !319
  %481 = add nsw i64 %477, -1
  %482 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %476, i64 1
  %483 = add i64 %478, 1
  %484 = icmp eq i64 %483, %473
  br i1 %484, label %485, label %475, !llvm.loop !421

485:                                              ; preds = %475, %470
  %486 = phi ptr [ undef, %470 ], [ %482, %475 ]
  %487 = phi ptr [ %469, %470 ], [ %482, %475 ]
  %488 = phi i64 [ %22, %470 ], [ %481, %475 ]
  %489 = icmp ult i64 %22, 4
  br i1 %489, label %507, label %490

490:                                              ; preds = %485, %490
  %491 = phi ptr [ %505, %490 ], [ %487, %485 ]
  %492 = phi i64 [ %504, %490 ], [ %488, %485 ]
  %493 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %491, i64 0, i32 2
  store ptr null, ptr %493, align 8, !tbaa !320
  store i32 -1, ptr %491, align 8, !tbaa !317
  %494 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %491, i64 0, i32 1
  store i32 -1, ptr %494, align 4, !tbaa !319
  %495 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %491, i64 1
  %496 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %491, i64 1, i32 2
  store ptr null, ptr %496, align 8, !tbaa !320
  store i32 -1, ptr %495, align 8, !tbaa !317
  %497 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %491, i64 1, i32 1
  store i32 -1, ptr %497, align 4, !tbaa !319
  %498 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %491, i64 2
  %499 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %491, i64 2, i32 2
  store ptr null, ptr %499, align 8, !tbaa !320
  store i32 -1, ptr %498, align 8, !tbaa !317
  %500 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %491, i64 2, i32 1
  store i32 -1, ptr %500, align 4, !tbaa !319
  %501 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %491, i64 3
  %502 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %491, i64 3, i32 2
  store ptr null, ptr %502, align 8, !tbaa !320
  store i32 -1, ptr %501, align 8, !tbaa !317
  %503 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %491, i64 3, i32 1
  store i32 -1, ptr %503, align 4, !tbaa !319
  %504 = add nsw i64 %492, -4
  %505 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %491, i64 4
  %506 = icmp eq i64 %504, 0
  br i1 %506, label %507, label %490

507:                                              ; preds = %490, %485
  %508 = phi ptr [ %486, %485 ], [ %505, %490 ]
  %509 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  store ptr %508, ptr %509, align 8, !tbaa !325
  br label %510

510:                                              ; preds = %507, %465
  %511 = phi ptr [ null, %465 ], [ %469, %507 ]
  %512 = phi ptr [ null, %465 ], [ %508, %507 ]
  %513 = phi ptr [ %466, %465 ], [ %509, %507 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #24
  %514 = icmp eq i32 %18, 0
  br i1 %514, label %525, label %515

515:                                              ; preds = %510
  %516 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %517 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %518 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %519 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %520 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %521 = and i64 %17, 4294967295
  br label %563

522:                                              ; preds = %670
  %523 = load ptr, ptr %513, align 8, !tbaa !21
  %524 = load ptr, ptr %8, align 8, !tbaa !321
  br label %525

525:                                              ; preds = %522, %510
  %526 = phi ptr [ %511, %510 ], [ %524, %522 ]
  %527 = phi ptr [ %512, %510 ], [ %523, %522 ]
  %528 = phi ptr [ null, %510 ], [ %672, %522 ]
  %529 = phi ptr [ null, %510 ], [ %673, %522 ]
  %530 = phi i32 [ 0, %510 ], [ %674, %522 ]
  %531 = zext i32 %530 to i64
  store i32 -1, ptr %10, align 8, !tbaa !317
  %532 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %10, i64 0, i32 1
  store i32 -1, ptr %532, align 4, !tbaa !319
  %533 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %10, i64 0, i32 2
  store ptr null, ptr %533, align 8, !tbaa !320
  %534 = ptrtoint ptr %527 to i64
  %535 = ptrtoint ptr %526 to i64
  %536 = sub i64 %534, %535
  %537 = ashr exact i64 %536, 4
  %538 = icmp ult i64 %537, %531
  br i1 %538, label %539, label %541

539:                                              ; preds = %525
  %540 = sub nsw i64 %531, %537
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr %527, i64 noundef %540, ptr noundef nonnull align 8 dereferenceable(16) %10)
          to label %681 unwind label %771

541:                                              ; preds = %525
  %542 = icmp ugt i64 %537, %531
  br i1 %542, label %543, label %681

543:                                              ; preds = %541
  %544 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %526, i64 %531
  %545 = icmp eq ptr %527, %544
  br i1 %545, label %681, label %546

546:                                              ; preds = %543, %556
  %547 = phi ptr [ %557, %556 ], [ %544, %543 ]
  %548 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %547, i64 0, i32 2
  %549 = load ptr, ptr %548, align 8, !tbaa !320
  %550 = icmp eq ptr %549, null
  br i1 %550, label %556, label %551

551:                                              ; preds = %546
  %552 = load ptr, ptr %549, align 8, !tbaa !32
  %553 = icmp eq ptr %552, null
  br i1 %553, label %555, label %554

554:                                              ; preds = %551
  tail call void @_ZdlPv(ptr noundef nonnull %552) #23
  br label %555

555:                                              ; preds = %554, %551
  tail call void @_ZdlPv(ptr noundef nonnull %549) #23
  store ptr null, ptr %548, align 8, !tbaa !320
  br label %556

556:                                              ; preds = %555, %546
  %557 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %547, i64 1
  %558 = icmp eq ptr %557, %527
  br i1 %558, label %559, label %546

559:                                              ; preds = %556
  store ptr %544, ptr %513, align 8, !tbaa !325
  br label %681

560:                                              ; preds = %467
  %561 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %562 unwind label %1119

562:                                              ; preds = %560
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #24
  br label %1115

563:                                              ; preds = %515, %670
  %564 = phi i64 [ 0, %515 ], [ %675, %670 ]
  %565 = phi i32 [ 0, %515 ], [ %674, %670 ]
  %566 = phi ptr [ null, %515 ], [ %673, %670 ]
  %567 = phi ptr [ null, %515 ], [ %672, %670 ]
  %568 = phi ptr [ null, %515 ], [ %671, %670 ]
  %569 = load ptr, ptr %517, align 8, !tbaa !55
  %570 = load i32, ptr %518, align 8, !tbaa !57
  %571 = load ptr, ptr %516, align 8, !tbaa !55
  %572 = ptrtoint ptr %569 to i64
  %573 = ptrtoint ptr %571 to i64
  %574 = sub i64 %572, %573
  %575 = shl nsw i64 %574, 3
  %576 = zext i32 %570 to i64
  %577 = add nsw i64 %575, %576
  %578 = load ptr, ptr %1, align 8, !tbaa !58
  %579 = getelementptr inbounds i32, ptr %578, i64 %564
  %580 = load i32, ptr %579, align 4, !tbaa !22
  %581 = zext i32 %580 to i64
  %582 = icmp ugt i64 %577, %581
  br i1 %582, label %583, label %593

583:                                              ; preds = %563
  %584 = lshr i32 %580, 6
  %585 = zext i32 %584 to i64
  %586 = getelementptr inbounds i64, ptr %571, i64 %585
  %587 = and i32 %580, 63
  %588 = zext i32 %587 to i64
  %589 = shl nuw i64 1, %588
  %590 = load i64, ptr %586, align 8, !tbaa !42
  %591 = and i64 %590, %589
  %592 = icmp eq i64 %591, 0
  br i1 %592, label %593, label %600

593:                                              ; preds = %583, %563
  %594 = zext i32 %565 to i64
  %595 = load ptr, ptr %8, align 8, !tbaa !321
  %596 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %595, i64 %594
  store i32 %580, ptr %596, align 8, !tbaa !317
  %597 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %595, i64 %594, i32 1
  %598 = trunc i64 %564 to i32
  store i32 %598, ptr %597, align 4, !tbaa !319
  %599 = add i32 %565, 1
  br label %670

600:                                              ; preds = %583
  %601 = load ptr, ptr %519, align 8, !tbaa !21
  %602 = load ptr, ptr %520, align 8, !tbaa !21
  %603 = ptrtoint ptr %602 to i64
  %604 = ptrtoint ptr %601 to i64
  %605 = sub i64 %603, %604
  %606 = icmp sgt i64 %605, 0
  br i1 %606, label %607, label %622

607:                                              ; preds = %600
  %608 = udiv exact i64 %605, 40
  br label %609

609:                                              ; preds = %609, %607
  %610 = phi i64 [ %608, %607 ], [ %620, %609 ]
  %611 = phi ptr [ %601, %607 ], [ %619, %609 ]
  %612 = lshr i64 %610, 1
  %613 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %611, i64 %612
  %614 = load i32, ptr %613, align 8, !tbaa !24
  %615 = icmp ult i32 %614, %580
  %616 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %613, i64 1
  %617 = xor i64 %612, -1
  %618 = add nsw i64 %610, %617
  %619 = select i1 %615, ptr %616, ptr %611
  %620 = select i1 %615, i64 %618, i64 %612
  %621 = icmp sgt i64 %620, 0
  br i1 %621, label %609, label %622

622:                                              ; preds = %609, %600
  %623 = phi ptr [ %601, %600 ], [ %619, %609 ]
  %624 = icmp eq ptr %567, %568
  br i1 %624, label %628, label %625

625:                                              ; preds = %622
  %626 = trunc i64 %564 to i32
  store i32 %626, ptr %567, align 8
  %627 = getelementptr inbounds i8, ptr %567, i64 8
  store ptr %623, ptr %627, align 8
  br label %665

628:                                              ; preds = %622
  %629 = ptrtoint ptr %567 to i64
  %630 = ptrtoint ptr %566 to i64
  %631 = sub i64 %629, %630
  %632 = icmp eq i64 %631, 9223372036854775792
  br i1 %632, label %633, label %635

633:                                              ; preds = %628
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %634 unwind label %679

634:                                              ; preds = %633
  unreachable

635:                                              ; preds = %628
  %636 = ashr exact i64 %631, 4
  %637 = tail call i64 @llvm.umax.i64(i64 %636, i64 1)
  %638 = add i64 %637, %636
  %639 = icmp ult i64 %638, %636
  %640 = icmp ugt i64 %638, 576460752303423487
  %641 = or i1 %639, %640
  %642 = select i1 %641, i64 576460752303423487, i64 %638
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %647, label %644

644:                                              ; preds = %635
  %645 = shl nuw nsw i64 %642, 4
  %646 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %645) #21
          to label %647 unwind label %677

647:                                              ; preds = %644, %635
  %648 = phi ptr [ null, %635 ], [ %646, %644 ]
  %649 = getelementptr inbounds %"struct.std::pair.188", ptr %648, i64 %636
  %650 = trunc i64 %564 to i32
  store i32 %650, ptr %649, align 8
  %651 = getelementptr inbounds i8, ptr %649, i64 8
  store ptr %623, ptr %651, align 8
  %652 = icmp eq ptr %566, %567
  br i1 %652, label %659, label %653

653:                                              ; preds = %647, %653
  %654 = phi ptr [ %657, %653 ], [ %648, %647 ]
  %655 = phi ptr [ %656, %653 ], [ %566, %647 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %654, ptr noundef nonnull align 8 dereferenceable(16) %655, i64 16, i1 false)
  %656 = getelementptr inbounds %"struct.std::pair.188", ptr %655, i64 1
  %657 = getelementptr inbounds %"struct.std::pair.188", ptr %654, i64 1
  %658 = icmp eq ptr %656, %567
  br i1 %658, label %659, label %653

659:                                              ; preds = %653, %647
  %660 = phi ptr [ %648, %647 ], [ %657, %653 ]
  %661 = icmp eq ptr %566, null
  br i1 %661, label %663, label %662

662:                                              ; preds = %659
  tail call void @_ZdlPv(ptr noundef nonnull %566) #23
  br label %663

663:                                              ; preds = %662, %659
  %664 = getelementptr inbounds %"struct.std::pair.188", ptr %648, i64 %642
  br label %665

665:                                              ; preds = %663, %625
  %666 = phi ptr [ %664, %663 ], [ %568, %625 ]
  %667 = phi ptr [ %660, %663 ], [ %567, %625 ]
  %668 = phi ptr [ %648, %663 ], [ %566, %625 ]
  %669 = getelementptr inbounds %"struct.std::pair.188", ptr %667, i64 1
  br label %670

670:                                              ; preds = %665, %593
  %671 = phi ptr [ %666, %665 ], [ %568, %593 ]
  %672 = phi ptr [ %669, %665 ], [ %567, %593 ]
  %673 = phi ptr [ %668, %665 ], [ %566, %593 ]
  %674 = phi i32 [ %565, %665 ], [ %599, %593 ]
  %675 = add nuw nsw i64 %564, 1
  %676 = icmp eq i64 %675, %521
  br i1 %676, label %522, label %563

677:                                              ; preds = %644
  %678 = landingpad { ptr, i32 }
          cleanup
  br label %1109

679:                                              ; preds = %633
  %680 = landingpad { ptr, i32 }
          cleanup
  br label %1109

681:                                              ; preds = %559, %543, %541, %539
  %682 = load ptr, ptr %533, align 8, !tbaa !320
  %683 = icmp eq ptr %682, null
  br i1 %683, label %689, label %684

684:                                              ; preds = %681
  %685 = load ptr, ptr %682, align 8, !tbaa !32
  %686 = icmp eq ptr %685, null
  br i1 %686, label %688, label %687

687:                                              ; preds = %684
  call void @_ZdlPv(ptr noundef nonnull %685) #23
  br label %688

688:                                              ; preds = %687, %684
  call void @_ZdlPv(ptr noundef nonnull %682) #23
  store ptr null, ptr %533, align 8, !tbaa !320
  br label %689

689:                                              ; preds = %688, %681
  %690 = load ptr, ptr %513, align 8, !tbaa !325
  %691 = load ptr, ptr %8, align 8, !tbaa !321
  %692 = ptrtoint ptr %690 to i64
  %693 = ptrtoint ptr %691 to i64
  %694 = sub i64 %692, %693
  %695 = lshr exact i64 %694, 4
  %696 = trunc i64 %695 to i32
  %697 = icmp ult i32 %696, 2
  br i1 %697, label %743, label %700

698:                                              ; preds = %739, %700
  %699 = icmp ult i32 %701, 4
  br i1 %699, label %743, label %700

700:                                              ; preds = %689, %698
  %701 = phi i32 [ %702, %698 ], [ %696, %689 ]
  %702 = lshr i32 %701, 1
  %703 = icmp ult i32 %702, %696
  br i1 %703, label %704, label %698

704:                                              ; preds = %700
  %705 = zext i32 %702 to i64
  br label %706

706:                                              ; preds = %739, %704
  %707 = phi i64 [ %705, %704 ], [ %740, %739 ]
  %708 = sub nuw nsw i64 %707, %705
  %709 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %691, i64 %707
  %710 = load <2 x i32>, ptr %709, align 8, !tbaa !22
  %711 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %691, i64 %708
  %712 = load i32, ptr %711, align 8, !tbaa !317
  %713 = extractelement <2 x i32> %710, i64 0
  %714 = icmp ugt i32 %712, %713
  br i1 %714, label %715, label %739

715:                                              ; preds = %706
  %716 = icmp ult i64 %707, %705
  %717 = trunc i64 %707 to i32
  br i1 %716, label %735, label %718

718:                                              ; preds = %715
  %719 = trunc i64 %708 to i32
  br label %720

720:                                              ; preds = %727, %718
  %721 = phi i32 [ %722, %727 ], [ %717, %718 ]
  %722 = phi i32 [ %733, %727 ], [ %719, %718 ]
  %723 = zext i32 %722 to i64
  %724 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %691, i64 %723
  %725 = load i32, ptr %724, align 8, !tbaa !317
  %726 = icmp ugt i32 %725, %713
  br i1 %726, label %727, label %735

727:                                              ; preds = %720
  %728 = zext i32 %721 to i64
  %729 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %691, i64 %728
  store i32 %725, ptr %729, align 8, !tbaa !317
  %730 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %691, i64 %723, i32 1
  %731 = load i32, ptr %730, align 4, !tbaa !319
  %732 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %691, i64 %728, i32 1
  store i32 %731, ptr %732, align 4, !tbaa !319
  %733 = sub i32 %722, %702
  %734 = icmp ult i32 %722, %702
  br i1 %734, label %735, label %720

735:                                              ; preds = %727, %720, %715
  %736 = phi i32 [ %717, %715 ], [ %721, %720 ], [ %722, %727 ]
  %737 = zext i32 %736 to i64
  %738 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %691, i64 %737
  store <2 x i32> %710, ptr %738, align 8, !tbaa !22
  br label %739

739:                                              ; preds = %735, %706
  %740 = add nuw nsw i64 %707, 1
  %741 = trunc i64 %740 to i32
  %742 = icmp eq i32 %696, %741
  br i1 %742, label %698, label %706

743:                                              ; preds = %698, %689
  %744 = ptrtoint ptr %528 to i64
  %745 = ptrtoint ptr %529 to i64
  %746 = sub i64 %744, %745
  %747 = and i64 %746, 68719476720
  %748 = icmp eq i64 %747, 0
  br i1 %748, label %761, label %749

749:                                              ; preds = %743
  %750 = lshr exact i64 %746, 4
  %751 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %752 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %753 = and i64 %750, 4294967295
  %754 = and i64 %17, 4294967295
  br label %773

755:                                              ; preds = %851
  %756 = load ptr, ptr %513, align 8, !tbaa !325
  %757 = load ptr, ptr %8, align 8, !tbaa !321
  %758 = ptrtoint ptr %756 to i64
  %759 = ptrtoint ptr %757 to i64
  %760 = sub i64 %758, %759
  br label %761

761:                                              ; preds = %755, %743
  %762 = phi i64 [ %760, %755 ], [ %694, %743 ]
  %763 = phi i8 [ %790, %755 ], [ 0, %743 ]
  %764 = ashr exact i64 %762, 4
  %765 = and i64 %764, 4294967295
  %766 = icmp eq i64 %765, 0
  br i1 %766, label %854, label %767

767:                                              ; preds = %761
  %768 = shl nuw nsw i64 %765, 2
  %769 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %768) #21
          to label %770 unwind label %871

770:                                              ; preds = %767
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %769, i8 0, i64 %768, i1 false), !tbaa !22
  br label %854

771:                                              ; preds = %539
  %772 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %10)
          to label %1109 unwind label %1119

773:                                              ; preds = %749, %851
  %774 = phi i64 [ 0, %749 ], [ %852, %851 ]
  %775 = phi i8 [ 0, %749 ], [ %790, %851 ]
  %776 = getelementptr inbounds %"struct.std::pair.188", ptr %529, i64 %774
  %777 = load i32, ptr %776, align 8, !tbaa !326
  %778 = zext i32 %777 to i64
  %779 = load ptr, ptr %1, align 8, !tbaa !58
  %780 = getelementptr inbounds i32, ptr %779, i64 %778
  %781 = load i32, ptr %780, align 4, !tbaa !22
  %782 = getelementptr inbounds %"struct.std::pair.188", ptr %529, i64 %774, i32 1
  %783 = load ptr, ptr %782, align 8, !tbaa !328
  %784 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %783, i64 0, i32 1
  %785 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %783, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %786 = load ptr, ptr %785, align 8, !tbaa !31
  %787 = load ptr, ptr %784, align 8, !tbaa !32
  %788 = icmp eq ptr %786, %787
  br i1 %788, label %789, label %792

789:                                              ; preds = %800, %773
  %790 = phi i8 [ %775, %773 ], [ 1, %800 ]
  br i1 %3, label %791, label %848

791:                                              ; preds = %789
  br i1 %514, label %851, label %812

792:                                              ; preds = %773, %800
  %793 = phi ptr [ %804, %800 ], [ %787, %773 ]
  %794 = phi i64 [ %802, %800 ], [ 0, %773 ]
  %795 = phi i32 [ %801, %800 ], [ 0, %773 ]
  %796 = getelementptr inbounds %"struct.std::pair", ptr %793, i64 %794
  %797 = load i32, ptr %796, align 8, !tbaa !37
  %798 = getelementptr inbounds %"struct.std::pair", ptr %793, i64 %794, i32 1
  %799 = load double, ptr %798, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %8, i32 noundef %797, i32 %777, double %799)
          to label %800 unwind label %810

800:                                              ; preds = %792
  %801 = add i32 %795, 1
  %802 = zext i32 %801 to i64
  %803 = load ptr, ptr %785, align 8, !tbaa !31
  %804 = load ptr, ptr %784, align 8, !tbaa !32
  %805 = ptrtoint ptr %803 to i64
  %806 = ptrtoint ptr %804 to i64
  %807 = sub i64 %805, %806
  %808 = ashr exact i64 %807, 4
  %809 = icmp ugt i64 %808, %802
  br i1 %809, label %792, label %789

810:                                              ; preds = %792
  %811 = landingpad { ptr, i32 }
          cleanup
  br label %1109

812:                                              ; preds = %791, %845
  %813 = phi i64 [ %846, %845 ], [ 0, %791 ]
  %814 = load ptr, ptr %751, align 8, !tbaa !422, !noalias !73
  %815 = load i32, ptr %752, align 8, !tbaa !22, !noalias !73
  %816 = mul i32 %815, %777
  %817 = zext i32 %816 to i64
  %818 = getelementptr inbounds i8, ptr %814, i64 %817
  %819 = getelementptr inbounds i8, ptr %818, i64 %813
  %820 = load i8, ptr %819, align 1, !tbaa !424, !range !425, !noundef !73
  %821 = icmp eq i8 %820, 0
  br i1 %821, label %831, label %822

822:                                              ; preds = %812
  %823 = load ptr, ptr %1, align 8, !tbaa !58
  %824 = getelementptr inbounds i32, ptr %823, i64 %813
  %825 = load i32, ptr %824, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %2, i32 noundef %781, i32 noundef %825)
          to label %826 unwind label %829

826:                                              ; preds = %822
  %827 = load ptr, ptr %751, align 8, !tbaa !422, !noalias !426
  %828 = load i32, ptr %752, align 8, !tbaa !22, !noalias !426
  br label %831

829:                                              ; preds = %841, %822
  %830 = landingpad { ptr, i32 }
          cleanup
  br label %1109

831:                                              ; preds = %826, %812
  %832 = phi i32 [ %828, %826 ], [ %815, %812 ]
  %833 = phi ptr [ %827, %826 ], [ %814, %812 ]
  %834 = trunc i64 %813 to i32
  %835 = mul i32 %832, %834
  %836 = zext i32 %835 to i64
  %837 = getelementptr inbounds i8, ptr %833, i64 %836
  %838 = getelementptr inbounds i8, ptr %837, i64 %778
  %839 = load i8, ptr %838, align 1, !tbaa !424, !range !425, !noundef !73
  %840 = icmp eq i8 %839, 0
  br i1 %840, label %845, label %841

841:                                              ; preds = %831
  %842 = load ptr, ptr %1, align 8, !tbaa !58
  %843 = getelementptr inbounds i32, ptr %842, i64 %813
  %844 = load i32, ptr %843, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %2, i32 noundef %844, i32 noundef %781)
          to label %845 unwind label %829

845:                                              ; preds = %831, %841
  %846 = add nuw nsw i64 %813, 1
  %847 = icmp eq i64 %846, %754
  br i1 %847, label %851, label %812

848:                                              ; preds = %789
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %2, i32 noundef %781, i32 noundef %781)
          to label %851 unwind label %849

849:                                              ; preds = %848
  %850 = landingpad { ptr, i32 }
          cleanup
  br label %1109

851:                                              ; preds = %845, %791, %848
  %852 = add nuw nsw i64 %774, 1
  %853 = icmp eq i64 %852, %753
  br i1 %853, label %755, label %773

854:                                              ; preds = %770, %761
  %855 = phi ptr [ null, %761 ], [ %769, %770 ]
  %856 = and i64 %762, 68719476720
  %857 = icmp eq i64 %856, 0
  br i1 %857, label %868, label %858

858:                                              ; preds = %854
  %859 = and i8 %763, 1
  %860 = icmp eq i8 %859, 0
  %861 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %862 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %863 = and i64 %764, 4294967295
  %864 = and i64 %764, 1
  %865 = icmp eq i64 %863, 1
  %866 = sub nsw i64 %863, %864
  %867 = icmp eq i64 %864, 0
  br label %873

868:                                              ; preds = %1077, %854
  %869 = icmp eq ptr %855, null
  br i1 %869, label %1081, label %870

870:                                              ; preds = %868
  call void @_ZdlPv(ptr noundef nonnull %855) #23
  br label %1081

871:                                              ; preds = %767
  %872 = landingpad { ptr, i32 }
          cleanup
  br label %1109

873:                                              ; preds = %858, %1077
  %874 = phi i64 [ 0, %858 ], [ %1078, %1077 ]
  %875 = load ptr, ptr %8, align 8, !tbaa !321
  %876 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %874
  %877 = load i32, ptr %876, align 8, !tbaa !317
  %878 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %874, i32 1
  %879 = load i32, ptr %878, align 4, !tbaa !319
  br i1 %860, label %884, label %880

880:                                              ; preds = %873
  %881 = icmp eq i32 %879, -1
  %882 = load ptr, ptr %861, align 8
  %883 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %874, i32 2
  br label %926

884:                                              ; preds = %873
  %885 = load ptr, ptr %861, align 8, !tbaa !422, !noalias !429
  br i1 %865, label %1046, label %886

886:                                              ; preds = %884, %921
  %887 = phi i64 [ %923, %921 ], [ 0, %884 ]
  %888 = phi ptr [ %922, %921 ], [ %855, %884 ]
  %889 = phi i64 [ %924, %921 ], [ 0, %884 ]
  %890 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %887, i32 1
  %891 = load i32, ptr %890, align 4, !tbaa !319
  %892 = load i32, ptr %862, align 8, !tbaa !22, !noalias !429
  %893 = mul i32 %892, %879
  %894 = zext i32 %893 to i64
  %895 = getelementptr inbounds i8, ptr %885, i64 %894
  %896 = zext i32 %891 to i64
  %897 = getelementptr inbounds i8, ptr %895, i64 %896
  %898 = load i8, ptr %897, align 1, !tbaa !424, !range !425, !noundef !73
  %899 = icmp eq i8 %898, 0
  br i1 %899, label %904, label %900

900:                                              ; preds = %886
  %901 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %887
  %902 = load i32, ptr %901, align 8, !tbaa !317
  %903 = getelementptr inbounds i32, ptr %888, i64 1
  store i32 %902, ptr %888, align 4, !tbaa !22
  br label %904

904:                                              ; preds = %900, %886
  %905 = phi ptr [ %888, %886 ], [ %903, %900 ]
  %906 = or i64 %887, 1
  %907 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %906, i32 1
  %908 = load i32, ptr %907, align 4, !tbaa !319
  %909 = load i32, ptr %862, align 8, !tbaa !22, !noalias !429
  %910 = mul i32 %909, %879
  %911 = zext i32 %910 to i64
  %912 = getelementptr inbounds i8, ptr %885, i64 %911
  %913 = zext i32 %908 to i64
  %914 = getelementptr inbounds i8, ptr %912, i64 %913
  %915 = load i8, ptr %914, align 1, !tbaa !424, !range !425, !noundef !73
  %916 = icmp eq i8 %915, 0
  br i1 %916, label %921, label %917

917:                                              ; preds = %904
  %918 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %906
  %919 = load i32, ptr %918, align 8, !tbaa !317
  %920 = getelementptr inbounds i32, ptr %905, i64 1
  store i32 %919, ptr %905, align 4, !tbaa !22
  br label %921

921:                                              ; preds = %917, %904
  %922 = phi ptr [ %905, %904 ], [ %920, %917 ]
  %923 = add nuw nsw i64 %887, 2
  %924 = add i64 %889, 2
  %925 = icmp eq i64 %924, %866
  br i1 %925, label %1046, label %886

926:                                              ; preds = %880, %1042
  %927 = phi i64 [ 0, %880 ], [ %1044, %1042 ]
  %928 = phi ptr [ %855, %880 ], [ %1043, %1042 ]
  %929 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %927
  %930 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %927, i32 1
  %931 = load i32, ptr %930, align 4, !tbaa !319
  br i1 %881, label %974, label %932

932:                                              ; preds = %926
  %933 = icmp eq i32 %931, -1
  br i1 %933, label %943, label %934

934:                                              ; preds = %932
  %935 = load i32, ptr %862, align 8, !tbaa !22, !noalias !432
  %936 = mul i32 %935, %879
  %937 = zext i32 %936 to i64
  %938 = getelementptr inbounds i8, ptr %882, i64 %937
  %939 = zext i32 %931 to i64
  %940 = getelementptr inbounds i8, ptr %938, i64 %939
  %941 = load i8, ptr %940, align 1, !tbaa !424, !range !425, !noundef !73
  %942 = icmp eq i8 %941, 0
  br i1 %942, label %943, label %1039

943:                                              ; preds = %934, %932
  %944 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %927, i32 2
  %945 = load ptr, ptr %944, align 8, !tbaa !320
  %946 = icmp eq ptr %945, null
  br i1 %946, label %974, label %947

947:                                              ; preds = %943
  %948 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %945, i64 0, i32 1
  %949 = load ptr, ptr %948, align 8, !tbaa !31
  %950 = load ptr, ptr %945, align 8, !tbaa !32
  %951 = ptrtoint ptr %949 to i64
  %952 = ptrtoint ptr %950 to i64
  %953 = sub i64 %951, %952
  %954 = ashr exact i64 %953, 4
  %955 = icmp eq ptr %949, %950
  br i1 %955, label %974, label %956

956:                                              ; preds = %947
  %957 = load i32, ptr %862, align 8, !tbaa !22, !noalias !435
  %958 = mul i32 %957, %879
  %959 = zext i32 %958 to i64
  %960 = getelementptr inbounds i8, ptr %882, i64 %959
  br label %965

961:                                              ; preds = %965
  %962 = add i32 %967, 1
  %963 = zext i32 %962 to i64
  %964 = icmp ugt i64 %954, %963
  br i1 %964, label %965, label %974

965:                                              ; preds = %956, %961
  %966 = phi i64 [ 0, %956 ], [ %963, %961 ]
  %967 = phi i32 [ 0, %956 ], [ %962, %961 ]
  %968 = getelementptr inbounds %"struct.std::pair", ptr %950, i64 %966
  %969 = load i32, ptr %968, align 8, !tbaa !37
  %970 = zext i32 %969 to i64
  %971 = getelementptr inbounds i8, ptr %960, i64 %970
  %972 = load i8, ptr %971, align 1, !tbaa !424, !range !425, !noundef !73
  %973 = icmp eq i8 %972, 0
  br i1 %973, label %961, label %1039

974:                                              ; preds = %961, %947, %943, %926
  %975 = load ptr, ptr %883, align 8, !tbaa !320
  %976 = icmp eq ptr %975, null
  br i1 %976, label %1042, label %977

977:                                              ; preds = %974
  %978 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %975, i64 0, i32 1
  %979 = load ptr, ptr %978, align 8, !tbaa !31
  %980 = load ptr, ptr %975, align 8, !tbaa !32
  %981 = ptrtoint ptr %979 to i64
  %982 = ptrtoint ptr %980 to i64
  %983 = sub i64 %981, %982
  %984 = ashr exact i64 %983, 4
  %985 = icmp eq ptr %979, %980
  br i1 %985, label %1042, label %986

986:                                              ; preds = %977
  %987 = icmp eq i32 %931, -1
  %988 = load ptr, ptr %861, align 8
  %989 = load i32, ptr %862, align 8
  %990 = zext i32 %931 to i64
  %991 = getelementptr inbounds i8, ptr %988, i64 %990
  %992 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %927, i32 2
  br label %993

993:                                              ; preds = %986, %1035
  %994 = phi i64 [ 0, %986 ], [ %1037, %1035 ]
  %995 = phi i32 [ 0, %986 ], [ %1036, %1035 ]
  br i1 %987, label %1004, label %996

996:                                              ; preds = %993
  %997 = getelementptr inbounds %"struct.std::pair", ptr %980, i64 %994
  %998 = load i32, ptr %997, align 8, !tbaa !37
  %999 = mul i32 %989, %998
  %1000 = zext i32 %999 to i64
  %1001 = getelementptr inbounds i8, ptr %991, i64 %1000
  %1002 = load i8, ptr %1001, align 1, !tbaa !424, !range !425, !noundef !73
  %1003 = icmp eq i8 %1002, 0
  br i1 %1003, label %1004, label %1039

1004:                                             ; preds = %996, %993
  %1005 = load ptr, ptr %992, align 8, !tbaa !320
  %1006 = icmp eq ptr %1005, null
  br i1 %1006, label %1035, label %1007

1007:                                             ; preds = %1004
  %1008 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1005, i64 0, i32 1
  %1009 = load ptr, ptr %1008, align 8, !tbaa !31
  %1010 = load ptr, ptr %1005, align 8, !tbaa !32
  %1011 = ptrtoint ptr %1009 to i64
  %1012 = ptrtoint ptr %1010 to i64
  %1013 = sub i64 %1011, %1012
  %1014 = ashr exact i64 %1013, 4
  %1015 = icmp eq ptr %1009, %1010
  br i1 %1015, label %1035, label %1016

1016:                                             ; preds = %1007
  %1017 = getelementptr inbounds %"struct.std::pair", ptr %980, i64 %994
  %1018 = load i32, ptr %1017, align 8, !tbaa !37
  %1019 = mul i32 %989, %1018
  %1020 = zext i32 %1019 to i64
  %1021 = getelementptr inbounds i8, ptr %988, i64 %1020
  br label %1026

1022:                                             ; preds = %1026
  %1023 = add i32 %1028, 1
  %1024 = zext i32 %1023 to i64
  %1025 = icmp ugt i64 %1014, %1024
  br i1 %1025, label %1026, label %1035

1026:                                             ; preds = %1016, %1022
  %1027 = phi i64 [ 0, %1016 ], [ %1024, %1022 ]
  %1028 = phi i32 [ 0, %1016 ], [ %1023, %1022 ]
  %1029 = getelementptr inbounds %"struct.std::pair", ptr %1010, i64 %1027
  %1030 = load i32, ptr %1029, align 8, !tbaa !37
  %1031 = zext i32 %1030 to i64
  %1032 = getelementptr inbounds i8, ptr %1021, i64 %1031
  %1033 = load i8, ptr %1032, align 1, !tbaa !424, !range !425, !noundef !73
  %1034 = icmp eq i8 %1033, 0
  br i1 %1034, label %1022, label %1039

1035:                                             ; preds = %1022, %1007, %1004
  %1036 = add i32 %995, 1
  %1037 = zext i32 %1036 to i64
  %1038 = icmp ugt i64 %984, %1037
  br i1 %1038, label %993, label %1042

1039:                                             ; preds = %965, %996, %1026, %934
  %1040 = load i32, ptr %929, align 8, !tbaa !317
  %1041 = getelementptr inbounds i32, ptr %928, i64 1
  store i32 %1040, ptr %928, align 4, !tbaa !22
  br label %1042

1042:                                             ; preds = %1035, %977, %974, %1039
  %1043 = phi ptr [ %928, %974 ], [ %1041, %1039 ], [ %928, %977 ], [ %928, %1035 ]
  %1044 = add nuw nsw i64 %927, 1
  %1045 = icmp eq i64 %1044, %863
  br i1 %1045, label %1065, label %926

1046:                                             ; preds = %921, %884
  %1047 = phi ptr [ undef, %884 ], [ %922, %921 ]
  %1048 = phi i64 [ 0, %884 ], [ %923, %921 ]
  %1049 = phi ptr [ %855, %884 ], [ %922, %921 ]
  br i1 %867, label %1065, label %1050

1050:                                             ; preds = %1046
  %1051 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %1048, i32 1
  %1052 = load i32, ptr %1051, align 4, !tbaa !319
  %1053 = load i32, ptr %862, align 8, !tbaa !22, !noalias !429
  %1054 = mul i32 %1053, %879
  %1055 = zext i32 %1054 to i64
  %1056 = getelementptr inbounds i8, ptr %885, i64 %1055
  %1057 = zext i32 %1052 to i64
  %1058 = getelementptr inbounds i8, ptr %1056, i64 %1057
  %1059 = load i8, ptr %1058, align 1, !tbaa !424, !range !425, !noundef !73
  %1060 = icmp eq i8 %1059, 0
  br i1 %1060, label %1065, label %1061

1061:                                             ; preds = %1050
  %1062 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %875, i64 %1048
  %1063 = load i32, ptr %1062, align 8, !tbaa !317
  %1064 = getelementptr inbounds i32, ptr %1049, i64 1
  store i32 %1063, ptr %1049, align 4, !tbaa !22
  br label %1065

1065:                                             ; preds = %1042, %1046, %1061, %1050
  %1066 = phi ptr [ %1047, %1046 ], [ %1049, %1050 ], [ %1064, %1061 ], [ %1043, %1042 ]
  %1067 = icmp eq ptr %1066, %855
  br i1 %1067, label %1077, label %1068

1068:                                             ; preds = %1065, %1071
  %1069 = phi ptr [ %1072, %1071 ], [ %855, %1065 ]
  %1070 = load i32, ptr %1069, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %2, i32 noundef %877, i32 noundef %1070)
          to label %1071 unwind label %1074

1071:                                             ; preds = %1068
  %1072 = getelementptr inbounds i32, ptr %1069, i64 1
  %1073 = icmp eq ptr %1072, %1066
  br i1 %1073, label %1077, label %1068

1074:                                             ; preds = %1068
  %1075 = landingpad { ptr, i32 }
          cleanup
  %1076 = icmp eq ptr %855, null
  br i1 %1076, label %1109, label %1080

1077:                                             ; preds = %1071, %1065
  %1078 = add nuw nsw i64 %874, 1
  %1079 = icmp eq i64 %1078, %863
  br i1 %1079, label %868, label %873

1080:                                             ; preds = %1074
  call void @_ZdlPv(ptr noundef nonnull %855) #23
  br label %1109

1081:                                             ; preds = %870, %868
  %1082 = icmp eq ptr %529, null
  br i1 %1082, label %1084, label %1083

1083:                                             ; preds = %1081
  call void @_ZdlPv(ptr noundef nonnull %529) #23
  br label %1084

1084:                                             ; preds = %1083, %1081
  %1085 = load ptr, ptr %8, align 8, !tbaa !321
  %1086 = load ptr, ptr %513, align 8, !tbaa !325
  %1087 = icmp eq ptr %1085, %1086
  br i1 %1087, label %1103, label %1088

1088:                                             ; preds = %1084, %1098
  %1089 = phi ptr [ %1099, %1098 ], [ %1085, %1084 ]
  %1090 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1089, i64 0, i32 2
  %1091 = load ptr, ptr %1090, align 8, !tbaa !320
  %1092 = icmp eq ptr %1091, null
  br i1 %1092, label %1098, label %1093

1093:                                             ; preds = %1088
  %1094 = load ptr, ptr %1091, align 8, !tbaa !32
  %1095 = icmp eq ptr %1094, null
  br i1 %1095, label %1097, label %1096

1096:                                             ; preds = %1093
  call void @_ZdlPv(ptr noundef nonnull %1094) #23
  br label %1097

1097:                                             ; preds = %1096, %1093
  call void @_ZdlPv(ptr noundef nonnull %1091) #23
  store ptr null, ptr %1090, align 8, !tbaa !320
  br label %1098

1098:                                             ; preds = %1097, %1088
  %1099 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1089, i64 1
  %1100 = icmp eq ptr %1099, %1086
  br i1 %1100, label %1101, label %1088

1101:                                             ; preds = %1098
  %1102 = load ptr, ptr %8, align 8, !tbaa !321
  br label %1103

1103:                                             ; preds = %1101, %1084
  %1104 = phi ptr [ %1102, %1101 ], [ %1085, %1084 ]
  %1105 = icmp eq ptr %1104, null
  br i1 %1105, label %1107, label %1106

1106:                                             ; preds = %1103
  call void @_ZdlPv(ptr noundef nonnull %1104) #23
  br label %1107

1107:                                             ; preds = %1103, %1106
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #24
  br label %1108

1108:                                             ; preds = %1107, %449
  ret void

1109:                                             ; preds = %677, %679, %829, %849, %810, %1080, %1074, %871, %771
  %1110 = phi ptr [ %529, %771 ], [ %529, %810 ], [ %529, %849 ], [ %529, %829 ], [ %529, %871 ], [ %529, %1074 ], [ %529, %1080 ], [ %566, %677 ], [ %566, %679 ]
  %1111 = phi { ptr, i32 } [ %772, %771 ], [ %811, %810 ], [ %850, %849 ], [ %830, %829 ], [ %872, %871 ], [ %1075, %1074 ], [ %1075, %1080 ], [ %678, %677 ], [ %680, %679 ]
  %1112 = icmp eq ptr %1110, null
  br i1 %1112, label %1114, label %1113

1113:                                             ; preds = %1109
  call void @_ZdlPv(ptr noundef nonnull %1110) #23
  br label %1114

1114:                                             ; preds = %1113, %1109
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %8)
          to label %1115 unwind label %1119

1115:                                             ; preds = %1114, %562
  %1116 = phi { ptr, i32 } [ %1111, %1114 ], [ %561, %562 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #24
  br label %1117

1117:                                             ; preds = %1115, %459
  %1118 = phi { ptr, i32 } [ %460, %459 ], [ %1116, %1115 ]
  resume { ptr, i32 } %1118

1119:                                             ; preds = %1114, %771, %560
  %1120 = landingpad { ptr, i32 }
          catch ptr null
  %1121 = extractvalue { ptr, i32 } %1120, 0
  call void @__clang_call_terminate(ptr %1121) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_25CompressedSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(104) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_25CompressedSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(104) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_25CompressedSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(104) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::vector.36", align 8
  %8 = alloca %"class.std::vector.178", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = alloca %"struct.dealii::internals::distributing", align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !313
  %13 = load ptr, ptr %1, align 8, !tbaa !58
  %14 = ptrtoint ptr %12 to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 2
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3
  %20 = load i32, ptr %19, align 4, !tbaa !22
  %21 = icmp eq i32 %20, %18
  %22 = and i64 %17, 4294967295
  br i1 %21, label %543, label %23

23:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %23
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %32

26:                                               ; preds = %23
  %27 = shl nuw nsw i64 %22, 2
  %28 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %27) #21
          to label %29 unwind label %70

29:                                               ; preds = %26
  store ptr %28, ptr %7, align 8, !tbaa !58
  %30 = getelementptr inbounds i32, ptr %28, i64 %22
  %31 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %30, ptr %31, align 8, !tbaa !417
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %28, i8 0, i64 %27, i1 false), !tbaa !22
  br label %32

32:                                               ; preds = %29, %25
  %33 = phi ptr [ null, %25 ], [ %28, %29 ]
  %34 = phi ptr [ null, %25 ], [ %30, %29 ]
  %35 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %34, ptr %35, align 8, !tbaa !313
  %36 = icmp eq i32 %18, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %41 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %43 = and i64 %17, 4294967295
  br label %72

44:                                               ; preds = %177
  %45 = load ptr, ptr %35, align 8, !tbaa !21
  %46 = load ptr, ptr %7, align 8, !tbaa !21
  br label %47

47:                                               ; preds = %44, %32
  %48 = phi ptr [ %33, %32 ], [ %46, %44 ]
  %49 = phi ptr [ %34, %32 ], [ %45, %44 ]
  %50 = phi ptr [ null, %32 ], [ %179, %44 ]
  %51 = phi ptr [ null, %32 ], [ %180, %44 ]
  %52 = phi i32 [ 0, %32 ], [ %181, %44 ]
  %53 = zext i32 %52 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6)
  store i32 0, ptr %6, align 4, !tbaa !22
  %54 = ptrtoint ptr %49 to i64
  %55 = ptrtoint ptr %48 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = icmp ult i64 %57, %53
  br i1 %58, label %59, label %64

59:                                               ; preds = %47
  %60 = sub nsw i64 %53, %57
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %49, i64 noundef %60, ptr noundef nonnull align 4 dereferenceable(4) %6)
          to label %61 unwind label %225

61:                                               ; preds = %59
  %62 = load ptr, ptr %7, align 8, !tbaa !21
  %63 = load ptr, ptr %35, align 8, !tbaa !21
  br label %188

64:                                               ; preds = %47
  %65 = icmp ugt i64 %57, %53
  br i1 %65, label %66, label %188

66:                                               ; preds = %64
  %67 = getelementptr inbounds i32, ptr %48, i64 %53
  %68 = icmp eq ptr %49, %67
  br i1 %68, label %188, label %69

69:                                               ; preds = %66
  store ptr %67, ptr %35, align 8, !tbaa !313
  br label %188

70:                                               ; preds = %26
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %541

72:                                               ; preds = %37, %177
  %73 = phi i64 [ 0, %37 ], [ %182, %177 ]
  %74 = phi i32 [ 0, %37 ], [ %181, %177 ]
  %75 = phi ptr [ null, %37 ], [ %180, %177 ]
  %76 = phi ptr [ null, %37 ], [ %179, %177 ]
  %77 = phi ptr [ null, %37 ], [ %178, %177 ]
  %78 = load ptr, ptr %39, align 8, !tbaa !55
  %79 = load i32, ptr %40, align 8, !tbaa !57
  %80 = load ptr, ptr %38, align 8, !tbaa !55
  %81 = ptrtoint ptr %78 to i64
  %82 = ptrtoint ptr %80 to i64
  %83 = sub i64 %81, %82
  %84 = shl nsw i64 %83, 3
  %85 = zext i32 %79 to i64
  %86 = add nsw i64 %84, %85
  %87 = load ptr, ptr %1, align 8, !tbaa !58
  %88 = getelementptr inbounds i32, ptr %87, i64 %73
  %89 = load i32, ptr %88, align 4, !tbaa !22
  %90 = zext i32 %89 to i64
  %91 = icmp ugt i64 %86, %90
  br i1 %91, label %92, label %102

92:                                               ; preds = %72
  %93 = lshr i32 %89, 6
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i64, ptr %80, i64 %94
  %96 = and i32 %89, 63
  %97 = zext i32 %96 to i64
  %98 = shl nuw i64 1, %97
  %99 = load i64, ptr %95, align 8, !tbaa !42
  %100 = and i64 %99, %98
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %107

102:                                              ; preds = %92, %72
  %103 = zext i32 %74 to i64
  %104 = load ptr, ptr %7, align 8, !tbaa !58
  %105 = getelementptr inbounds i32, ptr %104, i64 %103
  store i32 %89, ptr %105, align 4, !tbaa !22
  %106 = add i32 %74, 1
  br label %177

107:                                              ; preds = %92
  %108 = load ptr, ptr %41, align 8, !tbaa !21
  %109 = load ptr, ptr %42, align 8, !tbaa !21
  %110 = ptrtoint ptr %109 to i64
  %111 = ptrtoint ptr %108 to i64
  %112 = sub i64 %110, %111
  %113 = icmp sgt i64 %112, 0
  br i1 %113, label %114, label %129

114:                                              ; preds = %107
  %115 = udiv exact i64 %112, 40
  br label %116

116:                                              ; preds = %116, %114
  %117 = phi i64 [ %115, %114 ], [ %127, %116 ]
  %118 = phi ptr [ %108, %114 ], [ %126, %116 ]
  %119 = lshr i64 %117, 1
  %120 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %118, i64 %119
  %121 = load i32, ptr %120, align 8, !tbaa !24
  %122 = icmp ult i32 %121, %89
  %123 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %120, i64 1
  %124 = xor i64 %119, -1
  %125 = add nsw i64 %117, %124
  %126 = select i1 %122, ptr %123, ptr %118
  %127 = select i1 %122, i64 %125, i64 %119
  %128 = icmp sgt i64 %127, 0
  br i1 %128, label %116, label %129

129:                                              ; preds = %116, %107
  %130 = phi ptr [ %108, %107 ], [ %126, %116 ]
  %131 = icmp eq ptr %76, %77
  br i1 %131, label %135, label %132

132:                                              ; preds = %129
  %133 = trunc i64 %73 to i32
  store i32 %133, ptr %76, align 8
  %134 = getelementptr inbounds i8, ptr %76, i64 8
  store ptr %130, ptr %134, align 8
  br label %172

135:                                              ; preds = %129
  %136 = ptrtoint ptr %76 to i64
  %137 = ptrtoint ptr %75 to i64
  %138 = sub i64 %136, %137
  %139 = icmp eq i64 %138, 9223372036854775792
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %141 unwind label %186

141:                                              ; preds = %140
  unreachable

142:                                              ; preds = %135
  %143 = ashr exact i64 %138, 4
  %144 = tail call i64 @llvm.umax.i64(i64 %143, i64 1)
  %145 = add i64 %144, %143
  %146 = icmp ult i64 %145, %143
  %147 = icmp ugt i64 %145, 576460752303423487
  %148 = or i1 %146, %147
  %149 = select i1 %148, i64 576460752303423487, i64 %145
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %142
  %152 = shl nuw nsw i64 %149, 4
  %153 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %152) #21
          to label %154 unwind label %184

154:                                              ; preds = %151, %142
  %155 = phi ptr [ null, %142 ], [ %153, %151 ]
  %156 = getelementptr inbounds %"struct.std::pair.188", ptr %155, i64 %143
  %157 = trunc i64 %73 to i32
  store i32 %157, ptr %156, align 8
  %158 = getelementptr inbounds i8, ptr %156, i64 8
  store ptr %130, ptr %158, align 8
  %159 = icmp eq ptr %75, %76
  br i1 %159, label %166, label %160

160:                                              ; preds = %154, %160
  %161 = phi ptr [ %164, %160 ], [ %155, %154 ]
  %162 = phi ptr [ %163, %160 ], [ %75, %154 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %161, ptr noundef nonnull align 8 dereferenceable(16) %162, i64 16, i1 false)
  %163 = getelementptr inbounds %"struct.std::pair.188", ptr %162, i64 1
  %164 = getelementptr inbounds %"struct.std::pair.188", ptr %161, i64 1
  %165 = icmp eq ptr %163, %76
  br i1 %165, label %166, label %160

166:                                              ; preds = %160, %154
  %167 = phi ptr [ %155, %154 ], [ %164, %160 ]
  %168 = icmp eq ptr %75, null
  br i1 %168, label %170, label %169

169:                                              ; preds = %166
  tail call void @_ZdlPv(ptr noundef nonnull %75) #23
  br label %170

170:                                              ; preds = %169, %166
  %171 = getelementptr inbounds %"struct.std::pair.188", ptr %155, i64 %149
  br label %172

172:                                              ; preds = %170, %132
  %173 = phi ptr [ %171, %170 ], [ %77, %132 ]
  %174 = phi ptr [ %167, %170 ], [ %76, %132 ]
  %175 = phi ptr [ %155, %170 ], [ %75, %132 ]
  %176 = getelementptr inbounds %"struct.std::pair.188", ptr %174, i64 1
  br label %177

177:                                              ; preds = %172, %102
  %178 = phi ptr [ %173, %172 ], [ %77, %102 ]
  %179 = phi ptr [ %176, %172 ], [ %76, %102 ]
  %180 = phi ptr [ %175, %172 ], [ %75, %102 ]
  %181 = phi i32 [ %74, %172 ], [ %106, %102 ]
  %182 = add nuw nsw i64 %73, 1
  %183 = icmp eq i64 %182, %43
  br i1 %183, label %44, label %72

184:                                              ; preds = %151
  %185 = landingpad { ptr, i32 }
          cleanup
  br label %532

186:                                              ; preds = %140
  %187 = landingpad { ptr, i32 }
          cleanup
  br label %532

188:                                              ; preds = %61, %69, %66, %64
  %189 = phi ptr [ %63, %61 ], [ %67, %69 ], [ %49, %66 ], [ %49, %64 ]
  %190 = phi ptr [ %62, %61 ], [ %48, %69 ], [ %48, %66 ], [ %48, %64 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6)
  %191 = icmp eq ptr %190, %189
  br i1 %191, label %201, label %192

192:                                              ; preds = %188
  %193 = ptrtoint ptr %189 to i64
  %194 = ptrtoint ptr %190 to i64
  %195 = sub i64 %193, %194
  %196 = ashr exact i64 %195, 2
  %197 = call i64 @llvm.ctlz.i64(i64 %196, i1 true), !range !418
  %198 = shl nuw nsw i64 %197, 1
  %199 = xor i64 %198, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %190, ptr %189, i64 noundef %199)
          to label %200 unwind label %225

200:                                              ; preds = %192
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %190, ptr %189)
          to label %201 unwind label %225

201:                                              ; preds = %188, %200
  %202 = ptrtoint ptr %50 to i64
  %203 = ptrtoint ptr %51 to i64
  %204 = sub i64 %202, %203
  %205 = and i64 %204, 68719476720
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %213, label %207

207:                                              ; preds = %201
  %208 = lshr exact i64 %204, 4
  %209 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  %210 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %2, i64 0, i32 3
  %211 = and i64 %208, 4294967295
  %212 = and i64 %17, 4294967295
  br label %227

213:                                              ; preds = %507, %201
  %214 = load ptr, ptr %35, align 8, !tbaa !313
  %215 = load ptr, ptr %7, align 8, !tbaa !58
  %216 = ptrtoint ptr %214 to i64
  %217 = ptrtoint ptr %215 to i64
  %218 = sub i64 %216, %217
  %219 = and i64 %218, 17179869180
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %510, label %221

221:                                              ; preds = %213
  %222 = lshr exact i64 %218, 2
  %223 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %2, i64 0, i32 3
  %224 = and i64 %222, 4294967295
  br label %513

225:                                              ; preds = %200, %192, %59
  %226 = landingpad { ptr, i32 }
          cleanup
  br label %532

227:                                              ; preds = %207, %507
  %228 = phi i64 [ 0, %207 ], [ %508, %507 ]
  %229 = getelementptr inbounds %"struct.std::pair.188", ptr %51, i64 %228
  %230 = load i32, ptr %229, align 8, !tbaa !326
  %231 = zext i32 %230 to i64
  %232 = load ptr, ptr %1, align 8, !tbaa !58
  %233 = getelementptr inbounds i32, ptr %232, i64 %231
  %234 = load i32, ptr %233, align 4, !tbaa !22
  %235 = getelementptr inbounds %"struct.std::pair.188", ptr %51, i64 %228, i32 1
  %236 = load ptr, ptr %235, align 8, !tbaa !328
  %237 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %236, i64 0, i32 1
  %238 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %236, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %239 = load ptr, ptr %238, align 8, !tbaa !31
  %240 = load ptr, ptr %237, align 8, !tbaa !32
  %241 = icmp eq ptr %239, %240
  br i1 %241, label %242, label %246

242:                                              ; preds = %396, %227
  br i1 %3, label %243, label %477

243:                                              ; preds = %242
  br i1 %36, label %507, label %244

244:                                              ; preds = %243
  %245 = zext i32 %234 to i64
  br label %406

246:                                              ; preds = %227, %396
  %247 = phi ptr [ %400, %396 ], [ %240, %227 ]
  %248 = phi i64 [ %398, %396 ], [ 0, %227 ]
  %249 = phi i32 [ %397, %396 ], [ 0, %227 ]
  %250 = getelementptr inbounds %"struct.std::pair", ptr %247, i64 %248
  %251 = load i32, ptr %250, align 8, !tbaa !37
  %252 = load ptr, ptr %35, align 8, !tbaa !21
  %253 = getelementptr inbounds i32, ptr %252, i64 -1
  %254 = load i32, ptr %253, align 4, !tbaa !22
  %255 = icmp ult i32 %254, %251
  br i1 %255, label %256, label %303

256:                                              ; preds = %246
  %257 = load ptr, ptr %209, align 8, !tbaa !417
  %258 = icmp eq ptr %252, %257
  br i1 %258, label %261, label %259

259:                                              ; preds = %256
  store i32 %251, ptr %252, align 4, !tbaa !22
  %260 = getelementptr inbounds i32, ptr %252, i64 1
  store ptr %260, ptr %35, align 8, !tbaa !313
  br label %396

261:                                              ; preds = %256
  %262 = load ptr, ptr %7, align 8, !tbaa !21
  %263 = ptrtoint ptr %252 to i64
  %264 = ptrtoint ptr %262 to i64
  %265 = sub i64 %263, %264
  %266 = icmp eq i64 %265, 9223372036854775804
  br i1 %266, label %267, label %269

267:                                              ; preds = %261
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %268 unwind label %301

268:                                              ; preds = %267
  unreachable

269:                                              ; preds = %261
  %270 = ashr exact i64 %265, 2
  %271 = call i64 @llvm.umax.i64(i64 %270, i64 1)
  %272 = add i64 %271, %270
  %273 = icmp ult i64 %272, %270
  %274 = icmp ugt i64 %272, 2305843009213693951
  %275 = or i1 %273, %274
  %276 = select i1 %275, i64 2305843009213693951, i64 %272
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %281, label %278

278:                                              ; preds = %269
  %279 = shl nuw nsw i64 %276, 2
  %280 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %279) #21
          to label %281 unwind label %299

281:                                              ; preds = %278, %269
  %282 = phi ptr [ null, %269 ], [ %280, %278 ]
  %283 = getelementptr inbounds i32, ptr %282, i64 %270
  store i32 %251, ptr %283, align 4, !tbaa !22
  %284 = icmp sgt i64 %265, 4
  br i1 %284, label %285, label %286, !prof !23

285:                                              ; preds = %281
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %282, ptr align 4 %262, i64 %265, i1 false)
  br label %291

286:                                              ; preds = %281
  %287 = icmp eq i64 %265, 4
  br i1 %287, label %288, label %291

288:                                              ; preds = %286
  %289 = load i32, ptr %262, align 4, !tbaa !22
  store i32 %289, ptr %282, align 4, !tbaa !22
  %290 = getelementptr inbounds i32, ptr %283, i64 1
  br label %294

291:                                              ; preds = %286, %285
  %292 = getelementptr inbounds i32, ptr %283, i64 1
  %293 = icmp eq ptr %262, null
  br i1 %293, label %296, label %294

294:                                              ; preds = %288, %291
  %295 = phi ptr [ %290, %288 ], [ %292, %291 ]
  call void @_ZdlPv(ptr noundef nonnull %262) #23
  br label %296

296:                                              ; preds = %294, %291
  %297 = phi ptr [ %292, %291 ], [ %295, %294 ]
  store ptr %282, ptr %7, align 8, !tbaa !58
  store ptr %297, ptr %35, align 8, !tbaa !313
  %298 = getelementptr inbounds i32, ptr %282, i64 %276
  store ptr %298, ptr %209, align 8, !tbaa !417
  br label %396

299:                                              ; preds = %278
  %300 = landingpad { ptr, i32 }
          cleanup
  br label %532

301:                                              ; preds = %267
  %302 = landingpad { ptr, i32 }
          cleanup
  br label %532

303:                                              ; preds = %246
  %304 = load ptr, ptr %7, align 8, !tbaa !21
  %305 = ptrtoint ptr %252 to i64
  %306 = ptrtoint ptr %304 to i64
  %307 = sub i64 %305, %306
  %308 = icmp sgt i64 %307, 0
  br i1 %308, label %309, label %324

309:                                              ; preds = %303
  %310 = lshr exact i64 %307, 2
  br label %311

311:                                              ; preds = %311, %309
  %312 = phi i64 [ %310, %309 ], [ %322, %311 ]
  %313 = phi ptr [ %304, %309 ], [ %321, %311 ]
  %314 = lshr i64 %312, 1
  %315 = getelementptr inbounds i32, ptr %313, i64 %314
  %316 = load i32, ptr %315, align 4, !tbaa !22
  %317 = icmp ult i32 %316, %251
  %318 = getelementptr inbounds i32, ptr %315, i64 1
  %319 = xor i64 %314, -1
  %320 = add nsw i64 %312, %319
  %321 = select i1 %317, ptr %318, ptr %313
  %322 = select i1 %317, i64 %320, i64 %314
  %323 = icmp sgt i64 %322, 0
  br i1 %323, label %311, label %324

324:                                              ; preds = %311, %303
  %325 = phi ptr [ %304, %303 ], [ %321, %311 ]
  %326 = load i32, ptr %325, align 4, !tbaa !22
  %327 = icmp eq i32 %326, %251
  br i1 %327, label %396, label %328

328:                                              ; preds = %324
  %329 = ptrtoint ptr %325 to i64
  %330 = load ptr, ptr %209, align 8, !tbaa !417
  %331 = icmp eq ptr %252, %330
  br i1 %331, label %349, label %332

332:                                              ; preds = %328
  %333 = icmp eq ptr %252, %325
  %334 = getelementptr inbounds i32, ptr %252, i64 1
  br i1 %333, label %335, label %336

335:                                              ; preds = %332
  store i32 %251, ptr %252, align 4, !tbaa !22
  store ptr %334, ptr %35, align 8, !tbaa !313
  br label %396

336:                                              ; preds = %332
  store i32 %254, ptr %252, align 4, !tbaa !22
  store ptr %334, ptr %35, align 8, !tbaa !313
  %337 = ptrtoint ptr %253 to i64
  %338 = sub i64 %337, %329
  %339 = icmp sgt i64 %338, 4
  br i1 %339, label %340, label %344, !prof !23

340:                                              ; preds = %336
  %341 = lshr exact i64 %338, 2
  %342 = sub nsw i64 0, %341
  %343 = getelementptr inbounds i32, ptr %252, i64 %342
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %343, ptr nonnull align 4 %325, i64 %338, i1 false)
  br label %348

344:                                              ; preds = %336
  %345 = icmp eq i64 %338, 4
  br i1 %345, label %346, label %348

346:                                              ; preds = %344
  %347 = load i32, ptr %325, align 4, !tbaa !22
  store i32 %347, ptr %253, align 4, !tbaa !22
  br label %348

348:                                              ; preds = %346, %344, %340
  store i32 %251, ptr %325, align 4, !tbaa !22
  br label %396

349:                                              ; preds = %328
  %350 = icmp eq i64 %307, 9223372036854775804
  br i1 %350, label %351, label %353

351:                                              ; preds = %349
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %352 unwind label %394

352:                                              ; preds = %351
  unreachable

353:                                              ; preds = %349
  %354 = ashr exact i64 %307, 2
  %355 = call i64 @llvm.umax.i64(i64 %354, i64 1)
  %356 = add i64 %355, %354
  %357 = icmp ult i64 %356, %354
  %358 = icmp ugt i64 %356, 2305843009213693951
  %359 = or i1 %357, %358
  %360 = select i1 %359, i64 2305843009213693951, i64 %356
  %361 = sub i64 %329, %306
  %362 = ashr exact i64 %361, 2
  %363 = icmp eq i64 %360, 0
  br i1 %363, label %367, label %364

364:                                              ; preds = %353
  %365 = shl nuw nsw i64 %360, 2
  %366 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %365) #21
          to label %367 unwind label %392

367:                                              ; preds = %364, %353
  %368 = phi ptr [ null, %353 ], [ %366, %364 ]
  %369 = getelementptr inbounds i32, ptr %368, i64 %362
  store i32 %251, ptr %369, align 4, !tbaa !22
  %370 = icmp sgt i64 %361, 4
  br i1 %370, label %371, label %372, !prof !23

371:                                              ; preds = %367
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %368, ptr align 4 %304, i64 %361, i1 false)
  br label %376

372:                                              ; preds = %367
  %373 = icmp eq i64 %361, 4
  br i1 %373, label %374, label %376

374:                                              ; preds = %372
  %375 = load i32, ptr %304, align 4, !tbaa !22
  store i32 %375, ptr %368, align 4, !tbaa !22
  br label %376

376:                                              ; preds = %374, %372, %371
  %377 = getelementptr inbounds i32, ptr %369, i64 1
  %378 = sub i64 %305, %329
  %379 = icmp sgt i64 %378, 4
  br i1 %379, label %380, label %381, !prof !23

380:                                              ; preds = %376
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %377, ptr nonnull align 4 %325, i64 %378, i1 false)
  br label %385

381:                                              ; preds = %376
  %382 = icmp eq i64 %378, 4
  br i1 %382, label %383, label %385

383:                                              ; preds = %381
  %384 = load i32, ptr %325, align 4, !tbaa !22
  store i32 %384, ptr %377, align 4, !tbaa !22
  br label %385

385:                                              ; preds = %383, %381, %380
  %386 = icmp eq ptr %304, null
  br i1 %386, label %388, label %387

387:                                              ; preds = %385
  call void @_ZdlPv(ptr noundef nonnull %304) #23
  br label %388

388:                                              ; preds = %387, %385
  %389 = ashr exact i64 %378, 2
  %390 = getelementptr inbounds i32, ptr %377, i64 %389
  store ptr %368, ptr %7, align 8, !tbaa !58
  store ptr %390, ptr %35, align 8, !tbaa !313
  %391 = getelementptr inbounds i32, ptr %368, i64 %360
  store ptr %391, ptr %209, align 8, !tbaa !417
  br label %396

392:                                              ; preds = %364
  %393 = landingpad { ptr, i32 }
          cleanup
  br label %532

394:                                              ; preds = %351
  %395 = landingpad { ptr, i32 }
          cleanup
  br label %532

396:                                              ; preds = %388, %348, %335, %324, %296, %259
  %397 = add i32 %249, 1
  %398 = zext i32 %397 to i64
  %399 = load ptr, ptr %238, align 8, !tbaa !31
  %400 = load ptr, ptr %237, align 8, !tbaa !32
  %401 = ptrtoint ptr %399 to i64
  %402 = ptrtoint ptr %400 to i64
  %403 = sub i64 %401, %402
  %404 = ashr exact i64 %403, 4
  %405 = icmp ugt i64 %404, %398
  br i1 %405, label %246, label %242

406:                                              ; preds = %244, %472
  %407 = phi i64 [ 0, %244 ], [ %473, %472 ]
  %408 = load ptr, ptr %1, align 8, !tbaa !58
  %409 = getelementptr inbounds i32, ptr %408, i64 %407
  %410 = load i32, ptr %409, align 4, !tbaa !22
  %411 = load ptr, ptr %210, align 8, !tbaa !438
  %412 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %411, i64 %245
  %413 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %411, i64 %245, i32 2
  %414 = load i32, ptr %413, align 8, !tbaa !440
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %433, label %416

416:                                              ; preds = %406
  %417 = zext i32 %414 to i64
  br label %421

418:                                              ; preds = %421
  %419 = add nuw nsw i64 %422, 1
  %420 = icmp eq i64 %419, %417
  br i1 %420, label %426, label %421

421:                                              ; preds = %418, %416
  %422 = phi i64 [ 0, %416 ], [ %419, %418 ]
  %423 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %411, i64 %245, i32 1, i64 %422
  %424 = load i32, ptr %423, align 4, !tbaa !22
  %425 = icmp eq i32 %424, %410
  br i1 %425, label %443, label %418

426:                                              ; preds = %418
  %427 = icmp eq i32 %414, 8
  br i1 %427, label %428, label %433

428:                                              ; preds = %426
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %412)
          to label %429 unwind label %475

429:                                              ; preds = %428
  %430 = load i32, ptr %413, align 8, !tbaa !440
  %431 = load ptr, ptr %1, align 8, !tbaa !58
  %432 = load ptr, ptr %210, align 8, !tbaa !438
  br label %433

433:                                              ; preds = %429, %426, %406
  %434 = phi ptr [ %432, %429 ], [ %411, %426 ], [ %411, %406 ]
  %435 = phi ptr [ %431, %429 ], [ %408, %426 ], [ %408, %406 ]
  %436 = phi i32 [ %430, %429 ], [ %414, %426 ], [ 0, %406 ]
  %437 = zext i32 %436 to i64
  %438 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %411, i64 %245, i32 1, i64 %437
  store i32 %410, ptr %438, align 4, !tbaa !22
  %439 = load i32, ptr %413, align 8, !tbaa !440
  %440 = add i32 %439, 1
  store i32 %440, ptr %413, align 8, !tbaa !440
  %441 = getelementptr inbounds i32, ptr %435, i64 %407
  %442 = load i32, ptr %441, align 4, !tbaa !22
  br label %443

443:                                              ; preds = %421, %433
  %444 = phi ptr [ %434, %433 ], [ %411, %421 ]
  %445 = phi i32 [ %442, %433 ], [ %410, %421 ]
  %446 = zext i32 %445 to i64
  %447 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %444, i64 %446
  %448 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %444, i64 %446, i32 2
  %449 = load i32, ptr %448, align 8, !tbaa !440
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %466, label %451

451:                                              ; preds = %443
  %452 = zext i32 %449 to i64
  br label %456

453:                                              ; preds = %456
  %454 = add nuw nsw i64 %457, 1
  %455 = icmp eq i64 %454, %452
  br i1 %455, label %461, label %456

456:                                              ; preds = %453, %451
  %457 = phi i64 [ 0, %451 ], [ %454, %453 ]
  %458 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %444, i64 %446, i32 1, i64 %457
  %459 = load i32, ptr %458, align 4, !tbaa !22
  %460 = icmp eq i32 %459, %234
  br i1 %460, label %472, label %453

461:                                              ; preds = %453
  %462 = icmp eq i32 %449, 8
  br i1 %462, label %463, label %466

463:                                              ; preds = %461
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %447)
          to label %464 unwind label %475

464:                                              ; preds = %463
  %465 = load i32, ptr %448, align 8, !tbaa !440
  br label %466

466:                                              ; preds = %464, %461, %443
  %467 = phi i32 [ %465, %464 ], [ %449, %461 ], [ 0, %443 ]
  %468 = zext i32 %467 to i64
  %469 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %444, i64 %446, i32 1, i64 %468
  store i32 %234, ptr %469, align 4, !tbaa !22
  %470 = load i32, ptr %448, align 8, !tbaa !440
  %471 = add i32 %470, 1
  store i32 %471, ptr %448, align 8, !tbaa !440
  br label %472

472:                                              ; preds = %456, %466
  %473 = add nuw nsw i64 %407, 1
  %474 = icmp eq i64 %473, %212
  br i1 %474, label %507, label %406

475:                                              ; preds = %463, %428
  %476 = landingpad { ptr, i32 }
          cleanup
  br label %532

477:                                              ; preds = %242
  %478 = zext i32 %234 to i64
  %479 = load ptr, ptr %210, align 8, !tbaa !438
  %480 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %479, i64 %478
  %481 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %479, i64 %478, i32 2
  %482 = load i32, ptr %481, align 8, !tbaa !440
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %499, label %484

484:                                              ; preds = %477
  %485 = zext i32 %482 to i64
  br label %489

486:                                              ; preds = %489
  %487 = add nuw nsw i64 %490, 1
  %488 = icmp eq i64 %487, %485
  br i1 %488, label %494, label %489

489:                                              ; preds = %486, %484
  %490 = phi i64 [ 0, %484 ], [ %487, %486 ]
  %491 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %479, i64 %478, i32 1, i64 %490
  %492 = load i32, ptr %491, align 4, !tbaa !22
  %493 = icmp eq i32 %492, %234
  br i1 %493, label %507, label %486

494:                                              ; preds = %486
  %495 = icmp eq i32 %482, 8
  br i1 %495, label %496, label %499

496:                                              ; preds = %494
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %480)
          to label %497 unwind label %505

497:                                              ; preds = %496
  %498 = load i32, ptr %481, align 8, !tbaa !440
  br label %499

499:                                              ; preds = %497, %494, %477
  %500 = phi i32 [ %498, %497 ], [ %482, %494 ], [ 0, %477 ]
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %479, i64 %478, i32 1, i64 %501
  store i32 %234, ptr %502, align 4, !tbaa !22
  %503 = load i32, ptr %481, align 8, !tbaa !440
  %504 = add i32 %503, 1
  store i32 %504, ptr %481, align 8, !tbaa !440
  br label %507

505:                                              ; preds = %496
  %506 = landingpad { ptr, i32 }
          cleanup
  br label %532

507:                                              ; preds = %489, %472, %243, %499
  %508 = add nuw nsw i64 %228, 1
  %509 = icmp eq i64 %508, %211
  br i1 %509, label %213, label %227

510:                                              ; preds = %522, %213
  %511 = icmp eq ptr %51, null
  br i1 %511, label %527, label %512

512:                                              ; preds = %510
  call void @_ZdlPv(ptr noundef nonnull %51) #23
  br label %527

513:                                              ; preds = %221, %522
  %514 = phi i64 [ 0, %221 ], [ %523, %522 ]
  %515 = load ptr, ptr %7, align 8, !tbaa !21
  %516 = getelementptr inbounds i32, ptr %515, i64 %514
  %517 = load i32, ptr %516, align 4, !tbaa !22
  %518 = load ptr, ptr %35, align 8, !tbaa !21
  %519 = zext i32 %517 to i64
  %520 = load ptr, ptr %223, align 8, !tbaa !438
  %521 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %520, i64 %519
  invoke void @_ZN6dealii25CompressedSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b(ptr noundef nonnull align 8 dereferenceable(60) %521, ptr nonnull %515, ptr %518, i1 noundef zeroext true)
          to label %522 unwind label %525

522:                                              ; preds = %513
  %523 = add nuw nsw i64 %514, 1
  %524 = icmp eq i64 %523, %224
  br i1 %524, label %510, label %513

525:                                              ; preds = %513
  %526 = landingpad { ptr, i32 }
          cleanup
  br label %532

527:                                              ; preds = %512, %510
  %528 = load ptr, ptr %7, align 8, !tbaa !58
  %529 = icmp eq ptr %528, null
  br i1 %529, label %531, label %530

530:                                              ; preds = %527
  call void @_ZdlPv(ptr noundef nonnull %528) #23
  br label %531

531:                                              ; preds = %527, %530
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  br label %1272

532:                                              ; preds = %392, %394, %299, %301, %184, %186, %525, %505, %475, %225
  %533 = phi ptr [ %51, %225 ], [ %51, %525 ], [ %51, %475 ], [ %51, %505 ], [ %75, %184 ], [ %75, %186 ], [ %51, %301 ], [ %51, %299 ], [ %51, %394 ], [ %51, %392 ]
  %534 = phi { ptr, i32 } [ %226, %225 ], [ %526, %525 ], [ %476, %475 ], [ %506, %505 ], [ %185, %184 ], [ %187, %186 ], [ %302, %301 ], [ %300, %299 ], [ %395, %394 ], [ %393, %392 ]
  %535 = icmp eq ptr %533, null
  br i1 %535, label %537, label %536

536:                                              ; preds = %532
  call void @_ZdlPv(ptr noundef nonnull %533) #23
  br label %537

537:                                              ; preds = %536, %532
  %538 = load ptr, ptr %7, align 8, !tbaa !58
  %539 = icmp eq ptr %538, null
  br i1 %539, label %541, label %540

540:                                              ; preds = %537
  call void @_ZdlPv(ptr noundef nonnull %538) #23
  br label %541

541:                                              ; preds = %540, %537, %70
  %542 = phi { ptr, i32 } [ %71, %70 ], [ %534, %537 ], [ %534, %540 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  br label %1281

543:                                              ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #24
  store i32 -1, ptr %9, align 8, !tbaa !317
  %544 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %544, align 4, !tbaa !319
  %545 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %545, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  %546 = icmp eq i64 %22, 0
  br i1 %546, label %547, label %549

547:                                              ; preds = %543
  %548 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  br label %592

549:                                              ; preds = %543
  %550 = shl nuw nsw i64 %22, 4
  %551 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %550) #21
          to label %552 unwind label %642

552:                                              ; preds = %549
  store ptr %551, ptr %8, align 8, !tbaa !321
  %553 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %551, i64 %22
  %554 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 2
  store ptr %553, ptr %554, align 8, !tbaa !323
  %555 = and i64 %17, 3
  %556 = icmp eq i64 %555, 0
  br i1 %556, label %567, label %557

557:                                              ; preds = %552, %557
  %558 = phi ptr [ %564, %557 ], [ %551, %552 ]
  %559 = phi i64 [ %563, %557 ], [ %22, %552 ]
  %560 = phi i64 [ %565, %557 ], [ 0, %552 ]
  %561 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %558, i64 0, i32 2
  store ptr null, ptr %561, align 8, !tbaa !320
  store i32 -1, ptr %558, align 8, !tbaa !317
  %562 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %558, i64 0, i32 1
  store i32 -1, ptr %562, align 4, !tbaa !319
  %563 = add nsw i64 %559, -1
  %564 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %558, i64 1
  %565 = add i64 %560, 1
  %566 = icmp eq i64 %565, %555
  br i1 %566, label %567, label %557, !llvm.loop !442

567:                                              ; preds = %557, %552
  %568 = phi ptr [ undef, %552 ], [ %564, %557 ]
  %569 = phi ptr [ %551, %552 ], [ %564, %557 ]
  %570 = phi i64 [ %22, %552 ], [ %563, %557 ]
  %571 = icmp ult i64 %22, 4
  br i1 %571, label %589, label %572

572:                                              ; preds = %567, %572
  %573 = phi ptr [ %587, %572 ], [ %569, %567 ]
  %574 = phi i64 [ %586, %572 ], [ %570, %567 ]
  %575 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %573, i64 0, i32 2
  store ptr null, ptr %575, align 8, !tbaa !320
  store i32 -1, ptr %573, align 8, !tbaa !317
  %576 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %573, i64 0, i32 1
  store i32 -1, ptr %576, align 4, !tbaa !319
  %577 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %573, i64 1
  %578 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %573, i64 1, i32 2
  store ptr null, ptr %578, align 8, !tbaa !320
  store i32 -1, ptr %577, align 8, !tbaa !317
  %579 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %573, i64 1, i32 1
  store i32 -1, ptr %579, align 4, !tbaa !319
  %580 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %573, i64 2
  %581 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %573, i64 2, i32 2
  store ptr null, ptr %581, align 8, !tbaa !320
  store i32 -1, ptr %580, align 8, !tbaa !317
  %582 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %573, i64 2, i32 1
  store i32 -1, ptr %582, align 4, !tbaa !319
  %583 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %573, i64 3
  %584 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %573, i64 3, i32 2
  store ptr null, ptr %584, align 8, !tbaa !320
  store i32 -1, ptr %583, align 8, !tbaa !317
  %585 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %573, i64 3, i32 1
  store i32 -1, ptr %585, align 4, !tbaa !319
  %586 = add nsw i64 %574, -4
  %587 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %573, i64 4
  %588 = icmp eq i64 %586, 0
  br i1 %588, label %589, label %572

589:                                              ; preds = %572, %567
  %590 = phi ptr [ %568, %567 ], [ %587, %572 ]
  %591 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  store ptr %590, ptr %591, align 8, !tbaa !325
  br label %592

592:                                              ; preds = %589, %547
  %593 = phi ptr [ null, %547 ], [ %551, %589 ]
  %594 = phi ptr [ null, %547 ], [ %590, %589 ]
  %595 = phi ptr [ %548, %547 ], [ %591, %589 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #24
  %596 = icmp eq i32 %18, 0
  br i1 %596, label %607, label %597

597:                                              ; preds = %592
  %598 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %599 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %600 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %601 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %602 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %603 = and i64 %17, 4294967295
  br label %645

604:                                              ; preds = %752
  %605 = load ptr, ptr %595, align 8, !tbaa !21
  %606 = load ptr, ptr %8, align 8, !tbaa !321
  br label %607

607:                                              ; preds = %604, %592
  %608 = phi ptr [ %593, %592 ], [ %606, %604 ]
  %609 = phi ptr [ %594, %592 ], [ %605, %604 ]
  %610 = phi ptr [ null, %592 ], [ %754, %604 ]
  %611 = phi ptr [ null, %592 ], [ %755, %604 ]
  %612 = phi i32 [ 0, %592 ], [ %756, %604 ]
  %613 = zext i32 %612 to i64
  store i32 -1, ptr %10, align 8, !tbaa !317
  %614 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %10, i64 0, i32 1
  store i32 -1, ptr %614, align 4, !tbaa !319
  %615 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %10, i64 0, i32 2
  store ptr null, ptr %615, align 8, !tbaa !320
  %616 = ptrtoint ptr %609 to i64
  %617 = ptrtoint ptr %608 to i64
  %618 = sub i64 %616, %617
  %619 = ashr exact i64 %618, 4
  %620 = icmp ult i64 %619, %613
  br i1 %620, label %621, label %623

621:                                              ; preds = %607
  %622 = sub nsw i64 %613, %619
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr %609, i64 noundef %622, ptr noundef nonnull align 8 dereferenceable(16) %10)
          to label %763 unwind label %854

623:                                              ; preds = %607
  %624 = icmp ugt i64 %619, %613
  br i1 %624, label %625, label %763

625:                                              ; preds = %623
  %626 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %608, i64 %613
  %627 = icmp eq ptr %609, %626
  br i1 %627, label %763, label %628

628:                                              ; preds = %625, %638
  %629 = phi ptr [ %639, %638 ], [ %626, %625 ]
  %630 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %629, i64 0, i32 2
  %631 = load ptr, ptr %630, align 8, !tbaa !320
  %632 = icmp eq ptr %631, null
  br i1 %632, label %638, label %633

633:                                              ; preds = %628
  %634 = load ptr, ptr %631, align 8, !tbaa !32
  %635 = icmp eq ptr %634, null
  br i1 %635, label %637, label %636

636:                                              ; preds = %633
  tail call void @_ZdlPv(ptr noundef nonnull %634) #23
  br label %637

637:                                              ; preds = %636, %633
  tail call void @_ZdlPv(ptr noundef nonnull %631) #23
  store ptr null, ptr %630, align 8, !tbaa !320
  br label %638

638:                                              ; preds = %637, %628
  %639 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %629, i64 1
  %640 = icmp eq ptr %639, %609
  br i1 %640, label %641, label %628

641:                                              ; preds = %638
  store ptr %626, ptr %595, align 8, !tbaa !325
  br label %763

642:                                              ; preds = %549
  %643 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %644 unwind label %1283

644:                                              ; preds = %642
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #24
  br label %1279

645:                                              ; preds = %597, %752
  %646 = phi i64 [ 0, %597 ], [ %757, %752 ]
  %647 = phi i32 [ 0, %597 ], [ %756, %752 ]
  %648 = phi ptr [ null, %597 ], [ %755, %752 ]
  %649 = phi ptr [ null, %597 ], [ %754, %752 ]
  %650 = phi ptr [ null, %597 ], [ %753, %752 ]
  %651 = load ptr, ptr %599, align 8, !tbaa !55
  %652 = load i32, ptr %600, align 8, !tbaa !57
  %653 = load ptr, ptr %598, align 8, !tbaa !55
  %654 = ptrtoint ptr %651 to i64
  %655 = ptrtoint ptr %653 to i64
  %656 = sub i64 %654, %655
  %657 = shl nsw i64 %656, 3
  %658 = zext i32 %652 to i64
  %659 = add nsw i64 %657, %658
  %660 = load ptr, ptr %1, align 8, !tbaa !58
  %661 = getelementptr inbounds i32, ptr %660, i64 %646
  %662 = load i32, ptr %661, align 4, !tbaa !22
  %663 = zext i32 %662 to i64
  %664 = icmp ugt i64 %659, %663
  br i1 %664, label %665, label %675

665:                                              ; preds = %645
  %666 = lshr i32 %662, 6
  %667 = zext i32 %666 to i64
  %668 = getelementptr inbounds i64, ptr %653, i64 %667
  %669 = and i32 %662, 63
  %670 = zext i32 %669 to i64
  %671 = shl nuw i64 1, %670
  %672 = load i64, ptr %668, align 8, !tbaa !42
  %673 = and i64 %672, %671
  %674 = icmp eq i64 %673, 0
  br i1 %674, label %675, label %682

675:                                              ; preds = %665, %645
  %676 = zext i32 %647 to i64
  %677 = load ptr, ptr %8, align 8, !tbaa !321
  %678 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %677, i64 %676
  store i32 %662, ptr %678, align 8, !tbaa !317
  %679 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %677, i64 %676, i32 1
  %680 = trunc i64 %646 to i32
  store i32 %680, ptr %679, align 4, !tbaa !319
  %681 = add i32 %647, 1
  br label %752

682:                                              ; preds = %665
  %683 = load ptr, ptr %601, align 8, !tbaa !21
  %684 = load ptr, ptr %602, align 8, !tbaa !21
  %685 = ptrtoint ptr %684 to i64
  %686 = ptrtoint ptr %683 to i64
  %687 = sub i64 %685, %686
  %688 = icmp sgt i64 %687, 0
  br i1 %688, label %689, label %704

689:                                              ; preds = %682
  %690 = udiv exact i64 %687, 40
  br label %691

691:                                              ; preds = %691, %689
  %692 = phi i64 [ %690, %689 ], [ %702, %691 ]
  %693 = phi ptr [ %683, %689 ], [ %701, %691 ]
  %694 = lshr i64 %692, 1
  %695 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %693, i64 %694
  %696 = load i32, ptr %695, align 8, !tbaa !24
  %697 = icmp ult i32 %696, %662
  %698 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %695, i64 1
  %699 = xor i64 %694, -1
  %700 = add nsw i64 %692, %699
  %701 = select i1 %697, ptr %698, ptr %693
  %702 = select i1 %697, i64 %700, i64 %694
  %703 = icmp sgt i64 %702, 0
  br i1 %703, label %691, label %704

704:                                              ; preds = %691, %682
  %705 = phi ptr [ %683, %682 ], [ %701, %691 ]
  %706 = icmp eq ptr %649, %650
  br i1 %706, label %710, label %707

707:                                              ; preds = %704
  %708 = trunc i64 %646 to i32
  store i32 %708, ptr %649, align 8
  %709 = getelementptr inbounds i8, ptr %649, i64 8
  store ptr %705, ptr %709, align 8
  br label %747

710:                                              ; preds = %704
  %711 = ptrtoint ptr %649 to i64
  %712 = ptrtoint ptr %648 to i64
  %713 = sub i64 %711, %712
  %714 = icmp eq i64 %713, 9223372036854775792
  br i1 %714, label %715, label %717

715:                                              ; preds = %710
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %716 unwind label %761

716:                                              ; preds = %715
  unreachable

717:                                              ; preds = %710
  %718 = ashr exact i64 %713, 4
  %719 = tail call i64 @llvm.umax.i64(i64 %718, i64 1)
  %720 = add i64 %719, %718
  %721 = icmp ult i64 %720, %718
  %722 = icmp ugt i64 %720, 576460752303423487
  %723 = or i1 %721, %722
  %724 = select i1 %723, i64 576460752303423487, i64 %720
  %725 = icmp eq i64 %724, 0
  br i1 %725, label %729, label %726

726:                                              ; preds = %717
  %727 = shl nuw nsw i64 %724, 4
  %728 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %727) #21
          to label %729 unwind label %759

729:                                              ; preds = %726, %717
  %730 = phi ptr [ null, %717 ], [ %728, %726 ]
  %731 = getelementptr inbounds %"struct.std::pair.188", ptr %730, i64 %718
  %732 = trunc i64 %646 to i32
  store i32 %732, ptr %731, align 8
  %733 = getelementptr inbounds i8, ptr %731, i64 8
  store ptr %705, ptr %733, align 8
  %734 = icmp eq ptr %648, %649
  br i1 %734, label %741, label %735

735:                                              ; preds = %729, %735
  %736 = phi ptr [ %739, %735 ], [ %730, %729 ]
  %737 = phi ptr [ %738, %735 ], [ %648, %729 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %736, ptr noundef nonnull align 8 dereferenceable(16) %737, i64 16, i1 false)
  %738 = getelementptr inbounds %"struct.std::pair.188", ptr %737, i64 1
  %739 = getelementptr inbounds %"struct.std::pair.188", ptr %736, i64 1
  %740 = icmp eq ptr %738, %649
  br i1 %740, label %741, label %735

741:                                              ; preds = %735, %729
  %742 = phi ptr [ %730, %729 ], [ %739, %735 ]
  %743 = icmp eq ptr %648, null
  br i1 %743, label %745, label %744

744:                                              ; preds = %741
  tail call void @_ZdlPv(ptr noundef nonnull %648) #23
  br label %745

745:                                              ; preds = %744, %741
  %746 = getelementptr inbounds %"struct.std::pair.188", ptr %730, i64 %724
  br label %747

747:                                              ; preds = %745, %707
  %748 = phi ptr [ %746, %745 ], [ %650, %707 ]
  %749 = phi ptr [ %742, %745 ], [ %649, %707 ]
  %750 = phi ptr [ %730, %745 ], [ %648, %707 ]
  %751 = getelementptr inbounds %"struct.std::pair.188", ptr %749, i64 1
  br label %752

752:                                              ; preds = %747, %675
  %753 = phi ptr [ %748, %747 ], [ %650, %675 ]
  %754 = phi ptr [ %751, %747 ], [ %649, %675 ]
  %755 = phi ptr [ %750, %747 ], [ %648, %675 ]
  %756 = phi i32 [ %647, %747 ], [ %681, %675 ]
  %757 = add nuw nsw i64 %646, 1
  %758 = icmp eq i64 %757, %603
  br i1 %758, label %604, label %645

759:                                              ; preds = %726
  %760 = landingpad { ptr, i32 }
          cleanup
  br label %1273

761:                                              ; preds = %715
  %762 = landingpad { ptr, i32 }
          cleanup
  br label %1273

763:                                              ; preds = %641, %625, %623, %621
  %764 = load ptr, ptr %615, align 8, !tbaa !320
  %765 = icmp eq ptr %764, null
  br i1 %765, label %771, label %766

766:                                              ; preds = %763
  %767 = load ptr, ptr %764, align 8, !tbaa !32
  %768 = icmp eq ptr %767, null
  br i1 %768, label %770, label %769

769:                                              ; preds = %766
  call void @_ZdlPv(ptr noundef nonnull %767) #23
  br label %770

770:                                              ; preds = %769, %766
  call void @_ZdlPv(ptr noundef nonnull %764) #23
  store ptr null, ptr %615, align 8, !tbaa !320
  br label %771

771:                                              ; preds = %770, %763
  %772 = load ptr, ptr %595, align 8, !tbaa !325
  %773 = load ptr, ptr %8, align 8, !tbaa !321
  %774 = ptrtoint ptr %772 to i64
  %775 = ptrtoint ptr %773 to i64
  %776 = sub i64 %774, %775
  %777 = lshr exact i64 %776, 4
  %778 = trunc i64 %777 to i32
  %779 = icmp ult i32 %778, 2
  br i1 %779, label %825, label %782

780:                                              ; preds = %821, %782
  %781 = icmp ult i32 %783, 4
  br i1 %781, label %825, label %782

782:                                              ; preds = %771, %780
  %783 = phi i32 [ %784, %780 ], [ %778, %771 ]
  %784 = lshr i32 %783, 1
  %785 = icmp ult i32 %784, %778
  br i1 %785, label %786, label %780

786:                                              ; preds = %782
  %787 = zext i32 %784 to i64
  br label %788

788:                                              ; preds = %821, %786
  %789 = phi i64 [ %787, %786 ], [ %822, %821 ]
  %790 = sub nuw nsw i64 %789, %787
  %791 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %773, i64 %789
  %792 = load <2 x i32>, ptr %791, align 8, !tbaa !22
  %793 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %773, i64 %790
  %794 = load i32, ptr %793, align 8, !tbaa !317
  %795 = extractelement <2 x i32> %792, i64 0
  %796 = icmp ugt i32 %794, %795
  br i1 %796, label %797, label %821

797:                                              ; preds = %788
  %798 = icmp ult i64 %789, %787
  %799 = trunc i64 %789 to i32
  br i1 %798, label %817, label %800

800:                                              ; preds = %797
  %801 = trunc i64 %790 to i32
  br label %802

802:                                              ; preds = %809, %800
  %803 = phi i32 [ %804, %809 ], [ %799, %800 ]
  %804 = phi i32 [ %815, %809 ], [ %801, %800 ]
  %805 = zext i32 %804 to i64
  %806 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %773, i64 %805
  %807 = load i32, ptr %806, align 8, !tbaa !317
  %808 = icmp ugt i32 %807, %795
  br i1 %808, label %809, label %817

809:                                              ; preds = %802
  %810 = zext i32 %803 to i64
  %811 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %773, i64 %810
  store i32 %807, ptr %811, align 8, !tbaa !317
  %812 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %773, i64 %805, i32 1
  %813 = load i32, ptr %812, align 4, !tbaa !319
  %814 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %773, i64 %810, i32 1
  store i32 %813, ptr %814, align 4, !tbaa !319
  %815 = sub i32 %804, %784
  %816 = icmp ult i32 %804, %784
  br i1 %816, label %817, label %802

817:                                              ; preds = %809, %802, %797
  %818 = phi i32 [ %799, %797 ], [ %803, %802 ], [ %804, %809 ]
  %819 = zext i32 %818 to i64
  %820 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %773, i64 %819
  store <2 x i32> %792, ptr %820, align 8, !tbaa !22
  br label %821

821:                                              ; preds = %817, %788
  %822 = add nuw nsw i64 %789, 1
  %823 = trunc i64 %822 to i32
  %824 = icmp eq i32 %778, %823
  br i1 %824, label %780, label %788

825:                                              ; preds = %780, %771
  %826 = ptrtoint ptr %610 to i64
  %827 = ptrtoint ptr %611 to i64
  %828 = sub i64 %826, %827
  %829 = and i64 %828, 68719476720
  %830 = icmp eq i64 %829, 0
  br i1 %830, label %844, label %831

831:                                              ; preds = %825
  %832 = lshr exact i64 %828, 4
  %833 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %2, i64 0, i32 3
  %834 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %835 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %836 = and i64 %832, 4294967295
  %837 = and i64 %17, 4294967295
  br label %856

838:                                              ; preds = %1016
  %839 = load ptr, ptr %595, align 8, !tbaa !325
  %840 = load ptr, ptr %8, align 8, !tbaa !321
  %841 = ptrtoint ptr %839 to i64
  %842 = ptrtoint ptr %840 to i64
  %843 = sub i64 %841, %842
  br label %844

844:                                              ; preds = %838, %825
  %845 = phi i64 [ %843, %838 ], [ %776, %825 ]
  %846 = phi i8 [ %873, %838 ], [ 0, %825 ]
  %847 = ashr exact i64 %845, 4
  %848 = and i64 %847, 4294967295
  %849 = icmp eq i64 %848, 0
  br i1 %849, label %1019, label %850

850:                                              ; preds = %844
  %851 = shl nuw nsw i64 %848, 2
  %852 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %851) #21
          to label %853 unwind label %1037

853:                                              ; preds = %850
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %852, i8 0, i64 %851, i1 false), !tbaa !22
  br label %1019

854:                                              ; preds = %621
  %855 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %10)
          to label %1273 unwind label %1283

856:                                              ; preds = %831, %1016
  %857 = phi i64 [ 0, %831 ], [ %1017, %1016 ]
  %858 = phi i8 [ 0, %831 ], [ %873, %1016 ]
  %859 = getelementptr inbounds %"struct.std::pair.188", ptr %611, i64 %857
  %860 = load i32, ptr %859, align 8, !tbaa !326
  %861 = zext i32 %860 to i64
  %862 = load ptr, ptr %1, align 8, !tbaa !58
  %863 = getelementptr inbounds i32, ptr %862, i64 %861
  %864 = load i32, ptr %863, align 4, !tbaa !22
  %865 = getelementptr inbounds %"struct.std::pair.188", ptr %611, i64 %857, i32 1
  %866 = load ptr, ptr %865, align 8, !tbaa !328
  %867 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %866, i64 0, i32 1
  %868 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %866, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %869 = load ptr, ptr %868, align 8, !tbaa !31
  %870 = load ptr, ptr %867, align 8, !tbaa !32
  %871 = icmp eq ptr %869, %870
  br i1 %871, label %872, label %877

872:                                              ; preds = %885, %856
  %873 = phi i8 [ %858, %856 ], [ 1, %885 ]
  br i1 %3, label %874, label %986

874:                                              ; preds = %872
  br i1 %596, label %1016, label %875

875:                                              ; preds = %874
  %876 = zext i32 %864 to i64
  br label %897

877:                                              ; preds = %856, %885
  %878 = phi ptr [ %889, %885 ], [ %870, %856 ]
  %879 = phi i64 [ %887, %885 ], [ 0, %856 ]
  %880 = phi i32 [ %886, %885 ], [ 0, %856 ]
  %881 = getelementptr inbounds %"struct.std::pair", ptr %878, i64 %879
  %882 = load i32, ptr %881, align 8, !tbaa !37
  %883 = getelementptr inbounds %"struct.std::pair", ptr %878, i64 %879, i32 1
  %884 = load double, ptr %883, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %8, i32 noundef %882, i32 %860, double %884)
          to label %885 unwind label %895

885:                                              ; preds = %877
  %886 = add i32 %880, 1
  %887 = zext i32 %886 to i64
  %888 = load ptr, ptr %868, align 8, !tbaa !31
  %889 = load ptr, ptr %867, align 8, !tbaa !32
  %890 = ptrtoint ptr %888 to i64
  %891 = ptrtoint ptr %889 to i64
  %892 = sub i64 %890, %891
  %893 = ashr exact i64 %892, 4
  %894 = icmp ugt i64 %893, %887
  br i1 %894, label %877, label %872

895:                                              ; preds = %877
  %896 = landingpad { ptr, i32 }
          cleanup
  br label %1273

897:                                              ; preds = %875, %983
  %898 = phi i64 [ 0, %875 ], [ %984, %983 ]
  %899 = load ptr, ptr %834, align 8, !tbaa !422, !noalias !73
  %900 = load i32, ptr %835, align 8, !tbaa !22, !noalias !73
  %901 = mul i32 %900, %860
  %902 = zext i32 %901 to i64
  %903 = getelementptr inbounds i8, ptr %899, i64 %902
  %904 = getelementptr inbounds i8, ptr %903, i64 %898
  %905 = load i8, ptr %904, align 1, !tbaa !424, !range !425, !noundef !73
  %906 = icmp eq i8 %905, 0
  br i1 %906, label %942, label %907

907:                                              ; preds = %897
  %908 = load ptr, ptr %1, align 8, !tbaa !58
  %909 = getelementptr inbounds i32, ptr %908, i64 %898
  %910 = load i32, ptr %909, align 4, !tbaa !22
  %911 = load ptr, ptr %833, align 8, !tbaa !438
  %912 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %911, i64 %876
  %913 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %911, i64 %876, i32 2
  %914 = load i32, ptr %913, align 8, !tbaa !440
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %932, label %916

916:                                              ; preds = %907
  %917 = zext i32 %914 to i64
  br label %921

918:                                              ; preds = %921
  %919 = add nuw nsw i64 %922, 1
  %920 = icmp eq i64 %919, %917
  br i1 %920, label %926, label %921

921:                                              ; preds = %918, %916
  %922 = phi i64 [ 0, %916 ], [ %919, %918 ]
  %923 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %911, i64 %876, i32 1, i64 %922
  %924 = load i32, ptr %923, align 4, !tbaa !22
  %925 = icmp eq i32 %924, %910
  br i1 %925, label %942, label %918

926:                                              ; preds = %918
  %927 = icmp eq i32 %914, 8
  br i1 %927, label %928, label %932

928:                                              ; preds = %926
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %912)
          to label %929 unwind label %940

929:                                              ; preds = %928
  %930 = load i32, ptr %913, align 8, !tbaa !440
  %931 = load ptr, ptr %834, align 8, !tbaa !422, !noalias !443
  br label %932

932:                                              ; preds = %929, %926, %907
  %933 = phi ptr [ %931, %929 ], [ %899, %926 ], [ %899, %907 ]
  %934 = phi i32 [ %930, %929 ], [ %914, %926 ], [ 0, %907 ]
  %935 = zext i32 %934 to i64
  %936 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %911, i64 %876, i32 1, i64 %935
  store i32 %910, ptr %936, align 4, !tbaa !22
  %937 = load i32, ptr %913, align 8, !tbaa !440
  %938 = add i32 %937, 1
  store i32 %938, ptr %913, align 8, !tbaa !440
  %939 = load i32, ptr %835, align 8, !tbaa !22, !noalias !443
  br label %942

940:                                              ; preds = %974, %928
  %941 = landingpad { ptr, i32 }
          cleanup
  br label %1273

942:                                              ; preds = %921, %897, %932
  %943 = phi i32 [ %900, %897 ], [ %939, %932 ], [ %900, %921 ]
  %944 = phi ptr [ %899, %897 ], [ %933, %932 ], [ %899, %921 ]
  %945 = trunc i64 %898 to i32
  %946 = mul i32 %943, %945
  %947 = zext i32 %946 to i64
  %948 = getelementptr inbounds i8, ptr %944, i64 %947
  %949 = getelementptr inbounds i8, ptr %948, i64 %861
  %950 = load i8, ptr %949, align 1, !tbaa !424, !range !425, !noundef !73
  %951 = icmp eq i8 %950, 0
  br i1 %951, label %983, label %952

952:                                              ; preds = %942
  %953 = load ptr, ptr %1, align 8, !tbaa !58
  %954 = getelementptr inbounds i32, ptr %953, i64 %898
  %955 = load i32, ptr %954, align 4, !tbaa !22
  %956 = zext i32 %955 to i64
  %957 = load ptr, ptr %833, align 8, !tbaa !438
  %958 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %957, i64 %956
  %959 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %957, i64 %956, i32 2
  %960 = load i32, ptr %959, align 8, !tbaa !440
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %977, label %962

962:                                              ; preds = %952
  %963 = zext i32 %960 to i64
  br label %967

964:                                              ; preds = %967
  %965 = add nuw nsw i64 %968, 1
  %966 = icmp eq i64 %965, %963
  br i1 %966, label %972, label %967

967:                                              ; preds = %964, %962
  %968 = phi i64 [ 0, %962 ], [ %965, %964 ]
  %969 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %957, i64 %956, i32 1, i64 %968
  %970 = load i32, ptr %969, align 4, !tbaa !22
  %971 = icmp eq i32 %970, %864
  br i1 %971, label %983, label %964

972:                                              ; preds = %964
  %973 = icmp eq i32 %960, 8
  br i1 %973, label %974, label %977

974:                                              ; preds = %972
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %958)
          to label %975 unwind label %940

975:                                              ; preds = %974
  %976 = load i32, ptr %959, align 8, !tbaa !440
  br label %977

977:                                              ; preds = %975, %972, %952
  %978 = phi i32 [ %976, %975 ], [ %960, %972 ], [ 0, %952 ]
  %979 = zext i32 %978 to i64
  %980 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %957, i64 %956, i32 1, i64 %979
  store i32 %864, ptr %980, align 4, !tbaa !22
  %981 = load i32, ptr %959, align 8, !tbaa !440
  %982 = add i32 %981, 1
  store i32 %982, ptr %959, align 8, !tbaa !440
  br label %983

983:                                              ; preds = %967, %977, %942
  %984 = add nuw nsw i64 %898, 1
  %985 = icmp eq i64 %984, %837
  br i1 %985, label %1016, label %897

986:                                              ; preds = %872
  %987 = zext i32 %864 to i64
  %988 = load ptr, ptr %833, align 8, !tbaa !438
  %989 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %988, i64 %987
  %990 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %988, i64 %987, i32 2
  %991 = load i32, ptr %990, align 8, !tbaa !440
  %992 = icmp eq i32 %991, 0
  br i1 %992, label %1008, label %993

993:                                              ; preds = %986
  %994 = zext i32 %991 to i64
  br label %998

995:                                              ; preds = %998
  %996 = add nuw nsw i64 %999, 1
  %997 = icmp eq i64 %996, %994
  br i1 %997, label %1003, label %998

998:                                              ; preds = %995, %993
  %999 = phi i64 [ 0, %993 ], [ %996, %995 ]
  %1000 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %988, i64 %987, i32 1, i64 %999
  %1001 = load i32, ptr %1000, align 4, !tbaa !22
  %1002 = icmp eq i32 %1001, %864
  br i1 %1002, label %1016, label %995

1003:                                             ; preds = %995
  %1004 = icmp eq i32 %991, 8
  br i1 %1004, label %1005, label %1008

1005:                                             ; preds = %1003
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %989)
          to label %1006 unwind label %1014

1006:                                             ; preds = %1005
  %1007 = load i32, ptr %990, align 8, !tbaa !440
  br label %1008

1008:                                             ; preds = %1006, %1003, %986
  %1009 = phi i32 [ %1007, %1006 ], [ %991, %1003 ], [ 0, %986 ]
  %1010 = zext i32 %1009 to i64
  %1011 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %988, i64 %987, i32 1, i64 %1010
  store i32 %864, ptr %1011, align 4, !tbaa !22
  %1012 = load i32, ptr %990, align 8, !tbaa !440
  %1013 = add i32 %1012, 1
  store i32 %1013, ptr %990, align 8, !tbaa !440
  br label %1016

1014:                                             ; preds = %1005
  %1015 = landingpad { ptr, i32 }
          cleanup
  br label %1273

1016:                                             ; preds = %998, %983, %874, %1008
  %1017 = add nuw nsw i64 %857, 1
  %1018 = icmp eq i64 %1017, %836
  br i1 %1018, label %838, label %856

1019:                                             ; preds = %853, %844
  %1020 = phi ptr [ null, %844 ], [ %852, %853 ]
  %1021 = and i64 %845, 68719476720
  %1022 = icmp eq i64 %1021, 0
  br i1 %1022, label %1034, label %1023

1023:                                             ; preds = %1019
  %1024 = and i8 %846, 1
  %1025 = icmp eq i8 %1024, 0
  %1026 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %1027 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %1028 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %2, i64 0, i32 3
  %1029 = and i64 %847, 4294967295
  %1030 = and i64 %847, 1
  %1031 = icmp eq i64 %1029, 1
  %1032 = sub nsw i64 %1029, %1030
  %1033 = icmp eq i64 %1030, 0
  br label %1039

1034:                                             ; preds = %1241, %1019
  %1035 = icmp eq ptr %1020, null
  br i1 %1035, label %1245, label %1036

1036:                                             ; preds = %1034
  call void @_ZdlPv(ptr noundef nonnull %1020) #23
  br label %1245

1037:                                             ; preds = %850
  %1038 = landingpad { ptr, i32 }
          cleanup
  br label %1273

1039:                                             ; preds = %1023, %1241
  %1040 = phi i64 [ 0, %1023 ], [ %1242, %1241 ]
  %1041 = load ptr, ptr %8, align 8, !tbaa !321
  %1042 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1040
  %1043 = load i32, ptr %1042, align 8, !tbaa !317
  %1044 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1040, i32 1
  %1045 = load i32, ptr %1044, align 4, !tbaa !319
  br i1 %1025, label %1050, label %1046

1046:                                             ; preds = %1039
  %1047 = icmp eq i32 %1045, -1
  %1048 = load ptr, ptr %1026, align 8
  %1049 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1040, i32 2
  br label %1092

1050:                                             ; preds = %1039
  %1051 = load ptr, ptr %1026, align 8, !tbaa !422, !noalias !446
  br i1 %1031, label %1212, label %1052

1052:                                             ; preds = %1050, %1087
  %1053 = phi i64 [ %1089, %1087 ], [ 0, %1050 ]
  %1054 = phi ptr [ %1088, %1087 ], [ %1020, %1050 ]
  %1055 = phi i64 [ %1090, %1087 ], [ 0, %1050 ]
  %1056 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1053, i32 1
  %1057 = load i32, ptr %1056, align 4, !tbaa !319
  %1058 = load i32, ptr %1027, align 8, !tbaa !22, !noalias !446
  %1059 = mul i32 %1058, %1045
  %1060 = zext i32 %1059 to i64
  %1061 = getelementptr inbounds i8, ptr %1051, i64 %1060
  %1062 = zext i32 %1057 to i64
  %1063 = getelementptr inbounds i8, ptr %1061, i64 %1062
  %1064 = load i8, ptr %1063, align 1, !tbaa !424, !range !425, !noundef !73
  %1065 = icmp eq i8 %1064, 0
  br i1 %1065, label %1070, label %1066

1066:                                             ; preds = %1052
  %1067 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1053
  %1068 = load i32, ptr %1067, align 8, !tbaa !317
  %1069 = getelementptr inbounds i32, ptr %1054, i64 1
  store i32 %1068, ptr %1054, align 4, !tbaa !22
  br label %1070

1070:                                             ; preds = %1066, %1052
  %1071 = phi ptr [ %1054, %1052 ], [ %1069, %1066 ]
  %1072 = or i64 %1053, 1
  %1073 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1072, i32 1
  %1074 = load i32, ptr %1073, align 4, !tbaa !319
  %1075 = load i32, ptr %1027, align 8, !tbaa !22, !noalias !446
  %1076 = mul i32 %1075, %1045
  %1077 = zext i32 %1076 to i64
  %1078 = getelementptr inbounds i8, ptr %1051, i64 %1077
  %1079 = zext i32 %1074 to i64
  %1080 = getelementptr inbounds i8, ptr %1078, i64 %1079
  %1081 = load i8, ptr %1080, align 1, !tbaa !424, !range !425, !noundef !73
  %1082 = icmp eq i8 %1081, 0
  br i1 %1082, label %1087, label %1083

1083:                                             ; preds = %1070
  %1084 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1072
  %1085 = load i32, ptr %1084, align 8, !tbaa !317
  %1086 = getelementptr inbounds i32, ptr %1071, i64 1
  store i32 %1085, ptr %1071, align 4, !tbaa !22
  br label %1087

1087:                                             ; preds = %1083, %1070
  %1088 = phi ptr [ %1071, %1070 ], [ %1086, %1083 ]
  %1089 = add nuw nsw i64 %1053, 2
  %1090 = add i64 %1055, 2
  %1091 = icmp eq i64 %1090, %1032
  br i1 %1091, label %1212, label %1052

1092:                                             ; preds = %1046, %1208
  %1093 = phi i64 [ 0, %1046 ], [ %1210, %1208 ]
  %1094 = phi ptr [ %1020, %1046 ], [ %1209, %1208 ]
  %1095 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1093
  %1096 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1093, i32 1
  %1097 = load i32, ptr %1096, align 4, !tbaa !319
  br i1 %1047, label %1140, label %1098

1098:                                             ; preds = %1092
  %1099 = icmp eq i32 %1097, -1
  br i1 %1099, label %1109, label %1100

1100:                                             ; preds = %1098
  %1101 = load i32, ptr %1027, align 8, !tbaa !22, !noalias !449
  %1102 = mul i32 %1101, %1045
  %1103 = zext i32 %1102 to i64
  %1104 = getelementptr inbounds i8, ptr %1048, i64 %1103
  %1105 = zext i32 %1097 to i64
  %1106 = getelementptr inbounds i8, ptr %1104, i64 %1105
  %1107 = load i8, ptr %1106, align 1, !tbaa !424, !range !425, !noundef !73
  %1108 = icmp eq i8 %1107, 0
  br i1 %1108, label %1109, label %1205

1109:                                             ; preds = %1100, %1098
  %1110 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1093, i32 2
  %1111 = load ptr, ptr %1110, align 8, !tbaa !320
  %1112 = icmp eq ptr %1111, null
  br i1 %1112, label %1140, label %1113

1113:                                             ; preds = %1109
  %1114 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1111, i64 0, i32 1
  %1115 = load ptr, ptr %1114, align 8, !tbaa !31
  %1116 = load ptr, ptr %1111, align 8, !tbaa !32
  %1117 = ptrtoint ptr %1115 to i64
  %1118 = ptrtoint ptr %1116 to i64
  %1119 = sub i64 %1117, %1118
  %1120 = ashr exact i64 %1119, 4
  %1121 = icmp eq ptr %1115, %1116
  br i1 %1121, label %1140, label %1122

1122:                                             ; preds = %1113
  %1123 = load i32, ptr %1027, align 8, !tbaa !22, !noalias !452
  %1124 = mul i32 %1123, %1045
  %1125 = zext i32 %1124 to i64
  %1126 = getelementptr inbounds i8, ptr %1048, i64 %1125
  br label %1131

1127:                                             ; preds = %1131
  %1128 = add i32 %1133, 1
  %1129 = zext i32 %1128 to i64
  %1130 = icmp ugt i64 %1120, %1129
  br i1 %1130, label %1131, label %1140

1131:                                             ; preds = %1122, %1127
  %1132 = phi i64 [ 0, %1122 ], [ %1129, %1127 ]
  %1133 = phi i32 [ 0, %1122 ], [ %1128, %1127 ]
  %1134 = getelementptr inbounds %"struct.std::pair", ptr %1116, i64 %1132
  %1135 = load i32, ptr %1134, align 8, !tbaa !37
  %1136 = zext i32 %1135 to i64
  %1137 = getelementptr inbounds i8, ptr %1126, i64 %1136
  %1138 = load i8, ptr %1137, align 1, !tbaa !424, !range !425, !noundef !73
  %1139 = icmp eq i8 %1138, 0
  br i1 %1139, label %1127, label %1205

1140:                                             ; preds = %1127, %1113, %1109, %1092
  %1141 = load ptr, ptr %1049, align 8, !tbaa !320
  %1142 = icmp eq ptr %1141, null
  br i1 %1142, label %1208, label %1143

1143:                                             ; preds = %1140
  %1144 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1141, i64 0, i32 1
  %1145 = load ptr, ptr %1144, align 8, !tbaa !31
  %1146 = load ptr, ptr %1141, align 8, !tbaa !32
  %1147 = ptrtoint ptr %1145 to i64
  %1148 = ptrtoint ptr %1146 to i64
  %1149 = sub i64 %1147, %1148
  %1150 = ashr exact i64 %1149, 4
  %1151 = icmp eq ptr %1145, %1146
  br i1 %1151, label %1208, label %1152

1152:                                             ; preds = %1143
  %1153 = icmp eq i32 %1097, -1
  %1154 = load ptr, ptr %1026, align 8
  %1155 = load i32, ptr %1027, align 8
  %1156 = zext i32 %1097 to i64
  %1157 = getelementptr inbounds i8, ptr %1154, i64 %1156
  %1158 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1093, i32 2
  br label %1159

1159:                                             ; preds = %1152, %1201
  %1160 = phi i64 [ 0, %1152 ], [ %1203, %1201 ]
  %1161 = phi i32 [ 0, %1152 ], [ %1202, %1201 ]
  br i1 %1153, label %1170, label %1162

1162:                                             ; preds = %1159
  %1163 = getelementptr inbounds %"struct.std::pair", ptr %1146, i64 %1160
  %1164 = load i32, ptr %1163, align 8, !tbaa !37
  %1165 = mul i32 %1155, %1164
  %1166 = zext i32 %1165 to i64
  %1167 = getelementptr inbounds i8, ptr %1157, i64 %1166
  %1168 = load i8, ptr %1167, align 1, !tbaa !424, !range !425, !noundef !73
  %1169 = icmp eq i8 %1168, 0
  br i1 %1169, label %1170, label %1205

1170:                                             ; preds = %1162, %1159
  %1171 = load ptr, ptr %1158, align 8, !tbaa !320
  %1172 = icmp eq ptr %1171, null
  br i1 %1172, label %1201, label %1173

1173:                                             ; preds = %1170
  %1174 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1171, i64 0, i32 1
  %1175 = load ptr, ptr %1174, align 8, !tbaa !31
  %1176 = load ptr, ptr %1171, align 8, !tbaa !32
  %1177 = ptrtoint ptr %1175 to i64
  %1178 = ptrtoint ptr %1176 to i64
  %1179 = sub i64 %1177, %1178
  %1180 = ashr exact i64 %1179, 4
  %1181 = icmp eq ptr %1175, %1176
  br i1 %1181, label %1201, label %1182

1182:                                             ; preds = %1173
  %1183 = getelementptr inbounds %"struct.std::pair", ptr %1146, i64 %1160
  %1184 = load i32, ptr %1183, align 8, !tbaa !37
  %1185 = mul i32 %1155, %1184
  %1186 = zext i32 %1185 to i64
  %1187 = getelementptr inbounds i8, ptr %1154, i64 %1186
  br label %1192

1188:                                             ; preds = %1192
  %1189 = add i32 %1194, 1
  %1190 = zext i32 %1189 to i64
  %1191 = icmp ugt i64 %1180, %1190
  br i1 %1191, label %1192, label %1201

1192:                                             ; preds = %1182, %1188
  %1193 = phi i64 [ 0, %1182 ], [ %1190, %1188 ]
  %1194 = phi i32 [ 0, %1182 ], [ %1189, %1188 ]
  %1195 = getelementptr inbounds %"struct.std::pair", ptr %1176, i64 %1193
  %1196 = load i32, ptr %1195, align 8, !tbaa !37
  %1197 = zext i32 %1196 to i64
  %1198 = getelementptr inbounds i8, ptr %1187, i64 %1197
  %1199 = load i8, ptr %1198, align 1, !tbaa !424, !range !425, !noundef !73
  %1200 = icmp eq i8 %1199, 0
  br i1 %1200, label %1188, label %1205

1201:                                             ; preds = %1188, %1173, %1170
  %1202 = add i32 %1161, 1
  %1203 = zext i32 %1202 to i64
  %1204 = icmp ugt i64 %1150, %1203
  br i1 %1204, label %1159, label %1208

1205:                                             ; preds = %1131, %1162, %1192, %1100
  %1206 = load i32, ptr %1095, align 8, !tbaa !317
  %1207 = getelementptr inbounds i32, ptr %1094, i64 1
  store i32 %1206, ptr %1094, align 4, !tbaa !22
  br label %1208

1208:                                             ; preds = %1201, %1143, %1140, %1205
  %1209 = phi ptr [ %1094, %1140 ], [ %1207, %1205 ], [ %1094, %1143 ], [ %1094, %1201 ]
  %1210 = add nuw nsw i64 %1093, 1
  %1211 = icmp eq i64 %1210, %1029
  br i1 %1211, label %1231, label %1092

1212:                                             ; preds = %1087, %1050
  %1213 = phi ptr [ undef, %1050 ], [ %1088, %1087 ]
  %1214 = phi i64 [ 0, %1050 ], [ %1089, %1087 ]
  %1215 = phi ptr [ %1020, %1050 ], [ %1088, %1087 ]
  br i1 %1033, label %1231, label %1216

1216:                                             ; preds = %1212
  %1217 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1214, i32 1
  %1218 = load i32, ptr %1217, align 4, !tbaa !319
  %1219 = load i32, ptr %1027, align 8, !tbaa !22, !noalias !446
  %1220 = mul i32 %1219, %1045
  %1221 = zext i32 %1220 to i64
  %1222 = getelementptr inbounds i8, ptr %1051, i64 %1221
  %1223 = zext i32 %1218 to i64
  %1224 = getelementptr inbounds i8, ptr %1222, i64 %1223
  %1225 = load i8, ptr %1224, align 1, !tbaa !424, !range !425, !noundef !73
  %1226 = icmp eq i8 %1225, 0
  br i1 %1226, label %1231, label %1227

1227:                                             ; preds = %1216
  %1228 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1041, i64 %1214
  %1229 = load i32, ptr %1228, align 8, !tbaa !317
  %1230 = getelementptr inbounds i32, ptr %1215, i64 1
  store i32 %1229, ptr %1215, align 4, !tbaa !22
  br label %1231

1231:                                             ; preds = %1208, %1212, %1227, %1216
  %1232 = phi ptr [ %1213, %1212 ], [ %1215, %1216 ], [ %1230, %1227 ], [ %1209, %1208 ]
  %1233 = icmp eq ptr %1232, %1020
  br i1 %1233, label %1241, label %1234

1234:                                             ; preds = %1231
  %1235 = zext i32 %1043 to i64
  %1236 = load ptr, ptr %1028, align 8, !tbaa !438
  %1237 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1236, i64 %1235
  invoke void @_ZN6dealii25CompressedSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b(ptr noundef nonnull align 8 dereferenceable(60) %1237, ptr %1020, ptr %1232, i1 noundef zeroext true)
          to label %1241 unwind label %1238

1238:                                             ; preds = %1234
  %1239 = landingpad { ptr, i32 }
          cleanup
  %1240 = icmp eq ptr %1020, null
  br i1 %1240, label %1273, label %1244

1241:                                             ; preds = %1234, %1231
  %1242 = add nuw nsw i64 %1040, 1
  %1243 = icmp eq i64 %1242, %1029
  br i1 %1243, label %1034, label %1039

1244:                                             ; preds = %1238
  call void @_ZdlPv(ptr noundef nonnull %1020) #23
  br label %1273

1245:                                             ; preds = %1036, %1034
  %1246 = icmp eq ptr %611, null
  br i1 %1246, label %1248, label %1247

1247:                                             ; preds = %1245
  call void @_ZdlPv(ptr noundef nonnull %611) #23
  br label %1248

1248:                                             ; preds = %1247, %1245
  %1249 = load ptr, ptr %8, align 8, !tbaa !321
  %1250 = load ptr, ptr %595, align 8, !tbaa !325
  %1251 = icmp eq ptr %1249, %1250
  br i1 %1251, label %1267, label %1252

1252:                                             ; preds = %1248, %1262
  %1253 = phi ptr [ %1263, %1262 ], [ %1249, %1248 ]
  %1254 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1253, i64 0, i32 2
  %1255 = load ptr, ptr %1254, align 8, !tbaa !320
  %1256 = icmp eq ptr %1255, null
  br i1 %1256, label %1262, label %1257

1257:                                             ; preds = %1252
  %1258 = load ptr, ptr %1255, align 8, !tbaa !32
  %1259 = icmp eq ptr %1258, null
  br i1 %1259, label %1261, label %1260

1260:                                             ; preds = %1257
  call void @_ZdlPv(ptr noundef nonnull %1258) #23
  br label %1261

1261:                                             ; preds = %1260, %1257
  call void @_ZdlPv(ptr noundef nonnull %1255) #23
  store ptr null, ptr %1254, align 8, !tbaa !320
  br label %1262

1262:                                             ; preds = %1261, %1252
  %1263 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1253, i64 1
  %1264 = icmp eq ptr %1263, %1250
  br i1 %1264, label %1265, label %1252

1265:                                             ; preds = %1262
  %1266 = load ptr, ptr %8, align 8, !tbaa !321
  br label %1267

1267:                                             ; preds = %1265, %1248
  %1268 = phi ptr [ %1266, %1265 ], [ %1249, %1248 ]
  %1269 = icmp eq ptr %1268, null
  br i1 %1269, label %1271, label %1270

1270:                                             ; preds = %1267
  call void @_ZdlPv(ptr noundef nonnull %1268) #23
  br label %1271

1271:                                             ; preds = %1267, %1270
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #24
  br label %1272

1272:                                             ; preds = %1271, %531
  ret void

1273:                                             ; preds = %759, %761, %940, %1014, %895, %1244, %1238, %1037, %854
  %1274 = phi ptr [ %611, %854 ], [ %611, %895 ], [ %611, %1014 ], [ %611, %940 ], [ %611, %1037 ], [ %611, %1238 ], [ %611, %1244 ], [ %648, %759 ], [ %648, %761 ]
  %1275 = phi { ptr, i32 } [ %855, %854 ], [ %896, %895 ], [ %1015, %1014 ], [ %941, %940 ], [ %1038, %1037 ], [ %1239, %1238 ], [ %1239, %1244 ], [ %760, %759 ], [ %762, %761 ]
  %1276 = icmp eq ptr %1274, null
  br i1 %1276, label %1278, label %1277

1277:                                             ; preds = %1273
  call void @_ZdlPv(ptr noundef nonnull %1274) #23
  br label %1278

1278:                                             ; preds = %1277, %1273
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %8)
          to label %1279 unwind label %1283

1279:                                             ; preds = %1278, %644
  %1280 = phi { ptr, i32 } [ %1275, %1278 ], [ %643, %644 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #24
  br label %1281

1281:                                             ; preds = %1279, %541
  %1282 = phi { ptr, i32 } [ %542, %541 ], [ %1280, %1279 ]
  resume { ptr, i32 } %1282

1283:                                             ; preds = %1278, %854, %642
  %1284 = landingpad { ptr, i32 }
          catch ptr null
  %1285 = extractvalue { ptr, i32 } %1284, 0
  call void @__clang_call_terminate(ptr %1285) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_28CompressedSetSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(104) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_28CompressedSetSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(104) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_28CompressedSetSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(104) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::vector.36", align 8
  %8 = alloca %"class.std::vector.178", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = alloca %"struct.dealii::internals::distributing", align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !313
  %13 = load ptr, ptr %1, align 8, !tbaa !58
  %14 = ptrtoint ptr %12 to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 2
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3
  %20 = load i32, ptr %19, align 4, !tbaa !22
  %21 = icmp eq i32 %20, %18
  %22 = and i64 %17, 4294967295
  br i1 %21, label %598, label %23

23:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %23
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %32

26:                                               ; preds = %23
  %27 = shl nuw nsw i64 %22, 2
  %28 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %27) #21
          to label %29 unwind label %70

29:                                               ; preds = %26
  store ptr %28, ptr %7, align 8, !tbaa !58
  %30 = getelementptr inbounds i32, ptr %28, i64 %22
  %31 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %30, ptr %31, align 8, !tbaa !417
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %28, i8 0, i64 %27, i1 false), !tbaa !22
  br label %32

32:                                               ; preds = %29, %25
  %33 = phi ptr [ null, %25 ], [ %28, %29 ]
  %34 = phi ptr [ null, %25 ], [ %30, %29 ]
  %35 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %34, ptr %35, align 8, !tbaa !313
  %36 = icmp eq i32 %18, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %41 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %43 = and i64 %17, 4294967295
  br label %72

44:                                               ; preds = %177
  %45 = load ptr, ptr %35, align 8, !tbaa !21
  %46 = load ptr, ptr %7, align 8, !tbaa !21
  br label %47

47:                                               ; preds = %44, %32
  %48 = phi ptr [ %33, %32 ], [ %46, %44 ]
  %49 = phi ptr [ %34, %32 ], [ %45, %44 ]
  %50 = phi ptr [ null, %32 ], [ %179, %44 ]
  %51 = phi ptr [ null, %32 ], [ %180, %44 ]
  %52 = phi i32 [ 0, %32 ], [ %181, %44 ]
  %53 = zext i32 %52 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6)
  store i32 0, ptr %6, align 4, !tbaa !22
  %54 = ptrtoint ptr %49 to i64
  %55 = ptrtoint ptr %48 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = icmp ult i64 %57, %53
  br i1 %58, label %59, label %64

59:                                               ; preds = %47
  %60 = sub nsw i64 %53, %57
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %49, i64 noundef %60, ptr noundef nonnull align 4 dereferenceable(4) %6)
          to label %61 unwind label %225

61:                                               ; preds = %59
  %62 = load ptr, ptr %7, align 8, !tbaa !21
  %63 = load ptr, ptr %35, align 8, !tbaa !21
  br label %188

64:                                               ; preds = %47
  %65 = icmp ugt i64 %57, %53
  br i1 %65, label %66, label %188

66:                                               ; preds = %64
  %67 = getelementptr inbounds i32, ptr %48, i64 %53
  %68 = icmp eq ptr %49, %67
  br i1 %68, label %188, label %69

69:                                               ; preds = %66
  store ptr %67, ptr %35, align 8, !tbaa !313
  br label %188

70:                                               ; preds = %26
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %596

72:                                               ; preds = %37, %177
  %73 = phi i64 [ 0, %37 ], [ %182, %177 ]
  %74 = phi i32 [ 0, %37 ], [ %181, %177 ]
  %75 = phi ptr [ null, %37 ], [ %180, %177 ]
  %76 = phi ptr [ null, %37 ], [ %179, %177 ]
  %77 = phi ptr [ null, %37 ], [ %178, %177 ]
  %78 = load ptr, ptr %39, align 8, !tbaa !55
  %79 = load i32, ptr %40, align 8, !tbaa !57
  %80 = load ptr, ptr %38, align 8, !tbaa !55
  %81 = ptrtoint ptr %78 to i64
  %82 = ptrtoint ptr %80 to i64
  %83 = sub i64 %81, %82
  %84 = shl nsw i64 %83, 3
  %85 = zext i32 %79 to i64
  %86 = add nsw i64 %84, %85
  %87 = load ptr, ptr %1, align 8, !tbaa !58
  %88 = getelementptr inbounds i32, ptr %87, i64 %73
  %89 = load i32, ptr %88, align 4, !tbaa !22
  %90 = zext i32 %89 to i64
  %91 = icmp ugt i64 %86, %90
  br i1 %91, label %92, label %102

92:                                               ; preds = %72
  %93 = lshr i32 %89, 6
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i64, ptr %80, i64 %94
  %96 = and i32 %89, 63
  %97 = zext i32 %96 to i64
  %98 = shl nuw i64 1, %97
  %99 = load i64, ptr %95, align 8, !tbaa !42
  %100 = and i64 %99, %98
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %107

102:                                              ; preds = %92, %72
  %103 = zext i32 %74 to i64
  %104 = load ptr, ptr %7, align 8, !tbaa !58
  %105 = getelementptr inbounds i32, ptr %104, i64 %103
  store i32 %89, ptr %105, align 4, !tbaa !22
  %106 = add i32 %74, 1
  br label %177

107:                                              ; preds = %92
  %108 = load ptr, ptr %41, align 8, !tbaa !21
  %109 = load ptr, ptr %42, align 8, !tbaa !21
  %110 = ptrtoint ptr %109 to i64
  %111 = ptrtoint ptr %108 to i64
  %112 = sub i64 %110, %111
  %113 = icmp sgt i64 %112, 0
  br i1 %113, label %114, label %129

114:                                              ; preds = %107
  %115 = udiv exact i64 %112, 40
  br label %116

116:                                              ; preds = %116, %114
  %117 = phi i64 [ %115, %114 ], [ %127, %116 ]
  %118 = phi ptr [ %108, %114 ], [ %126, %116 ]
  %119 = lshr i64 %117, 1
  %120 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %118, i64 %119
  %121 = load i32, ptr %120, align 8, !tbaa !24
  %122 = icmp ult i32 %121, %89
  %123 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %120, i64 1
  %124 = xor i64 %119, -1
  %125 = add nsw i64 %117, %124
  %126 = select i1 %122, ptr %123, ptr %118
  %127 = select i1 %122, i64 %125, i64 %119
  %128 = icmp sgt i64 %127, 0
  br i1 %128, label %116, label %129

129:                                              ; preds = %116, %107
  %130 = phi ptr [ %108, %107 ], [ %126, %116 ]
  %131 = icmp eq ptr %76, %77
  br i1 %131, label %135, label %132

132:                                              ; preds = %129
  %133 = trunc i64 %73 to i32
  store i32 %133, ptr %76, align 8
  %134 = getelementptr inbounds i8, ptr %76, i64 8
  store ptr %130, ptr %134, align 8
  br label %172

135:                                              ; preds = %129
  %136 = ptrtoint ptr %76 to i64
  %137 = ptrtoint ptr %75 to i64
  %138 = sub i64 %136, %137
  %139 = icmp eq i64 %138, 9223372036854775792
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %141 unwind label %186

141:                                              ; preds = %140
  unreachable

142:                                              ; preds = %135
  %143 = ashr exact i64 %138, 4
  %144 = tail call i64 @llvm.umax.i64(i64 %143, i64 1)
  %145 = add i64 %144, %143
  %146 = icmp ult i64 %145, %143
  %147 = icmp ugt i64 %145, 576460752303423487
  %148 = or i1 %146, %147
  %149 = select i1 %148, i64 576460752303423487, i64 %145
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %142
  %152 = shl nuw nsw i64 %149, 4
  %153 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %152) #21
          to label %154 unwind label %184

154:                                              ; preds = %151, %142
  %155 = phi ptr [ null, %142 ], [ %153, %151 ]
  %156 = getelementptr inbounds %"struct.std::pair.188", ptr %155, i64 %143
  %157 = trunc i64 %73 to i32
  store i32 %157, ptr %156, align 8
  %158 = getelementptr inbounds i8, ptr %156, i64 8
  store ptr %130, ptr %158, align 8
  %159 = icmp eq ptr %75, %76
  br i1 %159, label %166, label %160

160:                                              ; preds = %154, %160
  %161 = phi ptr [ %164, %160 ], [ %155, %154 ]
  %162 = phi ptr [ %163, %160 ], [ %75, %154 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %161, ptr noundef nonnull align 8 dereferenceable(16) %162, i64 16, i1 false)
  %163 = getelementptr inbounds %"struct.std::pair.188", ptr %162, i64 1
  %164 = getelementptr inbounds %"struct.std::pair.188", ptr %161, i64 1
  %165 = icmp eq ptr %163, %76
  br i1 %165, label %166, label %160

166:                                              ; preds = %160, %154
  %167 = phi ptr [ %155, %154 ], [ %164, %160 ]
  %168 = icmp eq ptr %75, null
  br i1 %168, label %170, label %169

169:                                              ; preds = %166
  tail call void @_ZdlPv(ptr noundef nonnull %75) #23
  br label %170

170:                                              ; preds = %169, %166
  %171 = getelementptr inbounds %"struct.std::pair.188", ptr %155, i64 %149
  br label %172

172:                                              ; preds = %170, %132
  %173 = phi ptr [ %171, %170 ], [ %77, %132 ]
  %174 = phi ptr [ %167, %170 ], [ %76, %132 ]
  %175 = phi ptr [ %155, %170 ], [ %75, %132 ]
  %176 = getelementptr inbounds %"struct.std::pair.188", ptr %174, i64 1
  br label %177

177:                                              ; preds = %172, %102
  %178 = phi ptr [ %173, %172 ], [ %77, %102 ]
  %179 = phi ptr [ %176, %172 ], [ %76, %102 ]
  %180 = phi ptr [ %175, %172 ], [ %75, %102 ]
  %181 = phi i32 [ %74, %172 ], [ %106, %102 ]
  %182 = add nuw nsw i64 %73, 1
  %183 = icmp eq i64 %182, %43
  br i1 %183, label %44, label %72

184:                                              ; preds = %151
  %185 = landingpad { ptr, i32 }
          cleanup
  br label %587

186:                                              ; preds = %140
  %187 = landingpad { ptr, i32 }
          cleanup
  br label %587

188:                                              ; preds = %61, %69, %66, %64
  %189 = phi ptr [ %63, %61 ], [ %67, %69 ], [ %49, %66 ], [ %49, %64 ]
  %190 = phi ptr [ %62, %61 ], [ %48, %69 ], [ %48, %66 ], [ %48, %64 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6)
  %191 = icmp eq ptr %190, %189
  br i1 %191, label %201, label %192

192:                                              ; preds = %188
  %193 = ptrtoint ptr %189 to i64
  %194 = ptrtoint ptr %190 to i64
  %195 = sub i64 %193, %194
  %196 = ashr exact i64 %195, 2
  %197 = call i64 @llvm.ctlz.i64(i64 %196, i1 true), !range !418
  %198 = shl nuw nsw i64 %197, 1
  %199 = xor i64 %198, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %190, ptr %189, i64 noundef %199)
          to label %200 unwind label %225

200:                                              ; preds = %192
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %190, ptr %189)
          to label %201 unwind label %225

201:                                              ; preds = %188, %200
  %202 = ptrtoint ptr %50 to i64
  %203 = ptrtoint ptr %51 to i64
  %204 = sub i64 %202, %203
  %205 = and i64 %204, 68719476720
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %213, label %207

207:                                              ; preds = %201
  %208 = lshr exact i64 %204, 4
  %209 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  %210 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %2, i64 0, i32 3
  %211 = and i64 %208, 4294967295
  %212 = and i64 %17, 4294967295
  br label %227

213:                                              ; preds = %562, %201
  %214 = load ptr, ptr %35, align 8, !tbaa !313
  %215 = load ptr, ptr %7, align 8, !tbaa !58
  %216 = ptrtoint ptr %214 to i64
  %217 = ptrtoint ptr %215 to i64
  %218 = sub i64 %216, %217
  %219 = and i64 %218, 17179869180
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %565, label %221

221:                                              ; preds = %213
  %222 = lshr exact i64 %218, 2
  %223 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %2, i64 0, i32 3
  %224 = and i64 %222, 4294967295
  br label %568

225:                                              ; preds = %200, %192, %59
  %226 = landingpad { ptr, i32 }
          cleanup
  br label %587

227:                                              ; preds = %207, %562
  %228 = phi i64 [ 0, %207 ], [ %563, %562 ]
  %229 = getelementptr inbounds %"struct.std::pair.188", ptr %51, i64 %228
  %230 = load i32, ptr %229, align 8, !tbaa !326
  %231 = zext i32 %230 to i64
  %232 = load ptr, ptr %1, align 8, !tbaa !58
  %233 = getelementptr inbounds i32, ptr %232, i64 %231
  %234 = load i32, ptr %233, align 4, !tbaa !22
  %235 = getelementptr inbounds %"struct.std::pair.188", ptr %51, i64 %228, i32 1
  %236 = load ptr, ptr %235, align 8, !tbaa !328
  %237 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %236, i64 0, i32 1
  %238 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %236, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %239 = load ptr, ptr %238, align 8, !tbaa !31
  %240 = load ptr, ptr %237, align 8, !tbaa !32
  %241 = icmp eq ptr %239, %240
  br i1 %241, label %242, label %246

242:                                              ; preds = %396, %227
  br i1 %3, label %243, label %513

243:                                              ; preds = %242
  br i1 %36, label %562, label %244

244:                                              ; preds = %243
  %245 = zext i32 %234 to i64
  br label %406

246:                                              ; preds = %227, %396
  %247 = phi ptr [ %400, %396 ], [ %240, %227 ]
  %248 = phi i64 [ %398, %396 ], [ 0, %227 ]
  %249 = phi i32 [ %397, %396 ], [ 0, %227 ]
  %250 = getelementptr inbounds %"struct.std::pair", ptr %247, i64 %248
  %251 = load i32, ptr %250, align 8, !tbaa !37
  %252 = load ptr, ptr %35, align 8, !tbaa !21
  %253 = getelementptr inbounds i32, ptr %252, i64 -1
  %254 = load i32, ptr %253, align 4, !tbaa !22
  %255 = icmp ult i32 %254, %251
  br i1 %255, label %256, label %303

256:                                              ; preds = %246
  %257 = load ptr, ptr %209, align 8, !tbaa !417
  %258 = icmp eq ptr %252, %257
  br i1 %258, label %261, label %259

259:                                              ; preds = %256
  store i32 %251, ptr %252, align 4, !tbaa !22
  %260 = getelementptr inbounds i32, ptr %252, i64 1
  store ptr %260, ptr %35, align 8, !tbaa !313
  br label %396

261:                                              ; preds = %256
  %262 = load ptr, ptr %7, align 8, !tbaa !21
  %263 = ptrtoint ptr %252 to i64
  %264 = ptrtoint ptr %262 to i64
  %265 = sub i64 %263, %264
  %266 = icmp eq i64 %265, 9223372036854775804
  br i1 %266, label %267, label %269

267:                                              ; preds = %261
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %268 unwind label %301

268:                                              ; preds = %267
  unreachable

269:                                              ; preds = %261
  %270 = ashr exact i64 %265, 2
  %271 = call i64 @llvm.umax.i64(i64 %270, i64 1)
  %272 = add i64 %271, %270
  %273 = icmp ult i64 %272, %270
  %274 = icmp ugt i64 %272, 2305843009213693951
  %275 = or i1 %273, %274
  %276 = select i1 %275, i64 2305843009213693951, i64 %272
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %281, label %278

278:                                              ; preds = %269
  %279 = shl nuw nsw i64 %276, 2
  %280 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %279) #21
          to label %281 unwind label %299

281:                                              ; preds = %278, %269
  %282 = phi ptr [ null, %269 ], [ %280, %278 ]
  %283 = getelementptr inbounds i32, ptr %282, i64 %270
  store i32 %251, ptr %283, align 4, !tbaa !22
  %284 = icmp sgt i64 %265, 4
  br i1 %284, label %285, label %286, !prof !23

285:                                              ; preds = %281
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %282, ptr align 4 %262, i64 %265, i1 false)
  br label %291

286:                                              ; preds = %281
  %287 = icmp eq i64 %265, 4
  br i1 %287, label %288, label %291

288:                                              ; preds = %286
  %289 = load i32, ptr %262, align 4, !tbaa !22
  store i32 %289, ptr %282, align 4, !tbaa !22
  %290 = getelementptr inbounds i32, ptr %283, i64 1
  br label %294

291:                                              ; preds = %286, %285
  %292 = getelementptr inbounds i32, ptr %283, i64 1
  %293 = icmp eq ptr %262, null
  br i1 %293, label %296, label %294

294:                                              ; preds = %288, %291
  %295 = phi ptr [ %290, %288 ], [ %292, %291 ]
  call void @_ZdlPv(ptr noundef nonnull %262) #23
  br label %296

296:                                              ; preds = %294, %291
  %297 = phi ptr [ %292, %291 ], [ %295, %294 ]
  store ptr %282, ptr %7, align 8, !tbaa !58
  store ptr %297, ptr %35, align 8, !tbaa !313
  %298 = getelementptr inbounds i32, ptr %282, i64 %276
  store ptr %298, ptr %209, align 8, !tbaa !417
  br label %396

299:                                              ; preds = %278
  %300 = landingpad { ptr, i32 }
          cleanup
  br label %587

301:                                              ; preds = %267
  %302 = landingpad { ptr, i32 }
          cleanup
  br label %587

303:                                              ; preds = %246
  %304 = load ptr, ptr %7, align 8, !tbaa !21
  %305 = ptrtoint ptr %252 to i64
  %306 = ptrtoint ptr %304 to i64
  %307 = sub i64 %305, %306
  %308 = icmp sgt i64 %307, 0
  br i1 %308, label %309, label %324

309:                                              ; preds = %303
  %310 = lshr exact i64 %307, 2
  br label %311

311:                                              ; preds = %311, %309
  %312 = phi i64 [ %310, %309 ], [ %322, %311 ]
  %313 = phi ptr [ %304, %309 ], [ %321, %311 ]
  %314 = lshr i64 %312, 1
  %315 = getelementptr inbounds i32, ptr %313, i64 %314
  %316 = load i32, ptr %315, align 4, !tbaa !22
  %317 = icmp ult i32 %316, %251
  %318 = getelementptr inbounds i32, ptr %315, i64 1
  %319 = xor i64 %314, -1
  %320 = add nsw i64 %312, %319
  %321 = select i1 %317, ptr %318, ptr %313
  %322 = select i1 %317, i64 %320, i64 %314
  %323 = icmp sgt i64 %322, 0
  br i1 %323, label %311, label %324

324:                                              ; preds = %311, %303
  %325 = phi ptr [ %304, %303 ], [ %321, %311 ]
  %326 = load i32, ptr %325, align 4, !tbaa !22
  %327 = icmp eq i32 %326, %251
  br i1 %327, label %396, label %328

328:                                              ; preds = %324
  %329 = ptrtoint ptr %325 to i64
  %330 = load ptr, ptr %209, align 8, !tbaa !417
  %331 = icmp eq ptr %252, %330
  br i1 %331, label %349, label %332

332:                                              ; preds = %328
  %333 = icmp eq ptr %252, %325
  %334 = getelementptr inbounds i32, ptr %252, i64 1
  br i1 %333, label %335, label %336

335:                                              ; preds = %332
  store i32 %251, ptr %252, align 4, !tbaa !22
  store ptr %334, ptr %35, align 8, !tbaa !313
  br label %396

336:                                              ; preds = %332
  store i32 %254, ptr %252, align 4, !tbaa !22
  store ptr %334, ptr %35, align 8, !tbaa !313
  %337 = ptrtoint ptr %253 to i64
  %338 = sub i64 %337, %329
  %339 = icmp sgt i64 %338, 4
  br i1 %339, label %340, label %344, !prof !23

340:                                              ; preds = %336
  %341 = lshr exact i64 %338, 2
  %342 = sub nsw i64 0, %341
  %343 = getelementptr inbounds i32, ptr %252, i64 %342
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %343, ptr nonnull align 4 %325, i64 %338, i1 false)
  br label %348

344:                                              ; preds = %336
  %345 = icmp eq i64 %338, 4
  br i1 %345, label %346, label %348

346:                                              ; preds = %344
  %347 = load i32, ptr %325, align 4, !tbaa !22
  store i32 %347, ptr %253, align 4, !tbaa !22
  br label %348

348:                                              ; preds = %346, %344, %340
  store i32 %251, ptr %325, align 4, !tbaa !22
  br label %396

349:                                              ; preds = %328
  %350 = icmp eq i64 %307, 9223372036854775804
  br i1 %350, label %351, label %353

351:                                              ; preds = %349
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %352 unwind label %394

352:                                              ; preds = %351
  unreachable

353:                                              ; preds = %349
  %354 = ashr exact i64 %307, 2
  %355 = call i64 @llvm.umax.i64(i64 %354, i64 1)
  %356 = add i64 %355, %354
  %357 = icmp ult i64 %356, %354
  %358 = icmp ugt i64 %356, 2305843009213693951
  %359 = or i1 %357, %358
  %360 = select i1 %359, i64 2305843009213693951, i64 %356
  %361 = sub i64 %329, %306
  %362 = ashr exact i64 %361, 2
  %363 = icmp eq i64 %360, 0
  br i1 %363, label %367, label %364

364:                                              ; preds = %353
  %365 = shl nuw nsw i64 %360, 2
  %366 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %365) #21
          to label %367 unwind label %392

367:                                              ; preds = %364, %353
  %368 = phi ptr [ null, %353 ], [ %366, %364 ]
  %369 = getelementptr inbounds i32, ptr %368, i64 %362
  store i32 %251, ptr %369, align 4, !tbaa !22
  %370 = icmp sgt i64 %361, 4
  br i1 %370, label %371, label %372, !prof !23

371:                                              ; preds = %367
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %368, ptr align 4 %304, i64 %361, i1 false)
  br label %376

372:                                              ; preds = %367
  %373 = icmp eq i64 %361, 4
  br i1 %373, label %374, label %376

374:                                              ; preds = %372
  %375 = load i32, ptr %304, align 4, !tbaa !22
  store i32 %375, ptr %368, align 4, !tbaa !22
  br label %376

376:                                              ; preds = %374, %372, %371
  %377 = getelementptr inbounds i32, ptr %369, i64 1
  %378 = sub i64 %305, %329
  %379 = icmp sgt i64 %378, 4
  br i1 %379, label %380, label %381, !prof !23

380:                                              ; preds = %376
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %377, ptr nonnull align 4 %325, i64 %378, i1 false)
  br label %385

381:                                              ; preds = %376
  %382 = icmp eq i64 %378, 4
  br i1 %382, label %383, label %385

383:                                              ; preds = %381
  %384 = load i32, ptr %325, align 4, !tbaa !22
  store i32 %384, ptr %377, align 4, !tbaa !22
  br label %385

385:                                              ; preds = %383, %381, %380
  %386 = icmp eq ptr %304, null
  br i1 %386, label %388, label %387

387:                                              ; preds = %385
  call void @_ZdlPv(ptr noundef nonnull %304) #23
  br label %388

388:                                              ; preds = %387, %385
  %389 = ashr exact i64 %378, 2
  %390 = getelementptr inbounds i32, ptr %377, i64 %389
  store ptr %368, ptr %7, align 8, !tbaa !58
  store ptr %390, ptr %35, align 8, !tbaa !313
  %391 = getelementptr inbounds i32, ptr %368, i64 %360
  store ptr %391, ptr %209, align 8, !tbaa !417
  br label %396

392:                                              ; preds = %364
  %393 = landingpad { ptr, i32 }
          cleanup
  br label %587

394:                                              ; preds = %351
  %395 = landingpad { ptr, i32 }
          cleanup
  br label %587

396:                                              ; preds = %388, %348, %335, %324, %296, %259
  %397 = add i32 %249, 1
  %398 = zext i32 %397 to i64
  %399 = load ptr, ptr %238, align 8, !tbaa !31
  %400 = load ptr, ptr %237, align 8, !tbaa !32
  %401 = ptrtoint ptr %399 to i64
  %402 = ptrtoint ptr %400 to i64
  %403 = sub i64 %401, %402
  %404 = ashr exact i64 %403, 4
  %405 = icmp ugt i64 %404, %398
  br i1 %405, label %246, label %242

406:                                              ; preds = %244, %508
  %407 = phi i64 [ 0, %244 ], [ %509, %508 ]
  %408 = load ptr, ptr %1, align 8, !tbaa !58
  %409 = getelementptr inbounds i32, ptr %408, i64 %407
  %410 = load i32, ptr %409, align 4, !tbaa !22
  %411 = load ptr, ptr %210, align 8, !tbaa !455
  %412 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %411, i64 %245
  %413 = getelementptr inbounds i8, ptr %412, i64 16
  %414 = getelementptr inbounds i8, ptr %412, i64 8
  %415 = load ptr, ptr %413, align 8, !tbaa !21
  %416 = icmp eq ptr %415, null
  br i1 %416, label %428, label %417

417:                                              ; preds = %406, %417
  %418 = phi ptr [ %425, %417 ], [ %415, %406 ]
  %419 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %418, i64 0, i32 1
  %420 = load i32, ptr %419, align 4, !tbaa !22
  %421 = icmp ugt i32 %420, %410
  %422 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %418, i64 0, i32 2
  %423 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %418, i64 0, i32 3
  %424 = select i1 %421, ptr %422, ptr %423
  %425 = load ptr, ptr %424, align 8, !tbaa !21
  %426 = icmp eq ptr %425, null
  br i1 %426, label %427, label %417

427:                                              ; preds = %417
  br i1 %421, label %428, label %437

428:                                              ; preds = %427, %406
  %429 = phi ptr [ %418, %427 ], [ %414, %406 ]
  %430 = getelementptr inbounds i8, ptr %412, i64 24
  %431 = load ptr, ptr %430, align 8, !tbaa !457
  %432 = icmp eq ptr %429, %431
  br i1 %432, label %441, label %433

433:                                              ; preds = %428
  %434 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %429) #26
  %435 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %434, i64 0, i32 1
  %436 = load i32, ptr %435, align 4, !tbaa !22
  br label %437

437:                                              ; preds = %433, %427
  %438 = phi i32 [ %436, %433 ], [ %420, %427 ]
  %439 = phi ptr [ %429, %433 ], [ %418, %427 ]
  %440 = icmp ult i32 %438, %410
  br i1 %440, label %441, label %460

441:                                              ; preds = %437, %428
  %442 = phi ptr [ %429, %428 ], [ %439, %437 ]
  %443 = icmp eq ptr %414, %442
  br i1 %443, label %448, label %444

444:                                              ; preds = %441
  %445 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %442, i64 0, i32 1
  %446 = load i32, ptr %445, align 4, !tbaa !22
  %447 = icmp ugt i32 %446, %410
  br label %448

448:                                              ; preds = %444, %441
  %449 = phi i1 [ true, %441 ], [ %447, %444 ]
  %450 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %451 unwind label %511

451:                                              ; preds = %448
  %452 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %450, i64 0, i32 1
  store i32 %410, ptr %452, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %449, ptr noundef nonnull %450, ptr noundef nonnull %442, ptr noundef nonnull align 8 dereferenceable(32) %414) #24
  %453 = getelementptr inbounds i8, ptr %412, i64 40
  %454 = load i64, ptr %453, align 8, !tbaa !458
  %455 = add i64 %454, 1
  store i64 %455, ptr %453, align 8, !tbaa !458
  %456 = load ptr, ptr %1, align 8, !tbaa !58
  %457 = getelementptr inbounds i32, ptr %456, i64 %407
  %458 = load i32, ptr %457, align 4, !tbaa !22
  %459 = load ptr, ptr %210, align 8, !tbaa !455
  br label %460

460:                                              ; preds = %451, %437
  %461 = phi ptr [ %459, %451 ], [ %411, %437 ]
  %462 = phi i32 [ %458, %451 ], [ %410, %437 ]
  %463 = zext i32 %462 to i64
  %464 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %461, i64 %463
  %465 = getelementptr inbounds i8, ptr %464, i64 16
  %466 = getelementptr inbounds i8, ptr %464, i64 8
  %467 = load ptr, ptr %465, align 8, !tbaa !21
  %468 = icmp eq ptr %467, null
  br i1 %468, label %480, label %469

469:                                              ; preds = %460, %469
  %470 = phi ptr [ %477, %469 ], [ %467, %460 ]
  %471 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %470, i64 0, i32 1
  %472 = load i32, ptr %471, align 4, !tbaa !22
  %473 = icmp ugt i32 %472, %234
  %474 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %470, i64 0, i32 2
  %475 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %470, i64 0, i32 3
  %476 = select i1 %473, ptr %474, ptr %475
  %477 = load ptr, ptr %476, align 8, !tbaa !21
  %478 = icmp eq ptr %477, null
  br i1 %478, label %479, label %469

479:                                              ; preds = %469
  br i1 %473, label %480, label %489

480:                                              ; preds = %479, %460
  %481 = phi ptr [ %470, %479 ], [ %466, %460 ]
  %482 = getelementptr inbounds i8, ptr %464, i64 24
  %483 = load ptr, ptr %482, align 8, !tbaa !457
  %484 = icmp eq ptr %481, %483
  br i1 %484, label %493, label %485

485:                                              ; preds = %480
  %486 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %481) #26
  %487 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %486, i64 0, i32 1
  %488 = load i32, ptr %487, align 4, !tbaa !22
  br label %489

489:                                              ; preds = %485, %479
  %490 = phi i32 [ %488, %485 ], [ %472, %479 ]
  %491 = phi ptr [ %481, %485 ], [ %470, %479 ]
  %492 = icmp ult i32 %490, %234
  br i1 %492, label %493, label %508

493:                                              ; preds = %489, %480
  %494 = phi ptr [ %481, %480 ], [ %491, %489 ]
  %495 = icmp eq ptr %466, %494
  br i1 %495, label %500, label %496

496:                                              ; preds = %493
  %497 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %494, i64 0, i32 1
  %498 = load i32, ptr %497, align 4, !tbaa !22
  %499 = icmp ugt i32 %498, %234
  br label %500

500:                                              ; preds = %496, %493
  %501 = phi i1 [ true, %493 ], [ %499, %496 ]
  %502 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %503 unwind label %511

503:                                              ; preds = %500
  %504 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %502, i64 0, i32 1
  store i32 %234, ptr %504, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %501, ptr noundef nonnull %502, ptr noundef nonnull %494, ptr noundef nonnull align 8 dereferenceable(32) %466) #24
  %505 = getelementptr inbounds i8, ptr %464, i64 40
  %506 = load i64, ptr %505, align 8, !tbaa !458
  %507 = add i64 %506, 1
  store i64 %507, ptr %505, align 8, !tbaa !458
  br label %508

508:                                              ; preds = %503, %489
  %509 = add nuw nsw i64 %407, 1
  %510 = icmp eq i64 %509, %212
  br i1 %510, label %562, label %406

511:                                              ; preds = %500, %448
  %512 = landingpad { ptr, i32 }
          cleanup
  br label %587

513:                                              ; preds = %242
  %514 = zext i32 %234 to i64
  %515 = load ptr, ptr %210, align 8, !tbaa !455
  %516 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %515, i64 %514
  %517 = getelementptr inbounds i8, ptr %516, i64 16
  %518 = getelementptr inbounds i8, ptr %516, i64 8
  %519 = load ptr, ptr %517, align 8, !tbaa !21
  %520 = icmp eq ptr %519, null
  br i1 %520, label %532, label %521

521:                                              ; preds = %513, %521
  %522 = phi ptr [ %529, %521 ], [ %519, %513 ]
  %523 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %522, i64 0, i32 1
  %524 = load i32, ptr %523, align 4, !tbaa !22
  %525 = icmp ugt i32 %524, %234
  %526 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %522, i64 0, i32 2
  %527 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %522, i64 0, i32 3
  %528 = select i1 %525, ptr %526, ptr %527
  %529 = load ptr, ptr %528, align 8, !tbaa !21
  %530 = icmp eq ptr %529, null
  br i1 %530, label %531, label %521

531:                                              ; preds = %521
  br i1 %525, label %532, label %541

532:                                              ; preds = %531, %513
  %533 = phi ptr [ %522, %531 ], [ %518, %513 ]
  %534 = getelementptr inbounds i8, ptr %516, i64 24
  %535 = load ptr, ptr %534, align 8, !tbaa !457
  %536 = icmp eq ptr %533, %535
  br i1 %536, label %545, label %537

537:                                              ; preds = %532
  %538 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %533) #26
  %539 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %538, i64 0, i32 1
  %540 = load i32, ptr %539, align 4, !tbaa !22
  br label %541

541:                                              ; preds = %537, %531
  %542 = phi i32 [ %540, %537 ], [ %524, %531 ]
  %543 = phi ptr [ %533, %537 ], [ %522, %531 ]
  %544 = icmp ult i32 %542, %234
  br i1 %544, label %545, label %562

545:                                              ; preds = %541, %532
  %546 = phi ptr [ %533, %532 ], [ %543, %541 ]
  %547 = icmp eq ptr %518, %546
  br i1 %547, label %552, label %548

548:                                              ; preds = %545
  %549 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %546, i64 0, i32 1
  %550 = load i32, ptr %549, align 4, !tbaa !22
  %551 = icmp ugt i32 %550, %234
  br label %552

552:                                              ; preds = %548, %545
  %553 = phi i1 [ true, %545 ], [ %551, %548 ]
  %554 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %555 unwind label %560

555:                                              ; preds = %552
  %556 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %554, i64 0, i32 1
  store i32 %234, ptr %556, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %553, ptr noundef nonnull %554, ptr noundef nonnull %546, ptr noundef nonnull align 8 dereferenceable(32) %518) #24
  %557 = getelementptr inbounds i8, ptr %516, i64 40
  %558 = load i64, ptr %557, align 8, !tbaa !458
  %559 = add i64 %558, 1
  store i64 %559, ptr %557, align 8, !tbaa !458
  br label %562

560:                                              ; preds = %552
  %561 = landingpad { ptr, i32 }
          cleanup
  br label %587

562:                                              ; preds = %508, %243, %555, %541
  %563 = add nuw nsw i64 %228, 1
  %564 = icmp eq i64 %563, %211
  br i1 %564, label %213, label %227

565:                                              ; preds = %577, %213
  %566 = icmp eq ptr %51, null
  br i1 %566, label %582, label %567

567:                                              ; preds = %565
  call void @_ZdlPv(ptr noundef nonnull %51) #23
  br label %582

568:                                              ; preds = %221, %577
  %569 = phi i64 [ 0, %221 ], [ %578, %577 ]
  %570 = load ptr, ptr %7, align 8, !tbaa !21
  %571 = getelementptr inbounds i32, ptr %570, i64 %569
  %572 = load i32, ptr %571, align 4, !tbaa !22
  %573 = load ptr, ptr %35, align 8, !tbaa !21
  %574 = zext i32 %572 to i64
  %575 = load ptr, ptr %223, align 8, !tbaa !455
  %576 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %575, i64 %574
  invoke void @_ZNSt3setIjSt4lessIjESaIjEE6insertIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjS2_EEEEEvT_SB_(ptr noundef nonnull align 8 dereferenceable(48) %576, ptr nonnull %570, ptr %573)
          to label %577 unwind label %580

577:                                              ; preds = %568
  %578 = add nuw nsw i64 %569, 1
  %579 = icmp eq i64 %578, %224
  br i1 %579, label %565, label %568

580:                                              ; preds = %568
  %581 = landingpad { ptr, i32 }
          cleanup
  br label %587

582:                                              ; preds = %567, %565
  %583 = load ptr, ptr %7, align 8, !tbaa !58
  %584 = icmp eq ptr %583, null
  br i1 %584, label %586, label %585

585:                                              ; preds = %582
  call void @_ZdlPv(ptr noundef nonnull %583) #23
  br label %586

586:                                              ; preds = %582, %585
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  br label %1383

587:                                              ; preds = %392, %394, %299, %301, %184, %186, %580, %560, %511, %225
  %588 = phi ptr [ %51, %225 ], [ %51, %580 ], [ %51, %511 ], [ %51, %560 ], [ %75, %184 ], [ %75, %186 ], [ %51, %301 ], [ %51, %299 ], [ %51, %394 ], [ %51, %392 ]
  %589 = phi { ptr, i32 } [ %226, %225 ], [ %581, %580 ], [ %512, %511 ], [ %561, %560 ], [ %185, %184 ], [ %187, %186 ], [ %302, %301 ], [ %300, %299 ], [ %395, %394 ], [ %393, %392 ]
  %590 = icmp eq ptr %588, null
  br i1 %590, label %592, label %591

591:                                              ; preds = %587
  call void @_ZdlPv(ptr noundef nonnull %588) #23
  br label %592

592:                                              ; preds = %591, %587
  %593 = load ptr, ptr %7, align 8, !tbaa !58
  %594 = icmp eq ptr %593, null
  br i1 %594, label %596, label %595

595:                                              ; preds = %592
  call void @_ZdlPv(ptr noundef nonnull %593) #23
  br label %596

596:                                              ; preds = %595, %592, %70
  %597 = phi { ptr, i32 } [ %71, %70 ], [ %589, %592 ], [ %589, %595 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  br label %1392

598:                                              ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #24
  store i32 -1, ptr %9, align 8, !tbaa !317
  %599 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %599, align 4, !tbaa !319
  %600 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %600, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  %601 = icmp eq i64 %22, 0
  br i1 %601, label %602, label %604

602:                                              ; preds = %598
  %603 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  br label %647

604:                                              ; preds = %598
  %605 = shl nuw nsw i64 %22, 4
  %606 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %605) #21
          to label %607 unwind label %697

607:                                              ; preds = %604
  store ptr %606, ptr %8, align 8, !tbaa !321
  %608 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %606, i64 %22
  %609 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 2
  store ptr %608, ptr %609, align 8, !tbaa !323
  %610 = and i64 %17, 3
  %611 = icmp eq i64 %610, 0
  br i1 %611, label %622, label %612

612:                                              ; preds = %607, %612
  %613 = phi ptr [ %619, %612 ], [ %606, %607 ]
  %614 = phi i64 [ %618, %612 ], [ %22, %607 ]
  %615 = phi i64 [ %620, %612 ], [ 0, %607 ]
  %616 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %613, i64 0, i32 2
  store ptr null, ptr %616, align 8, !tbaa !320
  store i32 -1, ptr %613, align 8, !tbaa !317
  %617 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %613, i64 0, i32 1
  store i32 -1, ptr %617, align 4, !tbaa !319
  %618 = add nsw i64 %614, -1
  %619 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %613, i64 1
  %620 = add i64 %615, 1
  %621 = icmp eq i64 %620, %610
  br i1 %621, label %622, label %612, !llvm.loop !459

622:                                              ; preds = %612, %607
  %623 = phi ptr [ undef, %607 ], [ %619, %612 ]
  %624 = phi ptr [ %606, %607 ], [ %619, %612 ]
  %625 = phi i64 [ %22, %607 ], [ %618, %612 ]
  %626 = icmp ult i64 %22, 4
  br i1 %626, label %644, label %627

627:                                              ; preds = %622, %627
  %628 = phi ptr [ %642, %627 ], [ %624, %622 ]
  %629 = phi i64 [ %641, %627 ], [ %625, %622 ]
  %630 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %628, i64 0, i32 2
  store ptr null, ptr %630, align 8, !tbaa !320
  store i32 -1, ptr %628, align 8, !tbaa !317
  %631 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %628, i64 0, i32 1
  store i32 -1, ptr %631, align 4, !tbaa !319
  %632 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %628, i64 1
  %633 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %628, i64 1, i32 2
  store ptr null, ptr %633, align 8, !tbaa !320
  store i32 -1, ptr %632, align 8, !tbaa !317
  %634 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %628, i64 1, i32 1
  store i32 -1, ptr %634, align 4, !tbaa !319
  %635 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %628, i64 2
  %636 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %628, i64 2, i32 2
  store ptr null, ptr %636, align 8, !tbaa !320
  store i32 -1, ptr %635, align 8, !tbaa !317
  %637 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %628, i64 2, i32 1
  store i32 -1, ptr %637, align 4, !tbaa !319
  %638 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %628, i64 3
  %639 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %628, i64 3, i32 2
  store ptr null, ptr %639, align 8, !tbaa !320
  store i32 -1, ptr %638, align 8, !tbaa !317
  %640 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %628, i64 3, i32 1
  store i32 -1, ptr %640, align 4, !tbaa !319
  %641 = add nsw i64 %629, -4
  %642 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %628, i64 4
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %644, label %627

644:                                              ; preds = %627, %622
  %645 = phi ptr [ %623, %622 ], [ %642, %627 ]
  %646 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  store ptr %645, ptr %646, align 8, !tbaa !325
  br label %647

647:                                              ; preds = %644, %602
  %648 = phi ptr [ null, %602 ], [ %606, %644 ]
  %649 = phi ptr [ null, %602 ], [ %645, %644 ]
  %650 = phi ptr [ %603, %602 ], [ %646, %644 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #24
  %651 = icmp eq i32 %18, 0
  br i1 %651, label %662, label %652

652:                                              ; preds = %647
  %653 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %654 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %655 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %656 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %657 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %658 = and i64 %17, 4294967295
  br label %700

659:                                              ; preds = %807
  %660 = load ptr, ptr %650, align 8, !tbaa !21
  %661 = load ptr, ptr %8, align 8, !tbaa !321
  br label %662

662:                                              ; preds = %659, %647
  %663 = phi ptr [ %648, %647 ], [ %661, %659 ]
  %664 = phi ptr [ %649, %647 ], [ %660, %659 ]
  %665 = phi ptr [ null, %647 ], [ %809, %659 ]
  %666 = phi ptr [ null, %647 ], [ %810, %659 ]
  %667 = phi i32 [ 0, %647 ], [ %811, %659 ]
  %668 = zext i32 %667 to i64
  store i32 -1, ptr %10, align 8, !tbaa !317
  %669 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %10, i64 0, i32 1
  store i32 -1, ptr %669, align 4, !tbaa !319
  %670 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %10, i64 0, i32 2
  store ptr null, ptr %670, align 8, !tbaa !320
  %671 = ptrtoint ptr %664 to i64
  %672 = ptrtoint ptr %663 to i64
  %673 = sub i64 %671, %672
  %674 = ashr exact i64 %673, 4
  %675 = icmp ult i64 %674, %668
  br i1 %675, label %676, label %678

676:                                              ; preds = %662
  %677 = sub nsw i64 %668, %674
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr %664, i64 noundef %677, ptr noundef nonnull align 8 dereferenceable(16) %10)
          to label %818 unwind label %909

678:                                              ; preds = %662
  %679 = icmp ugt i64 %674, %668
  br i1 %679, label %680, label %818

680:                                              ; preds = %678
  %681 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %663, i64 %668
  %682 = icmp eq ptr %664, %681
  br i1 %682, label %818, label %683

683:                                              ; preds = %680, %693
  %684 = phi ptr [ %694, %693 ], [ %681, %680 ]
  %685 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %684, i64 0, i32 2
  %686 = load ptr, ptr %685, align 8, !tbaa !320
  %687 = icmp eq ptr %686, null
  br i1 %687, label %693, label %688

688:                                              ; preds = %683
  %689 = load ptr, ptr %686, align 8, !tbaa !32
  %690 = icmp eq ptr %689, null
  br i1 %690, label %692, label %691

691:                                              ; preds = %688
  tail call void @_ZdlPv(ptr noundef nonnull %689) #23
  br label %692

692:                                              ; preds = %691, %688
  tail call void @_ZdlPv(ptr noundef nonnull %686) #23
  store ptr null, ptr %685, align 8, !tbaa !320
  br label %693

693:                                              ; preds = %692, %683
  %694 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %684, i64 1
  %695 = icmp eq ptr %694, %664
  br i1 %695, label %696, label %683

696:                                              ; preds = %693
  store ptr %681, ptr %650, align 8, !tbaa !325
  br label %818

697:                                              ; preds = %604
  %698 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %699 unwind label %1394

699:                                              ; preds = %697
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #24
  br label %1390

700:                                              ; preds = %652, %807
  %701 = phi i64 [ 0, %652 ], [ %812, %807 ]
  %702 = phi i32 [ 0, %652 ], [ %811, %807 ]
  %703 = phi ptr [ null, %652 ], [ %810, %807 ]
  %704 = phi ptr [ null, %652 ], [ %809, %807 ]
  %705 = phi ptr [ null, %652 ], [ %808, %807 ]
  %706 = load ptr, ptr %654, align 8, !tbaa !55
  %707 = load i32, ptr %655, align 8, !tbaa !57
  %708 = load ptr, ptr %653, align 8, !tbaa !55
  %709 = ptrtoint ptr %706 to i64
  %710 = ptrtoint ptr %708 to i64
  %711 = sub i64 %709, %710
  %712 = shl nsw i64 %711, 3
  %713 = zext i32 %707 to i64
  %714 = add nsw i64 %712, %713
  %715 = load ptr, ptr %1, align 8, !tbaa !58
  %716 = getelementptr inbounds i32, ptr %715, i64 %701
  %717 = load i32, ptr %716, align 4, !tbaa !22
  %718 = zext i32 %717 to i64
  %719 = icmp ugt i64 %714, %718
  br i1 %719, label %720, label %730

720:                                              ; preds = %700
  %721 = lshr i32 %717, 6
  %722 = zext i32 %721 to i64
  %723 = getelementptr inbounds i64, ptr %708, i64 %722
  %724 = and i32 %717, 63
  %725 = zext i32 %724 to i64
  %726 = shl nuw i64 1, %725
  %727 = load i64, ptr %723, align 8, !tbaa !42
  %728 = and i64 %727, %726
  %729 = icmp eq i64 %728, 0
  br i1 %729, label %730, label %737

730:                                              ; preds = %720, %700
  %731 = zext i32 %702 to i64
  %732 = load ptr, ptr %8, align 8, !tbaa !321
  %733 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %732, i64 %731
  store i32 %717, ptr %733, align 8, !tbaa !317
  %734 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %732, i64 %731, i32 1
  %735 = trunc i64 %701 to i32
  store i32 %735, ptr %734, align 4, !tbaa !319
  %736 = add i32 %702, 1
  br label %807

737:                                              ; preds = %720
  %738 = load ptr, ptr %656, align 8, !tbaa !21
  %739 = load ptr, ptr %657, align 8, !tbaa !21
  %740 = ptrtoint ptr %739 to i64
  %741 = ptrtoint ptr %738 to i64
  %742 = sub i64 %740, %741
  %743 = icmp sgt i64 %742, 0
  br i1 %743, label %744, label %759

744:                                              ; preds = %737
  %745 = udiv exact i64 %742, 40
  br label %746

746:                                              ; preds = %746, %744
  %747 = phi i64 [ %745, %744 ], [ %757, %746 ]
  %748 = phi ptr [ %738, %744 ], [ %756, %746 ]
  %749 = lshr i64 %747, 1
  %750 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %748, i64 %749
  %751 = load i32, ptr %750, align 8, !tbaa !24
  %752 = icmp ult i32 %751, %717
  %753 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %750, i64 1
  %754 = xor i64 %749, -1
  %755 = add nsw i64 %747, %754
  %756 = select i1 %752, ptr %753, ptr %748
  %757 = select i1 %752, i64 %755, i64 %749
  %758 = icmp sgt i64 %757, 0
  br i1 %758, label %746, label %759

759:                                              ; preds = %746, %737
  %760 = phi ptr [ %738, %737 ], [ %756, %746 ]
  %761 = icmp eq ptr %704, %705
  br i1 %761, label %765, label %762

762:                                              ; preds = %759
  %763 = trunc i64 %701 to i32
  store i32 %763, ptr %704, align 8
  %764 = getelementptr inbounds i8, ptr %704, i64 8
  store ptr %760, ptr %764, align 8
  br label %802

765:                                              ; preds = %759
  %766 = ptrtoint ptr %704 to i64
  %767 = ptrtoint ptr %703 to i64
  %768 = sub i64 %766, %767
  %769 = icmp eq i64 %768, 9223372036854775792
  br i1 %769, label %770, label %772

770:                                              ; preds = %765
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %771 unwind label %816

771:                                              ; preds = %770
  unreachable

772:                                              ; preds = %765
  %773 = ashr exact i64 %768, 4
  %774 = tail call i64 @llvm.umax.i64(i64 %773, i64 1)
  %775 = add i64 %774, %773
  %776 = icmp ult i64 %775, %773
  %777 = icmp ugt i64 %775, 576460752303423487
  %778 = or i1 %776, %777
  %779 = select i1 %778, i64 576460752303423487, i64 %775
  %780 = icmp eq i64 %779, 0
  br i1 %780, label %784, label %781

781:                                              ; preds = %772
  %782 = shl nuw nsw i64 %779, 4
  %783 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %782) #21
          to label %784 unwind label %814

784:                                              ; preds = %781, %772
  %785 = phi ptr [ null, %772 ], [ %783, %781 ]
  %786 = getelementptr inbounds %"struct.std::pair.188", ptr %785, i64 %773
  %787 = trunc i64 %701 to i32
  store i32 %787, ptr %786, align 8
  %788 = getelementptr inbounds i8, ptr %786, i64 8
  store ptr %760, ptr %788, align 8
  %789 = icmp eq ptr %703, %704
  br i1 %789, label %796, label %790

790:                                              ; preds = %784, %790
  %791 = phi ptr [ %794, %790 ], [ %785, %784 ]
  %792 = phi ptr [ %793, %790 ], [ %703, %784 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %791, ptr noundef nonnull align 8 dereferenceable(16) %792, i64 16, i1 false)
  %793 = getelementptr inbounds %"struct.std::pair.188", ptr %792, i64 1
  %794 = getelementptr inbounds %"struct.std::pair.188", ptr %791, i64 1
  %795 = icmp eq ptr %793, %704
  br i1 %795, label %796, label %790

796:                                              ; preds = %790, %784
  %797 = phi ptr [ %785, %784 ], [ %794, %790 ]
  %798 = icmp eq ptr %703, null
  br i1 %798, label %800, label %799

799:                                              ; preds = %796
  tail call void @_ZdlPv(ptr noundef nonnull %703) #23
  br label %800

800:                                              ; preds = %799, %796
  %801 = getelementptr inbounds %"struct.std::pair.188", ptr %785, i64 %779
  br label %802

802:                                              ; preds = %800, %762
  %803 = phi ptr [ %801, %800 ], [ %705, %762 ]
  %804 = phi ptr [ %797, %800 ], [ %704, %762 ]
  %805 = phi ptr [ %785, %800 ], [ %703, %762 ]
  %806 = getelementptr inbounds %"struct.std::pair.188", ptr %804, i64 1
  br label %807

807:                                              ; preds = %802, %730
  %808 = phi ptr [ %803, %802 ], [ %705, %730 ]
  %809 = phi ptr [ %806, %802 ], [ %704, %730 ]
  %810 = phi ptr [ %805, %802 ], [ %703, %730 ]
  %811 = phi i32 [ %702, %802 ], [ %736, %730 ]
  %812 = add nuw nsw i64 %701, 1
  %813 = icmp eq i64 %812, %658
  br i1 %813, label %659, label %700

814:                                              ; preds = %781
  %815 = landingpad { ptr, i32 }
          cleanup
  br label %1384

816:                                              ; preds = %770
  %817 = landingpad { ptr, i32 }
          cleanup
  br label %1384

818:                                              ; preds = %696, %680, %678, %676
  %819 = load ptr, ptr %670, align 8, !tbaa !320
  %820 = icmp eq ptr %819, null
  br i1 %820, label %826, label %821

821:                                              ; preds = %818
  %822 = load ptr, ptr %819, align 8, !tbaa !32
  %823 = icmp eq ptr %822, null
  br i1 %823, label %825, label %824

824:                                              ; preds = %821
  call void @_ZdlPv(ptr noundef nonnull %822) #23
  br label %825

825:                                              ; preds = %824, %821
  call void @_ZdlPv(ptr noundef nonnull %819) #23
  store ptr null, ptr %670, align 8, !tbaa !320
  br label %826

826:                                              ; preds = %825, %818
  %827 = load ptr, ptr %650, align 8, !tbaa !325
  %828 = load ptr, ptr %8, align 8, !tbaa !321
  %829 = ptrtoint ptr %827 to i64
  %830 = ptrtoint ptr %828 to i64
  %831 = sub i64 %829, %830
  %832 = lshr exact i64 %831, 4
  %833 = trunc i64 %832 to i32
  %834 = icmp ult i32 %833, 2
  br i1 %834, label %880, label %837

835:                                              ; preds = %876, %837
  %836 = icmp ult i32 %838, 4
  br i1 %836, label %880, label %837

837:                                              ; preds = %826, %835
  %838 = phi i32 [ %839, %835 ], [ %833, %826 ]
  %839 = lshr i32 %838, 1
  %840 = icmp ult i32 %839, %833
  br i1 %840, label %841, label %835

841:                                              ; preds = %837
  %842 = zext i32 %839 to i64
  br label %843

843:                                              ; preds = %876, %841
  %844 = phi i64 [ %842, %841 ], [ %877, %876 ]
  %845 = sub nuw nsw i64 %844, %842
  %846 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %828, i64 %844
  %847 = load <2 x i32>, ptr %846, align 8, !tbaa !22
  %848 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %828, i64 %845
  %849 = load i32, ptr %848, align 8, !tbaa !317
  %850 = extractelement <2 x i32> %847, i64 0
  %851 = icmp ugt i32 %849, %850
  br i1 %851, label %852, label %876

852:                                              ; preds = %843
  %853 = icmp ult i64 %844, %842
  %854 = trunc i64 %844 to i32
  br i1 %853, label %872, label %855

855:                                              ; preds = %852
  %856 = trunc i64 %845 to i32
  br label %857

857:                                              ; preds = %864, %855
  %858 = phi i32 [ %859, %864 ], [ %854, %855 ]
  %859 = phi i32 [ %870, %864 ], [ %856, %855 ]
  %860 = zext i32 %859 to i64
  %861 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %828, i64 %860
  %862 = load i32, ptr %861, align 8, !tbaa !317
  %863 = icmp ugt i32 %862, %850
  br i1 %863, label %864, label %872

864:                                              ; preds = %857
  %865 = zext i32 %858 to i64
  %866 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %828, i64 %865
  store i32 %862, ptr %866, align 8, !tbaa !317
  %867 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %828, i64 %860, i32 1
  %868 = load i32, ptr %867, align 4, !tbaa !319
  %869 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %828, i64 %865, i32 1
  store i32 %868, ptr %869, align 4, !tbaa !319
  %870 = sub i32 %859, %839
  %871 = icmp ult i32 %859, %839
  br i1 %871, label %872, label %857

872:                                              ; preds = %864, %857, %852
  %873 = phi i32 [ %854, %852 ], [ %858, %857 ], [ %859, %864 ]
  %874 = zext i32 %873 to i64
  %875 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %828, i64 %874
  store <2 x i32> %847, ptr %875, align 8, !tbaa !22
  br label %876

876:                                              ; preds = %872, %843
  %877 = add nuw nsw i64 %844, 1
  %878 = trunc i64 %877 to i32
  %879 = icmp eq i32 %833, %878
  br i1 %879, label %835, label %843

880:                                              ; preds = %835, %826
  %881 = ptrtoint ptr %665 to i64
  %882 = ptrtoint ptr %666 to i64
  %883 = sub i64 %881, %882
  %884 = and i64 %883, 68719476720
  %885 = icmp eq i64 %884, 0
  br i1 %885, label %899, label %886

886:                                              ; preds = %880
  %887 = lshr exact i64 %883, 4
  %888 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %2, i64 0, i32 3
  %889 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %890 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %891 = and i64 %887, 4294967295
  %892 = and i64 %17, 4294967295
  br label %911

893:                                              ; preds = %1127
  %894 = load ptr, ptr %650, align 8, !tbaa !325
  %895 = load ptr, ptr %8, align 8, !tbaa !321
  %896 = ptrtoint ptr %894 to i64
  %897 = ptrtoint ptr %895 to i64
  %898 = sub i64 %896, %897
  br label %899

899:                                              ; preds = %893, %880
  %900 = phi i64 [ %898, %893 ], [ %831, %880 ]
  %901 = phi i8 [ %928, %893 ], [ 0, %880 ]
  %902 = ashr exact i64 %900, 4
  %903 = and i64 %902, 4294967295
  %904 = icmp eq i64 %903, 0
  br i1 %904, label %1130, label %905

905:                                              ; preds = %899
  %906 = shl nuw nsw i64 %903, 2
  %907 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %906) #21
          to label %908 unwind label %1148

908:                                              ; preds = %905
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %907, i8 0, i64 %906, i1 false), !tbaa !22
  br label %1130

909:                                              ; preds = %676
  %910 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %10)
          to label %1384 unwind label %1394

911:                                              ; preds = %886, %1127
  %912 = phi i64 [ 0, %886 ], [ %1128, %1127 ]
  %913 = phi i8 [ 0, %886 ], [ %928, %1127 ]
  %914 = getelementptr inbounds %"struct.std::pair.188", ptr %666, i64 %912
  %915 = load i32, ptr %914, align 8, !tbaa !326
  %916 = zext i32 %915 to i64
  %917 = load ptr, ptr %1, align 8, !tbaa !58
  %918 = getelementptr inbounds i32, ptr %917, i64 %916
  %919 = load i32, ptr %918, align 4, !tbaa !22
  %920 = getelementptr inbounds %"struct.std::pair.188", ptr %666, i64 %912, i32 1
  %921 = load ptr, ptr %920, align 8, !tbaa !328
  %922 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %921, i64 0, i32 1
  %923 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %921, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %924 = load ptr, ptr %923, align 8, !tbaa !31
  %925 = load ptr, ptr %922, align 8, !tbaa !32
  %926 = icmp eq ptr %924, %925
  br i1 %926, label %927, label %932

927:                                              ; preds = %940, %911
  %928 = phi i8 [ %913, %911 ], [ 1, %940 ]
  br i1 %3, label %929, label %1078

929:                                              ; preds = %927
  br i1 %651, label %1127, label %930

930:                                              ; preds = %929
  %931 = zext i32 %919 to i64
  br label %952

932:                                              ; preds = %911, %940
  %933 = phi ptr [ %944, %940 ], [ %925, %911 ]
  %934 = phi i64 [ %942, %940 ], [ 0, %911 ]
  %935 = phi i32 [ %941, %940 ], [ 0, %911 ]
  %936 = getelementptr inbounds %"struct.std::pair", ptr %933, i64 %934
  %937 = load i32, ptr %936, align 8, !tbaa !37
  %938 = getelementptr inbounds %"struct.std::pair", ptr %933, i64 %934, i32 1
  %939 = load double, ptr %938, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %8, i32 noundef %937, i32 %915, double %939)
          to label %940 unwind label %950

940:                                              ; preds = %932
  %941 = add i32 %935, 1
  %942 = zext i32 %941 to i64
  %943 = load ptr, ptr %923, align 8, !tbaa !31
  %944 = load ptr, ptr %922, align 8, !tbaa !32
  %945 = ptrtoint ptr %943 to i64
  %946 = ptrtoint ptr %944 to i64
  %947 = sub i64 %945, %946
  %948 = ashr exact i64 %947, 4
  %949 = icmp ugt i64 %948, %942
  br i1 %949, label %932, label %927

950:                                              ; preds = %932
  %951 = landingpad { ptr, i32 }
          cleanup
  br label %1384

952:                                              ; preds = %930, %1075
  %953 = phi i64 [ 0, %930 ], [ %1076, %1075 ]
  %954 = load ptr, ptr %889, align 8, !tbaa !422, !noalias !73
  %955 = load i32, ptr %890, align 8, !tbaa !22, !noalias !73
  %956 = mul i32 %955, %915
  %957 = zext i32 %956 to i64
  %958 = getelementptr inbounds i8, ptr %954, i64 %957
  %959 = getelementptr inbounds i8, ptr %958, i64 %953
  %960 = load i8, ptr %959, align 1, !tbaa !424, !range !425, !noundef !73
  %961 = icmp eq i8 %960, 0
  br i1 %961, label %1015, label %962

962:                                              ; preds = %952
  %963 = load ptr, ptr %1, align 8, !tbaa !58
  %964 = getelementptr inbounds i32, ptr %963, i64 %953
  %965 = load i32, ptr %964, align 4, !tbaa !22
  %966 = load ptr, ptr %888, align 8, !tbaa !455
  %967 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %966, i64 %931
  %968 = getelementptr inbounds i8, ptr %967, i64 16
  %969 = getelementptr inbounds i8, ptr %967, i64 8
  %970 = load ptr, ptr %968, align 8, !tbaa !21
  %971 = icmp eq ptr %970, null
  br i1 %971, label %983, label %972

972:                                              ; preds = %962, %972
  %973 = phi ptr [ %980, %972 ], [ %970, %962 ]
  %974 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %973, i64 0, i32 1
  %975 = load i32, ptr %974, align 4, !tbaa !22
  %976 = icmp ugt i32 %975, %965
  %977 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %973, i64 0, i32 2
  %978 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %973, i64 0, i32 3
  %979 = select i1 %976, ptr %977, ptr %978
  %980 = load ptr, ptr %979, align 8, !tbaa !21
  %981 = icmp eq ptr %980, null
  br i1 %981, label %982, label %972

982:                                              ; preds = %972
  br i1 %976, label %983, label %992

983:                                              ; preds = %982, %962
  %984 = phi ptr [ %973, %982 ], [ %969, %962 ]
  %985 = getelementptr inbounds i8, ptr %967, i64 24
  %986 = load ptr, ptr %985, align 8, !tbaa !457
  %987 = icmp eq ptr %984, %986
  br i1 %987, label %996, label %988

988:                                              ; preds = %983
  %989 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %984) #26
  %990 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %989, i64 0, i32 1
  %991 = load i32, ptr %990, align 4, !tbaa !22
  br label %992

992:                                              ; preds = %988, %982
  %993 = phi i32 [ %991, %988 ], [ %975, %982 ]
  %994 = phi ptr [ %984, %988 ], [ %973, %982 ]
  %995 = icmp ult i32 %993, %965
  br i1 %995, label %996, label %1015

996:                                              ; preds = %992, %983
  %997 = phi ptr [ %984, %983 ], [ %994, %992 ]
  %998 = icmp eq ptr %969, %997
  br i1 %998, label %1003, label %999

999:                                              ; preds = %996
  %1000 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %997, i64 0, i32 1
  %1001 = load i32, ptr %1000, align 4, !tbaa !22
  %1002 = icmp ugt i32 %1001, %965
  br label %1003

1003:                                             ; preds = %999, %996
  %1004 = phi i1 [ true, %996 ], [ %1002, %999 ]
  %1005 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %1006 unwind label %1013

1006:                                             ; preds = %1003
  %1007 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1005, i64 0, i32 1
  store i32 %965, ptr %1007, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %1004, ptr noundef nonnull %1005, ptr noundef nonnull %997, ptr noundef nonnull align 8 dereferenceable(32) %969) #24
  %1008 = getelementptr inbounds i8, ptr %967, i64 40
  %1009 = load i64, ptr %1008, align 8, !tbaa !458
  %1010 = add i64 %1009, 1
  store i64 %1010, ptr %1008, align 8, !tbaa !458
  %1011 = load ptr, ptr %889, align 8, !tbaa !422, !noalias !460
  %1012 = load i32, ptr %890, align 8, !tbaa !22, !noalias !460
  br label %1015

1013:                                             ; preds = %1067, %1003
  %1014 = landingpad { ptr, i32 }
          cleanup
  br label %1384

1015:                                             ; preds = %952, %992, %1006
  %1016 = phi i32 [ %955, %952 ], [ %955, %992 ], [ %1012, %1006 ]
  %1017 = phi ptr [ %954, %952 ], [ %954, %992 ], [ %1011, %1006 ]
  %1018 = trunc i64 %953 to i32
  %1019 = mul i32 %1016, %1018
  %1020 = zext i32 %1019 to i64
  %1021 = getelementptr inbounds i8, ptr %1017, i64 %1020
  %1022 = getelementptr inbounds i8, ptr %1021, i64 %916
  %1023 = load i8, ptr %1022, align 1, !tbaa !424, !range !425, !noundef !73
  %1024 = icmp eq i8 %1023, 0
  br i1 %1024, label %1075, label %1025

1025:                                             ; preds = %1015
  %1026 = load ptr, ptr %1, align 8, !tbaa !58
  %1027 = getelementptr inbounds i32, ptr %1026, i64 %953
  %1028 = load i32, ptr %1027, align 4, !tbaa !22
  %1029 = zext i32 %1028 to i64
  %1030 = load ptr, ptr %888, align 8, !tbaa !455
  %1031 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %1030, i64 %1029
  %1032 = getelementptr inbounds i8, ptr %1031, i64 16
  %1033 = getelementptr inbounds i8, ptr %1031, i64 8
  %1034 = load ptr, ptr %1032, align 8, !tbaa !21
  %1035 = icmp eq ptr %1034, null
  br i1 %1035, label %1047, label %1036

1036:                                             ; preds = %1025, %1036
  %1037 = phi ptr [ %1044, %1036 ], [ %1034, %1025 ]
  %1038 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1037, i64 0, i32 1
  %1039 = load i32, ptr %1038, align 4, !tbaa !22
  %1040 = icmp ugt i32 %1039, %919
  %1041 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1037, i64 0, i32 2
  %1042 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1037, i64 0, i32 3
  %1043 = select i1 %1040, ptr %1041, ptr %1042
  %1044 = load ptr, ptr %1043, align 8, !tbaa !21
  %1045 = icmp eq ptr %1044, null
  br i1 %1045, label %1046, label %1036

1046:                                             ; preds = %1036
  br i1 %1040, label %1047, label %1056

1047:                                             ; preds = %1046, %1025
  %1048 = phi ptr [ %1037, %1046 ], [ %1033, %1025 ]
  %1049 = getelementptr inbounds i8, ptr %1031, i64 24
  %1050 = load ptr, ptr %1049, align 8, !tbaa !457
  %1051 = icmp eq ptr %1048, %1050
  br i1 %1051, label %1060, label %1052

1052:                                             ; preds = %1047
  %1053 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1048) #26
  %1054 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1053, i64 0, i32 1
  %1055 = load i32, ptr %1054, align 4, !tbaa !22
  br label %1056

1056:                                             ; preds = %1052, %1046
  %1057 = phi i32 [ %1055, %1052 ], [ %1039, %1046 ]
  %1058 = phi ptr [ %1048, %1052 ], [ %1037, %1046 ]
  %1059 = icmp ult i32 %1057, %919
  br i1 %1059, label %1060, label %1075

1060:                                             ; preds = %1056, %1047
  %1061 = phi ptr [ %1048, %1047 ], [ %1058, %1056 ]
  %1062 = icmp eq ptr %1033, %1061
  br i1 %1062, label %1067, label %1063

1063:                                             ; preds = %1060
  %1064 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1061, i64 0, i32 1
  %1065 = load i32, ptr %1064, align 4, !tbaa !22
  %1066 = icmp ugt i32 %1065, %919
  br label %1067

1067:                                             ; preds = %1063, %1060
  %1068 = phi i1 [ true, %1060 ], [ %1066, %1063 ]
  %1069 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %1070 unwind label %1013

1070:                                             ; preds = %1067
  %1071 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1069, i64 0, i32 1
  store i32 %919, ptr %1071, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %1068, ptr noundef nonnull %1069, ptr noundef nonnull %1061, ptr noundef nonnull align 8 dereferenceable(32) %1033) #24
  %1072 = getelementptr inbounds i8, ptr %1031, i64 40
  %1073 = load i64, ptr %1072, align 8, !tbaa !458
  %1074 = add i64 %1073, 1
  store i64 %1074, ptr %1072, align 8, !tbaa !458
  br label %1075

1075:                                             ; preds = %1070, %1056, %1015
  %1076 = add nuw nsw i64 %953, 1
  %1077 = icmp eq i64 %1076, %892
  br i1 %1077, label %1127, label %952

1078:                                             ; preds = %927
  %1079 = zext i32 %919 to i64
  %1080 = load ptr, ptr %888, align 8, !tbaa !455
  %1081 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %1080, i64 %1079
  %1082 = getelementptr inbounds i8, ptr %1081, i64 16
  %1083 = getelementptr inbounds i8, ptr %1081, i64 8
  %1084 = load ptr, ptr %1082, align 8, !tbaa !21
  %1085 = icmp eq ptr %1084, null
  br i1 %1085, label %1097, label %1086

1086:                                             ; preds = %1078, %1086
  %1087 = phi ptr [ %1094, %1086 ], [ %1084, %1078 ]
  %1088 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1087, i64 0, i32 1
  %1089 = load i32, ptr %1088, align 4, !tbaa !22
  %1090 = icmp ugt i32 %1089, %919
  %1091 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1087, i64 0, i32 2
  %1092 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1087, i64 0, i32 3
  %1093 = select i1 %1090, ptr %1091, ptr %1092
  %1094 = load ptr, ptr %1093, align 8, !tbaa !21
  %1095 = icmp eq ptr %1094, null
  br i1 %1095, label %1096, label %1086

1096:                                             ; preds = %1086
  br i1 %1090, label %1097, label %1106

1097:                                             ; preds = %1096, %1078
  %1098 = phi ptr [ %1087, %1096 ], [ %1083, %1078 ]
  %1099 = getelementptr inbounds i8, ptr %1081, i64 24
  %1100 = load ptr, ptr %1099, align 8, !tbaa !457
  %1101 = icmp eq ptr %1098, %1100
  br i1 %1101, label %1110, label %1102

1102:                                             ; preds = %1097
  %1103 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1098) #26
  %1104 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1103, i64 0, i32 1
  %1105 = load i32, ptr %1104, align 4, !tbaa !22
  br label %1106

1106:                                             ; preds = %1102, %1096
  %1107 = phi i32 [ %1105, %1102 ], [ %1089, %1096 ]
  %1108 = phi ptr [ %1098, %1102 ], [ %1087, %1096 ]
  %1109 = icmp ult i32 %1107, %919
  br i1 %1109, label %1110, label %1127

1110:                                             ; preds = %1106, %1097
  %1111 = phi ptr [ %1098, %1097 ], [ %1108, %1106 ]
  %1112 = icmp eq ptr %1083, %1111
  br i1 %1112, label %1117, label %1113

1113:                                             ; preds = %1110
  %1114 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1111, i64 0, i32 1
  %1115 = load i32, ptr %1114, align 4, !tbaa !22
  %1116 = icmp ugt i32 %1115, %919
  br label %1117

1117:                                             ; preds = %1113, %1110
  %1118 = phi i1 [ true, %1110 ], [ %1116, %1113 ]
  %1119 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %1120 unwind label %1125

1120:                                             ; preds = %1117
  %1121 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1119, i64 0, i32 1
  store i32 %919, ptr %1121, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %1118, ptr noundef nonnull %1119, ptr noundef nonnull %1111, ptr noundef nonnull align 8 dereferenceable(32) %1083) #24
  %1122 = getelementptr inbounds i8, ptr %1081, i64 40
  %1123 = load i64, ptr %1122, align 8, !tbaa !458
  %1124 = add i64 %1123, 1
  store i64 %1124, ptr %1122, align 8, !tbaa !458
  br label %1127

1125:                                             ; preds = %1117
  %1126 = landingpad { ptr, i32 }
          cleanup
  br label %1384

1127:                                             ; preds = %1075, %929, %1120, %1106
  %1128 = add nuw nsw i64 %912, 1
  %1129 = icmp eq i64 %1128, %891
  br i1 %1129, label %893, label %911

1130:                                             ; preds = %908, %899
  %1131 = phi ptr [ null, %899 ], [ %907, %908 ]
  %1132 = and i64 %900, 68719476720
  %1133 = icmp eq i64 %1132, 0
  br i1 %1133, label %1145, label %1134

1134:                                             ; preds = %1130
  %1135 = and i8 %901, 1
  %1136 = icmp eq i8 %1135, 0
  %1137 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %1138 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %1139 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %2, i64 0, i32 3
  %1140 = and i64 %902, 4294967295
  %1141 = and i64 %902, 1
  %1142 = icmp eq i64 %1140, 1
  %1143 = sub nsw i64 %1140, %1141
  %1144 = icmp eq i64 %1141, 0
  br label %1150

1145:                                             ; preds = %1352, %1130
  %1146 = icmp eq ptr %1131, null
  br i1 %1146, label %1356, label %1147

1147:                                             ; preds = %1145
  call void @_ZdlPv(ptr noundef nonnull %1131) #23
  br label %1356

1148:                                             ; preds = %905
  %1149 = landingpad { ptr, i32 }
          cleanup
  br label %1384

1150:                                             ; preds = %1134, %1352
  %1151 = phi i64 [ 0, %1134 ], [ %1353, %1352 ]
  %1152 = load ptr, ptr %8, align 8, !tbaa !321
  %1153 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1151
  %1154 = load i32, ptr %1153, align 8, !tbaa !317
  %1155 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1151, i32 1
  %1156 = load i32, ptr %1155, align 4, !tbaa !319
  br i1 %1136, label %1161, label %1157

1157:                                             ; preds = %1150
  %1158 = icmp eq i32 %1156, -1
  %1159 = load ptr, ptr %1137, align 8
  %1160 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1151, i32 2
  br label %1203

1161:                                             ; preds = %1150
  %1162 = load ptr, ptr %1137, align 8, !tbaa !422, !noalias !463
  br i1 %1142, label %1323, label %1163

1163:                                             ; preds = %1161, %1198
  %1164 = phi i64 [ %1200, %1198 ], [ 0, %1161 ]
  %1165 = phi ptr [ %1199, %1198 ], [ %1131, %1161 ]
  %1166 = phi i64 [ %1201, %1198 ], [ 0, %1161 ]
  %1167 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1164, i32 1
  %1168 = load i32, ptr %1167, align 4, !tbaa !319
  %1169 = load i32, ptr %1138, align 8, !tbaa !22, !noalias !463
  %1170 = mul i32 %1169, %1156
  %1171 = zext i32 %1170 to i64
  %1172 = getelementptr inbounds i8, ptr %1162, i64 %1171
  %1173 = zext i32 %1168 to i64
  %1174 = getelementptr inbounds i8, ptr %1172, i64 %1173
  %1175 = load i8, ptr %1174, align 1, !tbaa !424, !range !425, !noundef !73
  %1176 = icmp eq i8 %1175, 0
  br i1 %1176, label %1181, label %1177

1177:                                             ; preds = %1163
  %1178 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1164
  %1179 = load i32, ptr %1178, align 8, !tbaa !317
  %1180 = getelementptr inbounds i32, ptr %1165, i64 1
  store i32 %1179, ptr %1165, align 4, !tbaa !22
  br label %1181

1181:                                             ; preds = %1177, %1163
  %1182 = phi ptr [ %1165, %1163 ], [ %1180, %1177 ]
  %1183 = or i64 %1164, 1
  %1184 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1183, i32 1
  %1185 = load i32, ptr %1184, align 4, !tbaa !319
  %1186 = load i32, ptr %1138, align 8, !tbaa !22, !noalias !463
  %1187 = mul i32 %1186, %1156
  %1188 = zext i32 %1187 to i64
  %1189 = getelementptr inbounds i8, ptr %1162, i64 %1188
  %1190 = zext i32 %1185 to i64
  %1191 = getelementptr inbounds i8, ptr %1189, i64 %1190
  %1192 = load i8, ptr %1191, align 1, !tbaa !424, !range !425, !noundef !73
  %1193 = icmp eq i8 %1192, 0
  br i1 %1193, label %1198, label %1194

1194:                                             ; preds = %1181
  %1195 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1183
  %1196 = load i32, ptr %1195, align 8, !tbaa !317
  %1197 = getelementptr inbounds i32, ptr %1182, i64 1
  store i32 %1196, ptr %1182, align 4, !tbaa !22
  br label %1198

1198:                                             ; preds = %1194, %1181
  %1199 = phi ptr [ %1182, %1181 ], [ %1197, %1194 ]
  %1200 = add nuw nsw i64 %1164, 2
  %1201 = add i64 %1166, 2
  %1202 = icmp eq i64 %1201, %1143
  br i1 %1202, label %1323, label %1163

1203:                                             ; preds = %1157, %1319
  %1204 = phi i64 [ 0, %1157 ], [ %1321, %1319 ]
  %1205 = phi ptr [ %1131, %1157 ], [ %1320, %1319 ]
  %1206 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1204
  %1207 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1204, i32 1
  %1208 = load i32, ptr %1207, align 4, !tbaa !319
  br i1 %1158, label %1251, label %1209

1209:                                             ; preds = %1203
  %1210 = icmp eq i32 %1208, -1
  br i1 %1210, label %1220, label %1211

1211:                                             ; preds = %1209
  %1212 = load i32, ptr %1138, align 8, !tbaa !22, !noalias !466
  %1213 = mul i32 %1212, %1156
  %1214 = zext i32 %1213 to i64
  %1215 = getelementptr inbounds i8, ptr %1159, i64 %1214
  %1216 = zext i32 %1208 to i64
  %1217 = getelementptr inbounds i8, ptr %1215, i64 %1216
  %1218 = load i8, ptr %1217, align 1, !tbaa !424, !range !425, !noundef !73
  %1219 = icmp eq i8 %1218, 0
  br i1 %1219, label %1220, label %1316

1220:                                             ; preds = %1211, %1209
  %1221 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1204, i32 2
  %1222 = load ptr, ptr %1221, align 8, !tbaa !320
  %1223 = icmp eq ptr %1222, null
  br i1 %1223, label %1251, label %1224

1224:                                             ; preds = %1220
  %1225 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1222, i64 0, i32 1
  %1226 = load ptr, ptr %1225, align 8, !tbaa !31
  %1227 = load ptr, ptr %1222, align 8, !tbaa !32
  %1228 = ptrtoint ptr %1226 to i64
  %1229 = ptrtoint ptr %1227 to i64
  %1230 = sub i64 %1228, %1229
  %1231 = ashr exact i64 %1230, 4
  %1232 = icmp eq ptr %1226, %1227
  br i1 %1232, label %1251, label %1233

1233:                                             ; preds = %1224
  %1234 = load i32, ptr %1138, align 8, !tbaa !22, !noalias !469
  %1235 = mul i32 %1234, %1156
  %1236 = zext i32 %1235 to i64
  %1237 = getelementptr inbounds i8, ptr %1159, i64 %1236
  br label %1242

1238:                                             ; preds = %1242
  %1239 = add i32 %1244, 1
  %1240 = zext i32 %1239 to i64
  %1241 = icmp ugt i64 %1231, %1240
  br i1 %1241, label %1242, label %1251

1242:                                             ; preds = %1233, %1238
  %1243 = phi i64 [ 0, %1233 ], [ %1240, %1238 ]
  %1244 = phi i32 [ 0, %1233 ], [ %1239, %1238 ]
  %1245 = getelementptr inbounds %"struct.std::pair", ptr %1227, i64 %1243
  %1246 = load i32, ptr %1245, align 8, !tbaa !37
  %1247 = zext i32 %1246 to i64
  %1248 = getelementptr inbounds i8, ptr %1237, i64 %1247
  %1249 = load i8, ptr %1248, align 1, !tbaa !424, !range !425, !noundef !73
  %1250 = icmp eq i8 %1249, 0
  br i1 %1250, label %1238, label %1316

1251:                                             ; preds = %1238, %1224, %1220, %1203
  %1252 = load ptr, ptr %1160, align 8, !tbaa !320
  %1253 = icmp eq ptr %1252, null
  br i1 %1253, label %1319, label %1254

1254:                                             ; preds = %1251
  %1255 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1252, i64 0, i32 1
  %1256 = load ptr, ptr %1255, align 8, !tbaa !31
  %1257 = load ptr, ptr %1252, align 8, !tbaa !32
  %1258 = ptrtoint ptr %1256 to i64
  %1259 = ptrtoint ptr %1257 to i64
  %1260 = sub i64 %1258, %1259
  %1261 = ashr exact i64 %1260, 4
  %1262 = icmp eq ptr %1256, %1257
  br i1 %1262, label %1319, label %1263

1263:                                             ; preds = %1254
  %1264 = icmp eq i32 %1208, -1
  %1265 = load ptr, ptr %1137, align 8
  %1266 = load i32, ptr %1138, align 8
  %1267 = zext i32 %1208 to i64
  %1268 = getelementptr inbounds i8, ptr %1265, i64 %1267
  %1269 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1204, i32 2
  br label %1270

1270:                                             ; preds = %1263, %1312
  %1271 = phi i64 [ 0, %1263 ], [ %1314, %1312 ]
  %1272 = phi i32 [ 0, %1263 ], [ %1313, %1312 ]
  br i1 %1264, label %1281, label %1273

1273:                                             ; preds = %1270
  %1274 = getelementptr inbounds %"struct.std::pair", ptr %1257, i64 %1271
  %1275 = load i32, ptr %1274, align 8, !tbaa !37
  %1276 = mul i32 %1266, %1275
  %1277 = zext i32 %1276 to i64
  %1278 = getelementptr inbounds i8, ptr %1268, i64 %1277
  %1279 = load i8, ptr %1278, align 1, !tbaa !424, !range !425, !noundef !73
  %1280 = icmp eq i8 %1279, 0
  br i1 %1280, label %1281, label %1316

1281:                                             ; preds = %1273, %1270
  %1282 = load ptr, ptr %1269, align 8, !tbaa !320
  %1283 = icmp eq ptr %1282, null
  br i1 %1283, label %1312, label %1284

1284:                                             ; preds = %1281
  %1285 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1282, i64 0, i32 1
  %1286 = load ptr, ptr %1285, align 8, !tbaa !31
  %1287 = load ptr, ptr %1282, align 8, !tbaa !32
  %1288 = ptrtoint ptr %1286 to i64
  %1289 = ptrtoint ptr %1287 to i64
  %1290 = sub i64 %1288, %1289
  %1291 = ashr exact i64 %1290, 4
  %1292 = icmp eq ptr %1286, %1287
  br i1 %1292, label %1312, label %1293

1293:                                             ; preds = %1284
  %1294 = getelementptr inbounds %"struct.std::pair", ptr %1257, i64 %1271
  %1295 = load i32, ptr %1294, align 8, !tbaa !37
  %1296 = mul i32 %1266, %1295
  %1297 = zext i32 %1296 to i64
  %1298 = getelementptr inbounds i8, ptr %1265, i64 %1297
  br label %1303

1299:                                             ; preds = %1303
  %1300 = add i32 %1305, 1
  %1301 = zext i32 %1300 to i64
  %1302 = icmp ugt i64 %1291, %1301
  br i1 %1302, label %1303, label %1312

1303:                                             ; preds = %1293, %1299
  %1304 = phi i64 [ 0, %1293 ], [ %1301, %1299 ]
  %1305 = phi i32 [ 0, %1293 ], [ %1300, %1299 ]
  %1306 = getelementptr inbounds %"struct.std::pair", ptr %1287, i64 %1304
  %1307 = load i32, ptr %1306, align 8, !tbaa !37
  %1308 = zext i32 %1307 to i64
  %1309 = getelementptr inbounds i8, ptr %1298, i64 %1308
  %1310 = load i8, ptr %1309, align 1, !tbaa !424, !range !425, !noundef !73
  %1311 = icmp eq i8 %1310, 0
  br i1 %1311, label %1299, label %1316

1312:                                             ; preds = %1299, %1284, %1281
  %1313 = add i32 %1272, 1
  %1314 = zext i32 %1313 to i64
  %1315 = icmp ugt i64 %1261, %1314
  br i1 %1315, label %1270, label %1319

1316:                                             ; preds = %1242, %1273, %1303, %1211
  %1317 = load i32, ptr %1206, align 8, !tbaa !317
  %1318 = getelementptr inbounds i32, ptr %1205, i64 1
  store i32 %1317, ptr %1205, align 4, !tbaa !22
  br label %1319

1319:                                             ; preds = %1312, %1254, %1251, %1316
  %1320 = phi ptr [ %1205, %1251 ], [ %1318, %1316 ], [ %1205, %1254 ], [ %1205, %1312 ]
  %1321 = add nuw nsw i64 %1204, 1
  %1322 = icmp eq i64 %1321, %1140
  br i1 %1322, label %1342, label %1203

1323:                                             ; preds = %1198, %1161
  %1324 = phi ptr [ undef, %1161 ], [ %1199, %1198 ]
  %1325 = phi i64 [ 0, %1161 ], [ %1200, %1198 ]
  %1326 = phi ptr [ %1131, %1161 ], [ %1199, %1198 ]
  br i1 %1144, label %1342, label %1327

1327:                                             ; preds = %1323
  %1328 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1325, i32 1
  %1329 = load i32, ptr %1328, align 4, !tbaa !319
  %1330 = load i32, ptr %1138, align 8, !tbaa !22, !noalias !463
  %1331 = mul i32 %1330, %1156
  %1332 = zext i32 %1331 to i64
  %1333 = getelementptr inbounds i8, ptr %1162, i64 %1332
  %1334 = zext i32 %1329 to i64
  %1335 = getelementptr inbounds i8, ptr %1333, i64 %1334
  %1336 = load i8, ptr %1335, align 1, !tbaa !424, !range !425, !noundef !73
  %1337 = icmp eq i8 %1336, 0
  br i1 %1337, label %1342, label %1338

1338:                                             ; preds = %1327
  %1339 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1152, i64 %1325
  %1340 = load i32, ptr %1339, align 8, !tbaa !317
  %1341 = getelementptr inbounds i32, ptr %1326, i64 1
  store i32 %1340, ptr %1326, align 4, !tbaa !22
  br label %1342

1342:                                             ; preds = %1319, %1323, %1338, %1327
  %1343 = phi ptr [ %1324, %1323 ], [ %1326, %1327 ], [ %1341, %1338 ], [ %1320, %1319 ]
  %1344 = icmp eq ptr %1343, %1131
  br i1 %1344, label %1352, label %1345

1345:                                             ; preds = %1342
  %1346 = zext i32 %1154 to i64
  %1347 = load ptr, ptr %1139, align 8, !tbaa !455
  %1348 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %1347, i64 %1346
  invoke void @_ZNSt3setIjSt4lessIjESaIjEE6insertIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjS2_EEEEEvT_SB_(ptr noundef nonnull align 8 dereferenceable(48) %1348, ptr %1131, ptr %1343)
          to label %1352 unwind label %1349

1349:                                             ; preds = %1345
  %1350 = landingpad { ptr, i32 }
          cleanup
  %1351 = icmp eq ptr %1131, null
  br i1 %1351, label %1384, label %1355

1352:                                             ; preds = %1345, %1342
  %1353 = add nuw nsw i64 %1151, 1
  %1354 = icmp eq i64 %1353, %1140
  br i1 %1354, label %1145, label %1150

1355:                                             ; preds = %1349
  call void @_ZdlPv(ptr noundef nonnull %1131) #23
  br label %1384

1356:                                             ; preds = %1147, %1145
  %1357 = icmp eq ptr %666, null
  br i1 %1357, label %1359, label %1358

1358:                                             ; preds = %1356
  call void @_ZdlPv(ptr noundef nonnull %666) #23
  br label %1359

1359:                                             ; preds = %1358, %1356
  %1360 = load ptr, ptr %8, align 8, !tbaa !321
  %1361 = load ptr, ptr %650, align 8, !tbaa !325
  %1362 = icmp eq ptr %1360, %1361
  br i1 %1362, label %1378, label %1363

1363:                                             ; preds = %1359, %1373
  %1364 = phi ptr [ %1374, %1373 ], [ %1360, %1359 ]
  %1365 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1364, i64 0, i32 2
  %1366 = load ptr, ptr %1365, align 8, !tbaa !320
  %1367 = icmp eq ptr %1366, null
  br i1 %1367, label %1373, label %1368

1368:                                             ; preds = %1363
  %1369 = load ptr, ptr %1366, align 8, !tbaa !32
  %1370 = icmp eq ptr %1369, null
  br i1 %1370, label %1372, label %1371

1371:                                             ; preds = %1368
  call void @_ZdlPv(ptr noundef nonnull %1369) #23
  br label %1372

1372:                                             ; preds = %1371, %1368
  call void @_ZdlPv(ptr noundef nonnull %1366) #23
  store ptr null, ptr %1365, align 8, !tbaa !320
  br label %1373

1373:                                             ; preds = %1372, %1363
  %1374 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1364, i64 1
  %1375 = icmp eq ptr %1374, %1361
  br i1 %1375, label %1376, label %1363

1376:                                             ; preds = %1373
  %1377 = load ptr, ptr %8, align 8, !tbaa !321
  br label %1378

1378:                                             ; preds = %1376, %1359
  %1379 = phi ptr [ %1377, %1376 ], [ %1360, %1359 ]
  %1380 = icmp eq ptr %1379, null
  br i1 %1380, label %1382, label %1381

1381:                                             ; preds = %1378
  call void @_ZdlPv(ptr noundef nonnull %1379) #23
  br label %1382

1382:                                             ; preds = %1378, %1381
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #24
  br label %1383

1383:                                             ; preds = %1382, %586
  ret void

1384:                                             ; preds = %814, %816, %1013, %1125, %950, %1355, %1349, %1148, %909
  %1385 = phi ptr [ %666, %909 ], [ %666, %950 ], [ %666, %1125 ], [ %666, %1013 ], [ %666, %1148 ], [ %666, %1349 ], [ %666, %1355 ], [ %703, %814 ], [ %703, %816 ]
  %1386 = phi { ptr, i32 } [ %910, %909 ], [ %951, %950 ], [ %1126, %1125 ], [ %1014, %1013 ], [ %1149, %1148 ], [ %1350, %1349 ], [ %1350, %1355 ], [ %815, %814 ], [ %817, %816 ]
  %1387 = icmp eq ptr %1385, null
  br i1 %1387, label %1389, label %1388

1388:                                             ; preds = %1384
  call void @_ZdlPv(ptr noundef nonnull %1385) #23
  br label %1389

1389:                                             ; preds = %1388, %1384
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %8)
          to label %1390 unwind label %1394

1390:                                             ; preds = %1389, %699
  %1391 = phi { ptr, i32 } [ %1386, %1389 ], [ %698, %699 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #24
  br label %1392

1392:                                             ; preds = %1390, %596
  %1393 = phi { ptr, i32 } [ %597, %596 ], [ %1391, %1390 ]
  resume { ptr, i32 } %1393

1394:                                             ; preds = %1389, %909, %697
  %1395 = landingpad { ptr, i32 }
          catch ptr null
  %1396 = extractvalue { ptr, i32 } %1395, 0
  call void @__clang_call_terminate(ptr %1396) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_31CompressedSimpleSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(104) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_31CompressedSimpleSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(104) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_31CompressedSimpleSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb0EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(104) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::vector.36", align 8
  %14 = alloca %"class.std::vector.178", align 8
  %15 = alloca %"struct.dealii::internals::distributing", align 8
  %16 = alloca %"struct.dealii::internals::distributing", align 8
  %17 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !313
  %19 = load ptr, ptr %1, align 8, !tbaa !58
  %20 = ptrtoint ptr %18 to i64
  %21 = ptrtoint ptr %19 to i64
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 2
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3
  %26 = load i32, ptr %25, align 4, !tbaa !22
  %27 = icmp eq i32 %26, %24
  %28 = and i64 %23, 4294967295
  br i1 %27, label %729, label %29

29:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #24
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  br label %38

32:                                               ; preds = %29
  %33 = shl nuw nsw i64 %28, 2
  %34 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %33) #21
          to label %35 unwind label %76

35:                                               ; preds = %32
  store ptr %34, ptr %13, align 8, !tbaa !58
  %36 = getelementptr inbounds i32, ptr %34, i64 %28
  %37 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %13, i64 0, i32 2
  store ptr %36, ptr %37, align 8, !tbaa !417
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %34, i8 0, i64 %33, i1 false), !tbaa !22
  br label %38

38:                                               ; preds = %35, %31
  %39 = phi ptr [ null, %31 ], [ %34, %35 ]
  %40 = phi ptr [ null, %31 ], [ %36, %35 ]
  %41 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %13, i64 0, i32 1
  store ptr %40, ptr %41, align 8, !tbaa !313
  %42 = icmp eq i32 %24, 0
  br i1 %42, label %53, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %45 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %47 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %49 = and i64 %23, 4294967295
  br label %78

50:                                               ; preds = %183
  %51 = load ptr, ptr %41, align 8, !tbaa !21
  %52 = load ptr, ptr %13, align 8, !tbaa !21
  br label %53

53:                                               ; preds = %50, %38
  %54 = phi ptr [ %39, %38 ], [ %52, %50 ]
  %55 = phi ptr [ %40, %38 ], [ %51, %50 ]
  %56 = phi ptr [ null, %38 ], [ %185, %50 ]
  %57 = phi ptr [ null, %38 ], [ %186, %50 ]
  %58 = phi i32 [ 0, %38 ], [ %187, %50 ]
  %59 = zext i32 %58 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12)
  store i32 0, ptr %12, align 4, !tbaa !22
  %60 = ptrtoint ptr %55 to i64
  %61 = ptrtoint ptr %54 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 2
  %64 = icmp ult i64 %63, %59
  br i1 %64, label %65, label %70

65:                                               ; preds = %53
  %66 = sub nsw i64 %59, %63
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %13, ptr %55, i64 noundef %66, ptr noundef nonnull align 4 dereferenceable(4) %12)
          to label %67 unwind label %231

67:                                               ; preds = %65
  %68 = load ptr, ptr %13, align 8, !tbaa !21
  %69 = load ptr, ptr %41, align 8, !tbaa !21
  br label %194

70:                                               ; preds = %53
  %71 = icmp ugt i64 %63, %59
  br i1 %71, label %72, label %194

72:                                               ; preds = %70
  %73 = getelementptr inbounds i32, ptr %54, i64 %59
  %74 = icmp eq ptr %55, %73
  br i1 %74, label %194, label %75

75:                                               ; preds = %72
  store ptr %73, ptr %41, align 8, !tbaa !313
  br label %194

76:                                               ; preds = %32
  %77 = landingpad { ptr, i32 }
          cleanup
  br label %727

78:                                               ; preds = %43, %183
  %79 = phi i64 [ 0, %43 ], [ %188, %183 ]
  %80 = phi i32 [ 0, %43 ], [ %187, %183 ]
  %81 = phi ptr [ null, %43 ], [ %186, %183 ]
  %82 = phi ptr [ null, %43 ], [ %185, %183 ]
  %83 = phi ptr [ null, %43 ], [ %184, %183 ]
  %84 = load ptr, ptr %45, align 8, !tbaa !55
  %85 = load i32, ptr %46, align 8, !tbaa !57
  %86 = load ptr, ptr %44, align 8, !tbaa !55
  %87 = ptrtoint ptr %84 to i64
  %88 = ptrtoint ptr %86 to i64
  %89 = sub i64 %87, %88
  %90 = shl nsw i64 %89, 3
  %91 = zext i32 %85 to i64
  %92 = add nsw i64 %90, %91
  %93 = load ptr, ptr %1, align 8, !tbaa !58
  %94 = getelementptr inbounds i32, ptr %93, i64 %79
  %95 = load i32, ptr %94, align 4, !tbaa !22
  %96 = zext i32 %95 to i64
  %97 = icmp ugt i64 %92, %96
  br i1 %97, label %98, label %108

98:                                               ; preds = %78
  %99 = lshr i32 %95, 6
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i64, ptr %86, i64 %100
  %102 = and i32 %95, 63
  %103 = zext i32 %102 to i64
  %104 = shl nuw i64 1, %103
  %105 = load i64, ptr %101, align 8, !tbaa !42
  %106 = and i64 %105, %104
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %113

108:                                              ; preds = %98, %78
  %109 = zext i32 %80 to i64
  %110 = load ptr, ptr %13, align 8, !tbaa !58
  %111 = getelementptr inbounds i32, ptr %110, i64 %109
  store i32 %95, ptr %111, align 4, !tbaa !22
  %112 = add i32 %80, 1
  br label %183

113:                                              ; preds = %98
  %114 = load ptr, ptr %47, align 8, !tbaa !21
  %115 = load ptr, ptr %48, align 8, !tbaa !21
  %116 = ptrtoint ptr %115 to i64
  %117 = ptrtoint ptr %114 to i64
  %118 = sub i64 %116, %117
  %119 = icmp sgt i64 %118, 0
  br i1 %119, label %120, label %135

120:                                              ; preds = %113
  %121 = udiv exact i64 %118, 40
  br label %122

122:                                              ; preds = %122, %120
  %123 = phi i64 [ %121, %120 ], [ %133, %122 ]
  %124 = phi ptr [ %114, %120 ], [ %132, %122 ]
  %125 = lshr i64 %123, 1
  %126 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %124, i64 %125
  %127 = load i32, ptr %126, align 8, !tbaa !24
  %128 = icmp ult i32 %127, %95
  %129 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %126, i64 1
  %130 = xor i64 %125, -1
  %131 = add nsw i64 %123, %130
  %132 = select i1 %128, ptr %129, ptr %124
  %133 = select i1 %128, i64 %131, i64 %125
  %134 = icmp sgt i64 %133, 0
  br i1 %134, label %122, label %135

135:                                              ; preds = %122, %113
  %136 = phi ptr [ %114, %113 ], [ %132, %122 ]
  %137 = icmp eq ptr %82, %83
  br i1 %137, label %141, label %138

138:                                              ; preds = %135
  %139 = trunc i64 %79 to i32
  store i32 %139, ptr %82, align 8
  %140 = getelementptr inbounds i8, ptr %82, i64 8
  store ptr %136, ptr %140, align 8
  br label %178

141:                                              ; preds = %135
  %142 = ptrtoint ptr %82 to i64
  %143 = ptrtoint ptr %81 to i64
  %144 = sub i64 %142, %143
  %145 = icmp eq i64 %144, 9223372036854775792
  br i1 %145, label %146, label %148

146:                                              ; preds = %141
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %147 unwind label %192

147:                                              ; preds = %146
  unreachable

148:                                              ; preds = %141
  %149 = ashr exact i64 %144, 4
  %150 = tail call i64 @llvm.umax.i64(i64 %149, i64 1)
  %151 = add i64 %150, %149
  %152 = icmp ult i64 %151, %149
  %153 = icmp ugt i64 %151, 576460752303423487
  %154 = or i1 %152, %153
  %155 = select i1 %154, i64 576460752303423487, i64 %151
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %160, label %157

157:                                              ; preds = %148
  %158 = shl nuw nsw i64 %155, 4
  %159 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %158) #21
          to label %160 unwind label %190

160:                                              ; preds = %157, %148
  %161 = phi ptr [ null, %148 ], [ %159, %157 ]
  %162 = getelementptr inbounds %"struct.std::pair.188", ptr %161, i64 %149
  %163 = trunc i64 %79 to i32
  store i32 %163, ptr %162, align 8
  %164 = getelementptr inbounds i8, ptr %162, i64 8
  store ptr %136, ptr %164, align 8
  %165 = icmp eq ptr %81, %82
  br i1 %165, label %172, label %166

166:                                              ; preds = %160, %166
  %167 = phi ptr [ %170, %166 ], [ %161, %160 ]
  %168 = phi ptr [ %169, %166 ], [ %81, %160 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %167, ptr noundef nonnull align 8 dereferenceable(16) %168, i64 16, i1 false)
  %169 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 1
  %170 = getelementptr inbounds %"struct.std::pair.188", ptr %167, i64 1
  %171 = icmp eq ptr %169, %82
  br i1 %171, label %172, label %166

172:                                              ; preds = %166, %160
  %173 = phi ptr [ %161, %160 ], [ %170, %166 ]
  %174 = icmp eq ptr %81, null
  br i1 %174, label %176, label %175

175:                                              ; preds = %172
  tail call void @_ZdlPv(ptr noundef nonnull %81) #23
  br label %176

176:                                              ; preds = %175, %172
  %177 = getelementptr inbounds %"struct.std::pair.188", ptr %161, i64 %155
  br label %178

178:                                              ; preds = %176, %138
  %179 = phi ptr [ %177, %176 ], [ %83, %138 ]
  %180 = phi ptr [ %173, %176 ], [ %82, %138 ]
  %181 = phi ptr [ %161, %176 ], [ %81, %138 ]
  %182 = getelementptr inbounds %"struct.std::pair.188", ptr %180, i64 1
  br label %183

183:                                              ; preds = %178, %108
  %184 = phi ptr [ %179, %178 ], [ %83, %108 ]
  %185 = phi ptr [ %182, %178 ], [ %82, %108 ]
  %186 = phi ptr [ %181, %178 ], [ %81, %108 ]
  %187 = phi i32 [ %80, %178 ], [ %112, %108 ]
  %188 = add nuw nsw i64 %79, 1
  %189 = icmp eq i64 %188, %49
  br i1 %189, label %50, label %78

190:                                              ; preds = %157
  %191 = landingpad { ptr, i32 }
          cleanup
  br label %718

192:                                              ; preds = %146
  %193 = landingpad { ptr, i32 }
          cleanup
  br label %718

194:                                              ; preds = %67, %75, %72, %70
  %195 = phi ptr [ %69, %67 ], [ %73, %75 ], [ %55, %72 ], [ %55, %70 ]
  %196 = phi ptr [ %68, %67 ], [ %54, %75 ], [ %54, %72 ], [ %54, %70 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12)
  %197 = icmp eq ptr %196, %195
  br i1 %197, label %207, label %198

198:                                              ; preds = %194
  %199 = ptrtoint ptr %195 to i64
  %200 = ptrtoint ptr %196 to i64
  %201 = sub i64 %199, %200
  %202 = ashr exact i64 %201, 2
  %203 = call i64 @llvm.ctlz.i64(i64 %202, i1 true), !range !418
  %204 = shl nuw nsw i64 %203, 1
  %205 = xor i64 %204, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %196, ptr %195, i64 noundef %205)
          to label %206 unwind label %231

206:                                              ; preds = %198
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %196, ptr %195)
          to label %207 unwind label %231

207:                                              ; preds = %194, %206
  %208 = ptrtoint ptr %56 to i64
  %209 = ptrtoint ptr %57 to i64
  %210 = sub i64 %208, %209
  %211 = and i64 %210, 68719476720
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %219, label %213

213:                                              ; preds = %207
  %214 = lshr exact i64 %210, 4
  %215 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %13, i64 0, i32 2
  %216 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %2, i64 0, i32 3
  %217 = and i64 %214, 4294967295
  %218 = and i64 %23, 4294967295
  br label %233

219:                                              ; preds = %693, %207
  %220 = load ptr, ptr %41, align 8, !tbaa !313
  %221 = load ptr, ptr %13, align 8, !tbaa !58
  %222 = ptrtoint ptr %220 to i64
  %223 = ptrtoint ptr %221 to i64
  %224 = sub i64 %222, %223
  %225 = and i64 %224, 17179869180
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %696, label %227

227:                                              ; preds = %219
  %228 = lshr exact i64 %224, 2
  %229 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %2, i64 0, i32 3
  %230 = and i64 %228, 4294967295
  br label %699

231:                                              ; preds = %206, %198, %65
  %232 = landingpad { ptr, i32 }
          cleanup
  br label %718

233:                                              ; preds = %213, %693
  %234 = phi i64 [ 0, %213 ], [ %694, %693 ]
  %235 = getelementptr inbounds %"struct.std::pair.188", ptr %57, i64 %234
  %236 = load i32, ptr %235, align 8, !tbaa !326
  %237 = zext i32 %236 to i64
  %238 = load ptr, ptr %1, align 8, !tbaa !58
  %239 = getelementptr inbounds i32, ptr %238, i64 %237
  %240 = load i32, ptr %239, align 4, !tbaa !22
  %241 = getelementptr inbounds %"struct.std::pair.188", ptr %57, i64 %234, i32 1
  %242 = load ptr, ptr %241, align 8, !tbaa !328
  %243 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %242, i64 0, i32 1
  %244 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %242, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %245 = load ptr, ptr %244, align 8, !tbaa !31
  %246 = load ptr, ptr %243, align 8, !tbaa !32
  %247 = icmp eq ptr %245, %246
  br i1 %247, label %248, label %252

248:                                              ; preds = %402, %233
  br i1 %3, label %249, label %623

249:                                              ; preds = %248
  br i1 %42, label %693, label %250

250:                                              ; preds = %249
  %251 = zext i32 %240 to i64
  br label %412

252:                                              ; preds = %233, %402
  %253 = phi ptr [ %406, %402 ], [ %246, %233 ]
  %254 = phi i64 [ %404, %402 ], [ 0, %233 ]
  %255 = phi i32 [ %403, %402 ], [ 0, %233 ]
  %256 = getelementptr inbounds %"struct.std::pair", ptr %253, i64 %254
  %257 = load i32, ptr %256, align 8, !tbaa !37
  %258 = load ptr, ptr %41, align 8, !tbaa !21
  %259 = getelementptr inbounds i32, ptr %258, i64 -1
  %260 = load i32, ptr %259, align 4, !tbaa !22
  %261 = icmp ult i32 %260, %257
  br i1 %261, label %262, label %309

262:                                              ; preds = %252
  %263 = load ptr, ptr %215, align 8, !tbaa !417
  %264 = icmp eq ptr %258, %263
  br i1 %264, label %267, label %265

265:                                              ; preds = %262
  store i32 %257, ptr %258, align 4, !tbaa !22
  %266 = getelementptr inbounds i32, ptr %258, i64 1
  store ptr %266, ptr %41, align 8, !tbaa !313
  br label %402

267:                                              ; preds = %262
  %268 = load ptr, ptr %13, align 8, !tbaa !21
  %269 = ptrtoint ptr %258 to i64
  %270 = ptrtoint ptr %268 to i64
  %271 = sub i64 %269, %270
  %272 = icmp eq i64 %271, 9223372036854775804
  br i1 %272, label %273, label %275

273:                                              ; preds = %267
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %274 unwind label %307

274:                                              ; preds = %273
  unreachable

275:                                              ; preds = %267
  %276 = ashr exact i64 %271, 2
  %277 = call i64 @llvm.umax.i64(i64 %276, i64 1)
  %278 = add i64 %277, %276
  %279 = icmp ult i64 %278, %276
  %280 = icmp ugt i64 %278, 2305843009213693951
  %281 = or i1 %279, %280
  %282 = select i1 %281, i64 2305843009213693951, i64 %278
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %287, label %284

284:                                              ; preds = %275
  %285 = shl nuw nsw i64 %282, 2
  %286 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %285) #21
          to label %287 unwind label %305

287:                                              ; preds = %284, %275
  %288 = phi ptr [ null, %275 ], [ %286, %284 ]
  %289 = getelementptr inbounds i32, ptr %288, i64 %276
  store i32 %257, ptr %289, align 4, !tbaa !22
  %290 = icmp sgt i64 %271, 4
  br i1 %290, label %291, label %292, !prof !23

291:                                              ; preds = %287
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %288, ptr align 4 %268, i64 %271, i1 false)
  br label %297

292:                                              ; preds = %287
  %293 = icmp eq i64 %271, 4
  br i1 %293, label %294, label %297

294:                                              ; preds = %292
  %295 = load i32, ptr %268, align 4, !tbaa !22
  store i32 %295, ptr %288, align 4, !tbaa !22
  %296 = getelementptr inbounds i32, ptr %289, i64 1
  br label %300

297:                                              ; preds = %292, %291
  %298 = getelementptr inbounds i32, ptr %289, i64 1
  %299 = icmp eq ptr %268, null
  br i1 %299, label %302, label %300

300:                                              ; preds = %294, %297
  %301 = phi ptr [ %296, %294 ], [ %298, %297 ]
  call void @_ZdlPv(ptr noundef nonnull %268) #23
  br label %302

302:                                              ; preds = %300, %297
  %303 = phi ptr [ %298, %297 ], [ %301, %300 ]
  store ptr %288, ptr %13, align 8, !tbaa !58
  store ptr %303, ptr %41, align 8, !tbaa !313
  %304 = getelementptr inbounds i32, ptr %288, i64 %282
  store ptr %304, ptr %215, align 8, !tbaa !417
  br label %402

305:                                              ; preds = %284
  %306 = landingpad { ptr, i32 }
          cleanup
  br label %718

307:                                              ; preds = %273
  %308 = landingpad { ptr, i32 }
          cleanup
  br label %718

309:                                              ; preds = %252
  %310 = load ptr, ptr %13, align 8, !tbaa !21
  %311 = ptrtoint ptr %258 to i64
  %312 = ptrtoint ptr %310 to i64
  %313 = sub i64 %311, %312
  %314 = icmp sgt i64 %313, 0
  br i1 %314, label %315, label %330

315:                                              ; preds = %309
  %316 = lshr exact i64 %313, 2
  br label %317

317:                                              ; preds = %317, %315
  %318 = phi i64 [ %316, %315 ], [ %328, %317 ]
  %319 = phi ptr [ %310, %315 ], [ %327, %317 ]
  %320 = lshr i64 %318, 1
  %321 = getelementptr inbounds i32, ptr %319, i64 %320
  %322 = load i32, ptr %321, align 4, !tbaa !22
  %323 = icmp ult i32 %322, %257
  %324 = getelementptr inbounds i32, ptr %321, i64 1
  %325 = xor i64 %320, -1
  %326 = add nsw i64 %318, %325
  %327 = select i1 %323, ptr %324, ptr %319
  %328 = select i1 %323, i64 %326, i64 %320
  %329 = icmp sgt i64 %328, 0
  br i1 %329, label %317, label %330

330:                                              ; preds = %317, %309
  %331 = phi ptr [ %310, %309 ], [ %327, %317 ]
  %332 = load i32, ptr %331, align 4, !tbaa !22
  %333 = icmp eq i32 %332, %257
  br i1 %333, label %402, label %334

334:                                              ; preds = %330
  %335 = ptrtoint ptr %331 to i64
  %336 = load ptr, ptr %215, align 8, !tbaa !417
  %337 = icmp eq ptr %258, %336
  br i1 %337, label %355, label %338

338:                                              ; preds = %334
  %339 = icmp eq ptr %258, %331
  %340 = getelementptr inbounds i32, ptr %258, i64 1
  br i1 %339, label %341, label %342

341:                                              ; preds = %338
  store i32 %257, ptr %258, align 4, !tbaa !22
  store ptr %340, ptr %41, align 8, !tbaa !313
  br label %402

342:                                              ; preds = %338
  store i32 %260, ptr %258, align 4, !tbaa !22
  store ptr %340, ptr %41, align 8, !tbaa !313
  %343 = ptrtoint ptr %259 to i64
  %344 = sub i64 %343, %335
  %345 = icmp sgt i64 %344, 4
  br i1 %345, label %346, label %350, !prof !23

346:                                              ; preds = %342
  %347 = lshr exact i64 %344, 2
  %348 = sub nsw i64 0, %347
  %349 = getelementptr inbounds i32, ptr %258, i64 %348
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %349, ptr nonnull align 4 %331, i64 %344, i1 false)
  br label %354

350:                                              ; preds = %342
  %351 = icmp eq i64 %344, 4
  br i1 %351, label %352, label %354

352:                                              ; preds = %350
  %353 = load i32, ptr %331, align 4, !tbaa !22
  store i32 %353, ptr %259, align 4, !tbaa !22
  br label %354

354:                                              ; preds = %352, %350, %346
  store i32 %257, ptr %331, align 4, !tbaa !22
  br label %402

355:                                              ; preds = %334
  %356 = icmp eq i64 %313, 9223372036854775804
  br i1 %356, label %357, label %359

357:                                              ; preds = %355
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %358 unwind label %400

358:                                              ; preds = %357
  unreachable

359:                                              ; preds = %355
  %360 = ashr exact i64 %313, 2
  %361 = call i64 @llvm.umax.i64(i64 %360, i64 1)
  %362 = add i64 %361, %360
  %363 = icmp ult i64 %362, %360
  %364 = icmp ugt i64 %362, 2305843009213693951
  %365 = or i1 %363, %364
  %366 = select i1 %365, i64 2305843009213693951, i64 %362
  %367 = sub i64 %335, %312
  %368 = ashr exact i64 %367, 2
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %373, label %370

370:                                              ; preds = %359
  %371 = shl nuw nsw i64 %366, 2
  %372 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %371) #21
          to label %373 unwind label %398

373:                                              ; preds = %370, %359
  %374 = phi ptr [ null, %359 ], [ %372, %370 ]
  %375 = getelementptr inbounds i32, ptr %374, i64 %368
  store i32 %257, ptr %375, align 4, !tbaa !22
  %376 = icmp sgt i64 %367, 4
  br i1 %376, label %377, label %378, !prof !23

377:                                              ; preds = %373
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %374, ptr align 4 %310, i64 %367, i1 false)
  br label %382

378:                                              ; preds = %373
  %379 = icmp eq i64 %367, 4
  br i1 %379, label %380, label %382

380:                                              ; preds = %378
  %381 = load i32, ptr %310, align 4, !tbaa !22
  store i32 %381, ptr %374, align 4, !tbaa !22
  br label %382

382:                                              ; preds = %380, %378, %377
  %383 = getelementptr inbounds i32, ptr %375, i64 1
  %384 = sub i64 %311, %335
  %385 = icmp sgt i64 %384, 4
  br i1 %385, label %386, label %387, !prof !23

386:                                              ; preds = %382
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %383, ptr nonnull align 4 %331, i64 %384, i1 false)
  br label %391

387:                                              ; preds = %382
  %388 = icmp eq i64 %384, 4
  br i1 %388, label %389, label %391

389:                                              ; preds = %387
  %390 = load i32, ptr %331, align 4, !tbaa !22
  store i32 %390, ptr %383, align 4, !tbaa !22
  br label %391

391:                                              ; preds = %389, %387, %386
  %392 = icmp eq ptr %310, null
  br i1 %392, label %394, label %393

393:                                              ; preds = %391
  call void @_ZdlPv(ptr noundef nonnull %310) #23
  br label %394

394:                                              ; preds = %393, %391
  %395 = ashr exact i64 %384, 2
  %396 = getelementptr inbounds i32, ptr %383, i64 %395
  store ptr %374, ptr %13, align 8, !tbaa !58
  store ptr %396, ptr %41, align 8, !tbaa !313
  %397 = getelementptr inbounds i32, ptr %374, i64 %366
  store ptr %397, ptr %215, align 8, !tbaa !417
  br label %402

398:                                              ; preds = %370
  %399 = landingpad { ptr, i32 }
          cleanup
  br label %718

400:                                              ; preds = %357
  %401 = landingpad { ptr, i32 }
          cleanup
  br label %718

402:                                              ; preds = %394, %354, %341, %330, %302, %265
  %403 = add i32 %255, 1
  %404 = zext i32 %403 to i64
  %405 = load ptr, ptr %244, align 8, !tbaa !31
  %406 = load ptr, ptr %243, align 8, !tbaa !32
  %407 = ptrtoint ptr %405 to i64
  %408 = ptrtoint ptr %406 to i64
  %409 = sub i64 %407, %408
  %410 = ashr exact i64 %409, 4
  %411 = icmp ugt i64 %410, %404
  br i1 %411, label %252, label %248

412:                                              ; preds = %250, %616
  %413 = phi i64 [ 0, %250 ], [ %617, %616 ]
  %414 = load ptr, ptr %1, align 8, !tbaa !58
  %415 = getelementptr inbounds i32, ptr %414, i64 %413
  %416 = load i32, ptr %415, align 4, !tbaa !22
  %417 = load ptr, ptr %216, align 8, !tbaa !472
  %418 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %417, i64 %251
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11)
  store i32 %416, ptr %11, align 4, !tbaa !22
  %419 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %418, i64 0, i32 1
  %420 = load ptr, ptr %419, align 8, !tbaa !21
  %421 = load ptr, ptr %418, align 8, !tbaa !21
  %422 = ptrtoint ptr %420 to i64
  %423 = ptrtoint ptr %421 to i64
  %424 = sub i64 %422, %423
  %425 = icmp eq ptr %420, %421
  br i1 %425, label %430, label %426

426:                                              ; preds = %412
  %427 = getelementptr inbounds i32, ptr %420, i64 -1
  %428 = load i32, ptr %427, align 4, !tbaa !22
  %429 = icmp ult i32 %428, %416
  br i1 %429, label %430, label %470

430:                                              ; preds = %426, %412
  %431 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %418, i64 0, i32 2
  %432 = load ptr, ptr %431, align 8, !tbaa !417
  %433 = icmp eq ptr %420, %432
  br i1 %433, label %436, label %434

434:                                              ; preds = %430
  store i32 %416, ptr %420, align 4, !tbaa !22
  %435 = getelementptr inbounds i32, ptr %420, i64 1
  store ptr %435, ptr %419, align 8, !tbaa !313
  br label %515

436:                                              ; preds = %430
  %437 = icmp eq i64 %424, 9223372036854775804
  br i1 %437, label %438, label %440

438:                                              ; preds = %539, %436
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %439 unwind label %621

439:                                              ; preds = %438
  unreachable

440:                                              ; preds = %436
  %441 = ashr exact i64 %424, 2
  %442 = call i64 @llvm.umax.i64(i64 %441, i64 1)
  %443 = add i64 %442, %441
  %444 = icmp ult i64 %443, %441
  %445 = icmp ugt i64 %443, 2305843009213693951
  %446 = or i1 %444, %445
  %447 = select i1 %446, i64 2305843009213693951, i64 %443
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %452, label %449

449:                                              ; preds = %440
  %450 = shl nuw nsw i64 %447, 2
  %451 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %450) #21
          to label %452 unwind label %619

452:                                              ; preds = %449, %440
  %453 = phi ptr [ null, %440 ], [ %451, %449 ]
  %454 = getelementptr inbounds i32, ptr %453, i64 %441
  store i32 %416, ptr %454, align 4, !tbaa !22
  %455 = icmp sgt i64 %424, 4
  br i1 %455, label %456, label %457, !prof !23

456:                                              ; preds = %452
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %453, ptr align 4 %421, i64 %424, i1 false)
  br label %462

457:                                              ; preds = %452
  %458 = icmp eq i64 %424, 4
  br i1 %458, label %459, label %462

459:                                              ; preds = %457
  %460 = load i32, ptr %421, align 4, !tbaa !22
  store i32 %460, ptr %453, align 4, !tbaa !22
  %461 = getelementptr inbounds i32, ptr %454, i64 1
  br label %465

462:                                              ; preds = %457, %456
  %463 = getelementptr inbounds i32, ptr %454, i64 1
  %464 = icmp eq ptr %421, null
  br i1 %464, label %467, label %465

465:                                              ; preds = %459, %462
  %466 = phi ptr [ %461, %459 ], [ %463, %462 ]
  call void @_ZdlPv(ptr noundef nonnull %421) #23
  br label %467

467:                                              ; preds = %465, %462
  %468 = phi ptr [ %463, %462 ], [ %466, %465 ]
  store ptr %453, ptr %418, align 8, !tbaa !58
  store ptr %468, ptr %419, align 8, !tbaa !313
  %469 = getelementptr inbounds i32, ptr %453, i64 %447
  store ptr %469, ptr %431, align 8, !tbaa !417
  br label %515

470:                                              ; preds = %426
  %471 = icmp sgt i64 %424, 0
  br i1 %471, label %472, label %487

472:                                              ; preds = %470
  %473 = lshr exact i64 %424, 2
  br label %474

474:                                              ; preds = %474, %472
  %475 = phi i64 [ %473, %472 ], [ %485, %474 ]
  %476 = phi ptr [ %421, %472 ], [ %484, %474 ]
  %477 = lshr i64 %475, 1
  %478 = getelementptr inbounds i32, ptr %476, i64 %477
  %479 = load i32, ptr %478, align 4, !tbaa !22
  %480 = icmp ult i32 %479, %416
  %481 = getelementptr inbounds i32, ptr %478, i64 1
  %482 = xor i64 %477, -1
  %483 = add nsw i64 %475, %482
  %484 = select i1 %480, ptr %481, ptr %476
  %485 = select i1 %480, i64 %483, i64 %477
  %486 = icmp sgt i64 %485, 0
  br i1 %486, label %474, label %487

487:                                              ; preds = %474, %470
  %488 = phi ptr [ %421, %470 ], [ %484, %474 ]
  %489 = load i32, ptr %488, align 4, !tbaa !22
  %490 = icmp eq i32 %489, %416
  br i1 %490, label %515, label %491

491:                                              ; preds = %487
  %492 = ptrtoint ptr %488 to i64
  %493 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %418, i64 0, i32 2
  %494 = load ptr, ptr %493, align 8, !tbaa !417
  %495 = icmp eq ptr %420, %494
  br i1 %495, label %514, label %496

496:                                              ; preds = %491
  %497 = icmp eq ptr %420, %488
  %498 = getelementptr inbounds i32, ptr %420, i64 1
  br i1 %497, label %499, label %500

499:                                              ; preds = %496
  store i32 %416, ptr %420, align 4, !tbaa !22
  store ptr %498, ptr %419, align 8, !tbaa !313
  br label %515

500:                                              ; preds = %496
  store i32 %428, ptr %420, align 4, !tbaa !22
  store ptr %498, ptr %419, align 8, !tbaa !313
  %501 = load i32, ptr %11, align 4, !tbaa !22
  %502 = ptrtoint ptr %427 to i64
  %503 = sub i64 %502, %492
  %504 = icmp sgt i64 %503, 4
  br i1 %504, label %505, label %509, !prof !23

505:                                              ; preds = %500
  %506 = lshr exact i64 %503, 2
  %507 = sub nsw i64 0, %506
  %508 = getelementptr inbounds i32, ptr %420, i64 %507
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %508, ptr nonnull align 4 %488, i64 %503, i1 false)
  br label %513

509:                                              ; preds = %500
  %510 = icmp eq i64 %503, 4
  br i1 %510, label %511, label %513

511:                                              ; preds = %509
  %512 = load i32, ptr %488, align 4, !tbaa !22
  store i32 %512, ptr %427, align 4, !tbaa !22
  br label %513

513:                                              ; preds = %511, %509, %505
  store i32 %501, ptr %488, align 4, !tbaa !22
  br label %515

514:                                              ; preds = %491
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %418, ptr nonnull %488, ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %515 unwind label %619

515:                                              ; preds = %513, %499, %487, %467, %434, %514
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11)
  %516 = load ptr, ptr %1, align 8, !tbaa !58
  %517 = getelementptr inbounds i32, ptr %516, i64 %413
  %518 = load i32, ptr %517, align 4, !tbaa !22
  %519 = zext i32 %518 to i64
  %520 = load ptr, ptr %216, align 8, !tbaa !472
  %521 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %520, i64 %519
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10)
  store i32 %240, ptr %10, align 4, !tbaa !22
  %522 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %521, i64 0, i32 1
  %523 = load ptr, ptr %522, align 8, !tbaa !21
  %524 = load ptr, ptr %521, align 8, !tbaa !21
  %525 = ptrtoint ptr %523 to i64
  %526 = ptrtoint ptr %524 to i64
  %527 = sub i64 %525, %526
  %528 = icmp eq ptr %523, %524
  br i1 %528, label %533, label %529

529:                                              ; preds = %515
  %530 = getelementptr inbounds i32, ptr %523, i64 -1
  %531 = load i32, ptr %530, align 4, !tbaa !22
  %532 = icmp ult i32 %531, %240
  br i1 %532, label %533, label %571

533:                                              ; preds = %529, %515
  %534 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %521, i64 0, i32 2
  %535 = load ptr, ptr %534, align 8, !tbaa !417
  %536 = icmp eq ptr %523, %535
  br i1 %536, label %539, label %537

537:                                              ; preds = %533
  store i32 %240, ptr %523, align 4, !tbaa !22
  %538 = getelementptr inbounds i32, ptr %523, i64 1
  store ptr %538, ptr %522, align 8, !tbaa !313
  br label %616

539:                                              ; preds = %533
  %540 = icmp eq i64 %527, 9223372036854775804
  br i1 %540, label %438, label %541

541:                                              ; preds = %539
  %542 = ashr exact i64 %527, 2
  %543 = call i64 @llvm.umax.i64(i64 %542, i64 1)
  %544 = add i64 %543, %542
  %545 = icmp ult i64 %544, %542
  %546 = icmp ugt i64 %544, 2305843009213693951
  %547 = or i1 %545, %546
  %548 = select i1 %547, i64 2305843009213693951, i64 %544
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %553, label %550

550:                                              ; preds = %541
  %551 = shl nuw nsw i64 %548, 2
  %552 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %551) #21
          to label %553 unwind label %619

553:                                              ; preds = %550, %541
  %554 = phi ptr [ null, %541 ], [ %552, %550 ]
  %555 = getelementptr inbounds i32, ptr %554, i64 %542
  store i32 %240, ptr %555, align 4, !tbaa !22
  %556 = icmp sgt i64 %527, 4
  br i1 %556, label %557, label %558, !prof !23

557:                                              ; preds = %553
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %554, ptr align 4 %524, i64 %527, i1 false)
  br label %563

558:                                              ; preds = %553
  %559 = icmp eq i64 %527, 4
  br i1 %559, label %560, label %563

560:                                              ; preds = %558
  %561 = load i32, ptr %524, align 4, !tbaa !22
  store i32 %561, ptr %554, align 4, !tbaa !22
  %562 = getelementptr inbounds i32, ptr %555, i64 1
  br label %566

563:                                              ; preds = %558, %557
  %564 = getelementptr inbounds i32, ptr %555, i64 1
  %565 = icmp eq ptr %524, null
  br i1 %565, label %568, label %566

566:                                              ; preds = %560, %563
  %567 = phi ptr [ %562, %560 ], [ %564, %563 ]
  call void @_ZdlPv(ptr noundef nonnull %524) #23
  br label %568

568:                                              ; preds = %566, %563
  %569 = phi ptr [ %564, %563 ], [ %567, %566 ]
  store ptr %554, ptr %521, align 8, !tbaa !58
  store ptr %569, ptr %522, align 8, !tbaa !313
  %570 = getelementptr inbounds i32, ptr %554, i64 %548
  store ptr %570, ptr %534, align 8, !tbaa !417
  br label %616

571:                                              ; preds = %529
  %572 = icmp sgt i64 %527, 0
  br i1 %572, label %573, label %588

573:                                              ; preds = %571
  %574 = lshr exact i64 %527, 2
  br label %575

575:                                              ; preds = %575, %573
  %576 = phi i64 [ %574, %573 ], [ %586, %575 ]
  %577 = phi ptr [ %524, %573 ], [ %585, %575 ]
  %578 = lshr i64 %576, 1
  %579 = getelementptr inbounds i32, ptr %577, i64 %578
  %580 = load i32, ptr %579, align 4, !tbaa !22
  %581 = icmp ult i32 %580, %240
  %582 = getelementptr inbounds i32, ptr %579, i64 1
  %583 = xor i64 %578, -1
  %584 = add nsw i64 %576, %583
  %585 = select i1 %581, ptr %582, ptr %577
  %586 = select i1 %581, i64 %584, i64 %578
  %587 = icmp sgt i64 %586, 0
  br i1 %587, label %575, label %588

588:                                              ; preds = %575, %571
  %589 = phi ptr [ %524, %571 ], [ %585, %575 ]
  %590 = load i32, ptr %589, align 4, !tbaa !22
  %591 = icmp eq i32 %590, %240
  br i1 %591, label %616, label %592

592:                                              ; preds = %588
  %593 = ptrtoint ptr %589 to i64
  %594 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %521, i64 0, i32 2
  %595 = load ptr, ptr %594, align 8, !tbaa !417
  %596 = icmp eq ptr %523, %595
  br i1 %596, label %615, label %597

597:                                              ; preds = %592
  %598 = icmp eq ptr %523, %589
  %599 = getelementptr inbounds i32, ptr %523, i64 1
  br i1 %598, label %600, label %601

600:                                              ; preds = %597
  store i32 %240, ptr %523, align 4, !tbaa !22
  store ptr %599, ptr %522, align 8, !tbaa !313
  br label %616

601:                                              ; preds = %597
  store i32 %531, ptr %523, align 4, !tbaa !22
  store ptr %599, ptr %522, align 8, !tbaa !313
  %602 = load i32, ptr %10, align 4, !tbaa !22
  %603 = ptrtoint ptr %530 to i64
  %604 = sub i64 %603, %593
  %605 = icmp sgt i64 %604, 4
  br i1 %605, label %606, label %610, !prof !23

606:                                              ; preds = %601
  %607 = lshr exact i64 %604, 2
  %608 = sub nsw i64 0, %607
  %609 = getelementptr inbounds i32, ptr %523, i64 %608
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %609, ptr nonnull align 4 %589, i64 %604, i1 false)
  br label %614

610:                                              ; preds = %601
  %611 = icmp eq i64 %604, 4
  br i1 %611, label %612, label %614

612:                                              ; preds = %610
  %613 = load i32, ptr %589, align 4, !tbaa !22
  store i32 %613, ptr %530, align 4, !tbaa !22
  br label %614

614:                                              ; preds = %612, %610, %606
  store i32 %602, ptr %589, align 4, !tbaa !22
  br label %616

615:                                              ; preds = %592
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %521, ptr nonnull %589, ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %616 unwind label %619

616:                                              ; preds = %614, %600, %588, %568, %537, %615
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10)
  %617 = add nuw nsw i64 %413, 1
  %618 = icmp eq i64 %617, %218
  br i1 %618, label %693, label %412

619:                                              ; preds = %514, %615, %449, %550
  %620 = landingpad { ptr, i32 }
          cleanup
  br label %718

621:                                              ; preds = %438
  %622 = landingpad { ptr, i32 }
          cleanup
  br label %718

623:                                              ; preds = %248
  %624 = zext i32 %240 to i64
  %625 = load ptr, ptr %216, align 8, !tbaa !472
  %626 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %625, i64 %624
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9)
  store i32 %240, ptr %9, align 4, !tbaa !22
  %627 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %626, i64 0, i32 1
  %628 = load ptr, ptr %627, align 8, !tbaa !21
  %629 = load ptr, ptr %626, align 8, !tbaa !21
  %630 = ptrtoint ptr %628 to i64
  %631 = ptrtoint ptr %629 to i64
  %632 = sub i64 %630, %631
  %633 = icmp eq ptr %628, %629
  br i1 %633, label %638, label %634

634:                                              ; preds = %623
  %635 = getelementptr inbounds i32, ptr %628, i64 -1
  %636 = load i32, ptr %635, align 4, !tbaa !22
  %637 = icmp ult i32 %636, %240
  br i1 %637, label %638, label %645

638:                                              ; preds = %634, %623
  %639 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %626, i64 0, i32 2
  %640 = load ptr, ptr %639, align 8, !tbaa !417
  %641 = icmp eq ptr %628, %640
  br i1 %641, label %644, label %642

642:                                              ; preds = %638
  store i32 %240, ptr %628, align 4, !tbaa !22
  %643 = getelementptr inbounds i32, ptr %628, i64 1
  store ptr %643, ptr %627, align 8, !tbaa !313
  br label %690

644:                                              ; preds = %638
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %626, ptr %628, ptr noundef nonnull align 4 dereferenceable(4) %9)
          to label %690 unwind label %691

645:                                              ; preds = %634
  %646 = icmp sgt i64 %632, 0
  br i1 %646, label %647, label %662

647:                                              ; preds = %645
  %648 = lshr exact i64 %632, 2
  br label %649

649:                                              ; preds = %649, %647
  %650 = phi i64 [ %648, %647 ], [ %660, %649 ]
  %651 = phi ptr [ %629, %647 ], [ %659, %649 ]
  %652 = lshr i64 %650, 1
  %653 = getelementptr inbounds i32, ptr %651, i64 %652
  %654 = load i32, ptr %653, align 4, !tbaa !22
  %655 = icmp ult i32 %654, %240
  %656 = getelementptr inbounds i32, ptr %653, i64 1
  %657 = xor i64 %652, -1
  %658 = add nsw i64 %650, %657
  %659 = select i1 %655, ptr %656, ptr %651
  %660 = select i1 %655, i64 %658, i64 %652
  %661 = icmp sgt i64 %660, 0
  br i1 %661, label %649, label %662

662:                                              ; preds = %649, %645
  %663 = phi ptr [ %629, %645 ], [ %659, %649 ]
  %664 = load i32, ptr %663, align 4, !tbaa !22
  %665 = icmp eq i32 %664, %240
  br i1 %665, label %690, label %666

666:                                              ; preds = %662
  %667 = ptrtoint ptr %663 to i64
  %668 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %626, i64 0, i32 2
  %669 = load ptr, ptr %668, align 8, !tbaa !417
  %670 = icmp eq ptr %628, %669
  br i1 %670, label %689, label %671

671:                                              ; preds = %666
  %672 = icmp eq ptr %628, %663
  %673 = getelementptr inbounds i32, ptr %628, i64 1
  br i1 %672, label %674, label %675

674:                                              ; preds = %671
  store i32 %240, ptr %628, align 4, !tbaa !22
  store ptr %673, ptr %627, align 8, !tbaa !313
  br label %690

675:                                              ; preds = %671
  store i32 %636, ptr %628, align 4, !tbaa !22
  store ptr %673, ptr %627, align 8, !tbaa !313
  %676 = load i32, ptr %9, align 4, !tbaa !22
  %677 = ptrtoint ptr %635 to i64
  %678 = sub i64 %677, %667
  %679 = icmp sgt i64 %678, 4
  br i1 %679, label %680, label %684, !prof !23

680:                                              ; preds = %675
  %681 = lshr exact i64 %678, 2
  %682 = sub nsw i64 0, %681
  %683 = getelementptr inbounds i32, ptr %628, i64 %682
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %683, ptr nonnull align 4 %663, i64 %678, i1 false)
  br label %688

684:                                              ; preds = %675
  %685 = icmp eq i64 %678, 4
  br i1 %685, label %686, label %688

686:                                              ; preds = %684
  %687 = load i32, ptr %663, align 4, !tbaa !22
  store i32 %687, ptr %635, align 4, !tbaa !22
  br label %688

688:                                              ; preds = %686, %684, %680
  store i32 %676, ptr %663, align 4, !tbaa !22
  br label %690

689:                                              ; preds = %666
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %626, ptr nonnull %663, ptr noundef nonnull align 4 dereferenceable(4) %9)
          to label %690 unwind label %691

690:                                              ; preds = %689, %644, %642, %662, %674, %688
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9)
  br label %693

691:                                              ; preds = %689, %644
  %692 = landingpad { ptr, i32 }
          cleanup
  br label %718

693:                                              ; preds = %616, %249, %690
  %694 = add nuw nsw i64 %234, 1
  %695 = icmp eq i64 %694, %217
  br i1 %695, label %219, label %233

696:                                              ; preds = %708, %219
  %697 = icmp eq ptr %57, null
  br i1 %697, label %713, label %698

698:                                              ; preds = %696
  call void @_ZdlPv(ptr noundef nonnull %57) #23
  br label %713

699:                                              ; preds = %227, %708
  %700 = phi i64 [ 0, %227 ], [ %709, %708 ]
  %701 = load ptr, ptr %13, align 8, !tbaa !21
  %702 = getelementptr inbounds i32, ptr %701, i64 %700
  %703 = load i32, ptr %702, align 4, !tbaa !22
  %704 = load ptr, ptr %41, align 8, !tbaa !21
  %705 = zext i32 %703 to i64
  %706 = load ptr, ptr %229, align 8, !tbaa !472
  %707 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %706, i64 %705
  invoke void @_ZN6dealii31CompressedSimpleSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b(ptr noundef nonnull align 8 dereferenceable(24) %707, ptr nonnull %701, ptr %704, i1 noundef zeroext true)
          to label %708 unwind label %711

708:                                              ; preds = %699
  %709 = add nuw nsw i64 %700, 1
  %710 = icmp eq i64 %709, %230
  br i1 %710, label %696, label %699

711:                                              ; preds = %699
  %712 = landingpad { ptr, i32 }
          cleanup
  br label %718

713:                                              ; preds = %698, %696
  %714 = load ptr, ptr %13, align 8, !tbaa !58
  %715 = icmp eq ptr %714, null
  br i1 %715, label %717, label %716

716:                                              ; preds = %713
  call void @_ZdlPv(ptr noundef nonnull %714) #23
  br label %717

717:                                              ; preds = %713, %716
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #24
  br label %1577

718:                                              ; preds = %619, %621, %398, %400, %305, %307, %190, %192, %711, %691, %231
  %719 = phi ptr [ %57, %231 ], [ %57, %711 ], [ %57, %691 ], [ %81, %190 ], [ %81, %192 ], [ %57, %307 ], [ %57, %305 ], [ %57, %400 ], [ %57, %398 ], [ %57, %619 ], [ %57, %621 ]
  %720 = phi { ptr, i32 } [ %232, %231 ], [ %712, %711 ], [ %692, %691 ], [ %191, %190 ], [ %193, %192 ], [ %308, %307 ], [ %306, %305 ], [ %401, %400 ], [ %399, %398 ], [ %620, %619 ], [ %622, %621 ]
  %721 = icmp eq ptr %719, null
  br i1 %721, label %723, label %722

722:                                              ; preds = %718
  call void @_ZdlPv(ptr noundef nonnull %719) #23
  br label %723

723:                                              ; preds = %722, %718
  %724 = load ptr, ptr %13, align 8, !tbaa !58
  %725 = icmp eq ptr %724, null
  br i1 %725, label %727, label %726

726:                                              ; preds = %723
  call void @_ZdlPv(ptr noundef nonnull %724) #23
  br label %727

727:                                              ; preds = %726, %723, %76
  %728 = phi { ptr, i32 } [ %77, %76 ], [ %720, %723 ], [ %720, %726 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #24
  br label %1586

729:                                              ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #24
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %15) #24
  store i32 -1, ptr %15, align 8, !tbaa !317
  %730 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %15, i64 0, i32 1
  store i32 -1, ptr %730, align 4, !tbaa !319
  %731 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %15, i64 0, i32 2
  store ptr null, ptr %731, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  %732 = icmp eq i64 %28, 0
  br i1 %732, label %733, label %735

733:                                              ; preds = %729
  %734 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %14, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  br label %778

735:                                              ; preds = %729
  %736 = shl nuw nsw i64 %28, 4
  %737 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %736) #21
          to label %738 unwind label %828

738:                                              ; preds = %735
  store ptr %737, ptr %14, align 8, !tbaa !321
  %739 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %737, i64 %28
  %740 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %14, i64 0, i32 2
  store ptr %739, ptr %740, align 8, !tbaa !323
  %741 = and i64 %23, 3
  %742 = icmp eq i64 %741, 0
  br i1 %742, label %753, label %743

743:                                              ; preds = %738, %743
  %744 = phi ptr [ %750, %743 ], [ %737, %738 ]
  %745 = phi i64 [ %749, %743 ], [ %28, %738 ]
  %746 = phi i64 [ %751, %743 ], [ 0, %738 ]
  %747 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %744, i64 0, i32 2
  store ptr null, ptr %747, align 8, !tbaa !320
  store i32 -1, ptr %744, align 8, !tbaa !317
  %748 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %744, i64 0, i32 1
  store i32 -1, ptr %748, align 4, !tbaa !319
  %749 = add nsw i64 %745, -1
  %750 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %744, i64 1
  %751 = add i64 %746, 1
  %752 = icmp eq i64 %751, %741
  br i1 %752, label %753, label %743, !llvm.loop !474

753:                                              ; preds = %743, %738
  %754 = phi ptr [ undef, %738 ], [ %750, %743 ]
  %755 = phi ptr [ %737, %738 ], [ %750, %743 ]
  %756 = phi i64 [ %28, %738 ], [ %749, %743 ]
  %757 = icmp ult i64 %28, 4
  br i1 %757, label %775, label %758

758:                                              ; preds = %753, %758
  %759 = phi ptr [ %773, %758 ], [ %755, %753 ]
  %760 = phi i64 [ %772, %758 ], [ %756, %753 ]
  %761 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %759, i64 0, i32 2
  store ptr null, ptr %761, align 8, !tbaa !320
  store i32 -1, ptr %759, align 8, !tbaa !317
  %762 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %759, i64 0, i32 1
  store i32 -1, ptr %762, align 4, !tbaa !319
  %763 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %759, i64 1
  %764 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %759, i64 1, i32 2
  store ptr null, ptr %764, align 8, !tbaa !320
  store i32 -1, ptr %763, align 8, !tbaa !317
  %765 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %759, i64 1, i32 1
  store i32 -1, ptr %765, align 4, !tbaa !319
  %766 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %759, i64 2
  %767 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %759, i64 2, i32 2
  store ptr null, ptr %767, align 8, !tbaa !320
  store i32 -1, ptr %766, align 8, !tbaa !317
  %768 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %759, i64 2, i32 1
  store i32 -1, ptr %768, align 4, !tbaa !319
  %769 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %759, i64 3
  %770 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %759, i64 3, i32 2
  store ptr null, ptr %770, align 8, !tbaa !320
  store i32 -1, ptr %769, align 8, !tbaa !317
  %771 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %759, i64 3, i32 1
  store i32 -1, ptr %771, align 4, !tbaa !319
  %772 = add nsw i64 %760, -4
  %773 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %759, i64 4
  %774 = icmp eq i64 %772, 0
  br i1 %774, label %775, label %758

775:                                              ; preds = %758, %753
  %776 = phi ptr [ %754, %753 ], [ %773, %758 ]
  %777 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %14, i64 0, i32 1
  store ptr %776, ptr %777, align 8, !tbaa !325
  br label %778

778:                                              ; preds = %775, %733
  %779 = phi ptr [ null, %733 ], [ %737, %775 ]
  %780 = phi ptr [ null, %733 ], [ %776, %775 ]
  %781 = phi ptr [ %734, %733 ], [ %777, %775 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %15) #24
  %782 = icmp eq i32 %24, 0
  br i1 %782, label %793, label %783

783:                                              ; preds = %778
  %784 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %785 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %786 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %787 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %788 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %789 = and i64 %23, 4294967295
  br label %831

790:                                              ; preds = %938
  %791 = load ptr, ptr %781, align 8, !tbaa !21
  %792 = load ptr, ptr %14, align 8, !tbaa !321
  br label %793

793:                                              ; preds = %790, %778
  %794 = phi ptr [ %779, %778 ], [ %792, %790 ]
  %795 = phi ptr [ %780, %778 ], [ %791, %790 ]
  %796 = phi ptr [ null, %778 ], [ %940, %790 ]
  %797 = phi ptr [ null, %778 ], [ %941, %790 ]
  %798 = phi i32 [ 0, %778 ], [ %942, %790 ]
  %799 = zext i32 %798 to i64
  store i32 -1, ptr %16, align 8, !tbaa !317
  %800 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %16, i64 0, i32 1
  store i32 -1, ptr %800, align 4, !tbaa !319
  %801 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %16, i64 0, i32 2
  store ptr null, ptr %801, align 8, !tbaa !320
  %802 = ptrtoint ptr %795 to i64
  %803 = ptrtoint ptr %794 to i64
  %804 = sub i64 %802, %803
  %805 = ashr exact i64 %804, 4
  %806 = icmp ult i64 %805, %799
  br i1 %806, label %807, label %809

807:                                              ; preds = %793
  %808 = sub nsw i64 %799, %805
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %14, ptr %795, i64 noundef %808, ptr noundef nonnull align 8 dereferenceable(16) %16)
          to label %949 unwind label %1040

809:                                              ; preds = %793
  %810 = icmp ugt i64 %805, %799
  br i1 %810, label %811, label %949

811:                                              ; preds = %809
  %812 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %794, i64 %799
  %813 = icmp eq ptr %795, %812
  br i1 %813, label %949, label %814

814:                                              ; preds = %811, %824
  %815 = phi ptr [ %825, %824 ], [ %812, %811 ]
  %816 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %815, i64 0, i32 2
  %817 = load ptr, ptr %816, align 8, !tbaa !320
  %818 = icmp eq ptr %817, null
  br i1 %818, label %824, label %819

819:                                              ; preds = %814
  %820 = load ptr, ptr %817, align 8, !tbaa !32
  %821 = icmp eq ptr %820, null
  br i1 %821, label %823, label %822

822:                                              ; preds = %819
  tail call void @_ZdlPv(ptr noundef nonnull %820) #23
  br label %823

823:                                              ; preds = %822, %819
  tail call void @_ZdlPv(ptr noundef nonnull %817) #23
  store ptr null, ptr %816, align 8, !tbaa !320
  br label %824

824:                                              ; preds = %823, %814
  %825 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %815, i64 1
  %826 = icmp eq ptr %825, %795
  br i1 %826, label %827, label %814

827:                                              ; preds = %824
  store ptr %812, ptr %781, align 8, !tbaa !325
  br label %949

828:                                              ; preds = %735
  %829 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %15)
          to label %830 unwind label %1588

830:                                              ; preds = %828
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %15) #24
  br label %1584

831:                                              ; preds = %783, %938
  %832 = phi i64 [ 0, %783 ], [ %943, %938 ]
  %833 = phi i32 [ 0, %783 ], [ %942, %938 ]
  %834 = phi ptr [ null, %783 ], [ %941, %938 ]
  %835 = phi ptr [ null, %783 ], [ %940, %938 ]
  %836 = phi ptr [ null, %783 ], [ %939, %938 ]
  %837 = load ptr, ptr %785, align 8, !tbaa !55
  %838 = load i32, ptr %786, align 8, !tbaa !57
  %839 = load ptr, ptr %784, align 8, !tbaa !55
  %840 = ptrtoint ptr %837 to i64
  %841 = ptrtoint ptr %839 to i64
  %842 = sub i64 %840, %841
  %843 = shl nsw i64 %842, 3
  %844 = zext i32 %838 to i64
  %845 = add nsw i64 %843, %844
  %846 = load ptr, ptr %1, align 8, !tbaa !58
  %847 = getelementptr inbounds i32, ptr %846, i64 %832
  %848 = load i32, ptr %847, align 4, !tbaa !22
  %849 = zext i32 %848 to i64
  %850 = icmp ugt i64 %845, %849
  br i1 %850, label %851, label %861

851:                                              ; preds = %831
  %852 = lshr i32 %848, 6
  %853 = zext i32 %852 to i64
  %854 = getelementptr inbounds i64, ptr %839, i64 %853
  %855 = and i32 %848, 63
  %856 = zext i32 %855 to i64
  %857 = shl nuw i64 1, %856
  %858 = load i64, ptr %854, align 8, !tbaa !42
  %859 = and i64 %858, %857
  %860 = icmp eq i64 %859, 0
  br i1 %860, label %861, label %868

861:                                              ; preds = %851, %831
  %862 = zext i32 %833 to i64
  %863 = load ptr, ptr %14, align 8, !tbaa !321
  %864 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %863, i64 %862
  store i32 %848, ptr %864, align 8, !tbaa !317
  %865 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %863, i64 %862, i32 1
  %866 = trunc i64 %832 to i32
  store i32 %866, ptr %865, align 4, !tbaa !319
  %867 = add i32 %833, 1
  br label %938

868:                                              ; preds = %851
  %869 = load ptr, ptr %787, align 8, !tbaa !21
  %870 = load ptr, ptr %788, align 8, !tbaa !21
  %871 = ptrtoint ptr %870 to i64
  %872 = ptrtoint ptr %869 to i64
  %873 = sub i64 %871, %872
  %874 = icmp sgt i64 %873, 0
  br i1 %874, label %875, label %890

875:                                              ; preds = %868
  %876 = udiv exact i64 %873, 40
  br label %877

877:                                              ; preds = %877, %875
  %878 = phi i64 [ %876, %875 ], [ %888, %877 ]
  %879 = phi ptr [ %869, %875 ], [ %887, %877 ]
  %880 = lshr i64 %878, 1
  %881 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %879, i64 %880
  %882 = load i32, ptr %881, align 8, !tbaa !24
  %883 = icmp ult i32 %882, %848
  %884 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %881, i64 1
  %885 = xor i64 %880, -1
  %886 = add nsw i64 %878, %885
  %887 = select i1 %883, ptr %884, ptr %879
  %888 = select i1 %883, i64 %886, i64 %880
  %889 = icmp sgt i64 %888, 0
  br i1 %889, label %877, label %890

890:                                              ; preds = %877, %868
  %891 = phi ptr [ %869, %868 ], [ %887, %877 ]
  %892 = icmp eq ptr %835, %836
  br i1 %892, label %896, label %893

893:                                              ; preds = %890
  %894 = trunc i64 %832 to i32
  store i32 %894, ptr %835, align 8
  %895 = getelementptr inbounds i8, ptr %835, i64 8
  store ptr %891, ptr %895, align 8
  br label %933

896:                                              ; preds = %890
  %897 = ptrtoint ptr %835 to i64
  %898 = ptrtoint ptr %834 to i64
  %899 = sub i64 %897, %898
  %900 = icmp eq i64 %899, 9223372036854775792
  br i1 %900, label %901, label %903

901:                                              ; preds = %896
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %902 unwind label %947

902:                                              ; preds = %901
  unreachable

903:                                              ; preds = %896
  %904 = ashr exact i64 %899, 4
  %905 = tail call i64 @llvm.umax.i64(i64 %904, i64 1)
  %906 = add i64 %905, %904
  %907 = icmp ult i64 %906, %904
  %908 = icmp ugt i64 %906, 576460752303423487
  %909 = or i1 %907, %908
  %910 = select i1 %909, i64 576460752303423487, i64 %906
  %911 = icmp eq i64 %910, 0
  br i1 %911, label %915, label %912

912:                                              ; preds = %903
  %913 = shl nuw nsw i64 %910, 4
  %914 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %913) #21
          to label %915 unwind label %945

915:                                              ; preds = %912, %903
  %916 = phi ptr [ null, %903 ], [ %914, %912 ]
  %917 = getelementptr inbounds %"struct.std::pair.188", ptr %916, i64 %904
  %918 = trunc i64 %832 to i32
  store i32 %918, ptr %917, align 8
  %919 = getelementptr inbounds i8, ptr %917, i64 8
  store ptr %891, ptr %919, align 8
  %920 = icmp eq ptr %834, %835
  br i1 %920, label %927, label %921

921:                                              ; preds = %915, %921
  %922 = phi ptr [ %925, %921 ], [ %916, %915 ]
  %923 = phi ptr [ %924, %921 ], [ %834, %915 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %922, ptr noundef nonnull align 8 dereferenceable(16) %923, i64 16, i1 false)
  %924 = getelementptr inbounds %"struct.std::pair.188", ptr %923, i64 1
  %925 = getelementptr inbounds %"struct.std::pair.188", ptr %922, i64 1
  %926 = icmp eq ptr %924, %835
  br i1 %926, label %927, label %921

927:                                              ; preds = %921, %915
  %928 = phi ptr [ %916, %915 ], [ %925, %921 ]
  %929 = icmp eq ptr %834, null
  br i1 %929, label %931, label %930

930:                                              ; preds = %927
  tail call void @_ZdlPv(ptr noundef nonnull %834) #23
  br label %931

931:                                              ; preds = %930, %927
  %932 = getelementptr inbounds %"struct.std::pair.188", ptr %916, i64 %910
  br label %933

933:                                              ; preds = %931, %893
  %934 = phi ptr [ %932, %931 ], [ %836, %893 ]
  %935 = phi ptr [ %928, %931 ], [ %835, %893 ]
  %936 = phi ptr [ %916, %931 ], [ %834, %893 ]
  %937 = getelementptr inbounds %"struct.std::pair.188", ptr %935, i64 1
  br label %938

938:                                              ; preds = %933, %861
  %939 = phi ptr [ %934, %933 ], [ %836, %861 ]
  %940 = phi ptr [ %937, %933 ], [ %835, %861 ]
  %941 = phi ptr [ %936, %933 ], [ %834, %861 ]
  %942 = phi i32 [ %833, %933 ], [ %867, %861 ]
  %943 = add nuw nsw i64 %832, 1
  %944 = icmp eq i64 %943, %789
  br i1 %944, label %790, label %831

945:                                              ; preds = %912
  %946 = landingpad { ptr, i32 }
          cleanup
  br label %1578

947:                                              ; preds = %901
  %948 = landingpad { ptr, i32 }
          cleanup
  br label %1578

949:                                              ; preds = %827, %811, %809, %807
  %950 = load ptr, ptr %801, align 8, !tbaa !320
  %951 = icmp eq ptr %950, null
  br i1 %951, label %957, label %952

952:                                              ; preds = %949
  %953 = load ptr, ptr %950, align 8, !tbaa !32
  %954 = icmp eq ptr %953, null
  br i1 %954, label %956, label %955

955:                                              ; preds = %952
  call void @_ZdlPv(ptr noundef nonnull %953) #23
  br label %956

956:                                              ; preds = %955, %952
  call void @_ZdlPv(ptr noundef nonnull %950) #23
  store ptr null, ptr %801, align 8, !tbaa !320
  br label %957

957:                                              ; preds = %956, %949
  %958 = load ptr, ptr %781, align 8, !tbaa !325
  %959 = load ptr, ptr %14, align 8, !tbaa !321
  %960 = ptrtoint ptr %958 to i64
  %961 = ptrtoint ptr %959 to i64
  %962 = sub i64 %960, %961
  %963 = lshr exact i64 %962, 4
  %964 = trunc i64 %963 to i32
  %965 = icmp ult i32 %964, 2
  br i1 %965, label %1011, label %968

966:                                              ; preds = %1007, %968
  %967 = icmp ult i32 %969, 4
  br i1 %967, label %1011, label %968

968:                                              ; preds = %957, %966
  %969 = phi i32 [ %970, %966 ], [ %964, %957 ]
  %970 = lshr i32 %969, 1
  %971 = icmp ult i32 %970, %964
  br i1 %971, label %972, label %966

972:                                              ; preds = %968
  %973 = zext i32 %970 to i64
  br label %974

974:                                              ; preds = %1007, %972
  %975 = phi i64 [ %973, %972 ], [ %1008, %1007 ]
  %976 = sub nuw nsw i64 %975, %973
  %977 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %959, i64 %975
  %978 = load <2 x i32>, ptr %977, align 8, !tbaa !22
  %979 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %959, i64 %976
  %980 = load i32, ptr %979, align 8, !tbaa !317
  %981 = extractelement <2 x i32> %978, i64 0
  %982 = icmp ugt i32 %980, %981
  br i1 %982, label %983, label %1007

983:                                              ; preds = %974
  %984 = icmp ult i64 %975, %973
  %985 = trunc i64 %975 to i32
  br i1 %984, label %1003, label %986

986:                                              ; preds = %983
  %987 = trunc i64 %976 to i32
  br label %988

988:                                              ; preds = %995, %986
  %989 = phi i32 [ %990, %995 ], [ %985, %986 ]
  %990 = phi i32 [ %1001, %995 ], [ %987, %986 ]
  %991 = zext i32 %990 to i64
  %992 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %959, i64 %991
  %993 = load i32, ptr %992, align 8, !tbaa !317
  %994 = icmp ugt i32 %993, %981
  br i1 %994, label %995, label %1003

995:                                              ; preds = %988
  %996 = zext i32 %989 to i64
  %997 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %959, i64 %996
  store i32 %993, ptr %997, align 8, !tbaa !317
  %998 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %959, i64 %991, i32 1
  %999 = load i32, ptr %998, align 4, !tbaa !319
  %1000 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %959, i64 %996, i32 1
  store i32 %999, ptr %1000, align 4, !tbaa !319
  %1001 = sub i32 %990, %970
  %1002 = icmp ult i32 %990, %970
  br i1 %1002, label %1003, label %988

1003:                                             ; preds = %995, %988, %983
  %1004 = phi i32 [ %985, %983 ], [ %989, %988 ], [ %990, %995 ]
  %1005 = zext i32 %1004 to i64
  %1006 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %959, i64 %1005
  store <2 x i32> %978, ptr %1006, align 8, !tbaa !22
  br label %1007

1007:                                             ; preds = %1003, %974
  %1008 = add nuw nsw i64 %975, 1
  %1009 = trunc i64 %1008 to i32
  %1010 = icmp eq i32 %964, %1009
  br i1 %1010, label %966, label %974

1011:                                             ; preds = %966, %957
  %1012 = ptrtoint ptr %796 to i64
  %1013 = ptrtoint ptr %797 to i64
  %1014 = sub i64 %1012, %1013
  %1015 = and i64 %1014, 68719476720
  %1016 = icmp eq i64 %1015, 0
  br i1 %1016, label %1030, label %1017

1017:                                             ; preds = %1011
  %1018 = lshr exact i64 %1014, 4
  %1019 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %2, i64 0, i32 3
  %1020 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %1021 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %1022 = and i64 %1018, 4294967295
  %1023 = and i64 %23, 4294967295
  br label %1042

1024:                                             ; preds = %1321
  %1025 = load ptr, ptr %781, align 8, !tbaa !325
  %1026 = load ptr, ptr %14, align 8, !tbaa !321
  %1027 = ptrtoint ptr %1025 to i64
  %1028 = ptrtoint ptr %1026 to i64
  %1029 = sub i64 %1027, %1028
  br label %1030

1030:                                             ; preds = %1024, %1011
  %1031 = phi i64 [ %1029, %1024 ], [ %962, %1011 ]
  %1032 = phi i8 [ %1059, %1024 ], [ 0, %1011 ]
  %1033 = ashr exact i64 %1031, 4
  %1034 = and i64 %1033, 4294967295
  %1035 = icmp eq i64 %1034, 0
  br i1 %1035, label %1324, label %1036

1036:                                             ; preds = %1030
  %1037 = shl nuw nsw i64 %1034, 2
  %1038 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1037) #21
          to label %1039 unwind label %1342

1039:                                             ; preds = %1036
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %1038, i8 0, i64 %1037, i1 false), !tbaa !22
  br label %1324

1040:                                             ; preds = %807
  %1041 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %16)
          to label %1578 unwind label %1588

1042:                                             ; preds = %1017, %1321
  %1043 = phi i64 [ 0, %1017 ], [ %1322, %1321 ]
  %1044 = phi i8 [ 0, %1017 ], [ %1059, %1321 ]
  %1045 = getelementptr inbounds %"struct.std::pair.188", ptr %797, i64 %1043
  %1046 = load i32, ptr %1045, align 8, !tbaa !326
  %1047 = zext i32 %1046 to i64
  %1048 = load ptr, ptr %1, align 8, !tbaa !58
  %1049 = getelementptr inbounds i32, ptr %1048, i64 %1047
  %1050 = load i32, ptr %1049, align 4, !tbaa !22
  %1051 = getelementptr inbounds %"struct.std::pair.188", ptr %797, i64 %1043, i32 1
  %1052 = load ptr, ptr %1051, align 8, !tbaa !328
  %1053 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1052, i64 0, i32 1
  %1054 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1052, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1055 = load ptr, ptr %1054, align 8, !tbaa !31
  %1056 = load ptr, ptr %1053, align 8, !tbaa !32
  %1057 = icmp eq ptr %1055, %1056
  br i1 %1057, label %1058, label %1063

1058:                                             ; preds = %1071, %1042
  %1059 = phi i8 [ %1044, %1042 ], [ 1, %1071 ]
  br i1 %3, label %1060, label %1251

1060:                                             ; preds = %1058
  br i1 %782, label %1321, label %1061

1061:                                             ; preds = %1060
  %1062 = zext i32 %1050 to i64
  br label %1083

1063:                                             ; preds = %1042, %1071
  %1064 = phi ptr [ %1075, %1071 ], [ %1056, %1042 ]
  %1065 = phi i64 [ %1073, %1071 ], [ 0, %1042 ]
  %1066 = phi i32 [ %1072, %1071 ], [ 0, %1042 ]
  %1067 = getelementptr inbounds %"struct.std::pair", ptr %1064, i64 %1065
  %1068 = load i32, ptr %1067, align 8, !tbaa !37
  %1069 = getelementptr inbounds %"struct.std::pair", ptr %1064, i64 %1065, i32 1
  %1070 = load double, ptr %1069, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %14, i32 noundef %1068, i32 %1046, double %1070)
          to label %1071 unwind label %1081

1071:                                             ; preds = %1063
  %1072 = add i32 %1066, 1
  %1073 = zext i32 %1072 to i64
  %1074 = load ptr, ptr %1054, align 8, !tbaa !31
  %1075 = load ptr, ptr %1053, align 8, !tbaa !32
  %1076 = ptrtoint ptr %1074 to i64
  %1077 = ptrtoint ptr %1075 to i64
  %1078 = sub i64 %1076, %1077
  %1079 = ashr exact i64 %1078, 4
  %1080 = icmp ugt i64 %1079, %1073
  br i1 %1080, label %1063, label %1058

1081:                                             ; preds = %1063
  %1082 = landingpad { ptr, i32 }
          cleanup
  br label %1578

1083:                                             ; preds = %1061, %1248
  %1084 = phi i64 [ 0, %1061 ], [ %1249, %1248 ]
  %1085 = load ptr, ptr %1020, align 8, !tbaa !422, !noalias !73
  %1086 = load i32, ptr %1021, align 8, !tbaa !22, !noalias !73
  %1087 = mul i32 %1086, %1046
  %1088 = zext i32 %1087 to i64
  %1089 = getelementptr inbounds i8, ptr %1085, i64 %1088
  %1090 = getelementptr inbounds i8, ptr %1089, i64 %1084
  %1091 = load i8, ptr %1090, align 1, !tbaa !424, !range !425, !noundef !73
  %1092 = icmp eq i8 %1091, 0
  br i1 %1092, label %1167, label %1093

1093:                                             ; preds = %1083
  %1094 = load ptr, ptr %1, align 8, !tbaa !58
  %1095 = getelementptr inbounds i32, ptr %1094, i64 %1084
  %1096 = load i32, ptr %1095, align 4, !tbaa !22
  %1097 = load ptr, ptr %1019, align 8, !tbaa !472
  %1098 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %1097, i64 %1062
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8)
  store i32 %1096, ptr %8, align 4, !tbaa !22
  %1099 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1098, i64 0, i32 1
  %1100 = load ptr, ptr %1099, align 8, !tbaa !21
  %1101 = load ptr, ptr %1098, align 8, !tbaa !21
  %1102 = ptrtoint ptr %1100 to i64
  %1103 = ptrtoint ptr %1101 to i64
  %1104 = sub i64 %1102, %1103
  %1105 = icmp eq ptr %1100, %1101
  br i1 %1105, label %1110, label %1106

1106:                                             ; preds = %1093
  %1107 = getelementptr inbounds i32, ptr %1100, i64 -1
  %1108 = load i32, ptr %1107, align 4, !tbaa !22
  %1109 = icmp ult i32 %1108, %1096
  br i1 %1109, label %1110, label %1117

1110:                                             ; preds = %1106, %1093
  %1111 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1098, i64 0, i32 2
  %1112 = load ptr, ptr %1111, align 8, !tbaa !417
  %1113 = icmp eq ptr %1100, %1112
  br i1 %1113, label %1116, label %1114

1114:                                             ; preds = %1110
  store i32 %1096, ptr %1100, align 4, !tbaa !22
  %1115 = getelementptr inbounds i32, ptr %1100, i64 1
  store ptr %1115, ptr %1099, align 8, !tbaa !313
  br label %1162

1116:                                             ; preds = %1110
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %1098, ptr %1100, ptr noundef nonnull align 4 dereferenceable(4) %8)
          to label %1162 unwind label %1165

1117:                                             ; preds = %1106
  %1118 = icmp sgt i64 %1104, 0
  br i1 %1118, label %1119, label %1134

1119:                                             ; preds = %1117
  %1120 = lshr exact i64 %1104, 2
  br label %1121

1121:                                             ; preds = %1121, %1119
  %1122 = phi i64 [ %1120, %1119 ], [ %1132, %1121 ]
  %1123 = phi ptr [ %1101, %1119 ], [ %1131, %1121 ]
  %1124 = lshr i64 %1122, 1
  %1125 = getelementptr inbounds i32, ptr %1123, i64 %1124
  %1126 = load i32, ptr %1125, align 4, !tbaa !22
  %1127 = icmp ult i32 %1126, %1096
  %1128 = getelementptr inbounds i32, ptr %1125, i64 1
  %1129 = xor i64 %1124, -1
  %1130 = add nsw i64 %1122, %1129
  %1131 = select i1 %1127, ptr %1128, ptr %1123
  %1132 = select i1 %1127, i64 %1130, i64 %1124
  %1133 = icmp sgt i64 %1132, 0
  br i1 %1133, label %1121, label %1134

1134:                                             ; preds = %1121, %1117
  %1135 = phi ptr [ %1101, %1117 ], [ %1131, %1121 ]
  %1136 = load i32, ptr %1135, align 4, !tbaa !22
  %1137 = icmp eq i32 %1136, %1096
  br i1 %1137, label %1162, label %1138

1138:                                             ; preds = %1134
  %1139 = ptrtoint ptr %1135 to i64
  %1140 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1098, i64 0, i32 2
  %1141 = load ptr, ptr %1140, align 8, !tbaa !417
  %1142 = icmp eq ptr %1100, %1141
  br i1 %1142, label %1161, label %1143

1143:                                             ; preds = %1138
  %1144 = icmp eq ptr %1100, %1135
  %1145 = getelementptr inbounds i32, ptr %1100, i64 1
  br i1 %1144, label %1146, label %1147

1146:                                             ; preds = %1143
  store i32 %1096, ptr %1100, align 4, !tbaa !22
  store ptr %1145, ptr %1099, align 8, !tbaa !313
  br label %1162

1147:                                             ; preds = %1143
  store i32 %1108, ptr %1100, align 4, !tbaa !22
  store ptr %1145, ptr %1099, align 8, !tbaa !313
  %1148 = load i32, ptr %8, align 4, !tbaa !22
  %1149 = ptrtoint ptr %1107 to i64
  %1150 = sub i64 %1149, %1139
  %1151 = icmp sgt i64 %1150, 4
  br i1 %1151, label %1152, label %1156, !prof !23

1152:                                             ; preds = %1147
  %1153 = lshr exact i64 %1150, 2
  %1154 = sub nsw i64 0, %1153
  %1155 = getelementptr inbounds i32, ptr %1100, i64 %1154
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1155, ptr nonnull align 4 %1135, i64 %1150, i1 false)
  br label %1160

1156:                                             ; preds = %1147
  %1157 = icmp eq i64 %1150, 4
  br i1 %1157, label %1158, label %1160

1158:                                             ; preds = %1156
  %1159 = load i32, ptr %1135, align 4, !tbaa !22
  store i32 %1159, ptr %1107, align 4, !tbaa !22
  br label %1160

1160:                                             ; preds = %1158, %1156, %1152
  store i32 %1148, ptr %1135, align 4, !tbaa !22
  br label %1162

1161:                                             ; preds = %1138
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %1098, ptr nonnull %1135, ptr noundef nonnull align 4 dereferenceable(4) %8)
          to label %1162 unwind label %1165

1162:                                             ; preds = %1161, %1116, %1114, %1134, %1146, %1160
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8)
  %1163 = load ptr, ptr %1020, align 8, !tbaa !422, !noalias !475
  %1164 = load i32, ptr %1021, align 8, !tbaa !22, !noalias !475
  br label %1167

1165:                                             ; preds = %1246, %1201, %1161, %1116
  %1166 = landingpad { ptr, i32 }
          cleanup
  br label %1578

1167:                                             ; preds = %1083, %1162
  %1168 = phi i32 [ %1086, %1083 ], [ %1164, %1162 ]
  %1169 = phi ptr [ %1085, %1083 ], [ %1163, %1162 ]
  %1170 = trunc i64 %1084 to i32
  %1171 = mul i32 %1168, %1170
  %1172 = zext i32 %1171 to i64
  %1173 = getelementptr inbounds i8, ptr %1169, i64 %1172
  %1174 = getelementptr inbounds i8, ptr %1173, i64 %1047
  %1175 = load i8, ptr %1174, align 1, !tbaa !424, !range !425, !noundef !73
  %1176 = icmp eq i8 %1175, 0
  br i1 %1176, label %1248, label %1177

1177:                                             ; preds = %1167
  %1178 = load ptr, ptr %1, align 8, !tbaa !58
  %1179 = getelementptr inbounds i32, ptr %1178, i64 %1084
  %1180 = load i32, ptr %1179, align 4, !tbaa !22
  %1181 = zext i32 %1180 to i64
  %1182 = load ptr, ptr %1019, align 8, !tbaa !472
  %1183 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %1182, i64 %1181
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7)
  store i32 %1050, ptr %7, align 4, !tbaa !22
  %1184 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1183, i64 0, i32 1
  %1185 = load ptr, ptr %1184, align 8, !tbaa !21
  %1186 = load ptr, ptr %1183, align 8, !tbaa !21
  %1187 = ptrtoint ptr %1185 to i64
  %1188 = ptrtoint ptr %1186 to i64
  %1189 = sub i64 %1187, %1188
  %1190 = icmp eq ptr %1185, %1186
  br i1 %1190, label %1195, label %1191

1191:                                             ; preds = %1177
  %1192 = getelementptr inbounds i32, ptr %1185, i64 -1
  %1193 = load i32, ptr %1192, align 4, !tbaa !22
  %1194 = icmp ult i32 %1193, %1050
  br i1 %1194, label %1195, label %1202

1195:                                             ; preds = %1191, %1177
  %1196 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1183, i64 0, i32 2
  %1197 = load ptr, ptr %1196, align 8, !tbaa !417
  %1198 = icmp eq ptr %1185, %1197
  br i1 %1198, label %1201, label %1199

1199:                                             ; preds = %1195
  store i32 %1050, ptr %1185, align 4, !tbaa !22
  %1200 = getelementptr inbounds i32, ptr %1185, i64 1
  store ptr %1200, ptr %1184, align 8, !tbaa !313
  br label %1247

1201:                                             ; preds = %1195
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %1183, ptr %1185, ptr noundef nonnull align 4 dereferenceable(4) %7)
          to label %1247 unwind label %1165

1202:                                             ; preds = %1191
  %1203 = icmp sgt i64 %1189, 0
  br i1 %1203, label %1204, label %1219

1204:                                             ; preds = %1202
  %1205 = lshr exact i64 %1189, 2
  br label %1206

1206:                                             ; preds = %1206, %1204
  %1207 = phi i64 [ %1205, %1204 ], [ %1217, %1206 ]
  %1208 = phi ptr [ %1186, %1204 ], [ %1216, %1206 ]
  %1209 = lshr i64 %1207, 1
  %1210 = getelementptr inbounds i32, ptr %1208, i64 %1209
  %1211 = load i32, ptr %1210, align 4, !tbaa !22
  %1212 = icmp ult i32 %1211, %1050
  %1213 = getelementptr inbounds i32, ptr %1210, i64 1
  %1214 = xor i64 %1209, -1
  %1215 = add nsw i64 %1207, %1214
  %1216 = select i1 %1212, ptr %1213, ptr %1208
  %1217 = select i1 %1212, i64 %1215, i64 %1209
  %1218 = icmp sgt i64 %1217, 0
  br i1 %1218, label %1206, label %1219

1219:                                             ; preds = %1206, %1202
  %1220 = phi ptr [ %1186, %1202 ], [ %1216, %1206 ]
  %1221 = load i32, ptr %1220, align 4, !tbaa !22
  %1222 = icmp eq i32 %1221, %1050
  br i1 %1222, label %1247, label %1223

1223:                                             ; preds = %1219
  %1224 = ptrtoint ptr %1220 to i64
  %1225 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1183, i64 0, i32 2
  %1226 = load ptr, ptr %1225, align 8, !tbaa !417
  %1227 = icmp eq ptr %1185, %1226
  br i1 %1227, label %1246, label %1228

1228:                                             ; preds = %1223
  %1229 = icmp eq ptr %1185, %1220
  %1230 = getelementptr inbounds i32, ptr %1185, i64 1
  br i1 %1229, label %1231, label %1232

1231:                                             ; preds = %1228
  store i32 %1050, ptr %1185, align 4, !tbaa !22
  store ptr %1230, ptr %1184, align 8, !tbaa !313
  br label %1247

1232:                                             ; preds = %1228
  store i32 %1193, ptr %1185, align 4, !tbaa !22
  store ptr %1230, ptr %1184, align 8, !tbaa !313
  %1233 = load i32, ptr %7, align 4, !tbaa !22
  %1234 = ptrtoint ptr %1192 to i64
  %1235 = sub i64 %1234, %1224
  %1236 = icmp sgt i64 %1235, 4
  br i1 %1236, label %1237, label %1241, !prof !23

1237:                                             ; preds = %1232
  %1238 = lshr exact i64 %1235, 2
  %1239 = sub nsw i64 0, %1238
  %1240 = getelementptr inbounds i32, ptr %1185, i64 %1239
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1240, ptr nonnull align 4 %1220, i64 %1235, i1 false)
  br label %1245

1241:                                             ; preds = %1232
  %1242 = icmp eq i64 %1235, 4
  br i1 %1242, label %1243, label %1245

1243:                                             ; preds = %1241
  %1244 = load i32, ptr %1220, align 4, !tbaa !22
  store i32 %1244, ptr %1192, align 4, !tbaa !22
  br label %1245

1245:                                             ; preds = %1243, %1241, %1237
  store i32 %1233, ptr %1220, align 4, !tbaa !22
  br label %1247

1246:                                             ; preds = %1223
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %1183, ptr nonnull %1220, ptr noundef nonnull align 4 dereferenceable(4) %7)
          to label %1247 unwind label %1165

1247:                                             ; preds = %1246, %1201, %1199, %1219, %1231, %1245
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7)
  br label %1248

1248:                                             ; preds = %1247, %1167
  %1249 = add nuw nsw i64 %1084, 1
  %1250 = icmp eq i64 %1249, %1023
  br i1 %1250, label %1321, label %1083

1251:                                             ; preds = %1058
  %1252 = zext i32 %1050 to i64
  %1253 = load ptr, ptr %1019, align 8, !tbaa !472
  %1254 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %1253, i64 %1252
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6)
  store i32 %1050, ptr %6, align 4, !tbaa !22
  %1255 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1254, i64 0, i32 1
  %1256 = load ptr, ptr %1255, align 8, !tbaa !21
  %1257 = load ptr, ptr %1254, align 8, !tbaa !21
  %1258 = ptrtoint ptr %1256 to i64
  %1259 = ptrtoint ptr %1257 to i64
  %1260 = sub i64 %1258, %1259
  %1261 = icmp eq ptr %1256, %1257
  br i1 %1261, label %1266, label %1262

1262:                                             ; preds = %1251
  %1263 = getelementptr inbounds i32, ptr %1256, i64 -1
  %1264 = load i32, ptr %1263, align 4, !tbaa !22
  %1265 = icmp ult i32 %1264, %1050
  br i1 %1265, label %1266, label %1273

1266:                                             ; preds = %1262, %1251
  %1267 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1254, i64 0, i32 2
  %1268 = load ptr, ptr %1267, align 8, !tbaa !417
  %1269 = icmp eq ptr %1256, %1268
  br i1 %1269, label %1272, label %1270

1270:                                             ; preds = %1266
  store i32 %1050, ptr %1256, align 4, !tbaa !22
  %1271 = getelementptr inbounds i32, ptr %1256, i64 1
  store ptr %1271, ptr %1255, align 8, !tbaa !313
  br label %1318

1272:                                             ; preds = %1266
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %1254, ptr %1256, ptr noundef nonnull align 4 dereferenceable(4) %6)
          to label %1318 unwind label %1319

1273:                                             ; preds = %1262
  %1274 = icmp sgt i64 %1260, 0
  br i1 %1274, label %1275, label %1290

1275:                                             ; preds = %1273
  %1276 = lshr exact i64 %1260, 2
  br label %1277

1277:                                             ; preds = %1277, %1275
  %1278 = phi i64 [ %1276, %1275 ], [ %1288, %1277 ]
  %1279 = phi ptr [ %1257, %1275 ], [ %1287, %1277 ]
  %1280 = lshr i64 %1278, 1
  %1281 = getelementptr inbounds i32, ptr %1279, i64 %1280
  %1282 = load i32, ptr %1281, align 4, !tbaa !22
  %1283 = icmp ult i32 %1282, %1050
  %1284 = getelementptr inbounds i32, ptr %1281, i64 1
  %1285 = xor i64 %1280, -1
  %1286 = add nsw i64 %1278, %1285
  %1287 = select i1 %1283, ptr %1284, ptr %1279
  %1288 = select i1 %1283, i64 %1286, i64 %1280
  %1289 = icmp sgt i64 %1288, 0
  br i1 %1289, label %1277, label %1290

1290:                                             ; preds = %1277, %1273
  %1291 = phi ptr [ %1257, %1273 ], [ %1287, %1277 ]
  %1292 = load i32, ptr %1291, align 4, !tbaa !22
  %1293 = icmp eq i32 %1292, %1050
  br i1 %1293, label %1318, label %1294

1294:                                             ; preds = %1290
  %1295 = ptrtoint ptr %1291 to i64
  %1296 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1254, i64 0, i32 2
  %1297 = load ptr, ptr %1296, align 8, !tbaa !417
  %1298 = icmp eq ptr %1256, %1297
  br i1 %1298, label %1317, label %1299

1299:                                             ; preds = %1294
  %1300 = icmp eq ptr %1256, %1291
  %1301 = getelementptr inbounds i32, ptr %1256, i64 1
  br i1 %1300, label %1302, label %1303

1302:                                             ; preds = %1299
  store i32 %1050, ptr %1256, align 4, !tbaa !22
  store ptr %1301, ptr %1255, align 8, !tbaa !313
  br label %1318

1303:                                             ; preds = %1299
  store i32 %1264, ptr %1256, align 4, !tbaa !22
  store ptr %1301, ptr %1255, align 8, !tbaa !313
  %1304 = load i32, ptr %6, align 4, !tbaa !22
  %1305 = ptrtoint ptr %1263 to i64
  %1306 = sub i64 %1305, %1295
  %1307 = icmp sgt i64 %1306, 4
  br i1 %1307, label %1308, label %1312, !prof !23

1308:                                             ; preds = %1303
  %1309 = lshr exact i64 %1306, 2
  %1310 = sub nsw i64 0, %1309
  %1311 = getelementptr inbounds i32, ptr %1256, i64 %1310
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1311, ptr nonnull align 4 %1291, i64 %1306, i1 false)
  br label %1316

1312:                                             ; preds = %1303
  %1313 = icmp eq i64 %1306, 4
  br i1 %1313, label %1314, label %1316

1314:                                             ; preds = %1312
  %1315 = load i32, ptr %1291, align 4, !tbaa !22
  store i32 %1315, ptr %1263, align 4, !tbaa !22
  br label %1316

1316:                                             ; preds = %1314, %1312, %1308
  store i32 %1304, ptr %1291, align 4, !tbaa !22
  br label %1318

1317:                                             ; preds = %1294
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %1254, ptr nonnull %1291, ptr noundef nonnull align 4 dereferenceable(4) %6)
          to label %1318 unwind label %1319

1318:                                             ; preds = %1317, %1272, %1270, %1290, %1302, %1316
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6)
  br label %1321

1319:                                             ; preds = %1317, %1272
  %1320 = landingpad { ptr, i32 }
          cleanup
  br label %1578

1321:                                             ; preds = %1248, %1060, %1318
  %1322 = add nuw nsw i64 %1043, 1
  %1323 = icmp eq i64 %1322, %1022
  br i1 %1323, label %1024, label %1042

1324:                                             ; preds = %1039, %1030
  %1325 = phi ptr [ null, %1030 ], [ %1038, %1039 ]
  %1326 = and i64 %1031, 68719476720
  %1327 = icmp eq i64 %1326, 0
  br i1 %1327, label %1339, label %1328

1328:                                             ; preds = %1324
  %1329 = and i8 %1032, 1
  %1330 = icmp eq i8 %1329, 0
  %1331 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %1332 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %1333 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %2, i64 0, i32 3
  %1334 = and i64 %1033, 4294967295
  %1335 = and i64 %1033, 1
  %1336 = icmp eq i64 %1334, 1
  %1337 = sub nsw i64 %1334, %1335
  %1338 = icmp eq i64 %1335, 0
  br label %1344

1339:                                             ; preds = %1546, %1324
  %1340 = icmp eq ptr %1325, null
  br i1 %1340, label %1550, label %1341

1341:                                             ; preds = %1339
  call void @_ZdlPv(ptr noundef nonnull %1325) #23
  br label %1550

1342:                                             ; preds = %1036
  %1343 = landingpad { ptr, i32 }
          cleanup
  br label %1578

1344:                                             ; preds = %1328, %1546
  %1345 = phi i64 [ 0, %1328 ], [ %1547, %1546 ]
  %1346 = load ptr, ptr %14, align 8, !tbaa !321
  %1347 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1345
  %1348 = load i32, ptr %1347, align 8, !tbaa !317
  %1349 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1345, i32 1
  %1350 = load i32, ptr %1349, align 4, !tbaa !319
  br i1 %1330, label %1355, label %1351

1351:                                             ; preds = %1344
  %1352 = icmp eq i32 %1350, -1
  %1353 = load ptr, ptr %1331, align 8
  %1354 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1345, i32 2
  br label %1397

1355:                                             ; preds = %1344
  %1356 = load ptr, ptr %1331, align 8, !tbaa !422, !noalias !478
  br i1 %1336, label %1517, label %1357

1357:                                             ; preds = %1355, %1392
  %1358 = phi i64 [ %1394, %1392 ], [ 0, %1355 ]
  %1359 = phi ptr [ %1393, %1392 ], [ %1325, %1355 ]
  %1360 = phi i64 [ %1395, %1392 ], [ 0, %1355 ]
  %1361 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1358, i32 1
  %1362 = load i32, ptr %1361, align 4, !tbaa !319
  %1363 = load i32, ptr %1332, align 8, !tbaa !22, !noalias !478
  %1364 = mul i32 %1363, %1350
  %1365 = zext i32 %1364 to i64
  %1366 = getelementptr inbounds i8, ptr %1356, i64 %1365
  %1367 = zext i32 %1362 to i64
  %1368 = getelementptr inbounds i8, ptr %1366, i64 %1367
  %1369 = load i8, ptr %1368, align 1, !tbaa !424, !range !425, !noundef !73
  %1370 = icmp eq i8 %1369, 0
  br i1 %1370, label %1375, label %1371

1371:                                             ; preds = %1357
  %1372 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1358
  %1373 = load i32, ptr %1372, align 8, !tbaa !317
  %1374 = getelementptr inbounds i32, ptr %1359, i64 1
  store i32 %1373, ptr %1359, align 4, !tbaa !22
  br label %1375

1375:                                             ; preds = %1371, %1357
  %1376 = phi ptr [ %1359, %1357 ], [ %1374, %1371 ]
  %1377 = or i64 %1358, 1
  %1378 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1377, i32 1
  %1379 = load i32, ptr %1378, align 4, !tbaa !319
  %1380 = load i32, ptr %1332, align 8, !tbaa !22, !noalias !478
  %1381 = mul i32 %1380, %1350
  %1382 = zext i32 %1381 to i64
  %1383 = getelementptr inbounds i8, ptr %1356, i64 %1382
  %1384 = zext i32 %1379 to i64
  %1385 = getelementptr inbounds i8, ptr %1383, i64 %1384
  %1386 = load i8, ptr %1385, align 1, !tbaa !424, !range !425, !noundef !73
  %1387 = icmp eq i8 %1386, 0
  br i1 %1387, label %1392, label %1388

1388:                                             ; preds = %1375
  %1389 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1377
  %1390 = load i32, ptr %1389, align 8, !tbaa !317
  %1391 = getelementptr inbounds i32, ptr %1376, i64 1
  store i32 %1390, ptr %1376, align 4, !tbaa !22
  br label %1392

1392:                                             ; preds = %1388, %1375
  %1393 = phi ptr [ %1376, %1375 ], [ %1391, %1388 ]
  %1394 = add nuw nsw i64 %1358, 2
  %1395 = add i64 %1360, 2
  %1396 = icmp eq i64 %1395, %1337
  br i1 %1396, label %1517, label %1357

1397:                                             ; preds = %1351, %1513
  %1398 = phi i64 [ 0, %1351 ], [ %1515, %1513 ]
  %1399 = phi ptr [ %1325, %1351 ], [ %1514, %1513 ]
  %1400 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1398
  %1401 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1398, i32 1
  %1402 = load i32, ptr %1401, align 4, !tbaa !319
  br i1 %1352, label %1445, label %1403

1403:                                             ; preds = %1397
  %1404 = icmp eq i32 %1402, -1
  br i1 %1404, label %1414, label %1405

1405:                                             ; preds = %1403
  %1406 = load i32, ptr %1332, align 8, !tbaa !22, !noalias !481
  %1407 = mul i32 %1406, %1350
  %1408 = zext i32 %1407 to i64
  %1409 = getelementptr inbounds i8, ptr %1353, i64 %1408
  %1410 = zext i32 %1402 to i64
  %1411 = getelementptr inbounds i8, ptr %1409, i64 %1410
  %1412 = load i8, ptr %1411, align 1, !tbaa !424, !range !425, !noundef !73
  %1413 = icmp eq i8 %1412, 0
  br i1 %1413, label %1414, label %1510

1414:                                             ; preds = %1405, %1403
  %1415 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1398, i32 2
  %1416 = load ptr, ptr %1415, align 8, !tbaa !320
  %1417 = icmp eq ptr %1416, null
  br i1 %1417, label %1445, label %1418

1418:                                             ; preds = %1414
  %1419 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1416, i64 0, i32 1
  %1420 = load ptr, ptr %1419, align 8, !tbaa !31
  %1421 = load ptr, ptr %1416, align 8, !tbaa !32
  %1422 = ptrtoint ptr %1420 to i64
  %1423 = ptrtoint ptr %1421 to i64
  %1424 = sub i64 %1422, %1423
  %1425 = ashr exact i64 %1424, 4
  %1426 = icmp eq ptr %1420, %1421
  br i1 %1426, label %1445, label %1427

1427:                                             ; preds = %1418
  %1428 = load i32, ptr %1332, align 8, !tbaa !22, !noalias !484
  %1429 = mul i32 %1428, %1350
  %1430 = zext i32 %1429 to i64
  %1431 = getelementptr inbounds i8, ptr %1353, i64 %1430
  br label %1436

1432:                                             ; preds = %1436
  %1433 = add i32 %1438, 1
  %1434 = zext i32 %1433 to i64
  %1435 = icmp ugt i64 %1425, %1434
  br i1 %1435, label %1436, label %1445

1436:                                             ; preds = %1427, %1432
  %1437 = phi i64 [ 0, %1427 ], [ %1434, %1432 ]
  %1438 = phi i32 [ 0, %1427 ], [ %1433, %1432 ]
  %1439 = getelementptr inbounds %"struct.std::pair", ptr %1421, i64 %1437
  %1440 = load i32, ptr %1439, align 8, !tbaa !37
  %1441 = zext i32 %1440 to i64
  %1442 = getelementptr inbounds i8, ptr %1431, i64 %1441
  %1443 = load i8, ptr %1442, align 1, !tbaa !424, !range !425, !noundef !73
  %1444 = icmp eq i8 %1443, 0
  br i1 %1444, label %1432, label %1510

1445:                                             ; preds = %1432, %1418, %1414, %1397
  %1446 = load ptr, ptr %1354, align 8, !tbaa !320
  %1447 = icmp eq ptr %1446, null
  br i1 %1447, label %1513, label %1448

1448:                                             ; preds = %1445
  %1449 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1446, i64 0, i32 1
  %1450 = load ptr, ptr %1449, align 8, !tbaa !31
  %1451 = load ptr, ptr %1446, align 8, !tbaa !32
  %1452 = ptrtoint ptr %1450 to i64
  %1453 = ptrtoint ptr %1451 to i64
  %1454 = sub i64 %1452, %1453
  %1455 = ashr exact i64 %1454, 4
  %1456 = icmp eq ptr %1450, %1451
  br i1 %1456, label %1513, label %1457

1457:                                             ; preds = %1448
  %1458 = icmp eq i32 %1402, -1
  %1459 = load ptr, ptr %1331, align 8
  %1460 = load i32, ptr %1332, align 8
  %1461 = zext i32 %1402 to i64
  %1462 = getelementptr inbounds i8, ptr %1459, i64 %1461
  %1463 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1398, i32 2
  br label %1464

1464:                                             ; preds = %1457, %1506
  %1465 = phi i64 [ 0, %1457 ], [ %1508, %1506 ]
  %1466 = phi i32 [ 0, %1457 ], [ %1507, %1506 ]
  br i1 %1458, label %1475, label %1467

1467:                                             ; preds = %1464
  %1468 = getelementptr inbounds %"struct.std::pair", ptr %1451, i64 %1465
  %1469 = load i32, ptr %1468, align 8, !tbaa !37
  %1470 = mul i32 %1460, %1469
  %1471 = zext i32 %1470 to i64
  %1472 = getelementptr inbounds i8, ptr %1462, i64 %1471
  %1473 = load i8, ptr %1472, align 1, !tbaa !424, !range !425, !noundef !73
  %1474 = icmp eq i8 %1473, 0
  br i1 %1474, label %1475, label %1510

1475:                                             ; preds = %1467, %1464
  %1476 = load ptr, ptr %1463, align 8, !tbaa !320
  %1477 = icmp eq ptr %1476, null
  br i1 %1477, label %1506, label %1478

1478:                                             ; preds = %1475
  %1479 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1476, i64 0, i32 1
  %1480 = load ptr, ptr %1479, align 8, !tbaa !31
  %1481 = load ptr, ptr %1476, align 8, !tbaa !32
  %1482 = ptrtoint ptr %1480 to i64
  %1483 = ptrtoint ptr %1481 to i64
  %1484 = sub i64 %1482, %1483
  %1485 = ashr exact i64 %1484, 4
  %1486 = icmp eq ptr %1480, %1481
  br i1 %1486, label %1506, label %1487

1487:                                             ; preds = %1478
  %1488 = getelementptr inbounds %"struct.std::pair", ptr %1451, i64 %1465
  %1489 = load i32, ptr %1488, align 8, !tbaa !37
  %1490 = mul i32 %1460, %1489
  %1491 = zext i32 %1490 to i64
  %1492 = getelementptr inbounds i8, ptr %1459, i64 %1491
  br label %1497

1493:                                             ; preds = %1497
  %1494 = add i32 %1499, 1
  %1495 = zext i32 %1494 to i64
  %1496 = icmp ugt i64 %1485, %1495
  br i1 %1496, label %1497, label %1506

1497:                                             ; preds = %1487, %1493
  %1498 = phi i64 [ 0, %1487 ], [ %1495, %1493 ]
  %1499 = phi i32 [ 0, %1487 ], [ %1494, %1493 ]
  %1500 = getelementptr inbounds %"struct.std::pair", ptr %1481, i64 %1498
  %1501 = load i32, ptr %1500, align 8, !tbaa !37
  %1502 = zext i32 %1501 to i64
  %1503 = getelementptr inbounds i8, ptr %1492, i64 %1502
  %1504 = load i8, ptr %1503, align 1, !tbaa !424, !range !425, !noundef !73
  %1505 = icmp eq i8 %1504, 0
  br i1 %1505, label %1493, label %1510

1506:                                             ; preds = %1493, %1478, %1475
  %1507 = add i32 %1466, 1
  %1508 = zext i32 %1507 to i64
  %1509 = icmp ugt i64 %1455, %1508
  br i1 %1509, label %1464, label %1513

1510:                                             ; preds = %1436, %1467, %1497, %1405
  %1511 = load i32, ptr %1400, align 8, !tbaa !317
  %1512 = getelementptr inbounds i32, ptr %1399, i64 1
  store i32 %1511, ptr %1399, align 4, !tbaa !22
  br label %1513

1513:                                             ; preds = %1506, %1448, %1445, %1510
  %1514 = phi ptr [ %1399, %1445 ], [ %1512, %1510 ], [ %1399, %1448 ], [ %1399, %1506 ]
  %1515 = add nuw nsw i64 %1398, 1
  %1516 = icmp eq i64 %1515, %1334
  br i1 %1516, label %1536, label %1397

1517:                                             ; preds = %1392, %1355
  %1518 = phi ptr [ undef, %1355 ], [ %1393, %1392 ]
  %1519 = phi i64 [ 0, %1355 ], [ %1394, %1392 ]
  %1520 = phi ptr [ %1325, %1355 ], [ %1393, %1392 ]
  br i1 %1338, label %1536, label %1521

1521:                                             ; preds = %1517
  %1522 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1519, i32 1
  %1523 = load i32, ptr %1522, align 4, !tbaa !319
  %1524 = load i32, ptr %1332, align 8, !tbaa !22, !noalias !478
  %1525 = mul i32 %1524, %1350
  %1526 = zext i32 %1525 to i64
  %1527 = getelementptr inbounds i8, ptr %1356, i64 %1526
  %1528 = zext i32 %1523 to i64
  %1529 = getelementptr inbounds i8, ptr %1527, i64 %1528
  %1530 = load i8, ptr %1529, align 1, !tbaa !424, !range !425, !noundef !73
  %1531 = icmp eq i8 %1530, 0
  br i1 %1531, label %1536, label %1532

1532:                                             ; preds = %1521
  %1533 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1346, i64 %1519
  %1534 = load i32, ptr %1533, align 8, !tbaa !317
  %1535 = getelementptr inbounds i32, ptr %1520, i64 1
  store i32 %1534, ptr %1520, align 4, !tbaa !22
  br label %1536

1536:                                             ; preds = %1513, %1517, %1532, %1521
  %1537 = phi ptr [ %1518, %1517 ], [ %1520, %1521 ], [ %1535, %1532 ], [ %1514, %1513 ]
  %1538 = icmp eq ptr %1537, %1325
  br i1 %1538, label %1546, label %1539

1539:                                             ; preds = %1536
  %1540 = zext i32 %1348 to i64
  %1541 = load ptr, ptr %1333, align 8, !tbaa !472
  %1542 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %1541, i64 %1540
  invoke void @_ZN6dealii31CompressedSimpleSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b(ptr noundef nonnull align 8 dereferenceable(24) %1542, ptr %1325, ptr %1537, i1 noundef zeroext true)
          to label %1546 unwind label %1543

1543:                                             ; preds = %1539
  %1544 = landingpad { ptr, i32 }
          cleanup
  %1545 = icmp eq ptr %1325, null
  br i1 %1545, label %1578, label %1549

1546:                                             ; preds = %1539, %1536
  %1547 = add nuw nsw i64 %1345, 1
  %1548 = icmp eq i64 %1547, %1334
  br i1 %1548, label %1339, label %1344

1549:                                             ; preds = %1543
  call void @_ZdlPv(ptr noundef nonnull %1325) #23
  br label %1578

1550:                                             ; preds = %1341, %1339
  %1551 = icmp eq ptr %797, null
  br i1 %1551, label %1553, label %1552

1552:                                             ; preds = %1550
  call void @_ZdlPv(ptr noundef nonnull %797) #23
  br label %1553

1553:                                             ; preds = %1552, %1550
  %1554 = load ptr, ptr %14, align 8, !tbaa !321
  %1555 = load ptr, ptr %781, align 8, !tbaa !325
  %1556 = icmp eq ptr %1554, %1555
  br i1 %1556, label %1572, label %1557

1557:                                             ; preds = %1553, %1567
  %1558 = phi ptr [ %1568, %1567 ], [ %1554, %1553 ]
  %1559 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1558, i64 0, i32 2
  %1560 = load ptr, ptr %1559, align 8, !tbaa !320
  %1561 = icmp eq ptr %1560, null
  br i1 %1561, label %1567, label %1562

1562:                                             ; preds = %1557
  %1563 = load ptr, ptr %1560, align 8, !tbaa !32
  %1564 = icmp eq ptr %1563, null
  br i1 %1564, label %1566, label %1565

1565:                                             ; preds = %1562
  call void @_ZdlPv(ptr noundef nonnull %1563) #23
  br label %1566

1566:                                             ; preds = %1565, %1562
  call void @_ZdlPv(ptr noundef nonnull %1560) #23
  store ptr null, ptr %1559, align 8, !tbaa !320
  br label %1567

1567:                                             ; preds = %1566, %1557
  %1568 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1558, i64 1
  %1569 = icmp eq ptr %1568, %1555
  br i1 %1569, label %1570, label %1557

1570:                                             ; preds = %1567
  %1571 = load ptr, ptr %14, align 8, !tbaa !321
  br label %1572

1572:                                             ; preds = %1570, %1553
  %1573 = phi ptr [ %1571, %1570 ], [ %1554, %1553 ]
  %1574 = icmp eq ptr %1573, null
  br i1 %1574, label %1576, label %1575

1575:                                             ; preds = %1572
  call void @_ZdlPv(ptr noundef nonnull %1573) #23
  br label %1576

1576:                                             ; preds = %1572, %1575
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #24
  br label %1577

1577:                                             ; preds = %1576, %717
  ret void

1578:                                             ; preds = %945, %947, %1165, %1319, %1081, %1549, %1543, %1342, %1040
  %1579 = phi ptr [ %797, %1040 ], [ %797, %1081 ], [ %797, %1319 ], [ %797, %1165 ], [ %797, %1342 ], [ %797, %1543 ], [ %797, %1549 ], [ %834, %945 ], [ %834, %947 ]
  %1580 = phi { ptr, i32 } [ %1041, %1040 ], [ %1082, %1081 ], [ %1320, %1319 ], [ %1166, %1165 ], [ %1343, %1342 ], [ %1544, %1543 ], [ %1544, %1549 ], [ %946, %945 ], [ %948, %947 ]
  %1581 = icmp eq ptr %1579, null
  br i1 %1581, label %1583, label %1582

1582:                                             ; preds = %1578
  call void @_ZdlPv(ptr noundef nonnull %1579) #23
  br label %1583

1583:                                             ; preds = %1582, %1578
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %14)
          to label %1584 unwind label %1588

1584:                                             ; preds = %1583, %830
  %1585 = phi { ptr, i32 } [ %1580, %1583 ], [ %829, %830 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #24
  br label %1586

1586:                                             ; preds = %1584, %727
  %1587 = phi { ptr, i32 } [ %728, %727 ], [ %1585, %1584 ]
  resume { ptr, i32 } %1587

1588:                                             ; preds = %1583, %1040, %828
  %1589 = landingpad { ptr, i32 }
          catch ptr null
  %1590 = extractvalue { ptr, i32 } %1589, 0
  call void @__clang_call_terminate(ptr %1590) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_20BlockSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(288) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_20BlockSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(288) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_20BlockSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(288) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::vector.36", align 8
  %8 = alloca %"class.std::vector.178", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = alloca %"struct.dealii::internals::distributing", align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !313
  %13 = load ptr, ptr %1, align 8, !tbaa !58
  %14 = ptrtoint ptr %12 to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 2
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 1
  %20 = load i32, ptr %19, align 8, !tbaa !487
  %21 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3
  %22 = load i32, ptr %21, align 4, !tbaa !22
  %23 = icmp eq i32 %22, %18
  %24 = and i64 %17, 4294967295
  br i1 %23, label %708, label %25

25:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %34

28:                                               ; preds = %25
  %29 = shl nuw nsw i64 %24, 2
  %30 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %29) #21
          to label %31 unwind label %72

31:                                               ; preds = %28
  store ptr %30, ptr %7, align 8, !tbaa !58
  %32 = getelementptr inbounds i32, ptr %30, i64 %24
  %33 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %32, ptr %33, align 8, !tbaa !417
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %30, i8 0, i64 %29, i1 false), !tbaa !22
  br label %34

34:                                               ; preds = %31, %27
  %35 = phi ptr [ null, %27 ], [ %30, %31 ]
  %36 = phi ptr [ null, %27 ], [ %32, %31 ]
  %37 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %36, ptr %37, align 8, !tbaa !313
  %38 = icmp eq i32 %18, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %41 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %43 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = and i64 %17, 4294967295
  br label %74

46:                                               ; preds = %179
  %47 = load ptr, ptr %37, align 8, !tbaa !21
  %48 = load ptr, ptr %7, align 8, !tbaa !21
  br label %49

49:                                               ; preds = %46, %34
  %50 = phi ptr [ %35, %34 ], [ %48, %46 ]
  %51 = phi ptr [ %36, %34 ], [ %47, %46 ]
  %52 = phi ptr [ null, %34 ], [ %181, %46 ]
  %53 = phi ptr [ null, %34 ], [ %182, %46 ]
  %54 = phi i32 [ 0, %34 ], [ %183, %46 ]
  %55 = zext i32 %54 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6)
  store i32 0, ptr %6, align 4, !tbaa !22
  %56 = ptrtoint ptr %51 to i64
  %57 = ptrtoint ptr %50 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = icmp ult i64 %59, %55
  br i1 %60, label %61, label %66

61:                                               ; preds = %49
  %62 = sub nsw i64 %55, %59
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %51, i64 noundef %62, ptr noundef nonnull align 4 dereferenceable(4) %6)
          to label %63 unwind label %269

63:                                               ; preds = %61
  %64 = load ptr, ptr %7, align 8, !tbaa !21
  %65 = load ptr, ptr %37, align 8, !tbaa !21
  br label %190

66:                                               ; preds = %49
  %67 = icmp ugt i64 %59, %55
  br i1 %67, label %68, label %190

68:                                               ; preds = %66
  %69 = getelementptr inbounds i32, ptr %50, i64 %55
  %70 = icmp eq ptr %51, %69
  br i1 %70, label %190, label %71

71:                                               ; preds = %68
  store ptr %69, ptr %37, align 8, !tbaa !313
  br label %190

72:                                               ; preds = %28
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %706

74:                                               ; preds = %39, %179
  %75 = phi i64 [ 0, %39 ], [ %184, %179 ]
  %76 = phi i32 [ 0, %39 ], [ %183, %179 ]
  %77 = phi ptr [ null, %39 ], [ %182, %179 ]
  %78 = phi ptr [ null, %39 ], [ %181, %179 ]
  %79 = phi ptr [ null, %39 ], [ %180, %179 ]
  %80 = load ptr, ptr %41, align 8, !tbaa !55
  %81 = load i32, ptr %42, align 8, !tbaa !57
  %82 = load ptr, ptr %40, align 8, !tbaa !55
  %83 = ptrtoint ptr %80 to i64
  %84 = ptrtoint ptr %82 to i64
  %85 = sub i64 %83, %84
  %86 = shl nsw i64 %85, 3
  %87 = zext i32 %81 to i64
  %88 = add nsw i64 %86, %87
  %89 = load ptr, ptr %1, align 8, !tbaa !58
  %90 = getelementptr inbounds i32, ptr %89, i64 %75
  %91 = load i32, ptr %90, align 4, !tbaa !22
  %92 = zext i32 %91 to i64
  %93 = icmp ugt i64 %88, %92
  br i1 %93, label %94, label %104

94:                                               ; preds = %74
  %95 = lshr i32 %91, 6
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i64, ptr %82, i64 %96
  %98 = and i32 %91, 63
  %99 = zext i32 %98 to i64
  %100 = shl nuw i64 1, %99
  %101 = load i64, ptr %97, align 8, !tbaa !42
  %102 = and i64 %101, %100
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %109

104:                                              ; preds = %94, %74
  %105 = zext i32 %76 to i64
  %106 = load ptr, ptr %7, align 8, !tbaa !58
  %107 = getelementptr inbounds i32, ptr %106, i64 %105
  store i32 %91, ptr %107, align 4, !tbaa !22
  %108 = add i32 %76, 1
  br label %179

109:                                              ; preds = %94
  %110 = load ptr, ptr %43, align 8, !tbaa !21
  %111 = load ptr, ptr %44, align 8, !tbaa !21
  %112 = ptrtoint ptr %111 to i64
  %113 = ptrtoint ptr %110 to i64
  %114 = sub i64 %112, %113
  %115 = icmp sgt i64 %114, 0
  br i1 %115, label %116, label %131

116:                                              ; preds = %109
  %117 = udiv exact i64 %114, 40
  br label %118

118:                                              ; preds = %118, %116
  %119 = phi i64 [ %117, %116 ], [ %129, %118 ]
  %120 = phi ptr [ %110, %116 ], [ %128, %118 ]
  %121 = lshr i64 %119, 1
  %122 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %120, i64 %121
  %123 = load i32, ptr %122, align 8, !tbaa !24
  %124 = icmp ult i32 %123, %91
  %125 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %122, i64 1
  %126 = xor i64 %121, -1
  %127 = add nsw i64 %119, %126
  %128 = select i1 %124, ptr %125, ptr %120
  %129 = select i1 %124, i64 %127, i64 %121
  %130 = icmp sgt i64 %129, 0
  br i1 %130, label %118, label %131

131:                                              ; preds = %118, %109
  %132 = phi ptr [ %110, %109 ], [ %128, %118 ]
  %133 = icmp eq ptr %78, %79
  br i1 %133, label %137, label %134

134:                                              ; preds = %131
  %135 = trunc i64 %75 to i32
  store i32 %135, ptr %78, align 8
  %136 = getelementptr inbounds i8, ptr %78, i64 8
  store ptr %132, ptr %136, align 8
  br label %174

137:                                              ; preds = %131
  %138 = ptrtoint ptr %78 to i64
  %139 = ptrtoint ptr %77 to i64
  %140 = sub i64 %138, %139
  %141 = icmp eq i64 %140, 9223372036854775792
  br i1 %141, label %142, label %144

142:                                              ; preds = %137
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %143 unwind label %188

143:                                              ; preds = %142
  unreachable

144:                                              ; preds = %137
  %145 = ashr exact i64 %140, 4
  %146 = tail call i64 @llvm.umax.i64(i64 %145, i64 1)
  %147 = add i64 %146, %145
  %148 = icmp ult i64 %147, %145
  %149 = icmp ugt i64 %147, 576460752303423487
  %150 = or i1 %148, %149
  %151 = select i1 %150, i64 576460752303423487, i64 %147
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %156, label %153

153:                                              ; preds = %144
  %154 = shl nuw nsw i64 %151, 4
  %155 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %154) #21
          to label %156 unwind label %186

156:                                              ; preds = %153, %144
  %157 = phi ptr [ null, %144 ], [ %155, %153 ]
  %158 = getelementptr inbounds %"struct.std::pair.188", ptr %157, i64 %145
  %159 = trunc i64 %75 to i32
  store i32 %159, ptr %158, align 8
  %160 = getelementptr inbounds i8, ptr %158, i64 8
  store ptr %132, ptr %160, align 8
  %161 = icmp eq ptr %77, %78
  br i1 %161, label %168, label %162

162:                                              ; preds = %156, %162
  %163 = phi ptr [ %166, %162 ], [ %157, %156 ]
  %164 = phi ptr [ %165, %162 ], [ %77, %156 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %163, ptr noundef nonnull align 8 dereferenceable(16) %164, i64 16, i1 false)
  %165 = getelementptr inbounds %"struct.std::pair.188", ptr %164, i64 1
  %166 = getelementptr inbounds %"struct.std::pair.188", ptr %163, i64 1
  %167 = icmp eq ptr %165, %78
  br i1 %167, label %168, label %162

168:                                              ; preds = %162, %156
  %169 = phi ptr [ %157, %156 ], [ %166, %162 ]
  %170 = icmp eq ptr %77, null
  br i1 %170, label %172, label %171

171:                                              ; preds = %168
  tail call void @_ZdlPv(ptr noundef nonnull %77) #23
  br label %172

172:                                              ; preds = %171, %168
  %173 = getelementptr inbounds %"struct.std::pair.188", ptr %157, i64 %151
  br label %174

174:                                              ; preds = %172, %134
  %175 = phi ptr [ %173, %172 ], [ %79, %134 ]
  %176 = phi ptr [ %169, %172 ], [ %78, %134 ]
  %177 = phi ptr [ %157, %172 ], [ %77, %134 ]
  %178 = getelementptr inbounds %"struct.std::pair.188", ptr %176, i64 1
  br label %179

179:                                              ; preds = %174, %104
  %180 = phi ptr [ %175, %174 ], [ %79, %104 ]
  %181 = phi ptr [ %178, %174 ], [ %78, %104 ]
  %182 = phi ptr [ %177, %174 ], [ %77, %104 ]
  %183 = phi i32 [ %76, %174 ], [ %108, %104 ]
  %184 = add nuw nsw i64 %75, 1
  %185 = icmp eq i64 %184, %45
  br i1 %185, label %46, label %74

186:                                              ; preds = %153
  %187 = landingpad { ptr, i32 }
          cleanup
  br label %697

188:                                              ; preds = %142
  %189 = landingpad { ptr, i32 }
          cleanup
  br label %697

190:                                              ; preds = %63, %71, %68, %66
  %191 = phi ptr [ %65, %63 ], [ %69, %71 ], [ %51, %68 ], [ %51, %66 ]
  %192 = phi ptr [ %64, %63 ], [ %50, %71 ], [ %50, %68 ], [ %50, %66 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6)
  %193 = icmp eq ptr %192, %191
  br i1 %193, label %203, label %194

194:                                              ; preds = %190
  %195 = ptrtoint ptr %191 to i64
  %196 = ptrtoint ptr %192 to i64
  %197 = sub i64 %195, %196
  %198 = ashr exact i64 %197, 2
  %199 = call i64 @llvm.ctlz.i64(i64 %198, i1 true), !range !418
  %200 = shl nuw nsw i64 %199, 1
  %201 = xor i64 %200, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %192, ptr %191, i64 noundef %201)
          to label %202 unwind label %269

202:                                              ; preds = %194
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %192, ptr %191)
          to label %203 unwind label %269

203:                                              ; preds = %190, %202
  %204 = ptrtoint ptr %52 to i64
  %205 = ptrtoint ptr %53 to i64
  %206 = sub i64 %204, %205
  %207 = and i64 %206, 68719476720
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %220, label %209

209:                                              ; preds = %203
  %210 = lshr exact i64 %206, 4
  %211 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  %212 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 4
  %213 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 4, i32 1
  %214 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 5
  %215 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 5, i32 1
  %216 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 3, i32 0, i32 1
  %217 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %218 = and i64 %210, 4294967295
  %219 = and i64 %17, 4294967295
  br label %271

220:                                              ; preds = %555, %203
  %221 = load ptr, ptr %37, align 8, !tbaa !21
  %222 = load ptr, ptr %7, align 8, !tbaa !21
  %223 = ptrtoint ptr %221 to i64
  %224 = ptrtoint ptr %222 to i64
  %225 = sub i64 %223, %224
  %226 = lshr exact i64 %225, 2
  %227 = trunc i64 %226 to i32
  %228 = add i32 %20, 1
  %229 = zext i32 %228 to i64
  %230 = icmp eq i32 %228, 0
  br i1 %230, label %558, label %231

231:                                              ; preds = %220
  %232 = shl nuw nsw i64 %229, 2
  %233 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %232) #21
          to label %234 unwind label %637

234:                                              ; preds = %231
  %235 = getelementptr inbounds i32, ptr %233, i64 %229
  %236 = add nuw nsw i64 %229, 4611686018427387903
  %237 = and i64 %236, 4611686018427387903
  %238 = add nuw nsw i64 %237, 1
  %239 = icmp ult i64 %237, 31
  br i1 %239, label %263, label %240

240:                                              ; preds = %234
  %241 = and i64 %238, 9223372036854775776
  %242 = shl i64 %241, 2
  %243 = getelementptr i8, ptr %233, i64 %242
  %244 = insertelement <8 x i32> poison, i32 %227, i64 0
  %245 = shufflevector <8 x i32> %244, <8 x i32> poison, <8 x i32> zeroinitializer
  %246 = insertelement <8 x i32> poison, i32 %227, i64 0
  %247 = shufflevector <8 x i32> %246, <8 x i32> poison, <8 x i32> zeroinitializer
  %248 = insertelement <8 x i32> poison, i32 %227, i64 0
  %249 = shufflevector <8 x i32> %248, <8 x i32> poison, <8 x i32> zeroinitializer
  %250 = insertelement <8 x i32> poison, i32 %227, i64 0
  %251 = shufflevector <8 x i32> %250, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %252

252:                                              ; preds = %252, %240
  %253 = phi i64 [ 0, %240 ], [ %259, %252 ]
  %254 = shl i64 %253, 2
  %255 = getelementptr i8, ptr %233, i64 %254
  store <8 x i32> %245, ptr %255, align 4, !tbaa !22
  %256 = getelementptr i32, ptr %255, i64 8
  store <8 x i32> %247, ptr %256, align 4, !tbaa !22
  %257 = getelementptr i32, ptr %255, i64 16
  store <8 x i32> %249, ptr %257, align 4, !tbaa !22
  %258 = getelementptr i32, ptr %255, i64 24
  store <8 x i32> %251, ptr %258, align 4, !tbaa !22
  %259 = add nuw i64 %253, 32
  %260 = icmp eq i64 %259, %241
  br i1 %260, label %261, label %252, !llvm.loop !495

261:                                              ; preds = %252
  %262 = icmp eq i64 %238, %241
  br i1 %262, label %558, label %263

263:                                              ; preds = %234, %261
  %264 = phi ptr [ %233, %234 ], [ %243, %261 ]
  br label %265

265:                                              ; preds = %263, %265
  %266 = phi ptr [ %267, %265 ], [ %264, %263 ]
  store i32 %227, ptr %266, align 4, !tbaa !22
  %267 = getelementptr inbounds i32, ptr %266, i64 1
  %268 = icmp eq ptr %267, %235
  br i1 %268, label %558, label %265, !llvm.loop !496

269:                                              ; preds = %202, %194, %61
  %270 = landingpad { ptr, i32 }
          cleanup
  br label %697

271:                                              ; preds = %209, %555
  %272 = phi i64 [ 0, %209 ], [ %556, %555 ]
  %273 = getelementptr inbounds %"struct.std::pair.188", ptr %53, i64 %272
  %274 = load i32, ptr %273, align 8, !tbaa !326
  %275 = zext i32 %274 to i64
  %276 = load ptr, ptr %1, align 8, !tbaa !58
  %277 = getelementptr inbounds i32, ptr %276, i64 %275
  %278 = load i32, ptr %277, align 4, !tbaa !22
  %279 = getelementptr inbounds %"struct.std::pair.188", ptr %53, i64 %272, i32 1
  %280 = load ptr, ptr %279, align 8, !tbaa !328
  %281 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %280, i64 0, i32 1
  %282 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %280, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %283 = load ptr, ptr %282, align 8, !tbaa !31
  %284 = load ptr, ptr %281, align 8, !tbaa !32
  %285 = icmp eq ptr %283, %284
  br i1 %285, label %286, label %288

286:                                              ; preds = %438, %271
  br i1 %3, label %287, label %522

287:                                              ; preds = %286
  br i1 %38, label %555, label %448

288:                                              ; preds = %271, %438
  %289 = phi ptr [ %442, %438 ], [ %284, %271 ]
  %290 = phi i64 [ %440, %438 ], [ 0, %271 ]
  %291 = phi i32 [ %439, %438 ], [ 0, %271 ]
  %292 = getelementptr inbounds %"struct.std::pair", ptr %289, i64 %290
  %293 = load i32, ptr %292, align 8, !tbaa !37
  %294 = load ptr, ptr %37, align 8, !tbaa !21
  %295 = getelementptr inbounds i32, ptr %294, i64 -1
  %296 = load i32, ptr %295, align 4, !tbaa !22
  %297 = icmp ult i32 %296, %293
  br i1 %297, label %298, label %345

298:                                              ; preds = %288
  %299 = load ptr, ptr %211, align 8, !tbaa !417
  %300 = icmp eq ptr %294, %299
  br i1 %300, label %303, label %301

301:                                              ; preds = %298
  store i32 %293, ptr %294, align 4, !tbaa !22
  %302 = getelementptr inbounds i32, ptr %294, i64 1
  store ptr %302, ptr %37, align 8, !tbaa !313
  br label %438

303:                                              ; preds = %298
  %304 = load ptr, ptr %7, align 8, !tbaa !21
  %305 = ptrtoint ptr %294 to i64
  %306 = ptrtoint ptr %304 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 9223372036854775804
  br i1 %308, label %309, label %311

309:                                              ; preds = %303
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %310 unwind label %343

310:                                              ; preds = %309
  unreachable

311:                                              ; preds = %303
  %312 = ashr exact i64 %307, 2
  %313 = call i64 @llvm.umax.i64(i64 %312, i64 1)
  %314 = add i64 %313, %312
  %315 = icmp ult i64 %314, %312
  %316 = icmp ugt i64 %314, 2305843009213693951
  %317 = or i1 %315, %316
  %318 = select i1 %317, i64 2305843009213693951, i64 %314
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %323, label %320

320:                                              ; preds = %311
  %321 = shl nuw nsw i64 %318, 2
  %322 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %321) #21
          to label %323 unwind label %341

323:                                              ; preds = %320, %311
  %324 = phi ptr [ null, %311 ], [ %322, %320 ]
  %325 = getelementptr inbounds i32, ptr %324, i64 %312
  store i32 %293, ptr %325, align 4, !tbaa !22
  %326 = icmp sgt i64 %307, 4
  br i1 %326, label %327, label %328, !prof !23

327:                                              ; preds = %323
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %324, ptr align 4 %304, i64 %307, i1 false)
  br label %333

328:                                              ; preds = %323
  %329 = icmp eq i64 %307, 4
  br i1 %329, label %330, label %333

330:                                              ; preds = %328
  %331 = load i32, ptr %304, align 4, !tbaa !22
  store i32 %331, ptr %324, align 4, !tbaa !22
  %332 = getelementptr inbounds i32, ptr %325, i64 1
  br label %336

333:                                              ; preds = %328, %327
  %334 = getelementptr inbounds i32, ptr %325, i64 1
  %335 = icmp eq ptr %304, null
  br i1 %335, label %338, label %336

336:                                              ; preds = %330, %333
  %337 = phi ptr [ %332, %330 ], [ %334, %333 ]
  call void @_ZdlPv(ptr noundef nonnull %304) #23
  br label %338

338:                                              ; preds = %336, %333
  %339 = phi ptr [ %334, %333 ], [ %337, %336 ]
  store ptr %324, ptr %7, align 8, !tbaa !58
  store ptr %339, ptr %37, align 8, !tbaa !313
  %340 = getelementptr inbounds i32, ptr %324, i64 %318
  store ptr %340, ptr %211, align 8, !tbaa !417
  br label %438

341:                                              ; preds = %320
  %342 = landingpad { ptr, i32 }
          cleanup
  br label %697

343:                                              ; preds = %309
  %344 = landingpad { ptr, i32 }
          cleanup
  br label %697

345:                                              ; preds = %288
  %346 = load ptr, ptr %7, align 8, !tbaa !21
  %347 = ptrtoint ptr %294 to i64
  %348 = ptrtoint ptr %346 to i64
  %349 = sub i64 %347, %348
  %350 = icmp sgt i64 %349, 0
  br i1 %350, label %351, label %366

351:                                              ; preds = %345
  %352 = lshr exact i64 %349, 2
  br label %353

353:                                              ; preds = %353, %351
  %354 = phi i64 [ %352, %351 ], [ %364, %353 ]
  %355 = phi ptr [ %346, %351 ], [ %363, %353 ]
  %356 = lshr i64 %354, 1
  %357 = getelementptr inbounds i32, ptr %355, i64 %356
  %358 = load i32, ptr %357, align 4, !tbaa !22
  %359 = icmp ult i32 %358, %293
  %360 = getelementptr inbounds i32, ptr %357, i64 1
  %361 = xor i64 %356, -1
  %362 = add nsw i64 %354, %361
  %363 = select i1 %359, ptr %360, ptr %355
  %364 = select i1 %359, i64 %362, i64 %356
  %365 = icmp sgt i64 %364, 0
  br i1 %365, label %353, label %366

366:                                              ; preds = %353, %345
  %367 = phi ptr [ %346, %345 ], [ %363, %353 ]
  %368 = load i32, ptr %367, align 4, !tbaa !22
  %369 = icmp eq i32 %368, %293
  br i1 %369, label %438, label %370

370:                                              ; preds = %366
  %371 = ptrtoint ptr %367 to i64
  %372 = load ptr, ptr %211, align 8, !tbaa !417
  %373 = icmp eq ptr %294, %372
  br i1 %373, label %391, label %374

374:                                              ; preds = %370
  %375 = icmp eq ptr %294, %367
  %376 = getelementptr inbounds i32, ptr %294, i64 1
  br i1 %375, label %377, label %378

377:                                              ; preds = %374
  store i32 %293, ptr %294, align 4, !tbaa !22
  store ptr %376, ptr %37, align 8, !tbaa !313
  br label %438

378:                                              ; preds = %374
  store i32 %296, ptr %294, align 4, !tbaa !22
  store ptr %376, ptr %37, align 8, !tbaa !313
  %379 = ptrtoint ptr %295 to i64
  %380 = sub i64 %379, %371
  %381 = icmp sgt i64 %380, 4
  br i1 %381, label %382, label %386, !prof !23

382:                                              ; preds = %378
  %383 = lshr exact i64 %380, 2
  %384 = sub nsw i64 0, %383
  %385 = getelementptr inbounds i32, ptr %294, i64 %384
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %385, ptr nonnull align 4 %367, i64 %380, i1 false)
  br label %390

386:                                              ; preds = %378
  %387 = icmp eq i64 %380, 4
  br i1 %387, label %388, label %390

388:                                              ; preds = %386
  %389 = load i32, ptr %367, align 4, !tbaa !22
  store i32 %389, ptr %295, align 4, !tbaa !22
  br label %390

390:                                              ; preds = %388, %386, %382
  store i32 %293, ptr %367, align 4, !tbaa !22
  br label %438

391:                                              ; preds = %370
  %392 = icmp eq i64 %349, 9223372036854775804
  br i1 %392, label %393, label %395

393:                                              ; preds = %391
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %394 unwind label %436

394:                                              ; preds = %393
  unreachable

395:                                              ; preds = %391
  %396 = ashr exact i64 %349, 2
  %397 = call i64 @llvm.umax.i64(i64 %396, i64 1)
  %398 = add i64 %397, %396
  %399 = icmp ult i64 %398, %396
  %400 = icmp ugt i64 %398, 2305843009213693951
  %401 = or i1 %399, %400
  %402 = select i1 %401, i64 2305843009213693951, i64 %398
  %403 = sub i64 %371, %348
  %404 = ashr exact i64 %403, 2
  %405 = icmp eq i64 %402, 0
  br i1 %405, label %409, label %406

406:                                              ; preds = %395
  %407 = shl nuw nsw i64 %402, 2
  %408 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %407) #21
          to label %409 unwind label %434

409:                                              ; preds = %406, %395
  %410 = phi ptr [ null, %395 ], [ %408, %406 ]
  %411 = getelementptr inbounds i32, ptr %410, i64 %404
  store i32 %293, ptr %411, align 4, !tbaa !22
  %412 = icmp sgt i64 %403, 4
  br i1 %412, label %413, label %414, !prof !23

413:                                              ; preds = %409
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %410, ptr align 4 %346, i64 %403, i1 false)
  br label %418

414:                                              ; preds = %409
  %415 = icmp eq i64 %403, 4
  br i1 %415, label %416, label %418

416:                                              ; preds = %414
  %417 = load i32, ptr %346, align 4, !tbaa !22
  store i32 %417, ptr %410, align 4, !tbaa !22
  br label %418

418:                                              ; preds = %416, %414, %413
  %419 = getelementptr inbounds i32, ptr %411, i64 1
  %420 = sub i64 %347, %371
  %421 = icmp sgt i64 %420, 4
  br i1 %421, label %422, label %423, !prof !23

422:                                              ; preds = %418
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %419, ptr nonnull align 4 %367, i64 %420, i1 false)
  br label %427

423:                                              ; preds = %418
  %424 = icmp eq i64 %420, 4
  br i1 %424, label %425, label %427

425:                                              ; preds = %423
  %426 = load i32, ptr %367, align 4, !tbaa !22
  store i32 %426, ptr %419, align 4, !tbaa !22
  br label %427

427:                                              ; preds = %425, %423, %422
  %428 = icmp eq ptr %346, null
  br i1 %428, label %430, label %429

429:                                              ; preds = %427
  call void @_ZdlPv(ptr noundef nonnull %346) #23
  br label %430

430:                                              ; preds = %429, %427
  %431 = ashr exact i64 %420, 2
  %432 = getelementptr inbounds i32, ptr %419, i64 %431
  store ptr %410, ptr %7, align 8, !tbaa !58
  store ptr %432, ptr %37, align 8, !tbaa !313
  %433 = getelementptr inbounds i32, ptr %410, i64 %402
  store ptr %433, ptr %211, align 8, !tbaa !417
  br label %438

434:                                              ; preds = %406
  %435 = landingpad { ptr, i32 }
          cleanup
  br label %697

436:                                              ; preds = %393
  %437 = landingpad { ptr, i32 }
          cleanup
  br label %697

438:                                              ; preds = %430, %390, %377, %366, %338, %301
  %439 = add i32 %291, 1
  %440 = zext i32 %439 to i64
  %441 = load ptr, ptr %282, align 8, !tbaa !31
  %442 = load ptr, ptr %281, align 8, !tbaa !32
  %443 = ptrtoint ptr %441 to i64
  %444 = ptrtoint ptr %442 to i64
  %445 = sub i64 %443, %444
  %446 = ashr exact i64 %445, 4
  %447 = icmp ugt i64 %446, %440
  br i1 %447, label %288, label %286

448:                                              ; preds = %287, %517
  %449 = phi i64 [ %518, %517 ], [ 0, %287 ]
  %450 = load ptr, ptr %1, align 8, !tbaa !58
  %451 = getelementptr inbounds i32, ptr %450, i64 %449
  %452 = load i32, ptr %451, align 4, !tbaa !22
  %453 = load i32, ptr %212, align 8, !tbaa !61
  %454 = load ptr, ptr %213, align 8, !tbaa !58
  br label %455

455:                                              ; preds = %455, %448
  %456 = phi i32 [ %453, %448 ], [ %457, %455 ]
  %457 = add i32 %456, -1
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds i32, ptr %454, i64 %458
  %460 = load i32, ptr %459, align 4, !tbaa !22
  %461 = icmp ugt i32 %460, %278
  br i1 %461, label %455, label %462

462:                                              ; preds = %455
  %463 = load i32, ptr %214, align 8, !tbaa !61
  %464 = load ptr, ptr %215, align 8, !tbaa !58
  br label %465

465:                                              ; preds = %465, %462
  %466 = phi i32 [ %463, %462 ], [ %467, %465 ]
  %467 = add i32 %466, -1
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds i32, ptr %464, i64 %468
  %470 = load i32, ptr %469, align 4, !tbaa !22
  %471 = icmp ugt i32 %470, %452
  br i1 %471, label %465, label %472

472:                                              ; preds = %465
  %473 = sub i32 %278, %460
  %474 = sub i32 %452, %470
  %475 = load ptr, ptr %216, align 8, !tbaa !497, !noalias !498
  %476 = load i32, ptr %217, align 8, !tbaa !22, !noalias !498
  %477 = mul i32 %476, %457
  %478 = zext i32 %477 to i64
  %479 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %475, i64 %478
  %480 = zext i32 %467 to i64
  %481 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %479, i64 %480
  %482 = load ptr, ptr %481, align 8, !tbaa !501
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %482, i32 noundef %473, i32 noundef %474)
          to label %483 unwind label %520

483:                                              ; preds = %472
  %484 = load ptr, ptr %1, align 8, !tbaa !58
  %485 = getelementptr inbounds i32, ptr %484, i64 %449
  %486 = load i32, ptr %485, align 4, !tbaa !22
  %487 = load i32, ptr %212, align 8, !tbaa !61
  %488 = load ptr, ptr %213, align 8, !tbaa !58
  br label %489

489:                                              ; preds = %489, %483
  %490 = phi i32 [ %487, %483 ], [ %491, %489 ]
  %491 = add i32 %490, -1
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds i32, ptr %488, i64 %492
  %494 = load i32, ptr %493, align 4, !tbaa !22
  %495 = icmp ugt i32 %494, %486
  br i1 %495, label %489, label %496

496:                                              ; preds = %489
  %497 = load i32, ptr %214, align 8, !tbaa !61
  %498 = load ptr, ptr %215, align 8, !tbaa !58
  br label %499

499:                                              ; preds = %499, %496
  %500 = phi i32 [ %497, %496 ], [ %501, %499 ]
  %501 = add i32 %500, -1
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds i32, ptr %498, i64 %502
  %504 = load i32, ptr %503, align 4, !tbaa !22
  %505 = icmp ugt i32 %504, %278
  br i1 %505, label %499, label %506

506:                                              ; preds = %499
  %507 = sub i32 %486, %494
  %508 = sub i32 %278, %504
  %509 = load ptr, ptr %216, align 8, !tbaa !497, !noalias !503
  %510 = load i32, ptr %217, align 8, !tbaa !22, !noalias !503
  %511 = mul i32 %510, %491
  %512 = zext i32 %511 to i64
  %513 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %509, i64 %512
  %514 = zext i32 %501 to i64
  %515 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %513, i64 %514
  %516 = load ptr, ptr %515, align 8, !tbaa !501
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %516, i32 noundef %507, i32 noundef %508)
          to label %517 unwind label %520

517:                                              ; preds = %506
  %518 = add nuw nsw i64 %449, 1
  %519 = icmp eq i64 %518, %219
  br i1 %519, label %555, label %448

520:                                              ; preds = %506, %472
  %521 = landingpad { ptr, i32 }
          cleanup
  br label %697

522:                                              ; preds = %286
  %523 = load i32, ptr %212, align 8, !tbaa !61
  %524 = load ptr, ptr %213, align 8, !tbaa !58
  br label %525

525:                                              ; preds = %525, %522
  %526 = phi i32 [ %523, %522 ], [ %527, %525 ]
  %527 = add i32 %526, -1
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds i32, ptr %524, i64 %528
  %530 = load i32, ptr %529, align 4, !tbaa !22
  %531 = icmp ugt i32 %530, %278
  br i1 %531, label %525, label %532

532:                                              ; preds = %525
  %533 = load i32, ptr %214, align 8, !tbaa !61
  %534 = load ptr, ptr %215, align 8, !tbaa !58
  br label %535

535:                                              ; preds = %535, %532
  %536 = phi i32 [ %533, %532 ], [ %537, %535 ]
  %537 = add i32 %536, -1
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds i32, ptr %534, i64 %538
  %540 = load i32, ptr %539, align 4, !tbaa !22
  %541 = icmp ugt i32 %540, %278
  br i1 %541, label %535, label %542

542:                                              ; preds = %535
  %543 = sub i32 %278, %530
  %544 = sub i32 %278, %540
  %545 = load ptr, ptr %216, align 8, !tbaa !497, !noalias !506
  %546 = load i32, ptr %217, align 8, !tbaa !22, !noalias !506
  %547 = mul i32 %546, %527
  %548 = zext i32 %547 to i64
  %549 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %545, i64 %548
  %550 = zext i32 %537 to i64
  %551 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %549, i64 %550
  %552 = load ptr, ptr %551, align 8, !tbaa !501
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %552, i32 noundef %543, i32 noundef %544)
          to label %555 unwind label %553

553:                                              ; preds = %542
  %554 = landingpad { ptr, i32 }
          cleanup
  br label %697

555:                                              ; preds = %517, %287, %542
  %556 = add nuw nsw i64 %272, 1
  %557 = icmp eq i64 %556, %218
  br i1 %557, label %220, label %271

558:                                              ; preds = %265, %261, %220
  %559 = phi ptr [ null, %220 ], [ %233, %261 ], [ %233, %265 ]
  %560 = load i32, ptr %19, align 8, !tbaa !487
  store i32 0, ptr %559, align 4, !tbaa !22
  %561 = icmp ugt i32 %560, 1
  br i1 %561, label %562, label %566

562:                                              ; preds = %558
  %563 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 4, i32 1
  %564 = load ptr, ptr %563, align 8, !tbaa !58
  %565 = zext i32 %560 to i64
  br label %576

566:                                              ; preds = %601, %558
  %567 = getelementptr inbounds i32, ptr %559, i64 1
  %568 = load i32, ptr %567, align 4, !tbaa !22
  %569 = ashr exact i64 %225, 2
  %570 = zext i32 %568 to i64
  %571 = icmp ugt i64 %569, %570
  br i1 %571, label %572, label %628

572:                                              ; preds = %566
  %573 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 4
  %574 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 4, i32 1
  %575 = load ptr, ptr %574, align 8, !tbaa !58
  br label %610

576:                                              ; preds = %601, %562
  %577 = phi i64 [ 1, %562 ], [ %608, %601 ]
  %578 = phi ptr [ %222, %562 ], [ %603, %601 ]
  %579 = getelementptr inbounds i32, ptr %564, i64 %577
  %580 = load i32, ptr %579, align 4, !tbaa !22
  %581 = ptrtoint ptr %578 to i64
  %582 = sub i64 %223, %581
  %583 = icmp sgt i64 %582, 0
  br i1 %583, label %584, label %601

584:                                              ; preds = %576
  %585 = lshr exact i64 %582, 2
  br label %586

586:                                              ; preds = %586, %584
  %587 = phi i64 [ %585, %584 ], [ %597, %586 ]
  %588 = phi ptr [ %578, %584 ], [ %596, %586 ]
  %589 = lshr i64 %587, 1
  %590 = getelementptr inbounds i32, ptr %588, i64 %589
  %591 = load i32, ptr %590, align 4, !tbaa !22
  %592 = icmp ult i32 %591, %580
  %593 = getelementptr inbounds i32, ptr %590, i64 1
  %594 = xor i64 %589, -1
  %595 = add nsw i64 %587, %594
  %596 = select i1 %592, ptr %593, ptr %588
  %597 = select i1 %592, i64 %595, i64 %589
  %598 = icmp sgt i64 %597, 0
  br i1 %598, label %586, label %599

599:                                              ; preds = %586
  %600 = ptrtoint ptr %596 to i64
  br label %601

601:                                              ; preds = %599, %576
  %602 = phi i64 [ %600, %599 ], [ %581, %576 ]
  %603 = phi ptr [ %596, %599 ], [ %578, %576 ]
  %604 = sub i64 %602, %224
  %605 = lshr exact i64 %604, 2
  %606 = trunc i64 %605 to i32
  %607 = getelementptr inbounds i32, ptr %559, i64 %577
  store i32 %606, ptr %607, align 4, !tbaa !22
  %608 = add nuw nsw i64 %577, 1
  %609 = icmp eq i64 %608, %565
  br i1 %609, label %566, label %576

610:                                              ; preds = %623, %572
  %611 = phi i64 [ %570, %572 ], [ %626, %623 ]
  %612 = phi i32 [ %568, %572 ], [ %625, %623 ]
  %613 = getelementptr inbounds i32, ptr %222, i64 %611
  %614 = load i32, ptr %613, align 4, !tbaa !22
  %615 = load i32, ptr %573, align 8, !tbaa !61
  br label %616

616:                                              ; preds = %616, %610
  %617 = phi i32 [ %615, %610 ], [ %618, %616 ]
  %618 = add i32 %617, -1
  %619 = sext i32 %618 to i64
  %620 = getelementptr inbounds i32, ptr %575, i64 %619
  %621 = load i32, ptr %620, align 4, !tbaa !22
  %622 = icmp ugt i32 %621, %614
  br i1 %622, label %616, label %623

623:                                              ; preds = %616
  %624 = sub i32 %614, %621
  store i32 %624, ptr %613, align 4, !tbaa !22
  %625 = add i32 %612, 1
  %626 = zext i32 %625 to i64
  %627 = icmp ugt i64 %569, %626
  br i1 %627, label %610, label %628

628:                                              ; preds = %623, %566
  %629 = icmp eq i32 %20, 0
  br i1 %629, label %689, label %630

630:                                              ; preds = %628
  %631 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 3, i32 0, i32 1
  %632 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %633 = zext i32 %20 to i64
  br label %639

634:                                              ; preds = %657, %639
  %635 = phi ptr [ %640, %639 ], [ %684, %657 ]
  %636 = icmp eq i64 %642, %633
  br i1 %636, label %689, label %639

637:                                              ; preds = %231
  %638 = landingpad { ptr, i32 }
          cleanup
  br label %697

639:                                              ; preds = %630, %634
  %640 = phi ptr [ %222, %630 ], [ %635, %634 ]
  %641 = phi i64 [ 0, %630 ], [ %642, %634 ]
  %642 = add nuw nsw i64 %641, 1
  %643 = getelementptr inbounds i32, ptr %559, i64 %642
  %644 = load i32, ptr %643, align 4, !tbaa !22
  %645 = getelementptr inbounds i32, ptr %559, i64 %641
  %646 = load i32, ptr %645, align 4, !tbaa !22
  %647 = icmp ult i32 %646, %644
  br i1 %647, label %648, label %634

648:                                              ; preds = %639
  %649 = zext i32 %646 to i64
  %650 = zext i32 %644 to i64
  %651 = trunc i64 %641 to i32
  br label %652

652:                                              ; preds = %648, %657
  %653 = phi ptr [ %640, %648 ], [ %684, %657 ]
  %654 = phi i64 [ %649, %648 ], [ %658, %657 ]
  %655 = getelementptr inbounds i32, ptr %653, i64 %654
  %656 = load i32, ptr %655, align 4, !tbaa !22
  br label %660

657:                                              ; preds = %683
  %658 = add nuw nsw i64 %654, 1
  %659 = icmp eq i64 %658, %650
  br i1 %659, label %634, label %652

660:                                              ; preds = %652, %683
  %661 = phi ptr [ %653, %652 ], [ %684, %683 ]
  %662 = phi i64 [ 0, %652 ], [ %664, %683 ]
  %663 = phi ptr [ %653, %652 ], [ %685, %683 ]
  %664 = add nuw nsw i64 %662, 1
  %665 = getelementptr inbounds i32, ptr %559, i64 %664
  %666 = load i32, ptr %665, align 4, !tbaa !22
  %667 = load ptr, ptr %631, align 8, !tbaa !497, !noalias !509
  %668 = load i32, ptr %632, align 8, !tbaa !22, !noalias !509
  %669 = mul i32 %668, %651
  %670 = zext i32 %669 to i64
  %671 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %667, i64 %670
  %672 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %671, i64 %662
  %673 = load ptr, ptr %672, align 8, !tbaa !501
  %674 = zext i32 %666 to i64
  %675 = getelementptr inbounds i32, ptr %661, i64 %674
  %676 = icmp eq ptr %663, %675
  br i1 %676, label %683, label %677

677:                                              ; preds = %660, %680
  %678 = phi ptr [ %681, %680 ], [ %663, %660 ]
  %679 = load i32, ptr %678, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %673, i32 noundef %656, i32 noundef %679)
          to label %680 unwind label %687

680:                                              ; preds = %677
  %681 = getelementptr inbounds i32, ptr %678, i64 1
  %682 = icmp eq ptr %681, %675
  br i1 %682, label %683, label %677

683:                                              ; preds = %680, %660
  %684 = load ptr, ptr %7, align 8, !tbaa !21
  %685 = getelementptr inbounds i32, ptr %684, i64 %674
  %686 = icmp eq i64 %664, %633
  br i1 %686, label %657, label %660

687:                                              ; preds = %677
  %688 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %559) #23
  br label %697

689:                                              ; preds = %634, %628
  call void @_ZdlPv(ptr noundef nonnull %559) #23
  %690 = icmp eq ptr %53, null
  br i1 %690, label %692, label %691

691:                                              ; preds = %689
  call void @_ZdlPv(ptr noundef nonnull %53) #23
  br label %692

692:                                              ; preds = %691, %689
  %693 = load ptr, ptr %7, align 8, !tbaa !58
  %694 = icmp eq ptr %693, null
  br i1 %694, label %696, label %695

695:                                              ; preds = %692
  call void @_ZdlPv(ptr noundef nonnull %693) #23
  br label %696

696:                                              ; preds = %692, %695
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  br label %1762

697:                                              ; preds = %434, %436, %341, %343, %186, %188, %553, %520, %687, %637, %269
  %698 = phi ptr [ %53, %269 ], [ %53, %520 ], [ %53, %553 ], [ %53, %687 ], [ %53, %637 ], [ %77, %186 ], [ %77, %188 ], [ %53, %343 ], [ %53, %341 ], [ %53, %436 ], [ %53, %434 ]
  %699 = phi { ptr, i32 } [ %270, %269 ], [ %521, %520 ], [ %554, %553 ], [ %688, %687 ], [ %638, %637 ], [ %187, %186 ], [ %189, %188 ], [ %344, %343 ], [ %342, %341 ], [ %437, %436 ], [ %435, %434 ]
  %700 = icmp eq ptr %698, null
  br i1 %700, label %702, label %701

701:                                              ; preds = %697
  call void @_ZdlPv(ptr noundef nonnull %698) #23
  br label %702

702:                                              ; preds = %701, %697
  %703 = load ptr, ptr %7, align 8, !tbaa !58
  %704 = icmp eq ptr %703, null
  br i1 %704, label %706, label %705

705:                                              ; preds = %702
  call void @_ZdlPv(ptr noundef nonnull %703) #23
  br label %706

706:                                              ; preds = %705, %702, %72
  %707 = phi { ptr, i32 } [ %73, %72 ], [ %699, %702 ], [ %699, %705 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  br label %1799

708:                                              ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #24
  store i32 -1, ptr %9, align 8, !tbaa !317
  %709 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %709, align 4, !tbaa !319
  %710 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %710, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  %711 = icmp eq i64 %24, 0
  br i1 %711, label %712, label %714

712:                                              ; preds = %708
  %713 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  br label %757

714:                                              ; preds = %708
  %715 = shl nuw nsw i64 %24, 4
  %716 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %715) #21
          to label %717 unwind label %807

717:                                              ; preds = %714
  store ptr %716, ptr %8, align 8, !tbaa !321
  %718 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %716, i64 %24
  %719 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 2
  store ptr %718, ptr %719, align 8, !tbaa !323
  %720 = and i64 %17, 3
  %721 = icmp eq i64 %720, 0
  br i1 %721, label %732, label %722

722:                                              ; preds = %717, %722
  %723 = phi ptr [ %729, %722 ], [ %716, %717 ]
  %724 = phi i64 [ %728, %722 ], [ %24, %717 ]
  %725 = phi i64 [ %730, %722 ], [ 0, %717 ]
  %726 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %723, i64 0, i32 2
  store ptr null, ptr %726, align 8, !tbaa !320
  store i32 -1, ptr %723, align 8, !tbaa !317
  %727 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %723, i64 0, i32 1
  store i32 -1, ptr %727, align 4, !tbaa !319
  %728 = add nsw i64 %724, -1
  %729 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %723, i64 1
  %730 = add i64 %725, 1
  %731 = icmp eq i64 %730, %720
  br i1 %731, label %732, label %722, !llvm.loop !512

732:                                              ; preds = %722, %717
  %733 = phi ptr [ undef, %717 ], [ %729, %722 ]
  %734 = phi ptr [ %716, %717 ], [ %729, %722 ]
  %735 = phi i64 [ %24, %717 ], [ %728, %722 ]
  %736 = icmp ult i64 %24, 4
  br i1 %736, label %754, label %737

737:                                              ; preds = %732, %737
  %738 = phi ptr [ %752, %737 ], [ %734, %732 ]
  %739 = phi i64 [ %751, %737 ], [ %735, %732 ]
  %740 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %738, i64 0, i32 2
  store ptr null, ptr %740, align 8, !tbaa !320
  store i32 -1, ptr %738, align 8, !tbaa !317
  %741 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %738, i64 0, i32 1
  store i32 -1, ptr %741, align 4, !tbaa !319
  %742 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %738, i64 1
  %743 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %738, i64 1, i32 2
  store ptr null, ptr %743, align 8, !tbaa !320
  store i32 -1, ptr %742, align 8, !tbaa !317
  %744 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %738, i64 1, i32 1
  store i32 -1, ptr %744, align 4, !tbaa !319
  %745 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %738, i64 2
  %746 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %738, i64 2, i32 2
  store ptr null, ptr %746, align 8, !tbaa !320
  store i32 -1, ptr %745, align 8, !tbaa !317
  %747 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %738, i64 2, i32 1
  store i32 -1, ptr %747, align 4, !tbaa !319
  %748 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %738, i64 3
  %749 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %738, i64 3, i32 2
  store ptr null, ptr %749, align 8, !tbaa !320
  store i32 -1, ptr %748, align 8, !tbaa !317
  %750 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %738, i64 3, i32 1
  store i32 -1, ptr %750, align 4, !tbaa !319
  %751 = add nsw i64 %739, -4
  %752 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %738, i64 4
  %753 = icmp eq i64 %751, 0
  br i1 %753, label %754, label %737

754:                                              ; preds = %737, %732
  %755 = phi ptr [ %733, %732 ], [ %752, %737 ]
  %756 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  store ptr %755, ptr %756, align 8, !tbaa !325
  br label %757

757:                                              ; preds = %754, %712
  %758 = phi ptr [ null, %712 ], [ %716, %754 ]
  %759 = phi ptr [ null, %712 ], [ %755, %754 ]
  %760 = phi ptr [ %713, %712 ], [ %756, %754 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #24
  %761 = icmp eq i32 %18, 0
  br i1 %761, label %772, label %762

762:                                              ; preds = %757
  %763 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %764 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %765 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %766 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %767 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %768 = and i64 %17, 4294967295
  br label %810

769:                                              ; preds = %917
  %770 = load ptr, ptr %760, align 8, !tbaa !21
  %771 = load ptr, ptr %8, align 8, !tbaa !321
  br label %772

772:                                              ; preds = %769, %757
  %773 = phi ptr [ %758, %757 ], [ %771, %769 ]
  %774 = phi ptr [ %759, %757 ], [ %770, %769 ]
  %775 = phi ptr [ null, %757 ], [ %919, %769 ]
  %776 = phi ptr [ null, %757 ], [ %920, %769 ]
  %777 = phi i32 [ 0, %757 ], [ %921, %769 ]
  %778 = zext i32 %777 to i64
  store i32 -1, ptr %10, align 8, !tbaa !317
  %779 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %10, i64 0, i32 1
  store i32 -1, ptr %779, align 4, !tbaa !319
  %780 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %10, i64 0, i32 2
  store ptr null, ptr %780, align 8, !tbaa !320
  %781 = ptrtoint ptr %774 to i64
  %782 = ptrtoint ptr %773 to i64
  %783 = sub i64 %781, %782
  %784 = ashr exact i64 %783, 4
  %785 = icmp ult i64 %784, %778
  br i1 %785, label %786, label %788

786:                                              ; preds = %772
  %787 = sub nsw i64 %778, %784
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr %774, i64 noundef %787, ptr noundef nonnull align 8 dereferenceable(16) %10)
          to label %928 unwind label %1027

788:                                              ; preds = %772
  %789 = icmp ugt i64 %784, %778
  br i1 %789, label %790, label %928

790:                                              ; preds = %788
  %791 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %773, i64 %778
  %792 = icmp eq ptr %774, %791
  br i1 %792, label %928, label %793

793:                                              ; preds = %790, %803
  %794 = phi ptr [ %804, %803 ], [ %791, %790 ]
  %795 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %794, i64 0, i32 2
  %796 = load ptr, ptr %795, align 8, !tbaa !320
  %797 = icmp eq ptr %796, null
  br i1 %797, label %803, label %798

798:                                              ; preds = %793
  %799 = load ptr, ptr %796, align 8, !tbaa !32
  %800 = icmp eq ptr %799, null
  br i1 %800, label %802, label %801

801:                                              ; preds = %798
  tail call void @_ZdlPv(ptr noundef nonnull %799) #23
  br label %802

802:                                              ; preds = %801, %798
  tail call void @_ZdlPv(ptr noundef nonnull %796) #23
  store ptr null, ptr %795, align 8, !tbaa !320
  br label %803

803:                                              ; preds = %802, %793
  %804 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %794, i64 1
  %805 = icmp eq ptr %804, %774
  br i1 %805, label %806, label %793

806:                                              ; preds = %803
  store ptr %791, ptr %760, align 8, !tbaa !325
  br label %928

807:                                              ; preds = %714
  %808 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %809 unwind label %1801

809:                                              ; preds = %807
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #24
  br label %1797

810:                                              ; preds = %762, %917
  %811 = phi i64 [ 0, %762 ], [ %922, %917 ]
  %812 = phi i32 [ 0, %762 ], [ %921, %917 ]
  %813 = phi ptr [ null, %762 ], [ %920, %917 ]
  %814 = phi ptr [ null, %762 ], [ %919, %917 ]
  %815 = phi ptr [ null, %762 ], [ %918, %917 ]
  %816 = load ptr, ptr %764, align 8, !tbaa !55
  %817 = load i32, ptr %765, align 8, !tbaa !57
  %818 = load ptr, ptr %763, align 8, !tbaa !55
  %819 = ptrtoint ptr %816 to i64
  %820 = ptrtoint ptr %818 to i64
  %821 = sub i64 %819, %820
  %822 = shl nsw i64 %821, 3
  %823 = zext i32 %817 to i64
  %824 = add nsw i64 %822, %823
  %825 = load ptr, ptr %1, align 8, !tbaa !58
  %826 = getelementptr inbounds i32, ptr %825, i64 %811
  %827 = load i32, ptr %826, align 4, !tbaa !22
  %828 = zext i32 %827 to i64
  %829 = icmp ugt i64 %824, %828
  br i1 %829, label %830, label %840

830:                                              ; preds = %810
  %831 = lshr i32 %827, 6
  %832 = zext i32 %831 to i64
  %833 = getelementptr inbounds i64, ptr %818, i64 %832
  %834 = and i32 %827, 63
  %835 = zext i32 %834 to i64
  %836 = shl nuw i64 1, %835
  %837 = load i64, ptr %833, align 8, !tbaa !42
  %838 = and i64 %837, %836
  %839 = icmp eq i64 %838, 0
  br i1 %839, label %840, label %847

840:                                              ; preds = %830, %810
  %841 = zext i32 %812 to i64
  %842 = load ptr, ptr %8, align 8, !tbaa !321
  %843 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %842, i64 %841
  store i32 %827, ptr %843, align 8, !tbaa !317
  %844 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %842, i64 %841, i32 1
  %845 = trunc i64 %811 to i32
  store i32 %845, ptr %844, align 4, !tbaa !319
  %846 = add i32 %812, 1
  br label %917

847:                                              ; preds = %830
  %848 = load ptr, ptr %766, align 8, !tbaa !21
  %849 = load ptr, ptr %767, align 8, !tbaa !21
  %850 = ptrtoint ptr %849 to i64
  %851 = ptrtoint ptr %848 to i64
  %852 = sub i64 %850, %851
  %853 = icmp sgt i64 %852, 0
  br i1 %853, label %854, label %869

854:                                              ; preds = %847
  %855 = udiv exact i64 %852, 40
  br label %856

856:                                              ; preds = %856, %854
  %857 = phi i64 [ %855, %854 ], [ %867, %856 ]
  %858 = phi ptr [ %848, %854 ], [ %866, %856 ]
  %859 = lshr i64 %857, 1
  %860 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %858, i64 %859
  %861 = load i32, ptr %860, align 8, !tbaa !24
  %862 = icmp ult i32 %861, %827
  %863 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %860, i64 1
  %864 = xor i64 %859, -1
  %865 = add nsw i64 %857, %864
  %866 = select i1 %862, ptr %863, ptr %858
  %867 = select i1 %862, i64 %865, i64 %859
  %868 = icmp sgt i64 %867, 0
  br i1 %868, label %856, label %869

869:                                              ; preds = %856, %847
  %870 = phi ptr [ %848, %847 ], [ %866, %856 ]
  %871 = icmp eq ptr %814, %815
  br i1 %871, label %875, label %872

872:                                              ; preds = %869
  %873 = trunc i64 %811 to i32
  store i32 %873, ptr %814, align 8
  %874 = getelementptr inbounds i8, ptr %814, i64 8
  store ptr %870, ptr %874, align 8
  br label %912

875:                                              ; preds = %869
  %876 = ptrtoint ptr %814 to i64
  %877 = ptrtoint ptr %813 to i64
  %878 = sub i64 %876, %877
  %879 = icmp eq i64 %878, 9223372036854775792
  br i1 %879, label %880, label %882

880:                                              ; preds = %875
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %881 unwind label %926

881:                                              ; preds = %880
  unreachable

882:                                              ; preds = %875
  %883 = ashr exact i64 %878, 4
  %884 = tail call i64 @llvm.umax.i64(i64 %883, i64 1)
  %885 = add i64 %884, %883
  %886 = icmp ult i64 %885, %883
  %887 = icmp ugt i64 %885, 576460752303423487
  %888 = or i1 %886, %887
  %889 = select i1 %888, i64 576460752303423487, i64 %885
  %890 = icmp eq i64 %889, 0
  br i1 %890, label %894, label %891

891:                                              ; preds = %882
  %892 = shl nuw nsw i64 %889, 4
  %893 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %892) #21
          to label %894 unwind label %924

894:                                              ; preds = %891, %882
  %895 = phi ptr [ null, %882 ], [ %893, %891 ]
  %896 = getelementptr inbounds %"struct.std::pair.188", ptr %895, i64 %883
  %897 = trunc i64 %811 to i32
  store i32 %897, ptr %896, align 8
  %898 = getelementptr inbounds i8, ptr %896, i64 8
  store ptr %870, ptr %898, align 8
  %899 = icmp eq ptr %813, %814
  br i1 %899, label %906, label %900

900:                                              ; preds = %894, %900
  %901 = phi ptr [ %904, %900 ], [ %895, %894 ]
  %902 = phi ptr [ %903, %900 ], [ %813, %894 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %901, ptr noundef nonnull align 8 dereferenceable(16) %902, i64 16, i1 false)
  %903 = getelementptr inbounds %"struct.std::pair.188", ptr %902, i64 1
  %904 = getelementptr inbounds %"struct.std::pair.188", ptr %901, i64 1
  %905 = icmp eq ptr %903, %814
  br i1 %905, label %906, label %900

906:                                              ; preds = %900, %894
  %907 = phi ptr [ %895, %894 ], [ %904, %900 ]
  %908 = icmp eq ptr %813, null
  br i1 %908, label %910, label %909

909:                                              ; preds = %906
  tail call void @_ZdlPv(ptr noundef nonnull %813) #23
  br label %910

910:                                              ; preds = %909, %906
  %911 = getelementptr inbounds %"struct.std::pair.188", ptr %895, i64 %889
  br label %912

912:                                              ; preds = %910, %872
  %913 = phi ptr [ %911, %910 ], [ %815, %872 ]
  %914 = phi ptr [ %907, %910 ], [ %814, %872 ]
  %915 = phi ptr [ %895, %910 ], [ %813, %872 ]
  %916 = getelementptr inbounds %"struct.std::pair.188", ptr %914, i64 1
  br label %917

917:                                              ; preds = %912, %840
  %918 = phi ptr [ %913, %912 ], [ %815, %840 ]
  %919 = phi ptr [ %916, %912 ], [ %814, %840 ]
  %920 = phi ptr [ %915, %912 ], [ %813, %840 ]
  %921 = phi i32 [ %812, %912 ], [ %846, %840 ]
  %922 = add nuw nsw i64 %811, 1
  %923 = icmp eq i64 %922, %768
  br i1 %923, label %769, label %810

924:                                              ; preds = %891
  %925 = landingpad { ptr, i32 }
          cleanup
  br label %1769

926:                                              ; preds = %880
  %927 = landingpad { ptr, i32 }
          cleanup
  br label %1769

928:                                              ; preds = %806, %790, %788, %786
  %929 = load ptr, ptr %780, align 8, !tbaa !320
  %930 = icmp eq ptr %929, null
  br i1 %930, label %936, label %931

931:                                              ; preds = %928
  %932 = load ptr, ptr %929, align 8, !tbaa !32
  %933 = icmp eq ptr %932, null
  br i1 %933, label %935, label %934

934:                                              ; preds = %931
  call void @_ZdlPv(ptr noundef nonnull %932) #23
  br label %935

935:                                              ; preds = %934, %931
  call void @_ZdlPv(ptr noundef nonnull %929) #23
  store ptr null, ptr %780, align 8, !tbaa !320
  br label %936

936:                                              ; preds = %935, %928
  %937 = load ptr, ptr %760, align 8, !tbaa !325
  %938 = load ptr, ptr %8, align 8, !tbaa !321
  %939 = ptrtoint ptr %937 to i64
  %940 = ptrtoint ptr %938 to i64
  %941 = sub i64 %939, %940
  %942 = lshr exact i64 %941, 4
  %943 = trunc i64 %942 to i32
  %944 = icmp ult i32 %943, 2
  br i1 %944, label %990, label %947

945:                                              ; preds = %986, %947
  %946 = icmp ult i32 %948, 4
  br i1 %946, label %990, label %947

947:                                              ; preds = %936, %945
  %948 = phi i32 [ %949, %945 ], [ %943, %936 ]
  %949 = lshr i32 %948, 1
  %950 = icmp ult i32 %949, %943
  br i1 %950, label %951, label %945

951:                                              ; preds = %947
  %952 = zext i32 %949 to i64
  br label %953

953:                                              ; preds = %986, %951
  %954 = phi i64 [ %952, %951 ], [ %987, %986 ]
  %955 = sub nuw nsw i64 %954, %952
  %956 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %938, i64 %954
  %957 = load <2 x i32>, ptr %956, align 8, !tbaa !22
  %958 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %938, i64 %955
  %959 = load i32, ptr %958, align 8, !tbaa !317
  %960 = extractelement <2 x i32> %957, i64 0
  %961 = icmp ugt i32 %959, %960
  br i1 %961, label %962, label %986

962:                                              ; preds = %953
  %963 = icmp ult i64 %954, %952
  %964 = trunc i64 %954 to i32
  br i1 %963, label %982, label %965

965:                                              ; preds = %962
  %966 = trunc i64 %955 to i32
  br label %967

967:                                              ; preds = %974, %965
  %968 = phi i32 [ %969, %974 ], [ %964, %965 ]
  %969 = phi i32 [ %980, %974 ], [ %966, %965 ]
  %970 = zext i32 %969 to i64
  %971 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %938, i64 %970
  %972 = load i32, ptr %971, align 8, !tbaa !317
  %973 = icmp ugt i32 %972, %960
  br i1 %973, label %974, label %982

974:                                              ; preds = %967
  %975 = zext i32 %968 to i64
  %976 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %938, i64 %975
  store i32 %972, ptr %976, align 8, !tbaa !317
  %977 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %938, i64 %970, i32 1
  %978 = load i32, ptr %977, align 4, !tbaa !319
  %979 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %938, i64 %975, i32 1
  store i32 %978, ptr %979, align 4, !tbaa !319
  %980 = sub i32 %969, %949
  %981 = icmp ult i32 %969, %949
  br i1 %981, label %982, label %967

982:                                              ; preds = %974, %967, %962
  %983 = phi i32 [ %964, %962 ], [ %968, %967 ], [ %969, %974 ]
  %984 = zext i32 %983 to i64
  %985 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %938, i64 %984
  store <2 x i32> %957, ptr %985, align 8, !tbaa !22
  br label %986

986:                                              ; preds = %982, %953
  %987 = add nuw nsw i64 %954, 1
  %988 = trunc i64 %987 to i32
  %989 = icmp eq i32 %943, %988
  br i1 %989, label %945, label %953

990:                                              ; preds = %945, %936
  %991 = ptrtoint ptr %775 to i64
  %992 = ptrtoint ptr %776 to i64
  %993 = sub i64 %991, %992
  %994 = and i64 %993, 68719476720
  %995 = icmp eq i64 %994, 0
  br i1 %995, label %1014, label %996

996:                                              ; preds = %990
  %997 = lshr exact i64 %993, 4
  %998 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 4
  %999 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 4, i32 1
  %1000 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 5
  %1001 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 5, i32 1
  %1002 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 3, i32 0, i32 1
  %1003 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %1004 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %1005 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %1006 = and i64 %997, 4294967295
  %1007 = and i64 %17, 4294967295
  br label %1029

1008:                                             ; preds = %1197
  %1009 = load ptr, ptr %760, align 8, !tbaa !325
  %1010 = load ptr, ptr %8, align 8, !tbaa !321
  %1011 = ptrtoint ptr %1009 to i64
  %1012 = ptrtoint ptr %1010 to i64
  %1013 = sub i64 %1011, %1012
  br label %1014

1014:                                             ; preds = %1008, %990
  %1015 = phi i64 [ %1013, %1008 ], [ %941, %990 ]
  %1016 = phi ptr [ %1010, %1008 ], [ %938, %990 ]
  %1017 = phi i8 [ %1046, %1008 ], [ 0, %990 ]
  %1018 = ashr exact i64 %1015, 4
  %1019 = trunc i64 %1018 to i32
  %1020 = and i64 %1018, 4294967295
  %1021 = icmp eq i64 %1020, 0
  br i1 %1021, label %1200, label %1022

1022:                                             ; preds = %1014
  %1023 = shl nuw nsw i64 %1020, 2
  %1024 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1023) #21
          to label %1025 unwind label %1318

1025:                                             ; preds = %1022
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %1024, i8 0, i64 %1023, i1 false), !tbaa !22
  %1026 = getelementptr inbounds i32, ptr %1024, i64 %1020
  br label %1200

1027:                                             ; preds = %786
  %1028 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %10)
          to label %1769 unwind label %1801

1029:                                             ; preds = %996, %1197
  %1030 = phi i64 [ 0, %996 ], [ %1198, %1197 ]
  %1031 = phi i8 [ 0, %996 ], [ %1046, %1197 ]
  %1032 = getelementptr inbounds %"struct.std::pair.188", ptr %776, i64 %1030
  %1033 = load i32, ptr %1032, align 8, !tbaa !326
  %1034 = zext i32 %1033 to i64
  %1035 = load ptr, ptr %1, align 8, !tbaa !58
  %1036 = getelementptr inbounds i32, ptr %1035, i64 %1034
  %1037 = load i32, ptr %1036, align 4, !tbaa !22
  %1038 = getelementptr inbounds %"struct.std::pair.188", ptr %776, i64 %1030, i32 1
  %1039 = load ptr, ptr %1038, align 8, !tbaa !328
  %1040 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1039, i64 0, i32 1
  %1041 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1039, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1042 = load ptr, ptr %1041, align 8, !tbaa !31
  %1043 = load ptr, ptr %1040, align 8, !tbaa !32
  %1044 = icmp eq ptr %1042, %1043
  br i1 %1044, label %1045, label %1048

1045:                                             ; preds = %1056, %1029
  %1046 = phi i8 [ %1031, %1029 ], [ 1, %1056 ]
  br i1 %3, label %1047, label %1164

1047:                                             ; preds = %1045
  br i1 %761, label %1197, label %1068

1048:                                             ; preds = %1029, %1056
  %1049 = phi ptr [ %1060, %1056 ], [ %1043, %1029 ]
  %1050 = phi i64 [ %1058, %1056 ], [ 0, %1029 ]
  %1051 = phi i32 [ %1057, %1056 ], [ 0, %1029 ]
  %1052 = getelementptr inbounds %"struct.std::pair", ptr %1049, i64 %1050
  %1053 = load i32, ptr %1052, align 8, !tbaa !37
  %1054 = getelementptr inbounds %"struct.std::pair", ptr %1049, i64 %1050, i32 1
  %1055 = load double, ptr %1054, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %8, i32 noundef %1053, i32 %1033, double %1055)
          to label %1056 unwind label %1066

1056:                                             ; preds = %1048
  %1057 = add i32 %1051, 1
  %1058 = zext i32 %1057 to i64
  %1059 = load ptr, ptr %1041, align 8, !tbaa !31
  %1060 = load ptr, ptr %1040, align 8, !tbaa !32
  %1061 = ptrtoint ptr %1059 to i64
  %1062 = ptrtoint ptr %1060 to i64
  %1063 = sub i64 %1061, %1062
  %1064 = ashr exact i64 %1063, 4
  %1065 = icmp ugt i64 %1064, %1058
  br i1 %1065, label %1048, label %1045

1066:                                             ; preds = %1048
  %1067 = landingpad { ptr, i32 }
          cleanup
  br label %1769

1068:                                             ; preds = %1047, %1161
  %1069 = phi i64 [ %1162, %1161 ], [ 0, %1047 ]
  %1070 = load ptr, ptr %1004, align 8, !tbaa !422, !noalias !73
  %1071 = load i32, ptr %1005, align 8, !tbaa !22, !noalias !73
  %1072 = mul i32 %1071, %1033
  %1073 = zext i32 %1072 to i64
  %1074 = getelementptr inbounds i8, ptr %1070, i64 %1073
  %1075 = getelementptr inbounds i8, ptr %1074, i64 %1069
  %1076 = load i8, ptr %1075, align 1, !tbaa !424, !range !425, !noundef !73
  %1077 = icmp eq i8 %1076, 0
  br i1 %1077, label %1117, label %1078

1078:                                             ; preds = %1068
  %1079 = load ptr, ptr %1, align 8, !tbaa !58
  %1080 = getelementptr inbounds i32, ptr %1079, i64 %1069
  %1081 = load i32, ptr %1080, align 4, !tbaa !22
  %1082 = load i32, ptr %998, align 8, !tbaa !61
  %1083 = load ptr, ptr %999, align 8, !tbaa !58
  br label %1084

1084:                                             ; preds = %1084, %1078
  %1085 = phi i32 [ %1082, %1078 ], [ %1086, %1084 ]
  %1086 = add i32 %1085, -1
  %1087 = sext i32 %1086 to i64
  %1088 = getelementptr inbounds i32, ptr %1083, i64 %1087
  %1089 = load i32, ptr %1088, align 4, !tbaa !22
  %1090 = icmp ugt i32 %1089, %1037
  br i1 %1090, label %1084, label %1091

1091:                                             ; preds = %1084
  %1092 = load i32, ptr %1000, align 8, !tbaa !61
  %1093 = load ptr, ptr %1001, align 8, !tbaa !58
  br label %1094

1094:                                             ; preds = %1094, %1091
  %1095 = phi i32 [ %1092, %1091 ], [ %1096, %1094 ]
  %1096 = add i32 %1095, -1
  %1097 = sext i32 %1096 to i64
  %1098 = getelementptr inbounds i32, ptr %1093, i64 %1097
  %1099 = load i32, ptr %1098, align 4, !tbaa !22
  %1100 = icmp ugt i32 %1099, %1081
  br i1 %1100, label %1094, label %1101

1101:                                             ; preds = %1094
  %1102 = sub i32 %1037, %1089
  %1103 = sub i32 %1081, %1099
  %1104 = load ptr, ptr %1002, align 8, !tbaa !497, !noalias !513
  %1105 = load i32, ptr %1003, align 8, !tbaa !22, !noalias !513
  %1106 = mul i32 %1105, %1086
  %1107 = zext i32 %1106 to i64
  %1108 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %1104, i64 %1107
  %1109 = zext i32 %1096 to i64
  %1110 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %1108, i64 %1109
  %1111 = load ptr, ptr %1110, align 8, !tbaa !501
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %1111, i32 noundef %1102, i32 noundef %1103)
          to label %1112 unwind label %1115

1112:                                             ; preds = %1101
  %1113 = load ptr, ptr %1004, align 8, !tbaa !422, !noalias !516
  %1114 = load i32, ptr %1005, align 8, !tbaa !22, !noalias !516
  br label %1117

1115:                                             ; preds = %1150, %1101
  %1116 = landingpad { ptr, i32 }
          cleanup
  br label %1769

1117:                                             ; preds = %1112, %1068
  %1118 = phi i32 [ %1114, %1112 ], [ %1071, %1068 ]
  %1119 = phi ptr [ %1113, %1112 ], [ %1070, %1068 ]
  %1120 = trunc i64 %1069 to i32
  %1121 = mul i32 %1118, %1120
  %1122 = zext i32 %1121 to i64
  %1123 = getelementptr inbounds i8, ptr %1119, i64 %1122
  %1124 = getelementptr inbounds i8, ptr %1123, i64 %1034
  %1125 = load i8, ptr %1124, align 1, !tbaa !424, !range !425, !noundef !73
  %1126 = icmp eq i8 %1125, 0
  br i1 %1126, label %1161, label %1127

1127:                                             ; preds = %1117
  %1128 = load ptr, ptr %1, align 8, !tbaa !58
  %1129 = getelementptr inbounds i32, ptr %1128, i64 %1069
  %1130 = load i32, ptr %1129, align 4, !tbaa !22
  %1131 = load i32, ptr %998, align 8, !tbaa !61
  %1132 = load ptr, ptr %999, align 8, !tbaa !58
  br label %1133

1133:                                             ; preds = %1133, %1127
  %1134 = phi i32 [ %1131, %1127 ], [ %1135, %1133 ]
  %1135 = add i32 %1134, -1
  %1136 = sext i32 %1135 to i64
  %1137 = getelementptr inbounds i32, ptr %1132, i64 %1136
  %1138 = load i32, ptr %1137, align 4, !tbaa !22
  %1139 = icmp ugt i32 %1138, %1130
  br i1 %1139, label %1133, label %1140

1140:                                             ; preds = %1133
  %1141 = load i32, ptr %1000, align 8, !tbaa !61
  %1142 = load ptr, ptr %1001, align 8, !tbaa !58
  br label %1143

1143:                                             ; preds = %1143, %1140
  %1144 = phi i32 [ %1141, %1140 ], [ %1145, %1143 ]
  %1145 = add i32 %1144, -1
  %1146 = sext i32 %1145 to i64
  %1147 = getelementptr inbounds i32, ptr %1142, i64 %1146
  %1148 = load i32, ptr %1147, align 4, !tbaa !22
  %1149 = icmp ugt i32 %1148, %1037
  br i1 %1149, label %1143, label %1150

1150:                                             ; preds = %1143
  %1151 = sub i32 %1130, %1138
  %1152 = sub i32 %1037, %1148
  %1153 = load ptr, ptr %1002, align 8, !tbaa !497, !noalias !519
  %1154 = load i32, ptr %1003, align 8, !tbaa !22, !noalias !519
  %1155 = mul i32 %1154, %1135
  %1156 = zext i32 %1155 to i64
  %1157 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %1153, i64 %1156
  %1158 = zext i32 %1145 to i64
  %1159 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %1157, i64 %1158
  %1160 = load ptr, ptr %1159, align 8, !tbaa !501
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %1160, i32 noundef %1151, i32 noundef %1152)
          to label %1161 unwind label %1115

1161:                                             ; preds = %1150, %1117
  %1162 = add nuw nsw i64 %1069, 1
  %1163 = icmp eq i64 %1162, %1007
  br i1 %1163, label %1197, label %1068

1164:                                             ; preds = %1045
  %1165 = load i32, ptr %998, align 8, !tbaa !61
  %1166 = load ptr, ptr %999, align 8, !tbaa !58
  br label %1167

1167:                                             ; preds = %1167, %1164
  %1168 = phi i32 [ %1165, %1164 ], [ %1169, %1167 ]
  %1169 = add i32 %1168, -1
  %1170 = sext i32 %1169 to i64
  %1171 = getelementptr inbounds i32, ptr %1166, i64 %1170
  %1172 = load i32, ptr %1171, align 4, !tbaa !22
  %1173 = icmp ugt i32 %1172, %1037
  br i1 %1173, label %1167, label %1174

1174:                                             ; preds = %1167
  %1175 = load i32, ptr %1000, align 8, !tbaa !61
  %1176 = load ptr, ptr %1001, align 8, !tbaa !58
  br label %1177

1177:                                             ; preds = %1177, %1174
  %1178 = phi i32 [ %1175, %1174 ], [ %1179, %1177 ]
  %1179 = add i32 %1178, -1
  %1180 = sext i32 %1179 to i64
  %1181 = getelementptr inbounds i32, ptr %1176, i64 %1180
  %1182 = load i32, ptr %1181, align 4, !tbaa !22
  %1183 = icmp ugt i32 %1182, %1037
  br i1 %1183, label %1177, label %1184

1184:                                             ; preds = %1177
  %1185 = sub i32 %1037, %1172
  %1186 = sub i32 %1037, %1182
  %1187 = load ptr, ptr %1002, align 8, !tbaa !497, !noalias !522
  %1188 = load i32, ptr %1003, align 8, !tbaa !22, !noalias !522
  %1189 = mul i32 %1188, %1169
  %1190 = zext i32 %1189 to i64
  %1191 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %1187, i64 %1190
  %1192 = zext i32 %1179 to i64
  %1193 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %1191, i64 %1192
  %1194 = load ptr, ptr %1193, align 8, !tbaa !501
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %1194, i32 noundef %1185, i32 noundef %1186)
          to label %1197 unwind label %1195

1195:                                             ; preds = %1184
  %1196 = landingpad { ptr, i32 }
          cleanup
  br label %1769

1197:                                             ; preds = %1161, %1047, %1184
  %1198 = add nuw nsw i64 %1030, 1
  %1199 = icmp eq i64 %1198, %1006
  br i1 %1199, label %1008, label %1029

1200:                                             ; preds = %1025, %1014
  %1201 = phi ptr [ null, %1014 ], [ %1024, %1025 ]
  %1202 = phi ptr [ null, %1014 ], [ %1026, %1025 ]
  %1203 = icmp eq i32 %1019, 0
  br i1 %1203, label %1276, label %1204

1204:                                             ; preds = %1200
  %1205 = and i64 %1018, 4294967295
  %1206 = icmp ult i64 %1205, 17
  br i1 %1206, label %1207, label %1226

1207:                                             ; preds = %1240, %1226, %1204
  %1208 = phi i64 [ 0, %1226 ], [ 0, %1204 ], [ %1239, %1240 ]
  %1209 = sub nsw i64 %1018, %1208
  %1210 = xor i64 %1208, -1
  %1211 = add nsw i64 %1205, %1210
  %1212 = and i64 %1209, 3
  %1213 = icmp eq i64 %1212, 0
  br i1 %1213, label %1223, label %1214

1214:                                             ; preds = %1207, %1214
  %1215 = phi i64 [ %1220, %1214 ], [ %1208, %1207 ]
  %1216 = phi i64 [ %1221, %1214 ], [ 0, %1207 ]
  %1217 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1215
  %1218 = load i32, ptr %1217, align 8, !tbaa !317
  %1219 = getelementptr inbounds i32, ptr %1201, i64 %1215
  store i32 %1218, ptr %1219, align 4, !tbaa !22
  %1220 = add nuw nsw i64 %1215, 1
  %1221 = add i64 %1216, 1
  %1222 = icmp eq i64 %1221, %1212
  br i1 %1222, label %1223, label %1214, !llvm.loop !525

1223:                                             ; preds = %1214, %1207
  %1224 = phi i64 [ %1208, %1207 ], [ %1220, %1214 ]
  %1225 = icmp ult i64 %1211, 3
  br i1 %1225, label %1276, label %1320

1226:                                             ; preds = %1204
  %1227 = shl nuw nsw i64 %1205, 2
  %1228 = getelementptr i8, ptr %1201, i64 %1227
  %1229 = shl nuw nsw i64 %1205, 4
  %1230 = add nsw i64 %1229, -12
  %1231 = getelementptr i8, ptr %1016, i64 %1230
  %1232 = icmp ult ptr %1201, %1231
  %1233 = icmp ult ptr %1016, %1228
  %1234 = and i1 %1232, %1233
  br i1 %1234, label %1207, label %1235

1235:                                             ; preds = %1226
  %1236 = and i64 %1018, 7
  %1237 = icmp eq i64 %1236, 0
  %1238 = select i1 %1237, i64 8, i64 %1236
  %1239 = sub nsw i64 %1205, %1238
  br label %1240

1240:                                             ; preds = %1240, %1235
  %1241 = phi i64 [ 0, %1235 ], [ %1274, %1240 ]
  %1242 = or i64 %1241, 1
  %1243 = or i64 %1241, 2
  %1244 = or i64 %1241, 3
  %1245 = or i64 %1241, 4
  %1246 = or i64 %1241, 5
  %1247 = or i64 %1241, 6
  %1248 = or i64 %1241, 7
  %1249 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1241
  %1250 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1242
  %1251 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1243
  %1252 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1244
  %1253 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1245
  %1254 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1246
  %1255 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1247
  %1256 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1248
  %1257 = load i32, ptr %1249, align 8, !tbaa !317, !alias.scope !526
  %1258 = load i32, ptr %1250, align 8, !tbaa !317, !alias.scope !526
  %1259 = load i32, ptr %1251, align 8, !tbaa !317, !alias.scope !526
  %1260 = load i32, ptr %1252, align 8, !tbaa !317, !alias.scope !526
  %1261 = load i32, ptr %1253, align 8, !tbaa !317, !alias.scope !526
  %1262 = load i32, ptr %1254, align 8, !tbaa !317, !alias.scope !526
  %1263 = load i32, ptr %1255, align 8, !tbaa !317, !alias.scope !526
  %1264 = load i32, ptr %1256, align 8, !tbaa !317, !alias.scope !526
  %1265 = insertelement <8 x i32> poison, i32 %1257, i64 0
  %1266 = insertelement <8 x i32> %1265, i32 %1258, i64 1
  %1267 = insertelement <8 x i32> %1266, i32 %1259, i64 2
  %1268 = insertelement <8 x i32> %1267, i32 %1260, i64 3
  %1269 = insertelement <8 x i32> %1268, i32 %1261, i64 4
  %1270 = insertelement <8 x i32> %1269, i32 %1262, i64 5
  %1271 = insertelement <8 x i32> %1270, i32 %1263, i64 6
  %1272 = insertelement <8 x i32> %1271, i32 %1264, i64 7
  %1273 = getelementptr inbounds i32, ptr %1201, i64 %1241
  store <8 x i32> %1272, ptr %1273, align 4, !tbaa !22, !alias.scope !529, !noalias !526
  %1274 = add nuw i64 %1241, 8
  %1275 = icmp eq i64 %1274, %1239
  br i1 %1275, label %1207, label %1240, !llvm.loop !531

1276:                                             ; preds = %1223, %1320, %1200
  %1277 = add i32 %20, 1
  %1278 = zext i32 %1277 to i64
  %1279 = icmp eq i32 %1277, 0
  br i1 %1279, label %1339, label %1280

1280:                                             ; preds = %1276
  %1281 = shl nuw nsw i64 %1278, 2
  %1282 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1281) #21
          to label %1283 unwind label %1439

1283:                                             ; preds = %1280
  %1284 = getelementptr inbounds i32, ptr %1282, i64 %1278
  %1285 = add nuw nsw i64 %1278, 4611686018427387903
  %1286 = and i64 %1285, 4611686018427387903
  %1287 = add nuw nsw i64 %1286, 1
  %1288 = icmp ult i64 %1286, 31
  br i1 %1288, label %1312, label %1289

1289:                                             ; preds = %1283
  %1290 = and i64 %1287, 9223372036854775776
  %1291 = shl i64 %1290, 2
  %1292 = getelementptr i8, ptr %1282, i64 %1291
  %1293 = insertelement <8 x i32> poison, i32 %1019, i64 0
  %1294 = shufflevector <8 x i32> %1293, <8 x i32> poison, <8 x i32> zeroinitializer
  %1295 = insertelement <8 x i32> poison, i32 %1019, i64 0
  %1296 = shufflevector <8 x i32> %1295, <8 x i32> poison, <8 x i32> zeroinitializer
  %1297 = insertelement <8 x i32> poison, i32 %1019, i64 0
  %1298 = shufflevector <8 x i32> %1297, <8 x i32> poison, <8 x i32> zeroinitializer
  %1299 = insertelement <8 x i32> poison, i32 %1019, i64 0
  %1300 = shufflevector <8 x i32> %1299, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %1301

1301:                                             ; preds = %1301, %1289
  %1302 = phi i64 [ 0, %1289 ], [ %1308, %1301 ]
  %1303 = shl i64 %1302, 2
  %1304 = getelementptr i8, ptr %1282, i64 %1303
  store <8 x i32> %1294, ptr %1304, align 4, !tbaa !22
  %1305 = getelementptr i32, ptr %1304, i64 8
  store <8 x i32> %1296, ptr %1305, align 4, !tbaa !22
  %1306 = getelementptr i32, ptr %1304, i64 16
  store <8 x i32> %1298, ptr %1306, align 4, !tbaa !22
  %1307 = getelementptr i32, ptr %1304, i64 24
  store <8 x i32> %1300, ptr %1307, align 4, !tbaa !22
  %1308 = add nuw i64 %1302, 32
  %1309 = icmp eq i64 %1308, %1290
  br i1 %1309, label %1310, label %1301, !llvm.loop !532

1310:                                             ; preds = %1301
  %1311 = icmp eq i64 %1287, %1290
  br i1 %1311, label %1339, label %1312

1312:                                             ; preds = %1283, %1310
  %1313 = phi ptr [ %1282, %1283 ], [ %1292, %1310 ]
  br label %1314

1314:                                             ; preds = %1312, %1314
  %1315 = phi ptr [ %1316, %1314 ], [ %1313, %1312 ]
  store i32 %1019, ptr %1315, align 4, !tbaa !22
  %1316 = getelementptr inbounds i32, ptr %1315, i64 1
  %1317 = icmp eq ptr %1316, %1284
  br i1 %1317, label %1339, label %1314, !llvm.loop !533

1318:                                             ; preds = %1022
  %1319 = landingpad { ptr, i32 }
          cleanup
  br label %1769

1320:                                             ; preds = %1223, %1320
  %1321 = phi i64 [ %1337, %1320 ], [ %1224, %1223 ]
  %1322 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1321
  %1323 = load i32, ptr %1322, align 8, !tbaa !317
  %1324 = getelementptr inbounds i32, ptr %1201, i64 %1321
  store i32 %1323, ptr %1324, align 4, !tbaa !22
  %1325 = add nuw nsw i64 %1321, 1
  %1326 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1325
  %1327 = load i32, ptr %1326, align 8, !tbaa !317
  %1328 = getelementptr inbounds i32, ptr %1201, i64 %1325
  store i32 %1327, ptr %1328, align 4, !tbaa !22
  %1329 = add nuw nsw i64 %1321, 2
  %1330 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1329
  %1331 = load i32, ptr %1330, align 8, !tbaa !317
  %1332 = getelementptr inbounds i32, ptr %1201, i64 %1329
  store i32 %1331, ptr %1332, align 4, !tbaa !22
  %1333 = add nuw nsw i64 %1321, 3
  %1334 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1016, i64 %1333
  %1335 = load i32, ptr %1334, align 8, !tbaa !317
  %1336 = getelementptr inbounds i32, ptr %1201, i64 %1333
  store i32 %1335, ptr %1336, align 4, !tbaa !22
  %1337 = add nuw nsw i64 %1321, 4
  %1338 = icmp eq i64 %1337, %1205
  br i1 %1338, label %1276, label %1320, !llvm.loop !534

1339:                                             ; preds = %1314, %1310, %1276
  %1340 = phi ptr [ null, %1276 ], [ %1282, %1310 ], [ %1282, %1314 ]
  %1341 = load i32, ptr %19, align 8, !tbaa !487
  store i32 0, ptr %1340, align 4, !tbaa !22
  %1342 = icmp ugt i32 %1341, 1
  br i1 %1342, label %1346, label %1343

1343:                                             ; preds = %1339
  %1344 = ptrtoint ptr %1202 to i64
  %1345 = ptrtoint ptr %1201 to i64
  br label %1352

1346:                                             ; preds = %1339
  %1347 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 4, i32 1
  %1348 = load ptr, ptr %1347, align 8, !tbaa !58
  %1349 = ptrtoint ptr %1202 to i64
  %1350 = ptrtoint ptr %1201 to i64
  %1351 = zext i32 %1341 to i64
  br label %1366

1352:                                             ; preds = %1391, %1343
  %1353 = phi i64 [ %1345, %1343 ], [ %1350, %1391 ]
  %1354 = phi i64 [ %1344, %1343 ], [ %1349, %1391 ]
  %1355 = getelementptr inbounds i32, ptr %1340, i64 1
  %1356 = load i32, ptr %1355, align 4, !tbaa !22
  %1357 = sub i64 %1354, %1353
  %1358 = ashr exact i64 %1357, 2
  %1359 = zext i32 %1356 to i64
  %1360 = icmp ugt i64 %1358, %1359
  br i1 %1360, label %1361, label %1417

1361:                                             ; preds = %1352
  %1362 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 4
  %1363 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 4, i32 1
  %1364 = load ptr, ptr %1363, align 8, !tbaa !58
  %1365 = load i32, ptr %1362, align 8, !tbaa !61
  br label %1400

1366:                                             ; preds = %1391, %1346
  %1367 = phi i64 [ 1, %1346 ], [ %1398, %1391 ]
  %1368 = phi ptr [ %1201, %1346 ], [ %1393, %1391 ]
  %1369 = getelementptr inbounds i32, ptr %1348, i64 %1367
  %1370 = load i32, ptr %1369, align 4, !tbaa !22
  %1371 = ptrtoint ptr %1368 to i64
  %1372 = sub i64 %1349, %1371
  %1373 = icmp sgt i64 %1372, 0
  br i1 %1373, label %1374, label %1391

1374:                                             ; preds = %1366
  %1375 = lshr exact i64 %1372, 2
  br label %1376

1376:                                             ; preds = %1376, %1374
  %1377 = phi i64 [ %1375, %1374 ], [ %1387, %1376 ]
  %1378 = phi ptr [ %1368, %1374 ], [ %1386, %1376 ]
  %1379 = lshr i64 %1377, 1
  %1380 = getelementptr inbounds i32, ptr %1378, i64 %1379
  %1381 = load i32, ptr %1380, align 4, !tbaa !22
  %1382 = icmp ult i32 %1381, %1370
  %1383 = getelementptr inbounds i32, ptr %1380, i64 1
  %1384 = xor i64 %1379, -1
  %1385 = add nsw i64 %1377, %1384
  %1386 = select i1 %1382, ptr %1383, ptr %1378
  %1387 = select i1 %1382, i64 %1385, i64 %1379
  %1388 = icmp sgt i64 %1387, 0
  br i1 %1388, label %1376, label %1389

1389:                                             ; preds = %1376
  %1390 = ptrtoint ptr %1386 to i64
  br label %1391

1391:                                             ; preds = %1389, %1366
  %1392 = phi i64 [ %1390, %1389 ], [ %1371, %1366 ]
  %1393 = phi ptr [ %1386, %1389 ], [ %1368, %1366 ]
  %1394 = sub i64 %1392, %1350
  %1395 = lshr exact i64 %1394, 2
  %1396 = trunc i64 %1395 to i32
  %1397 = getelementptr inbounds i32, ptr %1340, i64 %1367
  store i32 %1396, ptr %1397, align 4, !tbaa !22
  %1398 = add nuw nsw i64 %1367, 1
  %1399 = icmp eq i64 %1398, %1351
  br i1 %1399, label %1352, label %1366

1400:                                             ; preds = %1412, %1361
  %1401 = phi i64 [ %1359, %1361 ], [ %1415, %1412 ]
  %1402 = phi i32 [ %1356, %1361 ], [ %1414, %1412 ]
  %1403 = getelementptr inbounds i32, ptr %1201, i64 %1401
  %1404 = load i32, ptr %1403, align 4, !tbaa !22
  br label %1405

1405:                                             ; preds = %1405, %1400
  %1406 = phi i32 [ %1365, %1400 ], [ %1407, %1405 ]
  %1407 = add i32 %1406, -1
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds i32, ptr %1364, i64 %1408
  %1410 = load i32, ptr %1409, align 4, !tbaa !22
  %1411 = icmp ugt i32 %1410, %1404
  br i1 %1411, label %1405, label %1412

1412:                                             ; preds = %1405
  %1413 = sub i32 %1404, %1410
  store i32 %1413, ptr %1403, align 4, !tbaa !22
  %1414 = add i32 %1402, 1
  %1415 = zext i32 %1414 to i64
  %1416 = icmp ugt i64 %1358, %1415
  br i1 %1416, label %1400, label %1417

1417:                                             ; preds = %1412, %1352
  br i1 %1021, label %1422, label %1418

1418:                                             ; preds = %1417
  %1419 = shl nuw nsw i64 %1020, 2
  %1420 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1419) #21
          to label %1421 unwind label %1441

1421:                                             ; preds = %1418
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %1420, i8 0, i64 %1419, i1 false), !tbaa !22
  br label %1422

1422:                                             ; preds = %1421, %1417
  %1423 = phi ptr [ null, %1417 ], [ %1420, %1421 ]
  %1424 = icmp eq i32 %20, 0
  br i1 %1424, label %1436, label %1425

1425:                                             ; preds = %1422
  %1426 = and i8 %1017, 1
  %1427 = icmp eq i8 %1426, 0
  %1428 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 3, i32 0, i32 1
  %1429 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %1430 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %1431 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %1432 = zext i32 %20 to i64
  %1433 = getelementptr inbounds i32, ptr %1423, i64 1
  br label %1443

1434:                                             ; preds = %1571, %1558, %1443
  %1435 = icmp eq i64 %1445, %1432
  br i1 %1435, label %1436, label %1443

1436:                                             ; preds = %1434, %1422
  %1437 = icmp eq ptr %1423, null
  br i1 %1437, label %1732, label %1438

1438:                                             ; preds = %1436
  call void @_ZdlPv(ptr noundef nonnull %1423) #23
  br label %1732

1439:                                             ; preds = %1280
  %1440 = landingpad { ptr, i32 }
          cleanup
  br label %1765

1441:                                             ; preds = %1418
  %1442 = landingpad { ptr, i32 }
          cleanup
  br label %1763

1443:                                             ; preds = %1425, %1434
  %1444 = phi i64 [ 0, %1425 ], [ %1445, %1434 ]
  %1445 = add nuw nsw i64 %1444, 1
  %1446 = getelementptr inbounds i32, ptr %1340, i64 %1445
  %1447 = load i32, ptr %1446, align 4, !tbaa !22
  %1448 = getelementptr inbounds i32, ptr %1340, i64 %1444
  %1449 = load i32, ptr %1448, align 4, !tbaa !22
  %1450 = icmp ult i32 %1449, %1447
  br i1 %1450, label %1451, label %1434

1451:                                             ; preds = %1443
  %1452 = zext i32 %1449 to i64
  %1453 = zext i32 %1447 to i64
  %1454 = trunc i64 %1444 to i32
  br i1 %1427, label %1455, label %1563

1455:                                             ; preds = %1451, %1558
  %1456 = phi i64 [ %1559, %1558 ], [ %1452, %1451 ]
  %1457 = getelementptr inbounds i32, ptr %1201, i64 %1456
  %1458 = load i32, ptr %1457, align 4, !tbaa !22
  %1459 = load ptr, ptr %8, align 8, !tbaa !321
  %1460 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1459, i64 %1456, i32 1
  %1461 = load i32, ptr %1460, align 4, !tbaa !319
  br label %1462

1462:                                             ; preds = %1476, %1455
  %1463 = phi i64 [ %1464, %1476 ], [ 0, %1455 ]
  %1464 = add nuw nsw i64 %1463, 1
  %1465 = getelementptr inbounds i32, ptr %1340, i64 %1464
  %1466 = load i32, ptr %1465, align 4, !tbaa !22
  %1467 = getelementptr inbounds i32, ptr %1340, i64 %1463
  %1468 = load i32, ptr %1467, align 4, !tbaa !22
  %1469 = icmp ult i32 %1468, %1466
  br i1 %1469, label %1526, label %1516

1470:                                             ; preds = %1516, %1473
  %1471 = phi ptr [ %1474, %1473 ], [ %1423, %1516 ]
  %1472 = load i32, ptr %1471, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %1524, i32 noundef %1458, i32 noundef %1472)
          to label %1473 unwind label %1561

1473:                                             ; preds = %1470
  %1474 = getelementptr inbounds i32, ptr %1471, i64 1
  %1475 = icmp eq ptr %1474, %1517
  br i1 %1475, label %1476, label %1470

1476:                                             ; preds = %1473, %1516
  %1477 = icmp eq i64 %1464, %1432
  br i1 %1477, label %1558, label %1462

1478:                                             ; preds = %1552, %1512
  %1479 = phi i64 [ %1514, %1512 ], [ %1554, %1552 ]
  %1480 = phi ptr [ %1513, %1512 ], [ %1555, %1552 ]
  %1481 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1527, i64 %1479, i32 1
  %1482 = load i32, ptr %1481, align 4, !tbaa !319
  %1483 = load i32, ptr %1431, align 8, !tbaa !22, !noalias !535
  %1484 = mul i32 %1483, %1461
  %1485 = zext i32 %1484 to i64
  %1486 = getelementptr inbounds i8, ptr %1528, i64 %1485
  %1487 = zext i32 %1482 to i64
  %1488 = getelementptr inbounds i8, ptr %1486, i64 %1487
  %1489 = load i8, ptr %1488, align 1, !tbaa !424, !range !425, !noundef !73
  %1490 = icmp eq i8 %1489, 0
  br i1 %1490, label %1495, label %1491

1491:                                             ; preds = %1478
  %1492 = getelementptr inbounds i32, ptr %1201, i64 %1479
  %1493 = load i32, ptr %1492, align 4, !tbaa !22
  %1494 = getelementptr inbounds i32, ptr %1480, i64 1
  store i32 %1493, ptr %1480, align 4, !tbaa !22
  br label %1495

1495:                                             ; preds = %1491, %1478
  %1496 = phi ptr [ %1480, %1478 ], [ %1494, %1491 ]
  %1497 = add nuw nsw i64 %1479, 1
  %1498 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1527, i64 %1497, i32 1
  %1499 = load i32, ptr %1498, align 4, !tbaa !319
  %1500 = load i32, ptr %1431, align 8, !tbaa !22, !noalias !535
  %1501 = mul i32 %1500, %1461
  %1502 = zext i32 %1501 to i64
  %1503 = getelementptr inbounds i8, ptr %1528, i64 %1502
  %1504 = zext i32 %1499 to i64
  %1505 = getelementptr inbounds i8, ptr %1503, i64 %1504
  %1506 = load i8, ptr %1505, align 1, !tbaa !424, !range !425, !noundef !73
  %1507 = icmp eq i8 %1506, 0
  br i1 %1507, label %1512, label %1508

1508:                                             ; preds = %1495
  %1509 = getelementptr inbounds i32, ptr %1201, i64 %1497
  %1510 = load i32, ptr %1509, align 4, !tbaa !22
  %1511 = getelementptr inbounds i32, ptr %1496, i64 1
  store i32 %1510, ptr %1496, align 4, !tbaa !22
  br label %1512

1512:                                             ; preds = %1508, %1495
  %1513 = phi ptr [ %1496, %1495 ], [ %1511, %1508 ]
  %1514 = add nuw nsw i64 %1479, 2
  %1515 = icmp eq i64 %1514, %1530
  br i1 %1515, label %1516, label %1478

1516:                                             ; preds = %1552, %1512, %1462
  %1517 = phi ptr [ %1423, %1462 ], [ %1553, %1552 ], [ %1513, %1512 ]
  %1518 = load ptr, ptr %1428, align 8, !tbaa !497, !noalias !538
  %1519 = load i32, ptr %1429, align 8, !tbaa !22, !noalias !538
  %1520 = mul i32 %1519, %1454
  %1521 = zext i32 %1520 to i64
  %1522 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %1518, i64 %1521
  %1523 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %1522, i64 %1463
  %1524 = load ptr, ptr %1523, align 8, !tbaa !501
  %1525 = icmp eq ptr %1423, %1517
  br i1 %1525, label %1476, label %1470

1526:                                             ; preds = %1462
  %1527 = load ptr, ptr %8, align 8, !tbaa !321
  %1528 = load ptr, ptr %1430, align 8, !tbaa !422, !noalias !535
  %1529 = zext i32 %1468 to i64
  %1530 = zext i32 %1466 to i64
  %1531 = sub nsw i64 %1530, %1529
  %1532 = xor i64 %1529, -1
  %1533 = and i64 %1531, 1
  %1534 = icmp eq i64 %1533, 0
  br i1 %1534, label %1552, label %1535

1535:                                             ; preds = %1526
  %1536 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1527, i64 %1529, i32 1
  %1537 = load i32, ptr %1536, align 4, !tbaa !319
  %1538 = load i32, ptr %1431, align 8, !tbaa !22, !noalias !535
  %1539 = mul i32 %1538, %1461
  %1540 = zext i32 %1539 to i64
  %1541 = getelementptr inbounds i8, ptr %1528, i64 %1540
  %1542 = zext i32 %1537 to i64
  %1543 = getelementptr inbounds i8, ptr %1541, i64 %1542
  %1544 = load i8, ptr %1543, align 1, !tbaa !424, !range !425, !noundef !73
  %1545 = icmp eq i8 %1544, 0
  br i1 %1545, label %1549, label %1546

1546:                                             ; preds = %1535
  %1547 = getelementptr inbounds i32, ptr %1201, i64 %1529
  %1548 = load i32, ptr %1547, align 4, !tbaa !22
  store i32 %1548, ptr %1423, align 4, !tbaa !22
  br label %1549

1549:                                             ; preds = %1546, %1535
  %1550 = phi ptr [ %1423, %1535 ], [ %1433, %1546 ]
  %1551 = add nuw nsw i64 %1529, 1
  br label %1552

1552:                                             ; preds = %1549, %1526
  %1553 = phi ptr [ undef, %1526 ], [ %1550, %1549 ]
  %1554 = phi i64 [ %1529, %1526 ], [ %1551, %1549 ]
  %1555 = phi ptr [ %1423, %1526 ], [ %1550, %1549 ]
  %1556 = sub nsw i64 0, %1530
  %1557 = icmp eq i64 %1532, %1556
  br i1 %1557, label %1516, label %1478

1558:                                             ; preds = %1476
  %1559 = add nuw nsw i64 %1456, 1
  %1560 = icmp eq i64 %1559, %1453
  br i1 %1560, label %1434, label %1455

1561:                                             ; preds = %1470
  %1562 = landingpad { ptr, i32 }
          cleanup
  br label %1584

1563:                                             ; preds = %1451, %1571
  %1564 = phi i64 [ %1572, %1571 ], [ %1452, %1451 ]
  %1565 = getelementptr inbounds i32, ptr %1201, i64 %1564
  %1566 = load i32, ptr %1565, align 4, !tbaa !22
  %1567 = load ptr, ptr %8, align 8, !tbaa !321
  %1568 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1567, i64 %1564, i32 1
  %1569 = load i32, ptr %1568, align 4, !tbaa !319
  %1570 = icmp eq i32 %1569, -1
  br label %1574

1571:                                             ; preds = %1729
  %1572 = add nuw nsw i64 %1564, 1
  %1573 = icmp eq i64 %1572, %1453
  br i1 %1573, label %1434, label %1563

1574:                                             ; preds = %1563, %1729
  %1575 = phi i64 [ 0, %1563 ], [ %1576, %1729 ]
  %1576 = add nuw nsw i64 %1575, 1
  %1577 = getelementptr inbounds i32, ptr %1340, i64 %1576
  %1578 = load i32, ptr %1577, align 4, !tbaa !22
  %1579 = getelementptr inbounds i32, ptr %1340, i64 %1575
  %1580 = load i32, ptr %1579, align 4, !tbaa !22
  %1581 = icmp ult i32 %1580, %1578
  br i1 %1581, label %1587, label %1713

1582:                                             ; preds = %1723
  %1583 = landingpad { ptr, i32 }
          cleanup
  br label %1584

1584:                                             ; preds = %1561, %1582
  %1585 = phi { ptr, i32 } [ %1583, %1582 ], [ %1562, %1561 ]
  %1586 = icmp eq ptr %1423, null
  br i1 %1586, label %1763, label %1731

1587:                                             ; preds = %1574
  %1588 = load ptr, ptr %8, align 8, !tbaa !321
  %1589 = load ptr, ptr %1430, align 8
  %1590 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1588, i64 %1564, i32 2
  %1591 = zext i32 %1580 to i64
  %1592 = zext i32 %1578 to i64
  br label %1593

1593:                                             ; preds = %1587, %1709
  %1594 = phi i64 [ %1591, %1587 ], [ %1711, %1709 ]
  %1595 = phi ptr [ %1423, %1587 ], [ %1710, %1709 ]
  %1596 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1588, i64 %1594, i32 1
  %1597 = load i32, ptr %1596, align 4, !tbaa !319
  br i1 %1570, label %1640, label %1598

1598:                                             ; preds = %1593
  %1599 = icmp eq i32 %1597, -1
  br i1 %1599, label %1609, label %1600

1600:                                             ; preds = %1598
  %1601 = load i32, ptr %1431, align 8, !tbaa !22, !noalias !541
  %1602 = mul i32 %1601, %1569
  %1603 = zext i32 %1602 to i64
  %1604 = getelementptr inbounds i8, ptr %1589, i64 %1603
  %1605 = zext i32 %1597 to i64
  %1606 = getelementptr inbounds i8, ptr %1604, i64 %1605
  %1607 = load i8, ptr %1606, align 1, !tbaa !424, !range !425, !noundef !73
  %1608 = icmp eq i8 %1607, 0
  br i1 %1608, label %1609, label %1705

1609:                                             ; preds = %1600, %1598
  %1610 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1588, i64 %1594, i32 2
  %1611 = load ptr, ptr %1610, align 8, !tbaa !320
  %1612 = icmp eq ptr %1611, null
  br i1 %1612, label %1640, label %1613

1613:                                             ; preds = %1609
  %1614 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1611, i64 0, i32 1
  %1615 = load ptr, ptr %1614, align 8, !tbaa !31
  %1616 = load ptr, ptr %1611, align 8, !tbaa !32
  %1617 = ptrtoint ptr %1615 to i64
  %1618 = ptrtoint ptr %1616 to i64
  %1619 = sub i64 %1617, %1618
  %1620 = ashr exact i64 %1619, 4
  %1621 = icmp eq ptr %1615, %1616
  br i1 %1621, label %1640, label %1622

1622:                                             ; preds = %1613
  %1623 = load i32, ptr %1431, align 8, !tbaa !22, !noalias !544
  %1624 = mul i32 %1623, %1569
  %1625 = zext i32 %1624 to i64
  %1626 = getelementptr inbounds i8, ptr %1589, i64 %1625
  br label %1631

1627:                                             ; preds = %1631
  %1628 = add i32 %1633, 1
  %1629 = zext i32 %1628 to i64
  %1630 = icmp ugt i64 %1620, %1629
  br i1 %1630, label %1631, label %1640

1631:                                             ; preds = %1622, %1627
  %1632 = phi i64 [ 0, %1622 ], [ %1629, %1627 ]
  %1633 = phi i32 [ 0, %1622 ], [ %1628, %1627 ]
  %1634 = getelementptr inbounds %"struct.std::pair", ptr %1616, i64 %1632
  %1635 = load i32, ptr %1634, align 8, !tbaa !37
  %1636 = zext i32 %1635 to i64
  %1637 = getelementptr inbounds i8, ptr %1626, i64 %1636
  %1638 = load i8, ptr %1637, align 1, !tbaa !424, !range !425, !noundef !73
  %1639 = icmp eq i8 %1638, 0
  br i1 %1639, label %1627, label %1705

1640:                                             ; preds = %1627, %1613, %1609, %1593
  %1641 = load ptr, ptr %1590, align 8, !tbaa !320
  %1642 = icmp eq ptr %1641, null
  br i1 %1642, label %1709, label %1643

1643:                                             ; preds = %1640
  %1644 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1641, i64 0, i32 1
  %1645 = load ptr, ptr %1644, align 8, !tbaa !31
  %1646 = load ptr, ptr %1641, align 8, !tbaa !32
  %1647 = ptrtoint ptr %1645 to i64
  %1648 = ptrtoint ptr %1646 to i64
  %1649 = sub i64 %1647, %1648
  %1650 = ashr exact i64 %1649, 4
  %1651 = icmp eq ptr %1645, %1646
  br i1 %1651, label %1709, label %1652

1652:                                             ; preds = %1643
  %1653 = icmp eq i32 %1597, -1
  %1654 = load ptr, ptr %1430, align 8
  %1655 = load i32, ptr %1431, align 8
  %1656 = zext i32 %1597 to i64
  %1657 = getelementptr inbounds i8, ptr %1654, i64 %1656
  %1658 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1588, i64 %1594, i32 2
  br label %1659

1659:                                             ; preds = %1652, %1701
  %1660 = phi i64 [ 0, %1652 ], [ %1703, %1701 ]
  %1661 = phi i32 [ 0, %1652 ], [ %1702, %1701 ]
  br i1 %1653, label %1670, label %1662

1662:                                             ; preds = %1659
  %1663 = getelementptr inbounds %"struct.std::pair", ptr %1646, i64 %1660
  %1664 = load i32, ptr %1663, align 8, !tbaa !37
  %1665 = mul i32 %1655, %1664
  %1666 = zext i32 %1665 to i64
  %1667 = getelementptr inbounds i8, ptr %1657, i64 %1666
  %1668 = load i8, ptr %1667, align 1, !tbaa !424, !range !425, !noundef !73
  %1669 = icmp eq i8 %1668, 0
  br i1 %1669, label %1670, label %1705

1670:                                             ; preds = %1662, %1659
  %1671 = load ptr, ptr %1658, align 8, !tbaa !320
  %1672 = icmp eq ptr %1671, null
  br i1 %1672, label %1701, label %1673

1673:                                             ; preds = %1670
  %1674 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1671, i64 0, i32 1
  %1675 = load ptr, ptr %1674, align 8, !tbaa !31
  %1676 = load ptr, ptr %1671, align 8, !tbaa !32
  %1677 = ptrtoint ptr %1675 to i64
  %1678 = ptrtoint ptr %1676 to i64
  %1679 = sub i64 %1677, %1678
  %1680 = ashr exact i64 %1679, 4
  %1681 = icmp eq ptr %1675, %1676
  br i1 %1681, label %1701, label %1682

1682:                                             ; preds = %1673
  %1683 = getelementptr inbounds %"struct.std::pair", ptr %1646, i64 %1660
  %1684 = load i32, ptr %1683, align 8, !tbaa !37
  %1685 = mul i32 %1655, %1684
  %1686 = zext i32 %1685 to i64
  %1687 = getelementptr inbounds i8, ptr %1654, i64 %1686
  br label %1692

1688:                                             ; preds = %1692
  %1689 = add i32 %1694, 1
  %1690 = zext i32 %1689 to i64
  %1691 = icmp ugt i64 %1680, %1690
  br i1 %1691, label %1692, label %1701

1692:                                             ; preds = %1682, %1688
  %1693 = phi i64 [ 0, %1682 ], [ %1690, %1688 ]
  %1694 = phi i32 [ 0, %1682 ], [ %1689, %1688 ]
  %1695 = getelementptr inbounds %"struct.std::pair", ptr %1676, i64 %1693
  %1696 = load i32, ptr %1695, align 8, !tbaa !37
  %1697 = zext i32 %1696 to i64
  %1698 = getelementptr inbounds i8, ptr %1687, i64 %1697
  %1699 = load i8, ptr %1698, align 1, !tbaa !424, !range !425, !noundef !73
  %1700 = icmp eq i8 %1699, 0
  br i1 %1700, label %1688, label %1705

1701:                                             ; preds = %1688, %1673, %1670
  %1702 = add i32 %1661, 1
  %1703 = zext i32 %1702 to i64
  %1704 = icmp ugt i64 %1650, %1703
  br i1 %1704, label %1659, label %1709

1705:                                             ; preds = %1631, %1662, %1692, %1600
  %1706 = getelementptr inbounds i32, ptr %1201, i64 %1594
  %1707 = load i32, ptr %1706, align 4, !tbaa !22
  %1708 = getelementptr inbounds i32, ptr %1595, i64 1
  store i32 %1707, ptr %1595, align 4, !tbaa !22
  br label %1709

1709:                                             ; preds = %1701, %1643, %1640, %1705
  %1710 = phi ptr [ %1595, %1640 ], [ %1708, %1705 ], [ %1595, %1643 ], [ %1595, %1701 ]
  %1711 = add nuw nsw i64 %1594, 1
  %1712 = icmp eq i64 %1711, %1592
  br i1 %1712, label %1713, label %1593

1713:                                             ; preds = %1709, %1574
  %1714 = phi ptr [ %1423, %1574 ], [ %1710, %1709 ]
  %1715 = load ptr, ptr %1428, align 8, !tbaa !497, !noalias !538
  %1716 = load i32, ptr %1429, align 8, !tbaa !22, !noalias !538
  %1717 = mul i32 %1716, %1454
  %1718 = zext i32 %1717 to i64
  %1719 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %1715, i64 %1718
  %1720 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %1719, i64 %1575
  %1721 = load ptr, ptr %1720, align 8, !tbaa !501
  %1722 = icmp eq ptr %1423, %1714
  br i1 %1722, label %1729, label %1723

1723:                                             ; preds = %1713, %1726
  %1724 = phi ptr [ %1727, %1726 ], [ %1423, %1713 ]
  %1725 = load i32, ptr %1724, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %1721, i32 noundef %1566, i32 noundef %1725)
          to label %1726 unwind label %1582

1726:                                             ; preds = %1723
  %1727 = getelementptr inbounds i32, ptr %1724, i64 1
  %1728 = icmp eq ptr %1727, %1714
  br i1 %1728, label %1729, label %1723

1729:                                             ; preds = %1726, %1713
  %1730 = icmp eq i64 %1576, %1432
  br i1 %1730, label %1571, label %1574

1731:                                             ; preds = %1584
  call void @_ZdlPv(ptr noundef nonnull %1423) #23
  br label %1763

1732:                                             ; preds = %1436, %1438
  call void @_ZdlPv(ptr noundef nonnull %1340) #23
  %1733 = icmp eq ptr %1201, null
  br i1 %1733, label %1735, label %1734

1734:                                             ; preds = %1732
  call void @_ZdlPv(ptr noundef nonnull %1201) #23
  br label %1735

1735:                                             ; preds = %1734, %1732
  %1736 = icmp eq ptr %776, null
  br i1 %1736, label %1738, label %1737

1737:                                             ; preds = %1735
  call void @_ZdlPv(ptr noundef nonnull %776) #23
  br label %1738

1738:                                             ; preds = %1737, %1735
  %1739 = load ptr, ptr %8, align 8, !tbaa !321
  %1740 = load ptr, ptr %760, align 8, !tbaa !325
  %1741 = icmp eq ptr %1739, %1740
  br i1 %1741, label %1757, label %1742

1742:                                             ; preds = %1738, %1752
  %1743 = phi ptr [ %1753, %1752 ], [ %1739, %1738 ]
  %1744 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1743, i64 0, i32 2
  %1745 = load ptr, ptr %1744, align 8, !tbaa !320
  %1746 = icmp eq ptr %1745, null
  br i1 %1746, label %1752, label %1747

1747:                                             ; preds = %1742
  %1748 = load ptr, ptr %1745, align 8, !tbaa !32
  %1749 = icmp eq ptr %1748, null
  br i1 %1749, label %1751, label %1750

1750:                                             ; preds = %1747
  call void @_ZdlPv(ptr noundef nonnull %1748) #23
  br label %1751

1751:                                             ; preds = %1750, %1747
  call void @_ZdlPv(ptr noundef nonnull %1745) #23
  store ptr null, ptr %1744, align 8, !tbaa !320
  br label %1752

1752:                                             ; preds = %1751, %1742
  %1753 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1743, i64 1
  %1754 = icmp eq ptr %1753, %1740
  br i1 %1754, label %1755, label %1742

1755:                                             ; preds = %1752
  %1756 = load ptr, ptr %8, align 8, !tbaa !321
  br label %1757

1757:                                             ; preds = %1755, %1738
  %1758 = phi ptr [ %1756, %1755 ], [ %1739, %1738 ]
  %1759 = icmp eq ptr %1758, null
  br i1 %1759, label %1761, label %1760

1760:                                             ; preds = %1757
  call void @_ZdlPv(ptr noundef nonnull %1758) #23
  br label %1761

1761:                                             ; preds = %1757, %1760
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #24
  br label %1762

1762:                                             ; preds = %1761, %696
  ret void

1763:                                             ; preds = %1441, %1584, %1731
  %1764 = phi { ptr, i32 } [ %1442, %1441 ], [ %1585, %1584 ], [ %1585, %1731 ]
  call void @_ZdlPv(ptr noundef nonnull %1340) #23
  br label %1765

1765:                                             ; preds = %1763, %1439
  %1766 = phi { ptr, i32 } [ %1764, %1763 ], [ %1440, %1439 ]
  %1767 = icmp eq ptr %1201, null
  br i1 %1767, label %1769, label %1768

1768:                                             ; preds = %1765
  call void @_ZdlPv(ptr noundef nonnull %1201) #23
  br label %1769

1769:                                             ; preds = %924, %926, %1115, %1195, %1066, %1768, %1765, %1318, %1027
  %1770 = phi ptr [ %776, %1027 ], [ %776, %1066 ], [ %776, %1195 ], [ %776, %1115 ], [ %776, %1318 ], [ %776, %1765 ], [ %776, %1768 ], [ %813, %924 ], [ %813, %926 ]
  %1771 = phi { ptr, i32 } [ %1028, %1027 ], [ %1067, %1066 ], [ %1196, %1195 ], [ %1116, %1115 ], [ %1319, %1318 ], [ %1766, %1765 ], [ %1766, %1768 ], [ %925, %924 ], [ %927, %926 ]
  %1772 = icmp eq ptr %1770, null
  br i1 %1772, label %1774, label %1773

1773:                                             ; preds = %1769
  call void @_ZdlPv(ptr noundef nonnull %1770) #23
  br label %1774

1774:                                             ; preds = %1773, %1769
  %1775 = load ptr, ptr %8, align 8, !tbaa !321
  %1776 = load ptr, ptr %760, align 8, !tbaa !325
  %1777 = icmp eq ptr %1775, %1776
  br i1 %1777, label %1793, label %1778

1778:                                             ; preds = %1774, %1788
  %1779 = phi ptr [ %1789, %1788 ], [ %1775, %1774 ]
  %1780 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1779, i64 0, i32 2
  %1781 = load ptr, ptr %1780, align 8, !tbaa !320
  %1782 = icmp eq ptr %1781, null
  br i1 %1782, label %1788, label %1783

1783:                                             ; preds = %1778
  %1784 = load ptr, ptr %1781, align 8, !tbaa !32
  %1785 = icmp eq ptr %1784, null
  br i1 %1785, label %1787, label %1786

1786:                                             ; preds = %1783
  call void @_ZdlPv(ptr noundef nonnull %1784) #23
  br label %1787

1787:                                             ; preds = %1786, %1783
  call void @_ZdlPv(ptr noundef nonnull %1781) #23
  store ptr null, ptr %1780, align 8, !tbaa !320
  br label %1788

1788:                                             ; preds = %1787, %1778
  %1789 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1779, i64 1
  %1790 = icmp eq ptr %1789, %1776
  br i1 %1790, label %1791, label %1778

1791:                                             ; preds = %1788
  %1792 = load ptr, ptr %8, align 8, !tbaa !321
  br label %1793

1793:                                             ; preds = %1791, %1774
  %1794 = phi ptr [ %1792, %1791 ], [ %1775, %1774 ]
  %1795 = icmp eq ptr %1794, null
  br i1 %1795, label %1797, label %1796

1796:                                             ; preds = %1793
  call void @_ZdlPv(ptr noundef nonnull %1794) #23
  br label %1797

1797:                                             ; preds = %1796, %1793, %809
  %1798 = phi { ptr, i32 } [ %808, %809 ], [ %1771, %1793 ], [ %1771, %1796 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #24
  br label %1799

1799:                                             ; preds = %1797, %706
  %1800 = phi { ptr, i32 } [ %707, %706 ], [ %1798, %1797 ]
  resume { ptr, i32 } %1800

1801:                                             ; preds = %1027, %807
  %1802 = landingpad { ptr, i32 }
          catch ptr null
  %1803 = extractvalue { ptr, i32 } %1802, 0
  call void @__clang_call_terminate(ptr %1803) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_30BlockCompressedSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(288) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_30BlockCompressedSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(288) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_30BlockCompressedSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(288) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::vector.36", align 8
  %8 = alloca %"class.std::vector.178", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = alloca %"struct.dealii::internals::distributing", align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !313
  %13 = load ptr, ptr %1, align 8, !tbaa !58
  %14 = ptrtoint ptr %12 to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 2
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 1
  %20 = load i32, ptr %19, align 8, !tbaa !547
  %21 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3
  %22 = load i32, ptr %21, align 4, !tbaa !22
  %23 = icmp eq i32 %22, %18
  %24 = and i64 %17, 4294967295
  br i1 %23, label %794, label %25

25:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %34

28:                                               ; preds = %25
  %29 = shl nuw nsw i64 %24, 2
  %30 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %29) #21
          to label %31 unwind label %72

31:                                               ; preds = %28
  store ptr %30, ptr %7, align 8, !tbaa !58
  %32 = getelementptr inbounds i32, ptr %30, i64 %24
  %33 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %32, ptr %33, align 8, !tbaa !417
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %30, i8 0, i64 %29, i1 false), !tbaa !22
  br label %34

34:                                               ; preds = %31, %27
  %35 = phi ptr [ null, %27 ], [ %30, %31 ]
  %36 = phi ptr [ null, %27 ], [ %32, %31 ]
  %37 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %36, ptr %37, align 8, !tbaa !313
  %38 = icmp eq i32 %18, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %41 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %43 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = and i64 %17, 4294967295
  br label %74

46:                                               ; preds = %179
  %47 = load ptr, ptr %37, align 8, !tbaa !21
  %48 = load ptr, ptr %7, align 8, !tbaa !21
  br label %49

49:                                               ; preds = %46, %34
  %50 = phi ptr [ %35, %34 ], [ %48, %46 ]
  %51 = phi ptr [ %36, %34 ], [ %47, %46 ]
  %52 = phi ptr [ null, %34 ], [ %181, %46 ]
  %53 = phi ptr [ null, %34 ], [ %182, %46 ]
  %54 = phi i32 [ 0, %34 ], [ %183, %46 ]
  %55 = zext i32 %54 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6)
  store i32 0, ptr %6, align 4, !tbaa !22
  %56 = ptrtoint ptr %51 to i64
  %57 = ptrtoint ptr %50 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = icmp ult i64 %59, %55
  br i1 %60, label %61, label %66

61:                                               ; preds = %49
  %62 = sub nsw i64 %55, %59
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %51, i64 noundef %62, ptr noundef nonnull align 4 dereferenceable(4) %6)
          to label %63 unwind label %269

63:                                               ; preds = %61
  %64 = load ptr, ptr %7, align 8, !tbaa !21
  %65 = load ptr, ptr %37, align 8, !tbaa !21
  br label %190

66:                                               ; preds = %49
  %67 = icmp ugt i64 %59, %55
  br i1 %67, label %68, label %190

68:                                               ; preds = %66
  %69 = getelementptr inbounds i32, ptr %50, i64 %55
  %70 = icmp eq ptr %51, %69
  br i1 %70, label %190, label %71

71:                                               ; preds = %68
  store ptr %69, ptr %37, align 8, !tbaa !313
  br label %190

72:                                               ; preds = %28
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %792

74:                                               ; preds = %39, %179
  %75 = phi i64 [ 0, %39 ], [ %184, %179 ]
  %76 = phi i32 [ 0, %39 ], [ %183, %179 ]
  %77 = phi ptr [ null, %39 ], [ %182, %179 ]
  %78 = phi ptr [ null, %39 ], [ %181, %179 ]
  %79 = phi ptr [ null, %39 ], [ %180, %179 ]
  %80 = load ptr, ptr %41, align 8, !tbaa !55
  %81 = load i32, ptr %42, align 8, !tbaa !57
  %82 = load ptr, ptr %40, align 8, !tbaa !55
  %83 = ptrtoint ptr %80 to i64
  %84 = ptrtoint ptr %82 to i64
  %85 = sub i64 %83, %84
  %86 = shl nsw i64 %85, 3
  %87 = zext i32 %81 to i64
  %88 = add nsw i64 %86, %87
  %89 = load ptr, ptr %1, align 8, !tbaa !58
  %90 = getelementptr inbounds i32, ptr %89, i64 %75
  %91 = load i32, ptr %90, align 4, !tbaa !22
  %92 = zext i32 %91 to i64
  %93 = icmp ugt i64 %88, %92
  br i1 %93, label %94, label %104

94:                                               ; preds = %74
  %95 = lshr i32 %91, 6
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i64, ptr %82, i64 %96
  %98 = and i32 %91, 63
  %99 = zext i32 %98 to i64
  %100 = shl nuw i64 1, %99
  %101 = load i64, ptr %97, align 8, !tbaa !42
  %102 = and i64 %101, %100
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %109

104:                                              ; preds = %94, %74
  %105 = zext i32 %76 to i64
  %106 = load ptr, ptr %7, align 8, !tbaa !58
  %107 = getelementptr inbounds i32, ptr %106, i64 %105
  store i32 %91, ptr %107, align 4, !tbaa !22
  %108 = add i32 %76, 1
  br label %179

109:                                              ; preds = %94
  %110 = load ptr, ptr %43, align 8, !tbaa !21
  %111 = load ptr, ptr %44, align 8, !tbaa !21
  %112 = ptrtoint ptr %111 to i64
  %113 = ptrtoint ptr %110 to i64
  %114 = sub i64 %112, %113
  %115 = icmp sgt i64 %114, 0
  br i1 %115, label %116, label %131

116:                                              ; preds = %109
  %117 = udiv exact i64 %114, 40
  br label %118

118:                                              ; preds = %118, %116
  %119 = phi i64 [ %117, %116 ], [ %129, %118 ]
  %120 = phi ptr [ %110, %116 ], [ %128, %118 ]
  %121 = lshr i64 %119, 1
  %122 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %120, i64 %121
  %123 = load i32, ptr %122, align 8, !tbaa !24
  %124 = icmp ult i32 %123, %91
  %125 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %122, i64 1
  %126 = xor i64 %121, -1
  %127 = add nsw i64 %119, %126
  %128 = select i1 %124, ptr %125, ptr %120
  %129 = select i1 %124, i64 %127, i64 %121
  %130 = icmp sgt i64 %129, 0
  br i1 %130, label %118, label %131

131:                                              ; preds = %118, %109
  %132 = phi ptr [ %110, %109 ], [ %128, %118 ]
  %133 = icmp eq ptr %78, %79
  br i1 %133, label %137, label %134

134:                                              ; preds = %131
  %135 = trunc i64 %75 to i32
  store i32 %135, ptr %78, align 8
  %136 = getelementptr inbounds i8, ptr %78, i64 8
  store ptr %132, ptr %136, align 8
  br label %174

137:                                              ; preds = %131
  %138 = ptrtoint ptr %78 to i64
  %139 = ptrtoint ptr %77 to i64
  %140 = sub i64 %138, %139
  %141 = icmp eq i64 %140, 9223372036854775792
  br i1 %141, label %142, label %144

142:                                              ; preds = %137
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %143 unwind label %188

143:                                              ; preds = %142
  unreachable

144:                                              ; preds = %137
  %145 = ashr exact i64 %140, 4
  %146 = tail call i64 @llvm.umax.i64(i64 %145, i64 1)
  %147 = add i64 %146, %145
  %148 = icmp ult i64 %147, %145
  %149 = icmp ugt i64 %147, 576460752303423487
  %150 = or i1 %148, %149
  %151 = select i1 %150, i64 576460752303423487, i64 %147
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %156, label %153

153:                                              ; preds = %144
  %154 = shl nuw nsw i64 %151, 4
  %155 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %154) #21
          to label %156 unwind label %186

156:                                              ; preds = %153, %144
  %157 = phi ptr [ null, %144 ], [ %155, %153 ]
  %158 = getelementptr inbounds %"struct.std::pair.188", ptr %157, i64 %145
  %159 = trunc i64 %75 to i32
  store i32 %159, ptr %158, align 8
  %160 = getelementptr inbounds i8, ptr %158, i64 8
  store ptr %132, ptr %160, align 8
  %161 = icmp eq ptr %77, %78
  br i1 %161, label %168, label %162

162:                                              ; preds = %156, %162
  %163 = phi ptr [ %166, %162 ], [ %157, %156 ]
  %164 = phi ptr [ %165, %162 ], [ %77, %156 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %163, ptr noundef nonnull align 8 dereferenceable(16) %164, i64 16, i1 false)
  %165 = getelementptr inbounds %"struct.std::pair.188", ptr %164, i64 1
  %166 = getelementptr inbounds %"struct.std::pair.188", ptr %163, i64 1
  %167 = icmp eq ptr %165, %78
  br i1 %167, label %168, label %162

168:                                              ; preds = %162, %156
  %169 = phi ptr [ %157, %156 ], [ %166, %162 ]
  %170 = icmp eq ptr %77, null
  br i1 %170, label %172, label %171

171:                                              ; preds = %168
  tail call void @_ZdlPv(ptr noundef nonnull %77) #23
  br label %172

172:                                              ; preds = %171, %168
  %173 = getelementptr inbounds %"struct.std::pair.188", ptr %157, i64 %151
  br label %174

174:                                              ; preds = %172, %134
  %175 = phi ptr [ %173, %172 ], [ %79, %134 ]
  %176 = phi ptr [ %169, %172 ], [ %78, %134 ]
  %177 = phi ptr [ %157, %172 ], [ %77, %134 ]
  %178 = getelementptr inbounds %"struct.std::pair.188", ptr %176, i64 1
  br label %179

179:                                              ; preds = %174, %104
  %180 = phi ptr [ %175, %174 ], [ %79, %104 ]
  %181 = phi ptr [ %178, %174 ], [ %78, %104 ]
  %182 = phi ptr [ %177, %174 ], [ %77, %104 ]
  %183 = phi i32 [ %76, %174 ], [ %108, %104 ]
  %184 = add nuw nsw i64 %75, 1
  %185 = icmp eq i64 %184, %45
  br i1 %185, label %46, label %74

186:                                              ; preds = %153
  %187 = landingpad { ptr, i32 }
          cleanup
  br label %783

188:                                              ; preds = %142
  %189 = landingpad { ptr, i32 }
          cleanup
  br label %783

190:                                              ; preds = %63, %71, %68, %66
  %191 = phi ptr [ %65, %63 ], [ %69, %71 ], [ %51, %68 ], [ %51, %66 ]
  %192 = phi ptr [ %64, %63 ], [ %50, %71 ], [ %50, %68 ], [ %50, %66 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6)
  %193 = icmp eq ptr %192, %191
  br i1 %193, label %203, label %194

194:                                              ; preds = %190
  %195 = ptrtoint ptr %191 to i64
  %196 = ptrtoint ptr %192 to i64
  %197 = sub i64 %195, %196
  %198 = ashr exact i64 %197, 2
  %199 = call i64 @llvm.ctlz.i64(i64 %198, i1 true), !range !418
  %200 = shl nuw nsw i64 %199, 1
  %201 = xor i64 %200, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %192, ptr %191, i64 noundef %201)
          to label %202 unwind label %269

202:                                              ; preds = %194
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %192, ptr %191)
          to label %203 unwind label %269

203:                                              ; preds = %190, %202
  %204 = ptrtoint ptr %52 to i64
  %205 = ptrtoint ptr %53 to i64
  %206 = sub i64 %204, %205
  %207 = and i64 %206, 68719476720
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %220, label %209

209:                                              ; preds = %203
  %210 = lshr exact i64 %206, 4
  %211 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  %212 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 4
  %213 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 4, i32 1
  %214 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 5
  %215 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 5, i32 1
  %216 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 3, i32 0, i32 1
  %217 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %218 = and i64 %210, 4294967295
  %219 = and i64 %17, 4294967295
  br label %271

220:                                              ; preds = %644, %203
  %221 = load ptr, ptr %37, align 8, !tbaa !21
  %222 = load ptr, ptr %7, align 8, !tbaa !21
  %223 = ptrtoint ptr %221 to i64
  %224 = ptrtoint ptr %222 to i64
  %225 = sub i64 %223, %224
  %226 = lshr exact i64 %225, 2
  %227 = trunc i64 %226 to i32
  %228 = add i32 %20, 1
  %229 = zext i32 %228 to i64
  %230 = icmp eq i32 %228, 0
  br i1 %230, label %647, label %231

231:                                              ; preds = %220
  %232 = shl nuw nsw i64 %229, 2
  %233 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %232) #21
          to label %234 unwind label %726

234:                                              ; preds = %231
  %235 = getelementptr inbounds i32, ptr %233, i64 %229
  %236 = add nuw nsw i64 %229, 4611686018427387903
  %237 = and i64 %236, 4611686018427387903
  %238 = add nuw nsw i64 %237, 1
  %239 = icmp ult i64 %237, 31
  br i1 %239, label %263, label %240

240:                                              ; preds = %234
  %241 = and i64 %238, 9223372036854775776
  %242 = shl i64 %241, 2
  %243 = getelementptr i8, ptr %233, i64 %242
  %244 = insertelement <8 x i32> poison, i32 %227, i64 0
  %245 = shufflevector <8 x i32> %244, <8 x i32> poison, <8 x i32> zeroinitializer
  %246 = insertelement <8 x i32> poison, i32 %227, i64 0
  %247 = shufflevector <8 x i32> %246, <8 x i32> poison, <8 x i32> zeroinitializer
  %248 = insertelement <8 x i32> poison, i32 %227, i64 0
  %249 = shufflevector <8 x i32> %248, <8 x i32> poison, <8 x i32> zeroinitializer
  %250 = insertelement <8 x i32> poison, i32 %227, i64 0
  %251 = shufflevector <8 x i32> %250, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %252

252:                                              ; preds = %252, %240
  %253 = phi i64 [ 0, %240 ], [ %259, %252 ]
  %254 = shl i64 %253, 2
  %255 = getelementptr i8, ptr %233, i64 %254
  store <8 x i32> %245, ptr %255, align 4, !tbaa !22
  %256 = getelementptr i32, ptr %255, i64 8
  store <8 x i32> %247, ptr %256, align 4, !tbaa !22
  %257 = getelementptr i32, ptr %255, i64 16
  store <8 x i32> %249, ptr %257, align 4, !tbaa !22
  %258 = getelementptr i32, ptr %255, i64 24
  store <8 x i32> %251, ptr %258, align 4, !tbaa !22
  %259 = add nuw i64 %253, 32
  %260 = icmp eq i64 %259, %241
  br i1 %260, label %261, label %252, !llvm.loop !551

261:                                              ; preds = %252
  %262 = icmp eq i64 %238, %241
  br i1 %262, label %647, label %263

263:                                              ; preds = %234, %261
  %264 = phi ptr [ %233, %234 ], [ %243, %261 ]
  br label %265

265:                                              ; preds = %263, %265
  %266 = phi ptr [ %267, %265 ], [ %264, %263 ]
  store i32 %227, ptr %266, align 4, !tbaa !22
  %267 = getelementptr inbounds i32, ptr %266, i64 1
  %268 = icmp eq ptr %267, %235
  br i1 %268, label %647, label %265, !llvm.loop !552

269:                                              ; preds = %202, %194, %61
  %270 = landingpad { ptr, i32 }
          cleanup
  br label %783

271:                                              ; preds = %209, %644
  %272 = phi i64 [ 0, %209 ], [ %645, %644 ]
  %273 = getelementptr inbounds %"struct.std::pair.188", ptr %53, i64 %272
  %274 = load i32, ptr %273, align 8, !tbaa !326
  %275 = zext i32 %274 to i64
  %276 = load ptr, ptr %1, align 8, !tbaa !58
  %277 = getelementptr inbounds i32, ptr %276, i64 %275
  %278 = load i32, ptr %277, align 4, !tbaa !22
  %279 = getelementptr inbounds %"struct.std::pair.188", ptr %53, i64 %272, i32 1
  %280 = load ptr, ptr %279, align 8, !tbaa !328
  %281 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %280, i64 0, i32 1
  %282 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %280, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %283 = load ptr, ptr %282, align 8, !tbaa !31
  %284 = load ptr, ptr %281, align 8, !tbaa !32
  %285 = icmp eq ptr %283, %284
  br i1 %285, label %286, label %288

286:                                              ; preds = %438, %271
  br i1 %3, label %287, label %583

287:                                              ; preds = %286
  br i1 %38, label %644, label %448

288:                                              ; preds = %271, %438
  %289 = phi ptr [ %442, %438 ], [ %284, %271 ]
  %290 = phi i64 [ %440, %438 ], [ 0, %271 ]
  %291 = phi i32 [ %439, %438 ], [ 0, %271 ]
  %292 = getelementptr inbounds %"struct.std::pair", ptr %289, i64 %290
  %293 = load i32, ptr %292, align 8, !tbaa !37
  %294 = load ptr, ptr %37, align 8, !tbaa !21
  %295 = getelementptr inbounds i32, ptr %294, i64 -1
  %296 = load i32, ptr %295, align 4, !tbaa !22
  %297 = icmp ult i32 %296, %293
  br i1 %297, label %298, label %345

298:                                              ; preds = %288
  %299 = load ptr, ptr %211, align 8, !tbaa !417
  %300 = icmp eq ptr %294, %299
  br i1 %300, label %303, label %301

301:                                              ; preds = %298
  store i32 %293, ptr %294, align 4, !tbaa !22
  %302 = getelementptr inbounds i32, ptr %294, i64 1
  store ptr %302, ptr %37, align 8, !tbaa !313
  br label %438

303:                                              ; preds = %298
  %304 = load ptr, ptr %7, align 8, !tbaa !21
  %305 = ptrtoint ptr %294 to i64
  %306 = ptrtoint ptr %304 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 9223372036854775804
  br i1 %308, label %309, label %311

309:                                              ; preds = %303
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %310 unwind label %343

310:                                              ; preds = %309
  unreachable

311:                                              ; preds = %303
  %312 = ashr exact i64 %307, 2
  %313 = call i64 @llvm.umax.i64(i64 %312, i64 1)
  %314 = add i64 %313, %312
  %315 = icmp ult i64 %314, %312
  %316 = icmp ugt i64 %314, 2305843009213693951
  %317 = or i1 %315, %316
  %318 = select i1 %317, i64 2305843009213693951, i64 %314
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %323, label %320

320:                                              ; preds = %311
  %321 = shl nuw nsw i64 %318, 2
  %322 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %321) #21
          to label %323 unwind label %341

323:                                              ; preds = %320, %311
  %324 = phi ptr [ null, %311 ], [ %322, %320 ]
  %325 = getelementptr inbounds i32, ptr %324, i64 %312
  store i32 %293, ptr %325, align 4, !tbaa !22
  %326 = icmp sgt i64 %307, 4
  br i1 %326, label %327, label %328, !prof !23

327:                                              ; preds = %323
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %324, ptr align 4 %304, i64 %307, i1 false)
  br label %333

328:                                              ; preds = %323
  %329 = icmp eq i64 %307, 4
  br i1 %329, label %330, label %333

330:                                              ; preds = %328
  %331 = load i32, ptr %304, align 4, !tbaa !22
  store i32 %331, ptr %324, align 4, !tbaa !22
  %332 = getelementptr inbounds i32, ptr %325, i64 1
  br label %336

333:                                              ; preds = %328, %327
  %334 = getelementptr inbounds i32, ptr %325, i64 1
  %335 = icmp eq ptr %304, null
  br i1 %335, label %338, label %336

336:                                              ; preds = %330, %333
  %337 = phi ptr [ %332, %330 ], [ %334, %333 ]
  call void @_ZdlPv(ptr noundef nonnull %304) #23
  br label %338

338:                                              ; preds = %336, %333
  %339 = phi ptr [ %334, %333 ], [ %337, %336 ]
  store ptr %324, ptr %7, align 8, !tbaa !58
  store ptr %339, ptr %37, align 8, !tbaa !313
  %340 = getelementptr inbounds i32, ptr %324, i64 %318
  store ptr %340, ptr %211, align 8, !tbaa !417
  br label %438

341:                                              ; preds = %320
  %342 = landingpad { ptr, i32 }
          cleanup
  br label %783

343:                                              ; preds = %309
  %344 = landingpad { ptr, i32 }
          cleanup
  br label %783

345:                                              ; preds = %288
  %346 = load ptr, ptr %7, align 8, !tbaa !21
  %347 = ptrtoint ptr %294 to i64
  %348 = ptrtoint ptr %346 to i64
  %349 = sub i64 %347, %348
  %350 = icmp sgt i64 %349, 0
  br i1 %350, label %351, label %366

351:                                              ; preds = %345
  %352 = lshr exact i64 %349, 2
  br label %353

353:                                              ; preds = %353, %351
  %354 = phi i64 [ %352, %351 ], [ %364, %353 ]
  %355 = phi ptr [ %346, %351 ], [ %363, %353 ]
  %356 = lshr i64 %354, 1
  %357 = getelementptr inbounds i32, ptr %355, i64 %356
  %358 = load i32, ptr %357, align 4, !tbaa !22
  %359 = icmp ult i32 %358, %293
  %360 = getelementptr inbounds i32, ptr %357, i64 1
  %361 = xor i64 %356, -1
  %362 = add nsw i64 %354, %361
  %363 = select i1 %359, ptr %360, ptr %355
  %364 = select i1 %359, i64 %362, i64 %356
  %365 = icmp sgt i64 %364, 0
  br i1 %365, label %353, label %366

366:                                              ; preds = %353, %345
  %367 = phi ptr [ %346, %345 ], [ %363, %353 ]
  %368 = load i32, ptr %367, align 4, !tbaa !22
  %369 = icmp eq i32 %368, %293
  br i1 %369, label %438, label %370

370:                                              ; preds = %366
  %371 = ptrtoint ptr %367 to i64
  %372 = load ptr, ptr %211, align 8, !tbaa !417
  %373 = icmp eq ptr %294, %372
  br i1 %373, label %391, label %374

374:                                              ; preds = %370
  %375 = icmp eq ptr %294, %367
  %376 = getelementptr inbounds i32, ptr %294, i64 1
  br i1 %375, label %377, label %378

377:                                              ; preds = %374
  store i32 %293, ptr %294, align 4, !tbaa !22
  store ptr %376, ptr %37, align 8, !tbaa !313
  br label %438

378:                                              ; preds = %374
  store i32 %296, ptr %294, align 4, !tbaa !22
  store ptr %376, ptr %37, align 8, !tbaa !313
  %379 = ptrtoint ptr %295 to i64
  %380 = sub i64 %379, %371
  %381 = icmp sgt i64 %380, 4
  br i1 %381, label %382, label %386, !prof !23

382:                                              ; preds = %378
  %383 = lshr exact i64 %380, 2
  %384 = sub nsw i64 0, %383
  %385 = getelementptr inbounds i32, ptr %294, i64 %384
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %385, ptr nonnull align 4 %367, i64 %380, i1 false)
  br label %390

386:                                              ; preds = %378
  %387 = icmp eq i64 %380, 4
  br i1 %387, label %388, label %390

388:                                              ; preds = %386
  %389 = load i32, ptr %367, align 4, !tbaa !22
  store i32 %389, ptr %295, align 4, !tbaa !22
  br label %390

390:                                              ; preds = %388, %386, %382
  store i32 %293, ptr %367, align 4, !tbaa !22
  br label %438

391:                                              ; preds = %370
  %392 = icmp eq i64 %349, 9223372036854775804
  br i1 %392, label %393, label %395

393:                                              ; preds = %391
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %394 unwind label %436

394:                                              ; preds = %393
  unreachable

395:                                              ; preds = %391
  %396 = ashr exact i64 %349, 2
  %397 = call i64 @llvm.umax.i64(i64 %396, i64 1)
  %398 = add i64 %397, %396
  %399 = icmp ult i64 %398, %396
  %400 = icmp ugt i64 %398, 2305843009213693951
  %401 = or i1 %399, %400
  %402 = select i1 %401, i64 2305843009213693951, i64 %398
  %403 = sub i64 %371, %348
  %404 = ashr exact i64 %403, 2
  %405 = icmp eq i64 %402, 0
  br i1 %405, label %409, label %406

406:                                              ; preds = %395
  %407 = shl nuw nsw i64 %402, 2
  %408 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %407) #21
          to label %409 unwind label %434

409:                                              ; preds = %406, %395
  %410 = phi ptr [ null, %395 ], [ %408, %406 ]
  %411 = getelementptr inbounds i32, ptr %410, i64 %404
  store i32 %293, ptr %411, align 4, !tbaa !22
  %412 = icmp sgt i64 %403, 4
  br i1 %412, label %413, label %414, !prof !23

413:                                              ; preds = %409
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %410, ptr align 4 %346, i64 %403, i1 false)
  br label %418

414:                                              ; preds = %409
  %415 = icmp eq i64 %403, 4
  br i1 %415, label %416, label %418

416:                                              ; preds = %414
  %417 = load i32, ptr %346, align 4, !tbaa !22
  store i32 %417, ptr %410, align 4, !tbaa !22
  br label %418

418:                                              ; preds = %416, %414, %413
  %419 = getelementptr inbounds i32, ptr %411, i64 1
  %420 = sub i64 %347, %371
  %421 = icmp sgt i64 %420, 4
  br i1 %421, label %422, label %423, !prof !23

422:                                              ; preds = %418
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %419, ptr nonnull align 4 %367, i64 %420, i1 false)
  br label %427

423:                                              ; preds = %418
  %424 = icmp eq i64 %420, 4
  br i1 %424, label %425, label %427

425:                                              ; preds = %423
  %426 = load i32, ptr %367, align 4, !tbaa !22
  store i32 %426, ptr %419, align 4, !tbaa !22
  br label %427

427:                                              ; preds = %425, %423, %422
  %428 = icmp eq ptr %346, null
  br i1 %428, label %430, label %429

429:                                              ; preds = %427
  call void @_ZdlPv(ptr noundef nonnull %346) #23
  br label %430

430:                                              ; preds = %429, %427
  %431 = ashr exact i64 %420, 2
  %432 = getelementptr inbounds i32, ptr %419, i64 %431
  store ptr %410, ptr %7, align 8, !tbaa !58
  store ptr %432, ptr %37, align 8, !tbaa !313
  %433 = getelementptr inbounds i32, ptr %410, i64 %402
  store ptr %433, ptr %211, align 8, !tbaa !417
  br label %438

434:                                              ; preds = %406
  %435 = landingpad { ptr, i32 }
          cleanup
  br label %783

436:                                              ; preds = %393
  %437 = landingpad { ptr, i32 }
          cleanup
  br label %783

438:                                              ; preds = %430, %390, %377, %366, %338, %301
  %439 = add i32 %291, 1
  %440 = zext i32 %439 to i64
  %441 = load ptr, ptr %282, align 8, !tbaa !31
  %442 = load ptr, ptr %281, align 8, !tbaa !32
  %443 = ptrtoint ptr %441 to i64
  %444 = ptrtoint ptr %442 to i64
  %445 = sub i64 %443, %444
  %446 = ashr exact i64 %445, 4
  %447 = icmp ugt i64 %446, %440
  br i1 %447, label %288, label %286

448:                                              ; preds = %287, %578
  %449 = phi i64 [ %579, %578 ], [ 0, %287 ]
  %450 = load ptr, ptr %1, align 8, !tbaa !58
  %451 = getelementptr inbounds i32, ptr %450, i64 %449
  %452 = load i32, ptr %451, align 4, !tbaa !22
  %453 = load i32, ptr %212, align 8, !tbaa !61
  %454 = load ptr, ptr %213, align 8, !tbaa !58
  br label %455

455:                                              ; preds = %455, %448
  %456 = phi i32 [ %453, %448 ], [ %457, %455 ]
  %457 = add i32 %456, -1
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds i32, ptr %454, i64 %458
  %460 = load i32, ptr %459, align 4, !tbaa !22
  %461 = icmp ugt i32 %460, %278
  br i1 %461, label %455, label %462

462:                                              ; preds = %455
  %463 = load i32, ptr %214, align 8, !tbaa !61
  %464 = load ptr, ptr %215, align 8, !tbaa !58
  br label %465

465:                                              ; preds = %465, %462
  %466 = phi i32 [ %463, %462 ], [ %467, %465 ]
  %467 = add i32 %466, -1
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds i32, ptr %464, i64 %468
  %470 = load i32, ptr %469, align 4, !tbaa !22
  %471 = icmp ugt i32 %470, %452
  br i1 %471, label %465, label %472

472:                                              ; preds = %465
  %473 = sub i32 %278, %460
  %474 = zext i32 %473 to i64
  %475 = sub i32 %452, %470
  %476 = load ptr, ptr %216, align 8, !tbaa !553, !noalias !554
  %477 = load i32, ptr %217, align 8, !tbaa !22, !noalias !554
  %478 = mul i32 %477, %457
  %479 = zext i32 %478 to i64
  %480 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %476, i64 %479
  %481 = zext i32 %467 to i64
  %482 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %480, i64 %481
  %483 = load ptr, ptr %482, align 8, !tbaa !557
  %484 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %483, i64 0, i32 3
  %485 = load ptr, ptr %484, align 8, !tbaa !438
  %486 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %485, i64 %474
  %487 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %485, i64 %474, i32 2
  %488 = load i32, ptr %487, align 8, !tbaa !440
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %507, label %490

490:                                              ; preds = %472
  %491 = zext i32 %488 to i64
  br label %495

492:                                              ; preds = %495
  %493 = add nuw nsw i64 %496, 1
  %494 = icmp eq i64 %493, %491
  br i1 %494, label %500, label %495

495:                                              ; preds = %492, %490
  %496 = phi i64 [ 0, %490 ], [ %493, %492 ]
  %497 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %485, i64 %474, i32 1, i64 %496
  %498 = load i32, ptr %497, align 4, !tbaa !22
  %499 = icmp eq i32 %498, %475
  br i1 %499, label %518, label %492

500:                                              ; preds = %492
  %501 = icmp eq i32 %488, 8
  br i1 %501, label %502, label %507

502:                                              ; preds = %500
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %486)
          to label %503 unwind label %581

503:                                              ; preds = %502
  %504 = load i32, ptr %487, align 8, !tbaa !440
  %505 = load ptr, ptr %1, align 8, !tbaa !58
  %506 = load ptr, ptr %213, align 8, !tbaa !58
  br label %507

507:                                              ; preds = %503, %500, %472
  %508 = phi ptr [ %506, %503 ], [ %454, %500 ], [ %454, %472 ]
  %509 = phi ptr [ %505, %503 ], [ %450, %500 ], [ %450, %472 ]
  %510 = phi i32 [ %504, %503 ], [ %488, %500 ], [ 0, %472 ]
  %511 = zext i32 %510 to i64
  %512 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %485, i64 %474, i32 1, i64 %511
  store i32 %475, ptr %512, align 4, !tbaa !22
  %513 = load i32, ptr %487, align 8, !tbaa !440
  %514 = add i32 %513, 1
  store i32 %514, ptr %487, align 8, !tbaa !440
  %515 = getelementptr inbounds i32, ptr %509, i64 %449
  %516 = load i32, ptr %515, align 4, !tbaa !22
  %517 = load i32, ptr %212, align 8, !tbaa !61
  br label %518

518:                                              ; preds = %495, %507
  %519 = phi ptr [ %508, %507 ], [ %454, %495 ]
  %520 = phi i32 [ %517, %507 ], [ %453, %495 ]
  %521 = phi i32 [ %516, %507 ], [ %452, %495 ]
  br label %522

522:                                              ; preds = %522, %518
  %523 = phi i32 [ %520, %518 ], [ %524, %522 ]
  %524 = add i32 %523, -1
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds i32, ptr %519, i64 %525
  %527 = load i32, ptr %526, align 4, !tbaa !22
  %528 = icmp ugt i32 %527, %521
  br i1 %528, label %522, label %529

529:                                              ; preds = %522
  %530 = load i32, ptr %214, align 8, !tbaa !61
  %531 = load ptr, ptr %215, align 8, !tbaa !58
  br label %532

532:                                              ; preds = %532, %529
  %533 = phi i32 [ %530, %529 ], [ %534, %532 ]
  %534 = add i32 %533, -1
  %535 = sext i32 %534 to i64
  %536 = getelementptr inbounds i32, ptr %531, i64 %535
  %537 = load i32, ptr %536, align 4, !tbaa !22
  %538 = icmp ugt i32 %537, %278
  br i1 %538, label %532, label %539

539:                                              ; preds = %532
  %540 = sub i32 %521, %527
  %541 = zext i32 %540 to i64
  %542 = sub i32 %278, %537
  %543 = load ptr, ptr %216, align 8, !tbaa !553, !noalias !559
  %544 = load i32, ptr %217, align 8, !tbaa !22, !noalias !559
  %545 = mul i32 %544, %524
  %546 = zext i32 %545 to i64
  %547 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %543, i64 %546
  %548 = zext i32 %534 to i64
  %549 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %547, i64 %548
  %550 = load ptr, ptr %549, align 8, !tbaa !557
  %551 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %550, i64 0, i32 3
  %552 = load ptr, ptr %551, align 8, !tbaa !438
  %553 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %552, i64 %541
  %554 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %552, i64 %541, i32 2
  %555 = load i32, ptr %554, align 8, !tbaa !440
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %572, label %557

557:                                              ; preds = %539
  %558 = zext i32 %555 to i64
  br label %562

559:                                              ; preds = %562
  %560 = add nuw nsw i64 %563, 1
  %561 = icmp eq i64 %560, %558
  br i1 %561, label %567, label %562

562:                                              ; preds = %559, %557
  %563 = phi i64 [ 0, %557 ], [ %560, %559 ]
  %564 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %552, i64 %541, i32 1, i64 %563
  %565 = load i32, ptr %564, align 4, !tbaa !22
  %566 = icmp eq i32 %565, %542
  br i1 %566, label %578, label %559

567:                                              ; preds = %559
  %568 = icmp eq i32 %555, 8
  br i1 %568, label %569, label %572

569:                                              ; preds = %567
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %553)
          to label %570 unwind label %581

570:                                              ; preds = %569
  %571 = load i32, ptr %554, align 8, !tbaa !440
  br label %572

572:                                              ; preds = %570, %567, %539
  %573 = phi i32 [ %571, %570 ], [ %555, %567 ], [ 0, %539 ]
  %574 = zext i32 %573 to i64
  %575 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %552, i64 %541, i32 1, i64 %574
  store i32 %542, ptr %575, align 4, !tbaa !22
  %576 = load i32, ptr %554, align 8, !tbaa !440
  %577 = add i32 %576, 1
  store i32 %577, ptr %554, align 8, !tbaa !440
  br label %578

578:                                              ; preds = %562, %572
  %579 = add nuw nsw i64 %449, 1
  %580 = icmp eq i64 %579, %219
  br i1 %580, label %644, label %448

581:                                              ; preds = %569, %502
  %582 = landingpad { ptr, i32 }
          cleanup
  br label %783

583:                                              ; preds = %286
  %584 = load i32, ptr %212, align 8, !tbaa !61
  %585 = load ptr, ptr %213, align 8, !tbaa !58
  br label %586

586:                                              ; preds = %586, %583
  %587 = phi i32 [ %584, %583 ], [ %588, %586 ]
  %588 = add i32 %587, -1
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds i32, ptr %585, i64 %589
  %591 = load i32, ptr %590, align 4, !tbaa !22
  %592 = icmp ugt i32 %591, %278
  br i1 %592, label %586, label %593

593:                                              ; preds = %586
  %594 = load i32, ptr %214, align 8, !tbaa !61
  %595 = load ptr, ptr %215, align 8, !tbaa !58
  br label %596

596:                                              ; preds = %596, %593
  %597 = phi i32 [ %594, %593 ], [ %598, %596 ]
  %598 = add i32 %597, -1
  %599 = sext i32 %598 to i64
  %600 = getelementptr inbounds i32, ptr %595, i64 %599
  %601 = load i32, ptr %600, align 4, !tbaa !22
  %602 = icmp ugt i32 %601, %278
  br i1 %602, label %596, label %603

603:                                              ; preds = %596
  %604 = sub i32 %278, %591
  %605 = zext i32 %604 to i64
  %606 = sub i32 %278, %601
  %607 = load ptr, ptr %216, align 8, !tbaa !553, !noalias !562
  %608 = load i32, ptr %217, align 8, !tbaa !22, !noalias !562
  %609 = mul i32 %608, %588
  %610 = zext i32 %609 to i64
  %611 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %607, i64 %610
  %612 = zext i32 %598 to i64
  %613 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %611, i64 %612
  %614 = load ptr, ptr %613, align 8, !tbaa !557
  %615 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %614, i64 0, i32 3
  %616 = load ptr, ptr %615, align 8, !tbaa !438
  %617 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %616, i64 %605
  %618 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %616, i64 %605, i32 2
  %619 = load i32, ptr %618, align 8, !tbaa !440
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %636, label %621

621:                                              ; preds = %603
  %622 = zext i32 %619 to i64
  br label %626

623:                                              ; preds = %626
  %624 = add nuw nsw i64 %627, 1
  %625 = icmp eq i64 %624, %622
  br i1 %625, label %631, label %626

626:                                              ; preds = %623, %621
  %627 = phi i64 [ 0, %621 ], [ %624, %623 ]
  %628 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %616, i64 %605, i32 1, i64 %627
  %629 = load i32, ptr %628, align 4, !tbaa !22
  %630 = icmp eq i32 %629, %606
  br i1 %630, label %644, label %623

631:                                              ; preds = %623
  %632 = icmp eq i32 %619, 8
  br i1 %632, label %633, label %636

633:                                              ; preds = %631
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %617)
          to label %634 unwind label %642

634:                                              ; preds = %633
  %635 = load i32, ptr %618, align 8, !tbaa !440
  br label %636

636:                                              ; preds = %634, %631, %603
  %637 = phi i32 [ %635, %634 ], [ %619, %631 ], [ 0, %603 ]
  %638 = zext i32 %637 to i64
  %639 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %616, i64 %605, i32 1, i64 %638
  store i32 %606, ptr %639, align 4, !tbaa !22
  %640 = load i32, ptr %618, align 8, !tbaa !440
  %641 = add i32 %640, 1
  store i32 %641, ptr %618, align 8, !tbaa !440
  br label %644

642:                                              ; preds = %633
  %643 = landingpad { ptr, i32 }
          cleanup
  br label %783

644:                                              ; preds = %626, %578, %287, %636
  %645 = add nuw nsw i64 %272, 1
  %646 = icmp eq i64 %645, %218
  br i1 %646, label %220, label %271

647:                                              ; preds = %265, %261, %220
  %648 = phi ptr [ null, %220 ], [ %233, %261 ], [ %233, %265 ]
  %649 = load i32, ptr %19, align 8, !tbaa !547
  store i32 0, ptr %648, align 4, !tbaa !22
  %650 = icmp ugt i32 %649, 1
  br i1 %650, label %651, label %655

651:                                              ; preds = %647
  %652 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 4, i32 1
  %653 = load ptr, ptr %652, align 8, !tbaa !58
  %654 = zext i32 %649 to i64
  br label %665

655:                                              ; preds = %690, %647
  %656 = getelementptr inbounds i32, ptr %648, i64 1
  %657 = load i32, ptr %656, align 4, !tbaa !22
  %658 = ashr exact i64 %225, 2
  %659 = zext i32 %657 to i64
  %660 = icmp ugt i64 %658, %659
  br i1 %660, label %661, label %717

661:                                              ; preds = %655
  %662 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 4
  %663 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 4, i32 1
  %664 = load ptr, ptr %663, align 8, !tbaa !58
  br label %699

665:                                              ; preds = %690, %651
  %666 = phi i64 [ 1, %651 ], [ %697, %690 ]
  %667 = phi ptr [ %222, %651 ], [ %692, %690 ]
  %668 = getelementptr inbounds i32, ptr %653, i64 %666
  %669 = load i32, ptr %668, align 4, !tbaa !22
  %670 = ptrtoint ptr %667 to i64
  %671 = sub i64 %223, %670
  %672 = icmp sgt i64 %671, 0
  br i1 %672, label %673, label %690

673:                                              ; preds = %665
  %674 = lshr exact i64 %671, 2
  br label %675

675:                                              ; preds = %675, %673
  %676 = phi i64 [ %674, %673 ], [ %686, %675 ]
  %677 = phi ptr [ %667, %673 ], [ %685, %675 ]
  %678 = lshr i64 %676, 1
  %679 = getelementptr inbounds i32, ptr %677, i64 %678
  %680 = load i32, ptr %679, align 4, !tbaa !22
  %681 = icmp ult i32 %680, %669
  %682 = getelementptr inbounds i32, ptr %679, i64 1
  %683 = xor i64 %678, -1
  %684 = add nsw i64 %676, %683
  %685 = select i1 %681, ptr %682, ptr %677
  %686 = select i1 %681, i64 %684, i64 %678
  %687 = icmp sgt i64 %686, 0
  br i1 %687, label %675, label %688

688:                                              ; preds = %675
  %689 = ptrtoint ptr %685 to i64
  br label %690

690:                                              ; preds = %688, %665
  %691 = phi i64 [ %689, %688 ], [ %670, %665 ]
  %692 = phi ptr [ %685, %688 ], [ %667, %665 ]
  %693 = sub i64 %691, %224
  %694 = lshr exact i64 %693, 2
  %695 = trunc i64 %694 to i32
  %696 = getelementptr inbounds i32, ptr %648, i64 %666
  store i32 %695, ptr %696, align 4, !tbaa !22
  %697 = add nuw nsw i64 %666, 1
  %698 = icmp eq i64 %697, %654
  br i1 %698, label %655, label %665

699:                                              ; preds = %712, %661
  %700 = phi i64 [ %659, %661 ], [ %715, %712 ]
  %701 = phi i32 [ %657, %661 ], [ %714, %712 ]
  %702 = getelementptr inbounds i32, ptr %222, i64 %700
  %703 = load i32, ptr %702, align 4, !tbaa !22
  %704 = load i32, ptr %662, align 8, !tbaa !61
  br label %705

705:                                              ; preds = %705, %699
  %706 = phi i32 [ %704, %699 ], [ %707, %705 ]
  %707 = add i32 %706, -1
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds i32, ptr %664, i64 %708
  %710 = load i32, ptr %709, align 4, !tbaa !22
  %711 = icmp ugt i32 %710, %703
  br i1 %711, label %705, label %712

712:                                              ; preds = %705
  %713 = sub i32 %703, %710
  store i32 %713, ptr %702, align 4, !tbaa !22
  %714 = add i32 %701, 1
  %715 = zext i32 %714 to i64
  %716 = icmp ugt i64 %658, %715
  br i1 %716, label %699, label %717

717:                                              ; preds = %712, %655
  %718 = icmp eq i32 %20, 0
  br i1 %718, label %775, label %719

719:                                              ; preds = %717
  %720 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 3, i32 0, i32 1
  %721 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %722 = zext i32 %20 to i64
  br label %728

723:                                              ; preds = %747, %728
  %724 = phi ptr [ %729, %728 ], [ %770, %747 ]
  %725 = icmp eq i64 %731, %722
  br i1 %725, label %775, label %728

726:                                              ; preds = %231
  %727 = landingpad { ptr, i32 }
          cleanup
  br label %783

728:                                              ; preds = %719, %723
  %729 = phi ptr [ %222, %719 ], [ %724, %723 ]
  %730 = phi i64 [ 0, %719 ], [ %731, %723 ]
  %731 = add nuw nsw i64 %730, 1
  %732 = getelementptr inbounds i32, ptr %648, i64 %731
  %733 = load i32, ptr %732, align 4, !tbaa !22
  %734 = getelementptr inbounds i32, ptr %648, i64 %730
  %735 = load i32, ptr %734, align 4, !tbaa !22
  %736 = icmp ult i32 %735, %733
  br i1 %736, label %737, label %723

737:                                              ; preds = %728
  %738 = zext i32 %735 to i64
  %739 = zext i32 %733 to i64
  %740 = trunc i64 %730 to i32
  br label %741

741:                                              ; preds = %737, %747
  %742 = phi ptr [ %729, %737 ], [ %770, %747 ]
  %743 = phi i64 [ %738, %737 ], [ %748, %747 ]
  %744 = getelementptr inbounds i32, ptr %742, i64 %743
  %745 = load i32, ptr %744, align 4, !tbaa !22
  %746 = zext i32 %745 to i64
  br label %750

747:                                              ; preds = %769
  %748 = add nuw nsw i64 %743, 1
  %749 = icmp eq i64 %748, %739
  br i1 %749, label %723, label %741

750:                                              ; preds = %741, %769
  %751 = phi ptr [ %742, %741 ], [ %770, %769 ]
  %752 = phi i64 [ 0, %741 ], [ %754, %769 ]
  %753 = phi ptr [ %742, %741 ], [ %771, %769 ]
  %754 = add nuw nsw i64 %752, 1
  %755 = getelementptr inbounds i32, ptr %648, i64 %754
  %756 = load i32, ptr %755, align 4, !tbaa !22
  %757 = load ptr, ptr %720, align 8, !tbaa !553, !noalias !565
  %758 = load i32, ptr %721, align 8, !tbaa !22, !noalias !565
  %759 = mul i32 %758, %740
  %760 = zext i32 %759 to i64
  %761 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %757, i64 %760
  %762 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %761, i64 %752
  %763 = load ptr, ptr %762, align 8, !tbaa !557
  %764 = zext i32 %756 to i64
  %765 = getelementptr inbounds i32, ptr %751, i64 %764
  %766 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %763, i64 0, i32 3
  %767 = load ptr, ptr %766, align 8, !tbaa !438
  %768 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %767, i64 %746
  invoke void @_ZN6dealii25CompressedSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b(ptr noundef nonnull align 8 dereferenceable(60) %768, ptr %753, ptr %765, i1 noundef zeroext true)
          to label %769 unwind label %773

769:                                              ; preds = %750
  %770 = load ptr, ptr %7, align 8, !tbaa !21
  %771 = getelementptr inbounds i32, ptr %770, i64 %764
  %772 = icmp eq i64 %754, %722
  br i1 %772, label %747, label %750

773:                                              ; preds = %750
  %774 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %648) #23
  br label %783

775:                                              ; preds = %723, %717
  call void @_ZdlPv(ptr noundef nonnull %648) #23
  %776 = icmp eq ptr %53, null
  br i1 %776, label %778, label %777

777:                                              ; preds = %775
  call void @_ZdlPv(ptr noundef nonnull %53) #23
  br label %778

778:                                              ; preds = %777, %775
  %779 = load ptr, ptr %7, align 8, !tbaa !58
  %780 = icmp eq ptr %779, null
  br i1 %780, label %782, label %781

781:                                              ; preds = %778
  call void @_ZdlPv(ptr noundef nonnull %779) #23
  br label %782

782:                                              ; preds = %778, %781
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  br label %1926

783:                                              ; preds = %434, %436, %341, %343, %186, %188, %642, %581, %773, %726, %269
  %784 = phi ptr [ %53, %269 ], [ %53, %581 ], [ %53, %642 ], [ %53, %773 ], [ %53, %726 ], [ %77, %186 ], [ %77, %188 ], [ %53, %343 ], [ %53, %341 ], [ %53, %436 ], [ %53, %434 ]
  %785 = phi { ptr, i32 } [ %270, %269 ], [ %582, %581 ], [ %643, %642 ], [ %774, %773 ], [ %727, %726 ], [ %187, %186 ], [ %189, %188 ], [ %344, %343 ], [ %342, %341 ], [ %437, %436 ], [ %435, %434 ]
  %786 = icmp eq ptr %784, null
  br i1 %786, label %788, label %787

787:                                              ; preds = %783
  call void @_ZdlPv(ptr noundef nonnull %784) #23
  br label %788

788:                                              ; preds = %787, %783
  %789 = load ptr, ptr %7, align 8, !tbaa !58
  %790 = icmp eq ptr %789, null
  br i1 %790, label %792, label %791

791:                                              ; preds = %788
  call void @_ZdlPv(ptr noundef nonnull %789) #23
  br label %792

792:                                              ; preds = %791, %788, %72
  %793 = phi { ptr, i32 } [ %73, %72 ], [ %785, %788 ], [ %785, %791 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  br label %1963

794:                                              ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #24
  store i32 -1, ptr %9, align 8, !tbaa !317
  %795 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %795, align 4, !tbaa !319
  %796 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %796, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  %797 = icmp eq i64 %24, 0
  br i1 %797, label %798, label %800

798:                                              ; preds = %794
  %799 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  br label %843

800:                                              ; preds = %794
  %801 = shl nuw nsw i64 %24, 4
  %802 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %801) #21
          to label %803 unwind label %893

803:                                              ; preds = %800
  store ptr %802, ptr %8, align 8, !tbaa !321
  %804 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %802, i64 %24
  %805 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 2
  store ptr %804, ptr %805, align 8, !tbaa !323
  %806 = and i64 %17, 3
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %818, label %808

808:                                              ; preds = %803, %808
  %809 = phi ptr [ %815, %808 ], [ %802, %803 ]
  %810 = phi i64 [ %814, %808 ], [ %24, %803 ]
  %811 = phi i64 [ %816, %808 ], [ 0, %803 ]
  %812 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %809, i64 0, i32 2
  store ptr null, ptr %812, align 8, !tbaa !320
  store i32 -1, ptr %809, align 8, !tbaa !317
  %813 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %809, i64 0, i32 1
  store i32 -1, ptr %813, align 4, !tbaa !319
  %814 = add nsw i64 %810, -1
  %815 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %809, i64 1
  %816 = add i64 %811, 1
  %817 = icmp eq i64 %816, %806
  br i1 %817, label %818, label %808, !llvm.loop !568

818:                                              ; preds = %808, %803
  %819 = phi ptr [ undef, %803 ], [ %815, %808 ]
  %820 = phi ptr [ %802, %803 ], [ %815, %808 ]
  %821 = phi i64 [ %24, %803 ], [ %814, %808 ]
  %822 = icmp ult i64 %24, 4
  br i1 %822, label %840, label %823

823:                                              ; preds = %818, %823
  %824 = phi ptr [ %838, %823 ], [ %820, %818 ]
  %825 = phi i64 [ %837, %823 ], [ %821, %818 ]
  %826 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %824, i64 0, i32 2
  store ptr null, ptr %826, align 8, !tbaa !320
  store i32 -1, ptr %824, align 8, !tbaa !317
  %827 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %824, i64 0, i32 1
  store i32 -1, ptr %827, align 4, !tbaa !319
  %828 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %824, i64 1
  %829 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %824, i64 1, i32 2
  store ptr null, ptr %829, align 8, !tbaa !320
  store i32 -1, ptr %828, align 8, !tbaa !317
  %830 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %824, i64 1, i32 1
  store i32 -1, ptr %830, align 4, !tbaa !319
  %831 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %824, i64 2
  %832 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %824, i64 2, i32 2
  store ptr null, ptr %832, align 8, !tbaa !320
  store i32 -1, ptr %831, align 8, !tbaa !317
  %833 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %824, i64 2, i32 1
  store i32 -1, ptr %833, align 4, !tbaa !319
  %834 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %824, i64 3
  %835 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %824, i64 3, i32 2
  store ptr null, ptr %835, align 8, !tbaa !320
  store i32 -1, ptr %834, align 8, !tbaa !317
  %836 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %824, i64 3, i32 1
  store i32 -1, ptr %836, align 4, !tbaa !319
  %837 = add nsw i64 %825, -4
  %838 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %824, i64 4
  %839 = icmp eq i64 %837, 0
  br i1 %839, label %840, label %823

840:                                              ; preds = %823, %818
  %841 = phi ptr [ %819, %818 ], [ %838, %823 ]
  %842 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  store ptr %841, ptr %842, align 8, !tbaa !325
  br label %843

843:                                              ; preds = %840, %798
  %844 = phi ptr [ null, %798 ], [ %802, %840 ]
  %845 = phi ptr [ null, %798 ], [ %841, %840 ]
  %846 = phi ptr [ %799, %798 ], [ %842, %840 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #24
  %847 = icmp eq i32 %18, 0
  br i1 %847, label %858, label %848

848:                                              ; preds = %843
  %849 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %850 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %851 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %852 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %853 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %854 = and i64 %17, 4294967295
  br label %896

855:                                              ; preds = %1003
  %856 = load ptr, ptr %846, align 8, !tbaa !21
  %857 = load ptr, ptr %8, align 8, !tbaa !321
  br label %858

858:                                              ; preds = %855, %843
  %859 = phi ptr [ %844, %843 ], [ %857, %855 ]
  %860 = phi ptr [ %845, %843 ], [ %856, %855 ]
  %861 = phi ptr [ null, %843 ], [ %1005, %855 ]
  %862 = phi ptr [ null, %843 ], [ %1006, %855 ]
  %863 = phi i32 [ 0, %843 ], [ %1007, %855 ]
  %864 = zext i32 %863 to i64
  store i32 -1, ptr %10, align 8, !tbaa !317
  %865 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %10, i64 0, i32 1
  store i32 -1, ptr %865, align 4, !tbaa !319
  %866 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %10, i64 0, i32 2
  store ptr null, ptr %866, align 8, !tbaa !320
  %867 = ptrtoint ptr %860 to i64
  %868 = ptrtoint ptr %859 to i64
  %869 = sub i64 %867, %868
  %870 = ashr exact i64 %869, 4
  %871 = icmp ult i64 %870, %864
  br i1 %871, label %872, label %874

872:                                              ; preds = %858
  %873 = sub nsw i64 %864, %870
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr %860, i64 noundef %873, ptr noundef nonnull align 8 dereferenceable(16) %10)
          to label %1014 unwind label %1113

874:                                              ; preds = %858
  %875 = icmp ugt i64 %870, %864
  br i1 %875, label %876, label %1014

876:                                              ; preds = %874
  %877 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %859, i64 %864
  %878 = icmp eq ptr %860, %877
  br i1 %878, label %1014, label %879

879:                                              ; preds = %876, %889
  %880 = phi ptr [ %890, %889 ], [ %877, %876 ]
  %881 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %880, i64 0, i32 2
  %882 = load ptr, ptr %881, align 8, !tbaa !320
  %883 = icmp eq ptr %882, null
  br i1 %883, label %889, label %884

884:                                              ; preds = %879
  %885 = load ptr, ptr %882, align 8, !tbaa !32
  %886 = icmp eq ptr %885, null
  br i1 %886, label %888, label %887

887:                                              ; preds = %884
  tail call void @_ZdlPv(ptr noundef nonnull %885) #23
  br label %888

888:                                              ; preds = %887, %884
  tail call void @_ZdlPv(ptr noundef nonnull %882) #23
  store ptr null, ptr %881, align 8, !tbaa !320
  br label %889

889:                                              ; preds = %888, %879
  %890 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %880, i64 1
  %891 = icmp eq ptr %890, %860
  br i1 %891, label %892, label %879

892:                                              ; preds = %889
  store ptr %877, ptr %846, align 8, !tbaa !325
  br label %1014

893:                                              ; preds = %800
  %894 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %895 unwind label %1965

895:                                              ; preds = %893
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #24
  br label %1961

896:                                              ; preds = %848, %1003
  %897 = phi i64 [ 0, %848 ], [ %1008, %1003 ]
  %898 = phi i32 [ 0, %848 ], [ %1007, %1003 ]
  %899 = phi ptr [ null, %848 ], [ %1006, %1003 ]
  %900 = phi ptr [ null, %848 ], [ %1005, %1003 ]
  %901 = phi ptr [ null, %848 ], [ %1004, %1003 ]
  %902 = load ptr, ptr %850, align 8, !tbaa !55
  %903 = load i32, ptr %851, align 8, !tbaa !57
  %904 = load ptr, ptr %849, align 8, !tbaa !55
  %905 = ptrtoint ptr %902 to i64
  %906 = ptrtoint ptr %904 to i64
  %907 = sub i64 %905, %906
  %908 = shl nsw i64 %907, 3
  %909 = zext i32 %903 to i64
  %910 = add nsw i64 %908, %909
  %911 = load ptr, ptr %1, align 8, !tbaa !58
  %912 = getelementptr inbounds i32, ptr %911, i64 %897
  %913 = load i32, ptr %912, align 4, !tbaa !22
  %914 = zext i32 %913 to i64
  %915 = icmp ugt i64 %910, %914
  br i1 %915, label %916, label %926

916:                                              ; preds = %896
  %917 = lshr i32 %913, 6
  %918 = zext i32 %917 to i64
  %919 = getelementptr inbounds i64, ptr %904, i64 %918
  %920 = and i32 %913, 63
  %921 = zext i32 %920 to i64
  %922 = shl nuw i64 1, %921
  %923 = load i64, ptr %919, align 8, !tbaa !42
  %924 = and i64 %923, %922
  %925 = icmp eq i64 %924, 0
  br i1 %925, label %926, label %933

926:                                              ; preds = %916, %896
  %927 = zext i32 %898 to i64
  %928 = load ptr, ptr %8, align 8, !tbaa !321
  %929 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %928, i64 %927
  store i32 %913, ptr %929, align 8, !tbaa !317
  %930 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %928, i64 %927, i32 1
  %931 = trunc i64 %897 to i32
  store i32 %931, ptr %930, align 4, !tbaa !319
  %932 = add i32 %898, 1
  br label %1003

933:                                              ; preds = %916
  %934 = load ptr, ptr %852, align 8, !tbaa !21
  %935 = load ptr, ptr %853, align 8, !tbaa !21
  %936 = ptrtoint ptr %935 to i64
  %937 = ptrtoint ptr %934 to i64
  %938 = sub i64 %936, %937
  %939 = icmp sgt i64 %938, 0
  br i1 %939, label %940, label %955

940:                                              ; preds = %933
  %941 = udiv exact i64 %938, 40
  br label %942

942:                                              ; preds = %942, %940
  %943 = phi i64 [ %941, %940 ], [ %953, %942 ]
  %944 = phi ptr [ %934, %940 ], [ %952, %942 ]
  %945 = lshr i64 %943, 1
  %946 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %944, i64 %945
  %947 = load i32, ptr %946, align 8, !tbaa !24
  %948 = icmp ult i32 %947, %913
  %949 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %946, i64 1
  %950 = xor i64 %945, -1
  %951 = add nsw i64 %943, %950
  %952 = select i1 %948, ptr %949, ptr %944
  %953 = select i1 %948, i64 %951, i64 %945
  %954 = icmp sgt i64 %953, 0
  br i1 %954, label %942, label %955

955:                                              ; preds = %942, %933
  %956 = phi ptr [ %934, %933 ], [ %952, %942 ]
  %957 = icmp eq ptr %900, %901
  br i1 %957, label %961, label %958

958:                                              ; preds = %955
  %959 = trunc i64 %897 to i32
  store i32 %959, ptr %900, align 8
  %960 = getelementptr inbounds i8, ptr %900, i64 8
  store ptr %956, ptr %960, align 8
  br label %998

961:                                              ; preds = %955
  %962 = ptrtoint ptr %900 to i64
  %963 = ptrtoint ptr %899 to i64
  %964 = sub i64 %962, %963
  %965 = icmp eq i64 %964, 9223372036854775792
  br i1 %965, label %966, label %968

966:                                              ; preds = %961
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %967 unwind label %1012

967:                                              ; preds = %966
  unreachable

968:                                              ; preds = %961
  %969 = ashr exact i64 %964, 4
  %970 = tail call i64 @llvm.umax.i64(i64 %969, i64 1)
  %971 = add i64 %970, %969
  %972 = icmp ult i64 %971, %969
  %973 = icmp ugt i64 %971, 576460752303423487
  %974 = or i1 %972, %973
  %975 = select i1 %974, i64 576460752303423487, i64 %971
  %976 = icmp eq i64 %975, 0
  br i1 %976, label %980, label %977

977:                                              ; preds = %968
  %978 = shl nuw nsw i64 %975, 4
  %979 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %978) #21
          to label %980 unwind label %1010

980:                                              ; preds = %977, %968
  %981 = phi ptr [ null, %968 ], [ %979, %977 ]
  %982 = getelementptr inbounds %"struct.std::pair.188", ptr %981, i64 %969
  %983 = trunc i64 %897 to i32
  store i32 %983, ptr %982, align 8
  %984 = getelementptr inbounds i8, ptr %982, i64 8
  store ptr %956, ptr %984, align 8
  %985 = icmp eq ptr %899, %900
  br i1 %985, label %992, label %986

986:                                              ; preds = %980, %986
  %987 = phi ptr [ %990, %986 ], [ %981, %980 ]
  %988 = phi ptr [ %989, %986 ], [ %899, %980 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %987, ptr noundef nonnull align 8 dereferenceable(16) %988, i64 16, i1 false)
  %989 = getelementptr inbounds %"struct.std::pair.188", ptr %988, i64 1
  %990 = getelementptr inbounds %"struct.std::pair.188", ptr %987, i64 1
  %991 = icmp eq ptr %989, %900
  br i1 %991, label %992, label %986

992:                                              ; preds = %986, %980
  %993 = phi ptr [ %981, %980 ], [ %990, %986 ]
  %994 = icmp eq ptr %899, null
  br i1 %994, label %996, label %995

995:                                              ; preds = %992
  tail call void @_ZdlPv(ptr noundef nonnull %899) #23
  br label %996

996:                                              ; preds = %995, %992
  %997 = getelementptr inbounds %"struct.std::pair.188", ptr %981, i64 %975
  br label %998

998:                                              ; preds = %996, %958
  %999 = phi ptr [ %997, %996 ], [ %901, %958 ]
  %1000 = phi ptr [ %993, %996 ], [ %900, %958 ]
  %1001 = phi ptr [ %981, %996 ], [ %899, %958 ]
  %1002 = getelementptr inbounds %"struct.std::pair.188", ptr %1000, i64 1
  br label %1003

1003:                                             ; preds = %998, %926
  %1004 = phi ptr [ %999, %998 ], [ %901, %926 ]
  %1005 = phi ptr [ %1002, %998 ], [ %900, %926 ]
  %1006 = phi ptr [ %1001, %998 ], [ %899, %926 ]
  %1007 = phi i32 [ %898, %998 ], [ %932, %926 ]
  %1008 = add nuw nsw i64 %897, 1
  %1009 = icmp eq i64 %1008, %854
  br i1 %1009, label %855, label %896

1010:                                             ; preds = %977
  %1011 = landingpad { ptr, i32 }
          cleanup
  br label %1933

1012:                                             ; preds = %966
  %1013 = landingpad { ptr, i32 }
          cleanup
  br label %1933

1014:                                             ; preds = %892, %876, %874, %872
  %1015 = load ptr, ptr %866, align 8, !tbaa !320
  %1016 = icmp eq ptr %1015, null
  br i1 %1016, label %1022, label %1017

1017:                                             ; preds = %1014
  %1018 = load ptr, ptr %1015, align 8, !tbaa !32
  %1019 = icmp eq ptr %1018, null
  br i1 %1019, label %1021, label %1020

1020:                                             ; preds = %1017
  call void @_ZdlPv(ptr noundef nonnull %1018) #23
  br label %1021

1021:                                             ; preds = %1020, %1017
  call void @_ZdlPv(ptr noundef nonnull %1015) #23
  store ptr null, ptr %866, align 8, !tbaa !320
  br label %1022

1022:                                             ; preds = %1021, %1014
  %1023 = load ptr, ptr %846, align 8, !tbaa !325
  %1024 = load ptr, ptr %8, align 8, !tbaa !321
  %1025 = ptrtoint ptr %1023 to i64
  %1026 = ptrtoint ptr %1024 to i64
  %1027 = sub i64 %1025, %1026
  %1028 = lshr exact i64 %1027, 4
  %1029 = trunc i64 %1028 to i32
  %1030 = icmp ult i32 %1029, 2
  br i1 %1030, label %1076, label %1033

1031:                                             ; preds = %1072, %1033
  %1032 = icmp ult i32 %1034, 4
  br i1 %1032, label %1076, label %1033

1033:                                             ; preds = %1022, %1031
  %1034 = phi i32 [ %1035, %1031 ], [ %1029, %1022 ]
  %1035 = lshr i32 %1034, 1
  %1036 = icmp ult i32 %1035, %1029
  br i1 %1036, label %1037, label %1031

1037:                                             ; preds = %1033
  %1038 = zext i32 %1035 to i64
  br label %1039

1039:                                             ; preds = %1072, %1037
  %1040 = phi i64 [ %1038, %1037 ], [ %1073, %1072 ]
  %1041 = sub nuw nsw i64 %1040, %1038
  %1042 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1024, i64 %1040
  %1043 = load <2 x i32>, ptr %1042, align 8, !tbaa !22
  %1044 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1024, i64 %1041
  %1045 = load i32, ptr %1044, align 8, !tbaa !317
  %1046 = extractelement <2 x i32> %1043, i64 0
  %1047 = icmp ugt i32 %1045, %1046
  br i1 %1047, label %1048, label %1072

1048:                                             ; preds = %1039
  %1049 = icmp ult i64 %1040, %1038
  %1050 = trunc i64 %1040 to i32
  br i1 %1049, label %1068, label %1051

1051:                                             ; preds = %1048
  %1052 = trunc i64 %1041 to i32
  br label %1053

1053:                                             ; preds = %1060, %1051
  %1054 = phi i32 [ %1055, %1060 ], [ %1050, %1051 ]
  %1055 = phi i32 [ %1066, %1060 ], [ %1052, %1051 ]
  %1056 = zext i32 %1055 to i64
  %1057 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1024, i64 %1056
  %1058 = load i32, ptr %1057, align 8, !tbaa !317
  %1059 = icmp ugt i32 %1058, %1046
  br i1 %1059, label %1060, label %1068

1060:                                             ; preds = %1053
  %1061 = zext i32 %1054 to i64
  %1062 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1024, i64 %1061
  store i32 %1058, ptr %1062, align 8, !tbaa !317
  %1063 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1024, i64 %1056, i32 1
  %1064 = load i32, ptr %1063, align 4, !tbaa !319
  %1065 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1024, i64 %1061, i32 1
  store i32 %1064, ptr %1065, align 4, !tbaa !319
  %1066 = sub i32 %1055, %1035
  %1067 = icmp ult i32 %1055, %1035
  br i1 %1067, label %1068, label %1053

1068:                                             ; preds = %1060, %1053, %1048
  %1069 = phi i32 [ %1050, %1048 ], [ %1054, %1053 ], [ %1055, %1060 ]
  %1070 = zext i32 %1069 to i64
  %1071 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1024, i64 %1070
  store <2 x i32> %1043, ptr %1071, align 8, !tbaa !22
  br label %1072

1072:                                             ; preds = %1068, %1039
  %1073 = add nuw nsw i64 %1040, 1
  %1074 = trunc i64 %1073 to i32
  %1075 = icmp eq i32 %1029, %1074
  br i1 %1075, label %1031, label %1039

1076:                                             ; preds = %1031, %1022
  %1077 = ptrtoint ptr %861 to i64
  %1078 = ptrtoint ptr %862 to i64
  %1079 = sub i64 %1077, %1078
  %1080 = and i64 %1079, 68719476720
  %1081 = icmp eq i64 %1080, 0
  br i1 %1081, label %1100, label %1082

1082:                                             ; preds = %1076
  %1083 = lshr exact i64 %1079, 4
  %1084 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 4
  %1085 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 4, i32 1
  %1086 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 5
  %1087 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 5, i32 1
  %1088 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 3, i32 0, i32 1
  %1089 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %1090 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %1091 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %1092 = and i64 %1083, 4294967295
  %1093 = and i64 %17, 4294967295
  br label %1115

1094:                                             ; preds = %1367
  %1095 = load ptr, ptr %846, align 8, !tbaa !325
  %1096 = load ptr, ptr %8, align 8, !tbaa !321
  %1097 = ptrtoint ptr %1095 to i64
  %1098 = ptrtoint ptr %1096 to i64
  %1099 = sub i64 %1097, %1098
  br label %1100

1100:                                             ; preds = %1094, %1076
  %1101 = phi i64 [ %1099, %1094 ], [ %1027, %1076 ]
  %1102 = phi ptr [ %1096, %1094 ], [ %1024, %1076 ]
  %1103 = phi i8 [ %1132, %1094 ], [ 0, %1076 ]
  %1104 = ashr exact i64 %1101, 4
  %1105 = trunc i64 %1104 to i32
  %1106 = and i64 %1104, 4294967295
  %1107 = icmp eq i64 %1106, 0
  br i1 %1107, label %1370, label %1108

1108:                                             ; preds = %1100
  %1109 = shl nuw nsw i64 %1106, 2
  %1110 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1109) #21
          to label %1111 unwind label %1488

1111:                                             ; preds = %1108
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %1110, i8 0, i64 %1109, i1 false), !tbaa !22
  %1112 = getelementptr inbounds i32, ptr %1110, i64 %1106
  br label %1370

1113:                                             ; preds = %872
  %1114 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %10)
          to label %1933 unwind label %1965

1115:                                             ; preds = %1082, %1367
  %1116 = phi i64 [ 0, %1082 ], [ %1368, %1367 ]
  %1117 = phi i8 [ 0, %1082 ], [ %1132, %1367 ]
  %1118 = getelementptr inbounds %"struct.std::pair.188", ptr %862, i64 %1116
  %1119 = load i32, ptr %1118, align 8, !tbaa !326
  %1120 = zext i32 %1119 to i64
  %1121 = load ptr, ptr %1, align 8, !tbaa !58
  %1122 = getelementptr inbounds i32, ptr %1121, i64 %1120
  %1123 = load i32, ptr %1122, align 4, !tbaa !22
  %1124 = getelementptr inbounds %"struct.std::pair.188", ptr %862, i64 %1116, i32 1
  %1125 = load ptr, ptr %1124, align 8, !tbaa !328
  %1126 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1125, i64 0, i32 1
  %1127 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1125, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1128 = load ptr, ptr %1127, align 8, !tbaa !31
  %1129 = load ptr, ptr %1126, align 8, !tbaa !32
  %1130 = icmp eq ptr %1128, %1129
  br i1 %1130, label %1131, label %1134

1131:                                             ; preds = %1142, %1115
  %1132 = phi i8 [ %1117, %1115 ], [ 1, %1142 ]
  br i1 %3, label %1133, label %1306

1133:                                             ; preds = %1131
  br i1 %847, label %1367, label %1154

1134:                                             ; preds = %1115, %1142
  %1135 = phi ptr [ %1146, %1142 ], [ %1129, %1115 ]
  %1136 = phi i64 [ %1144, %1142 ], [ 0, %1115 ]
  %1137 = phi i32 [ %1143, %1142 ], [ 0, %1115 ]
  %1138 = getelementptr inbounds %"struct.std::pair", ptr %1135, i64 %1136
  %1139 = load i32, ptr %1138, align 8, !tbaa !37
  %1140 = getelementptr inbounds %"struct.std::pair", ptr %1135, i64 %1136, i32 1
  %1141 = load double, ptr %1140, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %8, i32 noundef %1139, i32 %1119, double %1141)
          to label %1142 unwind label %1152

1142:                                             ; preds = %1134
  %1143 = add i32 %1137, 1
  %1144 = zext i32 %1143 to i64
  %1145 = load ptr, ptr %1127, align 8, !tbaa !31
  %1146 = load ptr, ptr %1126, align 8, !tbaa !32
  %1147 = ptrtoint ptr %1145 to i64
  %1148 = ptrtoint ptr %1146 to i64
  %1149 = sub i64 %1147, %1148
  %1150 = ashr exact i64 %1149, 4
  %1151 = icmp ugt i64 %1150, %1144
  br i1 %1151, label %1134, label %1131

1152:                                             ; preds = %1134
  %1153 = landingpad { ptr, i32 }
          cleanup
  br label %1933

1154:                                             ; preds = %1133, %1303
  %1155 = phi i64 [ %1304, %1303 ], [ 0, %1133 ]
  %1156 = load ptr, ptr %1090, align 8, !tbaa !422, !noalias !73
  %1157 = load i32, ptr %1091, align 8, !tbaa !22, !noalias !73
  %1158 = mul i32 %1157, %1119
  %1159 = zext i32 %1158 to i64
  %1160 = getelementptr inbounds i8, ptr %1156, i64 %1159
  %1161 = getelementptr inbounds i8, ptr %1160, i64 %1155
  %1162 = load i8, ptr %1161, align 1, !tbaa !424, !range !425, !noundef !73
  %1163 = icmp eq i8 %1162, 0
  br i1 %1163, label %1231, label %1164

1164:                                             ; preds = %1154
  %1165 = load ptr, ptr %1, align 8, !tbaa !58
  %1166 = getelementptr inbounds i32, ptr %1165, i64 %1155
  %1167 = load i32, ptr %1166, align 4, !tbaa !22
  %1168 = load i32, ptr %1084, align 8, !tbaa !61
  %1169 = load ptr, ptr %1085, align 8, !tbaa !58
  br label %1170

1170:                                             ; preds = %1170, %1164
  %1171 = phi i32 [ %1168, %1164 ], [ %1172, %1170 ]
  %1172 = add i32 %1171, -1
  %1173 = sext i32 %1172 to i64
  %1174 = getelementptr inbounds i32, ptr %1169, i64 %1173
  %1175 = load i32, ptr %1174, align 4, !tbaa !22
  %1176 = icmp ugt i32 %1175, %1123
  br i1 %1176, label %1170, label %1177

1177:                                             ; preds = %1170
  %1178 = load i32, ptr %1086, align 8, !tbaa !61
  %1179 = load ptr, ptr %1087, align 8, !tbaa !58
  br label %1180

1180:                                             ; preds = %1180, %1177
  %1181 = phi i32 [ %1178, %1177 ], [ %1182, %1180 ]
  %1182 = add i32 %1181, -1
  %1183 = sext i32 %1182 to i64
  %1184 = getelementptr inbounds i32, ptr %1179, i64 %1183
  %1185 = load i32, ptr %1184, align 4, !tbaa !22
  %1186 = icmp ugt i32 %1185, %1167
  br i1 %1186, label %1180, label %1187

1187:                                             ; preds = %1180
  %1188 = sub i32 %1123, %1175
  %1189 = zext i32 %1188 to i64
  %1190 = sub i32 %1167, %1185
  %1191 = load ptr, ptr %1088, align 8, !tbaa !553, !noalias !569
  %1192 = load i32, ptr %1089, align 8, !tbaa !22, !noalias !569
  %1193 = mul i32 %1192, %1172
  %1194 = zext i32 %1193 to i64
  %1195 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %1191, i64 %1194
  %1196 = zext i32 %1182 to i64
  %1197 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %1195, i64 %1196
  %1198 = load ptr, ptr %1197, align 8, !tbaa !557
  %1199 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %1198, i64 0, i32 3
  %1200 = load ptr, ptr %1199, align 8, !tbaa !438
  %1201 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1200, i64 %1189
  %1202 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1200, i64 %1189, i32 2
  %1203 = load i32, ptr %1202, align 8, !tbaa !440
  %1204 = icmp eq i32 %1203, 0
  br i1 %1204, label %1221, label %1205

1205:                                             ; preds = %1187
  %1206 = zext i32 %1203 to i64
  br label %1210

1207:                                             ; preds = %1210
  %1208 = add nuw nsw i64 %1211, 1
  %1209 = icmp eq i64 %1208, %1206
  br i1 %1209, label %1215, label %1210

1210:                                             ; preds = %1207, %1205
  %1211 = phi i64 [ 0, %1205 ], [ %1208, %1207 ]
  %1212 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1200, i64 %1189, i32 1, i64 %1211
  %1213 = load i32, ptr %1212, align 4, !tbaa !22
  %1214 = icmp eq i32 %1213, %1190
  br i1 %1214, label %1231, label %1207

1215:                                             ; preds = %1207
  %1216 = icmp eq i32 %1203, 8
  br i1 %1216, label %1217, label %1221

1217:                                             ; preds = %1215
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %1201)
          to label %1218 unwind label %1229

1218:                                             ; preds = %1217
  %1219 = load i32, ptr %1202, align 8, !tbaa !440
  %1220 = load ptr, ptr %1090, align 8, !tbaa !422, !noalias !572
  br label %1221

1221:                                             ; preds = %1218, %1215, %1187
  %1222 = phi ptr [ %1220, %1218 ], [ %1156, %1215 ], [ %1156, %1187 ]
  %1223 = phi i32 [ %1219, %1218 ], [ %1203, %1215 ], [ 0, %1187 ]
  %1224 = zext i32 %1223 to i64
  %1225 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1200, i64 %1189, i32 1, i64 %1224
  store i32 %1190, ptr %1225, align 4, !tbaa !22
  %1226 = load i32, ptr %1202, align 8, !tbaa !440
  %1227 = add i32 %1226, 1
  store i32 %1227, ptr %1202, align 8, !tbaa !440
  %1228 = load i32, ptr %1091, align 8, !tbaa !22, !noalias !572
  br label %1231

1229:                                             ; preds = %1294, %1217
  %1230 = landingpad { ptr, i32 }
          cleanup
  br label %1933

1231:                                             ; preds = %1210, %1154, %1221
  %1232 = phi i32 [ %1157, %1154 ], [ %1228, %1221 ], [ %1157, %1210 ]
  %1233 = phi ptr [ %1156, %1154 ], [ %1222, %1221 ], [ %1156, %1210 ]
  %1234 = trunc i64 %1155 to i32
  %1235 = mul i32 %1232, %1234
  %1236 = zext i32 %1235 to i64
  %1237 = getelementptr inbounds i8, ptr %1233, i64 %1236
  %1238 = getelementptr inbounds i8, ptr %1237, i64 %1120
  %1239 = load i8, ptr %1238, align 1, !tbaa !424, !range !425, !noundef !73
  %1240 = icmp eq i8 %1239, 0
  br i1 %1240, label %1303, label %1241

1241:                                             ; preds = %1231
  %1242 = load ptr, ptr %1, align 8, !tbaa !58
  %1243 = getelementptr inbounds i32, ptr %1242, i64 %1155
  %1244 = load i32, ptr %1243, align 4, !tbaa !22
  %1245 = load i32, ptr %1084, align 8, !tbaa !61
  %1246 = load ptr, ptr %1085, align 8, !tbaa !58
  br label %1247

1247:                                             ; preds = %1247, %1241
  %1248 = phi i32 [ %1245, %1241 ], [ %1249, %1247 ]
  %1249 = add i32 %1248, -1
  %1250 = sext i32 %1249 to i64
  %1251 = getelementptr inbounds i32, ptr %1246, i64 %1250
  %1252 = load i32, ptr %1251, align 4, !tbaa !22
  %1253 = icmp ugt i32 %1252, %1244
  br i1 %1253, label %1247, label %1254

1254:                                             ; preds = %1247
  %1255 = load i32, ptr %1086, align 8, !tbaa !61
  %1256 = load ptr, ptr %1087, align 8, !tbaa !58
  br label %1257

1257:                                             ; preds = %1257, %1254
  %1258 = phi i32 [ %1255, %1254 ], [ %1259, %1257 ]
  %1259 = add i32 %1258, -1
  %1260 = sext i32 %1259 to i64
  %1261 = getelementptr inbounds i32, ptr %1256, i64 %1260
  %1262 = load i32, ptr %1261, align 4, !tbaa !22
  %1263 = icmp ugt i32 %1262, %1123
  br i1 %1263, label %1257, label %1264

1264:                                             ; preds = %1257
  %1265 = sub i32 %1244, %1252
  %1266 = zext i32 %1265 to i64
  %1267 = sub i32 %1123, %1262
  %1268 = load ptr, ptr %1088, align 8, !tbaa !553, !noalias !575
  %1269 = load i32, ptr %1089, align 8, !tbaa !22, !noalias !575
  %1270 = mul i32 %1269, %1249
  %1271 = zext i32 %1270 to i64
  %1272 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %1268, i64 %1271
  %1273 = zext i32 %1259 to i64
  %1274 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %1272, i64 %1273
  %1275 = load ptr, ptr %1274, align 8, !tbaa !557
  %1276 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %1275, i64 0, i32 3
  %1277 = load ptr, ptr %1276, align 8, !tbaa !438
  %1278 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1277, i64 %1266
  %1279 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1277, i64 %1266, i32 2
  %1280 = load i32, ptr %1279, align 8, !tbaa !440
  %1281 = icmp eq i32 %1280, 0
  br i1 %1281, label %1297, label %1282

1282:                                             ; preds = %1264
  %1283 = zext i32 %1280 to i64
  br label %1287

1284:                                             ; preds = %1287
  %1285 = add nuw nsw i64 %1288, 1
  %1286 = icmp eq i64 %1285, %1283
  br i1 %1286, label %1292, label %1287

1287:                                             ; preds = %1284, %1282
  %1288 = phi i64 [ 0, %1282 ], [ %1285, %1284 ]
  %1289 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1277, i64 %1266, i32 1, i64 %1288
  %1290 = load i32, ptr %1289, align 4, !tbaa !22
  %1291 = icmp eq i32 %1290, %1267
  br i1 %1291, label %1303, label %1284

1292:                                             ; preds = %1284
  %1293 = icmp eq i32 %1280, 8
  br i1 %1293, label %1294, label %1297

1294:                                             ; preds = %1292
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %1278)
          to label %1295 unwind label %1229

1295:                                             ; preds = %1294
  %1296 = load i32, ptr %1279, align 8, !tbaa !440
  br label %1297

1297:                                             ; preds = %1295, %1292, %1264
  %1298 = phi i32 [ %1296, %1295 ], [ %1280, %1292 ], [ 0, %1264 ]
  %1299 = zext i32 %1298 to i64
  %1300 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1277, i64 %1266, i32 1, i64 %1299
  store i32 %1267, ptr %1300, align 4, !tbaa !22
  %1301 = load i32, ptr %1279, align 8, !tbaa !440
  %1302 = add i32 %1301, 1
  store i32 %1302, ptr %1279, align 8, !tbaa !440
  br label %1303

1303:                                             ; preds = %1287, %1297, %1231
  %1304 = add nuw nsw i64 %1155, 1
  %1305 = icmp eq i64 %1304, %1093
  br i1 %1305, label %1367, label %1154

1306:                                             ; preds = %1131
  %1307 = load i32, ptr %1084, align 8, !tbaa !61
  %1308 = load ptr, ptr %1085, align 8, !tbaa !58
  br label %1309

1309:                                             ; preds = %1309, %1306
  %1310 = phi i32 [ %1307, %1306 ], [ %1311, %1309 ]
  %1311 = add i32 %1310, -1
  %1312 = sext i32 %1311 to i64
  %1313 = getelementptr inbounds i32, ptr %1308, i64 %1312
  %1314 = load i32, ptr %1313, align 4, !tbaa !22
  %1315 = icmp ugt i32 %1314, %1123
  br i1 %1315, label %1309, label %1316

1316:                                             ; preds = %1309
  %1317 = load i32, ptr %1086, align 8, !tbaa !61
  %1318 = load ptr, ptr %1087, align 8, !tbaa !58
  br label %1319

1319:                                             ; preds = %1319, %1316
  %1320 = phi i32 [ %1317, %1316 ], [ %1321, %1319 ]
  %1321 = add i32 %1320, -1
  %1322 = sext i32 %1321 to i64
  %1323 = getelementptr inbounds i32, ptr %1318, i64 %1322
  %1324 = load i32, ptr %1323, align 4, !tbaa !22
  %1325 = icmp ugt i32 %1324, %1123
  br i1 %1325, label %1319, label %1326

1326:                                             ; preds = %1319
  %1327 = sub i32 %1123, %1314
  %1328 = zext i32 %1327 to i64
  %1329 = sub i32 %1123, %1324
  %1330 = load ptr, ptr %1088, align 8, !tbaa !553, !noalias !578
  %1331 = load i32, ptr %1089, align 8, !tbaa !22, !noalias !578
  %1332 = mul i32 %1331, %1311
  %1333 = zext i32 %1332 to i64
  %1334 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %1330, i64 %1333
  %1335 = zext i32 %1321 to i64
  %1336 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %1334, i64 %1335
  %1337 = load ptr, ptr %1336, align 8, !tbaa !557
  %1338 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %1337, i64 0, i32 3
  %1339 = load ptr, ptr %1338, align 8, !tbaa !438
  %1340 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1339, i64 %1328
  %1341 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1339, i64 %1328, i32 2
  %1342 = load i32, ptr %1341, align 8, !tbaa !440
  %1343 = icmp eq i32 %1342, 0
  br i1 %1343, label %1359, label %1344

1344:                                             ; preds = %1326
  %1345 = zext i32 %1342 to i64
  br label %1349

1346:                                             ; preds = %1349
  %1347 = add nuw nsw i64 %1350, 1
  %1348 = icmp eq i64 %1347, %1345
  br i1 %1348, label %1354, label %1349

1349:                                             ; preds = %1346, %1344
  %1350 = phi i64 [ 0, %1344 ], [ %1347, %1346 ]
  %1351 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1339, i64 %1328, i32 1, i64 %1350
  %1352 = load i32, ptr %1351, align 4, !tbaa !22
  %1353 = icmp eq i32 %1352, %1329
  br i1 %1353, label %1367, label %1346

1354:                                             ; preds = %1346
  %1355 = icmp eq i32 %1342, 8
  br i1 %1355, label %1356, label %1359

1356:                                             ; preds = %1354
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %1340)
          to label %1357 unwind label %1365

1357:                                             ; preds = %1356
  %1358 = load i32, ptr %1341, align 8, !tbaa !440
  br label %1359

1359:                                             ; preds = %1357, %1354, %1326
  %1360 = phi i32 [ %1358, %1357 ], [ %1342, %1354 ], [ 0, %1326 ]
  %1361 = zext i32 %1360 to i64
  %1362 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1339, i64 %1328, i32 1, i64 %1361
  store i32 %1329, ptr %1362, align 4, !tbaa !22
  %1363 = load i32, ptr %1341, align 8, !tbaa !440
  %1364 = add i32 %1363, 1
  store i32 %1364, ptr %1341, align 8, !tbaa !440
  br label %1367

1365:                                             ; preds = %1356
  %1366 = landingpad { ptr, i32 }
          cleanup
  br label %1933

1367:                                             ; preds = %1349, %1303, %1133, %1359
  %1368 = add nuw nsw i64 %1116, 1
  %1369 = icmp eq i64 %1368, %1092
  br i1 %1369, label %1094, label %1115

1370:                                             ; preds = %1111, %1100
  %1371 = phi ptr [ null, %1100 ], [ %1110, %1111 ]
  %1372 = phi ptr [ null, %1100 ], [ %1112, %1111 ]
  %1373 = icmp eq i32 %1105, 0
  br i1 %1373, label %1446, label %1374

1374:                                             ; preds = %1370
  %1375 = and i64 %1104, 4294967295
  %1376 = icmp ult i64 %1375, 17
  br i1 %1376, label %1377, label %1396

1377:                                             ; preds = %1410, %1396, %1374
  %1378 = phi i64 [ 0, %1396 ], [ 0, %1374 ], [ %1409, %1410 ]
  %1379 = sub nsw i64 %1104, %1378
  %1380 = xor i64 %1378, -1
  %1381 = add nsw i64 %1375, %1380
  %1382 = and i64 %1379, 3
  %1383 = icmp eq i64 %1382, 0
  br i1 %1383, label %1393, label %1384

1384:                                             ; preds = %1377, %1384
  %1385 = phi i64 [ %1390, %1384 ], [ %1378, %1377 ]
  %1386 = phi i64 [ %1391, %1384 ], [ 0, %1377 ]
  %1387 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1385
  %1388 = load i32, ptr %1387, align 8, !tbaa !317
  %1389 = getelementptr inbounds i32, ptr %1371, i64 %1385
  store i32 %1388, ptr %1389, align 4, !tbaa !22
  %1390 = add nuw nsw i64 %1385, 1
  %1391 = add i64 %1386, 1
  %1392 = icmp eq i64 %1391, %1382
  br i1 %1392, label %1393, label %1384, !llvm.loop !581

1393:                                             ; preds = %1384, %1377
  %1394 = phi i64 [ %1378, %1377 ], [ %1390, %1384 ]
  %1395 = icmp ult i64 %1381, 3
  br i1 %1395, label %1446, label %1490

1396:                                             ; preds = %1374
  %1397 = shl nuw nsw i64 %1375, 2
  %1398 = getelementptr i8, ptr %1371, i64 %1397
  %1399 = shl nuw nsw i64 %1375, 4
  %1400 = add nsw i64 %1399, -12
  %1401 = getelementptr i8, ptr %1102, i64 %1400
  %1402 = icmp ult ptr %1371, %1401
  %1403 = icmp ult ptr %1102, %1398
  %1404 = and i1 %1402, %1403
  br i1 %1404, label %1377, label %1405

1405:                                             ; preds = %1396
  %1406 = and i64 %1104, 7
  %1407 = icmp eq i64 %1406, 0
  %1408 = select i1 %1407, i64 8, i64 %1406
  %1409 = sub nsw i64 %1375, %1408
  br label %1410

1410:                                             ; preds = %1410, %1405
  %1411 = phi i64 [ 0, %1405 ], [ %1444, %1410 ]
  %1412 = or i64 %1411, 1
  %1413 = or i64 %1411, 2
  %1414 = or i64 %1411, 3
  %1415 = or i64 %1411, 4
  %1416 = or i64 %1411, 5
  %1417 = or i64 %1411, 6
  %1418 = or i64 %1411, 7
  %1419 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1411
  %1420 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1412
  %1421 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1413
  %1422 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1414
  %1423 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1415
  %1424 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1416
  %1425 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1417
  %1426 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1418
  %1427 = load i32, ptr %1419, align 8, !tbaa !317, !alias.scope !582
  %1428 = load i32, ptr %1420, align 8, !tbaa !317, !alias.scope !582
  %1429 = load i32, ptr %1421, align 8, !tbaa !317, !alias.scope !582
  %1430 = load i32, ptr %1422, align 8, !tbaa !317, !alias.scope !582
  %1431 = load i32, ptr %1423, align 8, !tbaa !317, !alias.scope !582
  %1432 = load i32, ptr %1424, align 8, !tbaa !317, !alias.scope !582
  %1433 = load i32, ptr %1425, align 8, !tbaa !317, !alias.scope !582
  %1434 = load i32, ptr %1426, align 8, !tbaa !317, !alias.scope !582
  %1435 = insertelement <8 x i32> poison, i32 %1427, i64 0
  %1436 = insertelement <8 x i32> %1435, i32 %1428, i64 1
  %1437 = insertelement <8 x i32> %1436, i32 %1429, i64 2
  %1438 = insertelement <8 x i32> %1437, i32 %1430, i64 3
  %1439 = insertelement <8 x i32> %1438, i32 %1431, i64 4
  %1440 = insertelement <8 x i32> %1439, i32 %1432, i64 5
  %1441 = insertelement <8 x i32> %1440, i32 %1433, i64 6
  %1442 = insertelement <8 x i32> %1441, i32 %1434, i64 7
  %1443 = getelementptr inbounds i32, ptr %1371, i64 %1411
  store <8 x i32> %1442, ptr %1443, align 4, !tbaa !22, !alias.scope !585, !noalias !582
  %1444 = add nuw i64 %1411, 8
  %1445 = icmp eq i64 %1444, %1409
  br i1 %1445, label %1377, label %1410, !llvm.loop !587

1446:                                             ; preds = %1393, %1490, %1370
  %1447 = add i32 %20, 1
  %1448 = zext i32 %1447 to i64
  %1449 = icmp eq i32 %1447, 0
  br i1 %1449, label %1509, label %1450

1450:                                             ; preds = %1446
  %1451 = shl nuw nsw i64 %1448, 2
  %1452 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1451) #21
          to label %1453 unwind label %1609

1453:                                             ; preds = %1450
  %1454 = getelementptr inbounds i32, ptr %1452, i64 %1448
  %1455 = add nuw nsw i64 %1448, 4611686018427387903
  %1456 = and i64 %1455, 4611686018427387903
  %1457 = add nuw nsw i64 %1456, 1
  %1458 = icmp ult i64 %1456, 31
  br i1 %1458, label %1482, label %1459

1459:                                             ; preds = %1453
  %1460 = and i64 %1457, 9223372036854775776
  %1461 = shl i64 %1460, 2
  %1462 = getelementptr i8, ptr %1452, i64 %1461
  %1463 = insertelement <8 x i32> poison, i32 %1105, i64 0
  %1464 = shufflevector <8 x i32> %1463, <8 x i32> poison, <8 x i32> zeroinitializer
  %1465 = insertelement <8 x i32> poison, i32 %1105, i64 0
  %1466 = shufflevector <8 x i32> %1465, <8 x i32> poison, <8 x i32> zeroinitializer
  %1467 = insertelement <8 x i32> poison, i32 %1105, i64 0
  %1468 = shufflevector <8 x i32> %1467, <8 x i32> poison, <8 x i32> zeroinitializer
  %1469 = insertelement <8 x i32> poison, i32 %1105, i64 0
  %1470 = shufflevector <8 x i32> %1469, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %1471

1471:                                             ; preds = %1471, %1459
  %1472 = phi i64 [ 0, %1459 ], [ %1478, %1471 ]
  %1473 = shl i64 %1472, 2
  %1474 = getelementptr i8, ptr %1452, i64 %1473
  store <8 x i32> %1464, ptr %1474, align 4, !tbaa !22
  %1475 = getelementptr i32, ptr %1474, i64 8
  store <8 x i32> %1466, ptr %1475, align 4, !tbaa !22
  %1476 = getelementptr i32, ptr %1474, i64 16
  store <8 x i32> %1468, ptr %1476, align 4, !tbaa !22
  %1477 = getelementptr i32, ptr %1474, i64 24
  store <8 x i32> %1470, ptr %1477, align 4, !tbaa !22
  %1478 = add nuw i64 %1472, 32
  %1479 = icmp eq i64 %1478, %1460
  br i1 %1479, label %1480, label %1471, !llvm.loop !588

1480:                                             ; preds = %1471
  %1481 = icmp eq i64 %1457, %1460
  br i1 %1481, label %1509, label %1482

1482:                                             ; preds = %1453, %1480
  %1483 = phi ptr [ %1452, %1453 ], [ %1462, %1480 ]
  br label %1484

1484:                                             ; preds = %1482, %1484
  %1485 = phi ptr [ %1486, %1484 ], [ %1483, %1482 ]
  store i32 %1105, ptr %1485, align 4, !tbaa !22
  %1486 = getelementptr inbounds i32, ptr %1485, i64 1
  %1487 = icmp eq ptr %1486, %1454
  br i1 %1487, label %1509, label %1484, !llvm.loop !589

1488:                                             ; preds = %1108
  %1489 = landingpad { ptr, i32 }
          cleanup
  br label %1933

1490:                                             ; preds = %1393, %1490
  %1491 = phi i64 [ %1507, %1490 ], [ %1394, %1393 ]
  %1492 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1491
  %1493 = load i32, ptr %1492, align 8, !tbaa !317
  %1494 = getelementptr inbounds i32, ptr %1371, i64 %1491
  store i32 %1493, ptr %1494, align 4, !tbaa !22
  %1495 = add nuw nsw i64 %1491, 1
  %1496 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1495
  %1497 = load i32, ptr %1496, align 8, !tbaa !317
  %1498 = getelementptr inbounds i32, ptr %1371, i64 %1495
  store i32 %1497, ptr %1498, align 4, !tbaa !22
  %1499 = add nuw nsw i64 %1491, 2
  %1500 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1499
  %1501 = load i32, ptr %1500, align 8, !tbaa !317
  %1502 = getelementptr inbounds i32, ptr %1371, i64 %1499
  store i32 %1501, ptr %1502, align 4, !tbaa !22
  %1503 = add nuw nsw i64 %1491, 3
  %1504 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1102, i64 %1503
  %1505 = load i32, ptr %1504, align 8, !tbaa !317
  %1506 = getelementptr inbounds i32, ptr %1371, i64 %1503
  store i32 %1505, ptr %1506, align 4, !tbaa !22
  %1507 = add nuw nsw i64 %1491, 4
  %1508 = icmp eq i64 %1507, %1375
  br i1 %1508, label %1446, label %1490, !llvm.loop !590

1509:                                             ; preds = %1484, %1480, %1446
  %1510 = phi ptr [ null, %1446 ], [ %1452, %1480 ], [ %1452, %1484 ]
  %1511 = load i32, ptr %19, align 8, !tbaa !547
  store i32 0, ptr %1510, align 4, !tbaa !22
  %1512 = icmp ugt i32 %1511, 1
  br i1 %1512, label %1516, label %1513

1513:                                             ; preds = %1509
  %1514 = ptrtoint ptr %1372 to i64
  %1515 = ptrtoint ptr %1371 to i64
  br label %1522

1516:                                             ; preds = %1509
  %1517 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 4, i32 1
  %1518 = load ptr, ptr %1517, align 8, !tbaa !58
  %1519 = ptrtoint ptr %1372 to i64
  %1520 = ptrtoint ptr %1371 to i64
  %1521 = zext i32 %1511 to i64
  br label %1536

1522:                                             ; preds = %1561, %1513
  %1523 = phi i64 [ %1515, %1513 ], [ %1520, %1561 ]
  %1524 = phi i64 [ %1514, %1513 ], [ %1519, %1561 ]
  %1525 = getelementptr inbounds i32, ptr %1510, i64 1
  %1526 = load i32, ptr %1525, align 4, !tbaa !22
  %1527 = sub i64 %1524, %1523
  %1528 = ashr exact i64 %1527, 2
  %1529 = zext i32 %1526 to i64
  %1530 = icmp ugt i64 %1528, %1529
  br i1 %1530, label %1531, label %1587

1531:                                             ; preds = %1522
  %1532 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 4
  %1533 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 4, i32 1
  %1534 = load ptr, ptr %1533, align 8, !tbaa !58
  %1535 = load i32, ptr %1532, align 8, !tbaa !61
  br label %1570

1536:                                             ; preds = %1561, %1516
  %1537 = phi i64 [ 1, %1516 ], [ %1568, %1561 ]
  %1538 = phi ptr [ %1371, %1516 ], [ %1563, %1561 ]
  %1539 = getelementptr inbounds i32, ptr %1518, i64 %1537
  %1540 = load i32, ptr %1539, align 4, !tbaa !22
  %1541 = ptrtoint ptr %1538 to i64
  %1542 = sub i64 %1519, %1541
  %1543 = icmp sgt i64 %1542, 0
  br i1 %1543, label %1544, label %1561

1544:                                             ; preds = %1536
  %1545 = lshr exact i64 %1542, 2
  br label %1546

1546:                                             ; preds = %1546, %1544
  %1547 = phi i64 [ %1545, %1544 ], [ %1557, %1546 ]
  %1548 = phi ptr [ %1538, %1544 ], [ %1556, %1546 ]
  %1549 = lshr i64 %1547, 1
  %1550 = getelementptr inbounds i32, ptr %1548, i64 %1549
  %1551 = load i32, ptr %1550, align 4, !tbaa !22
  %1552 = icmp ult i32 %1551, %1540
  %1553 = getelementptr inbounds i32, ptr %1550, i64 1
  %1554 = xor i64 %1549, -1
  %1555 = add nsw i64 %1547, %1554
  %1556 = select i1 %1552, ptr %1553, ptr %1548
  %1557 = select i1 %1552, i64 %1555, i64 %1549
  %1558 = icmp sgt i64 %1557, 0
  br i1 %1558, label %1546, label %1559

1559:                                             ; preds = %1546
  %1560 = ptrtoint ptr %1556 to i64
  br label %1561

1561:                                             ; preds = %1559, %1536
  %1562 = phi i64 [ %1560, %1559 ], [ %1541, %1536 ]
  %1563 = phi ptr [ %1556, %1559 ], [ %1538, %1536 ]
  %1564 = sub i64 %1562, %1520
  %1565 = lshr exact i64 %1564, 2
  %1566 = trunc i64 %1565 to i32
  %1567 = getelementptr inbounds i32, ptr %1510, i64 %1537
  store i32 %1566, ptr %1567, align 4, !tbaa !22
  %1568 = add nuw nsw i64 %1537, 1
  %1569 = icmp eq i64 %1568, %1521
  br i1 %1569, label %1522, label %1536

1570:                                             ; preds = %1582, %1531
  %1571 = phi i64 [ %1529, %1531 ], [ %1585, %1582 ]
  %1572 = phi i32 [ %1526, %1531 ], [ %1584, %1582 ]
  %1573 = getelementptr inbounds i32, ptr %1371, i64 %1571
  %1574 = load i32, ptr %1573, align 4, !tbaa !22
  br label %1575

1575:                                             ; preds = %1575, %1570
  %1576 = phi i32 [ %1535, %1570 ], [ %1577, %1575 ]
  %1577 = add i32 %1576, -1
  %1578 = sext i32 %1577 to i64
  %1579 = getelementptr inbounds i32, ptr %1534, i64 %1578
  %1580 = load i32, ptr %1579, align 4, !tbaa !22
  %1581 = icmp ugt i32 %1580, %1574
  br i1 %1581, label %1575, label %1582

1582:                                             ; preds = %1575
  %1583 = sub i32 %1574, %1580
  store i32 %1583, ptr %1573, align 4, !tbaa !22
  %1584 = add i32 %1572, 1
  %1585 = zext i32 %1584 to i64
  %1586 = icmp ugt i64 %1528, %1585
  br i1 %1586, label %1570, label %1587

1587:                                             ; preds = %1582, %1522
  br i1 %1107, label %1592, label %1588

1588:                                             ; preds = %1587
  %1589 = shl nuw nsw i64 %1106, 2
  %1590 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1589) #21
          to label %1591 unwind label %1611

1591:                                             ; preds = %1588
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %1590, i8 0, i64 %1589, i1 false), !tbaa !22
  br label %1592

1592:                                             ; preds = %1591, %1587
  %1593 = phi ptr [ null, %1587 ], [ %1590, %1591 ]
  %1594 = icmp eq i32 %20, 0
  br i1 %1594, label %1606, label %1595

1595:                                             ; preds = %1592
  %1596 = and i8 %1103, 1
  %1597 = icmp eq i8 %1596, 0
  %1598 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 3, i32 0, i32 1
  %1599 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %1600 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %1601 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %1602 = zext i32 %20 to i64
  %1603 = getelementptr inbounds i32, ptr %1593, i64 1
  br label %1613

1604:                                             ; preds = %1742, %1725, %1613
  %1605 = icmp eq i64 %1615, %1602
  br i1 %1605, label %1606, label %1613

1606:                                             ; preds = %1604, %1592
  %1607 = icmp eq ptr %1593, null
  br i1 %1607, label %1896, label %1608

1608:                                             ; preds = %1606
  call void @_ZdlPv(ptr noundef nonnull %1593) #23
  br label %1896

1609:                                             ; preds = %1450
  %1610 = landingpad { ptr, i32 }
          cleanup
  br label %1929

1611:                                             ; preds = %1588
  %1612 = landingpad { ptr, i32 }
          cleanup
  br label %1927

1613:                                             ; preds = %1595, %1604
  %1614 = phi i64 [ 0, %1595 ], [ %1615, %1604 ]
  %1615 = add nuw nsw i64 %1614, 1
  %1616 = getelementptr inbounds i32, ptr %1510, i64 %1615
  %1617 = load i32, ptr %1616, align 4, !tbaa !22
  %1618 = getelementptr inbounds i32, ptr %1510, i64 %1614
  %1619 = load i32, ptr %1618, align 4, !tbaa !22
  %1620 = icmp ult i32 %1619, %1617
  br i1 %1620, label %1621, label %1604

1621:                                             ; preds = %1613
  %1622 = zext i32 %1619 to i64
  %1623 = zext i32 %1617 to i64
  %1624 = trunc i64 %1614 to i32
  br i1 %1597, label %1625, label %1730

1625:                                             ; preds = %1621, %1725
  %1626 = phi i64 [ %1726, %1725 ], [ %1622, %1621 ]
  %1627 = getelementptr inbounds i32, ptr %1371, i64 %1626
  %1628 = load i32, ptr %1627, align 4, !tbaa !22
  %1629 = load ptr, ptr %8, align 8, !tbaa !321
  %1630 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1629, i64 %1626, i32 1
  %1631 = load i32, ptr %1630, align 4, !tbaa !319
  %1632 = zext i32 %1628 to i64
  br label %1633

1633:                                             ; preds = %1681, %1625
  %1634 = phi i64 [ %1637, %1681 ], [ 0, %1625 ]
  %1635 = icmp eq i64 %1634, %1602
  br i1 %1635, label %1725, label %1636

1636:                                             ; preds = %1633
  %1637 = add nuw nsw i64 %1634, 1
  %1638 = getelementptr inbounds i32, ptr %1510, i64 %1637
  %1639 = load i32, ptr %1638, align 4, !tbaa !22
  %1640 = getelementptr inbounds i32, ptr %1510, i64 %1634
  %1641 = load i32, ptr %1640, align 4, !tbaa !22
  %1642 = icmp ult i32 %1641, %1639
  br i1 %1642, label %1693, label %1681

1643:                                             ; preds = %1719, %1677
  %1644 = phi i64 [ %1679, %1677 ], [ %1721, %1719 ]
  %1645 = phi ptr [ %1678, %1677 ], [ %1722, %1719 ]
  %1646 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1694, i64 %1644, i32 1
  %1647 = load i32, ptr %1646, align 4, !tbaa !319
  %1648 = load i32, ptr %1601, align 8, !tbaa !22, !noalias !591
  %1649 = mul i32 %1648, %1631
  %1650 = zext i32 %1649 to i64
  %1651 = getelementptr inbounds i8, ptr %1695, i64 %1650
  %1652 = zext i32 %1647 to i64
  %1653 = getelementptr inbounds i8, ptr %1651, i64 %1652
  %1654 = load i8, ptr %1653, align 1, !tbaa !424, !range !425, !noundef !73
  %1655 = icmp eq i8 %1654, 0
  br i1 %1655, label %1660, label %1656

1656:                                             ; preds = %1643
  %1657 = getelementptr inbounds i32, ptr %1371, i64 %1644
  %1658 = load i32, ptr %1657, align 4, !tbaa !22
  %1659 = getelementptr inbounds i32, ptr %1645, i64 1
  store i32 %1658, ptr %1645, align 4, !tbaa !22
  br label %1660

1660:                                             ; preds = %1656, %1643
  %1661 = phi ptr [ %1645, %1643 ], [ %1659, %1656 ]
  %1662 = add nuw nsw i64 %1644, 1
  %1663 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1694, i64 %1662, i32 1
  %1664 = load i32, ptr %1663, align 4, !tbaa !319
  %1665 = load i32, ptr %1601, align 8, !tbaa !22, !noalias !591
  %1666 = mul i32 %1665, %1631
  %1667 = zext i32 %1666 to i64
  %1668 = getelementptr inbounds i8, ptr %1695, i64 %1667
  %1669 = zext i32 %1664 to i64
  %1670 = getelementptr inbounds i8, ptr %1668, i64 %1669
  %1671 = load i8, ptr %1670, align 1, !tbaa !424, !range !425, !noundef !73
  %1672 = icmp eq i8 %1671, 0
  br i1 %1672, label %1677, label %1673

1673:                                             ; preds = %1660
  %1674 = getelementptr inbounds i32, ptr %1371, i64 %1662
  %1675 = load i32, ptr %1674, align 4, !tbaa !22
  %1676 = getelementptr inbounds i32, ptr %1661, i64 1
  store i32 %1675, ptr %1661, align 4, !tbaa !22
  br label %1677

1677:                                             ; preds = %1673, %1660
  %1678 = phi ptr [ %1661, %1660 ], [ %1676, %1673 ]
  %1679 = add nuw nsw i64 %1644, 2
  %1680 = icmp eq i64 %1679, %1697
  br i1 %1680, label %1681, label %1643

1681:                                             ; preds = %1719, %1677, %1636
  %1682 = phi ptr [ %1593, %1636 ], [ %1720, %1719 ], [ %1678, %1677 ]
  %1683 = load ptr, ptr %1598, align 8, !tbaa !553, !noalias !594
  %1684 = load i32, ptr %1599, align 8, !tbaa !22, !noalias !594
  %1685 = mul i32 %1684, %1624
  %1686 = zext i32 %1685 to i64
  %1687 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %1683, i64 %1686
  %1688 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %1687, i64 %1634
  %1689 = load ptr, ptr %1688, align 8, !tbaa !557
  %1690 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %1689, i64 0, i32 3
  %1691 = load ptr, ptr %1690, align 8, !tbaa !438
  %1692 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1691, i64 %1632
  invoke void @_ZN6dealii25CompressedSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b(ptr noundef nonnull align 8 dereferenceable(60) %1692, ptr %1593, ptr %1682, i1 noundef zeroext true)
          to label %1633 unwind label %1728

1693:                                             ; preds = %1636
  %1694 = load ptr, ptr %8, align 8, !tbaa !321
  %1695 = load ptr, ptr %1600, align 8, !tbaa !422, !noalias !591
  %1696 = zext i32 %1641 to i64
  %1697 = zext i32 %1639 to i64
  %1698 = sub nsw i64 %1697, %1696
  %1699 = xor i64 %1696, -1
  %1700 = and i64 %1698, 1
  %1701 = icmp eq i64 %1700, 0
  br i1 %1701, label %1719, label %1702

1702:                                             ; preds = %1693
  %1703 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1694, i64 %1696, i32 1
  %1704 = load i32, ptr %1703, align 4, !tbaa !319
  %1705 = load i32, ptr %1601, align 8, !tbaa !22, !noalias !591
  %1706 = mul i32 %1705, %1631
  %1707 = zext i32 %1706 to i64
  %1708 = getelementptr inbounds i8, ptr %1695, i64 %1707
  %1709 = zext i32 %1704 to i64
  %1710 = getelementptr inbounds i8, ptr %1708, i64 %1709
  %1711 = load i8, ptr %1710, align 1, !tbaa !424, !range !425, !noundef !73
  %1712 = icmp eq i8 %1711, 0
  br i1 %1712, label %1716, label %1713

1713:                                             ; preds = %1702
  %1714 = getelementptr inbounds i32, ptr %1371, i64 %1696
  %1715 = load i32, ptr %1714, align 4, !tbaa !22
  store i32 %1715, ptr %1593, align 4, !tbaa !22
  br label %1716

1716:                                             ; preds = %1713, %1702
  %1717 = phi ptr [ %1593, %1702 ], [ %1603, %1713 ]
  %1718 = add nuw nsw i64 %1696, 1
  br label %1719

1719:                                             ; preds = %1716, %1693
  %1720 = phi ptr [ undef, %1693 ], [ %1717, %1716 ]
  %1721 = phi i64 [ %1696, %1693 ], [ %1718, %1716 ]
  %1722 = phi ptr [ %1593, %1693 ], [ %1717, %1716 ]
  %1723 = sub nsw i64 0, %1697
  %1724 = icmp eq i64 %1699, %1723
  br i1 %1724, label %1681, label %1643

1725:                                             ; preds = %1633
  %1726 = add nuw nsw i64 %1626, 1
  %1727 = icmp eq i64 %1726, %1623
  br i1 %1727, label %1604, label %1625

1728:                                             ; preds = %1681
  %1729 = landingpad { ptr, i32 }
          cleanup
  br label %1754

1730:                                             ; preds = %1621, %1742
  %1731 = phi i64 [ %1743, %1742 ], [ %1622, %1621 ]
  %1732 = getelementptr inbounds i32, ptr %1371, i64 %1731
  %1733 = load i32, ptr %1732, align 4, !tbaa !22
  %1734 = load ptr, ptr %8, align 8, !tbaa !321
  %1735 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1734, i64 %1731, i32 1
  %1736 = load i32, ptr %1735, align 4, !tbaa !319
  %1737 = zext i32 %1733 to i64
  %1738 = icmp eq i32 %1736, -1
  br label %1739

1739:                                             ; preds = %1883, %1730
  %1740 = phi i64 [ %1746, %1883 ], [ 0, %1730 ]
  %1741 = icmp eq i64 %1740, %1602
  br i1 %1741, label %1742, label %1745

1742:                                             ; preds = %1739
  %1743 = add nuw nsw i64 %1731, 1
  %1744 = icmp eq i64 %1743, %1623
  br i1 %1744, label %1604, label %1730

1745:                                             ; preds = %1739
  %1746 = add nuw nsw i64 %1740, 1
  %1747 = getelementptr inbounds i32, ptr %1510, i64 %1746
  %1748 = load i32, ptr %1747, align 4, !tbaa !22
  %1749 = getelementptr inbounds i32, ptr %1510, i64 %1740
  %1750 = load i32, ptr %1749, align 4, !tbaa !22
  %1751 = icmp ult i32 %1750, %1748
  br i1 %1751, label %1757, label %1883

1752:                                             ; preds = %1883
  %1753 = landingpad { ptr, i32 }
          cleanup
  br label %1754

1754:                                             ; preds = %1728, %1752
  %1755 = phi { ptr, i32 } [ %1753, %1752 ], [ %1729, %1728 ]
  %1756 = icmp eq ptr %1593, null
  br i1 %1756, label %1927, label %1895

1757:                                             ; preds = %1745
  %1758 = load ptr, ptr %8, align 8, !tbaa !321
  %1759 = load ptr, ptr %1600, align 8
  %1760 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1758, i64 %1731, i32 2
  %1761 = zext i32 %1750 to i64
  %1762 = zext i32 %1748 to i64
  br label %1763

1763:                                             ; preds = %1757, %1879
  %1764 = phi i64 [ %1761, %1757 ], [ %1881, %1879 ]
  %1765 = phi ptr [ %1593, %1757 ], [ %1880, %1879 ]
  %1766 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1758, i64 %1764, i32 1
  %1767 = load i32, ptr %1766, align 4, !tbaa !319
  br i1 %1738, label %1810, label %1768

1768:                                             ; preds = %1763
  %1769 = icmp eq i32 %1767, -1
  br i1 %1769, label %1779, label %1770

1770:                                             ; preds = %1768
  %1771 = load i32, ptr %1601, align 8, !tbaa !22, !noalias !597
  %1772 = mul i32 %1771, %1736
  %1773 = zext i32 %1772 to i64
  %1774 = getelementptr inbounds i8, ptr %1759, i64 %1773
  %1775 = zext i32 %1767 to i64
  %1776 = getelementptr inbounds i8, ptr %1774, i64 %1775
  %1777 = load i8, ptr %1776, align 1, !tbaa !424, !range !425, !noundef !73
  %1778 = icmp eq i8 %1777, 0
  br i1 %1778, label %1779, label %1875

1779:                                             ; preds = %1770, %1768
  %1780 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1758, i64 %1764, i32 2
  %1781 = load ptr, ptr %1780, align 8, !tbaa !320
  %1782 = icmp eq ptr %1781, null
  br i1 %1782, label %1810, label %1783

1783:                                             ; preds = %1779
  %1784 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1781, i64 0, i32 1
  %1785 = load ptr, ptr %1784, align 8, !tbaa !31
  %1786 = load ptr, ptr %1781, align 8, !tbaa !32
  %1787 = ptrtoint ptr %1785 to i64
  %1788 = ptrtoint ptr %1786 to i64
  %1789 = sub i64 %1787, %1788
  %1790 = ashr exact i64 %1789, 4
  %1791 = icmp eq ptr %1785, %1786
  br i1 %1791, label %1810, label %1792

1792:                                             ; preds = %1783
  %1793 = load i32, ptr %1601, align 8, !tbaa !22, !noalias !600
  %1794 = mul i32 %1793, %1736
  %1795 = zext i32 %1794 to i64
  %1796 = getelementptr inbounds i8, ptr %1759, i64 %1795
  br label %1801

1797:                                             ; preds = %1801
  %1798 = add i32 %1803, 1
  %1799 = zext i32 %1798 to i64
  %1800 = icmp ugt i64 %1790, %1799
  br i1 %1800, label %1801, label %1810

1801:                                             ; preds = %1792, %1797
  %1802 = phi i64 [ 0, %1792 ], [ %1799, %1797 ]
  %1803 = phi i32 [ 0, %1792 ], [ %1798, %1797 ]
  %1804 = getelementptr inbounds %"struct.std::pair", ptr %1786, i64 %1802
  %1805 = load i32, ptr %1804, align 8, !tbaa !37
  %1806 = zext i32 %1805 to i64
  %1807 = getelementptr inbounds i8, ptr %1796, i64 %1806
  %1808 = load i8, ptr %1807, align 1, !tbaa !424, !range !425, !noundef !73
  %1809 = icmp eq i8 %1808, 0
  br i1 %1809, label %1797, label %1875

1810:                                             ; preds = %1797, %1783, %1779, %1763
  %1811 = load ptr, ptr %1760, align 8, !tbaa !320
  %1812 = icmp eq ptr %1811, null
  br i1 %1812, label %1879, label %1813

1813:                                             ; preds = %1810
  %1814 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1811, i64 0, i32 1
  %1815 = load ptr, ptr %1814, align 8, !tbaa !31
  %1816 = load ptr, ptr %1811, align 8, !tbaa !32
  %1817 = ptrtoint ptr %1815 to i64
  %1818 = ptrtoint ptr %1816 to i64
  %1819 = sub i64 %1817, %1818
  %1820 = ashr exact i64 %1819, 4
  %1821 = icmp eq ptr %1815, %1816
  br i1 %1821, label %1879, label %1822

1822:                                             ; preds = %1813
  %1823 = icmp eq i32 %1767, -1
  %1824 = load ptr, ptr %1600, align 8
  %1825 = load i32, ptr %1601, align 8
  %1826 = zext i32 %1767 to i64
  %1827 = getelementptr inbounds i8, ptr %1824, i64 %1826
  %1828 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1758, i64 %1764, i32 2
  br label %1829

1829:                                             ; preds = %1822, %1871
  %1830 = phi i64 [ 0, %1822 ], [ %1873, %1871 ]
  %1831 = phi i32 [ 0, %1822 ], [ %1872, %1871 ]
  br i1 %1823, label %1840, label %1832

1832:                                             ; preds = %1829
  %1833 = getelementptr inbounds %"struct.std::pair", ptr %1816, i64 %1830
  %1834 = load i32, ptr %1833, align 8, !tbaa !37
  %1835 = mul i32 %1825, %1834
  %1836 = zext i32 %1835 to i64
  %1837 = getelementptr inbounds i8, ptr %1827, i64 %1836
  %1838 = load i8, ptr %1837, align 1, !tbaa !424, !range !425, !noundef !73
  %1839 = icmp eq i8 %1838, 0
  br i1 %1839, label %1840, label %1875

1840:                                             ; preds = %1832, %1829
  %1841 = load ptr, ptr %1828, align 8, !tbaa !320
  %1842 = icmp eq ptr %1841, null
  br i1 %1842, label %1871, label %1843

1843:                                             ; preds = %1840
  %1844 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1841, i64 0, i32 1
  %1845 = load ptr, ptr %1844, align 8, !tbaa !31
  %1846 = load ptr, ptr %1841, align 8, !tbaa !32
  %1847 = ptrtoint ptr %1845 to i64
  %1848 = ptrtoint ptr %1846 to i64
  %1849 = sub i64 %1847, %1848
  %1850 = ashr exact i64 %1849, 4
  %1851 = icmp eq ptr %1845, %1846
  br i1 %1851, label %1871, label %1852

1852:                                             ; preds = %1843
  %1853 = getelementptr inbounds %"struct.std::pair", ptr %1816, i64 %1830
  %1854 = load i32, ptr %1853, align 8, !tbaa !37
  %1855 = mul i32 %1825, %1854
  %1856 = zext i32 %1855 to i64
  %1857 = getelementptr inbounds i8, ptr %1824, i64 %1856
  br label %1862

1858:                                             ; preds = %1862
  %1859 = add i32 %1864, 1
  %1860 = zext i32 %1859 to i64
  %1861 = icmp ugt i64 %1850, %1860
  br i1 %1861, label %1862, label %1871

1862:                                             ; preds = %1852, %1858
  %1863 = phi i64 [ 0, %1852 ], [ %1860, %1858 ]
  %1864 = phi i32 [ 0, %1852 ], [ %1859, %1858 ]
  %1865 = getelementptr inbounds %"struct.std::pair", ptr %1846, i64 %1863
  %1866 = load i32, ptr %1865, align 8, !tbaa !37
  %1867 = zext i32 %1866 to i64
  %1868 = getelementptr inbounds i8, ptr %1857, i64 %1867
  %1869 = load i8, ptr %1868, align 1, !tbaa !424, !range !425, !noundef !73
  %1870 = icmp eq i8 %1869, 0
  br i1 %1870, label %1858, label %1875

1871:                                             ; preds = %1858, %1843, %1840
  %1872 = add i32 %1831, 1
  %1873 = zext i32 %1872 to i64
  %1874 = icmp ugt i64 %1820, %1873
  br i1 %1874, label %1829, label %1879

1875:                                             ; preds = %1801, %1832, %1862, %1770
  %1876 = getelementptr inbounds i32, ptr %1371, i64 %1764
  %1877 = load i32, ptr %1876, align 4, !tbaa !22
  %1878 = getelementptr inbounds i32, ptr %1765, i64 1
  store i32 %1877, ptr %1765, align 4, !tbaa !22
  br label %1879

1879:                                             ; preds = %1871, %1813, %1810, %1875
  %1880 = phi ptr [ %1765, %1810 ], [ %1878, %1875 ], [ %1765, %1813 ], [ %1765, %1871 ]
  %1881 = add nuw nsw i64 %1764, 1
  %1882 = icmp eq i64 %1881, %1762
  br i1 %1882, label %1883, label %1763

1883:                                             ; preds = %1879, %1745
  %1884 = phi ptr [ %1593, %1745 ], [ %1880, %1879 ]
  %1885 = load ptr, ptr %1598, align 8, !tbaa !553, !noalias !594
  %1886 = load i32, ptr %1599, align 8, !tbaa !22, !noalias !594
  %1887 = mul i32 %1886, %1624
  %1888 = zext i32 %1887 to i64
  %1889 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %1885, i64 %1888
  %1890 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %1889, i64 %1740
  %1891 = load ptr, ptr %1890, align 8, !tbaa !557
  %1892 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %1891, i64 0, i32 3
  %1893 = load ptr, ptr %1892, align 8, !tbaa !438
  %1894 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %1893, i64 %1737
  invoke void @_ZN6dealii25CompressedSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b(ptr noundef nonnull align 8 dereferenceable(60) %1894, ptr %1593, ptr %1884, i1 noundef zeroext true)
          to label %1739 unwind label %1752

1895:                                             ; preds = %1754
  call void @_ZdlPv(ptr noundef nonnull %1593) #23
  br label %1927

1896:                                             ; preds = %1606, %1608
  call void @_ZdlPv(ptr noundef nonnull %1510) #23
  %1897 = icmp eq ptr %1371, null
  br i1 %1897, label %1899, label %1898

1898:                                             ; preds = %1896
  call void @_ZdlPv(ptr noundef nonnull %1371) #23
  br label %1899

1899:                                             ; preds = %1898, %1896
  %1900 = icmp eq ptr %862, null
  br i1 %1900, label %1902, label %1901

1901:                                             ; preds = %1899
  call void @_ZdlPv(ptr noundef nonnull %862) #23
  br label %1902

1902:                                             ; preds = %1901, %1899
  %1903 = load ptr, ptr %8, align 8, !tbaa !321
  %1904 = load ptr, ptr %846, align 8, !tbaa !325
  %1905 = icmp eq ptr %1903, %1904
  br i1 %1905, label %1921, label %1906

1906:                                             ; preds = %1902, %1916
  %1907 = phi ptr [ %1917, %1916 ], [ %1903, %1902 ]
  %1908 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1907, i64 0, i32 2
  %1909 = load ptr, ptr %1908, align 8, !tbaa !320
  %1910 = icmp eq ptr %1909, null
  br i1 %1910, label %1916, label %1911

1911:                                             ; preds = %1906
  %1912 = load ptr, ptr %1909, align 8, !tbaa !32
  %1913 = icmp eq ptr %1912, null
  br i1 %1913, label %1915, label %1914

1914:                                             ; preds = %1911
  call void @_ZdlPv(ptr noundef nonnull %1912) #23
  br label %1915

1915:                                             ; preds = %1914, %1911
  call void @_ZdlPv(ptr noundef nonnull %1909) #23
  store ptr null, ptr %1908, align 8, !tbaa !320
  br label %1916

1916:                                             ; preds = %1915, %1906
  %1917 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1907, i64 1
  %1918 = icmp eq ptr %1917, %1904
  br i1 %1918, label %1919, label %1906

1919:                                             ; preds = %1916
  %1920 = load ptr, ptr %8, align 8, !tbaa !321
  br label %1921

1921:                                             ; preds = %1919, %1902
  %1922 = phi ptr [ %1920, %1919 ], [ %1903, %1902 ]
  %1923 = icmp eq ptr %1922, null
  br i1 %1923, label %1925, label %1924

1924:                                             ; preds = %1921
  call void @_ZdlPv(ptr noundef nonnull %1922) #23
  br label %1925

1925:                                             ; preds = %1921, %1924
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #24
  br label %1926

1926:                                             ; preds = %1925, %782
  ret void

1927:                                             ; preds = %1611, %1754, %1895
  %1928 = phi { ptr, i32 } [ %1612, %1611 ], [ %1755, %1754 ], [ %1755, %1895 ]
  call void @_ZdlPv(ptr noundef nonnull %1510) #23
  br label %1929

1929:                                             ; preds = %1927, %1609
  %1930 = phi { ptr, i32 } [ %1928, %1927 ], [ %1610, %1609 ]
  %1931 = icmp eq ptr %1371, null
  br i1 %1931, label %1933, label %1932

1932:                                             ; preds = %1929
  call void @_ZdlPv(ptr noundef nonnull %1371) #23
  br label %1933

1933:                                             ; preds = %1010, %1012, %1229, %1365, %1152, %1932, %1929, %1488, %1113
  %1934 = phi ptr [ %862, %1113 ], [ %862, %1152 ], [ %862, %1365 ], [ %862, %1229 ], [ %862, %1488 ], [ %862, %1929 ], [ %862, %1932 ], [ %899, %1010 ], [ %899, %1012 ]
  %1935 = phi { ptr, i32 } [ %1114, %1113 ], [ %1153, %1152 ], [ %1366, %1365 ], [ %1230, %1229 ], [ %1489, %1488 ], [ %1930, %1929 ], [ %1930, %1932 ], [ %1011, %1010 ], [ %1013, %1012 ]
  %1936 = icmp eq ptr %1934, null
  br i1 %1936, label %1938, label %1937

1937:                                             ; preds = %1933
  call void @_ZdlPv(ptr noundef nonnull %1934) #23
  br label %1938

1938:                                             ; preds = %1937, %1933
  %1939 = load ptr, ptr %8, align 8, !tbaa !321
  %1940 = load ptr, ptr %846, align 8, !tbaa !325
  %1941 = icmp eq ptr %1939, %1940
  br i1 %1941, label %1957, label %1942

1942:                                             ; preds = %1938, %1952
  %1943 = phi ptr [ %1953, %1952 ], [ %1939, %1938 ]
  %1944 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1943, i64 0, i32 2
  %1945 = load ptr, ptr %1944, align 8, !tbaa !320
  %1946 = icmp eq ptr %1945, null
  br i1 %1946, label %1952, label %1947

1947:                                             ; preds = %1942
  %1948 = load ptr, ptr %1945, align 8, !tbaa !32
  %1949 = icmp eq ptr %1948, null
  br i1 %1949, label %1951, label %1950

1950:                                             ; preds = %1947
  call void @_ZdlPv(ptr noundef nonnull %1948) #23
  br label %1951

1951:                                             ; preds = %1950, %1947
  call void @_ZdlPv(ptr noundef nonnull %1945) #23
  store ptr null, ptr %1944, align 8, !tbaa !320
  br label %1952

1952:                                             ; preds = %1951, %1942
  %1953 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1943, i64 1
  %1954 = icmp eq ptr %1953, %1940
  br i1 %1954, label %1955, label %1942

1955:                                             ; preds = %1952
  %1956 = load ptr, ptr %8, align 8, !tbaa !321
  br label %1957

1957:                                             ; preds = %1955, %1938
  %1958 = phi ptr [ %1956, %1955 ], [ %1939, %1938 ]
  %1959 = icmp eq ptr %1958, null
  br i1 %1959, label %1961, label %1960

1960:                                             ; preds = %1957
  call void @_ZdlPv(ptr noundef nonnull %1958) #23
  br label %1961

1961:                                             ; preds = %1960, %1957, %895
  %1962 = phi { ptr, i32 } [ %894, %895 ], [ %1935, %1957 ], [ %1935, %1960 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #24
  br label %1963

1963:                                             ; preds = %1961, %792
  %1964 = phi { ptr, i32 } [ %793, %792 ], [ %1962, %1961 ]
  resume { ptr, i32 } %1964

1965:                                             ; preds = %1113, %893
  %1966 = landingpad { ptr, i32 }
          catch ptr null
  %1967 = extractvalue { ptr, i32 } %1966, 0
  call void @__clang_call_terminate(ptr %1967) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_33BlockCompressedSetSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(288) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_33BlockCompressedSetSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(288) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_33BlockCompressedSetSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(288) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::vector.36", align 8
  %8 = alloca %"class.std::vector.178", align 8
  %9 = alloca %"struct.dealii::internals::distributing", align 8
  %10 = alloca %"struct.dealii::internals::distributing", align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !313
  %13 = load ptr, ptr %1, align 8, !tbaa !58
  %14 = ptrtoint ptr %12 to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 2
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 1
  %20 = load i32, ptr %19, align 8, !tbaa !603
  %21 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3
  %22 = load i32, ptr %21, align 4, !tbaa !22
  %23 = icmp eq i32 %22, %18
  %24 = and i64 %17, 4294967295
  br i1 %23, label %911, label %25

25:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #24
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %25
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br label %34

28:                                               ; preds = %25
  %29 = shl nuw nsw i64 %24, 2
  %30 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %29) #21
          to label %31 unwind label %72

31:                                               ; preds = %28
  store ptr %30, ptr %7, align 8, !tbaa !58
  %32 = getelementptr inbounds i32, ptr %30, i64 %24
  %33 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  store ptr %32, ptr %33, align 8, !tbaa !417
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %30, i8 0, i64 %29, i1 false), !tbaa !22
  br label %34

34:                                               ; preds = %31, %27
  %35 = phi ptr [ null, %27 ], [ %30, %31 ]
  %36 = phi ptr [ null, %27 ], [ %32, %31 ]
  %37 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  store ptr %36, ptr %37, align 8, !tbaa !313
  %38 = icmp eq i32 %18, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %41 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %43 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = and i64 %17, 4294967295
  br label %74

46:                                               ; preds = %179
  %47 = load ptr, ptr %37, align 8, !tbaa !21
  %48 = load ptr, ptr %7, align 8, !tbaa !21
  br label %49

49:                                               ; preds = %46, %34
  %50 = phi ptr [ %35, %34 ], [ %48, %46 ]
  %51 = phi ptr [ %36, %34 ], [ %47, %46 ]
  %52 = phi ptr [ null, %34 ], [ %181, %46 ]
  %53 = phi ptr [ null, %34 ], [ %182, %46 ]
  %54 = phi i32 [ 0, %34 ], [ %183, %46 ]
  %55 = zext i32 %54 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6)
  store i32 0, ptr %6, align 4, !tbaa !22
  %56 = ptrtoint ptr %51 to i64
  %57 = ptrtoint ptr %50 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = icmp ult i64 %59, %55
  br i1 %60, label %61, label %66

61:                                               ; preds = %49
  %62 = sub nsw i64 %55, %59
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr %51, i64 noundef %62, ptr noundef nonnull align 4 dereferenceable(4) %6)
          to label %63 unwind label %269

63:                                               ; preds = %61
  %64 = load ptr, ptr %7, align 8, !tbaa !21
  %65 = load ptr, ptr %37, align 8, !tbaa !21
  br label %190

66:                                               ; preds = %49
  %67 = icmp ugt i64 %59, %55
  br i1 %67, label %68, label %190

68:                                               ; preds = %66
  %69 = getelementptr inbounds i32, ptr %50, i64 %55
  %70 = icmp eq ptr %51, %69
  br i1 %70, label %190, label %71

71:                                               ; preds = %68
  store ptr %69, ptr %37, align 8, !tbaa !313
  br label %190

72:                                               ; preds = %28
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %909

74:                                               ; preds = %39, %179
  %75 = phi i64 [ 0, %39 ], [ %184, %179 ]
  %76 = phi i32 [ 0, %39 ], [ %183, %179 ]
  %77 = phi ptr [ null, %39 ], [ %182, %179 ]
  %78 = phi ptr [ null, %39 ], [ %181, %179 ]
  %79 = phi ptr [ null, %39 ], [ %180, %179 ]
  %80 = load ptr, ptr %41, align 8, !tbaa !55
  %81 = load i32, ptr %42, align 8, !tbaa !57
  %82 = load ptr, ptr %40, align 8, !tbaa !55
  %83 = ptrtoint ptr %80 to i64
  %84 = ptrtoint ptr %82 to i64
  %85 = sub i64 %83, %84
  %86 = shl nsw i64 %85, 3
  %87 = zext i32 %81 to i64
  %88 = add nsw i64 %86, %87
  %89 = load ptr, ptr %1, align 8, !tbaa !58
  %90 = getelementptr inbounds i32, ptr %89, i64 %75
  %91 = load i32, ptr %90, align 4, !tbaa !22
  %92 = zext i32 %91 to i64
  %93 = icmp ugt i64 %88, %92
  br i1 %93, label %94, label %104

94:                                               ; preds = %74
  %95 = lshr i32 %91, 6
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i64, ptr %82, i64 %96
  %98 = and i32 %91, 63
  %99 = zext i32 %98 to i64
  %100 = shl nuw i64 1, %99
  %101 = load i64, ptr %97, align 8, !tbaa !42
  %102 = and i64 %101, %100
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %109

104:                                              ; preds = %94, %74
  %105 = zext i32 %76 to i64
  %106 = load ptr, ptr %7, align 8, !tbaa !58
  %107 = getelementptr inbounds i32, ptr %106, i64 %105
  store i32 %91, ptr %107, align 4, !tbaa !22
  %108 = add i32 %76, 1
  br label %179

109:                                              ; preds = %94
  %110 = load ptr, ptr %43, align 8, !tbaa !21
  %111 = load ptr, ptr %44, align 8, !tbaa !21
  %112 = ptrtoint ptr %111 to i64
  %113 = ptrtoint ptr %110 to i64
  %114 = sub i64 %112, %113
  %115 = icmp sgt i64 %114, 0
  br i1 %115, label %116, label %131

116:                                              ; preds = %109
  %117 = udiv exact i64 %114, 40
  br label %118

118:                                              ; preds = %118, %116
  %119 = phi i64 [ %117, %116 ], [ %129, %118 ]
  %120 = phi ptr [ %110, %116 ], [ %128, %118 ]
  %121 = lshr i64 %119, 1
  %122 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %120, i64 %121
  %123 = load i32, ptr %122, align 8, !tbaa !24
  %124 = icmp ult i32 %123, %91
  %125 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %122, i64 1
  %126 = xor i64 %121, -1
  %127 = add nsw i64 %119, %126
  %128 = select i1 %124, ptr %125, ptr %120
  %129 = select i1 %124, i64 %127, i64 %121
  %130 = icmp sgt i64 %129, 0
  br i1 %130, label %118, label %131

131:                                              ; preds = %118, %109
  %132 = phi ptr [ %110, %109 ], [ %128, %118 ]
  %133 = icmp eq ptr %78, %79
  br i1 %133, label %137, label %134

134:                                              ; preds = %131
  %135 = trunc i64 %75 to i32
  store i32 %135, ptr %78, align 8
  %136 = getelementptr inbounds i8, ptr %78, i64 8
  store ptr %132, ptr %136, align 8
  br label %174

137:                                              ; preds = %131
  %138 = ptrtoint ptr %78 to i64
  %139 = ptrtoint ptr %77 to i64
  %140 = sub i64 %138, %139
  %141 = icmp eq i64 %140, 9223372036854775792
  br i1 %141, label %142, label %144

142:                                              ; preds = %137
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %143 unwind label %188

143:                                              ; preds = %142
  unreachable

144:                                              ; preds = %137
  %145 = ashr exact i64 %140, 4
  %146 = tail call i64 @llvm.umax.i64(i64 %145, i64 1)
  %147 = add i64 %146, %145
  %148 = icmp ult i64 %147, %145
  %149 = icmp ugt i64 %147, 576460752303423487
  %150 = or i1 %148, %149
  %151 = select i1 %150, i64 576460752303423487, i64 %147
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %156, label %153

153:                                              ; preds = %144
  %154 = shl nuw nsw i64 %151, 4
  %155 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %154) #21
          to label %156 unwind label %186

156:                                              ; preds = %153, %144
  %157 = phi ptr [ null, %144 ], [ %155, %153 ]
  %158 = getelementptr inbounds %"struct.std::pair.188", ptr %157, i64 %145
  %159 = trunc i64 %75 to i32
  store i32 %159, ptr %158, align 8
  %160 = getelementptr inbounds i8, ptr %158, i64 8
  store ptr %132, ptr %160, align 8
  %161 = icmp eq ptr %77, %78
  br i1 %161, label %168, label %162

162:                                              ; preds = %156, %162
  %163 = phi ptr [ %166, %162 ], [ %157, %156 ]
  %164 = phi ptr [ %165, %162 ], [ %77, %156 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %163, ptr noundef nonnull align 8 dereferenceable(16) %164, i64 16, i1 false)
  %165 = getelementptr inbounds %"struct.std::pair.188", ptr %164, i64 1
  %166 = getelementptr inbounds %"struct.std::pair.188", ptr %163, i64 1
  %167 = icmp eq ptr %165, %78
  br i1 %167, label %168, label %162

168:                                              ; preds = %162, %156
  %169 = phi ptr [ %157, %156 ], [ %166, %162 ]
  %170 = icmp eq ptr %77, null
  br i1 %170, label %172, label %171

171:                                              ; preds = %168
  tail call void @_ZdlPv(ptr noundef nonnull %77) #23
  br label %172

172:                                              ; preds = %171, %168
  %173 = getelementptr inbounds %"struct.std::pair.188", ptr %157, i64 %151
  br label %174

174:                                              ; preds = %172, %134
  %175 = phi ptr [ %173, %172 ], [ %79, %134 ]
  %176 = phi ptr [ %169, %172 ], [ %78, %134 ]
  %177 = phi ptr [ %157, %172 ], [ %77, %134 ]
  %178 = getelementptr inbounds %"struct.std::pair.188", ptr %176, i64 1
  br label %179

179:                                              ; preds = %174, %104
  %180 = phi ptr [ %175, %174 ], [ %79, %104 ]
  %181 = phi ptr [ %178, %174 ], [ %78, %104 ]
  %182 = phi ptr [ %177, %174 ], [ %77, %104 ]
  %183 = phi i32 [ %76, %174 ], [ %108, %104 ]
  %184 = add nuw nsw i64 %75, 1
  %185 = icmp eq i64 %184, %45
  br i1 %185, label %46, label %74

186:                                              ; preds = %153
  %187 = landingpad { ptr, i32 }
          cleanup
  br label %900

188:                                              ; preds = %142
  %189 = landingpad { ptr, i32 }
          cleanup
  br label %900

190:                                              ; preds = %63, %71, %68, %66
  %191 = phi ptr [ %65, %63 ], [ %69, %71 ], [ %51, %68 ], [ %51, %66 ]
  %192 = phi ptr [ %64, %63 ], [ %50, %71 ], [ %50, %68 ], [ %50, %66 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6)
  %193 = icmp eq ptr %192, %191
  br i1 %193, label %203, label %194

194:                                              ; preds = %190
  %195 = ptrtoint ptr %191 to i64
  %196 = ptrtoint ptr %192 to i64
  %197 = sub i64 %195, %196
  %198 = ashr exact i64 %197, 2
  %199 = call i64 @llvm.ctlz.i64(i64 %198, i1 true), !range !418
  %200 = shl nuw nsw i64 %199, 1
  %201 = xor i64 %200, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %192, ptr %191, i64 noundef %201)
          to label %202 unwind label %269

202:                                              ; preds = %194
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %192, ptr %191)
          to label %203 unwind label %269

203:                                              ; preds = %190, %202
  %204 = ptrtoint ptr %52 to i64
  %205 = ptrtoint ptr %53 to i64
  %206 = sub i64 %204, %205
  %207 = and i64 %206, 68719476720
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %220, label %209

209:                                              ; preds = %203
  %210 = lshr exact i64 %206, 4
  %211 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 2
  %212 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 4
  %213 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 4, i32 1
  %214 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 5
  %215 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 5, i32 1
  %216 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 3, i32 0, i32 1
  %217 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %218 = and i64 %210, 4294967295
  %219 = and i64 %17, 4294967295
  br label %271

220:                                              ; preds = %699, %203
  %221 = load ptr, ptr %37, align 8, !tbaa !21
  %222 = load ptr, ptr %7, align 8, !tbaa !21
  %223 = ptrtoint ptr %221 to i64
  %224 = ptrtoint ptr %222 to i64
  %225 = sub i64 %223, %224
  %226 = lshr exact i64 %225, 2
  %227 = trunc i64 %226 to i32
  %228 = add i32 %20, 1
  %229 = zext i32 %228 to i64
  %230 = icmp eq i32 %228, 0
  br i1 %230, label %702, label %231

231:                                              ; preds = %220
  %232 = shl nuw nsw i64 %229, 2
  %233 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %232) #21
          to label %234 unwind label %781

234:                                              ; preds = %231
  %235 = getelementptr inbounds i32, ptr %233, i64 %229
  %236 = add nuw nsw i64 %229, 4611686018427387903
  %237 = and i64 %236, 4611686018427387903
  %238 = add nuw nsw i64 %237, 1
  %239 = icmp ult i64 %237, 31
  br i1 %239, label %263, label %240

240:                                              ; preds = %234
  %241 = and i64 %238, 9223372036854775776
  %242 = shl i64 %241, 2
  %243 = getelementptr i8, ptr %233, i64 %242
  %244 = insertelement <8 x i32> poison, i32 %227, i64 0
  %245 = shufflevector <8 x i32> %244, <8 x i32> poison, <8 x i32> zeroinitializer
  %246 = insertelement <8 x i32> poison, i32 %227, i64 0
  %247 = shufflevector <8 x i32> %246, <8 x i32> poison, <8 x i32> zeroinitializer
  %248 = insertelement <8 x i32> poison, i32 %227, i64 0
  %249 = shufflevector <8 x i32> %248, <8 x i32> poison, <8 x i32> zeroinitializer
  %250 = insertelement <8 x i32> poison, i32 %227, i64 0
  %251 = shufflevector <8 x i32> %250, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %252

252:                                              ; preds = %252, %240
  %253 = phi i64 [ 0, %240 ], [ %259, %252 ]
  %254 = shl i64 %253, 2
  %255 = getelementptr i8, ptr %233, i64 %254
  store <8 x i32> %245, ptr %255, align 4, !tbaa !22
  %256 = getelementptr i32, ptr %255, i64 8
  store <8 x i32> %247, ptr %256, align 4, !tbaa !22
  %257 = getelementptr i32, ptr %255, i64 16
  store <8 x i32> %249, ptr %257, align 4, !tbaa !22
  %258 = getelementptr i32, ptr %255, i64 24
  store <8 x i32> %251, ptr %258, align 4, !tbaa !22
  %259 = add nuw i64 %253, 32
  %260 = icmp eq i64 %259, %241
  br i1 %260, label %261, label %252, !llvm.loop !607

261:                                              ; preds = %252
  %262 = icmp eq i64 %238, %241
  br i1 %262, label %702, label %263

263:                                              ; preds = %234, %261
  %264 = phi ptr [ %233, %234 ], [ %243, %261 ]
  br label %265

265:                                              ; preds = %263, %265
  %266 = phi ptr [ %267, %265 ], [ %264, %263 ]
  store i32 %227, ptr %266, align 4, !tbaa !22
  %267 = getelementptr inbounds i32, ptr %266, i64 1
  %268 = icmp eq ptr %267, %235
  br i1 %268, label %702, label %265, !llvm.loop !608

269:                                              ; preds = %202, %194, %61
  %270 = landingpad { ptr, i32 }
          cleanup
  br label %900

271:                                              ; preds = %209, %699
  %272 = phi i64 [ 0, %209 ], [ %700, %699 ]
  %273 = getelementptr inbounds %"struct.std::pair.188", ptr %53, i64 %272
  %274 = load i32, ptr %273, align 8, !tbaa !326
  %275 = zext i32 %274 to i64
  %276 = load ptr, ptr %1, align 8, !tbaa !58
  %277 = getelementptr inbounds i32, ptr %276, i64 %275
  %278 = load i32, ptr %277, align 4, !tbaa !22
  %279 = getelementptr inbounds %"struct.std::pair.188", ptr %53, i64 %272, i32 1
  %280 = load ptr, ptr %279, align 8, !tbaa !328
  %281 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %280, i64 0, i32 1
  %282 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %280, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %283 = load ptr, ptr %282, align 8, !tbaa !31
  %284 = load ptr, ptr %281, align 8, !tbaa !32
  %285 = icmp eq ptr %283, %284
  br i1 %285, label %286, label %288

286:                                              ; preds = %438, %271
  br i1 %3, label %287, label %619

287:                                              ; preds = %286
  br i1 %38, label %699, label %448

288:                                              ; preds = %271, %438
  %289 = phi ptr [ %442, %438 ], [ %284, %271 ]
  %290 = phi i64 [ %440, %438 ], [ 0, %271 ]
  %291 = phi i32 [ %439, %438 ], [ 0, %271 ]
  %292 = getelementptr inbounds %"struct.std::pair", ptr %289, i64 %290
  %293 = load i32, ptr %292, align 8, !tbaa !37
  %294 = load ptr, ptr %37, align 8, !tbaa !21
  %295 = getelementptr inbounds i32, ptr %294, i64 -1
  %296 = load i32, ptr %295, align 4, !tbaa !22
  %297 = icmp ult i32 %296, %293
  br i1 %297, label %298, label %345

298:                                              ; preds = %288
  %299 = load ptr, ptr %211, align 8, !tbaa !417
  %300 = icmp eq ptr %294, %299
  br i1 %300, label %303, label %301

301:                                              ; preds = %298
  store i32 %293, ptr %294, align 4, !tbaa !22
  %302 = getelementptr inbounds i32, ptr %294, i64 1
  store ptr %302, ptr %37, align 8, !tbaa !313
  br label %438

303:                                              ; preds = %298
  %304 = load ptr, ptr %7, align 8, !tbaa !21
  %305 = ptrtoint ptr %294 to i64
  %306 = ptrtoint ptr %304 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 9223372036854775804
  br i1 %308, label %309, label %311

309:                                              ; preds = %303
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %310 unwind label %343

310:                                              ; preds = %309
  unreachable

311:                                              ; preds = %303
  %312 = ashr exact i64 %307, 2
  %313 = call i64 @llvm.umax.i64(i64 %312, i64 1)
  %314 = add i64 %313, %312
  %315 = icmp ult i64 %314, %312
  %316 = icmp ugt i64 %314, 2305843009213693951
  %317 = or i1 %315, %316
  %318 = select i1 %317, i64 2305843009213693951, i64 %314
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %323, label %320

320:                                              ; preds = %311
  %321 = shl nuw nsw i64 %318, 2
  %322 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %321) #21
          to label %323 unwind label %341

323:                                              ; preds = %320, %311
  %324 = phi ptr [ null, %311 ], [ %322, %320 ]
  %325 = getelementptr inbounds i32, ptr %324, i64 %312
  store i32 %293, ptr %325, align 4, !tbaa !22
  %326 = icmp sgt i64 %307, 4
  br i1 %326, label %327, label %328, !prof !23

327:                                              ; preds = %323
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %324, ptr align 4 %304, i64 %307, i1 false)
  br label %333

328:                                              ; preds = %323
  %329 = icmp eq i64 %307, 4
  br i1 %329, label %330, label %333

330:                                              ; preds = %328
  %331 = load i32, ptr %304, align 4, !tbaa !22
  store i32 %331, ptr %324, align 4, !tbaa !22
  %332 = getelementptr inbounds i32, ptr %325, i64 1
  br label %336

333:                                              ; preds = %328, %327
  %334 = getelementptr inbounds i32, ptr %325, i64 1
  %335 = icmp eq ptr %304, null
  br i1 %335, label %338, label %336

336:                                              ; preds = %330, %333
  %337 = phi ptr [ %332, %330 ], [ %334, %333 ]
  call void @_ZdlPv(ptr noundef nonnull %304) #23
  br label %338

338:                                              ; preds = %336, %333
  %339 = phi ptr [ %334, %333 ], [ %337, %336 ]
  store ptr %324, ptr %7, align 8, !tbaa !58
  store ptr %339, ptr %37, align 8, !tbaa !313
  %340 = getelementptr inbounds i32, ptr %324, i64 %318
  store ptr %340, ptr %211, align 8, !tbaa !417
  br label %438

341:                                              ; preds = %320
  %342 = landingpad { ptr, i32 }
          cleanup
  br label %900

343:                                              ; preds = %309
  %344 = landingpad { ptr, i32 }
          cleanup
  br label %900

345:                                              ; preds = %288
  %346 = load ptr, ptr %7, align 8, !tbaa !21
  %347 = ptrtoint ptr %294 to i64
  %348 = ptrtoint ptr %346 to i64
  %349 = sub i64 %347, %348
  %350 = icmp sgt i64 %349, 0
  br i1 %350, label %351, label %366

351:                                              ; preds = %345
  %352 = lshr exact i64 %349, 2
  br label %353

353:                                              ; preds = %353, %351
  %354 = phi i64 [ %352, %351 ], [ %364, %353 ]
  %355 = phi ptr [ %346, %351 ], [ %363, %353 ]
  %356 = lshr i64 %354, 1
  %357 = getelementptr inbounds i32, ptr %355, i64 %356
  %358 = load i32, ptr %357, align 4, !tbaa !22
  %359 = icmp ult i32 %358, %293
  %360 = getelementptr inbounds i32, ptr %357, i64 1
  %361 = xor i64 %356, -1
  %362 = add nsw i64 %354, %361
  %363 = select i1 %359, ptr %360, ptr %355
  %364 = select i1 %359, i64 %362, i64 %356
  %365 = icmp sgt i64 %364, 0
  br i1 %365, label %353, label %366

366:                                              ; preds = %353, %345
  %367 = phi ptr [ %346, %345 ], [ %363, %353 ]
  %368 = load i32, ptr %367, align 4, !tbaa !22
  %369 = icmp eq i32 %368, %293
  br i1 %369, label %438, label %370

370:                                              ; preds = %366
  %371 = ptrtoint ptr %367 to i64
  %372 = load ptr, ptr %211, align 8, !tbaa !417
  %373 = icmp eq ptr %294, %372
  br i1 %373, label %391, label %374

374:                                              ; preds = %370
  %375 = icmp eq ptr %294, %367
  %376 = getelementptr inbounds i32, ptr %294, i64 1
  br i1 %375, label %377, label %378

377:                                              ; preds = %374
  store i32 %293, ptr %294, align 4, !tbaa !22
  store ptr %376, ptr %37, align 8, !tbaa !313
  br label %438

378:                                              ; preds = %374
  store i32 %296, ptr %294, align 4, !tbaa !22
  store ptr %376, ptr %37, align 8, !tbaa !313
  %379 = ptrtoint ptr %295 to i64
  %380 = sub i64 %379, %371
  %381 = icmp sgt i64 %380, 4
  br i1 %381, label %382, label %386, !prof !23

382:                                              ; preds = %378
  %383 = lshr exact i64 %380, 2
  %384 = sub nsw i64 0, %383
  %385 = getelementptr inbounds i32, ptr %294, i64 %384
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %385, ptr nonnull align 4 %367, i64 %380, i1 false)
  br label %390

386:                                              ; preds = %378
  %387 = icmp eq i64 %380, 4
  br i1 %387, label %388, label %390

388:                                              ; preds = %386
  %389 = load i32, ptr %367, align 4, !tbaa !22
  store i32 %389, ptr %295, align 4, !tbaa !22
  br label %390

390:                                              ; preds = %388, %386, %382
  store i32 %293, ptr %367, align 4, !tbaa !22
  br label %438

391:                                              ; preds = %370
  %392 = icmp eq i64 %349, 9223372036854775804
  br i1 %392, label %393, label %395

393:                                              ; preds = %391
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %394 unwind label %436

394:                                              ; preds = %393
  unreachable

395:                                              ; preds = %391
  %396 = ashr exact i64 %349, 2
  %397 = call i64 @llvm.umax.i64(i64 %396, i64 1)
  %398 = add i64 %397, %396
  %399 = icmp ult i64 %398, %396
  %400 = icmp ugt i64 %398, 2305843009213693951
  %401 = or i1 %399, %400
  %402 = select i1 %401, i64 2305843009213693951, i64 %398
  %403 = sub i64 %371, %348
  %404 = ashr exact i64 %403, 2
  %405 = icmp eq i64 %402, 0
  br i1 %405, label %409, label %406

406:                                              ; preds = %395
  %407 = shl nuw nsw i64 %402, 2
  %408 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %407) #21
          to label %409 unwind label %434

409:                                              ; preds = %406, %395
  %410 = phi ptr [ null, %395 ], [ %408, %406 ]
  %411 = getelementptr inbounds i32, ptr %410, i64 %404
  store i32 %293, ptr %411, align 4, !tbaa !22
  %412 = icmp sgt i64 %403, 4
  br i1 %412, label %413, label %414, !prof !23

413:                                              ; preds = %409
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %410, ptr align 4 %346, i64 %403, i1 false)
  br label %418

414:                                              ; preds = %409
  %415 = icmp eq i64 %403, 4
  br i1 %415, label %416, label %418

416:                                              ; preds = %414
  %417 = load i32, ptr %346, align 4, !tbaa !22
  store i32 %417, ptr %410, align 4, !tbaa !22
  br label %418

418:                                              ; preds = %416, %414, %413
  %419 = getelementptr inbounds i32, ptr %411, i64 1
  %420 = sub i64 %347, %371
  %421 = icmp sgt i64 %420, 4
  br i1 %421, label %422, label %423, !prof !23

422:                                              ; preds = %418
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %419, ptr nonnull align 4 %367, i64 %420, i1 false)
  br label %427

423:                                              ; preds = %418
  %424 = icmp eq i64 %420, 4
  br i1 %424, label %425, label %427

425:                                              ; preds = %423
  %426 = load i32, ptr %367, align 4, !tbaa !22
  store i32 %426, ptr %419, align 4, !tbaa !22
  br label %427

427:                                              ; preds = %425, %423, %422
  %428 = icmp eq ptr %346, null
  br i1 %428, label %430, label %429

429:                                              ; preds = %427
  call void @_ZdlPv(ptr noundef nonnull %346) #23
  br label %430

430:                                              ; preds = %429, %427
  %431 = ashr exact i64 %420, 2
  %432 = getelementptr inbounds i32, ptr %419, i64 %431
  store ptr %410, ptr %7, align 8, !tbaa !58
  store ptr %432, ptr %37, align 8, !tbaa !313
  %433 = getelementptr inbounds i32, ptr %410, i64 %402
  store ptr %433, ptr %211, align 8, !tbaa !417
  br label %438

434:                                              ; preds = %406
  %435 = landingpad { ptr, i32 }
          cleanup
  br label %900

436:                                              ; preds = %393
  %437 = landingpad { ptr, i32 }
          cleanup
  br label %900

438:                                              ; preds = %430, %390, %377, %366, %338, %301
  %439 = add i32 %291, 1
  %440 = zext i32 %439 to i64
  %441 = load ptr, ptr %282, align 8, !tbaa !31
  %442 = load ptr, ptr %281, align 8, !tbaa !32
  %443 = ptrtoint ptr %441 to i64
  %444 = ptrtoint ptr %442 to i64
  %445 = sub i64 %443, %444
  %446 = ashr exact i64 %445, 4
  %447 = icmp ugt i64 %446, %440
  br i1 %447, label %288, label %286

448:                                              ; preds = %287, %614
  %449 = phi i64 [ %615, %614 ], [ 0, %287 ]
  %450 = load ptr, ptr %1, align 8, !tbaa !58
  %451 = getelementptr inbounds i32, ptr %450, i64 %449
  %452 = load i32, ptr %451, align 4, !tbaa !22
  %453 = load i32, ptr %212, align 8, !tbaa !61
  %454 = load ptr, ptr %213, align 8, !tbaa !58
  br label %455

455:                                              ; preds = %455, %448
  %456 = phi i32 [ %453, %448 ], [ %457, %455 ]
  %457 = add i32 %456, -1
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds i32, ptr %454, i64 %458
  %460 = load i32, ptr %459, align 4, !tbaa !22
  %461 = icmp ugt i32 %460, %278
  br i1 %461, label %455, label %462

462:                                              ; preds = %455
  %463 = load i32, ptr %214, align 8, !tbaa !61
  %464 = load ptr, ptr %215, align 8, !tbaa !58
  br label %465

465:                                              ; preds = %465, %462
  %466 = phi i32 [ %463, %462 ], [ %467, %465 ]
  %467 = add i32 %466, -1
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds i32, ptr %464, i64 %468
  %470 = load i32, ptr %469, align 4, !tbaa !22
  %471 = icmp ugt i32 %470, %452
  br i1 %471, label %465, label %472

472:                                              ; preds = %465
  %473 = sub i32 %278, %460
  %474 = zext i32 %473 to i64
  %475 = sub i32 %452, %470
  %476 = load ptr, ptr %216, align 8, !tbaa !609, !noalias !610
  %477 = load i32, ptr %217, align 8, !tbaa !22, !noalias !610
  %478 = mul i32 %477, %457
  %479 = zext i32 %478 to i64
  %480 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %476, i64 %479
  %481 = zext i32 %467 to i64
  %482 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %480, i64 %481
  %483 = load ptr, ptr %482, align 8, !tbaa !613
  %484 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %483, i64 0, i32 3
  %485 = load ptr, ptr %484, align 8, !tbaa !455
  %486 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %485, i64 %474
  %487 = getelementptr inbounds i8, ptr %486, i64 16
  %488 = getelementptr inbounds i8, ptr %486, i64 8
  %489 = load ptr, ptr %487, align 8, !tbaa !21
  %490 = icmp eq ptr %489, null
  br i1 %490, label %502, label %491

491:                                              ; preds = %472, %491
  %492 = phi ptr [ %499, %491 ], [ %489, %472 ]
  %493 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %492, i64 0, i32 1
  %494 = load i32, ptr %493, align 4, !tbaa !22
  %495 = icmp ugt i32 %494, %475
  %496 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %492, i64 0, i32 2
  %497 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %492, i64 0, i32 3
  %498 = select i1 %495, ptr %496, ptr %497
  %499 = load ptr, ptr %498, align 8, !tbaa !21
  %500 = icmp eq ptr %499, null
  br i1 %500, label %501, label %491

501:                                              ; preds = %491
  br i1 %495, label %502, label %511

502:                                              ; preds = %501, %472
  %503 = phi ptr [ %492, %501 ], [ %488, %472 ]
  %504 = getelementptr inbounds i8, ptr %486, i64 24
  %505 = load ptr, ptr %504, align 8, !tbaa !457
  %506 = icmp eq ptr %503, %505
  br i1 %506, label %515, label %507

507:                                              ; preds = %502
  %508 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %503) #26
  %509 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %508, i64 0, i32 1
  %510 = load i32, ptr %509, align 4, !tbaa !22
  br label %511

511:                                              ; preds = %507, %501
  %512 = phi i32 [ %510, %507 ], [ %494, %501 ]
  %513 = phi ptr [ %503, %507 ], [ %492, %501 ]
  %514 = icmp ult i32 %512, %475
  br i1 %514, label %515, label %535

515:                                              ; preds = %511, %502
  %516 = phi ptr [ %503, %502 ], [ %513, %511 ]
  %517 = icmp eq ptr %488, %516
  br i1 %517, label %522, label %518

518:                                              ; preds = %515
  %519 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %516, i64 0, i32 1
  %520 = load i32, ptr %519, align 4, !tbaa !22
  %521 = icmp ugt i32 %520, %475
  br label %522

522:                                              ; preds = %518, %515
  %523 = phi i1 [ true, %515 ], [ %521, %518 ]
  %524 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %525 unwind label %617

525:                                              ; preds = %522
  %526 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %524, i64 0, i32 1
  store i32 %475, ptr %526, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %523, ptr noundef nonnull %524, ptr noundef nonnull %516, ptr noundef nonnull align 8 dereferenceable(32) %488) #24
  %527 = getelementptr inbounds i8, ptr %486, i64 40
  %528 = load i64, ptr %527, align 8, !tbaa !458
  %529 = add i64 %528, 1
  store i64 %529, ptr %527, align 8, !tbaa !458
  %530 = load ptr, ptr %1, align 8, !tbaa !58
  %531 = getelementptr inbounds i32, ptr %530, i64 %449
  %532 = load i32, ptr %531, align 4, !tbaa !22
  %533 = load i32, ptr %212, align 8, !tbaa !61
  %534 = load ptr, ptr %213, align 8, !tbaa !58
  br label %535

535:                                              ; preds = %525, %511
  %536 = phi ptr [ %534, %525 ], [ %454, %511 ]
  %537 = phi i32 [ %533, %525 ], [ %453, %511 ]
  %538 = phi i32 [ %532, %525 ], [ %452, %511 ]
  br label %539

539:                                              ; preds = %539, %535
  %540 = phi i32 [ %537, %535 ], [ %541, %539 ]
  %541 = add i32 %540, -1
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds i32, ptr %536, i64 %542
  %544 = load i32, ptr %543, align 4, !tbaa !22
  %545 = icmp ugt i32 %544, %538
  br i1 %545, label %539, label %546

546:                                              ; preds = %539
  %547 = load i32, ptr %214, align 8, !tbaa !61
  %548 = load ptr, ptr %215, align 8, !tbaa !58
  br label %549

549:                                              ; preds = %549, %546
  %550 = phi i32 [ %547, %546 ], [ %551, %549 ]
  %551 = add i32 %550, -1
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds i32, ptr %548, i64 %552
  %554 = load i32, ptr %553, align 4, !tbaa !22
  %555 = icmp ugt i32 %554, %278
  br i1 %555, label %549, label %556

556:                                              ; preds = %549
  %557 = sub i32 %538, %544
  %558 = zext i32 %557 to i64
  %559 = sub i32 %278, %554
  %560 = load ptr, ptr %216, align 8, !tbaa !609, !noalias !615
  %561 = load i32, ptr %217, align 8, !tbaa !22, !noalias !615
  %562 = mul i32 %561, %541
  %563 = zext i32 %562 to i64
  %564 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %560, i64 %563
  %565 = zext i32 %551 to i64
  %566 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %564, i64 %565
  %567 = load ptr, ptr %566, align 8, !tbaa !613
  %568 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %567, i64 0, i32 3
  %569 = load ptr, ptr %568, align 8, !tbaa !455
  %570 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %569, i64 %558
  %571 = getelementptr inbounds i8, ptr %570, i64 16
  %572 = getelementptr inbounds i8, ptr %570, i64 8
  %573 = load ptr, ptr %571, align 8, !tbaa !21
  %574 = icmp eq ptr %573, null
  br i1 %574, label %586, label %575

575:                                              ; preds = %556, %575
  %576 = phi ptr [ %583, %575 ], [ %573, %556 ]
  %577 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %576, i64 0, i32 1
  %578 = load i32, ptr %577, align 4, !tbaa !22
  %579 = icmp ugt i32 %578, %559
  %580 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %576, i64 0, i32 2
  %581 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %576, i64 0, i32 3
  %582 = select i1 %579, ptr %580, ptr %581
  %583 = load ptr, ptr %582, align 8, !tbaa !21
  %584 = icmp eq ptr %583, null
  br i1 %584, label %585, label %575

585:                                              ; preds = %575
  br i1 %579, label %586, label %595

586:                                              ; preds = %585, %556
  %587 = phi ptr [ %576, %585 ], [ %572, %556 ]
  %588 = getelementptr inbounds i8, ptr %570, i64 24
  %589 = load ptr, ptr %588, align 8, !tbaa !457
  %590 = icmp eq ptr %587, %589
  br i1 %590, label %599, label %591

591:                                              ; preds = %586
  %592 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %587) #26
  %593 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %592, i64 0, i32 1
  %594 = load i32, ptr %593, align 4, !tbaa !22
  br label %595

595:                                              ; preds = %591, %585
  %596 = phi i32 [ %594, %591 ], [ %578, %585 ]
  %597 = phi ptr [ %587, %591 ], [ %576, %585 ]
  %598 = icmp ult i32 %596, %559
  br i1 %598, label %599, label %614

599:                                              ; preds = %595, %586
  %600 = phi ptr [ %587, %586 ], [ %597, %595 ]
  %601 = icmp eq ptr %572, %600
  br i1 %601, label %606, label %602

602:                                              ; preds = %599
  %603 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %600, i64 0, i32 1
  %604 = load i32, ptr %603, align 4, !tbaa !22
  %605 = icmp ugt i32 %604, %559
  br label %606

606:                                              ; preds = %602, %599
  %607 = phi i1 [ true, %599 ], [ %605, %602 ]
  %608 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %609 unwind label %617

609:                                              ; preds = %606
  %610 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %608, i64 0, i32 1
  store i32 %559, ptr %610, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %607, ptr noundef nonnull %608, ptr noundef nonnull %600, ptr noundef nonnull align 8 dereferenceable(32) %572) #24
  %611 = getelementptr inbounds i8, ptr %570, i64 40
  %612 = load i64, ptr %611, align 8, !tbaa !458
  %613 = add i64 %612, 1
  store i64 %613, ptr %611, align 8, !tbaa !458
  br label %614

614:                                              ; preds = %609, %595
  %615 = add nuw nsw i64 %449, 1
  %616 = icmp eq i64 %615, %219
  br i1 %616, label %699, label %448

617:                                              ; preds = %606, %522
  %618 = landingpad { ptr, i32 }
          cleanup
  br label %900

619:                                              ; preds = %286
  %620 = load i32, ptr %212, align 8, !tbaa !61
  %621 = load ptr, ptr %213, align 8, !tbaa !58
  br label %622

622:                                              ; preds = %622, %619
  %623 = phi i32 [ %620, %619 ], [ %624, %622 ]
  %624 = add i32 %623, -1
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds i32, ptr %621, i64 %625
  %627 = load i32, ptr %626, align 4, !tbaa !22
  %628 = icmp ugt i32 %627, %278
  br i1 %628, label %622, label %629

629:                                              ; preds = %622
  %630 = load i32, ptr %214, align 8, !tbaa !61
  %631 = load ptr, ptr %215, align 8, !tbaa !58
  br label %632

632:                                              ; preds = %632, %629
  %633 = phi i32 [ %630, %629 ], [ %634, %632 ]
  %634 = add i32 %633, -1
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds i32, ptr %631, i64 %635
  %637 = load i32, ptr %636, align 4, !tbaa !22
  %638 = icmp ugt i32 %637, %278
  br i1 %638, label %632, label %639

639:                                              ; preds = %632
  %640 = sub i32 %278, %627
  %641 = zext i32 %640 to i64
  %642 = sub i32 %278, %637
  %643 = load ptr, ptr %216, align 8, !tbaa !609, !noalias !618
  %644 = load i32, ptr %217, align 8, !tbaa !22, !noalias !618
  %645 = mul i32 %644, %624
  %646 = zext i32 %645 to i64
  %647 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %643, i64 %646
  %648 = zext i32 %634 to i64
  %649 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %647, i64 %648
  %650 = load ptr, ptr %649, align 8, !tbaa !613
  %651 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %650, i64 0, i32 3
  %652 = load ptr, ptr %651, align 8, !tbaa !455
  %653 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %652, i64 %641
  %654 = getelementptr inbounds i8, ptr %653, i64 16
  %655 = getelementptr inbounds i8, ptr %653, i64 8
  %656 = load ptr, ptr %654, align 8, !tbaa !21
  %657 = icmp eq ptr %656, null
  br i1 %657, label %669, label %658

658:                                              ; preds = %639, %658
  %659 = phi ptr [ %666, %658 ], [ %656, %639 ]
  %660 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %659, i64 0, i32 1
  %661 = load i32, ptr %660, align 4, !tbaa !22
  %662 = icmp ugt i32 %661, %642
  %663 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %659, i64 0, i32 2
  %664 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %659, i64 0, i32 3
  %665 = select i1 %662, ptr %663, ptr %664
  %666 = load ptr, ptr %665, align 8, !tbaa !21
  %667 = icmp eq ptr %666, null
  br i1 %667, label %668, label %658

668:                                              ; preds = %658
  br i1 %662, label %669, label %678

669:                                              ; preds = %668, %639
  %670 = phi ptr [ %659, %668 ], [ %655, %639 ]
  %671 = getelementptr inbounds i8, ptr %653, i64 24
  %672 = load ptr, ptr %671, align 8, !tbaa !457
  %673 = icmp eq ptr %670, %672
  br i1 %673, label %682, label %674

674:                                              ; preds = %669
  %675 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %670) #26
  %676 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %675, i64 0, i32 1
  %677 = load i32, ptr %676, align 4, !tbaa !22
  br label %678

678:                                              ; preds = %674, %668
  %679 = phi i32 [ %677, %674 ], [ %661, %668 ]
  %680 = phi ptr [ %670, %674 ], [ %659, %668 ]
  %681 = icmp ult i32 %679, %642
  br i1 %681, label %682, label %699

682:                                              ; preds = %678, %669
  %683 = phi ptr [ %670, %669 ], [ %680, %678 ]
  %684 = icmp eq ptr %655, %683
  br i1 %684, label %689, label %685

685:                                              ; preds = %682
  %686 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %683, i64 0, i32 1
  %687 = load i32, ptr %686, align 4, !tbaa !22
  %688 = icmp ugt i32 %687, %642
  br label %689

689:                                              ; preds = %685, %682
  %690 = phi i1 [ true, %682 ], [ %688, %685 ]
  %691 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %692 unwind label %697

692:                                              ; preds = %689
  %693 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %691, i64 0, i32 1
  store i32 %642, ptr %693, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %690, ptr noundef nonnull %691, ptr noundef nonnull %683, ptr noundef nonnull align 8 dereferenceable(32) %655) #24
  %694 = getelementptr inbounds i8, ptr %653, i64 40
  %695 = load i64, ptr %694, align 8, !tbaa !458
  %696 = add i64 %695, 1
  store i64 %696, ptr %694, align 8, !tbaa !458
  br label %699

697:                                              ; preds = %689
  %698 = landingpad { ptr, i32 }
          cleanup
  br label %900

699:                                              ; preds = %614, %287, %692, %678
  %700 = add nuw nsw i64 %272, 1
  %701 = icmp eq i64 %700, %218
  br i1 %701, label %220, label %271

702:                                              ; preds = %265, %261, %220
  %703 = phi ptr [ null, %220 ], [ %233, %261 ], [ %233, %265 ]
  %704 = load i32, ptr %19, align 8, !tbaa !603
  store i32 0, ptr %703, align 4, !tbaa !22
  %705 = icmp ugt i32 %704, 1
  br i1 %705, label %706, label %710

706:                                              ; preds = %702
  %707 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 4, i32 1
  %708 = load ptr, ptr %707, align 8, !tbaa !58
  %709 = zext i32 %704 to i64
  br label %720

710:                                              ; preds = %745, %702
  %711 = getelementptr inbounds i32, ptr %703, i64 1
  %712 = load i32, ptr %711, align 4, !tbaa !22
  %713 = ashr exact i64 %225, 2
  %714 = zext i32 %712 to i64
  %715 = icmp ugt i64 %713, %714
  br i1 %715, label %716, label %772

716:                                              ; preds = %710
  %717 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 4
  %718 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 4, i32 1
  %719 = load ptr, ptr %718, align 8, !tbaa !58
  br label %754

720:                                              ; preds = %745, %706
  %721 = phi i64 [ 1, %706 ], [ %752, %745 ]
  %722 = phi ptr [ %222, %706 ], [ %747, %745 ]
  %723 = getelementptr inbounds i32, ptr %708, i64 %721
  %724 = load i32, ptr %723, align 4, !tbaa !22
  %725 = ptrtoint ptr %722 to i64
  %726 = sub i64 %223, %725
  %727 = icmp sgt i64 %726, 0
  br i1 %727, label %728, label %745

728:                                              ; preds = %720
  %729 = lshr exact i64 %726, 2
  br label %730

730:                                              ; preds = %730, %728
  %731 = phi i64 [ %729, %728 ], [ %741, %730 ]
  %732 = phi ptr [ %722, %728 ], [ %740, %730 ]
  %733 = lshr i64 %731, 1
  %734 = getelementptr inbounds i32, ptr %732, i64 %733
  %735 = load i32, ptr %734, align 4, !tbaa !22
  %736 = icmp ult i32 %735, %724
  %737 = getelementptr inbounds i32, ptr %734, i64 1
  %738 = xor i64 %733, -1
  %739 = add nsw i64 %731, %738
  %740 = select i1 %736, ptr %737, ptr %732
  %741 = select i1 %736, i64 %739, i64 %733
  %742 = icmp sgt i64 %741, 0
  br i1 %742, label %730, label %743

743:                                              ; preds = %730
  %744 = ptrtoint ptr %740 to i64
  br label %745

745:                                              ; preds = %743, %720
  %746 = phi i64 [ %744, %743 ], [ %725, %720 ]
  %747 = phi ptr [ %740, %743 ], [ %722, %720 ]
  %748 = sub i64 %746, %224
  %749 = lshr exact i64 %748, 2
  %750 = trunc i64 %749 to i32
  %751 = getelementptr inbounds i32, ptr %703, i64 %721
  store i32 %750, ptr %751, align 4, !tbaa !22
  %752 = add nuw nsw i64 %721, 1
  %753 = icmp eq i64 %752, %709
  br i1 %753, label %710, label %720

754:                                              ; preds = %767, %716
  %755 = phi i64 [ %714, %716 ], [ %770, %767 ]
  %756 = phi i32 [ %712, %716 ], [ %769, %767 ]
  %757 = getelementptr inbounds i32, ptr %222, i64 %755
  %758 = load i32, ptr %757, align 4, !tbaa !22
  %759 = load i32, ptr %717, align 8, !tbaa !61
  br label %760

760:                                              ; preds = %760, %754
  %761 = phi i32 [ %759, %754 ], [ %762, %760 ]
  %762 = add i32 %761, -1
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds i32, ptr %719, i64 %763
  %765 = load i32, ptr %764, align 4, !tbaa !22
  %766 = icmp ugt i32 %765, %758
  br i1 %766, label %760, label %767

767:                                              ; preds = %760
  %768 = sub i32 %758, %765
  store i32 %768, ptr %757, align 4, !tbaa !22
  %769 = add i32 %756, 1
  %770 = zext i32 %769 to i64
  %771 = icmp ugt i64 %713, %770
  br i1 %771, label %754, label %772

772:                                              ; preds = %767, %710
  %773 = icmp eq i32 %20, 0
  br i1 %773, label %892, label %774

774:                                              ; preds = %772
  %775 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 3, i32 0, i32 1
  %776 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %777 = zext i32 %20 to i64
  br label %783

778:                                              ; preds = %802, %783
  %779 = phi ptr [ %784, %783 ], [ %887, %802 ]
  %780 = icmp eq i64 %786, %777
  br i1 %780, label %892, label %783

781:                                              ; preds = %231
  %782 = landingpad { ptr, i32 }
          cleanup
  br label %900

783:                                              ; preds = %774, %778
  %784 = phi ptr [ %222, %774 ], [ %779, %778 ]
  %785 = phi i64 [ 0, %774 ], [ %786, %778 ]
  %786 = add nuw nsw i64 %785, 1
  %787 = getelementptr inbounds i32, ptr %703, i64 %786
  %788 = load i32, ptr %787, align 4, !tbaa !22
  %789 = getelementptr inbounds i32, ptr %703, i64 %785
  %790 = load i32, ptr %789, align 4, !tbaa !22
  %791 = icmp ult i32 %790, %788
  br i1 %791, label %792, label %778

792:                                              ; preds = %783
  %793 = zext i32 %790 to i64
  %794 = zext i32 %788 to i64
  %795 = trunc i64 %785 to i32
  br label %796

796:                                              ; preds = %792, %802
  %797 = phi ptr [ %784, %792 ], [ %887, %802 ]
  %798 = phi i64 [ %793, %792 ], [ %803, %802 ]
  %799 = getelementptr inbounds i32, ptr %797, i64 %798
  %800 = load i32, ptr %799, align 4, !tbaa !22
  %801 = zext i32 %800 to i64
  br label %805

802:                                              ; preds = %886
  %803 = add nuw nsw i64 %798, 1
  %804 = icmp eq i64 %803, %794
  br i1 %804, label %778, label %796

805:                                              ; preds = %796, %886
  %806 = phi ptr [ %797, %796 ], [ %887, %886 ]
  %807 = phi i64 [ 0, %796 ], [ %809, %886 ]
  %808 = phi ptr [ %797, %796 ], [ %888, %886 ]
  %809 = add nuw nsw i64 %807, 1
  %810 = getelementptr inbounds i32, ptr %703, i64 %809
  %811 = load i32, ptr %810, align 4, !tbaa !22
  %812 = zext i32 %811 to i64
  %813 = getelementptr inbounds i32, ptr %806, i64 %812
  %814 = icmp eq ptr %808, %813
  br i1 %814, label %886, label %815

815:                                              ; preds = %805
  %816 = load ptr, ptr %775, align 8, !tbaa !609, !noalias !621
  %817 = load i32, ptr %776, align 8, !tbaa !22, !noalias !621
  %818 = mul i32 %817, %795
  %819 = zext i32 %818 to i64
  %820 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %816, i64 %819
  %821 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %820, i64 %807
  %822 = load ptr, ptr %821, align 8, !tbaa !613
  %823 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %822, i64 0, i32 3
  %824 = load ptr, ptr %823, align 8, !tbaa !455
  %825 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %824, i64 %801
  %826 = getelementptr inbounds i8, ptr %825, i64 8
  %827 = getelementptr inbounds i8, ptr %825, i64 40
  %828 = getelementptr inbounds i8, ptr %825, i64 32
  %829 = getelementptr inbounds i8, ptr %825, i64 16
  %830 = getelementptr inbounds i8, ptr %825, i64 24
  %831 = load i64, ptr %827, align 8, !tbaa !458
  br label %832

832:                                              ; preds = %882, %815
  %833 = phi i64 [ %831, %815 ], [ %883, %882 ]
  %834 = phi ptr [ %808, %815 ], [ %884, %882 ]
  %835 = icmp eq i64 %833, 0
  %836 = load i32, ptr %834, align 4, !tbaa !22
  br i1 %835, label %842, label %837

837:                                              ; preds = %832
  %838 = load ptr, ptr %828, align 8, !tbaa !21
  %839 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %838, i64 0, i32 1
  %840 = load i32, ptr %839, align 4, !tbaa !22
  %841 = icmp ult i32 %840, %836
  br i1 %841, label %868, label %842

842:                                              ; preds = %837, %832
  %843 = load ptr, ptr %829, align 8, !tbaa !21
  %844 = icmp eq ptr %843, null
  br i1 %844, label %856, label %845

845:                                              ; preds = %842, %845
  %846 = phi ptr [ %853, %845 ], [ %843, %842 ]
  %847 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %846, i64 0, i32 1
  %848 = load i32, ptr %847, align 4, !tbaa !22
  %849 = icmp ult i32 %836, %848
  %850 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %846, i64 0, i32 2
  %851 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %846, i64 0, i32 3
  %852 = select i1 %849, ptr %850, ptr %851
  %853 = load ptr, ptr %852, align 8, !tbaa !21
  %854 = icmp eq ptr %853, null
  br i1 %854, label %855, label %845

855:                                              ; preds = %845
  br i1 %849, label %856, label %864

856:                                              ; preds = %855, %842
  %857 = phi ptr [ %846, %855 ], [ %826, %842 ]
  %858 = load ptr, ptr %830, align 8, !tbaa !457
  %859 = icmp eq ptr %857, %858
  br i1 %859, label %868, label %860

860:                                              ; preds = %856
  %861 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %857) #26
  %862 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %861, i64 0, i32 1
  %863 = load i32, ptr %862, align 4, !tbaa !22
  br label %864

864:                                              ; preds = %860, %855
  %865 = phi i32 [ %863, %860 ], [ %848, %855 ]
  %866 = phi ptr [ %857, %860 ], [ %846, %855 ]
  %867 = icmp ult i32 %865, %836
  br i1 %867, label %868, label %882

868:                                              ; preds = %864, %856, %837
  %869 = phi ptr [ %857, %856 ], [ %838, %837 ], [ %866, %864 ]
  %870 = icmp eq ptr %826, %869
  br i1 %870, label %875, label %871

871:                                              ; preds = %868
  %872 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %869, i64 0, i32 1
  %873 = load i32, ptr %872, align 4, !tbaa !22
  %874 = icmp ult i32 %836, %873
  br label %875

875:                                              ; preds = %871, %868
  %876 = phi i1 [ true, %868 ], [ %874, %871 ]
  %877 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %878 unwind label %890

878:                                              ; preds = %875
  %879 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %877, i64 0, i32 1
  store i32 %836, ptr %879, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %876, ptr noundef nonnull %877, ptr noundef nonnull %869, ptr noundef nonnull align 8 dereferenceable(32) %826) #24
  %880 = load i64, ptr %827, align 8, !tbaa !458
  %881 = add i64 %880, 1
  store i64 %881, ptr %827, align 8, !tbaa !458
  br label %882

882:                                              ; preds = %878, %864
  %883 = phi i64 [ %833, %864 ], [ %881, %878 ]
  %884 = getelementptr inbounds i32, ptr %834, i64 1
  %885 = icmp eq ptr %884, %813
  br i1 %885, label %886, label %832

886:                                              ; preds = %882, %805
  %887 = load ptr, ptr %7, align 8, !tbaa !21
  %888 = getelementptr inbounds i32, ptr %887, i64 %812
  %889 = icmp eq i64 %809, %777
  br i1 %889, label %802, label %805

890:                                              ; preds = %875
  %891 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %703) #23
  br label %900

892:                                              ; preds = %778, %772
  call void @_ZdlPv(ptr noundef nonnull %703) #23
  %893 = icmp eq ptr %53, null
  br i1 %893, label %895, label %894

894:                                              ; preds = %892
  call void @_ZdlPv(ptr noundef nonnull %53) #23
  br label %895

895:                                              ; preds = %894, %892
  %896 = load ptr, ptr %7, align 8, !tbaa !58
  %897 = icmp eq ptr %896, null
  br i1 %897, label %899, label %898

898:                                              ; preds = %895
  call void @_ZdlPv(ptr noundef nonnull %896) #23
  br label %899

899:                                              ; preds = %895, %898
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  br label %2126

900:                                              ; preds = %434, %436, %341, %343, %186, %188, %697, %617, %890, %781, %269
  %901 = phi ptr [ %53, %269 ], [ %53, %617 ], [ %53, %697 ], [ %53, %890 ], [ %53, %781 ], [ %77, %186 ], [ %77, %188 ], [ %53, %343 ], [ %53, %341 ], [ %53, %436 ], [ %53, %434 ]
  %902 = phi { ptr, i32 } [ %270, %269 ], [ %618, %617 ], [ %698, %697 ], [ %891, %890 ], [ %782, %781 ], [ %187, %186 ], [ %189, %188 ], [ %344, %343 ], [ %342, %341 ], [ %437, %436 ], [ %435, %434 ]
  %903 = icmp eq ptr %901, null
  br i1 %903, label %905, label %904

904:                                              ; preds = %900
  call void @_ZdlPv(ptr noundef nonnull %901) #23
  br label %905

905:                                              ; preds = %904, %900
  %906 = load ptr, ptr %7, align 8, !tbaa !58
  %907 = icmp eq ptr %906, null
  br i1 %907, label %909, label %908

908:                                              ; preds = %905
  call void @_ZdlPv(ptr noundef nonnull %906) #23
  br label %909

909:                                              ; preds = %908, %905, %72
  %910 = phi { ptr, i32 } [ %73, %72 ], [ %902, %905 ], [ %902, %908 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #24
  br label %2163

911:                                              ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #24
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #24
  store i32 -1, ptr %9, align 8, !tbaa !317
  %912 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %912, align 4, !tbaa !319
  %913 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %913, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  %914 = icmp eq i64 %24, 0
  br i1 %914, label %915, label %917

915:                                              ; preds = %911
  %916 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  br label %960

917:                                              ; preds = %911
  %918 = shl nuw nsw i64 %24, 4
  %919 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %918) #21
          to label %920 unwind label %1010

920:                                              ; preds = %917
  store ptr %919, ptr %8, align 8, !tbaa !321
  %921 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %919, i64 %24
  %922 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 2
  store ptr %921, ptr %922, align 8, !tbaa !323
  %923 = and i64 %17, 3
  %924 = icmp eq i64 %923, 0
  br i1 %924, label %935, label %925

925:                                              ; preds = %920, %925
  %926 = phi ptr [ %932, %925 ], [ %919, %920 ]
  %927 = phi i64 [ %931, %925 ], [ %24, %920 ]
  %928 = phi i64 [ %933, %925 ], [ 0, %920 ]
  %929 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %926, i64 0, i32 2
  store ptr null, ptr %929, align 8, !tbaa !320
  store i32 -1, ptr %926, align 8, !tbaa !317
  %930 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %926, i64 0, i32 1
  store i32 -1, ptr %930, align 4, !tbaa !319
  %931 = add nsw i64 %927, -1
  %932 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %926, i64 1
  %933 = add i64 %928, 1
  %934 = icmp eq i64 %933, %923
  br i1 %934, label %935, label %925, !llvm.loop !624

935:                                              ; preds = %925, %920
  %936 = phi ptr [ undef, %920 ], [ %932, %925 ]
  %937 = phi ptr [ %919, %920 ], [ %932, %925 ]
  %938 = phi i64 [ %24, %920 ], [ %931, %925 ]
  %939 = icmp ult i64 %24, 4
  br i1 %939, label %957, label %940

940:                                              ; preds = %935, %940
  %941 = phi ptr [ %955, %940 ], [ %937, %935 ]
  %942 = phi i64 [ %954, %940 ], [ %938, %935 ]
  %943 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %941, i64 0, i32 2
  store ptr null, ptr %943, align 8, !tbaa !320
  store i32 -1, ptr %941, align 8, !tbaa !317
  %944 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %941, i64 0, i32 1
  store i32 -1, ptr %944, align 4, !tbaa !319
  %945 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %941, i64 1
  %946 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %941, i64 1, i32 2
  store ptr null, ptr %946, align 8, !tbaa !320
  store i32 -1, ptr %945, align 8, !tbaa !317
  %947 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %941, i64 1, i32 1
  store i32 -1, ptr %947, align 4, !tbaa !319
  %948 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %941, i64 2
  %949 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %941, i64 2, i32 2
  store ptr null, ptr %949, align 8, !tbaa !320
  store i32 -1, ptr %948, align 8, !tbaa !317
  %950 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %941, i64 2, i32 1
  store i32 -1, ptr %950, align 4, !tbaa !319
  %951 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %941, i64 3
  %952 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %941, i64 3, i32 2
  store ptr null, ptr %952, align 8, !tbaa !320
  store i32 -1, ptr %951, align 8, !tbaa !317
  %953 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %941, i64 3, i32 1
  store i32 -1, ptr %953, align 4, !tbaa !319
  %954 = add nsw i64 %942, -4
  %955 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %941, i64 4
  %956 = icmp eq i64 %954, 0
  br i1 %956, label %957, label %940

957:                                              ; preds = %940, %935
  %958 = phi ptr [ %936, %935 ], [ %955, %940 ]
  %959 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  store ptr %958, ptr %959, align 8, !tbaa !325
  br label %960

960:                                              ; preds = %957, %915
  %961 = phi ptr [ null, %915 ], [ %919, %957 ]
  %962 = phi ptr [ null, %915 ], [ %958, %957 ]
  %963 = phi ptr [ %916, %915 ], [ %959, %957 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #24
  %964 = icmp eq i32 %18, 0
  br i1 %964, label %975, label %965

965:                                              ; preds = %960
  %966 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %967 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %968 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %969 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %970 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %971 = and i64 %17, 4294967295
  br label %1013

972:                                              ; preds = %1120
  %973 = load ptr, ptr %963, align 8, !tbaa !21
  %974 = load ptr, ptr %8, align 8, !tbaa !321
  br label %975

975:                                              ; preds = %972, %960
  %976 = phi ptr [ %961, %960 ], [ %974, %972 ]
  %977 = phi ptr [ %962, %960 ], [ %973, %972 ]
  %978 = phi ptr [ null, %960 ], [ %1122, %972 ]
  %979 = phi ptr [ null, %960 ], [ %1123, %972 ]
  %980 = phi i32 [ 0, %960 ], [ %1124, %972 ]
  %981 = zext i32 %980 to i64
  store i32 -1, ptr %10, align 8, !tbaa !317
  %982 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %10, i64 0, i32 1
  store i32 -1, ptr %982, align 4, !tbaa !319
  %983 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %10, i64 0, i32 2
  store ptr null, ptr %983, align 8, !tbaa !320
  %984 = ptrtoint ptr %977 to i64
  %985 = ptrtoint ptr %976 to i64
  %986 = sub i64 %984, %985
  %987 = ashr exact i64 %986, 4
  %988 = icmp ult i64 %987, %981
  br i1 %988, label %989, label %991

989:                                              ; preds = %975
  %990 = sub nsw i64 %981, %987
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr %977, i64 noundef %990, ptr noundef nonnull align 8 dereferenceable(16) %10)
          to label %1131 unwind label %1230

991:                                              ; preds = %975
  %992 = icmp ugt i64 %987, %981
  br i1 %992, label %993, label %1131

993:                                              ; preds = %991
  %994 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %976, i64 %981
  %995 = icmp eq ptr %977, %994
  br i1 %995, label %1131, label %996

996:                                              ; preds = %993, %1006
  %997 = phi ptr [ %1007, %1006 ], [ %994, %993 ]
  %998 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %997, i64 0, i32 2
  %999 = load ptr, ptr %998, align 8, !tbaa !320
  %1000 = icmp eq ptr %999, null
  br i1 %1000, label %1006, label %1001

1001:                                             ; preds = %996
  %1002 = load ptr, ptr %999, align 8, !tbaa !32
  %1003 = icmp eq ptr %1002, null
  br i1 %1003, label %1005, label %1004

1004:                                             ; preds = %1001
  tail call void @_ZdlPv(ptr noundef nonnull %1002) #23
  br label %1005

1005:                                             ; preds = %1004, %1001
  tail call void @_ZdlPv(ptr noundef nonnull %999) #23
  store ptr null, ptr %998, align 8, !tbaa !320
  br label %1006

1006:                                             ; preds = %1005, %996
  %1007 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %997, i64 1
  %1008 = icmp eq ptr %1007, %977
  br i1 %1008, label %1009, label %996

1009:                                             ; preds = %1006
  store ptr %994, ptr %963, align 8, !tbaa !325
  br label %1131

1010:                                             ; preds = %917
  %1011 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %9)
          to label %1012 unwind label %2165

1012:                                             ; preds = %1010
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #24
  br label %2161

1013:                                             ; preds = %965, %1120
  %1014 = phi i64 [ 0, %965 ], [ %1125, %1120 ]
  %1015 = phi i32 [ 0, %965 ], [ %1124, %1120 ]
  %1016 = phi ptr [ null, %965 ], [ %1123, %1120 ]
  %1017 = phi ptr [ null, %965 ], [ %1122, %1120 ]
  %1018 = phi ptr [ null, %965 ], [ %1121, %1120 ]
  %1019 = load ptr, ptr %967, align 8, !tbaa !55
  %1020 = load i32, ptr %968, align 8, !tbaa !57
  %1021 = load ptr, ptr %966, align 8, !tbaa !55
  %1022 = ptrtoint ptr %1019 to i64
  %1023 = ptrtoint ptr %1021 to i64
  %1024 = sub i64 %1022, %1023
  %1025 = shl nsw i64 %1024, 3
  %1026 = zext i32 %1020 to i64
  %1027 = add nsw i64 %1025, %1026
  %1028 = load ptr, ptr %1, align 8, !tbaa !58
  %1029 = getelementptr inbounds i32, ptr %1028, i64 %1014
  %1030 = load i32, ptr %1029, align 4, !tbaa !22
  %1031 = zext i32 %1030 to i64
  %1032 = icmp ugt i64 %1027, %1031
  br i1 %1032, label %1033, label %1043

1033:                                             ; preds = %1013
  %1034 = lshr i32 %1030, 6
  %1035 = zext i32 %1034 to i64
  %1036 = getelementptr inbounds i64, ptr %1021, i64 %1035
  %1037 = and i32 %1030, 63
  %1038 = zext i32 %1037 to i64
  %1039 = shl nuw i64 1, %1038
  %1040 = load i64, ptr %1036, align 8, !tbaa !42
  %1041 = and i64 %1040, %1039
  %1042 = icmp eq i64 %1041, 0
  br i1 %1042, label %1043, label %1050

1043:                                             ; preds = %1033, %1013
  %1044 = zext i32 %1015 to i64
  %1045 = load ptr, ptr %8, align 8, !tbaa !321
  %1046 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1045, i64 %1044
  store i32 %1030, ptr %1046, align 8, !tbaa !317
  %1047 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1045, i64 %1044, i32 1
  %1048 = trunc i64 %1014 to i32
  store i32 %1048, ptr %1047, align 4, !tbaa !319
  %1049 = add i32 %1015, 1
  br label %1120

1050:                                             ; preds = %1033
  %1051 = load ptr, ptr %969, align 8, !tbaa !21
  %1052 = load ptr, ptr %970, align 8, !tbaa !21
  %1053 = ptrtoint ptr %1052 to i64
  %1054 = ptrtoint ptr %1051 to i64
  %1055 = sub i64 %1053, %1054
  %1056 = icmp sgt i64 %1055, 0
  br i1 %1056, label %1057, label %1072

1057:                                             ; preds = %1050
  %1058 = udiv exact i64 %1055, 40
  br label %1059

1059:                                             ; preds = %1059, %1057
  %1060 = phi i64 [ %1058, %1057 ], [ %1070, %1059 ]
  %1061 = phi ptr [ %1051, %1057 ], [ %1069, %1059 ]
  %1062 = lshr i64 %1060, 1
  %1063 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1061, i64 %1062
  %1064 = load i32, ptr %1063, align 8, !tbaa !24
  %1065 = icmp ult i32 %1064, %1030
  %1066 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1063, i64 1
  %1067 = xor i64 %1062, -1
  %1068 = add nsw i64 %1060, %1067
  %1069 = select i1 %1065, ptr %1066, ptr %1061
  %1070 = select i1 %1065, i64 %1068, i64 %1062
  %1071 = icmp sgt i64 %1070, 0
  br i1 %1071, label %1059, label %1072

1072:                                             ; preds = %1059, %1050
  %1073 = phi ptr [ %1051, %1050 ], [ %1069, %1059 ]
  %1074 = icmp eq ptr %1017, %1018
  br i1 %1074, label %1078, label %1075

1075:                                             ; preds = %1072
  %1076 = trunc i64 %1014 to i32
  store i32 %1076, ptr %1017, align 8
  %1077 = getelementptr inbounds i8, ptr %1017, i64 8
  store ptr %1073, ptr %1077, align 8
  br label %1115

1078:                                             ; preds = %1072
  %1079 = ptrtoint ptr %1017 to i64
  %1080 = ptrtoint ptr %1016 to i64
  %1081 = sub i64 %1079, %1080
  %1082 = icmp eq i64 %1081, 9223372036854775792
  br i1 %1082, label %1083, label %1085

1083:                                             ; preds = %1078
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %1084 unwind label %1129

1084:                                             ; preds = %1083
  unreachable

1085:                                             ; preds = %1078
  %1086 = ashr exact i64 %1081, 4
  %1087 = tail call i64 @llvm.umax.i64(i64 %1086, i64 1)
  %1088 = add i64 %1087, %1086
  %1089 = icmp ult i64 %1088, %1086
  %1090 = icmp ugt i64 %1088, 576460752303423487
  %1091 = or i1 %1089, %1090
  %1092 = select i1 %1091, i64 576460752303423487, i64 %1088
  %1093 = icmp eq i64 %1092, 0
  br i1 %1093, label %1097, label %1094

1094:                                             ; preds = %1085
  %1095 = shl nuw nsw i64 %1092, 4
  %1096 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1095) #21
          to label %1097 unwind label %1127

1097:                                             ; preds = %1094, %1085
  %1098 = phi ptr [ null, %1085 ], [ %1096, %1094 ]
  %1099 = getelementptr inbounds %"struct.std::pair.188", ptr %1098, i64 %1086
  %1100 = trunc i64 %1014 to i32
  store i32 %1100, ptr %1099, align 8
  %1101 = getelementptr inbounds i8, ptr %1099, i64 8
  store ptr %1073, ptr %1101, align 8
  %1102 = icmp eq ptr %1016, %1017
  br i1 %1102, label %1109, label %1103

1103:                                             ; preds = %1097, %1103
  %1104 = phi ptr [ %1107, %1103 ], [ %1098, %1097 ]
  %1105 = phi ptr [ %1106, %1103 ], [ %1016, %1097 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %1104, ptr noundef nonnull align 8 dereferenceable(16) %1105, i64 16, i1 false)
  %1106 = getelementptr inbounds %"struct.std::pair.188", ptr %1105, i64 1
  %1107 = getelementptr inbounds %"struct.std::pair.188", ptr %1104, i64 1
  %1108 = icmp eq ptr %1106, %1017
  br i1 %1108, label %1109, label %1103

1109:                                             ; preds = %1103, %1097
  %1110 = phi ptr [ %1098, %1097 ], [ %1107, %1103 ]
  %1111 = icmp eq ptr %1016, null
  br i1 %1111, label %1113, label %1112

1112:                                             ; preds = %1109
  tail call void @_ZdlPv(ptr noundef nonnull %1016) #23
  br label %1113

1113:                                             ; preds = %1112, %1109
  %1114 = getelementptr inbounds %"struct.std::pair.188", ptr %1098, i64 %1092
  br label %1115

1115:                                             ; preds = %1113, %1075
  %1116 = phi ptr [ %1114, %1113 ], [ %1018, %1075 ]
  %1117 = phi ptr [ %1110, %1113 ], [ %1017, %1075 ]
  %1118 = phi ptr [ %1098, %1113 ], [ %1016, %1075 ]
  %1119 = getelementptr inbounds %"struct.std::pair.188", ptr %1117, i64 1
  br label %1120

1120:                                             ; preds = %1115, %1043
  %1121 = phi ptr [ %1116, %1115 ], [ %1018, %1043 ]
  %1122 = phi ptr [ %1119, %1115 ], [ %1017, %1043 ]
  %1123 = phi ptr [ %1118, %1115 ], [ %1016, %1043 ]
  %1124 = phi i32 [ %1015, %1115 ], [ %1049, %1043 ]
  %1125 = add nuw nsw i64 %1014, 1
  %1126 = icmp eq i64 %1125, %971
  br i1 %1126, label %972, label %1013

1127:                                             ; preds = %1094
  %1128 = landingpad { ptr, i32 }
          cleanup
  br label %2133

1129:                                             ; preds = %1083
  %1130 = landingpad { ptr, i32 }
          cleanup
  br label %2133

1131:                                             ; preds = %1009, %993, %991, %989
  %1132 = load ptr, ptr %983, align 8, !tbaa !320
  %1133 = icmp eq ptr %1132, null
  br i1 %1133, label %1139, label %1134

1134:                                             ; preds = %1131
  %1135 = load ptr, ptr %1132, align 8, !tbaa !32
  %1136 = icmp eq ptr %1135, null
  br i1 %1136, label %1138, label %1137

1137:                                             ; preds = %1134
  call void @_ZdlPv(ptr noundef nonnull %1135) #23
  br label %1138

1138:                                             ; preds = %1137, %1134
  call void @_ZdlPv(ptr noundef nonnull %1132) #23
  store ptr null, ptr %983, align 8, !tbaa !320
  br label %1139

1139:                                             ; preds = %1138, %1131
  %1140 = load ptr, ptr %963, align 8, !tbaa !325
  %1141 = load ptr, ptr %8, align 8, !tbaa !321
  %1142 = ptrtoint ptr %1140 to i64
  %1143 = ptrtoint ptr %1141 to i64
  %1144 = sub i64 %1142, %1143
  %1145 = lshr exact i64 %1144, 4
  %1146 = trunc i64 %1145 to i32
  %1147 = icmp ult i32 %1146, 2
  br i1 %1147, label %1193, label %1150

1148:                                             ; preds = %1189, %1150
  %1149 = icmp ult i32 %1151, 4
  br i1 %1149, label %1193, label %1150

1150:                                             ; preds = %1139, %1148
  %1151 = phi i32 [ %1152, %1148 ], [ %1146, %1139 ]
  %1152 = lshr i32 %1151, 1
  %1153 = icmp ult i32 %1152, %1146
  br i1 %1153, label %1154, label %1148

1154:                                             ; preds = %1150
  %1155 = zext i32 %1152 to i64
  br label %1156

1156:                                             ; preds = %1189, %1154
  %1157 = phi i64 [ %1155, %1154 ], [ %1190, %1189 ]
  %1158 = sub nuw nsw i64 %1157, %1155
  %1159 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1141, i64 %1157
  %1160 = load <2 x i32>, ptr %1159, align 8, !tbaa !22
  %1161 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1141, i64 %1158
  %1162 = load i32, ptr %1161, align 8, !tbaa !317
  %1163 = extractelement <2 x i32> %1160, i64 0
  %1164 = icmp ugt i32 %1162, %1163
  br i1 %1164, label %1165, label %1189

1165:                                             ; preds = %1156
  %1166 = icmp ult i64 %1157, %1155
  %1167 = trunc i64 %1157 to i32
  br i1 %1166, label %1185, label %1168

1168:                                             ; preds = %1165
  %1169 = trunc i64 %1158 to i32
  br label %1170

1170:                                             ; preds = %1177, %1168
  %1171 = phi i32 [ %1172, %1177 ], [ %1167, %1168 ]
  %1172 = phi i32 [ %1183, %1177 ], [ %1169, %1168 ]
  %1173 = zext i32 %1172 to i64
  %1174 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1141, i64 %1173
  %1175 = load i32, ptr %1174, align 8, !tbaa !317
  %1176 = icmp ugt i32 %1175, %1163
  br i1 %1176, label %1177, label %1185

1177:                                             ; preds = %1170
  %1178 = zext i32 %1171 to i64
  %1179 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1141, i64 %1178
  store i32 %1175, ptr %1179, align 8, !tbaa !317
  %1180 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1141, i64 %1173, i32 1
  %1181 = load i32, ptr %1180, align 4, !tbaa !319
  %1182 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1141, i64 %1178, i32 1
  store i32 %1181, ptr %1182, align 4, !tbaa !319
  %1183 = sub i32 %1172, %1152
  %1184 = icmp ult i32 %1172, %1152
  br i1 %1184, label %1185, label %1170

1185:                                             ; preds = %1177, %1170, %1165
  %1186 = phi i32 [ %1167, %1165 ], [ %1171, %1170 ], [ %1172, %1177 ]
  %1187 = zext i32 %1186 to i64
  %1188 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1141, i64 %1187
  store <2 x i32> %1160, ptr %1188, align 8, !tbaa !22
  br label %1189

1189:                                             ; preds = %1185, %1156
  %1190 = add nuw nsw i64 %1157, 1
  %1191 = trunc i64 %1190 to i32
  %1192 = icmp eq i32 %1146, %1191
  br i1 %1192, label %1148, label %1156

1193:                                             ; preds = %1148, %1139
  %1194 = ptrtoint ptr %978 to i64
  %1195 = ptrtoint ptr %979 to i64
  %1196 = sub i64 %1194, %1195
  %1197 = and i64 %1196, 68719476720
  %1198 = icmp eq i64 %1197, 0
  br i1 %1198, label %1217, label %1199

1199:                                             ; preds = %1193
  %1200 = lshr exact i64 %1196, 4
  %1201 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 4
  %1202 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 4, i32 1
  %1203 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 5
  %1204 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 5, i32 1
  %1205 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 3, i32 0, i32 1
  %1206 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %1207 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %1208 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %1209 = and i64 %1200, 4294967295
  %1210 = and i64 %17, 4294967295
  br label %1232

1211:                                             ; preds = %1540
  %1212 = load ptr, ptr %963, align 8, !tbaa !325
  %1213 = load ptr, ptr %8, align 8, !tbaa !321
  %1214 = ptrtoint ptr %1212 to i64
  %1215 = ptrtoint ptr %1213 to i64
  %1216 = sub i64 %1214, %1215
  br label %1217

1217:                                             ; preds = %1211, %1193
  %1218 = phi i64 [ %1216, %1211 ], [ %1144, %1193 ]
  %1219 = phi ptr [ %1213, %1211 ], [ %1141, %1193 ]
  %1220 = phi i8 [ %1249, %1211 ], [ 0, %1193 ]
  %1221 = ashr exact i64 %1218, 4
  %1222 = trunc i64 %1221 to i32
  %1223 = and i64 %1221, 4294967295
  %1224 = icmp eq i64 %1223, 0
  br i1 %1224, label %1543, label %1225

1225:                                             ; preds = %1217
  %1226 = shl nuw nsw i64 %1223, 2
  %1227 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1226) #21
          to label %1228 unwind label %1661

1228:                                             ; preds = %1225
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %1227, i8 0, i64 %1226, i1 false), !tbaa !22
  %1229 = getelementptr inbounds i32, ptr %1227, i64 %1223
  br label %1543

1230:                                             ; preds = %989
  %1231 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %10)
          to label %2133 unwind label %2165

1232:                                             ; preds = %1199, %1540
  %1233 = phi i64 [ 0, %1199 ], [ %1541, %1540 ]
  %1234 = phi i8 [ 0, %1199 ], [ %1249, %1540 ]
  %1235 = getelementptr inbounds %"struct.std::pair.188", ptr %979, i64 %1233
  %1236 = load i32, ptr %1235, align 8, !tbaa !326
  %1237 = zext i32 %1236 to i64
  %1238 = load ptr, ptr %1, align 8, !tbaa !58
  %1239 = getelementptr inbounds i32, ptr %1238, i64 %1237
  %1240 = load i32, ptr %1239, align 4, !tbaa !22
  %1241 = getelementptr inbounds %"struct.std::pair.188", ptr %979, i64 %1233, i32 1
  %1242 = load ptr, ptr %1241, align 8, !tbaa !328
  %1243 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1242, i64 0, i32 1
  %1244 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1242, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1245 = load ptr, ptr %1244, align 8, !tbaa !31
  %1246 = load ptr, ptr %1243, align 8, !tbaa !32
  %1247 = icmp eq ptr %1245, %1246
  br i1 %1247, label %1248, label %1251

1248:                                             ; preds = %1259, %1232
  %1249 = phi i8 [ %1234, %1232 ], [ 1, %1259 ]
  br i1 %3, label %1250, label %1460

1250:                                             ; preds = %1248
  br i1 %964, label %1540, label %1271

1251:                                             ; preds = %1232, %1259
  %1252 = phi ptr [ %1263, %1259 ], [ %1246, %1232 ]
  %1253 = phi i64 [ %1261, %1259 ], [ 0, %1232 ]
  %1254 = phi i32 [ %1260, %1259 ], [ 0, %1232 ]
  %1255 = getelementptr inbounds %"struct.std::pair", ptr %1252, i64 %1253
  %1256 = load i32, ptr %1255, align 8, !tbaa !37
  %1257 = getelementptr inbounds %"struct.std::pair", ptr %1252, i64 %1253, i32 1
  %1258 = load double, ptr %1257, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %8, i32 noundef %1256, i32 %1236, double %1258)
          to label %1259 unwind label %1269

1259:                                             ; preds = %1251
  %1260 = add i32 %1254, 1
  %1261 = zext i32 %1260 to i64
  %1262 = load ptr, ptr %1244, align 8, !tbaa !31
  %1263 = load ptr, ptr %1243, align 8, !tbaa !32
  %1264 = ptrtoint ptr %1262 to i64
  %1265 = ptrtoint ptr %1263 to i64
  %1266 = sub i64 %1264, %1265
  %1267 = ashr exact i64 %1266, 4
  %1268 = icmp ugt i64 %1267, %1261
  br i1 %1268, label %1251, label %1248

1269:                                             ; preds = %1251
  %1270 = landingpad { ptr, i32 }
          cleanup
  br label %2133

1271:                                             ; preds = %1250, %1457
  %1272 = phi i64 [ %1458, %1457 ], [ 0, %1250 ]
  %1273 = load ptr, ptr %1207, align 8, !tbaa !422, !noalias !73
  %1274 = load i32, ptr %1208, align 8, !tbaa !22, !noalias !73
  %1275 = mul i32 %1274, %1236
  %1276 = zext i32 %1275 to i64
  %1277 = getelementptr inbounds i8, ptr %1273, i64 %1276
  %1278 = getelementptr inbounds i8, ptr %1277, i64 %1272
  %1279 = load i8, ptr %1278, align 1, !tbaa !424, !range !425, !noundef !73
  %1280 = icmp eq i8 %1279, 0
  br i1 %1280, label %1366, label %1281

1281:                                             ; preds = %1271
  %1282 = load ptr, ptr %1, align 8, !tbaa !58
  %1283 = getelementptr inbounds i32, ptr %1282, i64 %1272
  %1284 = load i32, ptr %1283, align 4, !tbaa !22
  %1285 = load i32, ptr %1201, align 8, !tbaa !61
  %1286 = load ptr, ptr %1202, align 8, !tbaa !58
  br label %1287

1287:                                             ; preds = %1287, %1281
  %1288 = phi i32 [ %1285, %1281 ], [ %1289, %1287 ]
  %1289 = add i32 %1288, -1
  %1290 = sext i32 %1289 to i64
  %1291 = getelementptr inbounds i32, ptr %1286, i64 %1290
  %1292 = load i32, ptr %1291, align 4, !tbaa !22
  %1293 = icmp ugt i32 %1292, %1240
  br i1 %1293, label %1287, label %1294

1294:                                             ; preds = %1287
  %1295 = load i32, ptr %1203, align 8, !tbaa !61
  %1296 = load ptr, ptr %1204, align 8, !tbaa !58
  br label %1297

1297:                                             ; preds = %1297, %1294
  %1298 = phi i32 [ %1295, %1294 ], [ %1299, %1297 ]
  %1299 = add i32 %1298, -1
  %1300 = sext i32 %1299 to i64
  %1301 = getelementptr inbounds i32, ptr %1296, i64 %1300
  %1302 = load i32, ptr %1301, align 4, !tbaa !22
  %1303 = icmp ugt i32 %1302, %1284
  br i1 %1303, label %1297, label %1304

1304:                                             ; preds = %1297
  %1305 = sub i32 %1240, %1292
  %1306 = zext i32 %1305 to i64
  %1307 = sub i32 %1284, %1302
  %1308 = load ptr, ptr %1205, align 8, !tbaa !609, !noalias !625
  %1309 = load i32, ptr %1206, align 8, !tbaa !22, !noalias !625
  %1310 = mul i32 %1309, %1289
  %1311 = zext i32 %1310 to i64
  %1312 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %1308, i64 %1311
  %1313 = zext i32 %1299 to i64
  %1314 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %1312, i64 %1313
  %1315 = load ptr, ptr %1314, align 8, !tbaa !613
  %1316 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %1315, i64 0, i32 3
  %1317 = load ptr, ptr %1316, align 8, !tbaa !455
  %1318 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %1317, i64 %1306
  %1319 = getelementptr inbounds i8, ptr %1318, i64 16
  %1320 = getelementptr inbounds i8, ptr %1318, i64 8
  %1321 = load ptr, ptr %1319, align 8, !tbaa !21
  %1322 = icmp eq ptr %1321, null
  br i1 %1322, label %1334, label %1323

1323:                                             ; preds = %1304, %1323
  %1324 = phi ptr [ %1331, %1323 ], [ %1321, %1304 ]
  %1325 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1324, i64 0, i32 1
  %1326 = load i32, ptr %1325, align 4, !tbaa !22
  %1327 = icmp ugt i32 %1326, %1307
  %1328 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1324, i64 0, i32 2
  %1329 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1324, i64 0, i32 3
  %1330 = select i1 %1327, ptr %1328, ptr %1329
  %1331 = load ptr, ptr %1330, align 8, !tbaa !21
  %1332 = icmp eq ptr %1331, null
  br i1 %1332, label %1333, label %1323

1333:                                             ; preds = %1323
  br i1 %1327, label %1334, label %1343

1334:                                             ; preds = %1333, %1304
  %1335 = phi ptr [ %1324, %1333 ], [ %1320, %1304 ]
  %1336 = getelementptr inbounds i8, ptr %1318, i64 24
  %1337 = load ptr, ptr %1336, align 8, !tbaa !457
  %1338 = icmp eq ptr %1335, %1337
  br i1 %1338, label %1347, label %1339

1339:                                             ; preds = %1334
  %1340 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1335) #26
  %1341 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1340, i64 0, i32 1
  %1342 = load i32, ptr %1341, align 4, !tbaa !22
  br label %1343

1343:                                             ; preds = %1339, %1333
  %1344 = phi i32 [ %1342, %1339 ], [ %1326, %1333 ]
  %1345 = phi ptr [ %1335, %1339 ], [ %1324, %1333 ]
  %1346 = icmp ult i32 %1344, %1307
  br i1 %1346, label %1347, label %1366

1347:                                             ; preds = %1343, %1334
  %1348 = phi ptr [ %1335, %1334 ], [ %1345, %1343 ]
  %1349 = icmp eq ptr %1320, %1348
  br i1 %1349, label %1354, label %1350

1350:                                             ; preds = %1347
  %1351 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1348, i64 0, i32 1
  %1352 = load i32, ptr %1351, align 4, !tbaa !22
  %1353 = icmp ugt i32 %1352, %1307
  br label %1354

1354:                                             ; preds = %1350, %1347
  %1355 = phi i1 [ true, %1347 ], [ %1353, %1350 ]
  %1356 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %1357 unwind label %1364

1357:                                             ; preds = %1354
  %1358 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1356, i64 0, i32 1
  store i32 %1307, ptr %1358, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %1355, ptr noundef nonnull %1356, ptr noundef nonnull %1348, ptr noundef nonnull align 8 dereferenceable(32) %1320) #24
  %1359 = getelementptr inbounds i8, ptr %1318, i64 40
  %1360 = load i64, ptr %1359, align 8, !tbaa !458
  %1361 = add i64 %1360, 1
  store i64 %1361, ptr %1359, align 8, !tbaa !458
  %1362 = load ptr, ptr %1207, align 8, !tbaa !422, !noalias !628
  %1363 = load i32, ptr %1208, align 8, !tbaa !22, !noalias !628
  br label %1366

1364:                                             ; preds = %1449, %1354
  %1365 = landingpad { ptr, i32 }
          cleanup
  br label %2133

1366:                                             ; preds = %1271, %1343, %1357
  %1367 = phi i32 [ %1274, %1271 ], [ %1274, %1343 ], [ %1363, %1357 ]
  %1368 = phi ptr [ %1273, %1271 ], [ %1273, %1343 ], [ %1362, %1357 ]
  %1369 = trunc i64 %1272 to i32
  %1370 = mul i32 %1367, %1369
  %1371 = zext i32 %1370 to i64
  %1372 = getelementptr inbounds i8, ptr %1368, i64 %1371
  %1373 = getelementptr inbounds i8, ptr %1372, i64 %1237
  %1374 = load i8, ptr %1373, align 1, !tbaa !424, !range !425, !noundef !73
  %1375 = icmp eq i8 %1374, 0
  br i1 %1375, label %1457, label %1376

1376:                                             ; preds = %1366
  %1377 = load ptr, ptr %1, align 8, !tbaa !58
  %1378 = getelementptr inbounds i32, ptr %1377, i64 %1272
  %1379 = load i32, ptr %1378, align 4, !tbaa !22
  %1380 = load i32, ptr %1201, align 8, !tbaa !61
  %1381 = load ptr, ptr %1202, align 8, !tbaa !58
  br label %1382

1382:                                             ; preds = %1382, %1376
  %1383 = phi i32 [ %1380, %1376 ], [ %1384, %1382 ]
  %1384 = add i32 %1383, -1
  %1385 = sext i32 %1384 to i64
  %1386 = getelementptr inbounds i32, ptr %1381, i64 %1385
  %1387 = load i32, ptr %1386, align 4, !tbaa !22
  %1388 = icmp ugt i32 %1387, %1379
  br i1 %1388, label %1382, label %1389

1389:                                             ; preds = %1382
  %1390 = load i32, ptr %1203, align 8, !tbaa !61
  %1391 = load ptr, ptr %1204, align 8, !tbaa !58
  br label %1392

1392:                                             ; preds = %1392, %1389
  %1393 = phi i32 [ %1390, %1389 ], [ %1394, %1392 ]
  %1394 = add i32 %1393, -1
  %1395 = sext i32 %1394 to i64
  %1396 = getelementptr inbounds i32, ptr %1391, i64 %1395
  %1397 = load i32, ptr %1396, align 4, !tbaa !22
  %1398 = icmp ugt i32 %1397, %1240
  br i1 %1398, label %1392, label %1399

1399:                                             ; preds = %1392
  %1400 = sub i32 %1379, %1387
  %1401 = zext i32 %1400 to i64
  %1402 = sub i32 %1240, %1397
  %1403 = load ptr, ptr %1205, align 8, !tbaa !609, !noalias !631
  %1404 = load i32, ptr %1206, align 8, !tbaa !22, !noalias !631
  %1405 = mul i32 %1404, %1384
  %1406 = zext i32 %1405 to i64
  %1407 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %1403, i64 %1406
  %1408 = zext i32 %1394 to i64
  %1409 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %1407, i64 %1408
  %1410 = load ptr, ptr %1409, align 8, !tbaa !613
  %1411 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %1410, i64 0, i32 3
  %1412 = load ptr, ptr %1411, align 8, !tbaa !455
  %1413 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %1412, i64 %1401
  %1414 = getelementptr inbounds i8, ptr %1413, i64 16
  %1415 = getelementptr inbounds i8, ptr %1413, i64 8
  %1416 = load ptr, ptr %1414, align 8, !tbaa !21
  %1417 = icmp eq ptr %1416, null
  br i1 %1417, label %1429, label %1418

1418:                                             ; preds = %1399, %1418
  %1419 = phi ptr [ %1426, %1418 ], [ %1416, %1399 ]
  %1420 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1419, i64 0, i32 1
  %1421 = load i32, ptr %1420, align 4, !tbaa !22
  %1422 = icmp ugt i32 %1421, %1402
  %1423 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1419, i64 0, i32 2
  %1424 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1419, i64 0, i32 3
  %1425 = select i1 %1422, ptr %1423, ptr %1424
  %1426 = load ptr, ptr %1425, align 8, !tbaa !21
  %1427 = icmp eq ptr %1426, null
  br i1 %1427, label %1428, label %1418

1428:                                             ; preds = %1418
  br i1 %1422, label %1429, label %1438

1429:                                             ; preds = %1428, %1399
  %1430 = phi ptr [ %1419, %1428 ], [ %1415, %1399 ]
  %1431 = getelementptr inbounds i8, ptr %1413, i64 24
  %1432 = load ptr, ptr %1431, align 8, !tbaa !457
  %1433 = icmp eq ptr %1430, %1432
  br i1 %1433, label %1442, label %1434

1434:                                             ; preds = %1429
  %1435 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1430) #26
  %1436 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1435, i64 0, i32 1
  %1437 = load i32, ptr %1436, align 4, !tbaa !22
  br label %1438

1438:                                             ; preds = %1434, %1428
  %1439 = phi i32 [ %1437, %1434 ], [ %1421, %1428 ]
  %1440 = phi ptr [ %1430, %1434 ], [ %1419, %1428 ]
  %1441 = icmp ult i32 %1439, %1402
  br i1 %1441, label %1442, label %1457

1442:                                             ; preds = %1438, %1429
  %1443 = phi ptr [ %1430, %1429 ], [ %1440, %1438 ]
  %1444 = icmp eq ptr %1415, %1443
  br i1 %1444, label %1449, label %1445

1445:                                             ; preds = %1442
  %1446 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1443, i64 0, i32 1
  %1447 = load i32, ptr %1446, align 4, !tbaa !22
  %1448 = icmp ugt i32 %1447, %1402
  br label %1449

1449:                                             ; preds = %1445, %1442
  %1450 = phi i1 [ true, %1442 ], [ %1448, %1445 ]
  %1451 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %1452 unwind label %1364

1452:                                             ; preds = %1449
  %1453 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1451, i64 0, i32 1
  store i32 %1402, ptr %1453, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %1450, ptr noundef nonnull %1451, ptr noundef nonnull %1443, ptr noundef nonnull align 8 dereferenceable(32) %1415) #24
  %1454 = getelementptr inbounds i8, ptr %1413, i64 40
  %1455 = load i64, ptr %1454, align 8, !tbaa !458
  %1456 = add i64 %1455, 1
  store i64 %1456, ptr %1454, align 8, !tbaa !458
  br label %1457

1457:                                             ; preds = %1452, %1438, %1366
  %1458 = add nuw nsw i64 %1272, 1
  %1459 = icmp eq i64 %1458, %1210
  br i1 %1459, label %1540, label %1271

1460:                                             ; preds = %1248
  %1461 = load i32, ptr %1201, align 8, !tbaa !61
  %1462 = load ptr, ptr %1202, align 8, !tbaa !58
  br label %1463

1463:                                             ; preds = %1463, %1460
  %1464 = phi i32 [ %1461, %1460 ], [ %1465, %1463 ]
  %1465 = add i32 %1464, -1
  %1466 = sext i32 %1465 to i64
  %1467 = getelementptr inbounds i32, ptr %1462, i64 %1466
  %1468 = load i32, ptr %1467, align 4, !tbaa !22
  %1469 = icmp ugt i32 %1468, %1240
  br i1 %1469, label %1463, label %1470

1470:                                             ; preds = %1463
  %1471 = load i32, ptr %1203, align 8, !tbaa !61
  %1472 = load ptr, ptr %1204, align 8, !tbaa !58
  br label %1473

1473:                                             ; preds = %1473, %1470
  %1474 = phi i32 [ %1471, %1470 ], [ %1475, %1473 ]
  %1475 = add i32 %1474, -1
  %1476 = sext i32 %1475 to i64
  %1477 = getelementptr inbounds i32, ptr %1472, i64 %1476
  %1478 = load i32, ptr %1477, align 4, !tbaa !22
  %1479 = icmp ugt i32 %1478, %1240
  br i1 %1479, label %1473, label %1480

1480:                                             ; preds = %1473
  %1481 = sub i32 %1240, %1468
  %1482 = zext i32 %1481 to i64
  %1483 = sub i32 %1240, %1478
  %1484 = load ptr, ptr %1205, align 8, !tbaa !609, !noalias !634
  %1485 = load i32, ptr %1206, align 8, !tbaa !22, !noalias !634
  %1486 = mul i32 %1485, %1465
  %1487 = zext i32 %1486 to i64
  %1488 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %1484, i64 %1487
  %1489 = zext i32 %1475 to i64
  %1490 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %1488, i64 %1489
  %1491 = load ptr, ptr %1490, align 8, !tbaa !613
  %1492 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %1491, i64 0, i32 3
  %1493 = load ptr, ptr %1492, align 8, !tbaa !455
  %1494 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %1493, i64 %1482
  %1495 = getelementptr inbounds i8, ptr %1494, i64 16
  %1496 = getelementptr inbounds i8, ptr %1494, i64 8
  %1497 = load ptr, ptr %1495, align 8, !tbaa !21
  %1498 = icmp eq ptr %1497, null
  br i1 %1498, label %1510, label %1499

1499:                                             ; preds = %1480, %1499
  %1500 = phi ptr [ %1507, %1499 ], [ %1497, %1480 ]
  %1501 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1500, i64 0, i32 1
  %1502 = load i32, ptr %1501, align 4, !tbaa !22
  %1503 = icmp ugt i32 %1502, %1483
  %1504 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1500, i64 0, i32 2
  %1505 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1500, i64 0, i32 3
  %1506 = select i1 %1503, ptr %1504, ptr %1505
  %1507 = load ptr, ptr %1506, align 8, !tbaa !21
  %1508 = icmp eq ptr %1507, null
  br i1 %1508, label %1509, label %1499

1509:                                             ; preds = %1499
  br i1 %1503, label %1510, label %1519

1510:                                             ; preds = %1509, %1480
  %1511 = phi ptr [ %1500, %1509 ], [ %1496, %1480 ]
  %1512 = getelementptr inbounds i8, ptr %1494, i64 24
  %1513 = load ptr, ptr %1512, align 8, !tbaa !457
  %1514 = icmp eq ptr %1511, %1513
  br i1 %1514, label %1523, label %1515

1515:                                             ; preds = %1510
  %1516 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1511) #26
  %1517 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1516, i64 0, i32 1
  %1518 = load i32, ptr %1517, align 4, !tbaa !22
  br label %1519

1519:                                             ; preds = %1515, %1509
  %1520 = phi i32 [ %1518, %1515 ], [ %1502, %1509 ]
  %1521 = phi ptr [ %1511, %1515 ], [ %1500, %1509 ]
  %1522 = icmp ult i32 %1520, %1483
  br i1 %1522, label %1523, label %1540

1523:                                             ; preds = %1519, %1510
  %1524 = phi ptr [ %1511, %1510 ], [ %1521, %1519 ]
  %1525 = icmp eq ptr %1496, %1524
  br i1 %1525, label %1530, label %1526

1526:                                             ; preds = %1523
  %1527 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1524, i64 0, i32 1
  %1528 = load i32, ptr %1527, align 4, !tbaa !22
  %1529 = icmp ugt i32 %1528, %1483
  br label %1530

1530:                                             ; preds = %1526, %1523
  %1531 = phi i1 [ true, %1523 ], [ %1529, %1526 ]
  %1532 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %1533 unwind label %1538

1533:                                             ; preds = %1530
  %1534 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1532, i64 0, i32 1
  store i32 %1483, ptr %1534, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %1531, ptr noundef nonnull %1532, ptr noundef nonnull %1524, ptr noundef nonnull align 8 dereferenceable(32) %1496) #24
  %1535 = getelementptr inbounds i8, ptr %1494, i64 40
  %1536 = load i64, ptr %1535, align 8, !tbaa !458
  %1537 = add i64 %1536, 1
  store i64 %1537, ptr %1535, align 8, !tbaa !458
  br label %1540

1538:                                             ; preds = %1530
  %1539 = landingpad { ptr, i32 }
          cleanup
  br label %2133

1540:                                             ; preds = %1457, %1250, %1533, %1519
  %1541 = add nuw nsw i64 %1233, 1
  %1542 = icmp eq i64 %1541, %1209
  br i1 %1542, label %1211, label %1232

1543:                                             ; preds = %1228, %1217
  %1544 = phi ptr [ null, %1217 ], [ %1227, %1228 ]
  %1545 = phi ptr [ null, %1217 ], [ %1229, %1228 ]
  %1546 = icmp eq i32 %1222, 0
  br i1 %1546, label %1619, label %1547

1547:                                             ; preds = %1543
  %1548 = and i64 %1221, 4294967295
  %1549 = icmp ult i64 %1548, 17
  br i1 %1549, label %1550, label %1569

1550:                                             ; preds = %1583, %1569, %1547
  %1551 = phi i64 [ 0, %1569 ], [ 0, %1547 ], [ %1582, %1583 ]
  %1552 = sub nsw i64 %1221, %1551
  %1553 = xor i64 %1551, -1
  %1554 = add nsw i64 %1548, %1553
  %1555 = and i64 %1552, 3
  %1556 = icmp eq i64 %1555, 0
  br i1 %1556, label %1566, label %1557

1557:                                             ; preds = %1550, %1557
  %1558 = phi i64 [ %1563, %1557 ], [ %1551, %1550 ]
  %1559 = phi i64 [ %1564, %1557 ], [ 0, %1550 ]
  %1560 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1558
  %1561 = load i32, ptr %1560, align 8, !tbaa !317
  %1562 = getelementptr inbounds i32, ptr %1544, i64 %1558
  store i32 %1561, ptr %1562, align 4, !tbaa !22
  %1563 = add nuw nsw i64 %1558, 1
  %1564 = add i64 %1559, 1
  %1565 = icmp eq i64 %1564, %1555
  br i1 %1565, label %1566, label %1557, !llvm.loop !637

1566:                                             ; preds = %1557, %1550
  %1567 = phi i64 [ %1551, %1550 ], [ %1563, %1557 ]
  %1568 = icmp ult i64 %1554, 3
  br i1 %1568, label %1619, label %1663

1569:                                             ; preds = %1547
  %1570 = shl nuw nsw i64 %1548, 2
  %1571 = getelementptr i8, ptr %1544, i64 %1570
  %1572 = shl nuw nsw i64 %1548, 4
  %1573 = add nsw i64 %1572, -12
  %1574 = getelementptr i8, ptr %1219, i64 %1573
  %1575 = icmp ult ptr %1544, %1574
  %1576 = icmp ult ptr %1219, %1571
  %1577 = and i1 %1575, %1576
  br i1 %1577, label %1550, label %1578

1578:                                             ; preds = %1569
  %1579 = and i64 %1221, 7
  %1580 = icmp eq i64 %1579, 0
  %1581 = select i1 %1580, i64 8, i64 %1579
  %1582 = sub nsw i64 %1548, %1581
  br label %1583

1583:                                             ; preds = %1583, %1578
  %1584 = phi i64 [ 0, %1578 ], [ %1617, %1583 ]
  %1585 = or i64 %1584, 1
  %1586 = or i64 %1584, 2
  %1587 = or i64 %1584, 3
  %1588 = or i64 %1584, 4
  %1589 = or i64 %1584, 5
  %1590 = or i64 %1584, 6
  %1591 = or i64 %1584, 7
  %1592 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1584
  %1593 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1585
  %1594 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1586
  %1595 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1587
  %1596 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1588
  %1597 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1589
  %1598 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1590
  %1599 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1591
  %1600 = load i32, ptr %1592, align 8, !tbaa !317, !alias.scope !638
  %1601 = load i32, ptr %1593, align 8, !tbaa !317, !alias.scope !638
  %1602 = load i32, ptr %1594, align 8, !tbaa !317, !alias.scope !638
  %1603 = load i32, ptr %1595, align 8, !tbaa !317, !alias.scope !638
  %1604 = load i32, ptr %1596, align 8, !tbaa !317, !alias.scope !638
  %1605 = load i32, ptr %1597, align 8, !tbaa !317, !alias.scope !638
  %1606 = load i32, ptr %1598, align 8, !tbaa !317, !alias.scope !638
  %1607 = load i32, ptr %1599, align 8, !tbaa !317, !alias.scope !638
  %1608 = insertelement <8 x i32> poison, i32 %1600, i64 0
  %1609 = insertelement <8 x i32> %1608, i32 %1601, i64 1
  %1610 = insertelement <8 x i32> %1609, i32 %1602, i64 2
  %1611 = insertelement <8 x i32> %1610, i32 %1603, i64 3
  %1612 = insertelement <8 x i32> %1611, i32 %1604, i64 4
  %1613 = insertelement <8 x i32> %1612, i32 %1605, i64 5
  %1614 = insertelement <8 x i32> %1613, i32 %1606, i64 6
  %1615 = insertelement <8 x i32> %1614, i32 %1607, i64 7
  %1616 = getelementptr inbounds i32, ptr %1544, i64 %1584
  store <8 x i32> %1615, ptr %1616, align 4, !tbaa !22, !alias.scope !641, !noalias !638
  %1617 = add nuw i64 %1584, 8
  %1618 = icmp eq i64 %1617, %1582
  br i1 %1618, label %1550, label %1583, !llvm.loop !643

1619:                                             ; preds = %1566, %1663, %1543
  %1620 = add i32 %20, 1
  %1621 = zext i32 %1620 to i64
  %1622 = icmp eq i32 %1620, 0
  br i1 %1622, label %1682, label %1623

1623:                                             ; preds = %1619
  %1624 = shl nuw nsw i64 %1621, 2
  %1625 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1624) #21
          to label %1626 unwind label %1782

1626:                                             ; preds = %1623
  %1627 = getelementptr inbounds i32, ptr %1625, i64 %1621
  %1628 = add nuw nsw i64 %1621, 4611686018427387903
  %1629 = and i64 %1628, 4611686018427387903
  %1630 = add nuw nsw i64 %1629, 1
  %1631 = icmp ult i64 %1629, 31
  br i1 %1631, label %1655, label %1632

1632:                                             ; preds = %1626
  %1633 = and i64 %1630, 9223372036854775776
  %1634 = shl i64 %1633, 2
  %1635 = getelementptr i8, ptr %1625, i64 %1634
  %1636 = insertelement <8 x i32> poison, i32 %1222, i64 0
  %1637 = shufflevector <8 x i32> %1636, <8 x i32> poison, <8 x i32> zeroinitializer
  %1638 = insertelement <8 x i32> poison, i32 %1222, i64 0
  %1639 = shufflevector <8 x i32> %1638, <8 x i32> poison, <8 x i32> zeroinitializer
  %1640 = insertelement <8 x i32> poison, i32 %1222, i64 0
  %1641 = shufflevector <8 x i32> %1640, <8 x i32> poison, <8 x i32> zeroinitializer
  %1642 = insertelement <8 x i32> poison, i32 %1222, i64 0
  %1643 = shufflevector <8 x i32> %1642, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %1644

1644:                                             ; preds = %1644, %1632
  %1645 = phi i64 [ 0, %1632 ], [ %1651, %1644 ]
  %1646 = shl i64 %1645, 2
  %1647 = getelementptr i8, ptr %1625, i64 %1646
  store <8 x i32> %1637, ptr %1647, align 4, !tbaa !22
  %1648 = getelementptr i32, ptr %1647, i64 8
  store <8 x i32> %1639, ptr %1648, align 4, !tbaa !22
  %1649 = getelementptr i32, ptr %1647, i64 16
  store <8 x i32> %1641, ptr %1649, align 4, !tbaa !22
  %1650 = getelementptr i32, ptr %1647, i64 24
  store <8 x i32> %1643, ptr %1650, align 4, !tbaa !22
  %1651 = add nuw i64 %1645, 32
  %1652 = icmp eq i64 %1651, %1633
  br i1 %1652, label %1653, label %1644, !llvm.loop !644

1653:                                             ; preds = %1644
  %1654 = icmp eq i64 %1630, %1633
  br i1 %1654, label %1682, label %1655

1655:                                             ; preds = %1626, %1653
  %1656 = phi ptr [ %1625, %1626 ], [ %1635, %1653 ]
  br label %1657

1657:                                             ; preds = %1655, %1657
  %1658 = phi ptr [ %1659, %1657 ], [ %1656, %1655 ]
  store i32 %1222, ptr %1658, align 4, !tbaa !22
  %1659 = getelementptr inbounds i32, ptr %1658, i64 1
  %1660 = icmp eq ptr %1659, %1627
  br i1 %1660, label %1682, label %1657, !llvm.loop !645

1661:                                             ; preds = %1225
  %1662 = landingpad { ptr, i32 }
          cleanup
  br label %2133

1663:                                             ; preds = %1566, %1663
  %1664 = phi i64 [ %1680, %1663 ], [ %1567, %1566 ]
  %1665 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1664
  %1666 = load i32, ptr %1665, align 8, !tbaa !317
  %1667 = getelementptr inbounds i32, ptr %1544, i64 %1664
  store i32 %1666, ptr %1667, align 4, !tbaa !22
  %1668 = add nuw nsw i64 %1664, 1
  %1669 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1668
  %1670 = load i32, ptr %1669, align 8, !tbaa !317
  %1671 = getelementptr inbounds i32, ptr %1544, i64 %1668
  store i32 %1670, ptr %1671, align 4, !tbaa !22
  %1672 = add nuw nsw i64 %1664, 2
  %1673 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1672
  %1674 = load i32, ptr %1673, align 8, !tbaa !317
  %1675 = getelementptr inbounds i32, ptr %1544, i64 %1672
  store i32 %1674, ptr %1675, align 4, !tbaa !22
  %1676 = add nuw nsw i64 %1664, 3
  %1677 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1219, i64 %1676
  %1678 = load i32, ptr %1677, align 8, !tbaa !317
  %1679 = getelementptr inbounds i32, ptr %1544, i64 %1676
  store i32 %1678, ptr %1679, align 4, !tbaa !22
  %1680 = add nuw nsw i64 %1664, 4
  %1681 = icmp eq i64 %1680, %1548
  br i1 %1681, label %1619, label %1663, !llvm.loop !646

1682:                                             ; preds = %1657, %1653, %1619
  %1683 = phi ptr [ null, %1619 ], [ %1625, %1653 ], [ %1625, %1657 ]
  %1684 = load i32, ptr %19, align 8, !tbaa !603
  store i32 0, ptr %1683, align 4, !tbaa !22
  %1685 = icmp ugt i32 %1684, 1
  br i1 %1685, label %1689, label %1686

1686:                                             ; preds = %1682
  %1687 = ptrtoint ptr %1545 to i64
  %1688 = ptrtoint ptr %1544 to i64
  br label %1695

1689:                                             ; preds = %1682
  %1690 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 4, i32 1
  %1691 = load ptr, ptr %1690, align 8, !tbaa !58
  %1692 = ptrtoint ptr %1545 to i64
  %1693 = ptrtoint ptr %1544 to i64
  %1694 = zext i32 %1684 to i64
  br label %1709

1695:                                             ; preds = %1734, %1686
  %1696 = phi i64 [ %1688, %1686 ], [ %1693, %1734 ]
  %1697 = phi i64 [ %1687, %1686 ], [ %1692, %1734 ]
  %1698 = getelementptr inbounds i32, ptr %1683, i64 1
  %1699 = load i32, ptr %1698, align 4, !tbaa !22
  %1700 = sub i64 %1697, %1696
  %1701 = ashr exact i64 %1700, 2
  %1702 = zext i32 %1699 to i64
  %1703 = icmp ugt i64 %1701, %1702
  br i1 %1703, label %1704, label %1760

1704:                                             ; preds = %1695
  %1705 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 4
  %1706 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 4, i32 1
  %1707 = load ptr, ptr %1706, align 8, !tbaa !58
  %1708 = load i32, ptr %1705, align 8, !tbaa !61
  br label %1743

1709:                                             ; preds = %1734, %1689
  %1710 = phi i64 [ 1, %1689 ], [ %1741, %1734 ]
  %1711 = phi ptr [ %1544, %1689 ], [ %1736, %1734 ]
  %1712 = getelementptr inbounds i32, ptr %1691, i64 %1710
  %1713 = load i32, ptr %1712, align 4, !tbaa !22
  %1714 = ptrtoint ptr %1711 to i64
  %1715 = sub i64 %1692, %1714
  %1716 = icmp sgt i64 %1715, 0
  br i1 %1716, label %1717, label %1734

1717:                                             ; preds = %1709
  %1718 = lshr exact i64 %1715, 2
  br label %1719

1719:                                             ; preds = %1719, %1717
  %1720 = phi i64 [ %1718, %1717 ], [ %1730, %1719 ]
  %1721 = phi ptr [ %1711, %1717 ], [ %1729, %1719 ]
  %1722 = lshr i64 %1720, 1
  %1723 = getelementptr inbounds i32, ptr %1721, i64 %1722
  %1724 = load i32, ptr %1723, align 4, !tbaa !22
  %1725 = icmp ult i32 %1724, %1713
  %1726 = getelementptr inbounds i32, ptr %1723, i64 1
  %1727 = xor i64 %1722, -1
  %1728 = add nsw i64 %1720, %1727
  %1729 = select i1 %1725, ptr %1726, ptr %1721
  %1730 = select i1 %1725, i64 %1728, i64 %1722
  %1731 = icmp sgt i64 %1730, 0
  br i1 %1731, label %1719, label %1732

1732:                                             ; preds = %1719
  %1733 = ptrtoint ptr %1729 to i64
  br label %1734

1734:                                             ; preds = %1732, %1709
  %1735 = phi i64 [ %1733, %1732 ], [ %1714, %1709 ]
  %1736 = phi ptr [ %1729, %1732 ], [ %1711, %1709 ]
  %1737 = sub i64 %1735, %1693
  %1738 = lshr exact i64 %1737, 2
  %1739 = trunc i64 %1738 to i32
  %1740 = getelementptr inbounds i32, ptr %1683, i64 %1710
  store i32 %1739, ptr %1740, align 4, !tbaa !22
  %1741 = add nuw nsw i64 %1710, 1
  %1742 = icmp eq i64 %1741, %1694
  br i1 %1742, label %1695, label %1709

1743:                                             ; preds = %1755, %1704
  %1744 = phi i64 [ %1702, %1704 ], [ %1758, %1755 ]
  %1745 = phi i32 [ %1699, %1704 ], [ %1757, %1755 ]
  %1746 = getelementptr inbounds i32, ptr %1544, i64 %1744
  %1747 = load i32, ptr %1746, align 4, !tbaa !22
  br label %1748

1748:                                             ; preds = %1748, %1743
  %1749 = phi i32 [ %1708, %1743 ], [ %1750, %1748 ]
  %1750 = add i32 %1749, -1
  %1751 = sext i32 %1750 to i64
  %1752 = getelementptr inbounds i32, ptr %1707, i64 %1751
  %1753 = load i32, ptr %1752, align 4, !tbaa !22
  %1754 = icmp ugt i32 %1753, %1747
  br i1 %1754, label %1748, label %1755

1755:                                             ; preds = %1748
  %1756 = sub i32 %1747, %1753
  store i32 %1756, ptr %1746, align 4, !tbaa !22
  %1757 = add i32 %1745, 1
  %1758 = zext i32 %1757 to i64
  %1759 = icmp ugt i64 %1701, %1758
  br i1 %1759, label %1743, label %1760

1760:                                             ; preds = %1755, %1695
  br i1 %1224, label %1765, label %1761

1761:                                             ; preds = %1760
  %1762 = shl nuw nsw i64 %1223, 2
  %1763 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1762) #21
          to label %1764 unwind label %1784

1764:                                             ; preds = %1761
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %1763, i8 0, i64 %1762, i1 false), !tbaa !22
  br label %1765

1765:                                             ; preds = %1764, %1760
  %1766 = phi ptr [ null, %1760 ], [ %1763, %1764 ]
  %1767 = icmp eq i32 %20, 0
  br i1 %1767, label %1779, label %1768

1768:                                             ; preds = %1765
  %1769 = and i8 %1220, 1
  %1770 = icmp eq i8 %1769, 0
  %1771 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %1772 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %1773 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 3, i32 0, i32 1
  %1774 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %1775 = zext i32 %20 to i64
  %1776 = getelementptr inbounds i32, ptr %1766, i64 1
  br label %1786

1777:                                             ; preds = %1807, %1786
  %1778 = icmp eq i64 %1788, %1775
  br i1 %1778, label %1779, label %1786

1779:                                             ; preds = %1777, %1765
  %1780 = icmp eq ptr %1766, null
  br i1 %1780, label %2096, label %1781

1781:                                             ; preds = %1779
  call void @_ZdlPv(ptr noundef nonnull %1766) #23
  br label %2096

1782:                                             ; preds = %1623
  %1783 = landingpad { ptr, i32 }
          cleanup
  br label %2129

1784:                                             ; preds = %1761
  %1785 = landingpad { ptr, i32 }
          cleanup
  br label %2127

1786:                                             ; preds = %1768, %1777
  %1787 = phi i64 [ 0, %1768 ], [ %1788, %1777 ]
  %1788 = add nuw nsw i64 %1787, 1
  %1789 = getelementptr inbounds i32, ptr %1683, i64 %1788
  %1790 = load i32, ptr %1789, align 4, !tbaa !22
  %1791 = getelementptr inbounds i32, ptr %1683, i64 %1787
  %1792 = load i32, ptr %1791, align 4, !tbaa !22
  %1793 = icmp ult i32 %1792, %1790
  br i1 %1793, label %1794, label %1777

1794:                                             ; preds = %1786
  %1795 = zext i32 %1792 to i64
  %1796 = zext i32 %1790 to i64
  %1797 = trunc i64 %1787 to i32
  br label %1798

1798:                                             ; preds = %1794, %1807
  %1799 = phi i64 [ %1795, %1794 ], [ %1808, %1807 ]
  %1800 = getelementptr inbounds i32, ptr %1544, i64 %1799
  %1801 = load i32, ptr %1800, align 4, !tbaa !22
  %1802 = load ptr, ptr %8, align 8, !tbaa !321
  %1803 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1802, i64 %1799, i32 1
  %1804 = load i32, ptr %1803, align 4, !tbaa !319
  %1805 = icmp eq i32 %1804, -1
  %1806 = zext i32 %1801 to i64
  br label %1810

1807:                                             ; preds = %2093
  %1808 = add nuw nsw i64 %1799, 1
  %1809 = icmp eq i64 %1808, %1796
  br i1 %1809, label %1777, label %1798

1810:                                             ; preds = %1798, %2093
  %1811 = phi i64 [ 0, %1798 ], [ %1812, %2093 ]
  %1812 = add nuw nsw i64 %1811, 1
  %1813 = getelementptr inbounds i32, ptr %1683, i64 %1812
  %1814 = load i32, ptr %1813, align 4, !tbaa !22
  %1815 = getelementptr inbounds i32, ptr %1683, i64 %1811
  %1816 = load i32, ptr %1815, align 4, !tbaa !22
  %1817 = icmp ult i32 %1816, %1814
  br i1 %1770, label %1818, label %1892

1818:                                             ; preds = %1810
  br i1 %1817, label %1819, label %2019

1819:                                             ; preds = %1818
  %1820 = load ptr, ptr %8, align 8, !tbaa !321
  %1821 = load ptr, ptr %1771, align 8, !tbaa !422, !noalias !647
  %1822 = zext i32 %1816 to i64
  %1823 = zext i32 %1814 to i64
  %1824 = sub nsw i64 %1823, %1822
  %1825 = xor i64 %1822, -1
  %1826 = and i64 %1824, 1
  %1827 = icmp eq i64 %1826, 0
  br i1 %1827, label %1845, label %1828

1828:                                             ; preds = %1819
  %1829 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1820, i64 %1822, i32 1
  %1830 = load i32, ptr %1829, align 4, !tbaa !319
  %1831 = load i32, ptr %1772, align 8, !tbaa !22, !noalias !647
  %1832 = mul i32 %1831, %1804
  %1833 = zext i32 %1832 to i64
  %1834 = getelementptr inbounds i8, ptr %1821, i64 %1833
  %1835 = zext i32 %1830 to i64
  %1836 = getelementptr inbounds i8, ptr %1834, i64 %1835
  %1837 = load i8, ptr %1836, align 1, !tbaa !424, !range !425, !noundef !73
  %1838 = icmp eq i8 %1837, 0
  br i1 %1838, label %1842, label %1839

1839:                                             ; preds = %1828
  %1840 = getelementptr inbounds i32, ptr %1544, i64 %1822
  %1841 = load i32, ptr %1840, align 4, !tbaa !22
  store i32 %1841, ptr %1766, align 4, !tbaa !22
  br label %1842

1842:                                             ; preds = %1839, %1828
  %1843 = phi ptr [ %1766, %1828 ], [ %1776, %1839 ]
  %1844 = add nuw nsw i64 %1822, 1
  br label %1845

1845:                                             ; preds = %1842, %1819
  %1846 = phi ptr [ undef, %1819 ], [ %1843, %1842 ]
  %1847 = phi i64 [ %1822, %1819 ], [ %1844, %1842 ]
  %1848 = phi ptr [ %1766, %1819 ], [ %1843, %1842 ]
  %1849 = sub nsw i64 0, %1823
  %1850 = icmp eq i64 %1825, %1849
  br i1 %1850, label %2019, label %1854

1851:                                             ; preds = %2082
  %1852 = landingpad { ptr, i32 }
          cleanup
  %1853 = icmp eq ptr %1766, null
  br i1 %1853, label %2127, label %2095

1854:                                             ; preds = %1845, %1888
  %1855 = phi i64 [ %1890, %1888 ], [ %1847, %1845 ]
  %1856 = phi ptr [ %1889, %1888 ], [ %1848, %1845 ]
  %1857 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1820, i64 %1855, i32 1
  %1858 = load i32, ptr %1857, align 4, !tbaa !319
  %1859 = load i32, ptr %1772, align 8, !tbaa !22, !noalias !647
  %1860 = mul i32 %1859, %1804
  %1861 = zext i32 %1860 to i64
  %1862 = getelementptr inbounds i8, ptr %1821, i64 %1861
  %1863 = zext i32 %1858 to i64
  %1864 = getelementptr inbounds i8, ptr %1862, i64 %1863
  %1865 = load i8, ptr %1864, align 1, !tbaa !424, !range !425, !noundef !73
  %1866 = icmp eq i8 %1865, 0
  br i1 %1866, label %1871, label %1867

1867:                                             ; preds = %1854
  %1868 = getelementptr inbounds i32, ptr %1544, i64 %1855
  %1869 = load i32, ptr %1868, align 4, !tbaa !22
  %1870 = getelementptr inbounds i32, ptr %1856, i64 1
  store i32 %1869, ptr %1856, align 4, !tbaa !22
  br label %1871

1871:                                             ; preds = %1867, %1854
  %1872 = phi ptr [ %1856, %1854 ], [ %1870, %1867 ]
  %1873 = add nuw nsw i64 %1855, 1
  %1874 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1820, i64 %1873, i32 1
  %1875 = load i32, ptr %1874, align 4, !tbaa !319
  %1876 = load i32, ptr %1772, align 8, !tbaa !22, !noalias !647
  %1877 = mul i32 %1876, %1804
  %1878 = zext i32 %1877 to i64
  %1879 = getelementptr inbounds i8, ptr %1821, i64 %1878
  %1880 = zext i32 %1875 to i64
  %1881 = getelementptr inbounds i8, ptr %1879, i64 %1880
  %1882 = load i8, ptr %1881, align 1, !tbaa !424, !range !425, !noundef !73
  %1883 = icmp eq i8 %1882, 0
  br i1 %1883, label %1888, label %1884

1884:                                             ; preds = %1871
  %1885 = getelementptr inbounds i32, ptr %1544, i64 %1873
  %1886 = load i32, ptr %1885, align 4, !tbaa !22
  %1887 = getelementptr inbounds i32, ptr %1872, i64 1
  store i32 %1886, ptr %1872, align 4, !tbaa !22
  br label %1888

1888:                                             ; preds = %1884, %1871
  %1889 = phi ptr [ %1872, %1871 ], [ %1887, %1884 ]
  %1890 = add nuw nsw i64 %1855, 2
  %1891 = icmp eq i64 %1890, %1823
  br i1 %1891, label %2019, label %1854

1892:                                             ; preds = %1810
  br i1 %1817, label %1893, label %2019

1893:                                             ; preds = %1892
  %1894 = load ptr, ptr %8, align 8, !tbaa !321
  %1895 = load ptr, ptr %1771, align 8
  %1896 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1894, i64 %1799, i32 2
  %1897 = zext i32 %1816 to i64
  %1898 = zext i32 %1814 to i64
  br label %1899

1899:                                             ; preds = %1893, %2015
  %1900 = phi i64 [ %1897, %1893 ], [ %2017, %2015 ]
  %1901 = phi ptr [ %1766, %1893 ], [ %2016, %2015 ]
  %1902 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1894, i64 %1900, i32 1
  %1903 = load i32, ptr %1902, align 4, !tbaa !319
  br i1 %1805, label %1946, label %1904

1904:                                             ; preds = %1899
  %1905 = icmp eq i32 %1903, -1
  br i1 %1905, label %1915, label %1906

1906:                                             ; preds = %1904
  %1907 = load i32, ptr %1772, align 8, !tbaa !22, !noalias !650
  %1908 = mul i32 %1907, %1804
  %1909 = zext i32 %1908 to i64
  %1910 = getelementptr inbounds i8, ptr %1895, i64 %1909
  %1911 = zext i32 %1903 to i64
  %1912 = getelementptr inbounds i8, ptr %1910, i64 %1911
  %1913 = load i8, ptr %1912, align 1, !tbaa !424, !range !425, !noundef !73
  %1914 = icmp eq i8 %1913, 0
  br i1 %1914, label %1915, label %2011

1915:                                             ; preds = %1906, %1904
  %1916 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1894, i64 %1900, i32 2
  %1917 = load ptr, ptr %1916, align 8, !tbaa !320
  %1918 = icmp eq ptr %1917, null
  br i1 %1918, label %1946, label %1919

1919:                                             ; preds = %1915
  %1920 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1917, i64 0, i32 1
  %1921 = load ptr, ptr %1920, align 8, !tbaa !31
  %1922 = load ptr, ptr %1917, align 8, !tbaa !32
  %1923 = ptrtoint ptr %1921 to i64
  %1924 = ptrtoint ptr %1922 to i64
  %1925 = sub i64 %1923, %1924
  %1926 = ashr exact i64 %1925, 4
  %1927 = icmp eq ptr %1921, %1922
  br i1 %1927, label %1946, label %1928

1928:                                             ; preds = %1919
  %1929 = load i32, ptr %1772, align 8, !tbaa !22, !noalias !653
  %1930 = mul i32 %1929, %1804
  %1931 = zext i32 %1930 to i64
  %1932 = getelementptr inbounds i8, ptr %1895, i64 %1931
  br label %1937

1933:                                             ; preds = %1937
  %1934 = add i32 %1939, 1
  %1935 = zext i32 %1934 to i64
  %1936 = icmp ugt i64 %1926, %1935
  br i1 %1936, label %1937, label %1946

1937:                                             ; preds = %1928, %1933
  %1938 = phi i64 [ 0, %1928 ], [ %1935, %1933 ]
  %1939 = phi i32 [ 0, %1928 ], [ %1934, %1933 ]
  %1940 = getelementptr inbounds %"struct.std::pair", ptr %1922, i64 %1938
  %1941 = load i32, ptr %1940, align 8, !tbaa !37
  %1942 = zext i32 %1941 to i64
  %1943 = getelementptr inbounds i8, ptr %1932, i64 %1942
  %1944 = load i8, ptr %1943, align 1, !tbaa !424, !range !425, !noundef !73
  %1945 = icmp eq i8 %1944, 0
  br i1 %1945, label %1933, label %2011

1946:                                             ; preds = %1933, %1919, %1915, %1899
  %1947 = load ptr, ptr %1896, align 8, !tbaa !320
  %1948 = icmp eq ptr %1947, null
  br i1 %1948, label %2015, label %1949

1949:                                             ; preds = %1946
  %1950 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1947, i64 0, i32 1
  %1951 = load ptr, ptr %1950, align 8, !tbaa !31
  %1952 = load ptr, ptr %1947, align 8, !tbaa !32
  %1953 = ptrtoint ptr %1951 to i64
  %1954 = ptrtoint ptr %1952 to i64
  %1955 = sub i64 %1953, %1954
  %1956 = ashr exact i64 %1955, 4
  %1957 = icmp eq ptr %1951, %1952
  br i1 %1957, label %2015, label %1958

1958:                                             ; preds = %1949
  %1959 = icmp eq i32 %1903, -1
  %1960 = load ptr, ptr %1771, align 8
  %1961 = load i32, ptr %1772, align 8
  %1962 = zext i32 %1903 to i64
  %1963 = getelementptr inbounds i8, ptr %1960, i64 %1962
  %1964 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1894, i64 %1900, i32 2
  br label %1965

1965:                                             ; preds = %1958, %2007
  %1966 = phi i64 [ 0, %1958 ], [ %2009, %2007 ]
  %1967 = phi i32 [ 0, %1958 ], [ %2008, %2007 ]
  br i1 %1959, label %1976, label %1968

1968:                                             ; preds = %1965
  %1969 = getelementptr inbounds %"struct.std::pair", ptr %1952, i64 %1966
  %1970 = load i32, ptr %1969, align 8, !tbaa !37
  %1971 = mul i32 %1961, %1970
  %1972 = zext i32 %1971 to i64
  %1973 = getelementptr inbounds i8, ptr %1963, i64 %1972
  %1974 = load i8, ptr %1973, align 1, !tbaa !424, !range !425, !noundef !73
  %1975 = icmp eq i8 %1974, 0
  br i1 %1975, label %1976, label %2011

1976:                                             ; preds = %1968, %1965
  %1977 = load ptr, ptr %1964, align 8, !tbaa !320
  %1978 = icmp eq ptr %1977, null
  br i1 %1978, label %2007, label %1979

1979:                                             ; preds = %1976
  %1980 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1977, i64 0, i32 1
  %1981 = load ptr, ptr %1980, align 8, !tbaa !31
  %1982 = load ptr, ptr %1977, align 8, !tbaa !32
  %1983 = ptrtoint ptr %1981 to i64
  %1984 = ptrtoint ptr %1982 to i64
  %1985 = sub i64 %1983, %1984
  %1986 = ashr exact i64 %1985, 4
  %1987 = icmp eq ptr %1981, %1982
  br i1 %1987, label %2007, label %1988

1988:                                             ; preds = %1979
  %1989 = getelementptr inbounds %"struct.std::pair", ptr %1952, i64 %1966
  %1990 = load i32, ptr %1989, align 8, !tbaa !37
  %1991 = mul i32 %1961, %1990
  %1992 = zext i32 %1991 to i64
  %1993 = getelementptr inbounds i8, ptr %1960, i64 %1992
  br label %1998

1994:                                             ; preds = %1998
  %1995 = add i32 %2000, 1
  %1996 = zext i32 %1995 to i64
  %1997 = icmp ugt i64 %1986, %1996
  br i1 %1997, label %1998, label %2007

1998:                                             ; preds = %1988, %1994
  %1999 = phi i64 [ 0, %1988 ], [ %1996, %1994 ]
  %2000 = phi i32 [ 0, %1988 ], [ %1995, %1994 ]
  %2001 = getelementptr inbounds %"struct.std::pair", ptr %1982, i64 %1999
  %2002 = load i32, ptr %2001, align 8, !tbaa !37
  %2003 = zext i32 %2002 to i64
  %2004 = getelementptr inbounds i8, ptr %1993, i64 %2003
  %2005 = load i8, ptr %2004, align 1, !tbaa !424, !range !425, !noundef !73
  %2006 = icmp eq i8 %2005, 0
  br i1 %2006, label %1994, label %2011

2007:                                             ; preds = %1994, %1979, %1976
  %2008 = add i32 %1967, 1
  %2009 = zext i32 %2008 to i64
  %2010 = icmp ugt i64 %1956, %2009
  br i1 %2010, label %1965, label %2015

2011:                                             ; preds = %1937, %1968, %1998, %1906
  %2012 = getelementptr inbounds i32, ptr %1544, i64 %1900
  %2013 = load i32, ptr %2012, align 4, !tbaa !22
  %2014 = getelementptr inbounds i32, ptr %1901, i64 1
  store i32 %2013, ptr %1901, align 4, !tbaa !22
  br label %2015

2015:                                             ; preds = %2007, %1949, %1946, %2011
  %2016 = phi ptr [ %1901, %1946 ], [ %2014, %2011 ], [ %1901, %1949 ], [ %1901, %2007 ]
  %2017 = add nuw nsw i64 %1900, 1
  %2018 = icmp eq i64 %2017, %1898
  br i1 %2018, label %2019, label %1899

2019:                                             ; preds = %2015, %1845, %1888, %1892, %1818
  %2020 = phi ptr [ %1766, %1818 ], [ %1766, %1892 ], [ %1846, %1845 ], [ %1889, %1888 ], [ %2016, %2015 ]
  %2021 = icmp eq ptr %1766, %2020
  br i1 %2021, label %2093, label %2022

2022:                                             ; preds = %2019
  %2023 = load ptr, ptr %1773, align 8, !tbaa !609, !noalias !656
  %2024 = load i32, ptr %1774, align 8, !tbaa !22, !noalias !656
  %2025 = mul i32 %2024, %1797
  %2026 = zext i32 %2025 to i64
  %2027 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %2023, i64 %2026
  %2028 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %2027, i64 %1811
  %2029 = load ptr, ptr %2028, align 8, !tbaa !613
  %2030 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %2029, i64 0, i32 3
  %2031 = load ptr, ptr %2030, align 8, !tbaa !455
  %2032 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %2031, i64 %1806
  %2033 = getelementptr inbounds i8, ptr %2032, i64 8
  %2034 = getelementptr inbounds i8, ptr %2032, i64 40
  %2035 = getelementptr inbounds i8, ptr %2032, i64 32
  %2036 = getelementptr inbounds i8, ptr %2032, i64 16
  %2037 = getelementptr inbounds i8, ptr %2032, i64 24
  %2038 = load i64, ptr %2034, align 8, !tbaa !458
  br label %2039

2039:                                             ; preds = %2089, %2022
  %2040 = phi i64 [ %2038, %2022 ], [ %2090, %2089 ]
  %2041 = phi ptr [ %1766, %2022 ], [ %2091, %2089 ]
  %2042 = icmp eq i64 %2040, 0
  %2043 = load i32, ptr %2041, align 4, !tbaa !22
  br i1 %2042, label %2049, label %2044

2044:                                             ; preds = %2039
  %2045 = load ptr, ptr %2035, align 8, !tbaa !21
  %2046 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %2045, i64 0, i32 1
  %2047 = load i32, ptr %2046, align 4, !tbaa !22
  %2048 = icmp ult i32 %2047, %2043
  br i1 %2048, label %2075, label %2049

2049:                                             ; preds = %2044, %2039
  %2050 = load ptr, ptr %2036, align 8, !tbaa !21
  %2051 = icmp eq ptr %2050, null
  br i1 %2051, label %2063, label %2052

2052:                                             ; preds = %2049, %2052
  %2053 = phi ptr [ %2060, %2052 ], [ %2050, %2049 ]
  %2054 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %2053, i64 0, i32 1
  %2055 = load i32, ptr %2054, align 4, !tbaa !22
  %2056 = icmp ult i32 %2043, %2055
  %2057 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %2053, i64 0, i32 2
  %2058 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %2053, i64 0, i32 3
  %2059 = select i1 %2056, ptr %2057, ptr %2058
  %2060 = load ptr, ptr %2059, align 8, !tbaa !21
  %2061 = icmp eq ptr %2060, null
  br i1 %2061, label %2062, label %2052

2062:                                             ; preds = %2052
  br i1 %2056, label %2063, label %2071

2063:                                             ; preds = %2062, %2049
  %2064 = phi ptr [ %2053, %2062 ], [ %2033, %2049 ]
  %2065 = load ptr, ptr %2037, align 8, !tbaa !457
  %2066 = icmp eq ptr %2064, %2065
  br i1 %2066, label %2075, label %2067

2067:                                             ; preds = %2063
  %2068 = call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %2064) #26
  %2069 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %2068, i64 0, i32 1
  %2070 = load i32, ptr %2069, align 4, !tbaa !22
  br label %2071

2071:                                             ; preds = %2067, %2062
  %2072 = phi i32 [ %2070, %2067 ], [ %2055, %2062 ]
  %2073 = phi ptr [ %2064, %2067 ], [ %2053, %2062 ]
  %2074 = icmp ult i32 %2072, %2043
  br i1 %2074, label %2075, label %2089

2075:                                             ; preds = %2071, %2063, %2044
  %2076 = phi ptr [ %2064, %2063 ], [ %2045, %2044 ], [ %2073, %2071 ]
  %2077 = icmp eq ptr %2033, %2076
  br i1 %2077, label %2082, label %2078

2078:                                             ; preds = %2075
  %2079 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %2076, i64 0, i32 1
  %2080 = load i32, ptr %2079, align 4, !tbaa !22
  %2081 = icmp ult i32 %2043, %2080
  br label %2082

2082:                                             ; preds = %2078, %2075
  %2083 = phi i1 [ true, %2075 ], [ %2081, %2078 ]
  %2084 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %2085 unwind label %1851

2085:                                             ; preds = %2082
  %2086 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %2084, i64 0, i32 1
  store i32 %2043, ptr %2086, align 4, !tbaa !22
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %2083, ptr noundef nonnull %2084, ptr noundef nonnull %2076, ptr noundef nonnull align 8 dereferenceable(32) %2033) #24
  %2087 = load i64, ptr %2034, align 8, !tbaa !458
  %2088 = add i64 %2087, 1
  store i64 %2088, ptr %2034, align 8, !tbaa !458
  br label %2089

2089:                                             ; preds = %2085, %2071
  %2090 = phi i64 [ %2040, %2071 ], [ %2088, %2085 ]
  %2091 = getelementptr inbounds i32, ptr %2041, i64 1
  %2092 = icmp eq ptr %2091, %2020
  br i1 %2092, label %2093, label %2039

2093:                                             ; preds = %2089, %2019
  %2094 = icmp eq i64 %1812, %1775
  br i1 %2094, label %1807, label %1810

2095:                                             ; preds = %1851
  call void @_ZdlPv(ptr noundef nonnull %1766) #23
  br label %2127

2096:                                             ; preds = %1779, %1781
  call void @_ZdlPv(ptr noundef nonnull %1683) #23
  %2097 = icmp eq ptr %1544, null
  br i1 %2097, label %2099, label %2098

2098:                                             ; preds = %2096
  call void @_ZdlPv(ptr noundef nonnull %1544) #23
  br label %2099

2099:                                             ; preds = %2098, %2096
  %2100 = icmp eq ptr %979, null
  br i1 %2100, label %2102, label %2101

2101:                                             ; preds = %2099
  call void @_ZdlPv(ptr noundef nonnull %979) #23
  br label %2102

2102:                                             ; preds = %2101, %2099
  %2103 = load ptr, ptr %8, align 8, !tbaa !321
  %2104 = load ptr, ptr %963, align 8, !tbaa !325
  %2105 = icmp eq ptr %2103, %2104
  br i1 %2105, label %2121, label %2106

2106:                                             ; preds = %2102, %2116
  %2107 = phi ptr [ %2117, %2116 ], [ %2103, %2102 ]
  %2108 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %2107, i64 0, i32 2
  %2109 = load ptr, ptr %2108, align 8, !tbaa !320
  %2110 = icmp eq ptr %2109, null
  br i1 %2110, label %2116, label %2111

2111:                                             ; preds = %2106
  %2112 = load ptr, ptr %2109, align 8, !tbaa !32
  %2113 = icmp eq ptr %2112, null
  br i1 %2113, label %2115, label %2114

2114:                                             ; preds = %2111
  call void @_ZdlPv(ptr noundef nonnull %2112) #23
  br label %2115

2115:                                             ; preds = %2114, %2111
  call void @_ZdlPv(ptr noundef nonnull %2109) #23
  store ptr null, ptr %2108, align 8, !tbaa !320
  br label %2116

2116:                                             ; preds = %2115, %2106
  %2117 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %2107, i64 1
  %2118 = icmp eq ptr %2117, %2104
  br i1 %2118, label %2119, label %2106

2119:                                             ; preds = %2116
  %2120 = load ptr, ptr %8, align 8, !tbaa !321
  br label %2121

2121:                                             ; preds = %2119, %2102
  %2122 = phi ptr [ %2120, %2119 ], [ %2103, %2102 ]
  %2123 = icmp eq ptr %2122, null
  br i1 %2123, label %2125, label %2124

2124:                                             ; preds = %2121
  call void @_ZdlPv(ptr noundef nonnull %2122) #23
  br label %2125

2125:                                             ; preds = %2121, %2124
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #24
  br label %2126

2126:                                             ; preds = %2125, %899
  ret void

2127:                                             ; preds = %1784, %1851, %2095
  %2128 = phi { ptr, i32 } [ %1785, %1784 ], [ %1852, %1851 ], [ %1852, %2095 ]
  call void @_ZdlPv(ptr noundef nonnull %1683) #23
  br label %2129

2129:                                             ; preds = %2127, %1782
  %2130 = phi { ptr, i32 } [ %2128, %2127 ], [ %1783, %1782 ]
  %2131 = icmp eq ptr %1544, null
  br i1 %2131, label %2133, label %2132

2132:                                             ; preds = %2129
  call void @_ZdlPv(ptr noundef nonnull %1544) #23
  br label %2133

2133:                                             ; preds = %1127, %1129, %1364, %1538, %1269, %2132, %2129, %1661, %1230
  %2134 = phi ptr [ %979, %1230 ], [ %979, %1269 ], [ %979, %1538 ], [ %979, %1364 ], [ %979, %1661 ], [ %979, %2129 ], [ %979, %2132 ], [ %1016, %1127 ], [ %1016, %1129 ]
  %2135 = phi { ptr, i32 } [ %1231, %1230 ], [ %1270, %1269 ], [ %1539, %1538 ], [ %1365, %1364 ], [ %1662, %1661 ], [ %2130, %2129 ], [ %2130, %2132 ], [ %1128, %1127 ], [ %1130, %1129 ]
  %2136 = icmp eq ptr %2134, null
  br i1 %2136, label %2138, label %2137

2137:                                             ; preds = %2133
  call void @_ZdlPv(ptr noundef nonnull %2134) #23
  br label %2138

2138:                                             ; preds = %2137, %2133
  %2139 = load ptr, ptr %8, align 8, !tbaa !321
  %2140 = load ptr, ptr %963, align 8, !tbaa !325
  %2141 = icmp eq ptr %2139, %2140
  br i1 %2141, label %2157, label %2142

2142:                                             ; preds = %2138, %2152
  %2143 = phi ptr [ %2153, %2152 ], [ %2139, %2138 ]
  %2144 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %2143, i64 0, i32 2
  %2145 = load ptr, ptr %2144, align 8, !tbaa !320
  %2146 = icmp eq ptr %2145, null
  br i1 %2146, label %2152, label %2147

2147:                                             ; preds = %2142
  %2148 = load ptr, ptr %2145, align 8, !tbaa !32
  %2149 = icmp eq ptr %2148, null
  br i1 %2149, label %2151, label %2150

2150:                                             ; preds = %2147
  call void @_ZdlPv(ptr noundef nonnull %2148) #23
  br label %2151

2151:                                             ; preds = %2150, %2147
  call void @_ZdlPv(ptr noundef nonnull %2145) #23
  store ptr null, ptr %2144, align 8, !tbaa !320
  br label %2152

2152:                                             ; preds = %2151, %2142
  %2153 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %2143, i64 1
  %2154 = icmp eq ptr %2153, %2140
  br i1 %2154, label %2155, label %2142

2155:                                             ; preds = %2152
  %2156 = load ptr, ptr %8, align 8, !tbaa !321
  br label %2157

2157:                                             ; preds = %2155, %2138
  %2158 = phi ptr [ %2156, %2155 ], [ %2139, %2138 ]
  %2159 = icmp eq ptr %2158, null
  br i1 %2159, label %2161, label %2160

2160:                                             ; preds = %2157
  call void @_ZdlPv(ptr noundef nonnull %2158) #23
  br label %2161

2161:                                             ; preds = %2160, %2157, %1012
  %2162 = phi { ptr, i32 } [ %1011, %1012 ], [ %2135, %2157 ], [ %2135, %2160 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #24
  br label %2163

2163:                                             ; preds = %2161, %909
  %2164 = phi { ptr, i32 } [ %910, %909 ], [ %2162, %2161 ]
  resume { ptr, i32 } %2164

2165:                                             ; preds = %1230, %1010
  %2166 = landingpad { ptr, i32 }
          catch ptr null
  %2167 = extractvalue { ptr, i32 } %2166, 0
  call void @__clang_call_terminate(ptr %2167) #25
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_36BlockCompressedSimpleSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(288) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_36BlockCompressedSimpleSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(288) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii16ConstraintMatrix27add_entries_local_to_globalINS_36BlockCompressedSimpleSparsityPatternEEEvRKSt6vectorIjSaIjEERT_bRKNS_5TableILi2EbEENS_8internal9bool2typeILb1EEE(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(288) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(92) %4) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::vector.36", align 8
  %12 = alloca %"class.std::vector.178", align 8
  %13 = alloca %"struct.dealii::internals::distributing", align 8
  %14 = alloca %"struct.dealii::internals::distributing", align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !313
  %17 = load ptr, ptr %1, align 8, !tbaa !58
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = ashr exact i64 %20, 2
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 1
  %24 = load i32, ptr %23, align 8, !tbaa !659
  %25 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3
  %26 = load i32, ptr %25, align 4, !tbaa !22
  %27 = icmp eq i32 %26, %22
  %28 = and i64 %21, 4294967295
  br i1 %27, label %879, label %29

29:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #24
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %11, i8 0, i64 24, i1 false)
  br label %38

32:                                               ; preds = %29
  %33 = shl nuw nsw i64 %28, 2
  %34 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %33) #21
          to label %35 unwind label %76

35:                                               ; preds = %32
  store ptr %34, ptr %11, align 8, !tbaa !58
  %36 = getelementptr inbounds i32, ptr %34, i64 %28
  %37 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %11, i64 0, i32 2
  store ptr %36, ptr %37, align 8, !tbaa !417
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %34, i8 0, i64 %33, i1 false), !tbaa !22
  br label %38

38:                                               ; preds = %35, %31
  %39 = phi ptr [ null, %31 ], [ %34, %35 ]
  %40 = phi ptr [ null, %31 ], [ %36, %35 ]
  %41 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %11, i64 0, i32 1
  store ptr %40, ptr %41, align 8, !tbaa !313
  %42 = icmp eq i32 %22, 0
  br i1 %42, label %53, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %45 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %47 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %49 = and i64 %21, 4294967295
  br label %78

50:                                               ; preds = %183
  %51 = load ptr, ptr %41, align 8, !tbaa !21
  %52 = load ptr, ptr %11, align 8, !tbaa !21
  br label %53

53:                                               ; preds = %50, %38
  %54 = phi ptr [ %39, %38 ], [ %52, %50 ]
  %55 = phi ptr [ %40, %38 ], [ %51, %50 ]
  %56 = phi ptr [ null, %38 ], [ %185, %50 ]
  %57 = phi ptr [ null, %38 ], [ %186, %50 ]
  %58 = phi i32 [ 0, %38 ], [ %187, %50 ]
  %59 = zext i32 %58 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10)
  store i32 0, ptr %10, align 4, !tbaa !22
  %60 = ptrtoint ptr %55 to i64
  %61 = ptrtoint ptr %54 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 2
  %64 = icmp ult i64 %63, %59
  br i1 %64, label %65, label %70

65:                                               ; preds = %53
  %66 = sub nsw i64 %59, %63
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %11, ptr %55, i64 noundef %66, ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %67 unwind label %273

67:                                               ; preds = %65
  %68 = load ptr, ptr %11, align 8, !tbaa !21
  %69 = load ptr, ptr %41, align 8, !tbaa !21
  br label %194

70:                                               ; preds = %53
  %71 = icmp ugt i64 %63, %59
  br i1 %71, label %72, label %194

72:                                               ; preds = %70
  %73 = getelementptr inbounds i32, ptr %54, i64 %59
  %74 = icmp eq ptr %55, %73
  br i1 %74, label %194, label %75

75:                                               ; preds = %72
  store ptr %73, ptr %41, align 8, !tbaa !313
  br label %194

76:                                               ; preds = %32
  %77 = landingpad { ptr, i32 }
          cleanup
  br label %877

78:                                               ; preds = %43, %183
  %79 = phi i64 [ 0, %43 ], [ %188, %183 ]
  %80 = phi i32 [ 0, %43 ], [ %187, %183 ]
  %81 = phi ptr [ null, %43 ], [ %186, %183 ]
  %82 = phi ptr [ null, %43 ], [ %185, %183 ]
  %83 = phi ptr [ null, %43 ], [ %184, %183 ]
  %84 = load ptr, ptr %45, align 8, !tbaa !55
  %85 = load i32, ptr %46, align 8, !tbaa !57
  %86 = load ptr, ptr %44, align 8, !tbaa !55
  %87 = ptrtoint ptr %84 to i64
  %88 = ptrtoint ptr %86 to i64
  %89 = sub i64 %87, %88
  %90 = shl nsw i64 %89, 3
  %91 = zext i32 %85 to i64
  %92 = add nsw i64 %90, %91
  %93 = load ptr, ptr %1, align 8, !tbaa !58
  %94 = getelementptr inbounds i32, ptr %93, i64 %79
  %95 = load i32, ptr %94, align 4, !tbaa !22
  %96 = zext i32 %95 to i64
  %97 = icmp ugt i64 %92, %96
  br i1 %97, label %98, label %108

98:                                               ; preds = %78
  %99 = lshr i32 %95, 6
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i64, ptr %86, i64 %100
  %102 = and i32 %95, 63
  %103 = zext i32 %102 to i64
  %104 = shl nuw i64 1, %103
  %105 = load i64, ptr %101, align 8, !tbaa !42
  %106 = and i64 %105, %104
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %113

108:                                              ; preds = %98, %78
  %109 = zext i32 %80 to i64
  %110 = load ptr, ptr %11, align 8, !tbaa !58
  %111 = getelementptr inbounds i32, ptr %110, i64 %109
  store i32 %95, ptr %111, align 4, !tbaa !22
  %112 = add i32 %80, 1
  br label %183

113:                                              ; preds = %98
  %114 = load ptr, ptr %47, align 8, !tbaa !21
  %115 = load ptr, ptr %48, align 8, !tbaa !21
  %116 = ptrtoint ptr %115 to i64
  %117 = ptrtoint ptr %114 to i64
  %118 = sub i64 %116, %117
  %119 = icmp sgt i64 %118, 0
  br i1 %119, label %120, label %135

120:                                              ; preds = %113
  %121 = udiv exact i64 %118, 40
  br label %122

122:                                              ; preds = %122, %120
  %123 = phi i64 [ %121, %120 ], [ %133, %122 ]
  %124 = phi ptr [ %114, %120 ], [ %132, %122 ]
  %125 = lshr i64 %123, 1
  %126 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %124, i64 %125
  %127 = load i32, ptr %126, align 8, !tbaa !24
  %128 = icmp ult i32 %127, %95
  %129 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %126, i64 1
  %130 = xor i64 %125, -1
  %131 = add nsw i64 %123, %130
  %132 = select i1 %128, ptr %129, ptr %124
  %133 = select i1 %128, i64 %131, i64 %125
  %134 = icmp sgt i64 %133, 0
  br i1 %134, label %122, label %135

135:                                              ; preds = %122, %113
  %136 = phi ptr [ %114, %113 ], [ %132, %122 ]
  %137 = icmp eq ptr %82, %83
  br i1 %137, label %141, label %138

138:                                              ; preds = %135
  %139 = trunc i64 %79 to i32
  store i32 %139, ptr %82, align 8
  %140 = getelementptr inbounds i8, ptr %82, i64 8
  store ptr %136, ptr %140, align 8
  br label %178

141:                                              ; preds = %135
  %142 = ptrtoint ptr %82 to i64
  %143 = ptrtoint ptr %81 to i64
  %144 = sub i64 %142, %143
  %145 = icmp eq i64 %144, 9223372036854775792
  br i1 %145, label %146, label %148

146:                                              ; preds = %141
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %147 unwind label %192

147:                                              ; preds = %146
  unreachable

148:                                              ; preds = %141
  %149 = ashr exact i64 %144, 4
  %150 = tail call i64 @llvm.umax.i64(i64 %149, i64 1)
  %151 = add i64 %150, %149
  %152 = icmp ult i64 %151, %149
  %153 = icmp ugt i64 %151, 576460752303423487
  %154 = or i1 %152, %153
  %155 = select i1 %154, i64 576460752303423487, i64 %151
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %160, label %157

157:                                              ; preds = %148
  %158 = shl nuw nsw i64 %155, 4
  %159 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %158) #21
          to label %160 unwind label %190

160:                                              ; preds = %157, %148
  %161 = phi ptr [ null, %148 ], [ %159, %157 ]
  %162 = getelementptr inbounds %"struct.std::pair.188", ptr %161, i64 %149
  %163 = trunc i64 %79 to i32
  store i32 %163, ptr %162, align 8
  %164 = getelementptr inbounds i8, ptr %162, i64 8
  store ptr %136, ptr %164, align 8
  %165 = icmp eq ptr %81, %82
  br i1 %165, label %172, label %166

166:                                              ; preds = %160, %166
  %167 = phi ptr [ %170, %166 ], [ %161, %160 ]
  %168 = phi ptr [ %169, %166 ], [ %81, %160 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %167, ptr noundef nonnull align 8 dereferenceable(16) %168, i64 16, i1 false)
  %169 = getelementptr inbounds %"struct.std::pair.188", ptr %168, i64 1
  %170 = getelementptr inbounds %"struct.std::pair.188", ptr %167, i64 1
  %171 = icmp eq ptr %169, %82
  br i1 %171, label %172, label %166

172:                                              ; preds = %166, %160
  %173 = phi ptr [ %161, %160 ], [ %170, %166 ]
  %174 = icmp eq ptr %81, null
  br i1 %174, label %176, label %175

175:                                              ; preds = %172
  tail call void @_ZdlPv(ptr noundef nonnull %81) #23
  br label %176

176:                                              ; preds = %175, %172
  %177 = getelementptr inbounds %"struct.std::pair.188", ptr %161, i64 %155
  br label %178

178:                                              ; preds = %176, %138
  %179 = phi ptr [ %177, %176 ], [ %83, %138 ]
  %180 = phi ptr [ %173, %176 ], [ %82, %138 ]
  %181 = phi ptr [ %161, %176 ], [ %81, %138 ]
  %182 = getelementptr inbounds %"struct.std::pair.188", ptr %180, i64 1
  br label %183

183:                                              ; preds = %178, %108
  %184 = phi ptr [ %179, %178 ], [ %83, %108 ]
  %185 = phi ptr [ %182, %178 ], [ %82, %108 ]
  %186 = phi ptr [ %181, %178 ], [ %81, %108 ]
  %187 = phi i32 [ %80, %178 ], [ %112, %108 ]
  %188 = add nuw nsw i64 %79, 1
  %189 = icmp eq i64 %188, %49
  br i1 %189, label %50, label %78

190:                                              ; preds = %157
  %191 = landingpad { ptr, i32 }
          cleanup
  br label %868

192:                                              ; preds = %146
  %193 = landingpad { ptr, i32 }
          cleanup
  br label %868

194:                                              ; preds = %67, %75, %72, %70
  %195 = phi ptr [ %69, %67 ], [ %73, %75 ], [ %55, %72 ], [ %55, %70 ]
  %196 = phi ptr [ %68, %67 ], [ %54, %75 ], [ %54, %72 ], [ %54, %70 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10)
  %197 = icmp eq ptr %196, %195
  br i1 %197, label %207, label %198

198:                                              ; preds = %194
  %199 = ptrtoint ptr %195 to i64
  %200 = ptrtoint ptr %196 to i64
  %201 = sub i64 %199, %200
  %202 = ashr exact i64 %201, 2
  %203 = call i64 @llvm.ctlz.i64(i64 %202, i1 true), !range !418
  %204 = shl nuw nsw i64 %203, 1
  %205 = xor i64 %204, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %196, ptr %195, i64 noundef %205)
          to label %206 unwind label %273

206:                                              ; preds = %198
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %196, ptr %195)
          to label %207 unwind label %273

207:                                              ; preds = %194, %206
  %208 = ptrtoint ptr %56 to i64
  %209 = ptrtoint ptr %57 to i64
  %210 = sub i64 %208, %209
  %211 = and i64 %210, 68719476720
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %224, label %213

213:                                              ; preds = %207
  %214 = lshr exact i64 %210, 4
  %215 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %11, i64 0, i32 2
  %216 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 4
  %217 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 4, i32 1
  %218 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 5
  %219 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 5, i32 1
  %220 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 3, i32 0, i32 1
  %221 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %222 = and i64 %214, 4294967295
  %223 = and i64 %21, 4294967295
  br label %275

224:                                              ; preds = %729, %207
  %225 = load ptr, ptr %41, align 8, !tbaa !21
  %226 = load ptr, ptr %11, align 8, !tbaa !21
  %227 = ptrtoint ptr %225 to i64
  %228 = ptrtoint ptr %226 to i64
  %229 = sub i64 %227, %228
  %230 = lshr exact i64 %229, 2
  %231 = trunc i64 %230 to i32
  %232 = add i32 %24, 1
  %233 = zext i32 %232 to i64
  %234 = icmp eq i32 %232, 0
  br i1 %234, label %732, label %235

235:                                              ; preds = %224
  %236 = shl nuw nsw i64 %233, 2
  %237 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %236) #21
          to label %238 unwind label %811

238:                                              ; preds = %235
  %239 = getelementptr inbounds i32, ptr %237, i64 %233
  %240 = add nuw nsw i64 %233, 4611686018427387903
  %241 = and i64 %240, 4611686018427387903
  %242 = add nuw nsw i64 %241, 1
  %243 = icmp ult i64 %241, 31
  br i1 %243, label %267, label %244

244:                                              ; preds = %238
  %245 = and i64 %242, 9223372036854775776
  %246 = shl i64 %245, 2
  %247 = getelementptr i8, ptr %237, i64 %246
  %248 = insertelement <8 x i32> poison, i32 %231, i64 0
  %249 = shufflevector <8 x i32> %248, <8 x i32> poison, <8 x i32> zeroinitializer
  %250 = insertelement <8 x i32> poison, i32 %231, i64 0
  %251 = shufflevector <8 x i32> %250, <8 x i32> poison, <8 x i32> zeroinitializer
  %252 = insertelement <8 x i32> poison, i32 %231, i64 0
  %253 = shufflevector <8 x i32> %252, <8 x i32> poison, <8 x i32> zeroinitializer
  %254 = insertelement <8 x i32> poison, i32 %231, i64 0
  %255 = shufflevector <8 x i32> %254, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %256

256:                                              ; preds = %256, %244
  %257 = phi i64 [ 0, %244 ], [ %263, %256 ]
  %258 = shl i64 %257, 2
  %259 = getelementptr i8, ptr %237, i64 %258
  store <8 x i32> %249, ptr %259, align 4, !tbaa !22
  %260 = getelementptr i32, ptr %259, i64 8
  store <8 x i32> %251, ptr %260, align 4, !tbaa !22
  %261 = getelementptr i32, ptr %259, i64 16
  store <8 x i32> %253, ptr %261, align 4, !tbaa !22
  %262 = getelementptr i32, ptr %259, i64 24
  store <8 x i32> %255, ptr %262, align 4, !tbaa !22
  %263 = add nuw i64 %257, 32
  %264 = icmp eq i64 %263, %245
  br i1 %264, label %265, label %256, !llvm.loop !663

265:                                              ; preds = %256
  %266 = icmp eq i64 %242, %245
  br i1 %266, label %732, label %267

267:                                              ; preds = %238, %265
  %268 = phi ptr [ %237, %238 ], [ %247, %265 ]
  br label %269

269:                                              ; preds = %267, %269
  %270 = phi ptr [ %271, %269 ], [ %268, %267 ]
  store i32 %231, ptr %270, align 4, !tbaa !22
  %271 = getelementptr inbounds i32, ptr %270, i64 1
  %272 = icmp eq ptr %271, %239
  br i1 %272, label %732, label %269, !llvm.loop !664

273:                                              ; preds = %206, %198, %65
  %274 = landingpad { ptr, i32 }
          cleanup
  br label %868

275:                                              ; preds = %213, %729
  %276 = phi i64 [ 0, %213 ], [ %730, %729 ]
  %277 = getelementptr inbounds %"struct.std::pair.188", ptr %57, i64 %276
  %278 = load i32, ptr %277, align 8, !tbaa !326
  %279 = zext i32 %278 to i64
  %280 = load ptr, ptr %1, align 8, !tbaa !58
  %281 = getelementptr inbounds i32, ptr %280, i64 %279
  %282 = load i32, ptr %281, align 4, !tbaa !22
  %283 = getelementptr inbounds %"struct.std::pair.188", ptr %57, i64 %276, i32 1
  %284 = load ptr, ptr %283, align 8, !tbaa !328
  %285 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 0, i32 1
  %286 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %284, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %287 = load ptr, ptr %286, align 8, !tbaa !31
  %288 = load ptr, ptr %285, align 8, !tbaa !32
  %289 = icmp eq ptr %287, %288
  br i1 %289, label %290, label %292

290:                                              ; preds = %442, %275
  br i1 %3, label %291, label %726

291:                                              ; preds = %290
  br i1 %42, label %729, label %452

292:                                              ; preds = %275, %442
  %293 = phi ptr [ %446, %442 ], [ %288, %275 ]
  %294 = phi i64 [ %444, %442 ], [ 0, %275 ]
  %295 = phi i32 [ %443, %442 ], [ 0, %275 ]
  %296 = getelementptr inbounds %"struct.std::pair", ptr %293, i64 %294
  %297 = load i32, ptr %296, align 8, !tbaa !37
  %298 = load ptr, ptr %41, align 8, !tbaa !21
  %299 = getelementptr inbounds i32, ptr %298, i64 -1
  %300 = load i32, ptr %299, align 4, !tbaa !22
  %301 = icmp ult i32 %300, %297
  br i1 %301, label %302, label %349

302:                                              ; preds = %292
  %303 = load ptr, ptr %215, align 8, !tbaa !417
  %304 = icmp eq ptr %298, %303
  br i1 %304, label %307, label %305

305:                                              ; preds = %302
  store i32 %297, ptr %298, align 4, !tbaa !22
  %306 = getelementptr inbounds i32, ptr %298, i64 1
  store ptr %306, ptr %41, align 8, !tbaa !313
  br label %442

307:                                              ; preds = %302
  %308 = load ptr, ptr %11, align 8, !tbaa !21
  %309 = ptrtoint ptr %298 to i64
  %310 = ptrtoint ptr %308 to i64
  %311 = sub i64 %309, %310
  %312 = icmp eq i64 %311, 9223372036854775804
  br i1 %312, label %313, label %315

313:                                              ; preds = %307
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %314 unwind label %347

314:                                              ; preds = %313
  unreachable

315:                                              ; preds = %307
  %316 = ashr exact i64 %311, 2
  %317 = call i64 @llvm.umax.i64(i64 %316, i64 1)
  %318 = add i64 %317, %316
  %319 = icmp ult i64 %318, %316
  %320 = icmp ugt i64 %318, 2305843009213693951
  %321 = or i1 %319, %320
  %322 = select i1 %321, i64 2305843009213693951, i64 %318
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %327, label %324

324:                                              ; preds = %315
  %325 = shl nuw nsw i64 %322, 2
  %326 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %325) #21
          to label %327 unwind label %345

327:                                              ; preds = %324, %315
  %328 = phi ptr [ null, %315 ], [ %326, %324 ]
  %329 = getelementptr inbounds i32, ptr %328, i64 %316
  store i32 %297, ptr %329, align 4, !tbaa !22
  %330 = icmp sgt i64 %311, 4
  br i1 %330, label %331, label %332, !prof !23

331:                                              ; preds = %327
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %328, ptr align 4 %308, i64 %311, i1 false)
  br label %337

332:                                              ; preds = %327
  %333 = icmp eq i64 %311, 4
  br i1 %333, label %334, label %337

334:                                              ; preds = %332
  %335 = load i32, ptr %308, align 4, !tbaa !22
  store i32 %335, ptr %328, align 4, !tbaa !22
  %336 = getelementptr inbounds i32, ptr %329, i64 1
  br label %340

337:                                              ; preds = %332, %331
  %338 = getelementptr inbounds i32, ptr %329, i64 1
  %339 = icmp eq ptr %308, null
  br i1 %339, label %342, label %340

340:                                              ; preds = %334, %337
  %341 = phi ptr [ %336, %334 ], [ %338, %337 ]
  call void @_ZdlPv(ptr noundef nonnull %308) #23
  br label %342

342:                                              ; preds = %340, %337
  %343 = phi ptr [ %338, %337 ], [ %341, %340 ]
  store ptr %328, ptr %11, align 8, !tbaa !58
  store ptr %343, ptr %41, align 8, !tbaa !313
  %344 = getelementptr inbounds i32, ptr %328, i64 %322
  store ptr %344, ptr %215, align 8, !tbaa !417
  br label %442

345:                                              ; preds = %324
  %346 = landingpad { ptr, i32 }
          cleanup
  br label %868

347:                                              ; preds = %313
  %348 = landingpad { ptr, i32 }
          cleanup
  br label %868

349:                                              ; preds = %292
  %350 = load ptr, ptr %11, align 8, !tbaa !21
  %351 = ptrtoint ptr %298 to i64
  %352 = ptrtoint ptr %350 to i64
  %353 = sub i64 %351, %352
  %354 = icmp sgt i64 %353, 0
  br i1 %354, label %355, label %370

355:                                              ; preds = %349
  %356 = lshr exact i64 %353, 2
  br label %357

357:                                              ; preds = %357, %355
  %358 = phi i64 [ %356, %355 ], [ %368, %357 ]
  %359 = phi ptr [ %350, %355 ], [ %367, %357 ]
  %360 = lshr i64 %358, 1
  %361 = getelementptr inbounds i32, ptr %359, i64 %360
  %362 = load i32, ptr %361, align 4, !tbaa !22
  %363 = icmp ult i32 %362, %297
  %364 = getelementptr inbounds i32, ptr %361, i64 1
  %365 = xor i64 %360, -1
  %366 = add nsw i64 %358, %365
  %367 = select i1 %363, ptr %364, ptr %359
  %368 = select i1 %363, i64 %366, i64 %360
  %369 = icmp sgt i64 %368, 0
  br i1 %369, label %357, label %370

370:                                              ; preds = %357, %349
  %371 = phi ptr [ %350, %349 ], [ %367, %357 ]
  %372 = load i32, ptr %371, align 4, !tbaa !22
  %373 = icmp eq i32 %372, %297
  br i1 %373, label %442, label %374

374:                                              ; preds = %370
  %375 = ptrtoint ptr %371 to i64
  %376 = load ptr, ptr %215, align 8, !tbaa !417
  %377 = icmp eq ptr %298, %376
  br i1 %377, label %395, label %378

378:                                              ; preds = %374
  %379 = icmp eq ptr %298, %371
  %380 = getelementptr inbounds i32, ptr %298, i64 1
  br i1 %379, label %381, label %382

381:                                              ; preds = %378
  store i32 %297, ptr %298, align 4, !tbaa !22
  store ptr %380, ptr %41, align 8, !tbaa !313
  br label %442

382:                                              ; preds = %378
  store i32 %300, ptr %298, align 4, !tbaa !22
  store ptr %380, ptr %41, align 8, !tbaa !313
  %383 = ptrtoint ptr %299 to i64
  %384 = sub i64 %383, %375
  %385 = icmp sgt i64 %384, 4
  br i1 %385, label %386, label %390, !prof !23

386:                                              ; preds = %382
  %387 = lshr exact i64 %384, 2
  %388 = sub nsw i64 0, %387
  %389 = getelementptr inbounds i32, ptr %298, i64 %388
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %389, ptr nonnull align 4 %371, i64 %384, i1 false)
  br label %394

390:                                              ; preds = %382
  %391 = icmp eq i64 %384, 4
  br i1 %391, label %392, label %394

392:                                              ; preds = %390
  %393 = load i32, ptr %371, align 4, !tbaa !22
  store i32 %393, ptr %299, align 4, !tbaa !22
  br label %394

394:                                              ; preds = %392, %390, %386
  store i32 %297, ptr %371, align 4, !tbaa !22
  br label %442

395:                                              ; preds = %374
  %396 = icmp eq i64 %353, 9223372036854775804
  br i1 %396, label %397, label %399

397:                                              ; preds = %395
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %398 unwind label %440

398:                                              ; preds = %397
  unreachable

399:                                              ; preds = %395
  %400 = ashr exact i64 %353, 2
  %401 = call i64 @llvm.umax.i64(i64 %400, i64 1)
  %402 = add i64 %401, %400
  %403 = icmp ult i64 %402, %400
  %404 = icmp ugt i64 %402, 2305843009213693951
  %405 = or i1 %403, %404
  %406 = select i1 %405, i64 2305843009213693951, i64 %402
  %407 = sub i64 %375, %352
  %408 = ashr exact i64 %407, 2
  %409 = icmp eq i64 %406, 0
  br i1 %409, label %413, label %410

410:                                              ; preds = %399
  %411 = shl nuw nsw i64 %406, 2
  %412 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %411) #21
          to label %413 unwind label %438

413:                                              ; preds = %410, %399
  %414 = phi ptr [ null, %399 ], [ %412, %410 ]
  %415 = getelementptr inbounds i32, ptr %414, i64 %408
  store i32 %297, ptr %415, align 4, !tbaa !22
  %416 = icmp sgt i64 %407, 4
  br i1 %416, label %417, label %418, !prof !23

417:                                              ; preds = %413
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %414, ptr align 4 %350, i64 %407, i1 false)
  br label %422

418:                                              ; preds = %413
  %419 = icmp eq i64 %407, 4
  br i1 %419, label %420, label %422

420:                                              ; preds = %418
  %421 = load i32, ptr %350, align 4, !tbaa !22
  store i32 %421, ptr %414, align 4, !tbaa !22
  br label %422

422:                                              ; preds = %420, %418, %417
  %423 = getelementptr inbounds i32, ptr %415, i64 1
  %424 = sub i64 %351, %375
  %425 = icmp sgt i64 %424, 4
  br i1 %425, label %426, label %427, !prof !23

426:                                              ; preds = %422
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %423, ptr nonnull align 4 %371, i64 %424, i1 false)
  br label %431

427:                                              ; preds = %422
  %428 = icmp eq i64 %424, 4
  br i1 %428, label %429, label %431

429:                                              ; preds = %427
  %430 = load i32, ptr %371, align 4, !tbaa !22
  store i32 %430, ptr %423, align 4, !tbaa !22
  br label %431

431:                                              ; preds = %429, %427, %426
  %432 = icmp eq ptr %350, null
  br i1 %432, label %434, label %433

433:                                              ; preds = %431
  call void @_ZdlPv(ptr noundef nonnull %350) #23
  br label %434

434:                                              ; preds = %433, %431
  %435 = ashr exact i64 %424, 2
  %436 = getelementptr inbounds i32, ptr %423, i64 %435
  store ptr %414, ptr %11, align 8, !tbaa !58
  store ptr %436, ptr %41, align 8, !tbaa !313
  %437 = getelementptr inbounds i32, ptr %414, i64 %406
  store ptr %437, ptr %215, align 8, !tbaa !417
  br label %442

438:                                              ; preds = %410
  %439 = landingpad { ptr, i32 }
          cleanup
  br label %868

440:                                              ; preds = %397
  %441 = landingpad { ptr, i32 }
          cleanup
  br label %868

442:                                              ; preds = %434, %394, %381, %370, %342, %305
  %443 = add i32 %295, 1
  %444 = zext i32 %443 to i64
  %445 = load ptr, ptr %286, align 8, !tbaa !31
  %446 = load ptr, ptr %285, align 8, !tbaa !32
  %447 = ptrtoint ptr %445 to i64
  %448 = ptrtoint ptr %446 to i64
  %449 = sub i64 %447, %448
  %450 = ashr exact i64 %449, 4
  %451 = icmp ugt i64 %450, %444
  br i1 %451, label %292, label %290

452:                                              ; preds = %291, %719
  %453 = phi i64 [ %720, %719 ], [ 0, %291 ]
  %454 = load ptr, ptr %1, align 8, !tbaa !58
  %455 = getelementptr inbounds i32, ptr %454, i64 %453
  %456 = load i32, ptr %455, align 4, !tbaa !22
  %457 = load i32, ptr %216, align 8, !tbaa !61
  %458 = load ptr, ptr %217, align 8, !tbaa !58
  br label %459

459:                                              ; preds = %459, %452
  %460 = phi i32 [ %457, %452 ], [ %461, %459 ]
  %461 = add i32 %460, -1
  %462 = sext i32 %461 to i64
  %463 = getelementptr inbounds i32, ptr %458, i64 %462
  %464 = load i32, ptr %463, align 4, !tbaa !22
  %465 = icmp ugt i32 %464, %282
  br i1 %465, label %459, label %466

466:                                              ; preds = %459
  %467 = load i32, ptr %218, align 8, !tbaa !61
  %468 = load ptr, ptr %219, align 8, !tbaa !58
  br label %469

469:                                              ; preds = %469, %466
  %470 = phi i32 [ %467, %466 ], [ %471, %469 ]
  %471 = add i32 %470, -1
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds i32, ptr %468, i64 %472
  %474 = load i32, ptr %473, align 4, !tbaa !22
  %475 = icmp ugt i32 %474, %456
  br i1 %475, label %469, label %476

476:                                              ; preds = %469
  %477 = sub i32 %282, %464
  %478 = zext i32 %477 to i64
  %479 = sub i32 %456, %474
  %480 = load ptr, ptr %220, align 8, !tbaa !665, !noalias !666
  %481 = load i32, ptr %221, align 8, !tbaa !22, !noalias !666
  %482 = mul i32 %481, %461
  %483 = zext i32 %482 to i64
  %484 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %480, i64 %483
  %485 = zext i32 %471 to i64
  %486 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %484, i64 %485
  %487 = load ptr, ptr %486, align 8, !tbaa !669
  %488 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %487, i64 0, i32 3
  %489 = load ptr, ptr %488, align 8, !tbaa !472
  %490 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %489, i64 %478
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9)
  store i32 %479, ptr %9, align 4, !tbaa !22
  %491 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %490, i64 0, i32 1
  %492 = load ptr, ptr %491, align 8, !tbaa !21
  %493 = load ptr, ptr %490, align 8, !tbaa !21
  %494 = ptrtoint ptr %492 to i64
  %495 = ptrtoint ptr %493 to i64
  %496 = sub i64 %494, %495
  %497 = icmp eq ptr %492, %493
  br i1 %497, label %502, label %498

498:                                              ; preds = %476
  %499 = getelementptr inbounds i32, ptr %492, i64 -1
  %500 = load i32, ptr %499, align 4, !tbaa !22
  %501 = icmp ult i32 %500, %479
  br i1 %501, label %502, label %542

502:                                              ; preds = %498, %476
  %503 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %490, i64 0, i32 2
  %504 = load ptr, ptr %503, align 8, !tbaa !417
  %505 = icmp eq ptr %492, %504
  br i1 %505, label %508, label %506

506:                                              ; preds = %502
  store i32 %479, ptr %492, align 4, !tbaa !22
  %507 = getelementptr inbounds i32, ptr %492, i64 1
  store ptr %507, ptr %491, align 8, !tbaa !313
  br label %587

508:                                              ; preds = %502
  %509 = icmp eq i64 %496, 9223372036854775804
  br i1 %509, label %510, label %512

510:                                              ; preds = %642, %508
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %511 unwind label %724

511:                                              ; preds = %510
  unreachable

512:                                              ; preds = %508
  %513 = ashr exact i64 %496, 2
  %514 = call i64 @llvm.umax.i64(i64 %513, i64 1)
  %515 = add i64 %514, %513
  %516 = icmp ult i64 %515, %513
  %517 = icmp ugt i64 %515, 2305843009213693951
  %518 = or i1 %516, %517
  %519 = select i1 %518, i64 2305843009213693951, i64 %515
  %520 = icmp eq i64 %519, 0
  br i1 %520, label %524, label %521

521:                                              ; preds = %512
  %522 = shl nuw nsw i64 %519, 2
  %523 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %522) #21
          to label %524 unwind label %722

524:                                              ; preds = %521, %512
  %525 = phi ptr [ null, %512 ], [ %523, %521 ]
  %526 = getelementptr inbounds i32, ptr %525, i64 %513
  store i32 %479, ptr %526, align 4, !tbaa !22
  %527 = icmp sgt i64 %496, 4
  br i1 %527, label %528, label %529, !prof !23

528:                                              ; preds = %524
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %525, ptr align 4 %493, i64 %496, i1 false)
  br label %534

529:                                              ; preds = %524
  %530 = icmp eq i64 %496, 4
  br i1 %530, label %531, label %534

531:                                              ; preds = %529
  %532 = load i32, ptr %493, align 4, !tbaa !22
  store i32 %532, ptr %525, align 4, !tbaa !22
  %533 = getelementptr inbounds i32, ptr %526, i64 1
  br label %537

534:                                              ; preds = %529, %528
  %535 = getelementptr inbounds i32, ptr %526, i64 1
  %536 = icmp eq ptr %493, null
  br i1 %536, label %539, label %537

537:                                              ; preds = %531, %534
  %538 = phi ptr [ %533, %531 ], [ %535, %534 ]
  call void @_ZdlPv(ptr noundef nonnull %493) #23
  br label %539

539:                                              ; preds = %537, %534
  %540 = phi ptr [ %535, %534 ], [ %538, %537 ]
  store ptr %525, ptr %490, align 8, !tbaa !58
  store ptr %540, ptr %491, align 8, !tbaa !313
  %541 = getelementptr inbounds i32, ptr %525, i64 %519
  store ptr %541, ptr %503, align 8, !tbaa !417
  br label %587

542:                                              ; preds = %498
  %543 = icmp sgt i64 %496, 0
  br i1 %543, label %544, label %559

544:                                              ; preds = %542
  %545 = lshr exact i64 %496, 2
  br label %546

546:                                              ; preds = %546, %544
  %547 = phi i64 [ %545, %544 ], [ %557, %546 ]
  %548 = phi ptr [ %493, %544 ], [ %556, %546 ]
  %549 = lshr i64 %547, 1
  %550 = getelementptr inbounds i32, ptr %548, i64 %549
  %551 = load i32, ptr %550, align 4, !tbaa !22
  %552 = icmp ult i32 %551, %479
  %553 = getelementptr inbounds i32, ptr %550, i64 1
  %554 = xor i64 %549, -1
  %555 = add nsw i64 %547, %554
  %556 = select i1 %552, ptr %553, ptr %548
  %557 = select i1 %552, i64 %555, i64 %549
  %558 = icmp sgt i64 %557, 0
  br i1 %558, label %546, label %559

559:                                              ; preds = %546, %542
  %560 = phi ptr [ %493, %542 ], [ %556, %546 ]
  %561 = load i32, ptr %560, align 4, !tbaa !22
  %562 = icmp eq i32 %561, %479
  br i1 %562, label %587, label %563

563:                                              ; preds = %559
  %564 = ptrtoint ptr %560 to i64
  %565 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %490, i64 0, i32 2
  %566 = load ptr, ptr %565, align 8, !tbaa !417
  %567 = icmp eq ptr %492, %566
  br i1 %567, label %586, label %568

568:                                              ; preds = %563
  %569 = icmp eq ptr %492, %560
  %570 = getelementptr inbounds i32, ptr %492, i64 1
  br i1 %569, label %571, label %572

571:                                              ; preds = %568
  store i32 %479, ptr %492, align 4, !tbaa !22
  store ptr %570, ptr %491, align 8, !tbaa !313
  br label %587

572:                                              ; preds = %568
  store i32 %500, ptr %492, align 4, !tbaa !22
  store ptr %570, ptr %491, align 8, !tbaa !313
  %573 = load i32, ptr %9, align 4, !tbaa !22
  %574 = ptrtoint ptr %499 to i64
  %575 = sub i64 %574, %564
  %576 = icmp sgt i64 %575, 4
  br i1 %576, label %577, label %581, !prof !23

577:                                              ; preds = %572
  %578 = lshr exact i64 %575, 2
  %579 = sub nsw i64 0, %578
  %580 = getelementptr inbounds i32, ptr %492, i64 %579
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %580, ptr nonnull align 4 %560, i64 %575, i1 false)
  br label %585

581:                                              ; preds = %572
  %582 = icmp eq i64 %575, 4
  br i1 %582, label %583, label %585

583:                                              ; preds = %581
  %584 = load i32, ptr %560, align 4, !tbaa !22
  store i32 %584, ptr %499, align 4, !tbaa !22
  br label %585

585:                                              ; preds = %583, %581, %577
  store i32 %573, ptr %560, align 4, !tbaa !22
  br label %587

586:                                              ; preds = %563
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %490, ptr nonnull %560, ptr noundef nonnull align 4 dereferenceable(4) %9)
          to label %587 unwind label %722

587:                                              ; preds = %585, %571, %559, %539, %506, %586
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9)
  %588 = load ptr, ptr %1, align 8, !tbaa !58
  %589 = getelementptr inbounds i32, ptr %588, i64 %453
  %590 = load i32, ptr %589, align 4, !tbaa !22
  %591 = load i32, ptr %216, align 8, !tbaa !61
  %592 = load ptr, ptr %217, align 8, !tbaa !58
  br label %593

593:                                              ; preds = %593, %587
  %594 = phi i32 [ %591, %587 ], [ %595, %593 ]
  %595 = add i32 %594, -1
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds i32, ptr %592, i64 %596
  %598 = load i32, ptr %597, align 4, !tbaa !22
  %599 = icmp ugt i32 %598, %590
  br i1 %599, label %593, label %600

600:                                              ; preds = %593
  %601 = load i32, ptr %218, align 8, !tbaa !61
  %602 = load ptr, ptr %219, align 8, !tbaa !58
  br label %603

603:                                              ; preds = %603, %600
  %604 = phi i32 [ %601, %600 ], [ %605, %603 ]
  %605 = add i32 %604, -1
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds i32, ptr %602, i64 %606
  %608 = load i32, ptr %607, align 4, !tbaa !22
  %609 = icmp ugt i32 %608, %282
  br i1 %609, label %603, label %610

610:                                              ; preds = %603
  %611 = sub i32 %590, %598
  %612 = zext i32 %611 to i64
  %613 = sub i32 %282, %608
  %614 = load ptr, ptr %220, align 8, !tbaa !665, !noalias !671
  %615 = load i32, ptr %221, align 8, !tbaa !22, !noalias !671
  %616 = mul i32 %615, %595
  %617 = zext i32 %616 to i64
  %618 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %614, i64 %617
  %619 = zext i32 %605 to i64
  %620 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %618, i64 %619
  %621 = load ptr, ptr %620, align 8, !tbaa !669
  %622 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %621, i64 0, i32 3
  %623 = load ptr, ptr %622, align 8, !tbaa !472
  %624 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %623, i64 %612
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8)
  store i32 %613, ptr %8, align 4, !tbaa !22
  %625 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %624, i64 0, i32 1
  %626 = load ptr, ptr %625, align 8, !tbaa !21
  %627 = load ptr, ptr %624, align 8, !tbaa !21
  %628 = ptrtoint ptr %626 to i64
  %629 = ptrtoint ptr %627 to i64
  %630 = sub i64 %628, %629
  %631 = icmp eq ptr %626, %627
  br i1 %631, label %636, label %632

632:                                              ; preds = %610
  %633 = getelementptr inbounds i32, ptr %626, i64 -1
  %634 = load i32, ptr %633, align 4, !tbaa !22
  %635 = icmp ult i32 %634, %613
  br i1 %635, label %636, label %674

636:                                              ; preds = %632, %610
  %637 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %624, i64 0, i32 2
  %638 = load ptr, ptr %637, align 8, !tbaa !417
  %639 = icmp eq ptr %626, %638
  br i1 %639, label %642, label %640

640:                                              ; preds = %636
  store i32 %613, ptr %626, align 4, !tbaa !22
  %641 = getelementptr inbounds i32, ptr %626, i64 1
  store ptr %641, ptr %625, align 8, !tbaa !313
  br label %719

642:                                              ; preds = %636
  %643 = icmp eq i64 %630, 9223372036854775804
  br i1 %643, label %510, label %644

644:                                              ; preds = %642
  %645 = ashr exact i64 %630, 2
  %646 = call i64 @llvm.umax.i64(i64 %645, i64 1)
  %647 = add i64 %646, %645
  %648 = icmp ult i64 %647, %645
  %649 = icmp ugt i64 %647, 2305843009213693951
  %650 = or i1 %648, %649
  %651 = select i1 %650, i64 2305843009213693951, i64 %647
  %652 = icmp eq i64 %651, 0
  br i1 %652, label %656, label %653

653:                                              ; preds = %644
  %654 = shl nuw nsw i64 %651, 2
  %655 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %654) #21
          to label %656 unwind label %722

656:                                              ; preds = %653, %644
  %657 = phi ptr [ null, %644 ], [ %655, %653 ]
  %658 = getelementptr inbounds i32, ptr %657, i64 %645
  store i32 %613, ptr %658, align 4, !tbaa !22
  %659 = icmp sgt i64 %630, 4
  br i1 %659, label %660, label %661, !prof !23

660:                                              ; preds = %656
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %657, ptr align 4 %627, i64 %630, i1 false)
  br label %666

661:                                              ; preds = %656
  %662 = icmp eq i64 %630, 4
  br i1 %662, label %663, label %666

663:                                              ; preds = %661
  %664 = load i32, ptr %627, align 4, !tbaa !22
  store i32 %664, ptr %657, align 4, !tbaa !22
  %665 = getelementptr inbounds i32, ptr %658, i64 1
  br label %669

666:                                              ; preds = %661, %660
  %667 = getelementptr inbounds i32, ptr %658, i64 1
  %668 = icmp eq ptr %627, null
  br i1 %668, label %671, label %669

669:                                              ; preds = %663, %666
  %670 = phi ptr [ %665, %663 ], [ %667, %666 ]
  call void @_ZdlPv(ptr noundef nonnull %627) #23
  br label %671

671:                                              ; preds = %669, %666
  %672 = phi ptr [ %667, %666 ], [ %670, %669 ]
  store ptr %657, ptr %624, align 8, !tbaa !58
  store ptr %672, ptr %625, align 8, !tbaa !313
  %673 = getelementptr inbounds i32, ptr %657, i64 %651
  store ptr %673, ptr %637, align 8, !tbaa !417
  br label %719

674:                                              ; preds = %632
  %675 = icmp sgt i64 %630, 0
  br i1 %675, label %676, label %691

676:                                              ; preds = %674
  %677 = lshr exact i64 %630, 2
  br label %678

678:                                              ; preds = %678, %676
  %679 = phi i64 [ %677, %676 ], [ %689, %678 ]
  %680 = phi ptr [ %627, %676 ], [ %688, %678 ]
  %681 = lshr i64 %679, 1
  %682 = getelementptr inbounds i32, ptr %680, i64 %681
  %683 = load i32, ptr %682, align 4, !tbaa !22
  %684 = icmp ult i32 %683, %613
  %685 = getelementptr inbounds i32, ptr %682, i64 1
  %686 = xor i64 %681, -1
  %687 = add nsw i64 %679, %686
  %688 = select i1 %684, ptr %685, ptr %680
  %689 = select i1 %684, i64 %687, i64 %681
  %690 = icmp sgt i64 %689, 0
  br i1 %690, label %678, label %691

691:                                              ; preds = %678, %674
  %692 = phi ptr [ %627, %674 ], [ %688, %678 ]
  %693 = load i32, ptr %692, align 4, !tbaa !22
  %694 = icmp eq i32 %693, %613
  br i1 %694, label %719, label %695

695:                                              ; preds = %691
  %696 = ptrtoint ptr %692 to i64
  %697 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %624, i64 0, i32 2
  %698 = load ptr, ptr %697, align 8, !tbaa !417
  %699 = icmp eq ptr %626, %698
  br i1 %699, label %718, label %700

700:                                              ; preds = %695
  %701 = icmp eq ptr %626, %692
  %702 = getelementptr inbounds i32, ptr %626, i64 1
  br i1 %701, label %703, label %704

703:                                              ; preds = %700
  store i32 %613, ptr %626, align 4, !tbaa !22
  store ptr %702, ptr %625, align 8, !tbaa !313
  br label %719

704:                                              ; preds = %700
  store i32 %634, ptr %626, align 4, !tbaa !22
  store ptr %702, ptr %625, align 8, !tbaa !313
  %705 = load i32, ptr %8, align 4, !tbaa !22
  %706 = ptrtoint ptr %633 to i64
  %707 = sub i64 %706, %696
  %708 = icmp sgt i64 %707, 4
  br i1 %708, label %709, label %713, !prof !23

709:                                              ; preds = %704
  %710 = lshr exact i64 %707, 2
  %711 = sub nsw i64 0, %710
  %712 = getelementptr inbounds i32, ptr %626, i64 %711
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %712, ptr nonnull align 4 %692, i64 %707, i1 false)
  br label %717

713:                                              ; preds = %704
  %714 = icmp eq i64 %707, 4
  br i1 %714, label %715, label %717

715:                                              ; preds = %713
  %716 = load i32, ptr %692, align 4, !tbaa !22
  store i32 %716, ptr %633, align 4, !tbaa !22
  br label %717

717:                                              ; preds = %715, %713, %709
  store i32 %705, ptr %692, align 4, !tbaa !22
  br label %719

718:                                              ; preds = %695
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %624, ptr nonnull %692, ptr noundef nonnull align 4 dereferenceable(4) %8)
          to label %719 unwind label %722

719:                                              ; preds = %717, %703, %691, %671, %640, %718
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8)
  %720 = add nuw nsw i64 %453, 1
  %721 = icmp eq i64 %720, %223
  br i1 %721, label %729, label %452

722:                                              ; preds = %586, %718, %521, %653
  %723 = landingpad { ptr, i32 }
          cleanup
  br label %868

724:                                              ; preds = %510
  %725 = landingpad { ptr, i32 }
          cleanup
  br label %868

726:                                              ; preds = %290
  invoke void @_ZN6dealii24BlockSparsityPatternBaseINS_31CompressedSimpleSparsityPatternEE3addEjj(ptr noundef nonnull align 8 dereferenceable(288) %2, i32 noundef %282, i32 noundef %282)
          to label %729 unwind label %727

727:                                              ; preds = %726
  %728 = landingpad { ptr, i32 }
          cleanup
  br label %868

729:                                              ; preds = %719, %291, %726
  %730 = add nuw nsw i64 %276, 1
  %731 = icmp eq i64 %730, %222
  br i1 %731, label %224, label %275

732:                                              ; preds = %269, %265, %224
  %733 = phi ptr [ null, %224 ], [ %237, %265 ], [ %237, %269 ]
  %734 = load i32, ptr %23, align 8, !tbaa !659
  store i32 0, ptr %733, align 4, !tbaa !22
  %735 = icmp ugt i32 %734, 1
  br i1 %735, label %736, label %740

736:                                              ; preds = %732
  %737 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 4, i32 1
  %738 = load ptr, ptr %737, align 8, !tbaa !58
  %739 = zext i32 %734 to i64
  br label %750

740:                                              ; preds = %775, %732
  %741 = getelementptr inbounds i32, ptr %733, i64 1
  %742 = load i32, ptr %741, align 4, !tbaa !22
  %743 = ashr exact i64 %229, 2
  %744 = zext i32 %742 to i64
  %745 = icmp ugt i64 %743, %744
  br i1 %745, label %746, label %802

746:                                              ; preds = %740
  %747 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 4
  %748 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 4, i32 1
  %749 = load ptr, ptr %748, align 8, !tbaa !58
  br label %784

750:                                              ; preds = %775, %736
  %751 = phi i64 [ 1, %736 ], [ %782, %775 ]
  %752 = phi ptr [ %226, %736 ], [ %777, %775 ]
  %753 = getelementptr inbounds i32, ptr %738, i64 %751
  %754 = load i32, ptr %753, align 4, !tbaa !22
  %755 = ptrtoint ptr %752 to i64
  %756 = sub i64 %227, %755
  %757 = icmp sgt i64 %756, 0
  br i1 %757, label %758, label %775

758:                                              ; preds = %750
  %759 = lshr exact i64 %756, 2
  br label %760

760:                                              ; preds = %760, %758
  %761 = phi i64 [ %759, %758 ], [ %771, %760 ]
  %762 = phi ptr [ %752, %758 ], [ %770, %760 ]
  %763 = lshr i64 %761, 1
  %764 = getelementptr inbounds i32, ptr %762, i64 %763
  %765 = load i32, ptr %764, align 4, !tbaa !22
  %766 = icmp ult i32 %765, %754
  %767 = getelementptr inbounds i32, ptr %764, i64 1
  %768 = xor i64 %763, -1
  %769 = add nsw i64 %761, %768
  %770 = select i1 %766, ptr %767, ptr %762
  %771 = select i1 %766, i64 %769, i64 %763
  %772 = icmp sgt i64 %771, 0
  br i1 %772, label %760, label %773

773:                                              ; preds = %760
  %774 = ptrtoint ptr %770 to i64
  br label %775

775:                                              ; preds = %773, %750
  %776 = phi i64 [ %774, %773 ], [ %755, %750 ]
  %777 = phi ptr [ %770, %773 ], [ %752, %750 ]
  %778 = sub i64 %776, %228
  %779 = lshr exact i64 %778, 2
  %780 = trunc i64 %779 to i32
  %781 = getelementptr inbounds i32, ptr %733, i64 %751
  store i32 %780, ptr %781, align 4, !tbaa !22
  %782 = add nuw nsw i64 %751, 1
  %783 = icmp eq i64 %782, %739
  br i1 %783, label %740, label %750

784:                                              ; preds = %797, %746
  %785 = phi i64 [ %744, %746 ], [ %800, %797 ]
  %786 = phi i32 [ %742, %746 ], [ %799, %797 ]
  %787 = getelementptr inbounds i32, ptr %226, i64 %785
  %788 = load i32, ptr %787, align 4, !tbaa !22
  %789 = load i32, ptr %747, align 8, !tbaa !61
  br label %790

790:                                              ; preds = %790, %784
  %791 = phi i32 [ %789, %784 ], [ %792, %790 ]
  %792 = add i32 %791, -1
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds i32, ptr %749, i64 %793
  %795 = load i32, ptr %794, align 4, !tbaa !22
  %796 = icmp ugt i32 %795, %788
  br i1 %796, label %790, label %797

797:                                              ; preds = %790
  %798 = sub i32 %788, %795
  store i32 %798, ptr %787, align 4, !tbaa !22
  %799 = add i32 %786, 1
  %800 = zext i32 %799 to i64
  %801 = icmp ugt i64 %743, %800
  br i1 %801, label %784, label %802

802:                                              ; preds = %797, %740
  %803 = icmp eq i32 %24, 0
  br i1 %803, label %860, label %804

804:                                              ; preds = %802
  %805 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 3, i32 0, i32 1
  %806 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %807 = zext i32 %24 to i64
  br label %813

808:                                              ; preds = %832, %813
  %809 = phi ptr [ %814, %813 ], [ %855, %832 ]
  %810 = icmp eq i64 %816, %807
  br i1 %810, label %860, label %813

811:                                              ; preds = %235
  %812 = landingpad { ptr, i32 }
          cleanup
  br label %868

813:                                              ; preds = %804, %808
  %814 = phi ptr [ %226, %804 ], [ %809, %808 ]
  %815 = phi i64 [ 0, %804 ], [ %816, %808 ]
  %816 = add nuw nsw i64 %815, 1
  %817 = getelementptr inbounds i32, ptr %733, i64 %816
  %818 = load i32, ptr %817, align 4, !tbaa !22
  %819 = getelementptr inbounds i32, ptr %733, i64 %815
  %820 = load i32, ptr %819, align 4, !tbaa !22
  %821 = icmp ult i32 %820, %818
  br i1 %821, label %822, label %808

822:                                              ; preds = %813
  %823 = zext i32 %820 to i64
  %824 = zext i32 %818 to i64
  %825 = trunc i64 %815 to i32
  br label %826

826:                                              ; preds = %822, %832
  %827 = phi ptr [ %814, %822 ], [ %855, %832 ]
  %828 = phi i64 [ %823, %822 ], [ %833, %832 ]
  %829 = getelementptr inbounds i32, ptr %827, i64 %828
  %830 = load i32, ptr %829, align 4, !tbaa !22
  %831 = zext i32 %830 to i64
  br label %835

832:                                              ; preds = %854
  %833 = add nuw nsw i64 %828, 1
  %834 = icmp eq i64 %833, %824
  br i1 %834, label %808, label %826

835:                                              ; preds = %826, %854
  %836 = phi ptr [ %827, %826 ], [ %855, %854 ]
  %837 = phi i64 [ 0, %826 ], [ %839, %854 ]
  %838 = phi ptr [ %827, %826 ], [ %856, %854 ]
  %839 = add nuw nsw i64 %837, 1
  %840 = getelementptr inbounds i32, ptr %733, i64 %839
  %841 = load i32, ptr %840, align 4, !tbaa !22
  %842 = load ptr, ptr %805, align 8, !tbaa !665, !noalias !674
  %843 = load i32, ptr %806, align 8, !tbaa !22, !noalias !674
  %844 = mul i32 %843, %825
  %845 = zext i32 %844 to i64
  %846 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %842, i64 %845
  %847 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %846, i64 %837
  %848 = load ptr, ptr %847, align 8, !tbaa !669
  %849 = zext i32 %841 to i64
  %850 = getelementptr inbounds i32, ptr %836, i64 %849
  %851 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %848, i64 0, i32 3
  %852 = load ptr, ptr %851, align 8, !tbaa !472
  %853 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %852, i64 %831
  invoke void @_ZN6dealii31CompressedSimpleSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b(ptr noundef nonnull align 8 dereferenceable(24) %853, ptr %838, ptr %850, i1 noundef zeroext true)
          to label %854 unwind label %858

854:                                              ; preds = %835
  %855 = load ptr, ptr %11, align 8, !tbaa !21
  %856 = getelementptr inbounds i32, ptr %855, i64 %849
  %857 = icmp eq i64 %839, %807
  br i1 %857, label %832, label %835

858:                                              ; preds = %835
  %859 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %733) #23
  br label %868

860:                                              ; preds = %808, %802
  call void @_ZdlPv(ptr noundef nonnull %733) #23
  %861 = icmp eq ptr %57, null
  br i1 %861, label %863, label %862

862:                                              ; preds = %860
  call void @_ZdlPv(ptr noundef nonnull %57) #23
  br label %863

863:                                              ; preds = %862, %860
  %864 = load ptr, ptr %11, align 8, !tbaa !58
  %865 = icmp eq ptr %864, null
  br i1 %865, label %867, label %866

866:                                              ; preds = %863
  call void @_ZdlPv(ptr noundef nonnull %864) #23
  br label %867

867:                                              ; preds = %863, %866
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #24
  br label %2032

868:                                              ; preds = %722, %724, %438, %440, %345, %347, %190, %192, %727, %858, %811, %273
  %869 = phi ptr [ %57, %273 ], [ %57, %727 ], [ %57, %858 ], [ %57, %811 ], [ %81, %190 ], [ %81, %192 ], [ %57, %347 ], [ %57, %345 ], [ %57, %440 ], [ %57, %438 ], [ %57, %722 ], [ %57, %724 ]
  %870 = phi { ptr, i32 } [ %274, %273 ], [ %728, %727 ], [ %859, %858 ], [ %812, %811 ], [ %191, %190 ], [ %193, %192 ], [ %348, %347 ], [ %346, %345 ], [ %441, %440 ], [ %439, %438 ], [ %723, %722 ], [ %725, %724 ]
  %871 = icmp eq ptr %869, null
  br i1 %871, label %873, label %872

872:                                              ; preds = %868
  call void @_ZdlPv(ptr noundef nonnull %869) #23
  br label %873

873:                                              ; preds = %872, %868
  %874 = load ptr, ptr %11, align 8, !tbaa !58
  %875 = icmp eq ptr %874, null
  br i1 %875, label %877, label %876

876:                                              ; preds = %873
  call void @_ZdlPv(ptr noundef nonnull %874) #23
  br label %877

877:                                              ; preds = %876, %873, %76
  %878 = phi { ptr, i32 } [ %77, %76 ], [ %870, %873 ], [ %870, %876 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #24
  br label %2069

879:                                              ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #24
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13) #24
  store i32 -1, ptr %13, align 8, !tbaa !317
  %880 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %13, i64 0, i32 1
  store i32 -1, ptr %880, align 4, !tbaa !319
  %881 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %13, i64 0, i32 2
  store ptr null, ptr %881, align 8, !tbaa !320
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  %882 = icmp eq i64 %28, 0
  br i1 %882, label %883, label %885

883:                                              ; preds = %879
  %884 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %12, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  br label %928

885:                                              ; preds = %879
  %886 = shl nuw nsw i64 %28, 4
  %887 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %886) #21
          to label %888 unwind label %978

888:                                              ; preds = %885
  store ptr %887, ptr %12, align 8, !tbaa !321
  %889 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %887, i64 %28
  %890 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %12, i64 0, i32 2
  store ptr %889, ptr %890, align 8, !tbaa !323
  %891 = and i64 %21, 3
  %892 = icmp eq i64 %891, 0
  br i1 %892, label %903, label %893

893:                                              ; preds = %888, %893
  %894 = phi ptr [ %900, %893 ], [ %887, %888 ]
  %895 = phi i64 [ %899, %893 ], [ %28, %888 ]
  %896 = phi i64 [ %901, %893 ], [ 0, %888 ]
  %897 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %894, i64 0, i32 2
  store ptr null, ptr %897, align 8, !tbaa !320
  store i32 -1, ptr %894, align 8, !tbaa !317
  %898 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %894, i64 0, i32 1
  store i32 -1, ptr %898, align 4, !tbaa !319
  %899 = add nsw i64 %895, -1
  %900 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %894, i64 1
  %901 = add i64 %896, 1
  %902 = icmp eq i64 %901, %891
  br i1 %902, label %903, label %893, !llvm.loop !677

903:                                              ; preds = %893, %888
  %904 = phi ptr [ undef, %888 ], [ %900, %893 ]
  %905 = phi ptr [ %887, %888 ], [ %900, %893 ]
  %906 = phi i64 [ %28, %888 ], [ %899, %893 ]
  %907 = icmp ult i64 %28, 4
  br i1 %907, label %925, label %908

908:                                              ; preds = %903, %908
  %909 = phi ptr [ %923, %908 ], [ %905, %903 ]
  %910 = phi i64 [ %922, %908 ], [ %906, %903 ]
  %911 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %909, i64 0, i32 2
  store ptr null, ptr %911, align 8, !tbaa !320
  store i32 -1, ptr %909, align 8, !tbaa !317
  %912 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %909, i64 0, i32 1
  store i32 -1, ptr %912, align 4, !tbaa !319
  %913 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %909, i64 1
  %914 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %909, i64 1, i32 2
  store ptr null, ptr %914, align 8, !tbaa !320
  store i32 -1, ptr %913, align 8, !tbaa !317
  %915 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %909, i64 1, i32 1
  store i32 -1, ptr %915, align 4, !tbaa !319
  %916 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %909, i64 2
  %917 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %909, i64 2, i32 2
  store ptr null, ptr %917, align 8, !tbaa !320
  store i32 -1, ptr %916, align 8, !tbaa !317
  %918 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %909, i64 2, i32 1
  store i32 -1, ptr %918, align 4, !tbaa !319
  %919 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %909, i64 3
  %920 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %909, i64 3, i32 2
  store ptr null, ptr %920, align 8, !tbaa !320
  store i32 -1, ptr %919, align 8, !tbaa !317
  %921 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %909, i64 3, i32 1
  store i32 -1, ptr %921, align 4, !tbaa !319
  %922 = add nsw i64 %910, -4
  %923 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %909, i64 4
  %924 = icmp eq i64 %922, 0
  br i1 %924, label %925, label %908

925:                                              ; preds = %908, %903
  %926 = phi ptr [ %904, %903 ], [ %923, %908 ]
  %927 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %12, i64 0, i32 1
  store ptr %926, ptr %927, align 8, !tbaa !325
  br label %928

928:                                              ; preds = %925, %883
  %929 = phi ptr [ null, %883 ], [ %887, %925 ]
  %930 = phi ptr [ null, %883 ], [ %926, %925 ]
  %931 = phi ptr [ %884, %883 ], [ %927, %925 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #24
  %932 = icmp eq i32 %22, 0
  br i1 %932, label %943, label %933

933:                                              ; preds = %928
  %934 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %935 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %936 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %937 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %938 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %939 = and i64 %21, 4294967295
  br label %981

940:                                              ; preds = %1088
  %941 = load ptr, ptr %931, align 8, !tbaa !21
  %942 = load ptr, ptr %12, align 8, !tbaa !321
  br label %943

943:                                              ; preds = %940, %928
  %944 = phi ptr [ %929, %928 ], [ %942, %940 ]
  %945 = phi ptr [ %930, %928 ], [ %941, %940 ]
  %946 = phi ptr [ null, %928 ], [ %1090, %940 ]
  %947 = phi ptr [ null, %928 ], [ %1091, %940 ]
  %948 = phi i32 [ 0, %928 ], [ %1092, %940 ]
  %949 = zext i32 %948 to i64
  store i32 -1, ptr %14, align 8, !tbaa !317
  %950 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %14, i64 0, i32 1
  store i32 -1, ptr %950, align 4, !tbaa !319
  %951 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %14, i64 0, i32 2
  store ptr null, ptr %951, align 8, !tbaa !320
  %952 = ptrtoint ptr %945 to i64
  %953 = ptrtoint ptr %944 to i64
  %954 = sub i64 %952, %953
  %955 = ashr exact i64 %954, 4
  %956 = icmp ult i64 %955, %949
  br i1 %956, label %957, label %959

957:                                              ; preds = %943
  %958 = sub nsw i64 %949, %955
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr %945, i64 noundef %958, ptr noundef nonnull align 8 dereferenceable(16) %14)
          to label %1099 unwind label %1198

959:                                              ; preds = %943
  %960 = icmp ugt i64 %955, %949
  br i1 %960, label %961, label %1099

961:                                              ; preds = %959
  %962 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %944, i64 %949
  %963 = icmp eq ptr %945, %962
  br i1 %963, label %1099, label %964

964:                                              ; preds = %961, %974
  %965 = phi ptr [ %975, %974 ], [ %962, %961 ]
  %966 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %965, i64 0, i32 2
  %967 = load ptr, ptr %966, align 8, !tbaa !320
  %968 = icmp eq ptr %967, null
  br i1 %968, label %974, label %969

969:                                              ; preds = %964
  %970 = load ptr, ptr %967, align 8, !tbaa !32
  %971 = icmp eq ptr %970, null
  br i1 %971, label %973, label %972

972:                                              ; preds = %969
  tail call void @_ZdlPv(ptr noundef nonnull %970) #23
  br label %973

973:                                              ; preds = %972, %969
  tail call void @_ZdlPv(ptr noundef nonnull %967) #23
  store ptr null, ptr %966, align 8, !tbaa !320
  br label %974

974:                                              ; preds = %973, %964
  %975 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %965, i64 1
  %976 = icmp eq ptr %975, %945
  br i1 %976, label %977, label %964

977:                                              ; preds = %974
  store ptr %962, ptr %931, align 8, !tbaa !325
  br label %1099

978:                                              ; preds = %885
  %979 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13)
          to label %980 unwind label %2071

980:                                              ; preds = %978
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #24
  br label %2067

981:                                              ; preds = %933, %1088
  %982 = phi i64 [ 0, %933 ], [ %1093, %1088 ]
  %983 = phi i32 [ 0, %933 ], [ %1092, %1088 ]
  %984 = phi ptr [ null, %933 ], [ %1091, %1088 ]
  %985 = phi ptr [ null, %933 ], [ %1090, %1088 ]
  %986 = phi ptr [ null, %933 ], [ %1089, %1088 ]
  %987 = load ptr, ptr %935, align 8, !tbaa !55
  %988 = load i32, ptr %936, align 8, !tbaa !57
  %989 = load ptr, ptr %934, align 8, !tbaa !55
  %990 = ptrtoint ptr %987 to i64
  %991 = ptrtoint ptr %989 to i64
  %992 = sub i64 %990, %991
  %993 = shl nsw i64 %992, 3
  %994 = zext i32 %988 to i64
  %995 = add nsw i64 %993, %994
  %996 = load ptr, ptr %1, align 8, !tbaa !58
  %997 = getelementptr inbounds i32, ptr %996, i64 %982
  %998 = load i32, ptr %997, align 4, !tbaa !22
  %999 = zext i32 %998 to i64
  %1000 = icmp ugt i64 %995, %999
  br i1 %1000, label %1001, label %1011

1001:                                             ; preds = %981
  %1002 = lshr i32 %998, 6
  %1003 = zext i32 %1002 to i64
  %1004 = getelementptr inbounds i64, ptr %989, i64 %1003
  %1005 = and i32 %998, 63
  %1006 = zext i32 %1005 to i64
  %1007 = shl nuw i64 1, %1006
  %1008 = load i64, ptr %1004, align 8, !tbaa !42
  %1009 = and i64 %1008, %1007
  %1010 = icmp eq i64 %1009, 0
  br i1 %1010, label %1011, label %1018

1011:                                             ; preds = %1001, %981
  %1012 = zext i32 %983 to i64
  %1013 = load ptr, ptr %12, align 8, !tbaa !321
  %1014 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1013, i64 %1012
  store i32 %998, ptr %1014, align 8, !tbaa !317
  %1015 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1013, i64 %1012, i32 1
  %1016 = trunc i64 %982 to i32
  store i32 %1016, ptr %1015, align 4, !tbaa !319
  %1017 = add i32 %983, 1
  br label %1088

1018:                                             ; preds = %1001
  %1019 = load ptr, ptr %937, align 8, !tbaa !21
  %1020 = load ptr, ptr %938, align 8, !tbaa !21
  %1021 = ptrtoint ptr %1020 to i64
  %1022 = ptrtoint ptr %1019 to i64
  %1023 = sub i64 %1021, %1022
  %1024 = icmp sgt i64 %1023, 0
  br i1 %1024, label %1025, label %1040

1025:                                             ; preds = %1018
  %1026 = udiv exact i64 %1023, 40
  br label %1027

1027:                                             ; preds = %1027, %1025
  %1028 = phi i64 [ %1026, %1025 ], [ %1038, %1027 ]
  %1029 = phi ptr [ %1019, %1025 ], [ %1037, %1027 ]
  %1030 = lshr i64 %1028, 1
  %1031 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1029, i64 %1030
  %1032 = load i32, ptr %1031, align 8, !tbaa !24
  %1033 = icmp ult i32 %1032, %998
  %1034 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1031, i64 1
  %1035 = xor i64 %1030, -1
  %1036 = add nsw i64 %1028, %1035
  %1037 = select i1 %1033, ptr %1034, ptr %1029
  %1038 = select i1 %1033, i64 %1036, i64 %1030
  %1039 = icmp sgt i64 %1038, 0
  br i1 %1039, label %1027, label %1040

1040:                                             ; preds = %1027, %1018
  %1041 = phi ptr [ %1019, %1018 ], [ %1037, %1027 ]
  %1042 = icmp eq ptr %985, %986
  br i1 %1042, label %1046, label %1043

1043:                                             ; preds = %1040
  %1044 = trunc i64 %982 to i32
  store i32 %1044, ptr %985, align 8
  %1045 = getelementptr inbounds i8, ptr %985, i64 8
  store ptr %1041, ptr %1045, align 8
  br label %1083

1046:                                             ; preds = %1040
  %1047 = ptrtoint ptr %985 to i64
  %1048 = ptrtoint ptr %984 to i64
  %1049 = sub i64 %1047, %1048
  %1050 = icmp eq i64 %1049, 9223372036854775792
  br i1 %1050, label %1051, label %1053

1051:                                             ; preds = %1046
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %1052 unwind label %1097

1052:                                             ; preds = %1051
  unreachable

1053:                                             ; preds = %1046
  %1054 = ashr exact i64 %1049, 4
  %1055 = tail call i64 @llvm.umax.i64(i64 %1054, i64 1)
  %1056 = add i64 %1055, %1054
  %1057 = icmp ult i64 %1056, %1054
  %1058 = icmp ugt i64 %1056, 576460752303423487
  %1059 = or i1 %1057, %1058
  %1060 = select i1 %1059, i64 576460752303423487, i64 %1056
  %1061 = icmp eq i64 %1060, 0
  br i1 %1061, label %1065, label %1062

1062:                                             ; preds = %1053
  %1063 = shl nuw nsw i64 %1060, 4
  %1064 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1063) #21
          to label %1065 unwind label %1095

1065:                                             ; preds = %1062, %1053
  %1066 = phi ptr [ null, %1053 ], [ %1064, %1062 ]
  %1067 = getelementptr inbounds %"struct.std::pair.188", ptr %1066, i64 %1054
  %1068 = trunc i64 %982 to i32
  store i32 %1068, ptr %1067, align 8
  %1069 = getelementptr inbounds i8, ptr %1067, i64 8
  store ptr %1041, ptr %1069, align 8
  %1070 = icmp eq ptr %984, %985
  br i1 %1070, label %1077, label %1071

1071:                                             ; preds = %1065, %1071
  %1072 = phi ptr [ %1075, %1071 ], [ %1066, %1065 ]
  %1073 = phi ptr [ %1074, %1071 ], [ %984, %1065 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %1072, ptr noundef nonnull align 8 dereferenceable(16) %1073, i64 16, i1 false)
  %1074 = getelementptr inbounds %"struct.std::pair.188", ptr %1073, i64 1
  %1075 = getelementptr inbounds %"struct.std::pair.188", ptr %1072, i64 1
  %1076 = icmp eq ptr %1074, %985
  br i1 %1076, label %1077, label %1071

1077:                                             ; preds = %1071, %1065
  %1078 = phi ptr [ %1066, %1065 ], [ %1075, %1071 ]
  %1079 = icmp eq ptr %984, null
  br i1 %1079, label %1081, label %1080

1080:                                             ; preds = %1077
  tail call void @_ZdlPv(ptr noundef nonnull %984) #23
  br label %1081

1081:                                             ; preds = %1080, %1077
  %1082 = getelementptr inbounds %"struct.std::pair.188", ptr %1066, i64 %1060
  br label %1083

1083:                                             ; preds = %1081, %1043
  %1084 = phi ptr [ %1082, %1081 ], [ %986, %1043 ]
  %1085 = phi ptr [ %1078, %1081 ], [ %985, %1043 ]
  %1086 = phi ptr [ %1066, %1081 ], [ %984, %1043 ]
  %1087 = getelementptr inbounds %"struct.std::pair.188", ptr %1085, i64 1
  br label %1088

1088:                                             ; preds = %1083, %1011
  %1089 = phi ptr [ %1084, %1083 ], [ %986, %1011 ]
  %1090 = phi ptr [ %1087, %1083 ], [ %985, %1011 ]
  %1091 = phi ptr [ %1086, %1083 ], [ %984, %1011 ]
  %1092 = phi i32 [ %983, %1083 ], [ %1017, %1011 ]
  %1093 = add nuw nsw i64 %982, 1
  %1094 = icmp eq i64 %1093, %939
  br i1 %1094, label %940, label %981

1095:                                             ; preds = %1062
  %1096 = landingpad { ptr, i32 }
          cleanup
  br label %2039

1097:                                             ; preds = %1051
  %1098 = landingpad { ptr, i32 }
          cleanup
  br label %2039

1099:                                             ; preds = %977, %961, %959, %957
  %1100 = load ptr, ptr %951, align 8, !tbaa !320
  %1101 = icmp eq ptr %1100, null
  br i1 %1101, label %1107, label %1102

1102:                                             ; preds = %1099
  %1103 = load ptr, ptr %1100, align 8, !tbaa !32
  %1104 = icmp eq ptr %1103, null
  br i1 %1104, label %1106, label %1105

1105:                                             ; preds = %1102
  call void @_ZdlPv(ptr noundef nonnull %1103) #23
  br label %1106

1106:                                             ; preds = %1105, %1102
  call void @_ZdlPv(ptr noundef nonnull %1100) #23
  store ptr null, ptr %951, align 8, !tbaa !320
  br label %1107

1107:                                             ; preds = %1106, %1099
  %1108 = load ptr, ptr %931, align 8, !tbaa !325
  %1109 = load ptr, ptr %12, align 8, !tbaa !321
  %1110 = ptrtoint ptr %1108 to i64
  %1111 = ptrtoint ptr %1109 to i64
  %1112 = sub i64 %1110, %1111
  %1113 = lshr exact i64 %1112, 4
  %1114 = trunc i64 %1113 to i32
  %1115 = icmp ult i32 %1114, 2
  br i1 %1115, label %1161, label %1118

1116:                                             ; preds = %1157, %1118
  %1117 = icmp ult i32 %1119, 4
  br i1 %1117, label %1161, label %1118

1118:                                             ; preds = %1107, %1116
  %1119 = phi i32 [ %1120, %1116 ], [ %1114, %1107 ]
  %1120 = lshr i32 %1119, 1
  %1121 = icmp ult i32 %1120, %1114
  br i1 %1121, label %1122, label %1116

1122:                                             ; preds = %1118
  %1123 = zext i32 %1120 to i64
  br label %1124

1124:                                             ; preds = %1157, %1122
  %1125 = phi i64 [ %1123, %1122 ], [ %1158, %1157 ]
  %1126 = sub nuw nsw i64 %1125, %1123
  %1127 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1109, i64 %1125
  %1128 = load <2 x i32>, ptr %1127, align 8, !tbaa !22
  %1129 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1109, i64 %1126
  %1130 = load i32, ptr %1129, align 8, !tbaa !317
  %1131 = extractelement <2 x i32> %1128, i64 0
  %1132 = icmp ugt i32 %1130, %1131
  br i1 %1132, label %1133, label %1157

1133:                                             ; preds = %1124
  %1134 = icmp ult i64 %1125, %1123
  %1135 = trunc i64 %1125 to i32
  br i1 %1134, label %1153, label %1136

1136:                                             ; preds = %1133
  %1137 = trunc i64 %1126 to i32
  br label %1138

1138:                                             ; preds = %1145, %1136
  %1139 = phi i32 [ %1140, %1145 ], [ %1135, %1136 ]
  %1140 = phi i32 [ %1151, %1145 ], [ %1137, %1136 ]
  %1141 = zext i32 %1140 to i64
  %1142 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1109, i64 %1141
  %1143 = load i32, ptr %1142, align 8, !tbaa !317
  %1144 = icmp ugt i32 %1143, %1131
  br i1 %1144, label %1145, label %1153

1145:                                             ; preds = %1138
  %1146 = zext i32 %1139 to i64
  %1147 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1109, i64 %1146
  store i32 %1143, ptr %1147, align 8, !tbaa !317
  %1148 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1109, i64 %1141, i32 1
  %1149 = load i32, ptr %1148, align 4, !tbaa !319
  %1150 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1109, i64 %1146, i32 1
  store i32 %1149, ptr %1150, align 4, !tbaa !319
  %1151 = sub i32 %1140, %1120
  %1152 = icmp ult i32 %1140, %1120
  br i1 %1152, label %1153, label %1138

1153:                                             ; preds = %1145, %1138, %1133
  %1154 = phi i32 [ %1135, %1133 ], [ %1139, %1138 ], [ %1140, %1145 ]
  %1155 = zext i32 %1154 to i64
  %1156 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1109, i64 %1155
  store <2 x i32> %1128, ptr %1156, align 8, !tbaa !22
  br label %1157

1157:                                             ; preds = %1153, %1124
  %1158 = add nuw nsw i64 %1125, 1
  %1159 = trunc i64 %1158 to i32
  %1160 = icmp eq i32 %1114, %1159
  br i1 %1160, label %1116, label %1124

1161:                                             ; preds = %1116, %1107
  %1162 = ptrtoint ptr %946 to i64
  %1163 = ptrtoint ptr %947 to i64
  %1164 = sub i64 %1162, %1163
  %1165 = and i64 %1164, 68719476720
  %1166 = icmp eq i64 %1165, 0
  br i1 %1166, label %1185, label %1167

1167:                                             ; preds = %1161
  %1168 = lshr exact i64 %1164, 4
  %1169 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %1170 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %1171 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 4
  %1172 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 4, i32 1
  %1173 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 5
  %1174 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 5, i32 1
  %1175 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 3, i32 0, i32 1
  %1176 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %1177 = and i64 %1168, 4294967295
  %1178 = and i64 %21, 4294967295
  br label %1200

1179:                                             ; preds = %1473
  %1180 = load ptr, ptr %931, align 8, !tbaa !325
  %1181 = load ptr, ptr %12, align 8, !tbaa !321
  %1182 = ptrtoint ptr %1180 to i64
  %1183 = ptrtoint ptr %1181 to i64
  %1184 = sub i64 %1182, %1183
  br label %1185

1185:                                             ; preds = %1179, %1161
  %1186 = phi i64 [ %1184, %1179 ], [ %1112, %1161 ]
  %1187 = phi ptr [ %1181, %1179 ], [ %1109, %1161 ]
  %1188 = phi i8 [ %1217, %1179 ], [ 0, %1161 ]
  %1189 = ashr exact i64 %1186, 4
  %1190 = trunc i64 %1189 to i32
  %1191 = and i64 %1189, 4294967295
  %1192 = icmp eq i64 %1191, 0
  br i1 %1192, label %1476, label %1193

1193:                                             ; preds = %1185
  %1194 = shl nuw nsw i64 %1191, 2
  %1195 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1194) #21
          to label %1196 unwind label %1594

1196:                                             ; preds = %1193
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %1195, i8 0, i64 %1194, i1 false), !tbaa !22
  %1197 = getelementptr inbounds i32, ptr %1195, i64 %1191
  br label %1476

1198:                                             ; preds = %957
  %1199 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %14)
          to label %2039 unwind label %2071

1200:                                             ; preds = %1167, %1473
  %1201 = phi i64 [ 0, %1167 ], [ %1474, %1473 ]
  %1202 = phi i8 [ 0, %1167 ], [ %1217, %1473 ]
  %1203 = getelementptr inbounds %"struct.std::pair.188", ptr %947, i64 %1201
  %1204 = load i32, ptr %1203, align 8, !tbaa !326
  %1205 = zext i32 %1204 to i64
  %1206 = load ptr, ptr %1, align 8, !tbaa !58
  %1207 = getelementptr inbounds i32, ptr %1206, i64 %1205
  %1208 = load i32, ptr %1207, align 4, !tbaa !22
  %1209 = getelementptr inbounds %"struct.std::pair.188", ptr %947, i64 %1201, i32 1
  %1210 = load ptr, ptr %1209, align 8, !tbaa !328
  %1211 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1210, i64 0, i32 1
  %1212 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1210, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1213 = load ptr, ptr %1212, align 8, !tbaa !31
  %1214 = load ptr, ptr %1211, align 8, !tbaa !32
  %1215 = icmp eq ptr %1213, %1214
  br i1 %1215, label %1216, label %1219

1216:                                             ; preds = %1227, %1200
  %1217 = phi i8 [ %1202, %1200 ], [ 1, %1227 ]
  br i1 %3, label %1218, label %1470

1218:                                             ; preds = %1216
  br i1 %932, label %1473, label %1239

1219:                                             ; preds = %1200, %1227
  %1220 = phi ptr [ %1231, %1227 ], [ %1214, %1200 ]
  %1221 = phi i64 [ %1229, %1227 ], [ 0, %1200 ]
  %1222 = phi i32 [ %1228, %1227 ], [ 0, %1200 ]
  %1223 = getelementptr inbounds %"struct.std::pair", ptr %1220, i64 %1221
  %1224 = load i32, ptr %1223, align 8, !tbaa !37
  %1225 = getelementptr inbounds %"struct.std::pair", ptr %1220, i64 %1221, i32 1
  %1226 = load double, ptr %1225, align 8, !tbaa !35
  invoke void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %12, i32 noundef %1224, i32 %1204, double %1226)
          to label %1227 unwind label %1237

1227:                                             ; preds = %1219
  %1228 = add i32 %1222, 1
  %1229 = zext i32 %1228 to i64
  %1230 = load ptr, ptr %1212, align 8, !tbaa !31
  %1231 = load ptr, ptr %1211, align 8, !tbaa !32
  %1232 = ptrtoint ptr %1230 to i64
  %1233 = ptrtoint ptr %1231 to i64
  %1234 = sub i64 %1232, %1233
  %1235 = ashr exact i64 %1234, 4
  %1236 = icmp ugt i64 %1235, %1229
  br i1 %1236, label %1219, label %1216

1237:                                             ; preds = %1219
  %1238 = landingpad { ptr, i32 }
          cleanup
  br label %2039

1239:                                             ; preds = %1218, %1467
  %1240 = phi i64 [ %1468, %1467 ], [ 0, %1218 ]
  %1241 = load ptr, ptr %1169, align 8, !tbaa !422, !noalias !73
  %1242 = load i32, ptr %1170, align 8, !tbaa !22, !noalias !73
  %1243 = mul i32 %1242, %1204
  %1244 = zext i32 %1243 to i64
  %1245 = getelementptr inbounds i8, ptr %1241, i64 %1244
  %1246 = getelementptr inbounds i8, ptr %1245, i64 %1240
  %1247 = load i8, ptr %1246, align 1, !tbaa !424, !range !425, !noundef !73
  %1248 = icmp eq i8 %1247, 0
  br i1 %1248, label %1355, label %1249

1249:                                             ; preds = %1239
  %1250 = load ptr, ptr %1, align 8, !tbaa !58
  %1251 = getelementptr inbounds i32, ptr %1250, i64 %1240
  %1252 = load i32, ptr %1251, align 4, !tbaa !22
  %1253 = load i32, ptr %1171, align 8, !tbaa !61
  %1254 = load ptr, ptr %1172, align 8, !tbaa !58
  br label %1255

1255:                                             ; preds = %1255, %1249
  %1256 = phi i32 [ %1253, %1249 ], [ %1257, %1255 ]
  %1257 = add i32 %1256, -1
  %1258 = sext i32 %1257 to i64
  %1259 = getelementptr inbounds i32, ptr %1254, i64 %1258
  %1260 = load i32, ptr %1259, align 4, !tbaa !22
  %1261 = icmp ugt i32 %1260, %1208
  br i1 %1261, label %1255, label %1262

1262:                                             ; preds = %1255
  %1263 = load i32, ptr %1173, align 8, !tbaa !61
  %1264 = load ptr, ptr %1174, align 8, !tbaa !58
  br label %1265

1265:                                             ; preds = %1265, %1262
  %1266 = phi i32 [ %1263, %1262 ], [ %1267, %1265 ]
  %1267 = add i32 %1266, -1
  %1268 = sext i32 %1267 to i64
  %1269 = getelementptr inbounds i32, ptr %1264, i64 %1268
  %1270 = load i32, ptr %1269, align 4, !tbaa !22
  %1271 = icmp ugt i32 %1270, %1252
  br i1 %1271, label %1265, label %1272

1272:                                             ; preds = %1265
  %1273 = sub i32 %1208, %1260
  %1274 = zext i32 %1273 to i64
  %1275 = sub i32 %1252, %1270
  %1276 = load ptr, ptr %1175, align 8, !tbaa !665, !noalias !678
  %1277 = load i32, ptr %1176, align 8, !tbaa !22, !noalias !678
  %1278 = mul i32 %1277, %1257
  %1279 = zext i32 %1278 to i64
  %1280 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %1276, i64 %1279
  %1281 = zext i32 %1267 to i64
  %1282 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %1280, i64 %1281
  %1283 = load ptr, ptr %1282, align 8, !tbaa !669
  %1284 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %1283, i64 0, i32 3
  %1285 = load ptr, ptr %1284, align 8, !tbaa !472
  %1286 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %1285, i64 %1274
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7)
  store i32 %1275, ptr %7, align 4, !tbaa !22
  %1287 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1286, i64 0, i32 1
  %1288 = load ptr, ptr %1287, align 8, !tbaa !21
  %1289 = load ptr, ptr %1286, align 8, !tbaa !21
  %1290 = ptrtoint ptr %1288 to i64
  %1291 = ptrtoint ptr %1289 to i64
  %1292 = sub i64 %1290, %1291
  %1293 = icmp eq ptr %1288, %1289
  br i1 %1293, label %1298, label %1294

1294:                                             ; preds = %1272
  %1295 = getelementptr inbounds i32, ptr %1288, i64 -1
  %1296 = load i32, ptr %1295, align 4, !tbaa !22
  %1297 = icmp ult i32 %1296, %1275
  br i1 %1297, label %1298, label %1305

1298:                                             ; preds = %1294, %1272
  %1299 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1286, i64 0, i32 2
  %1300 = load ptr, ptr %1299, align 8, !tbaa !417
  %1301 = icmp eq ptr %1288, %1300
  br i1 %1301, label %1304, label %1302

1302:                                             ; preds = %1298
  store i32 %1275, ptr %1288, align 4, !tbaa !22
  %1303 = getelementptr inbounds i32, ptr %1288, i64 1
  store ptr %1303, ptr %1287, align 8, !tbaa !313
  br label %1350

1304:                                             ; preds = %1298
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %1286, ptr %1288, ptr noundef nonnull align 4 dereferenceable(4) %7)
          to label %1350 unwind label %1353

1305:                                             ; preds = %1294
  %1306 = icmp sgt i64 %1292, 0
  br i1 %1306, label %1307, label %1322

1307:                                             ; preds = %1305
  %1308 = lshr exact i64 %1292, 2
  br label %1309

1309:                                             ; preds = %1309, %1307
  %1310 = phi i64 [ %1308, %1307 ], [ %1320, %1309 ]
  %1311 = phi ptr [ %1289, %1307 ], [ %1319, %1309 ]
  %1312 = lshr i64 %1310, 1
  %1313 = getelementptr inbounds i32, ptr %1311, i64 %1312
  %1314 = load i32, ptr %1313, align 4, !tbaa !22
  %1315 = icmp ult i32 %1314, %1275
  %1316 = getelementptr inbounds i32, ptr %1313, i64 1
  %1317 = xor i64 %1312, -1
  %1318 = add nsw i64 %1310, %1317
  %1319 = select i1 %1315, ptr %1316, ptr %1311
  %1320 = select i1 %1315, i64 %1318, i64 %1312
  %1321 = icmp sgt i64 %1320, 0
  br i1 %1321, label %1309, label %1322

1322:                                             ; preds = %1309, %1305
  %1323 = phi ptr [ %1289, %1305 ], [ %1319, %1309 ]
  %1324 = load i32, ptr %1323, align 4, !tbaa !22
  %1325 = icmp eq i32 %1324, %1275
  br i1 %1325, label %1350, label %1326

1326:                                             ; preds = %1322
  %1327 = ptrtoint ptr %1323 to i64
  %1328 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1286, i64 0, i32 2
  %1329 = load ptr, ptr %1328, align 8, !tbaa !417
  %1330 = icmp eq ptr %1288, %1329
  br i1 %1330, label %1349, label %1331

1331:                                             ; preds = %1326
  %1332 = icmp eq ptr %1288, %1323
  %1333 = getelementptr inbounds i32, ptr %1288, i64 1
  br i1 %1332, label %1334, label %1335

1334:                                             ; preds = %1331
  store i32 %1275, ptr %1288, align 4, !tbaa !22
  store ptr %1333, ptr %1287, align 8, !tbaa !313
  br label %1350

1335:                                             ; preds = %1331
  store i32 %1296, ptr %1288, align 4, !tbaa !22
  store ptr %1333, ptr %1287, align 8, !tbaa !313
  %1336 = load i32, ptr %7, align 4, !tbaa !22
  %1337 = ptrtoint ptr %1295 to i64
  %1338 = sub i64 %1337, %1327
  %1339 = icmp sgt i64 %1338, 4
  br i1 %1339, label %1340, label %1344, !prof !23

1340:                                             ; preds = %1335
  %1341 = lshr exact i64 %1338, 2
  %1342 = sub nsw i64 0, %1341
  %1343 = getelementptr inbounds i32, ptr %1288, i64 %1342
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1343, ptr nonnull align 4 %1323, i64 %1338, i1 false)
  br label %1348

1344:                                             ; preds = %1335
  %1345 = icmp eq i64 %1338, 4
  br i1 %1345, label %1346, label %1348

1346:                                             ; preds = %1344
  %1347 = load i32, ptr %1323, align 4, !tbaa !22
  store i32 %1347, ptr %1295, align 4, !tbaa !22
  br label %1348

1348:                                             ; preds = %1346, %1344, %1340
  store i32 %1336, ptr %1323, align 4, !tbaa !22
  br label %1350

1349:                                             ; preds = %1326
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %1286, ptr nonnull %1323, ptr noundef nonnull align 4 dereferenceable(4) %7)
          to label %1350 unwind label %1353

1350:                                             ; preds = %1349, %1304, %1302, %1322, %1334, %1348
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7)
  %1351 = load ptr, ptr %1169, align 8, !tbaa !422, !noalias !681
  %1352 = load i32, ptr %1170, align 8, !tbaa !22, !noalias !681
  br label %1355

1353:                                             ; preds = %1465, %1420, %1349, %1304
  %1354 = landingpad { ptr, i32 }
          cleanup
  br label %2039

1355:                                             ; preds = %1239, %1350
  %1356 = phi i32 [ %1242, %1239 ], [ %1352, %1350 ]
  %1357 = phi ptr [ %1241, %1239 ], [ %1351, %1350 ]
  %1358 = trunc i64 %1240 to i32
  %1359 = mul i32 %1356, %1358
  %1360 = zext i32 %1359 to i64
  %1361 = getelementptr inbounds i8, ptr %1357, i64 %1360
  %1362 = getelementptr inbounds i8, ptr %1361, i64 %1205
  %1363 = load i8, ptr %1362, align 1, !tbaa !424, !range !425, !noundef !73
  %1364 = icmp eq i8 %1363, 0
  br i1 %1364, label %1467, label %1365

1365:                                             ; preds = %1355
  %1366 = load ptr, ptr %1, align 8, !tbaa !58
  %1367 = getelementptr inbounds i32, ptr %1366, i64 %1240
  %1368 = load i32, ptr %1367, align 4, !tbaa !22
  %1369 = load i32, ptr %1171, align 8, !tbaa !61
  %1370 = load ptr, ptr %1172, align 8, !tbaa !58
  br label %1371

1371:                                             ; preds = %1371, %1365
  %1372 = phi i32 [ %1369, %1365 ], [ %1373, %1371 ]
  %1373 = add i32 %1372, -1
  %1374 = sext i32 %1373 to i64
  %1375 = getelementptr inbounds i32, ptr %1370, i64 %1374
  %1376 = load i32, ptr %1375, align 4, !tbaa !22
  %1377 = icmp ugt i32 %1376, %1368
  br i1 %1377, label %1371, label %1378

1378:                                             ; preds = %1371
  %1379 = load i32, ptr %1173, align 8, !tbaa !61
  %1380 = load ptr, ptr %1174, align 8, !tbaa !58
  br label %1381

1381:                                             ; preds = %1381, %1378
  %1382 = phi i32 [ %1379, %1378 ], [ %1383, %1381 ]
  %1383 = add i32 %1382, -1
  %1384 = sext i32 %1383 to i64
  %1385 = getelementptr inbounds i32, ptr %1380, i64 %1384
  %1386 = load i32, ptr %1385, align 4, !tbaa !22
  %1387 = icmp ugt i32 %1386, %1208
  br i1 %1387, label %1381, label %1388

1388:                                             ; preds = %1381
  %1389 = sub i32 %1368, %1376
  %1390 = zext i32 %1389 to i64
  %1391 = sub i32 %1208, %1386
  %1392 = load ptr, ptr %1175, align 8, !tbaa !665, !noalias !684
  %1393 = load i32, ptr %1176, align 8, !tbaa !22, !noalias !684
  %1394 = mul i32 %1393, %1373
  %1395 = zext i32 %1394 to i64
  %1396 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %1392, i64 %1395
  %1397 = zext i32 %1383 to i64
  %1398 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %1396, i64 %1397
  %1399 = load ptr, ptr %1398, align 8, !tbaa !669
  %1400 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %1399, i64 0, i32 3
  %1401 = load ptr, ptr %1400, align 8, !tbaa !472
  %1402 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %1401, i64 %1390
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6)
  store i32 %1391, ptr %6, align 4, !tbaa !22
  %1403 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1402, i64 0, i32 1
  %1404 = load ptr, ptr %1403, align 8, !tbaa !21
  %1405 = load ptr, ptr %1402, align 8, !tbaa !21
  %1406 = ptrtoint ptr %1404 to i64
  %1407 = ptrtoint ptr %1405 to i64
  %1408 = sub i64 %1406, %1407
  %1409 = icmp eq ptr %1404, %1405
  br i1 %1409, label %1414, label %1410

1410:                                             ; preds = %1388
  %1411 = getelementptr inbounds i32, ptr %1404, i64 -1
  %1412 = load i32, ptr %1411, align 4, !tbaa !22
  %1413 = icmp ult i32 %1412, %1391
  br i1 %1413, label %1414, label %1421

1414:                                             ; preds = %1410, %1388
  %1415 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1402, i64 0, i32 2
  %1416 = load ptr, ptr %1415, align 8, !tbaa !417
  %1417 = icmp eq ptr %1404, %1416
  br i1 %1417, label %1420, label %1418

1418:                                             ; preds = %1414
  store i32 %1391, ptr %1404, align 4, !tbaa !22
  %1419 = getelementptr inbounds i32, ptr %1404, i64 1
  store ptr %1419, ptr %1403, align 8, !tbaa !313
  br label %1466

1420:                                             ; preds = %1414
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %1402, ptr %1404, ptr noundef nonnull align 4 dereferenceable(4) %6)
          to label %1466 unwind label %1353

1421:                                             ; preds = %1410
  %1422 = icmp sgt i64 %1408, 0
  br i1 %1422, label %1423, label %1438

1423:                                             ; preds = %1421
  %1424 = lshr exact i64 %1408, 2
  br label %1425

1425:                                             ; preds = %1425, %1423
  %1426 = phi i64 [ %1424, %1423 ], [ %1436, %1425 ]
  %1427 = phi ptr [ %1405, %1423 ], [ %1435, %1425 ]
  %1428 = lshr i64 %1426, 1
  %1429 = getelementptr inbounds i32, ptr %1427, i64 %1428
  %1430 = load i32, ptr %1429, align 4, !tbaa !22
  %1431 = icmp ult i32 %1430, %1391
  %1432 = getelementptr inbounds i32, ptr %1429, i64 1
  %1433 = xor i64 %1428, -1
  %1434 = add nsw i64 %1426, %1433
  %1435 = select i1 %1431, ptr %1432, ptr %1427
  %1436 = select i1 %1431, i64 %1434, i64 %1428
  %1437 = icmp sgt i64 %1436, 0
  br i1 %1437, label %1425, label %1438

1438:                                             ; preds = %1425, %1421
  %1439 = phi ptr [ %1405, %1421 ], [ %1435, %1425 ]
  %1440 = load i32, ptr %1439, align 4, !tbaa !22
  %1441 = icmp eq i32 %1440, %1391
  br i1 %1441, label %1466, label %1442

1442:                                             ; preds = %1438
  %1443 = ptrtoint ptr %1439 to i64
  %1444 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %1402, i64 0, i32 2
  %1445 = load ptr, ptr %1444, align 8, !tbaa !417
  %1446 = icmp eq ptr %1404, %1445
  br i1 %1446, label %1465, label %1447

1447:                                             ; preds = %1442
  %1448 = icmp eq ptr %1404, %1439
  %1449 = getelementptr inbounds i32, ptr %1404, i64 1
  br i1 %1448, label %1450, label %1451

1450:                                             ; preds = %1447
  store i32 %1391, ptr %1404, align 4, !tbaa !22
  store ptr %1449, ptr %1403, align 8, !tbaa !313
  br label %1466

1451:                                             ; preds = %1447
  store i32 %1412, ptr %1404, align 4, !tbaa !22
  store ptr %1449, ptr %1403, align 8, !tbaa !313
  %1452 = load i32, ptr %6, align 4, !tbaa !22
  %1453 = ptrtoint ptr %1411 to i64
  %1454 = sub i64 %1453, %1443
  %1455 = icmp sgt i64 %1454, 4
  br i1 %1455, label %1456, label %1460, !prof !23

1456:                                             ; preds = %1451
  %1457 = lshr exact i64 %1454, 2
  %1458 = sub nsw i64 0, %1457
  %1459 = getelementptr inbounds i32, ptr %1404, i64 %1458
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %1459, ptr nonnull align 4 %1439, i64 %1454, i1 false)
  br label %1464

1460:                                             ; preds = %1451
  %1461 = icmp eq i64 %1454, 4
  br i1 %1461, label %1462, label %1464

1462:                                             ; preds = %1460
  %1463 = load i32, ptr %1439, align 4, !tbaa !22
  store i32 %1463, ptr %1411, align 4, !tbaa !22
  br label %1464

1464:                                             ; preds = %1462, %1460, %1456
  store i32 %1452, ptr %1439, align 4, !tbaa !22
  br label %1466

1465:                                             ; preds = %1442
  invoke void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %1402, ptr nonnull %1439, ptr noundef nonnull align 4 dereferenceable(4) %6)
          to label %1466 unwind label %1353

1466:                                             ; preds = %1465, %1420, %1418, %1438, %1450, %1464
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6)
  br label %1467

1467:                                             ; preds = %1466, %1355
  %1468 = add nuw nsw i64 %1240, 1
  %1469 = icmp eq i64 %1468, %1178
  br i1 %1469, label %1473, label %1239

1470:                                             ; preds = %1216
  invoke void @_ZN6dealii24BlockSparsityPatternBaseINS_31CompressedSimpleSparsityPatternEE3addEjj(ptr noundef nonnull align 8 dereferenceable(288) %2, i32 noundef %1208, i32 noundef %1208)
          to label %1473 unwind label %1471

1471:                                             ; preds = %1470
  %1472 = landingpad { ptr, i32 }
          cleanup
  br label %2039

1473:                                             ; preds = %1467, %1218, %1470
  %1474 = add nuw nsw i64 %1201, 1
  %1475 = icmp eq i64 %1474, %1177
  br i1 %1475, label %1179, label %1200

1476:                                             ; preds = %1196, %1185
  %1477 = phi ptr [ null, %1185 ], [ %1195, %1196 ]
  %1478 = phi ptr [ null, %1185 ], [ %1197, %1196 ]
  %1479 = icmp eq i32 %1190, 0
  br i1 %1479, label %1552, label %1480

1480:                                             ; preds = %1476
  %1481 = and i64 %1189, 4294967295
  %1482 = icmp ult i64 %1481, 17
  br i1 %1482, label %1483, label %1502

1483:                                             ; preds = %1516, %1502, %1480
  %1484 = phi i64 [ 0, %1502 ], [ 0, %1480 ], [ %1515, %1516 ]
  %1485 = sub nsw i64 %1189, %1484
  %1486 = xor i64 %1484, -1
  %1487 = add nsw i64 %1481, %1486
  %1488 = and i64 %1485, 3
  %1489 = icmp eq i64 %1488, 0
  br i1 %1489, label %1499, label %1490

1490:                                             ; preds = %1483, %1490
  %1491 = phi i64 [ %1496, %1490 ], [ %1484, %1483 ]
  %1492 = phi i64 [ %1497, %1490 ], [ 0, %1483 ]
  %1493 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1491
  %1494 = load i32, ptr %1493, align 8, !tbaa !317
  %1495 = getelementptr inbounds i32, ptr %1477, i64 %1491
  store i32 %1494, ptr %1495, align 4, !tbaa !22
  %1496 = add nuw nsw i64 %1491, 1
  %1497 = add i64 %1492, 1
  %1498 = icmp eq i64 %1497, %1488
  br i1 %1498, label %1499, label %1490, !llvm.loop !687

1499:                                             ; preds = %1490, %1483
  %1500 = phi i64 [ %1484, %1483 ], [ %1496, %1490 ]
  %1501 = icmp ult i64 %1487, 3
  br i1 %1501, label %1552, label %1596

1502:                                             ; preds = %1480
  %1503 = shl nuw nsw i64 %1481, 2
  %1504 = getelementptr i8, ptr %1477, i64 %1503
  %1505 = shl nuw nsw i64 %1481, 4
  %1506 = add nsw i64 %1505, -12
  %1507 = getelementptr i8, ptr %1187, i64 %1506
  %1508 = icmp ult ptr %1477, %1507
  %1509 = icmp ult ptr %1187, %1504
  %1510 = and i1 %1508, %1509
  br i1 %1510, label %1483, label %1511

1511:                                             ; preds = %1502
  %1512 = and i64 %1189, 7
  %1513 = icmp eq i64 %1512, 0
  %1514 = select i1 %1513, i64 8, i64 %1512
  %1515 = sub nsw i64 %1481, %1514
  br label %1516

1516:                                             ; preds = %1516, %1511
  %1517 = phi i64 [ 0, %1511 ], [ %1550, %1516 ]
  %1518 = or i64 %1517, 1
  %1519 = or i64 %1517, 2
  %1520 = or i64 %1517, 3
  %1521 = or i64 %1517, 4
  %1522 = or i64 %1517, 5
  %1523 = or i64 %1517, 6
  %1524 = or i64 %1517, 7
  %1525 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1517
  %1526 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1518
  %1527 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1519
  %1528 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1520
  %1529 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1521
  %1530 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1522
  %1531 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1523
  %1532 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1524
  %1533 = load i32, ptr %1525, align 8, !tbaa !317, !alias.scope !688
  %1534 = load i32, ptr %1526, align 8, !tbaa !317, !alias.scope !688
  %1535 = load i32, ptr %1527, align 8, !tbaa !317, !alias.scope !688
  %1536 = load i32, ptr %1528, align 8, !tbaa !317, !alias.scope !688
  %1537 = load i32, ptr %1529, align 8, !tbaa !317, !alias.scope !688
  %1538 = load i32, ptr %1530, align 8, !tbaa !317, !alias.scope !688
  %1539 = load i32, ptr %1531, align 8, !tbaa !317, !alias.scope !688
  %1540 = load i32, ptr %1532, align 8, !tbaa !317, !alias.scope !688
  %1541 = insertelement <8 x i32> poison, i32 %1533, i64 0
  %1542 = insertelement <8 x i32> %1541, i32 %1534, i64 1
  %1543 = insertelement <8 x i32> %1542, i32 %1535, i64 2
  %1544 = insertelement <8 x i32> %1543, i32 %1536, i64 3
  %1545 = insertelement <8 x i32> %1544, i32 %1537, i64 4
  %1546 = insertelement <8 x i32> %1545, i32 %1538, i64 5
  %1547 = insertelement <8 x i32> %1546, i32 %1539, i64 6
  %1548 = insertelement <8 x i32> %1547, i32 %1540, i64 7
  %1549 = getelementptr inbounds i32, ptr %1477, i64 %1517
  store <8 x i32> %1548, ptr %1549, align 4, !tbaa !22, !alias.scope !691, !noalias !688
  %1550 = add nuw i64 %1517, 8
  %1551 = icmp eq i64 %1550, %1515
  br i1 %1551, label %1483, label %1516, !llvm.loop !693

1552:                                             ; preds = %1499, %1596, %1476
  %1553 = add i32 %24, 1
  %1554 = zext i32 %1553 to i64
  %1555 = icmp eq i32 %1553, 0
  br i1 %1555, label %1615, label %1556

1556:                                             ; preds = %1552
  %1557 = shl nuw nsw i64 %1554, 2
  %1558 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1557) #21
          to label %1559 unwind label %1715

1559:                                             ; preds = %1556
  %1560 = getelementptr inbounds i32, ptr %1558, i64 %1554
  %1561 = add nuw nsw i64 %1554, 4611686018427387903
  %1562 = and i64 %1561, 4611686018427387903
  %1563 = add nuw nsw i64 %1562, 1
  %1564 = icmp ult i64 %1562, 31
  br i1 %1564, label %1588, label %1565

1565:                                             ; preds = %1559
  %1566 = and i64 %1563, 9223372036854775776
  %1567 = shl i64 %1566, 2
  %1568 = getelementptr i8, ptr %1558, i64 %1567
  %1569 = insertelement <8 x i32> poison, i32 %1190, i64 0
  %1570 = shufflevector <8 x i32> %1569, <8 x i32> poison, <8 x i32> zeroinitializer
  %1571 = insertelement <8 x i32> poison, i32 %1190, i64 0
  %1572 = shufflevector <8 x i32> %1571, <8 x i32> poison, <8 x i32> zeroinitializer
  %1573 = insertelement <8 x i32> poison, i32 %1190, i64 0
  %1574 = shufflevector <8 x i32> %1573, <8 x i32> poison, <8 x i32> zeroinitializer
  %1575 = insertelement <8 x i32> poison, i32 %1190, i64 0
  %1576 = shufflevector <8 x i32> %1575, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %1577

1577:                                             ; preds = %1577, %1565
  %1578 = phi i64 [ 0, %1565 ], [ %1584, %1577 ]
  %1579 = shl i64 %1578, 2
  %1580 = getelementptr i8, ptr %1558, i64 %1579
  store <8 x i32> %1570, ptr %1580, align 4, !tbaa !22
  %1581 = getelementptr i32, ptr %1580, i64 8
  store <8 x i32> %1572, ptr %1581, align 4, !tbaa !22
  %1582 = getelementptr i32, ptr %1580, i64 16
  store <8 x i32> %1574, ptr %1582, align 4, !tbaa !22
  %1583 = getelementptr i32, ptr %1580, i64 24
  store <8 x i32> %1576, ptr %1583, align 4, !tbaa !22
  %1584 = add nuw i64 %1578, 32
  %1585 = icmp eq i64 %1584, %1566
  br i1 %1585, label %1586, label %1577, !llvm.loop !694

1586:                                             ; preds = %1577
  %1587 = icmp eq i64 %1563, %1566
  br i1 %1587, label %1615, label %1588

1588:                                             ; preds = %1559, %1586
  %1589 = phi ptr [ %1558, %1559 ], [ %1568, %1586 ]
  br label %1590

1590:                                             ; preds = %1588, %1590
  %1591 = phi ptr [ %1592, %1590 ], [ %1589, %1588 ]
  store i32 %1190, ptr %1591, align 4, !tbaa !22
  %1592 = getelementptr inbounds i32, ptr %1591, i64 1
  %1593 = icmp eq ptr %1592, %1560
  br i1 %1593, label %1615, label %1590, !llvm.loop !695

1594:                                             ; preds = %1193
  %1595 = landingpad { ptr, i32 }
          cleanup
  br label %2039

1596:                                             ; preds = %1499, %1596
  %1597 = phi i64 [ %1613, %1596 ], [ %1500, %1499 ]
  %1598 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1597
  %1599 = load i32, ptr %1598, align 8, !tbaa !317
  %1600 = getelementptr inbounds i32, ptr %1477, i64 %1597
  store i32 %1599, ptr %1600, align 4, !tbaa !22
  %1601 = add nuw nsw i64 %1597, 1
  %1602 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1601
  %1603 = load i32, ptr %1602, align 8, !tbaa !317
  %1604 = getelementptr inbounds i32, ptr %1477, i64 %1601
  store i32 %1603, ptr %1604, align 4, !tbaa !22
  %1605 = add nuw nsw i64 %1597, 2
  %1606 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1605
  %1607 = load i32, ptr %1606, align 8, !tbaa !317
  %1608 = getelementptr inbounds i32, ptr %1477, i64 %1605
  store i32 %1607, ptr %1608, align 4, !tbaa !22
  %1609 = add nuw nsw i64 %1597, 3
  %1610 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1187, i64 %1609
  %1611 = load i32, ptr %1610, align 8, !tbaa !317
  %1612 = getelementptr inbounds i32, ptr %1477, i64 %1609
  store i32 %1611, ptr %1612, align 4, !tbaa !22
  %1613 = add nuw nsw i64 %1597, 4
  %1614 = icmp eq i64 %1613, %1481
  br i1 %1614, label %1552, label %1596, !llvm.loop !696

1615:                                             ; preds = %1590, %1586, %1552
  %1616 = phi ptr [ null, %1552 ], [ %1558, %1586 ], [ %1558, %1590 ]
  %1617 = load i32, ptr %23, align 8, !tbaa !659
  store i32 0, ptr %1616, align 4, !tbaa !22
  %1618 = icmp ugt i32 %1617, 1
  br i1 %1618, label %1622, label %1619

1619:                                             ; preds = %1615
  %1620 = ptrtoint ptr %1478 to i64
  %1621 = ptrtoint ptr %1477 to i64
  br label %1628

1622:                                             ; preds = %1615
  %1623 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 4, i32 1
  %1624 = load ptr, ptr %1623, align 8, !tbaa !58
  %1625 = ptrtoint ptr %1478 to i64
  %1626 = ptrtoint ptr %1477 to i64
  %1627 = zext i32 %1617 to i64
  br label %1642

1628:                                             ; preds = %1667, %1619
  %1629 = phi i64 [ %1621, %1619 ], [ %1626, %1667 ]
  %1630 = phi i64 [ %1620, %1619 ], [ %1625, %1667 ]
  %1631 = getelementptr inbounds i32, ptr %1616, i64 1
  %1632 = load i32, ptr %1631, align 4, !tbaa !22
  %1633 = sub i64 %1630, %1629
  %1634 = ashr exact i64 %1633, 2
  %1635 = zext i32 %1632 to i64
  %1636 = icmp ugt i64 %1634, %1635
  br i1 %1636, label %1637, label %1693

1637:                                             ; preds = %1628
  %1638 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 4
  %1639 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 4, i32 1
  %1640 = load ptr, ptr %1639, align 8, !tbaa !58
  %1641 = load i32, ptr %1638, align 8, !tbaa !61
  br label %1676

1642:                                             ; preds = %1667, %1622
  %1643 = phi i64 [ 1, %1622 ], [ %1674, %1667 ]
  %1644 = phi ptr [ %1477, %1622 ], [ %1669, %1667 ]
  %1645 = getelementptr inbounds i32, ptr %1624, i64 %1643
  %1646 = load i32, ptr %1645, align 4, !tbaa !22
  %1647 = ptrtoint ptr %1644 to i64
  %1648 = sub i64 %1625, %1647
  %1649 = icmp sgt i64 %1648, 0
  br i1 %1649, label %1650, label %1667

1650:                                             ; preds = %1642
  %1651 = lshr exact i64 %1648, 2
  br label %1652

1652:                                             ; preds = %1652, %1650
  %1653 = phi i64 [ %1651, %1650 ], [ %1663, %1652 ]
  %1654 = phi ptr [ %1644, %1650 ], [ %1662, %1652 ]
  %1655 = lshr i64 %1653, 1
  %1656 = getelementptr inbounds i32, ptr %1654, i64 %1655
  %1657 = load i32, ptr %1656, align 4, !tbaa !22
  %1658 = icmp ult i32 %1657, %1646
  %1659 = getelementptr inbounds i32, ptr %1656, i64 1
  %1660 = xor i64 %1655, -1
  %1661 = add nsw i64 %1653, %1660
  %1662 = select i1 %1658, ptr %1659, ptr %1654
  %1663 = select i1 %1658, i64 %1661, i64 %1655
  %1664 = icmp sgt i64 %1663, 0
  br i1 %1664, label %1652, label %1665

1665:                                             ; preds = %1652
  %1666 = ptrtoint ptr %1662 to i64
  br label %1667

1667:                                             ; preds = %1665, %1642
  %1668 = phi i64 [ %1666, %1665 ], [ %1647, %1642 ]
  %1669 = phi ptr [ %1662, %1665 ], [ %1644, %1642 ]
  %1670 = sub i64 %1668, %1626
  %1671 = lshr exact i64 %1670, 2
  %1672 = trunc i64 %1671 to i32
  %1673 = getelementptr inbounds i32, ptr %1616, i64 %1643
  store i32 %1672, ptr %1673, align 4, !tbaa !22
  %1674 = add nuw nsw i64 %1643, 1
  %1675 = icmp eq i64 %1674, %1627
  br i1 %1675, label %1628, label %1642

1676:                                             ; preds = %1688, %1637
  %1677 = phi i64 [ %1635, %1637 ], [ %1691, %1688 ]
  %1678 = phi i32 [ %1632, %1637 ], [ %1690, %1688 ]
  %1679 = getelementptr inbounds i32, ptr %1477, i64 %1677
  %1680 = load i32, ptr %1679, align 4, !tbaa !22
  br label %1681

1681:                                             ; preds = %1681, %1676
  %1682 = phi i32 [ %1641, %1676 ], [ %1683, %1681 ]
  %1683 = add i32 %1682, -1
  %1684 = sext i32 %1683 to i64
  %1685 = getelementptr inbounds i32, ptr %1640, i64 %1684
  %1686 = load i32, ptr %1685, align 4, !tbaa !22
  %1687 = icmp ugt i32 %1686, %1680
  br i1 %1687, label %1681, label %1688

1688:                                             ; preds = %1681
  %1689 = sub i32 %1680, %1686
  store i32 %1689, ptr %1679, align 4, !tbaa !22
  %1690 = add i32 %1678, 1
  %1691 = zext i32 %1690 to i64
  %1692 = icmp ugt i64 %1634, %1691
  br i1 %1692, label %1676, label %1693

1693:                                             ; preds = %1688, %1628
  br i1 %1192, label %1698, label %1694

1694:                                             ; preds = %1693
  %1695 = shl nuw nsw i64 %1191, 2
  %1696 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %1695) #21
          to label %1697 unwind label %1717

1697:                                             ; preds = %1694
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %1696, i8 0, i64 %1695, i1 false), !tbaa !22
  br label %1698

1698:                                             ; preds = %1697, %1693
  %1699 = phi ptr [ null, %1693 ], [ %1696, %1697 ]
  %1700 = icmp eq i32 %24, 0
  br i1 %1700, label %1712, label %1701

1701:                                             ; preds = %1698
  %1702 = and i8 %1188, 1
  %1703 = icmp eq i8 %1702, 0
  %1704 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 3, i32 0, i32 1
  %1705 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %2, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %1706 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 1
  %1707 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  %1708 = zext i32 %24 to i64
  %1709 = getelementptr inbounds i32, ptr %1699, i64 1
  br label %1719

1710:                                             ; preds = %1848, %1831, %1719
  %1711 = icmp eq i64 %1721, %1708
  br i1 %1711, label %1712, label %1719

1712:                                             ; preds = %1710, %1698
  %1713 = icmp eq ptr %1699, null
  br i1 %1713, label %2002, label %1714

1714:                                             ; preds = %1712
  call void @_ZdlPv(ptr noundef nonnull %1699) #23
  br label %2002

1715:                                             ; preds = %1556
  %1716 = landingpad { ptr, i32 }
          cleanup
  br label %2035

1717:                                             ; preds = %1694
  %1718 = landingpad { ptr, i32 }
          cleanup
  br label %2033

1719:                                             ; preds = %1701, %1710
  %1720 = phi i64 [ 0, %1701 ], [ %1721, %1710 ]
  %1721 = add nuw nsw i64 %1720, 1
  %1722 = getelementptr inbounds i32, ptr %1616, i64 %1721
  %1723 = load i32, ptr %1722, align 4, !tbaa !22
  %1724 = getelementptr inbounds i32, ptr %1616, i64 %1720
  %1725 = load i32, ptr %1724, align 4, !tbaa !22
  %1726 = icmp ult i32 %1725, %1723
  br i1 %1726, label %1727, label %1710

1727:                                             ; preds = %1719
  %1728 = zext i32 %1725 to i64
  %1729 = zext i32 %1723 to i64
  %1730 = trunc i64 %1720 to i32
  br i1 %1703, label %1731, label %1836

1731:                                             ; preds = %1727, %1831
  %1732 = phi i64 [ %1832, %1831 ], [ %1728, %1727 ]
  %1733 = getelementptr inbounds i32, ptr %1477, i64 %1732
  %1734 = load i32, ptr %1733, align 4, !tbaa !22
  %1735 = load ptr, ptr %12, align 8, !tbaa !321
  %1736 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1735, i64 %1732, i32 1
  %1737 = load i32, ptr %1736, align 4, !tbaa !319
  %1738 = zext i32 %1734 to i64
  br label %1739

1739:                                             ; preds = %1787, %1731
  %1740 = phi i64 [ %1743, %1787 ], [ 0, %1731 ]
  %1741 = icmp eq i64 %1740, %1708
  br i1 %1741, label %1831, label %1742

1742:                                             ; preds = %1739
  %1743 = add nuw nsw i64 %1740, 1
  %1744 = getelementptr inbounds i32, ptr %1616, i64 %1743
  %1745 = load i32, ptr %1744, align 4, !tbaa !22
  %1746 = getelementptr inbounds i32, ptr %1616, i64 %1740
  %1747 = load i32, ptr %1746, align 4, !tbaa !22
  %1748 = icmp ult i32 %1747, %1745
  br i1 %1748, label %1799, label %1787

1749:                                             ; preds = %1825, %1783
  %1750 = phi i64 [ %1785, %1783 ], [ %1827, %1825 ]
  %1751 = phi ptr [ %1784, %1783 ], [ %1828, %1825 ]
  %1752 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1800, i64 %1750, i32 1
  %1753 = load i32, ptr %1752, align 4, !tbaa !319
  %1754 = load i32, ptr %1707, align 8, !tbaa !22, !noalias !697
  %1755 = mul i32 %1754, %1737
  %1756 = zext i32 %1755 to i64
  %1757 = getelementptr inbounds i8, ptr %1801, i64 %1756
  %1758 = zext i32 %1753 to i64
  %1759 = getelementptr inbounds i8, ptr %1757, i64 %1758
  %1760 = load i8, ptr %1759, align 1, !tbaa !424, !range !425, !noundef !73
  %1761 = icmp eq i8 %1760, 0
  br i1 %1761, label %1766, label %1762

1762:                                             ; preds = %1749
  %1763 = getelementptr inbounds i32, ptr %1477, i64 %1750
  %1764 = load i32, ptr %1763, align 4, !tbaa !22
  %1765 = getelementptr inbounds i32, ptr %1751, i64 1
  store i32 %1764, ptr %1751, align 4, !tbaa !22
  br label %1766

1766:                                             ; preds = %1762, %1749
  %1767 = phi ptr [ %1751, %1749 ], [ %1765, %1762 ]
  %1768 = add nuw nsw i64 %1750, 1
  %1769 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1800, i64 %1768, i32 1
  %1770 = load i32, ptr %1769, align 4, !tbaa !319
  %1771 = load i32, ptr %1707, align 8, !tbaa !22, !noalias !697
  %1772 = mul i32 %1771, %1737
  %1773 = zext i32 %1772 to i64
  %1774 = getelementptr inbounds i8, ptr %1801, i64 %1773
  %1775 = zext i32 %1770 to i64
  %1776 = getelementptr inbounds i8, ptr %1774, i64 %1775
  %1777 = load i8, ptr %1776, align 1, !tbaa !424, !range !425, !noundef !73
  %1778 = icmp eq i8 %1777, 0
  br i1 %1778, label %1783, label %1779

1779:                                             ; preds = %1766
  %1780 = getelementptr inbounds i32, ptr %1477, i64 %1768
  %1781 = load i32, ptr %1780, align 4, !tbaa !22
  %1782 = getelementptr inbounds i32, ptr %1767, i64 1
  store i32 %1781, ptr %1767, align 4, !tbaa !22
  br label %1783

1783:                                             ; preds = %1779, %1766
  %1784 = phi ptr [ %1767, %1766 ], [ %1782, %1779 ]
  %1785 = add nuw nsw i64 %1750, 2
  %1786 = icmp eq i64 %1785, %1803
  br i1 %1786, label %1787, label %1749

1787:                                             ; preds = %1825, %1783, %1742
  %1788 = phi ptr [ %1699, %1742 ], [ %1826, %1825 ], [ %1784, %1783 ]
  %1789 = load ptr, ptr %1704, align 8, !tbaa !665, !noalias !700
  %1790 = load i32, ptr %1705, align 8, !tbaa !22, !noalias !700
  %1791 = mul i32 %1790, %1730
  %1792 = zext i32 %1791 to i64
  %1793 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %1789, i64 %1792
  %1794 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %1793, i64 %1740
  %1795 = load ptr, ptr %1794, align 8, !tbaa !669
  %1796 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %1795, i64 0, i32 3
  %1797 = load ptr, ptr %1796, align 8, !tbaa !472
  %1798 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %1797, i64 %1738
  invoke void @_ZN6dealii31CompressedSimpleSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b(ptr noundef nonnull align 8 dereferenceable(24) %1798, ptr %1699, ptr %1788, i1 noundef zeroext true)
          to label %1739 unwind label %1834

1799:                                             ; preds = %1742
  %1800 = load ptr, ptr %12, align 8, !tbaa !321
  %1801 = load ptr, ptr %1706, align 8, !tbaa !422, !noalias !697
  %1802 = zext i32 %1747 to i64
  %1803 = zext i32 %1745 to i64
  %1804 = sub nsw i64 %1803, %1802
  %1805 = xor i64 %1802, -1
  %1806 = and i64 %1804, 1
  %1807 = icmp eq i64 %1806, 0
  br i1 %1807, label %1825, label %1808

1808:                                             ; preds = %1799
  %1809 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1800, i64 %1802, i32 1
  %1810 = load i32, ptr %1809, align 4, !tbaa !319
  %1811 = load i32, ptr %1707, align 8, !tbaa !22, !noalias !697
  %1812 = mul i32 %1811, %1737
  %1813 = zext i32 %1812 to i64
  %1814 = getelementptr inbounds i8, ptr %1801, i64 %1813
  %1815 = zext i32 %1810 to i64
  %1816 = getelementptr inbounds i8, ptr %1814, i64 %1815
  %1817 = load i8, ptr %1816, align 1, !tbaa !424, !range !425, !noundef !73
  %1818 = icmp eq i8 %1817, 0
  br i1 %1818, label %1822, label %1819

1819:                                             ; preds = %1808
  %1820 = getelementptr inbounds i32, ptr %1477, i64 %1802
  %1821 = load i32, ptr %1820, align 4, !tbaa !22
  store i32 %1821, ptr %1699, align 4, !tbaa !22
  br label %1822

1822:                                             ; preds = %1819, %1808
  %1823 = phi ptr [ %1699, %1808 ], [ %1709, %1819 ]
  %1824 = add nuw nsw i64 %1802, 1
  br label %1825

1825:                                             ; preds = %1822, %1799
  %1826 = phi ptr [ undef, %1799 ], [ %1823, %1822 ]
  %1827 = phi i64 [ %1802, %1799 ], [ %1824, %1822 ]
  %1828 = phi ptr [ %1699, %1799 ], [ %1823, %1822 ]
  %1829 = sub nsw i64 0, %1803
  %1830 = icmp eq i64 %1805, %1829
  br i1 %1830, label %1787, label %1749

1831:                                             ; preds = %1739
  %1832 = add nuw nsw i64 %1732, 1
  %1833 = icmp eq i64 %1832, %1729
  br i1 %1833, label %1710, label %1731

1834:                                             ; preds = %1787
  %1835 = landingpad { ptr, i32 }
          cleanup
  br label %1860

1836:                                             ; preds = %1727, %1848
  %1837 = phi i64 [ %1849, %1848 ], [ %1728, %1727 ]
  %1838 = getelementptr inbounds i32, ptr %1477, i64 %1837
  %1839 = load i32, ptr %1838, align 4, !tbaa !22
  %1840 = load ptr, ptr %12, align 8, !tbaa !321
  %1841 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1840, i64 %1837, i32 1
  %1842 = load i32, ptr %1841, align 4, !tbaa !319
  %1843 = zext i32 %1839 to i64
  %1844 = icmp eq i32 %1842, -1
  br label %1845

1845:                                             ; preds = %1989, %1836
  %1846 = phi i64 [ %1852, %1989 ], [ 0, %1836 ]
  %1847 = icmp eq i64 %1846, %1708
  br i1 %1847, label %1848, label %1851

1848:                                             ; preds = %1845
  %1849 = add nuw nsw i64 %1837, 1
  %1850 = icmp eq i64 %1849, %1729
  br i1 %1850, label %1710, label %1836

1851:                                             ; preds = %1845
  %1852 = add nuw nsw i64 %1846, 1
  %1853 = getelementptr inbounds i32, ptr %1616, i64 %1852
  %1854 = load i32, ptr %1853, align 4, !tbaa !22
  %1855 = getelementptr inbounds i32, ptr %1616, i64 %1846
  %1856 = load i32, ptr %1855, align 4, !tbaa !22
  %1857 = icmp ult i32 %1856, %1854
  br i1 %1857, label %1863, label %1989

1858:                                             ; preds = %1989
  %1859 = landingpad { ptr, i32 }
          cleanup
  br label %1860

1860:                                             ; preds = %1834, %1858
  %1861 = phi { ptr, i32 } [ %1859, %1858 ], [ %1835, %1834 ]
  %1862 = icmp eq ptr %1699, null
  br i1 %1862, label %2033, label %2001

1863:                                             ; preds = %1851
  %1864 = load ptr, ptr %12, align 8, !tbaa !321
  %1865 = load ptr, ptr %1706, align 8
  %1866 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1864, i64 %1837, i32 2
  %1867 = zext i32 %1856 to i64
  %1868 = zext i32 %1854 to i64
  br label %1869

1869:                                             ; preds = %1863, %1985
  %1870 = phi i64 [ %1867, %1863 ], [ %1987, %1985 ]
  %1871 = phi ptr [ %1699, %1863 ], [ %1986, %1985 ]
  %1872 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1864, i64 %1870, i32 1
  %1873 = load i32, ptr %1872, align 4, !tbaa !319
  br i1 %1844, label %1916, label %1874

1874:                                             ; preds = %1869
  %1875 = icmp eq i32 %1873, -1
  br i1 %1875, label %1885, label %1876

1876:                                             ; preds = %1874
  %1877 = load i32, ptr %1707, align 8, !tbaa !22, !noalias !703
  %1878 = mul i32 %1877, %1842
  %1879 = zext i32 %1878 to i64
  %1880 = getelementptr inbounds i8, ptr %1865, i64 %1879
  %1881 = zext i32 %1873 to i64
  %1882 = getelementptr inbounds i8, ptr %1880, i64 %1881
  %1883 = load i8, ptr %1882, align 1, !tbaa !424, !range !425, !noundef !73
  %1884 = icmp eq i8 %1883, 0
  br i1 %1884, label %1885, label %1981

1885:                                             ; preds = %1876, %1874
  %1886 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1864, i64 %1870, i32 2
  %1887 = load ptr, ptr %1886, align 8, !tbaa !320
  %1888 = icmp eq ptr %1887, null
  br i1 %1888, label %1916, label %1889

1889:                                             ; preds = %1885
  %1890 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1887, i64 0, i32 1
  %1891 = load ptr, ptr %1890, align 8, !tbaa !31
  %1892 = load ptr, ptr %1887, align 8, !tbaa !32
  %1893 = ptrtoint ptr %1891 to i64
  %1894 = ptrtoint ptr %1892 to i64
  %1895 = sub i64 %1893, %1894
  %1896 = ashr exact i64 %1895, 4
  %1897 = icmp eq ptr %1891, %1892
  br i1 %1897, label %1916, label %1898

1898:                                             ; preds = %1889
  %1899 = load i32, ptr %1707, align 8, !tbaa !22, !noalias !706
  %1900 = mul i32 %1899, %1842
  %1901 = zext i32 %1900 to i64
  %1902 = getelementptr inbounds i8, ptr %1865, i64 %1901
  br label %1907

1903:                                             ; preds = %1907
  %1904 = add i32 %1909, 1
  %1905 = zext i32 %1904 to i64
  %1906 = icmp ugt i64 %1896, %1905
  br i1 %1906, label %1907, label %1916

1907:                                             ; preds = %1898, %1903
  %1908 = phi i64 [ 0, %1898 ], [ %1905, %1903 ]
  %1909 = phi i32 [ 0, %1898 ], [ %1904, %1903 ]
  %1910 = getelementptr inbounds %"struct.std::pair", ptr %1892, i64 %1908
  %1911 = load i32, ptr %1910, align 8, !tbaa !37
  %1912 = zext i32 %1911 to i64
  %1913 = getelementptr inbounds i8, ptr %1902, i64 %1912
  %1914 = load i8, ptr %1913, align 1, !tbaa !424, !range !425, !noundef !73
  %1915 = icmp eq i8 %1914, 0
  br i1 %1915, label %1903, label %1981

1916:                                             ; preds = %1903, %1889, %1885, %1869
  %1917 = load ptr, ptr %1866, align 8, !tbaa !320
  %1918 = icmp eq ptr %1917, null
  br i1 %1918, label %1985, label %1919

1919:                                             ; preds = %1916
  %1920 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1917, i64 0, i32 1
  %1921 = load ptr, ptr %1920, align 8, !tbaa !31
  %1922 = load ptr, ptr %1917, align 8, !tbaa !32
  %1923 = ptrtoint ptr %1921 to i64
  %1924 = ptrtoint ptr %1922 to i64
  %1925 = sub i64 %1923, %1924
  %1926 = ashr exact i64 %1925, 4
  %1927 = icmp eq ptr %1921, %1922
  br i1 %1927, label %1985, label %1928

1928:                                             ; preds = %1919
  %1929 = icmp eq i32 %1873, -1
  %1930 = load ptr, ptr %1706, align 8
  %1931 = load i32, ptr %1707, align 8
  %1932 = zext i32 %1873 to i64
  %1933 = getelementptr inbounds i8, ptr %1930, i64 %1932
  %1934 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1864, i64 %1870, i32 2
  br label %1935

1935:                                             ; preds = %1928, %1977
  %1936 = phi i64 [ 0, %1928 ], [ %1979, %1977 ]
  %1937 = phi i32 [ 0, %1928 ], [ %1978, %1977 ]
  br i1 %1929, label %1946, label %1938

1938:                                             ; preds = %1935
  %1939 = getelementptr inbounds %"struct.std::pair", ptr %1922, i64 %1936
  %1940 = load i32, ptr %1939, align 8, !tbaa !37
  %1941 = mul i32 %1931, %1940
  %1942 = zext i32 %1941 to i64
  %1943 = getelementptr inbounds i8, ptr %1933, i64 %1942
  %1944 = load i8, ptr %1943, align 1, !tbaa !424, !range !425, !noundef !73
  %1945 = icmp eq i8 %1944, 0
  br i1 %1945, label %1946, label %1981

1946:                                             ; preds = %1938, %1935
  %1947 = load ptr, ptr %1934, align 8, !tbaa !320
  %1948 = icmp eq ptr %1947, null
  br i1 %1948, label %1977, label %1949

1949:                                             ; preds = %1946
  %1950 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1947, i64 0, i32 1
  %1951 = load ptr, ptr %1950, align 8, !tbaa !31
  %1952 = load ptr, ptr %1947, align 8, !tbaa !32
  %1953 = ptrtoint ptr %1951 to i64
  %1954 = ptrtoint ptr %1952 to i64
  %1955 = sub i64 %1953, %1954
  %1956 = ashr exact i64 %1955, 4
  %1957 = icmp eq ptr %1951, %1952
  br i1 %1957, label %1977, label %1958

1958:                                             ; preds = %1949
  %1959 = getelementptr inbounds %"struct.std::pair", ptr %1922, i64 %1936
  %1960 = load i32, ptr %1959, align 8, !tbaa !37
  %1961 = mul i32 %1931, %1960
  %1962 = zext i32 %1961 to i64
  %1963 = getelementptr inbounds i8, ptr %1930, i64 %1962
  br label %1968

1964:                                             ; preds = %1968
  %1965 = add i32 %1970, 1
  %1966 = zext i32 %1965 to i64
  %1967 = icmp ugt i64 %1956, %1966
  br i1 %1967, label %1968, label %1977

1968:                                             ; preds = %1958, %1964
  %1969 = phi i64 [ 0, %1958 ], [ %1966, %1964 ]
  %1970 = phi i32 [ 0, %1958 ], [ %1965, %1964 ]
  %1971 = getelementptr inbounds %"struct.std::pair", ptr %1952, i64 %1969
  %1972 = load i32, ptr %1971, align 8, !tbaa !37
  %1973 = zext i32 %1972 to i64
  %1974 = getelementptr inbounds i8, ptr %1963, i64 %1973
  %1975 = load i8, ptr %1974, align 1, !tbaa !424, !range !425, !noundef !73
  %1976 = icmp eq i8 %1975, 0
  br i1 %1976, label %1964, label %1981

1977:                                             ; preds = %1964, %1949, %1946
  %1978 = add i32 %1937, 1
  %1979 = zext i32 %1978 to i64
  %1980 = icmp ugt i64 %1926, %1979
  br i1 %1980, label %1935, label %1985

1981:                                             ; preds = %1907, %1938, %1968, %1876
  %1982 = getelementptr inbounds i32, ptr %1477, i64 %1870
  %1983 = load i32, ptr %1982, align 4, !tbaa !22
  %1984 = getelementptr inbounds i32, ptr %1871, i64 1
  store i32 %1983, ptr %1871, align 4, !tbaa !22
  br label %1985

1985:                                             ; preds = %1977, %1919, %1916, %1981
  %1986 = phi ptr [ %1871, %1916 ], [ %1984, %1981 ], [ %1871, %1919 ], [ %1871, %1977 ]
  %1987 = add nuw nsw i64 %1870, 1
  %1988 = icmp eq i64 %1987, %1868
  br i1 %1988, label %1989, label %1869

1989:                                             ; preds = %1985, %1851
  %1990 = phi ptr [ %1699, %1851 ], [ %1986, %1985 ]
  %1991 = load ptr, ptr %1704, align 8, !tbaa !665, !noalias !700
  %1992 = load i32, ptr %1705, align 8, !tbaa !22, !noalias !700
  %1993 = mul i32 %1992, %1730
  %1994 = zext i32 %1993 to i64
  %1995 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %1991, i64 %1994
  %1996 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %1995, i64 %1846
  %1997 = load ptr, ptr %1996, align 8, !tbaa !669
  %1998 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %1997, i64 0, i32 3
  %1999 = load ptr, ptr %1998, align 8, !tbaa !472
  %2000 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %1999, i64 %1843
  invoke void @_ZN6dealii31CompressedSimpleSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b(ptr noundef nonnull align 8 dereferenceable(24) %2000, ptr %1699, ptr %1990, i1 noundef zeroext true)
          to label %1845 unwind label %1858

2001:                                             ; preds = %1860
  call void @_ZdlPv(ptr noundef nonnull %1699) #23
  br label %2033

2002:                                             ; preds = %1712, %1714
  call void @_ZdlPv(ptr noundef nonnull %1616) #23
  %2003 = icmp eq ptr %1477, null
  br i1 %2003, label %2005, label %2004

2004:                                             ; preds = %2002
  call void @_ZdlPv(ptr noundef nonnull %1477) #23
  br label %2005

2005:                                             ; preds = %2004, %2002
  %2006 = icmp eq ptr %947, null
  br i1 %2006, label %2008, label %2007

2007:                                             ; preds = %2005
  call void @_ZdlPv(ptr noundef nonnull %947) #23
  br label %2008

2008:                                             ; preds = %2007, %2005
  %2009 = load ptr, ptr %12, align 8, !tbaa !321
  %2010 = load ptr, ptr %931, align 8, !tbaa !325
  %2011 = icmp eq ptr %2009, %2010
  br i1 %2011, label %2027, label %2012

2012:                                             ; preds = %2008, %2022
  %2013 = phi ptr [ %2023, %2022 ], [ %2009, %2008 ]
  %2014 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %2013, i64 0, i32 2
  %2015 = load ptr, ptr %2014, align 8, !tbaa !320
  %2016 = icmp eq ptr %2015, null
  br i1 %2016, label %2022, label %2017

2017:                                             ; preds = %2012
  %2018 = load ptr, ptr %2015, align 8, !tbaa !32
  %2019 = icmp eq ptr %2018, null
  br i1 %2019, label %2021, label %2020

2020:                                             ; preds = %2017
  call void @_ZdlPv(ptr noundef nonnull %2018) #23
  br label %2021

2021:                                             ; preds = %2020, %2017
  call void @_ZdlPv(ptr noundef nonnull %2015) #23
  store ptr null, ptr %2014, align 8, !tbaa !320
  br label %2022

2022:                                             ; preds = %2021, %2012
  %2023 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %2013, i64 1
  %2024 = icmp eq ptr %2023, %2010
  br i1 %2024, label %2025, label %2012

2025:                                             ; preds = %2022
  %2026 = load ptr, ptr %12, align 8, !tbaa !321
  br label %2027

2027:                                             ; preds = %2025, %2008
  %2028 = phi ptr [ %2026, %2025 ], [ %2009, %2008 ]
  %2029 = icmp eq ptr %2028, null
  br i1 %2029, label %2031, label %2030

2030:                                             ; preds = %2027
  call void @_ZdlPv(ptr noundef nonnull %2028) #23
  br label %2031

2031:                                             ; preds = %2027, %2030
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #24
  br label %2032

2032:                                             ; preds = %2031, %867
  ret void

2033:                                             ; preds = %1717, %1860, %2001
  %2034 = phi { ptr, i32 } [ %1718, %1717 ], [ %1861, %1860 ], [ %1861, %2001 ]
  call void @_ZdlPv(ptr noundef nonnull %1616) #23
  br label %2035

2035:                                             ; preds = %2033, %1715
  %2036 = phi { ptr, i32 } [ %2034, %2033 ], [ %1716, %1715 ]
  %2037 = icmp eq ptr %1477, null
  br i1 %2037, label %2039, label %2038

2038:                                             ; preds = %2035
  call void @_ZdlPv(ptr noundef nonnull %1477) #23
  br label %2039

2039:                                             ; preds = %1095, %1097, %1353, %1471, %1237, %2038, %2035, %1594, %1198
  %2040 = phi ptr [ %947, %1198 ], [ %947, %1237 ], [ %947, %1471 ], [ %947, %1353 ], [ %947, %1594 ], [ %947, %2035 ], [ %947, %2038 ], [ %984, %1095 ], [ %984, %1097 ]
  %2041 = phi { ptr, i32 } [ %1199, %1198 ], [ %1238, %1237 ], [ %1472, %1471 ], [ %1354, %1353 ], [ %1595, %1594 ], [ %2036, %2035 ], [ %2036, %2038 ], [ %1096, %1095 ], [ %1098, %1097 ]
  %2042 = icmp eq ptr %2040, null
  br i1 %2042, label %2044, label %2043

2043:                                             ; preds = %2039
  call void @_ZdlPv(ptr noundef nonnull %2040) #23
  br label %2044

2044:                                             ; preds = %2043, %2039
  %2045 = load ptr, ptr %12, align 8, !tbaa !321
  %2046 = load ptr, ptr %931, align 8, !tbaa !325
  %2047 = icmp eq ptr %2045, %2046
  br i1 %2047, label %2063, label %2048

2048:                                             ; preds = %2044, %2058
  %2049 = phi ptr [ %2059, %2058 ], [ %2045, %2044 ]
  %2050 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %2049, i64 0, i32 2
  %2051 = load ptr, ptr %2050, align 8, !tbaa !320
  %2052 = icmp eq ptr %2051, null
  br i1 %2052, label %2058, label %2053

2053:                                             ; preds = %2048
  %2054 = load ptr, ptr %2051, align 8, !tbaa !32
  %2055 = icmp eq ptr %2054, null
  br i1 %2055, label %2057, label %2056

2056:                                             ; preds = %2053
  call void @_ZdlPv(ptr noundef nonnull %2054) #23
  br label %2057

2057:                                             ; preds = %2056, %2053
  call void @_ZdlPv(ptr noundef nonnull %2051) #23
  store ptr null, ptr %2050, align 8, !tbaa !320
  br label %2058

2058:                                             ; preds = %2057, %2048
  %2059 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %2049, i64 1
  %2060 = icmp eq ptr %2059, %2046
  br i1 %2060, label %2061, label %2048

2061:                                             ; preds = %2058
  %2062 = load ptr, ptr %12, align 8, !tbaa !321
  br label %2063

2063:                                             ; preds = %2061, %2044
  %2064 = phi ptr [ %2062, %2061 ], [ %2045, %2044 ]
  %2065 = icmp eq ptr %2064, null
  br i1 %2065, label %2067, label %2066

2066:                                             ; preds = %2063
  call void @_ZdlPv(ptr noundef nonnull %2064) #23
  br label %2067

2067:                                             ; preds = %2066, %2063, %980
  %2068 = phi { ptr, i32 } [ %979, %980 ], [ %2041, %2063 ], [ %2041, %2066 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #24
  br label %2069

2069:                                             ; preds = %2067, %877
  %2070 = phi { ptr, i32 } [ %878, %877 ], [ %2068, %2067 ]
  resume { ptr, i32 } %2070

2071:                                             ; preds = %1198, %978
  %2072 = landingpad { ptr, i32 }
          catch ptr null
  %2073 = extractvalue { ptr, i32 } %2072, 0
  call void @__clang_call_terminate(ptr %2073) #25
  unreachable
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local noundef zeroext i1 @_ZN6dealii16ConstraintMatrix17check_zero_weightERKSt4pairIjdE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(16) %0) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1
  %3 = load double, ptr %2, align 8, !tbaa !35
  %4 = fcmp oeq double %3, 0.000000e+00
  ret i1 %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local noundef zeroext i1 @_ZNK6dealii16ConstraintMatrix14ConstraintLineltERKS1_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %1) local_unnamed_addr #8 align 2 {
  %3 = load i32, ptr %0, align 8, !tbaa !24
  %4 = load i32, ptr %1, align 8, !tbaa !24
  %5 = icmp ult i32 %3, %4
  ret i1 %5
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local noundef zeroext i1 @_ZNK6dealii16ConstraintMatrix14ConstraintLineeqERKS1_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %1) local_unnamed_addr #8 align 2 {
  %3 = load i32, ptr %0, align 8, !tbaa !24
  %4 = load i32, ptr %1, align 8, !tbaa !24
  %5 = icmp eq i32 %3, %4
  ret i1 %5
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local noundef i32 @_ZNK6dealii16ConstraintMatrix14ConstraintLine18memory_consumptionEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %0) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 1
  %3 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !31
  %5 = load ptr, ptr %2, align 8, !tbaa !32
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 4
  %10 = trunc i64 %9 to i32
  %11 = mul i32 %10, 12
  %12 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !709
  %14 = ptrtoint ptr %13 to i64
  %15 = sub i64 %14, %7
  %16 = lshr exact i64 %15, 4
  %17 = sub nsw i64 %16, %9
  %18 = trunc i64 %17 to i32
  %19 = shl i32 %18, 4
  %20 = add i32 %11, 28
  %21 = add i32 %20, %19
  ret i32 %21
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii16ConstraintMatrix11add_entriesEjRKSt6vectorISt4pairIjdESaIS3_EE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, i32 noundef %1, ptr nocapture noundef nonnull readonly align 8 dereferenceable(24) %2) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !21
  %6 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !21
  br label %8

8:                                                ; preds = %12, %3
  %9 = phi ptr [ %7, %3 ], [ %10, %12 ]
  %10 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %9, i64 -1
  %11 = icmp eq ptr %10, %5
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = load i32, ptr %10, align 8, !tbaa !24
  %14 = icmp eq i32 %13, %1
  br i1 %14, label %15, label %8

15:                                               ; preds = %12, %8
  %16 = load ptr, ptr %2, align 8, !tbaa !21
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %2, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !21
  %19 = icmp eq ptr %16, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %9, i64 -1, i32 1
  %22 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %9, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %9, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 2
  %24 = load ptr, ptr %22, align 8, !tbaa !21
  br label %26

25:                                               ; preds = %80, %15
  ret void

26:                                               ; preds = %20, %80
  %27 = phi ptr [ %24, %20 ], [ %81, %80 ]
  %28 = phi ptr [ %16, %20 ], [ %82, %80 ]
  %29 = load ptr, ptr %21, align 8, !tbaa !21
  %30 = icmp eq ptr %29, %27
  br i1 %30, label %40, label %31

31:                                               ; preds = %26
  %32 = load i32, ptr %28, align 8, !tbaa !37
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi ptr [ %29, %31 ], [ %37, %33 ]
  %35 = load i32, ptr %34, align 8, !tbaa !37
  %36 = icmp eq i32 %35, %32
  %37 = getelementptr inbounds %"struct.std::pair", ptr %34, i64 1
  %38 = icmp eq ptr %37, %27
  %39 = select i1 %36, i1 true, i1 %38
  br i1 %39, label %40, label %33

40:                                               ; preds = %33, %26
  %41 = load ptr, ptr %23, align 8, !tbaa !709
  %42 = icmp eq ptr %27, %41
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %27, ptr noundef nonnull align 8 dereferenceable(16) %28, i64 16, i1 false)
  %44 = load ptr, ptr %22, align 8, !tbaa !31
  %45 = getelementptr inbounds %"struct.std::pair", ptr %44, i64 1
  store ptr %45, ptr %22, align 8, !tbaa !31
  br label %80

46:                                               ; preds = %40
  %47 = ptrtoint ptr %27 to i64
  %48 = ptrtoint ptr %29 to i64
  %49 = sub i64 %47, %48
  %50 = icmp eq i64 %49, 9223372036854775792
  br i1 %50, label %51, label %52

51:                                               ; preds = %46
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
  unreachable

52:                                               ; preds = %46
  %53 = ashr exact i64 %49, 4
  %54 = tail call i64 @llvm.umax.i64(i64 %53, i64 1)
  %55 = add i64 %54, %53
  %56 = icmp ult i64 %55, %53
  %57 = icmp ugt i64 %55, 576460752303423487
  %58 = or i1 %56, %57
  %59 = select i1 %58, i64 576460752303423487, i64 %55
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %52
  %62 = shl nuw nsw i64 %59, 4
  %63 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %62) #21
  br label %64

64:                                               ; preds = %61, %52
  %65 = phi ptr [ %63, %61 ], [ null, %52 ]
  %66 = getelementptr inbounds %"struct.std::pair", ptr %65, i64 %53
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %66, ptr noundef nonnull align 8 dereferenceable(16) %28, i64 16, i1 false)
  br i1 %30, label %73, label %67

67:                                               ; preds = %64, %67
  %68 = phi ptr [ %71, %67 ], [ %65, %64 ]
  %69 = phi ptr [ %70, %67 ], [ %29, %64 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %68, ptr noundef nonnull align 8 dereferenceable(16) %69, i64 16, i1 false)
  %70 = getelementptr inbounds %"struct.std::pair", ptr %69, i64 1
  %71 = getelementptr inbounds %"struct.std::pair", ptr %68, i64 1
  %72 = icmp eq ptr %70, %27
  br i1 %72, label %73, label %67

73:                                               ; preds = %67, %64
  %74 = phi ptr [ %65, %64 ], [ %71, %67 ]
  %75 = getelementptr %"struct.std::pair", ptr %74, i64 1
  %76 = icmp eq ptr %29, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %73
  tail call void @_ZdlPv(ptr noundef nonnull %29) #23
  br label %78

78:                                               ; preds = %77, %73
  store ptr %65, ptr %21, align 8, !tbaa !32
  store ptr %75, ptr %22, align 8, !tbaa !31
  %79 = getelementptr inbounds %"struct.std::pair", ptr %65, i64 %59
  store ptr %79, ptr %23, align 8, !tbaa !709
  br label %80

80:                                               ; preds = %43, %78
  %81 = phi ptr [ %45, %43 ], [ %75, %78 ]
  %82 = getelementptr inbounds %"struct.std::pair", ptr %28, i64 1
  %83 = load ptr, ptr %17, align 8, !tbaa !21
  %84 = icmp eq ptr %82, %83
  br i1 %84, label %25, label %26
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii16ConstraintMatrix5closeEv(ptr nocapture noundef nonnull align 8 dereferenceable(138) %0) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::vector.28", align 8
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 3
  %4 = load i8, ptr %3, align 8, !tbaa !710, !range !425, !noundef !73
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %635

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !21
  %9 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !21
  %11 = icmp eq ptr %8, %10
  br i1 %11, label %29, label %12

12:                                               ; preds = %6
  %13 = ptrtoint ptr %10 to i64
  %14 = ptrtoint ptr %8 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 40
  %17 = tail call i64 @llvm.ctlz.i64(i64 %16, i1 true), !range !418
  %18 = shl nuw nsw i64 %17, 1
  %19 = xor i64 %18, 126
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_(ptr %8, ptr %10, i64 noundef %19)
  %20 = icmp sgt i64 %15, 640
  br i1 %20, label %21, label %28

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %8, i64 16
  tail call void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_(ptr %8, ptr nonnull %22)
  %23 = icmp eq ptr %22, %10
  br i1 %23, label %29, label %24

24:                                               ; preds = %21, %24
  %25 = phi ptr [ %26, %24 ], [ %22, %21 ]
  tail call void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops14_Val_less_iterEEvT_T0_(ptr nonnull %25)
  %26 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %25, i64 1
  %27 = icmp eq ptr %26, %10
  br i1 %27, label %29, label %24

28:                                               ; preds = %12
  tail call void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_(ptr %8, ptr %10)
  br label %29

29:                                               ; preds = %24, %6, %21, %28
  %30 = load ptr, ptr %7, align 8, !tbaa !21
  %31 = load ptr, ptr %9, align 8, !tbaa !21
  %32 = icmp eq ptr %30, %31
  br i1 %32, label %33, label %38

33:                                               ; preds = %129, %29
  %34 = phi ptr [ %30, %29 ], [ %130, %129 ]
  %35 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %36 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  br label %133

38:                                               ; preds = %29, %129
  %39 = phi ptr [ %130, %129 ], [ %30, %29 ]
  %40 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %39, i64 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !21
  %42 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %39, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !21
  %44 = ptrtoint ptr %43 to i64
  %45 = ptrtoint ptr %41 to i64
  %46 = sub i64 %44, %45
  %47 = icmp sgt i64 %46, 63
  br i1 %47, label %48, label %75

48:                                               ; preds = %38
  %49 = lshr i64 %46, 6
  br label %50

50:                                               ; preds = %68, %48
  %51 = phi i64 [ %70, %68 ], [ %49, %48 ]
  %52 = phi ptr [ %69, %68 ], [ %41, %48 ]
  %53 = getelementptr inbounds %"struct.std::pair", ptr %52, i64 0, i32 1
  %54 = load double, ptr %53, align 8, !tbaa !35
  %55 = fcmp oeq double %54, 0.000000e+00
  br i1 %55, label %104, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.std::pair", ptr %52, i64 1, i32 1
  %58 = load double, ptr %57, align 8, !tbaa !35
  %59 = fcmp oeq double %58, 0.000000e+00
  br i1 %59, label %98, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.std::pair", ptr %52, i64 2, i32 1
  %62 = load double, ptr %61, align 8, !tbaa !35
  %63 = fcmp oeq double %62, 0.000000e+00
  br i1 %63, label %100, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.std::pair", ptr %52, i64 3, i32 1
  %66 = load double, ptr %65, align 8, !tbaa !35
  %67 = fcmp oeq double %66, 0.000000e+00
  br i1 %67, label %102, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.std::pair", ptr %52, i64 4
  %70 = add nsw i64 %51, -1
  %71 = icmp sgt i64 %51, 1
  br i1 %71, label %50, label %72

72:                                               ; preds = %68
  %73 = ptrtoint ptr %69 to i64
  %74 = sub i64 %44, %73
  br label %75

75:                                               ; preds = %72, %38
  %76 = phi i64 [ %74, %72 ], [ %46, %38 ]
  %77 = phi ptr [ %69, %72 ], [ %41, %38 ]
  %78 = ashr exact i64 %76, 4
  switch i64 %78, label %129 [
    i64 3, label %79
    i64 2, label %85
    i64 1, label %92
  ]

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"struct.std::pair", ptr %77, i64 0, i32 1
  %81 = load double, ptr %80, align 8, !tbaa !35
  %82 = fcmp oeq double %81, 0.000000e+00
  br i1 %82, label %104, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.std::pair", ptr %77, i64 1
  br label %85

85:                                               ; preds = %83, %75
  %86 = phi ptr [ %77, %75 ], [ %84, %83 ]
  %87 = getelementptr inbounds %"struct.std::pair", ptr %86, i64 0, i32 1
  %88 = load double, ptr %87, align 8, !tbaa !35
  %89 = fcmp oeq double %88, 0.000000e+00
  br i1 %89, label %104, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.std::pair", ptr %86, i64 1
  br label %92

92:                                               ; preds = %90, %75
  %93 = phi ptr [ %77, %75 ], [ %91, %90 ]
  %94 = getelementptr inbounds %"struct.std::pair", ptr %93, i64 0, i32 1
  %95 = load double, ptr %94, align 8, !tbaa !35
  %96 = fcmp oeq double %95, 0.000000e+00
  %97 = select i1 %96, ptr %93, ptr %43
  br label %104

98:                                               ; preds = %56
  %99 = getelementptr inbounds %"struct.std::pair", ptr %52, i64 1
  br label %104

100:                                              ; preds = %60
  %101 = getelementptr inbounds %"struct.std::pair", ptr %52, i64 2
  br label %104

102:                                              ; preds = %64
  %103 = getelementptr inbounds %"struct.std::pair", ptr %52, i64 3
  br label %104

104:                                              ; preds = %50, %98, %100, %102, %92, %85, %79
  %105 = phi ptr [ %77, %79 ], [ %86, %85 ], [ %97, %92 ], [ %99, %98 ], [ %101, %100 ], [ %103, %102 ], [ %52, %50 ]
  %106 = icmp eq ptr %105, %43
  %107 = getelementptr inbounds %"struct.std::pair", ptr %105, i64 1
  %108 = icmp eq ptr %107, %43
  %109 = select i1 %106, i1 true, i1 %108
  br i1 %109, label %124, label %110

110:                                              ; preds = %104, %118
  %111 = phi ptr [ %120, %118 ], [ %107, %104 ]
  %112 = phi ptr [ %119, %118 ], [ %105, %104 ]
  %113 = getelementptr inbounds %"struct.std::pair", ptr %111, i64 0, i32 1
  %114 = load double, ptr %113, align 8, !tbaa !35
  %115 = fcmp oeq double %114, 0.000000e+00
  br i1 %115, label %118, label %116

116:                                              ; preds = %110
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %112, ptr noundef nonnull align 8 dereferenceable(16) %111, i64 16, i1 false)
  %117 = getelementptr inbounds %"struct.std::pair", ptr %112, i64 1
  br label %118

118:                                              ; preds = %116, %110
  %119 = phi ptr [ %112, %110 ], [ %117, %116 ]
  %120 = getelementptr inbounds %"struct.std::pair", ptr %111, i64 1
  %121 = icmp eq ptr %120, %43
  br i1 %121, label %122, label %110

122:                                              ; preds = %118
  %123 = load ptr, ptr %42, align 8, !tbaa !21
  br label %124

124:                                              ; preds = %122, %104
  %125 = phi ptr [ %43, %104 ], [ %123, %122 ]
  %126 = phi ptr [ %105, %104 ], [ %119, %122 ]
  %127 = icmp eq ptr %126, %125
  br i1 %127, label %129, label %128

128:                                              ; preds = %124
  store ptr %126, ptr %42, align 8, !tbaa !31
  br label %129

129:                                              ; preds = %75, %124, %128
  %130 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %39, i64 1
  %131 = load ptr, ptr %9, align 8, !tbaa !21
  %132 = icmp eq ptr %130, %131
  br i1 %132, label %33, label %38

133:                                              ; preds = %33, %152
  %134 = phi ptr [ %34, %33 ], [ %339, %152 ]
  %135 = phi ptr [ %34, %33 ], [ %340, %152 ]
  %136 = load ptr, ptr %7, align 8, !tbaa !21
  %137 = icmp eq ptr %136, %135
  br i1 %137, label %344, label %138

138:                                              ; preds = %133, %338
  %139 = phi ptr [ %339, %338 ], [ %134, %133 ]
  %140 = phi ptr [ %340, %338 ], [ %135, %133 ]
  %141 = phi i8 [ %341, %338 ], [ 0, %133 ]
  %142 = phi ptr [ %342, %338 ], [ %136, %133 ]
  %143 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %142, i64 0, i32 1
  %144 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %142, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %145 = load ptr, ptr %144, align 8, !tbaa !21
  %146 = load ptr, ptr %143, align 8, !tbaa !21
  %147 = icmp eq ptr %145, %146
  br i1 %147, label %338, label %148

148:                                              ; preds = %138
  %149 = ptrtoint ptr %145 to i64
  %150 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %142, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %151 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %142, i64 0, i32 2
  br label %155

152:                                              ; preds = %338
  %153 = and i8 %341, 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %344, label %133

155:                                              ; preds = %148, %325
  %156 = phi ptr [ %146, %148 ], [ %326, %325 ]
  %157 = phi ptr [ %145, %148 ], [ %327, %325 ]
  %158 = phi i64 [ %149, %148 ], [ %331, %325 ]
  %159 = phi i64 [ 0, %148 ], [ %330, %325 ]
  %160 = phi i8 [ %141, %148 ], [ %329, %325 ]
  %161 = phi i32 [ 0, %148 ], [ %328, %325 ]
  %162 = getelementptr inbounds %"struct.std::pair", ptr %156, i64 %159
  %163 = load i32, ptr %162, align 8, !tbaa !37
  %164 = zext i32 %163 to i64
  %165 = load ptr, ptr %36, align 8, !tbaa !55
  %166 = load i32, ptr %37, align 8, !tbaa !57
  %167 = load ptr, ptr %35, align 8, !tbaa !55
  %168 = ptrtoint ptr %165 to i64
  %169 = ptrtoint ptr %167 to i64
  %170 = sub i64 %168, %169
  %171 = shl nsw i64 %170, 3
  %172 = zext i32 %166 to i64
  %173 = add nsw i64 %171, %172
  %174 = icmp ugt i64 %173, %164
  br i1 %174, label %175, label %323

175:                                              ; preds = %155
  %176 = lshr i32 %163, 6
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds i64, ptr %167, i64 %177
  %179 = and i32 %163, 63
  %180 = zext i32 %179 to i64
  %181 = shl nuw i64 1, %180
  %182 = load i64, ptr %178, align 8, !tbaa !42
  %183 = and i64 %182, %181
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %323, label %185

185:                                              ; preds = %175
  %186 = getelementptr inbounds %"struct.std::pair", ptr %156, i64 %159, i32 1
  %187 = load double, ptr %186, align 8, !tbaa !35
  %188 = load ptr, ptr %7, align 8, !tbaa !21
  %189 = load ptr, ptr %9, align 8, !tbaa !21
  %190 = ptrtoint ptr %189 to i64
  %191 = ptrtoint ptr %188 to i64
  %192 = sub i64 %190, %191
  %193 = icmp sgt i64 %192, 0
  br i1 %193, label %194, label %209

194:                                              ; preds = %185
  %195 = udiv exact i64 %192, 40
  br label %196

196:                                              ; preds = %196, %194
  %197 = phi i64 [ %195, %194 ], [ %207, %196 ]
  %198 = phi ptr [ %188, %194 ], [ %206, %196 ]
  %199 = lshr i64 %197, 1
  %200 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %198, i64 %199
  %201 = load i32, ptr %200, align 8, !tbaa !24
  %202 = icmp ult i32 %201, %163
  %203 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %200, i64 1
  %204 = xor i64 %199, -1
  %205 = add nsw i64 %197, %204
  %206 = select i1 %202, ptr %203, ptr %198
  %207 = select i1 %202, i64 %205, i64 %199
  %208 = icmp sgt i64 %207, 0
  br i1 %208, label %196, label %209

209:                                              ; preds = %196, %185
  %210 = phi ptr [ %188, %185 ], [ %206, %196 ]
  %211 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %210, i64 0, i32 1
  %212 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %210, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %213 = load ptr, ptr %212, align 8, !tbaa !31
  %214 = load ptr, ptr %211, align 8, !tbaa !32
  %215 = ptrtoint ptr %213 to i64
  %216 = ptrtoint ptr %214 to i64
  %217 = sub i64 %215, %216
  %218 = ashr exact i64 %217, 4
  %219 = icmp eq ptr %213, %214
  br i1 %219, label %302, label %220

220:                                              ; preds = %209, %220
  %221 = phi i32 [ %224, %220 ], [ 0, %209 ]
  %222 = zext i32 %221 to i64
  %223 = icmp ugt i64 %218, %222
  %224 = add i32 %221, 1
  br i1 %223, label %220, label %225

225:                                              ; preds = %220
  %226 = load i32, ptr %214, align 8, !tbaa !37
  %227 = getelementptr inbounds %"struct.std::pair", ptr %214, i64 0, i32 1
  %228 = load double, ptr %227, align 8, !tbaa !35
  %229 = fmul double %187, %228
  store i32 %226, ptr %162, align 8
  %230 = getelementptr inbounds i8, ptr %162, i64 8
  store double %229, ptr %230, align 8
  %231 = load ptr, ptr %212, align 8, !tbaa !31
  %232 = load ptr, ptr %211, align 8, !tbaa !32
  %233 = ptrtoint ptr %231 to i64
  %234 = ptrtoint ptr %232 to i64
  %235 = sub i64 %233, %234
  %236 = icmp ugt i64 %235, 16
  %237 = load ptr, ptr %144, align 8, !tbaa !21
  br i1 %236, label %238, label %316

238:                                              ; preds = %225, %291
  %239 = phi ptr [ %292, %291 ], [ %237, %225 ]
  %240 = phi ptr [ %296, %291 ], [ %232, %225 ]
  %241 = phi i64 [ %294, %291 ], [ 1, %225 ]
  %242 = phi i32 [ %293, %291 ], [ 1, %225 ]
  %243 = getelementptr inbounds %"struct.std::pair", ptr %240, i64 %241
  %244 = load i32, ptr %243, align 8, !tbaa !37
  %245 = getelementptr inbounds %"struct.std::pair", ptr %240, i64 %241, i32 1
  %246 = load double, ptr %245, align 8, !tbaa !35
  %247 = fmul double %187, %246
  %248 = load ptr, ptr %150, align 8, !tbaa !709
  %249 = icmp eq ptr %239, %248
  br i1 %249, label %254, label %250

250:                                              ; preds = %238
  store i32 %244, ptr %239, align 8
  %251 = getelementptr inbounds i8, ptr %239, i64 8
  store double %247, ptr %251, align 8
  %252 = load ptr, ptr %144, align 8, !tbaa !31
  %253 = getelementptr inbounds %"struct.std::pair", ptr %252, i64 1
  store ptr %253, ptr %144, align 8, !tbaa !31
  br label %291

254:                                              ; preds = %238
  %255 = load ptr, ptr %143, align 8, !tbaa !21
  %256 = ptrtoint ptr %239 to i64
  %257 = ptrtoint ptr %255 to i64
  %258 = sub i64 %256, %257
  %259 = icmp eq i64 %258, 9223372036854775792
  br i1 %259, label %260, label %261

260:                                              ; preds = %254
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
  unreachable

261:                                              ; preds = %254
  %262 = ashr exact i64 %258, 4
  %263 = tail call i64 @llvm.umax.i64(i64 %262, i64 1)
  %264 = add i64 %263, %262
  %265 = icmp ult i64 %264, %262
  %266 = icmp ugt i64 %264, 576460752303423487
  %267 = or i1 %265, %266
  %268 = select i1 %267, i64 576460752303423487, i64 %264
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %273, label %270

270:                                              ; preds = %261
  %271 = shl nuw nsw i64 %268, 4
  %272 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %271) #21
  br label %273

273:                                              ; preds = %270, %261
  %274 = phi ptr [ null, %261 ], [ %272, %270 ]
  %275 = getelementptr inbounds %"struct.std::pair", ptr %274, i64 %262
  store i32 %244, ptr %275, align 8
  %276 = getelementptr inbounds i8, ptr %275, i64 8
  store double %247, ptr %276, align 8
  %277 = icmp eq ptr %255, %239
  br i1 %277, label %284, label %278

278:                                              ; preds = %273, %278
  %279 = phi ptr [ %282, %278 ], [ %274, %273 ]
  %280 = phi ptr [ %281, %278 ], [ %255, %273 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %279, ptr noundef nonnull align 8 dereferenceable(16) %280, i64 16, i1 false)
  %281 = getelementptr inbounds %"struct.std::pair", ptr %280, i64 1
  %282 = getelementptr inbounds %"struct.std::pair", ptr %279, i64 1
  %283 = icmp eq ptr %281, %239
  br i1 %283, label %284, label %278

284:                                              ; preds = %278, %273
  %285 = phi ptr [ %274, %273 ], [ %282, %278 ]
  %286 = getelementptr %"struct.std::pair", ptr %285, i64 1
  %287 = icmp eq ptr %255, null
  br i1 %287, label %289, label %288

288:                                              ; preds = %284
  tail call void @_ZdlPv(ptr noundef nonnull %255) #23
  br label %289

289:                                              ; preds = %288, %284
  store ptr %274, ptr %143, align 8, !tbaa !32
  store ptr %286, ptr %144, align 8, !tbaa !31
  %290 = getelementptr inbounds %"struct.std::pair", ptr %274, i64 %268
  store ptr %290, ptr %150, align 8, !tbaa !709
  br label %291

291:                                              ; preds = %289, %250
  %292 = phi ptr [ %286, %289 ], [ %253, %250 ]
  %293 = add i32 %242, 1
  %294 = zext i32 %293 to i64
  %295 = load ptr, ptr %212, align 8, !tbaa !31
  %296 = load ptr, ptr %211, align 8, !tbaa !32
  %297 = ptrtoint ptr %295 to i64
  %298 = ptrtoint ptr %296 to i64
  %299 = sub i64 %297, %298
  %300 = ashr exact i64 %299, 4
  %301 = icmp ugt i64 %300, %294
  br i1 %301, label %238, label %316

302:                                              ; preds = %209
  %303 = getelementptr inbounds %"struct.std::pair", ptr %162, i64 1
  %304 = icmp eq ptr %303, %157
  br i1 %304, label %313, label %305

305:                                              ; preds = %302
  %306 = ptrtoint ptr %303 to i64
  %307 = sub i64 %158, %306
  %308 = icmp sgt i64 %307, 16
  br i1 %308, label %309, label %310, !prof !23

309:                                              ; preds = %305
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %162, ptr nonnull align 8 %303, i64 %307, i1 false)
  br label %313

310:                                              ; preds = %305
  %311 = icmp eq i64 %307, 16
  br i1 %311, label %312, label %313

312:                                              ; preds = %310
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %162, ptr noundef nonnull align 8 dereferenceable(16) %303, i64 16, i1 false)
  br label %313

313:                                              ; preds = %312, %310, %309, %302
  %314 = load ptr, ptr %144, align 8, !tbaa !31
  %315 = getelementptr inbounds %"struct.std::pair", ptr %314, i64 -1
  store ptr %315, ptr %144, align 8, !tbaa !31
  br label %316

316:                                              ; preds = %291, %225, %313
  %317 = phi ptr [ %237, %225 ], [ %315, %313 ], [ %292, %291 ]
  %318 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %210, i64 0, i32 2
  %319 = load double, ptr %318, align 8, !tbaa !48
  %320 = load double, ptr %151, align 8, !tbaa !48
  %321 = tail call double @llvm.fmuladd.f64(double %319, double %187, double %320)
  store double %321, ptr %151, align 8, !tbaa !48
  %322 = load ptr, ptr %143, align 8, !tbaa !21
  br label %325

323:                                              ; preds = %155, %175
  %324 = add i32 %161, 1
  br label %325

325:                                              ; preds = %323, %316
  %326 = phi ptr [ %322, %316 ], [ %156, %323 ]
  %327 = phi ptr [ %317, %316 ], [ %157, %323 ]
  %328 = phi i32 [ %161, %316 ], [ %324, %323 ]
  %329 = phi i8 [ 1, %316 ], [ %160, %323 ]
  %330 = zext i32 %328 to i64
  %331 = ptrtoint ptr %327 to i64
  %332 = ptrtoint ptr %326 to i64
  %333 = sub i64 %331, %332
  %334 = ashr exact i64 %333, 4
  %335 = icmp ugt i64 %334, %330
  br i1 %335, label %155, label %336

336:                                              ; preds = %325
  %337 = load ptr, ptr %9, align 8, !tbaa !21
  br label %338

338:                                              ; preds = %336, %138
  %339 = phi ptr [ %139, %138 ], [ %337, %336 ]
  %340 = phi ptr [ %140, %138 ], [ %337, %336 ]
  %341 = phi i8 [ %141, %138 ], [ %329, %336 ]
  %342 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %142, i64 1
  %343 = icmp eq ptr %342, %340
  br i1 %343, label %152, label %138

344:                                              ; preds = %133, %152
  %345 = phi ptr [ %339, %152 ], [ %134, %133 ]
  %346 = load ptr, ptr %7, align 8, !tbaa !21
  %347 = icmp eq ptr %346, %345
  br i1 %347, label %351, label %348

348:                                              ; preds = %344
  %349 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %2, i64 0, i32 2
  %350 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %2, i64 0, i32 1
  br label %352

351:                                              ; preds = %631, %344
  store i8 1, ptr %3, align 8, !tbaa !710
  br label %635

352:                                              ; preds = %348, %631
  %353 = phi ptr [ %346, %348 ], [ %632, %631 ]
  %354 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %353, i64 0, i32 1
  %355 = load ptr, ptr %354, align 8, !tbaa !21
  %356 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %353, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %357 = load ptr, ptr %356, align 8, !tbaa !21
  %358 = icmp eq ptr %355, %357
  br i1 %358, label %369, label %359

359:                                              ; preds = %352
  %360 = ptrtoint ptr %357 to i64
  %361 = ptrtoint ptr %355 to i64
  %362 = sub i64 %360, %361
  %363 = ashr exact i64 %362, 4
  %364 = call i64 @llvm.ctlz.i64(i64 %363, i1 true), !range !418
  %365 = shl nuw nsw i64 %364, 1
  %366 = xor i64 %365, 126
  call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_(ptr %355, ptr %357, i64 noundef %366)
  call void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_T0_(ptr %355, ptr %357)
  %367 = load ptr, ptr %356, align 8, !tbaa !31
  %368 = load ptr, ptr %354, align 8, !tbaa !32
  br label %369

369:                                              ; preds = %352, %359
  %370 = phi ptr [ %355, %352 ], [ %368, %359 ]
  %371 = phi ptr [ %355, %352 ], [ %367, %359 ]
  %372 = ptrtoint ptr %371 to i64
  %373 = ptrtoint ptr %370 to i64
  %374 = sub i64 %372, %373
  %375 = ashr exact i64 %374, 4
  %376 = icmp ugt i64 %374, 16
  br i1 %376, label %377, label %557

377:                                              ; preds = %369, %556
  %378 = phi i64 [ %388, %556 ], [ 1, %369 ]
  %379 = phi i32 [ %387, %556 ], [ 1, %369 ]
  %380 = getelementptr inbounds %"struct.std::pair", ptr %370, i64 %378
  %381 = load i32, ptr %380, align 8, !tbaa !37
  %382 = add i32 %379, -1
  %383 = zext i32 %382 to i64
  %384 = getelementptr inbounds %"struct.std::pair", ptr %370, i64 %383
  %385 = load i32, ptr %384, align 8, !tbaa !37
  %386 = icmp eq i32 %381, %385
  %387 = add i32 %379, 1
  %388 = zext i32 %387 to i64
  %389 = icmp ugt i64 %375, %388
  br i1 %386, label %390, label %556

390:                                              ; preds = %377
  br i1 %389, label %412, label %391

391:                                              ; preds = %412, %390
  %392 = phi i32 [ 1, %390 ], [ %424, %412 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #24
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %2, i8 0, i64 24, i1 false)
  %393 = load ptr, ptr %356, align 8, !tbaa !31
  %394 = load ptr, ptr %354, align 8, !tbaa !21
  %395 = ptrtoint ptr %393 to i64
  %396 = ptrtoint ptr %394 to i64
  %397 = sub i64 %395, %396
  %398 = ashr exact i64 %397, 4
  %399 = zext i32 %392 to i64
  %400 = sub nsw i64 %398, %399
  %401 = icmp ugt i64 %400, 576460752303423487
  br i1 %401, label %402, label %404

402:                                              ; preds = %391
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.25) #22
          to label %403 unwind label %452

403:                                              ; preds = %402
  unreachable

404:                                              ; preds = %391
  %405 = icmp eq i64 %398, %399
  br i1 %405, label %428, label %406

406:                                              ; preds = %404
  %407 = shl nuw nsw i64 %400, 4
  %408 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %407) #21
          to label %409 unwind label %450

409:                                              ; preds = %406
  store ptr %408, ptr %2, align 8, !tbaa !32
  store ptr %408, ptr %350, align 8, !tbaa !31
  %410 = getelementptr inbounds %"struct.std::pair", ptr %408, i64 %400
  store ptr %410, ptr %349, align 8, !tbaa !709
  %411 = load ptr, ptr %354, align 8, !tbaa !21
  br label %428

412:                                              ; preds = %390, %412
  %413 = phi i64 [ %426, %412 ], [ %388, %390 ]
  %414 = phi i32 [ %425, %412 ], [ %387, %390 ]
  %415 = phi i32 [ %414, %412 ], [ %379, %390 ]
  %416 = phi i32 [ %424, %412 ], [ 1, %390 ]
  %417 = getelementptr inbounds %"struct.std::pair", ptr %370, i64 %413
  %418 = load i32, ptr %417, align 8, !tbaa !37
  %419 = zext i32 %415 to i64
  %420 = getelementptr inbounds %"struct.std::pair", ptr %370, i64 %419
  %421 = load i32, ptr %420, align 8, !tbaa !37
  %422 = icmp eq i32 %418, %421
  %423 = zext i1 %422 to i32
  %424 = add i32 %416, %423
  %425 = add i32 %414, 1
  %426 = zext i32 %425 to i64
  %427 = icmp ugt i64 %375, %426
  br i1 %427, label %412, label %391

428:                                              ; preds = %409, %404
  %429 = phi ptr [ %411, %409 ], [ %394, %404 ]
  %430 = phi ptr [ %408, %409 ], [ null, %404 ]
  %431 = getelementptr inbounds %"struct.std::pair", ptr %429, i64 %378
  invoke void @_ZNSt6vectorISt4pairIjdESaIS1_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(24) %2, ptr %430, ptr %429, ptr %431)
          to label %432 unwind label %454

432:                                              ; preds = %428
  %433 = zext i32 %379 to i64
  %434 = load ptr, ptr %356, align 8, !tbaa !31
  %435 = load ptr, ptr %354, align 8, !tbaa !32
  %436 = ptrtoint ptr %434 to i64
  %437 = ptrtoint ptr %435 to i64
  %438 = sub i64 %436, %437
  %439 = ashr exact i64 %438, 4
  %440 = icmp ugt i64 %439, %433
  br i1 %440, label %460, label %441

441:                                              ; preds = %522, %432
  %442 = phi ptr [ %434, %432 ], [ %525, %522 ]
  %443 = phi ptr [ %435, %432 ], [ %526, %522 ]
  %444 = load ptr, ptr %350, align 8, !tbaa !31
  %445 = load ptr, ptr %2, align 8, !tbaa !32
  %446 = ptrtoint ptr %444 to i64
  %447 = ptrtoint ptr %445 to i64
  %448 = sub i64 %446, %447
  %449 = ashr exact i64 %448, 4
  br label %532

450:                                              ; preds = %406
  %451 = landingpad { ptr, i32 }
          cleanup
  br label %550

452:                                              ; preds = %402
  %453 = landingpad { ptr, i32 }
          cleanup
  br label %550

454:                                              ; preds = %428
  %455 = landingpad { ptr, i32 }
          cleanup
  br label %550

456:                                              ; preds = %502
  %457 = landingpad { ptr, i32 }
          cleanup
  br label %550

458:                                              ; preds = %491
  %459 = landingpad { ptr, i32 }
          cleanup
  br label %550

460:                                              ; preds = %432, %522
  %461 = phi ptr [ %526, %522 ], [ %435, %432 ]
  %462 = phi i64 [ %524, %522 ], [ %433, %432 ]
  %463 = phi i32 [ %523, %522 ], [ %379, %432 ]
  %464 = getelementptr inbounds %"struct.std::pair", ptr %461, i64 %462
  %465 = load i32, ptr %464, align 8, !tbaa !37
  %466 = add i32 %463, -1
  %467 = zext i32 %466 to i64
  %468 = getelementptr inbounds %"struct.std::pair", ptr %461, i64 %467
  %469 = load i32, ptr %468, align 8, !tbaa !37
  %470 = icmp eq i32 %465, %469
  br i1 %470, label %471, label %478

471:                                              ; preds = %460
  %472 = getelementptr inbounds %"struct.std::pair", ptr %461, i64 %462, i32 1
  %473 = load double, ptr %472, align 8, !tbaa !35
  %474 = load ptr, ptr %350, align 8, !tbaa !21
  %475 = getelementptr %"struct.std::pair", ptr %474, i64 -1, i32 1
  %476 = load double, ptr %475, align 8, !tbaa !35
  %477 = fadd double %473, %476
  store double %477, ptr %475, align 8, !tbaa !35
  br label %522

478:                                              ; preds = %460
  %479 = load ptr, ptr %350, align 8, !tbaa !21
  %480 = load ptr, ptr %349, align 8, !tbaa !709
  %481 = icmp eq ptr %479, %480
  br i1 %481, label %485, label %482

482:                                              ; preds = %478
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %479, ptr noundef nonnull align 8 dereferenceable(16) %464, i64 16, i1 false)
  %483 = load ptr, ptr %350, align 8, !tbaa !31
  %484 = getelementptr inbounds %"struct.std::pair", ptr %483, i64 1
  store ptr %484, ptr %350, align 8, !tbaa !31
  br label %522

485:                                              ; preds = %478
  %486 = load ptr, ptr %2, align 8, !tbaa !21
  %487 = ptrtoint ptr %479 to i64
  %488 = ptrtoint ptr %486 to i64
  %489 = sub i64 %487, %488
  %490 = icmp eq i64 %489, 9223372036854775792
  br i1 %490, label %491, label %493

491:                                              ; preds = %485
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %492 unwind label %458

492:                                              ; preds = %491
  unreachable

493:                                              ; preds = %485
  %494 = ashr exact i64 %489, 4
  %495 = call i64 @llvm.umax.i64(i64 %494, i64 1)
  %496 = add i64 %495, %494
  %497 = icmp ult i64 %496, %494
  %498 = icmp ugt i64 %496, 576460752303423487
  %499 = or i1 %497, %498
  %500 = select i1 %499, i64 576460752303423487, i64 %496
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %505, label %502

502:                                              ; preds = %493
  %503 = shl nuw nsw i64 %500, 4
  %504 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %503) #21
          to label %505 unwind label %456

505:                                              ; preds = %502, %493
  %506 = phi ptr [ null, %493 ], [ %504, %502 ]
  %507 = getelementptr inbounds %"struct.std::pair", ptr %506, i64 %494
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %507, ptr noundef nonnull align 8 dereferenceable(16) %464, i64 16, i1 false)
  %508 = icmp eq ptr %486, %479
  br i1 %508, label %515, label %509

509:                                              ; preds = %505, %509
  %510 = phi ptr [ %513, %509 ], [ %506, %505 ]
  %511 = phi ptr [ %512, %509 ], [ %486, %505 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %510, ptr noundef nonnull align 8 dereferenceable(16) %511, i64 16, i1 false)
  %512 = getelementptr inbounds %"struct.std::pair", ptr %511, i64 1
  %513 = getelementptr inbounds %"struct.std::pair", ptr %510, i64 1
  %514 = icmp eq ptr %512, %479
  br i1 %514, label %515, label %509

515:                                              ; preds = %509, %505
  %516 = phi ptr [ %506, %505 ], [ %513, %509 ]
  %517 = getelementptr %"struct.std::pair", ptr %516, i64 1
  %518 = icmp eq ptr %486, null
  br i1 %518, label %520, label %519

519:                                              ; preds = %515
  call void @_ZdlPv(ptr noundef nonnull %486) #23
  br label %520

520:                                              ; preds = %519, %515
  store ptr %506, ptr %2, align 8, !tbaa !32
  store ptr %517, ptr %350, align 8, !tbaa !31
  %521 = getelementptr inbounds %"struct.std::pair", ptr %506, i64 %500
  store ptr %521, ptr %349, align 8, !tbaa !709
  br label %522

522:                                              ; preds = %520, %482, %471
  %523 = add i32 %463, 1
  %524 = zext i32 %523 to i64
  %525 = load ptr, ptr %356, align 8, !tbaa !31
  %526 = load ptr, ptr %354, align 8, !tbaa !32
  %527 = ptrtoint ptr %525 to i64
  %528 = ptrtoint ptr %526 to i64
  %529 = sub i64 %527, %528
  %530 = ashr exact i64 %529, 4
  %531 = icmp ugt i64 %530, %524
  br i1 %531, label %460, label %441

532:                                              ; preds = %532, %441
  %533 = phi i32 [ %536, %532 ], [ 1, %441 ]
  %534 = zext i32 %533 to i64
  %535 = icmp ugt i64 %449, %534
  %536 = add i32 %533, 1
  br i1 %535, label %532, label %537

537:                                              ; preds = %532
  %538 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %353, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %539 = load ptr, ptr %538, align 8, !tbaa !709
  store ptr %445, ptr %354, align 8, !tbaa !32
  store ptr %444, ptr %356, align 8, !tbaa !31
  %540 = load ptr, ptr %349, align 8, !tbaa !709
  store ptr %540, ptr %538, align 8, !tbaa !709
  store ptr %443, ptr %2, align 8, !tbaa !32
  store ptr %442, ptr %350, align 8, !tbaa !31
  store ptr %539, ptr %349, align 8, !tbaa !709
  %541 = icmp eq ptr %443, null
  br i1 %541, label %543, label %542

542:                                              ; preds = %537
  call void @_ZdlPv(ptr noundef nonnull %443) #23
  br label %543

543:                                              ; preds = %537, %542
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #24
  %544 = load ptr, ptr %356, align 8, !tbaa !31
  %545 = load ptr, ptr %354, align 8, !tbaa !32
  %546 = ptrtoint ptr %544 to i64
  %547 = ptrtoint ptr %545 to i64
  %548 = sub i64 %546, %547
  %549 = ashr exact i64 %548, 4
  br label %557

550:                                              ; preds = %456, %458, %450, %452, %454
  %551 = phi { ptr, i32 } [ %455, %454 ], [ %451, %450 ], [ %453, %452 ], [ %457, %456 ], [ %459, %458 ]
  %552 = load ptr, ptr %2, align 8, !tbaa !32
  %553 = icmp eq ptr %552, null
  br i1 %553, label %555, label %554

554:                                              ; preds = %550
  call void @_ZdlPv(ptr noundef nonnull %552) #23
  br label %555

555:                                              ; preds = %554, %550
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #24
  resume { ptr, i32 } %551

556:                                              ; preds = %377
  br i1 %389, label %377, label %557

557:                                              ; preds = %556, %369, %543
  %558 = phi i64 [ %375, %369 ], [ %549, %543 ], [ %375, %556 ]
  %559 = phi ptr [ %370, %369 ], [ %545, %543 ], [ %370, %556 ]
  %560 = phi ptr [ %371, %369 ], [ %544, %543 ], [ %371, %556 ]
  %561 = icmp eq ptr %560, %559
  br i1 %561, label %631, label %564

562:                                              ; preds = %564
  %563 = fcmp une double %570, 1.000000e+00
  br i1 %563, label %574, label %631

564:                                              ; preds = %557, %564
  %565 = phi i64 [ %572, %564 ], [ 0, %557 ]
  %566 = phi i32 [ %571, %564 ], [ 0, %557 ]
  %567 = phi double [ %570, %564 ], [ 0.000000e+00, %557 ]
  %568 = getelementptr inbounds %"struct.std::pair", ptr %559, i64 %565, i32 1
  %569 = load double, ptr %568, align 8, !tbaa !35
  %570 = fadd double %567, %569
  %571 = add i32 %566, 1
  %572 = zext i32 %571 to i64
  %573 = icmp ugt i64 %558, %572
  br i1 %573, label %564, label %562

574:                                              ; preds = %562
  %575 = fadd double %570, -1.000000e+00
  %576 = call double @llvm.fabs.f64(double %575)
  %577 = fcmp olt double %576, 1.000000e-13
  br i1 %577, label %578, label %631

578:                                              ; preds = %574
  br i1 %561, label %618, label %579

579:                                              ; preds = %578
  %580 = call i64 @llvm.umax.i64(i64 %558, i64 1)
  %581 = icmp ult i64 %580, 6
  br i1 %581, label %615, label %582

582:                                              ; preds = %579
  %583 = call i64 @llvm.umax.i64(i64 %558, i64 1)
  %584 = add i64 %583, -1
  %585 = and i64 %584, 4294967295
  %586 = icmp eq i64 %585, 4294967295
  %587 = icmp ugt i64 %584, 4294967295
  %588 = or i1 %586, %587
  %589 = getelementptr i8, ptr %559, i64 8
  %590 = shl i64 %584, 4
  %591 = getelementptr i8, ptr %589, i64 %590
  %592 = icmp ult ptr %591, %589
  %593 = or i1 %592, %588
  br i1 %593, label %615, label %594

594:                                              ; preds = %582
  %595 = and i64 %580, -2
  %596 = trunc i64 %595 to i32
  %597 = insertelement <2 x double> poison, double %570, i64 0
  %598 = shufflevector <2 x double> %597, <2 x double> poison, <2 x i32> zeroinitializer
  br label %599

599:                                              ; preds = %599, %594
  %600 = phi i64 [ 0, %594 ], [ %611, %599 ]
  %601 = or i64 %600, 1
  %602 = getelementptr inbounds %"struct.std::pair", ptr %559, i64 %600, i32 1
  %603 = getelementptr inbounds %"struct.std::pair", ptr %559, i64 %601, i32 1
  %604 = load double, ptr %602, align 8, !tbaa !35
  %605 = load double, ptr %603, align 8, !tbaa !35
  %606 = insertelement <2 x double> poison, double %604, i64 0
  %607 = insertelement <2 x double> %606, double %605, i64 1
  %608 = fdiv <2 x double> %607, %598
  %609 = extractelement <2 x double> %608, i64 0
  store double %609, ptr %602, align 8, !tbaa !35
  %610 = extractelement <2 x double> %608, i64 1
  store double %610, ptr %603, align 8, !tbaa !35
  %611 = add nuw i64 %600, 2
  %612 = icmp eq i64 %611, %595
  br i1 %612, label %613, label %599, !llvm.loop !721

613:                                              ; preds = %599
  %614 = icmp eq i64 %580, %595
  br i1 %614, label %618, label %615

615:                                              ; preds = %582, %579, %613
  %616 = phi i64 [ 0, %582 ], [ 0, %579 ], [ %595, %613 ]
  %617 = phi i32 [ 0, %582 ], [ 0, %579 ], [ %596, %613 ]
  br label %622

618:                                              ; preds = %622, %613, %578
  %619 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %353, i64 0, i32 2
  %620 = load double, ptr %619, align 8, !tbaa !48
  %621 = fdiv double %620, %570
  store double %621, ptr %619, align 8, !tbaa !48
  br label %631

622:                                              ; preds = %615, %622
  %623 = phi i64 [ %629, %622 ], [ %616, %615 ]
  %624 = phi i32 [ %628, %622 ], [ %617, %615 ]
  %625 = getelementptr inbounds %"struct.std::pair", ptr %559, i64 %623, i32 1
  %626 = load double, ptr %625, align 8, !tbaa !35
  %627 = fdiv double %626, %570
  store double %627, ptr %625, align 8, !tbaa !35
  %628 = add i32 %624, 1
  %629 = zext i32 %628 to i64
  %630 = icmp ugt i64 %558, %629
  br i1 %630, label %622, label %618, !llvm.loop !722

631:                                              ; preds = %557, %618, %574, %562
  %632 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %353, i64 1
  %633 = load ptr, ptr %9, align 8, !tbaa !21
  %634 = icmp eq ptr %632, %633
  br i1 %634, label %351, label %352

635:                                              ; preds = %1, %351
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii16ConstraintMatrix5mergeERKS0_(ptr noundef nonnull align 8 dereferenceable(138) %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 3
  %4 = load i8, ptr %3, align 8, !tbaa !710, !range !425, !noundef !73
  %5 = icmp eq i8 %4, 0
  store i8 0, ptr %3, align 8, !tbaa !710
  %6 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %1, i64 0, i32 2
  %7 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !55
  %9 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !57
  %11 = load ptr, ptr %6, align 8, !tbaa !55
  %12 = ptrtoint ptr %8 to i64
  %13 = ptrtoint ptr %11 to i64
  %14 = sub i64 %12, %13
  %15 = shl nsw i64 %14, 3
  %16 = zext i32 %10 to i64
  %17 = add nsw i64 %15, %16
  %18 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = load ptr, ptr %18, align 8, !tbaa !55
  %24 = ptrtoint ptr %20 to i64
  %25 = ptrtoint ptr %23 to i64
  %26 = sub i64 %24, %25
  %27 = shl nsw i64 %26, 3
  %28 = zext i32 %22 to i64
  %29 = add nsw i64 %27, %28
  %30 = icmp ugt i64 %17, %29
  br i1 %30, label %31, label %42

31:                                               ; preds = %2
  %32 = sub i64 %17, %29
  tail call void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(ptr noundef nonnull align 8 dereferenceable(40) %18, ptr %20, i32 %22, i64 noundef %32, i1 noundef zeroext false)
  %33 = load ptr, ptr %7, align 8, !tbaa !55
  %34 = load i32, ptr %9, align 8, !tbaa !57
  %35 = load ptr, ptr %6, align 8, !tbaa !55
  %36 = ptrtoint ptr %33 to i64
  %37 = ptrtoint ptr %35 to i64
  %38 = sub i64 %36, %37
  %39 = shl nsw i64 %38, 3
  %40 = zext i32 %34 to i64
  %41 = add nsw i64 %39, %40
  br label %42

42:                                               ; preds = %31, %2
  %43 = phi i64 [ %41, %31 ], [ %17, %2 ]
  %44 = phi ptr [ %35, %31 ], [ %11, %2 ]
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %67, label %46

46:                                               ; preds = %42
  %47 = load ptr, ptr %18, align 8
  br label %48

48:                                               ; preds = %46, %63
  %49 = phi i32 [ 0, %46 ], [ %64, %63 ]
  %50 = lshr i32 %49, 6
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i64, ptr %44, i64 %51
  %53 = and i32 %49, 63
  %54 = zext i32 %53 to i64
  %55 = shl nuw i64 1, %54
  %56 = load i64, ptr %52, align 8, !tbaa !42
  %57 = and i64 %56, %55
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %48
  %60 = getelementptr inbounds i64, ptr %47, i64 %51
  %61 = load i64, ptr %60, align 8, !tbaa !42
  %62 = or i64 %61, %55
  store i64 %62, ptr %60, align 8, !tbaa !42
  br label %63

63:                                               ; preds = %48, %59
  %64 = add i32 %49, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %43, %65
  br i1 %66, label %48, label %67

67:                                               ; preds = %63, %42
  %68 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8, !tbaa !21
  %70 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !21
  %72 = icmp eq ptr %69, %71
  br i1 %72, label %542, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %1, i64 0, i32 3
  %75 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %1, i64 0, i32 1
  %76 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %81

77:                                               ; preds = %104
  %78 = landingpad { ptr, i32 }
          cleanup
  br label %561

79:                                               ; preds = %96
  %80 = landingpad { ptr, i32 }
          cleanup
  br label %561

81:                                               ; preds = %73, %534
  %82 = phi ptr [ null, %73 ], [ %538, %534 ]
  %83 = phi ptr [ null, %73 ], [ %537, %534 ]
  %84 = phi ptr [ null, %73 ], [ %535, %534 ]
  %85 = phi ptr [ null, %73 ], [ %536, %534 ]
  %86 = phi ptr [ %69, %73 ], [ %539, %534 ]
  %87 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %86, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %86, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %89 = load ptr, ptr %88, align 8, !tbaa !31
  %90 = load ptr, ptr %87, align 8, !tbaa !32
  %91 = ptrtoint ptr %89 to i64
  %92 = ptrtoint ptr %90 to i64
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 4
  %95 = icmp slt i64 %93, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %81
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.25) #22
          to label %97 unwind label %79

97:                                               ; preds = %96
  unreachable

98:                                               ; preds = %81
  %99 = ptrtoint ptr %85 to i64
  %100 = ptrtoint ptr %84 to i64
  %101 = sub i64 %99, %100
  %102 = ashr exact i64 %101, 3
  %103 = icmp ult i64 %102, %94
  br i1 %103, label %104, label %114

104:                                              ; preds = %98
  %105 = lshr exact i64 %93, 1
  %106 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %105) #21
          to label %107 unwind label %77

107:                                              ; preds = %104
  %108 = icmp eq ptr %84, null
  br i1 %108, label %110, label %109

109:                                              ; preds = %107
  tail call void @_ZdlPv(ptr noundef nonnull %84) #23
  br label %110

110:                                              ; preds = %109, %107
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %106, i64 %94
  %112 = load ptr, ptr %88, align 8, !tbaa !31
  %113 = load ptr, ptr %87, align 8, !tbaa !32
  br label %114

114:                                              ; preds = %98, %110
  %115 = phi ptr [ %113, %110 ], [ %90, %98 ]
  %116 = phi ptr [ %112, %110 ], [ %89, %98 ]
  %117 = phi ptr [ %111, %110 ], [ %85, %98 ]
  %118 = phi ptr [ %106, %110 ], [ %84, %98 ]
  %119 = icmp eq ptr %116, %115
  br i1 %119, label %534, label %127

120:                                              ; preds = %363
  %121 = and i8 %371, 1
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %534, label %123

123:                                              ; preds = %120
  %124 = icmp eq ptr %374, %375
  br i1 %124, label %381, label %125

125:                                              ; preds = %123
  %126 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %86, i64 0, i32 2
  br label %392

127:                                              ; preds = %114, %363
  %128 = phi ptr [ %375, %363 ], [ %115, %114 ]
  %129 = phi i64 [ %373, %363 ], [ 0, %114 ]
  %130 = phi i8 [ %371, %363 ], [ 0, %114 ]
  %131 = phi i32 [ %372, %363 ], [ 0, %114 ]
  %132 = phi ptr [ %366, %363 ], [ %118, %114 ]
  %133 = phi ptr [ %365, %363 ], [ %118, %114 ]
  %134 = phi ptr [ %364, %363 ], [ %117, %114 ]
  %135 = ptrtoint ptr %133 to i64
  %136 = ptrtoint ptr %132 to i64
  %137 = ptrtoint ptr %133 to i64
  %138 = ptrtoint ptr %132 to i64
  %139 = load i8, ptr %74, align 8, !tbaa !710, !range !425, !noundef !73
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %262, label %141

141:                                              ; preds = %127
  %142 = getelementptr inbounds %"struct.std::pair", ptr %128, i64 %129
  %143 = load i32, ptr %142, align 8, !tbaa !37
  %144 = load ptr, ptr %75, align 8, !tbaa !21
  %145 = load ptr, ptr %76, align 8, !tbaa !21
  %146 = ptrtoint ptr %145 to i64
  %147 = ptrtoint ptr %144 to i64
  %148 = sub i64 %146, %147
  %149 = icmp sgt i64 %148, 0
  br i1 %149, label %150, label %165

150:                                              ; preds = %141
  %151 = udiv exact i64 %148, 40
  br label %152

152:                                              ; preds = %152, %150
  %153 = phi i64 [ %151, %150 ], [ %163, %152 ]
  %154 = phi ptr [ %144, %150 ], [ %162, %152 ]
  %155 = lshr i64 %153, 1
  %156 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %154, i64 %155
  %157 = load i32, ptr %156, align 8, !tbaa !24
  %158 = icmp ult i32 %157, %143
  %159 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %156, i64 1
  %160 = xor i64 %155, -1
  %161 = add nsw i64 %153, %160
  %162 = select i1 %158, ptr %159, ptr %154
  %163 = select i1 %158, i64 %161, i64 %155
  %164 = icmp sgt i64 %163, 0
  br i1 %164, label %152, label %165

165:                                              ; preds = %152, %141
  %166 = phi ptr [ %144, %141 ], [ %162, %152 ]
  %167 = icmp eq ptr %166, %145
  br i1 %167, label %176, label %168

168:                                              ; preds = %165
  %169 = load i32, ptr %166, align 8, !tbaa !24
  %170 = icmp eq i32 %169, %143
  %171 = select i1 %170, ptr %166, ptr %145
  br label %176

172:                                              ; preds = %197
  %173 = landingpad { ptr, i32 }
          cleanup
  br label %561

174:                                              ; preds = %186
  %175 = landingpad { ptr, i32 }
          cleanup
  br label %561

176:                                              ; preds = %168, %165
  %177 = phi ptr [ %145, %165 ], [ %171, %168 ]
  %178 = icmp eq ptr %133, %134
  br i1 %178, label %181, label %179

179:                                              ; preds = %176
  %180 = ptrtoint ptr %177 to i64
  store i64 %180, ptr %133, align 8, !tbaa !21
  br label %257

181:                                              ; preds = %176
  %182 = ptrtoint ptr %133 to i64
  %183 = ptrtoint ptr %132 to i64
  %184 = sub i64 %182, %183
  %185 = icmp eq i64 %184, 9223372036854775800
  br i1 %185, label %186, label %188

186:                                              ; preds = %181
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %187 unwind label %174

187:                                              ; preds = %186
  unreachable

188:                                              ; preds = %181
  %189 = ashr exact i64 %184, 3
  %190 = tail call i64 @llvm.umax.i64(i64 %189, i64 1)
  %191 = add i64 %190, %189
  %192 = icmp ult i64 %191, %189
  %193 = icmp ugt i64 %191, 1152921504606846975
  %194 = or i1 %192, %193
  %195 = select i1 %194, i64 1152921504606846975, i64 %191
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %188
  %198 = shl nuw nsw i64 %195, 3
  %199 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %198) #21
          to label %200 unwind label %172

200:                                              ; preds = %197, %188
  %201 = phi ptr [ null, %188 ], [ %199, %197 ]
  %202 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %201, i64 %189
  %203 = ptrtoint ptr %177 to i64
  store i64 %203, ptr %202, align 8, !tbaa !21
  %204 = icmp eq ptr %132, %133
  br i1 %204, label %251, label %205

205:                                              ; preds = %200
  %206 = ptrtoint ptr %201 to i64
  %207 = add i64 %135, -8
  %208 = sub i64 %207, %136
  %209 = lshr i64 %208, 3
  %210 = add nuw nsw i64 %209, 1
  %211 = icmp ult i64 %208, 120
  %212 = sub i64 %206, %136
  %213 = icmp ult i64 %212, 128
  %214 = or i1 %211, %213
  br i1 %214, label %241, label %215

215:                                              ; preds = %205
  %216 = and i64 %210, 4611686018427387888
  %217 = shl i64 %216, 3
  %218 = getelementptr i8, ptr %201, i64 %217
  %219 = shl i64 %216, 3
  %220 = getelementptr i8, ptr %132, i64 %219
  br label %221

221:                                              ; preds = %221, %215
  %222 = phi i64 [ 0, %215 ], [ %237, %221 ]
  %223 = shl i64 %222, 3
  %224 = getelementptr i8, ptr %201, i64 %223
  %225 = shl i64 %222, 3
  %226 = getelementptr i8, ptr %132, i64 %225
  %227 = load <4 x i64>, ptr %226, align 8, !tbaa !21
  %228 = getelementptr i64, ptr %226, i64 4
  %229 = load <4 x i64>, ptr %228, align 8, !tbaa !21
  %230 = getelementptr i64, ptr %226, i64 8
  %231 = load <4 x i64>, ptr %230, align 8, !tbaa !21
  %232 = getelementptr i64, ptr %226, i64 12
  %233 = load <4 x i64>, ptr %232, align 8, !tbaa !21
  store <4 x i64> %227, ptr %224, align 8, !tbaa !21
  %234 = getelementptr i64, ptr %224, i64 4
  store <4 x i64> %229, ptr %234, align 8, !tbaa !21
  %235 = getelementptr i64, ptr %224, i64 8
  store <4 x i64> %231, ptr %235, align 8, !tbaa !21
  %236 = getelementptr i64, ptr %224, i64 12
  store <4 x i64> %233, ptr %236, align 8, !tbaa !21
  %237 = add nuw i64 %222, 16
  %238 = icmp eq i64 %237, %216
  br i1 %238, label %239, label %221, !llvm.loop !723

239:                                              ; preds = %221
  %240 = icmp eq i64 %210, %216
  br i1 %240, label %251, label %241

241:                                              ; preds = %205, %239
  %242 = phi ptr [ %201, %205 ], [ %218, %239 ]
  %243 = phi ptr [ %132, %205 ], [ %220, %239 ]
  br label %244

244:                                              ; preds = %241, %244
  %245 = phi ptr [ %249, %244 ], [ %242, %241 ]
  %246 = phi ptr [ %248, %244 ], [ %243, %241 ]
  %247 = load i64, ptr %246, align 8, !tbaa !21
  store i64 %247, ptr %245, align 8, !tbaa !21
  %248 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %246, i64 1
  %249 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %245, i64 1
  %250 = icmp eq ptr %248, %133
  br i1 %250, label %251, label %244, !llvm.loop !724

251:                                              ; preds = %244, %239, %200
  %252 = phi ptr [ %201, %200 ], [ %218, %239 ], [ %249, %244 ]
  %253 = icmp eq ptr %132, null
  br i1 %253, label %255, label %254

254:                                              ; preds = %251
  tail call void @_ZdlPv(ptr noundef nonnull %132) #23
  br label %255

255:                                              ; preds = %254, %251
  %256 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %201, i64 %195
  br label %257

257:                                              ; preds = %255, %179
  %258 = phi ptr [ %256, %255 ], [ %134, %179 ]
  %259 = phi ptr [ %252, %255 ], [ %133, %179 ]
  %260 = phi ptr [ %201, %255 ], [ %132, %179 ]
  %261 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %259, i64 1
  br label %363

262:                                              ; preds = %127
  %263 = load ptr, ptr %76, align 8, !tbaa !21
  %264 = load ptr, ptr %75, align 8, !tbaa !21
  %265 = icmp eq ptr %264, %263
  br i1 %265, label %280, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"struct.std::pair", ptr %128, i64 %129
  %268 = load i32, ptr %267, align 8, !tbaa !37
  br label %273

269:                                              ; preds = %302
  %270 = landingpad { ptr, i32 }
          cleanup
  br label %561

271:                                              ; preds = %291
  %272 = landingpad { ptr, i32 }
          cleanup
  br label %561

273:                                              ; preds = %266, %277
  %274 = phi ptr [ %264, %266 ], [ %278, %277 ]
  %275 = load i32, ptr %274, align 8, !tbaa !24
  %276 = icmp eq i32 %275, %268
  br i1 %276, label %280, label %277

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %274, i64 1
  %279 = icmp eq ptr %278, %263
  br i1 %279, label %280, label %273

280:                                              ; preds = %277, %273, %262
  %281 = phi ptr [ %263, %262 ], [ %274, %273 ], [ %263, %277 ]
  %282 = icmp eq ptr %133, %134
  br i1 %282, label %286, label %283

283:                                              ; preds = %280
  %284 = ptrtoint ptr %281 to i64
  store i64 %284, ptr %133, align 8, !tbaa !21
  %285 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %133, i64 1
  br label %363

286:                                              ; preds = %280
  %287 = ptrtoint ptr %133 to i64
  %288 = ptrtoint ptr %132 to i64
  %289 = sub i64 %287, %288
  %290 = icmp eq i64 %289, 9223372036854775800
  br i1 %290, label %291, label %293

291:                                              ; preds = %286
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %292 unwind label %271

292:                                              ; preds = %291
  unreachable

293:                                              ; preds = %286
  %294 = ashr exact i64 %289, 3
  %295 = tail call i64 @llvm.umax.i64(i64 %294, i64 1)
  %296 = add i64 %295, %294
  %297 = icmp ult i64 %296, %294
  %298 = icmp ugt i64 %296, 1152921504606846975
  %299 = or i1 %297, %298
  %300 = select i1 %299, i64 1152921504606846975, i64 %296
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %305, label %302

302:                                              ; preds = %293
  %303 = shl nuw nsw i64 %300, 3
  %304 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %303) #21
          to label %305 unwind label %269

305:                                              ; preds = %302, %293
  %306 = phi ptr [ null, %293 ], [ %304, %302 ]
  %307 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %306, i64 %294
  %308 = ptrtoint ptr %281 to i64
  store i64 %308, ptr %307, align 8, !tbaa !21
  %309 = icmp eq ptr %132, %133
  br i1 %309, label %356, label %310

310:                                              ; preds = %305
  %311 = ptrtoint ptr %306 to i64
  %312 = add i64 %137, -8
  %313 = sub i64 %312, %138
  %314 = lshr i64 %313, 3
  %315 = add nuw nsw i64 %314, 1
  %316 = icmp ult i64 %313, 120
  %317 = sub i64 %311, %138
  %318 = icmp ult i64 %317, 128
  %319 = or i1 %316, %318
  br i1 %319, label %346, label %320

320:                                              ; preds = %310
  %321 = and i64 %315, 4611686018427387888
  %322 = shl i64 %321, 3
  %323 = getelementptr i8, ptr %306, i64 %322
  %324 = shl i64 %321, 3
  %325 = getelementptr i8, ptr %132, i64 %324
  br label %326

326:                                              ; preds = %326, %320
  %327 = phi i64 [ 0, %320 ], [ %342, %326 ]
  %328 = shl i64 %327, 3
  %329 = getelementptr i8, ptr %306, i64 %328
  %330 = shl i64 %327, 3
  %331 = getelementptr i8, ptr %132, i64 %330
  %332 = load <4 x i64>, ptr %331, align 8, !tbaa !21
  %333 = getelementptr i64, ptr %331, i64 4
  %334 = load <4 x i64>, ptr %333, align 8, !tbaa !21
  %335 = getelementptr i64, ptr %331, i64 8
  %336 = load <4 x i64>, ptr %335, align 8, !tbaa !21
  %337 = getelementptr i64, ptr %331, i64 12
  %338 = load <4 x i64>, ptr %337, align 8, !tbaa !21
  store <4 x i64> %332, ptr %329, align 8, !tbaa !21
  %339 = getelementptr i64, ptr %329, i64 4
  store <4 x i64> %334, ptr %339, align 8, !tbaa !21
  %340 = getelementptr i64, ptr %329, i64 8
  store <4 x i64> %336, ptr %340, align 8, !tbaa !21
  %341 = getelementptr i64, ptr %329, i64 12
  store <4 x i64> %338, ptr %341, align 8, !tbaa !21
  %342 = add nuw i64 %327, 16
  %343 = icmp eq i64 %342, %321
  br i1 %343, label %344, label %326, !llvm.loop !725

344:                                              ; preds = %326
  %345 = icmp eq i64 %315, %321
  br i1 %345, label %356, label %346

346:                                              ; preds = %310, %344
  %347 = phi ptr [ %306, %310 ], [ %323, %344 ]
  %348 = phi ptr [ %132, %310 ], [ %325, %344 ]
  br label %349

349:                                              ; preds = %346, %349
  %350 = phi ptr [ %354, %349 ], [ %347, %346 ]
  %351 = phi ptr [ %353, %349 ], [ %348, %346 ]
  %352 = load i64, ptr %351, align 8, !tbaa !21
  store i64 %352, ptr %350, align 8, !tbaa !21
  %353 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %351, i64 1
  %354 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %350, i64 1
  %355 = icmp eq ptr %353, %133
  br i1 %355, label %356, label %349, !llvm.loop !726

356:                                              ; preds = %349, %344, %305
  %357 = phi ptr [ %306, %305 ], [ %323, %344 ], [ %354, %349 ]
  %358 = getelementptr %"class.__gnu_cxx::__normal_iterator", ptr %357, i64 1
  %359 = icmp eq ptr %132, null
  br i1 %359, label %361, label %360

360:                                              ; preds = %356
  tail call void @_ZdlPv(ptr noundef nonnull %132) #23
  br label %361

361:                                              ; preds = %360, %356
  %362 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %306, i64 %300
  br label %363

363:                                              ; preds = %283, %361, %257
  %364 = phi ptr [ %258, %257 ], [ %362, %361 ], [ %134, %283 ]
  %365 = phi ptr [ %261, %257 ], [ %358, %361 ], [ %285, %283 ]
  %366 = phi ptr [ %260, %257 ], [ %306, %361 ], [ %132, %283 ]
  %367 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %365, i64 -1
  %368 = load ptr, ptr %76, align 8, !tbaa !21
  %369 = load ptr, ptr %367, align 8, !tbaa !21
  %370 = icmp eq ptr %369, %368
  %371 = select i1 %370, i8 %130, i8 1
  %372 = add i32 %131, 1
  %373 = zext i32 %372 to i64
  %374 = load ptr, ptr %88, align 8, !tbaa !31
  %375 = load ptr, ptr %87, align 8, !tbaa !32
  %376 = ptrtoint ptr %374 to i64
  %377 = ptrtoint ptr %375 to i64
  %378 = sub i64 %376, %377
  %379 = ashr exact i64 %378, 4
  %380 = icmp ugt i64 %379, %373
  br i1 %380, label %127, label %120

381:                                              ; preds = %514, %123
  %382 = phi ptr [ %83, %123 ], [ %515, %514 ]
  %383 = phi ptr [ %82, %123 ], [ %516, %514 ]
  %384 = phi ptr [ %82, %123 ], [ %517, %514 ]
  %385 = phi ptr [ %375, %123 ], [ %521, %514 ]
  %386 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %86, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %387 = load ptr, ptr %386, align 8, !tbaa !709
  store ptr %384, ptr %87, align 8, !tbaa !32
  store ptr %383, ptr %88, align 8, !tbaa !31
  store ptr %382, ptr %386, align 8, !tbaa !709
  br label %534

388:                                              ; preds = %424
  %389 = landingpad { ptr, i32 }
          cleanup
  br label %566

390:                                              ; preds = %413
  %391 = landingpad { ptr, i32 }
          cleanup
  br label %566

392:                                              ; preds = %125, %514
  %393 = phi ptr [ %375, %125 ], [ %521, %514 ]
  %394 = phi i64 [ 0, %125 ], [ %527, %514 ]
  %395 = phi i32 [ 0, %125 ], [ %526, %514 ]
  %396 = phi ptr [ %82, %125 ], [ %517, %514 ]
  %397 = phi ptr [ %82, %125 ], [ %516, %514 ]
  %398 = phi ptr [ %83, %125 ], [ %515, %514 ]
  %399 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", ptr %366, i64 %394
  %400 = load ptr, ptr %76, align 8, !tbaa !21
  %401 = load ptr, ptr %399, align 8, !tbaa !21
  %402 = icmp eq ptr %401, %400
  br i1 %402, label %403, label %444

403:                                              ; preds = %392
  %404 = getelementptr inbounds %"struct.std::pair", ptr %393, i64 %394
  %405 = icmp eq ptr %397, %398
  br i1 %405, label %408, label %406

406:                                              ; preds = %403
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %397, ptr noundef nonnull align 8 dereferenceable(16) %404, i64 16, i1 false)
  %407 = getelementptr inbounds %"struct.std::pair", ptr %397, i64 1
  br label %514

408:                                              ; preds = %403
  %409 = ptrtoint ptr %397 to i64
  %410 = ptrtoint ptr %396 to i64
  %411 = sub i64 %409, %410
  %412 = icmp eq i64 %411, 9223372036854775792
  br i1 %412, label %413, label %415

413:                                              ; preds = %408
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %414 unwind label %390

414:                                              ; preds = %413
  unreachable

415:                                              ; preds = %408
  %416 = ashr exact i64 %411, 4
  %417 = tail call i64 @llvm.umax.i64(i64 %416, i64 1)
  %418 = add i64 %417, %416
  %419 = icmp ult i64 %418, %416
  %420 = icmp ugt i64 %418, 576460752303423487
  %421 = or i1 %419, %420
  %422 = select i1 %421, i64 576460752303423487, i64 %418
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %427, label %424

424:                                              ; preds = %415
  %425 = shl nuw nsw i64 %422, 4
  %426 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %425) #21
          to label %427 unwind label %388

427:                                              ; preds = %424, %415
  %428 = phi ptr [ null, %415 ], [ %426, %424 ]
  %429 = getelementptr inbounds %"struct.std::pair", ptr %428, i64 %416
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %429, ptr noundef nonnull align 8 dereferenceable(16) %404, i64 16, i1 false)
  %430 = icmp eq ptr %396, %397
  br i1 %430, label %437, label %431

431:                                              ; preds = %427, %431
  %432 = phi ptr [ %435, %431 ], [ %428, %427 ]
  %433 = phi ptr [ %434, %431 ], [ %396, %427 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %432, ptr noundef nonnull align 8 dereferenceable(16) %433, i64 16, i1 false)
  %434 = getelementptr inbounds %"struct.std::pair", ptr %433, i64 1
  %435 = getelementptr inbounds %"struct.std::pair", ptr %432, i64 1
  %436 = icmp eq ptr %434, %397
  br i1 %436, label %437, label %431

437:                                              ; preds = %431, %427
  %438 = phi ptr [ %428, %427 ], [ %435, %431 ]
  %439 = getelementptr %"struct.std::pair", ptr %438, i64 1
  %440 = icmp eq ptr %396, null
  br i1 %440, label %442, label %441

441:                                              ; preds = %437
  tail call void @_ZdlPv(ptr noundef nonnull %396) #23
  br label %442

442:                                              ; preds = %441, %437
  %443 = getelementptr inbounds %"struct.std::pair", ptr %428, i64 %422
  br label %514

444:                                              ; preds = %392
  %445 = getelementptr inbounds %"struct.std::pair", ptr %393, i64 %394, i32 1
  %446 = load double, ptr %445, align 8, !tbaa !35
  %447 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %401, i64 0, i32 1
  %448 = load ptr, ptr %447, align 8, !tbaa !21
  %449 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %401, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %450 = load ptr, ptr %449, align 8, !tbaa !21
  %451 = icmp eq ptr %448, %450
  br i1 %451, label %514, label %452

452:                                              ; preds = %444, %500
  %453 = phi ptr [ %503, %500 ], [ %396, %444 ]
  %454 = phi ptr [ %504, %500 ], [ %397, %444 ]
  %455 = phi ptr [ %501, %500 ], [ %398, %444 ]
  %456 = phi ptr [ %505, %500 ], [ %448, %444 ]
  %457 = load i32, ptr %456, align 8, !tbaa !37
  %458 = getelementptr inbounds %"struct.std::pair", ptr %456, i64 0, i32 1
  %459 = load double, ptr %458, align 8, !tbaa !35
  %460 = fmul double %446, %459
  %461 = icmp eq ptr %454, %455
  br i1 %461, label %464, label %462

462:                                              ; preds = %452
  store i32 %457, ptr %454, align 8
  %463 = getelementptr inbounds i8, ptr %454, i64 8
  store double %460, ptr %463, align 8
  br label %500

464:                                              ; preds = %452
  %465 = ptrtoint ptr %454 to i64
  %466 = ptrtoint ptr %453 to i64
  %467 = sub i64 %465, %466
  %468 = icmp eq i64 %467, 9223372036854775792
  br i1 %468, label %469, label %471

469:                                              ; preds = %464
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %470 unwind label %512

470:                                              ; preds = %469
  unreachable

471:                                              ; preds = %464
  %472 = ashr exact i64 %467, 4
  %473 = tail call i64 @llvm.umax.i64(i64 %472, i64 1)
  %474 = add i64 %473, %472
  %475 = icmp ult i64 %474, %472
  %476 = icmp ugt i64 %474, 576460752303423487
  %477 = or i1 %475, %476
  %478 = select i1 %477, i64 576460752303423487, i64 %474
  %479 = icmp eq i64 %478, 0
  br i1 %479, label %483, label %480

480:                                              ; preds = %471
  %481 = shl nuw nsw i64 %478, 4
  %482 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %481) #21
          to label %483 unwind label %510

483:                                              ; preds = %480, %471
  %484 = phi ptr [ null, %471 ], [ %482, %480 ]
  %485 = getelementptr inbounds %"struct.std::pair", ptr %484, i64 %472
  store i32 %457, ptr %485, align 8
  %486 = getelementptr inbounds i8, ptr %485, i64 8
  store double %460, ptr %486, align 8
  %487 = icmp eq ptr %453, %454
  br i1 %487, label %494, label %488

488:                                              ; preds = %483, %488
  %489 = phi ptr [ %492, %488 ], [ %484, %483 ]
  %490 = phi ptr [ %491, %488 ], [ %453, %483 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %489, ptr noundef nonnull align 8 dereferenceable(16) %490, i64 16, i1 false)
  %491 = getelementptr inbounds %"struct.std::pair", ptr %490, i64 1
  %492 = getelementptr inbounds %"struct.std::pair", ptr %489, i64 1
  %493 = icmp eq ptr %491, %454
  br i1 %493, label %494, label %488

494:                                              ; preds = %488, %483
  %495 = phi ptr [ %484, %483 ], [ %492, %488 ]
  %496 = icmp eq ptr %453, null
  br i1 %496, label %498, label %497

497:                                              ; preds = %494
  tail call void @_ZdlPv(ptr noundef nonnull %453) #23
  br label %498

498:                                              ; preds = %497, %494
  %499 = getelementptr inbounds %"struct.std::pair", ptr %484, i64 %478
  br label %500

500:                                              ; preds = %498, %462
  %501 = phi ptr [ %499, %498 ], [ %455, %462 ]
  %502 = phi ptr [ %495, %498 ], [ %454, %462 ]
  %503 = phi ptr [ %484, %498 ], [ %453, %462 ]
  %504 = getelementptr inbounds %"struct.std::pair", ptr %502, i64 1
  %505 = getelementptr inbounds %"struct.std::pair", ptr %456, i64 1
  %506 = load ptr, ptr %399, align 8, !tbaa !727
  %507 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %506, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %508 = load ptr, ptr %507, align 8, !tbaa !21
  %509 = icmp eq ptr %505, %508
  br i1 %509, label %514, label %452

510:                                              ; preds = %480
  %511 = landingpad { ptr, i32 }
          cleanup
  br label %566

512:                                              ; preds = %469
  %513 = landingpad { ptr, i32 }
          cleanup
  br label %566

514:                                              ; preds = %500, %444, %442, %406
  %515 = phi ptr [ %443, %442 ], [ %398, %406 ], [ %398, %444 ], [ %501, %500 ]
  %516 = phi ptr [ %439, %442 ], [ %407, %406 ], [ %397, %444 ], [ %504, %500 ]
  %517 = phi ptr [ %428, %442 ], [ %396, %406 ], [ %396, %444 ], [ %503, %500 ]
  %518 = load ptr, ptr %399, align 8, !tbaa !727
  %519 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %518, i64 0, i32 2
  %520 = load double, ptr %519, align 8, !tbaa !48
  %521 = load ptr, ptr %87, align 8, !tbaa !32
  %522 = getelementptr inbounds %"struct.std::pair", ptr %521, i64 %394, i32 1
  %523 = load double, ptr %522, align 8, !tbaa !35
  %524 = load double, ptr %126, align 8, !tbaa !48
  %525 = tail call double @llvm.fmuladd.f64(double %520, double %523, double %524)
  store double %525, ptr %126, align 8, !tbaa !48
  %526 = add i32 %395, 1
  %527 = zext i32 %526 to i64
  %528 = load ptr, ptr %88, align 8, !tbaa !31
  %529 = ptrtoint ptr %528 to i64
  %530 = ptrtoint ptr %521 to i64
  %531 = sub i64 %529, %530
  %532 = ashr exact i64 %531, 4
  %533 = icmp ugt i64 %532, %527
  br i1 %533, label %392, label %381

534:                                              ; preds = %114, %381, %120
  %535 = phi ptr [ %366, %120 ], [ %366, %381 ], [ %118, %114 ]
  %536 = phi ptr [ %364, %120 ], [ %364, %381 ], [ %117, %114 ]
  %537 = phi ptr [ %83, %120 ], [ %387, %381 ], [ %83, %114 ]
  %538 = phi ptr [ %82, %120 ], [ %385, %381 ], [ %82, %114 ]
  %539 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %86, i64 1
  %540 = load ptr, ptr %70, align 8, !tbaa !21
  %541 = icmp eq ptr %539, %540
  br i1 %541, label %542, label %81

542:                                              ; preds = %534, %67
  %543 = phi ptr [ null, %67 ], [ %535, %534 ]
  %544 = phi ptr [ null, %67 ], [ %538, %534 ]
  %545 = phi ptr [ %69, %67 ], [ %539, %534 ]
  %546 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %1, i64 0, i32 1
  %547 = load ptr, ptr %546, align 8, !tbaa !21
  %548 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %549 = load ptr, ptr %548, align 8, !tbaa !21
  invoke void @_ZNSt6vectorIN6dealii16ConstraintMatrix14ConstraintLineESaIS2_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEvNS7_IPS2_S4_EET_SD_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(24) %68, ptr %545, ptr %547, ptr %549)
          to label %550 unwind label %552

550:                                              ; preds = %542
  br i1 %5, label %554, label %551

551:                                              ; preds = %550
  invoke void @_ZN6dealii16ConstraintMatrix5closeEv(ptr noundef nonnull align 8 dereferenceable(138) %0)
          to label %554 unwind label %552

552:                                              ; preds = %542, %551
  %553 = landingpad { ptr, i32 }
          cleanup
  br label %561

554:                                              ; preds = %551, %550
  %555 = icmp eq ptr %543, null
  br i1 %555, label %557, label %556

556:                                              ; preds = %554
  tail call void @_ZdlPv(ptr noundef nonnull %543) #23
  br label %557

557:                                              ; preds = %556, %554
  %558 = icmp eq ptr %544, null
  br i1 %558, label %560, label %559

559:                                              ; preds = %557
  tail call void @_ZdlPv(ptr noundef nonnull %544) #23
  br label %560

560:                                              ; preds = %557, %559
  ret void

561:                                              ; preds = %269, %271, %172, %174, %77, %79, %552
  %562 = phi ptr [ %544, %552 ], [ %82, %77 ], [ %82, %79 ], [ %82, %172 ], [ %82, %174 ], [ %82, %269 ], [ %82, %271 ]
  %563 = phi ptr [ %543, %552 ], [ %84, %77 ], [ %84, %79 ], [ %132, %172 ], [ %132, %174 ], [ %132, %269 ], [ %132, %271 ]
  %564 = phi { ptr, i32 } [ %553, %552 ], [ %78, %77 ], [ %80, %79 ], [ %173, %172 ], [ %175, %174 ], [ %270, %269 ], [ %272, %271 ]
  %565 = icmp eq ptr %563, null
  br i1 %565, label %570, label %566

566:                                              ; preds = %510, %512, %388, %390, %561
  %567 = phi { ptr, i32 } [ %564, %561 ], [ %389, %388 ], [ %391, %390 ], [ %511, %510 ], [ %513, %512 ]
  %568 = phi ptr [ %562, %561 ], [ %396, %388 ], [ %396, %390 ], [ %453, %510 ], [ %453, %512 ]
  %569 = phi ptr [ %563, %561 ], [ %366, %388 ], [ %366, %390 ], [ %366, %510 ], [ %366, %512 ]
  tail call void @_ZdlPv(ptr noundef nonnull %569) #23
  br label %570

570:                                              ; preds = %566, %561
  %571 = phi ptr [ %562, %561 ], [ %568, %566 ]
  %572 = phi { ptr, i32 } [ %564, %561 ], [ %567, %566 ]
  %573 = icmp eq ptr %571, null
  br i1 %573, label %575, label %574

574:                                              ; preds = %570
  tail call void @_ZdlPv(ptr noundef nonnull %571) #23
  br label %575

575:                                              ; preds = %574, %570
  resume { ptr, i32 } %572
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN6dealii16ConstraintMatrix5shiftEj(ptr noundef nonnull align 8 dereferenceable(138) %0, i32 noundef %1) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !55
  %5 = zext i32 %1 to i64
  tail call void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(ptr noundef nonnull align 8 dereferenceable(40) %3, ptr %4, i32 0, i64 noundef %5, i1 noundef zeroext false)
  %6 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !21
  %8 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !21
  %10 = icmp eq ptr %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %21, %2
  ret void

12:                                               ; preds = %2, %21
  %13 = phi ptr [ %22, %21 ], [ %7, %2 ]
  %14 = load i32, ptr %13, align 8, !tbaa !24
  %15 = add i32 %14, %1
  store i32 %15, ptr %13, align 8, !tbaa !24
  %16 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %13, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !21
  %18 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !21
  %20 = icmp eq ptr %17, %19
  br i1 %20, label %21, label %24

21:                                               ; preds = %24, %12
  %22 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %13, i64 1
  %23 = icmp eq ptr %22, %9
  br i1 %23, label %11, label %12

24:                                               ; preds = %12, %24
  %25 = phi ptr [ %28, %24 ], [ %17, %12 ]
  %26 = load i32, ptr %25, align 8, !tbaa !37
  %27 = add i32 %26, %1
  store i32 %27, ptr %25, align 8, !tbaa !37
  %28 = getelementptr inbounds %"struct.std::pair", ptr %25, i64 1
  %29 = icmp eq ptr %28, %19
  br i1 %29, label %21, label %24
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @_ZN6dealii16ConstraintMatrix5clearEv(ptr nocapture noundef nonnull align 8 dereferenceable(138) %0) local_unnamed_addr #9 align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !72
  %4 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !70
  %6 = icmp eq ptr %3, %5
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %2, i8 0, i64 24, i1 false)
  br i1 %6, label %16, label %7

7:                                                ; preds = %1, %13
  %8 = phi ptr [ %14, %13 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = icmp eq ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_ZdlPv(ptr noundef nonnull %10) #23
  br label %13

13:                                               ; preds = %12, %7
  %14 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %8, i64 1
  %15 = icmp eq ptr %14, %5
  br i1 %15, label %16, label %7

16:                                               ; preds = %13, %1
  %17 = icmp eq ptr %3, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %16
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  br label %19

19:                                               ; preds = %18, %16
  %20 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %26 = load ptr, ptr %25, align 8
  store ptr null, ptr %20, align 8
  store i32 0, ptr %22, align 8
  store ptr null, ptr %23, align 8
  store i32 0, ptr %24, align 8
  store ptr null, ptr %25, align 8
  %27 = icmp eq ptr %21, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %19
  %29 = ptrtoint ptr %26 to i64
  %30 = ptrtoint ptr %21 to i64
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 3
  %33 = sub nsw i64 0, %32
  %34 = getelementptr inbounds i64, ptr %26, i64 %33
  tail call void @_ZdlPv(ptr noundef %34) #23
  br label %35

35:                                               ; preds = %19, %28
  %36 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 3
  store i8 0, ptr %36, align 8, !tbaa !710
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK6dealii16ConstraintMatrix8condenseERKNS_15SparsityPatternERS1_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(122) %1, ptr noundef nonnull align 8 dereferenceable(122) %2) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !38
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  br label %251

9:                                                ; preds = %3
  %10 = zext i32 %5 to i64
  %11 = shl nuw nsw i64 %10, 2
  %12 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %11) #21
  %13 = getelementptr inbounds i32, ptr %12, i64 %10
  %14 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !21
  %16 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !21
  %18 = icmp eq ptr %15, %17
  br i1 %18, label %21, label %76

19:                                               ; preds = %260
  %20 = landingpad { ptr, i32 }
          cleanup
  br label %464

21:                                               ; preds = %9, %66
  %22 = phi i32 [ %70, %66 ], [ 0, %9 ]
  %23 = phi ptr [ %69, %66 ], [ %12, %9 ]
  %24 = phi ptr [ %68, %66 ], [ %12, %9 ]
  %25 = phi ptr [ %67, %66 ], [ %13, %9 ]
  %26 = icmp eq ptr %24, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  store i32 %22, ptr %24, align 4, !tbaa !22
  %28 = getelementptr inbounds i32, ptr %24, i64 1
  br label %66

29:                                               ; preds = %21
  %30 = ptrtoint ptr %24 to i64
  %31 = ptrtoint ptr %23 to i64
  %32 = sub i64 %30, %31
  %33 = icmp eq i64 %32, 9223372036854775804
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %35 unwind label %74

35:                                               ; preds = %34
  unreachable

36:                                               ; preds = %29
  %37 = ashr exact i64 %32, 2
  %38 = tail call i64 @llvm.umax.i64(i64 %37, i64 1)
  %39 = add i64 %38, %37
  %40 = icmp ult i64 %39, %37
  %41 = icmp ugt i64 %39, 2305843009213693951
  %42 = or i1 %40, %41
  %43 = select i1 %42, i64 2305843009213693951, i64 %39
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %36
  %46 = shl nuw nsw i64 %43, 2
  %47 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %46) #21
          to label %48 unwind label %72

48:                                               ; preds = %45, %36
  %49 = phi ptr [ null, %36 ], [ %47, %45 ]
  %50 = getelementptr inbounds i32, ptr %49, i64 %37
  store i32 %22, ptr %50, align 4, !tbaa !22
  %51 = icmp sgt i64 %32, 4
  br i1 %51, label %52, label %53, !prof !23

52:                                               ; preds = %48
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %49, ptr align 4 %23, i64 %32, i1 false)
  br label %58

53:                                               ; preds = %48
  %54 = icmp eq i64 %32, 4
  br i1 %54, label %55, label %58

55:                                               ; preds = %53
  %56 = load i32, ptr %23, align 4, !tbaa !22
  store i32 %56, ptr %49, align 4, !tbaa !22
  %57 = getelementptr inbounds i32, ptr %50, i64 1
  br label %61

58:                                               ; preds = %53, %52
  %59 = getelementptr inbounds i32, ptr %50, i64 1
  %60 = icmp eq ptr %23, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %55, %58
  %62 = phi ptr [ %57, %55 ], [ %59, %58 ]
  tail call void @_ZdlPv(ptr noundef nonnull %23) #23
  br label %63

63:                                               ; preds = %61, %58
  %64 = phi ptr [ %59, %58 ], [ %62, %61 ]
  %65 = getelementptr inbounds i32, ptr %49, i64 %43
  br label %66

66:                                               ; preds = %63, %27
  %67 = phi ptr [ %65, %63 ], [ %25, %27 ]
  %68 = phi ptr [ %64, %63 ], [ %28, %27 ]
  %69 = phi ptr [ %49, %63 ], [ %23, %27 ]
  %70 = add nuw i32 %22, 1
  %71 = icmp eq i32 %70, %5
  br i1 %71, label %251, label %21

72:                                               ; preds = %45
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %464

74:                                               ; preds = %34
  %75 = landingpad { ptr, i32 }
          cleanup
  br label %464

76:                                               ; preds = %9, %243
  %77 = phi i32 [ %249, %243 ], [ 0, %9 ]
  %78 = phi i32 [ %248, %243 ], [ 0, %9 ]
  %79 = phi ptr [ %247, %243 ], [ %12, %9 ]
  %80 = phi ptr [ %246, %243 ], [ %12, %9 ]
  %81 = phi ptr [ %245, %243 ], [ %13, %9 ]
  %82 = phi ptr [ %244, %243 ], [ %15, %9 ]
  %83 = load i32, ptr %82, align 8, !tbaa !24
  %84 = icmp eq i32 %77, %83
  br i1 %84, label %85, label %197

85:                                               ; preds = %76
  %86 = icmp eq ptr %80, %81
  br i1 %86, label %89, label %87

87:                                               ; preds = %85
  store i32 -1, ptr %80, align 4, !tbaa !22
  %88 = getelementptr inbounds i32, ptr %80, i64 1
  br label %126

89:                                               ; preds = %85
  %90 = ptrtoint ptr %80 to i64
  %91 = ptrtoint ptr %79 to i64
  %92 = sub i64 %90, %91
  %93 = icmp eq i64 %92, 9223372036854775804
  br i1 %93, label %94, label %96

94:                                               ; preds = %89
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %95 unwind label %139

95:                                               ; preds = %94
  unreachable

96:                                               ; preds = %89
  %97 = ashr exact i64 %92, 2
  %98 = tail call i64 @llvm.umax.i64(i64 %97, i64 1)
  %99 = add i64 %98, %97
  %100 = icmp ult i64 %99, %97
  %101 = icmp ugt i64 %99, 2305843009213693951
  %102 = or i1 %100, %101
  %103 = select i1 %102, i64 2305843009213693951, i64 %99
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %96
  %106 = shl nuw nsw i64 %103, 2
  %107 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %106) #21
          to label %108 unwind label %137

108:                                              ; preds = %105, %96
  %109 = phi ptr [ null, %96 ], [ %107, %105 ]
  %110 = getelementptr inbounds i32, ptr %109, i64 %97
  store i32 -1, ptr %110, align 4, !tbaa !22
  %111 = icmp sgt i64 %92, 4
  br i1 %111, label %112, label %113, !prof !23

112:                                              ; preds = %108
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %109, ptr align 4 %79, i64 %92, i1 false)
  br label %118

113:                                              ; preds = %108
  %114 = icmp eq i64 %92, 4
  br i1 %114, label %115, label %118

115:                                              ; preds = %113
  %116 = load i32, ptr %79, align 4, !tbaa !22
  store i32 %116, ptr %109, align 4, !tbaa !22
  %117 = getelementptr inbounds i32, ptr %110, i64 1
  br label %121

118:                                              ; preds = %113, %112
  %119 = getelementptr inbounds i32, ptr %110, i64 1
  %120 = icmp eq ptr %79, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %115, %118
  %122 = phi ptr [ %117, %115 ], [ %119, %118 ]
  tail call void @_ZdlPv(ptr noundef nonnull %79) #23
  br label %123

123:                                              ; preds = %121, %118
  %124 = phi ptr [ %119, %118 ], [ %122, %121 ]
  %125 = getelementptr inbounds i32, ptr %109, i64 %103
  br label %126

126:                                              ; preds = %87, %123
  %127 = phi ptr [ %125, %123 ], [ %81, %87 ]
  %128 = phi ptr [ %124, %123 ], [ %88, %87 ]
  %129 = phi ptr [ %109, %123 ], [ %79, %87 ]
  %130 = add i32 %78, 1
  %131 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %82, i64 1
  %132 = load ptr, ptr %16, align 8, !tbaa !21
  %133 = icmp eq ptr %131, %132
  br i1 %133, label %134, label %243

134:                                              ; preds = %126
  %135 = add i32 %77, 1
  %136 = icmp ult i32 %135, %5
  br i1 %136, label %141, label %251

137:                                              ; preds = %105
  %138 = landingpad { ptr, i32 }
          cleanup
  br label %464

139:                                              ; preds = %94
  %140 = landingpad { ptr, i32 }
          cleanup
  br label %464

141:                                              ; preds = %134, %187
  %142 = phi i32 [ %191, %187 ], [ %135, %134 ]
  %143 = phi ptr [ %190, %187 ], [ %129, %134 ]
  %144 = phi ptr [ %189, %187 ], [ %128, %134 ]
  %145 = phi ptr [ %188, %187 ], [ %127, %134 ]
  %146 = sub i32 %142, %130
  %147 = icmp eq ptr %144, %145
  br i1 %147, label %150, label %148

148:                                              ; preds = %141
  store i32 %146, ptr %144, align 4, !tbaa !22
  %149 = getelementptr inbounds i32, ptr %144, i64 1
  br label %187

150:                                              ; preds = %141
  %151 = ptrtoint ptr %144 to i64
  %152 = ptrtoint ptr %143 to i64
  %153 = sub i64 %151, %152
  %154 = icmp eq i64 %153, 9223372036854775804
  br i1 %154, label %155, label %157

155:                                              ; preds = %150
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %156 unwind label %195

156:                                              ; preds = %155
  unreachable

157:                                              ; preds = %150
  %158 = ashr exact i64 %153, 2
  %159 = tail call i64 @llvm.umax.i64(i64 %158, i64 1)
  %160 = add i64 %159, %158
  %161 = icmp ult i64 %160, %158
  %162 = icmp ugt i64 %160, 2305843009213693951
  %163 = or i1 %161, %162
  %164 = select i1 %163, i64 2305843009213693951, i64 %160
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %157
  %167 = shl nuw nsw i64 %164, 2
  %168 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %167) #21
          to label %169 unwind label %193

169:                                              ; preds = %166, %157
  %170 = phi ptr [ null, %157 ], [ %168, %166 ]
  %171 = getelementptr inbounds i32, ptr %170, i64 %158
  store i32 %146, ptr %171, align 4, !tbaa !22
  %172 = icmp sgt i64 %153, 4
  br i1 %172, label %173, label %174, !prof !23

173:                                              ; preds = %169
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %170, ptr align 4 %143, i64 %153, i1 false)
  br label %179

174:                                              ; preds = %169
  %175 = icmp eq i64 %153, 4
  br i1 %175, label %176, label %179

176:                                              ; preds = %174
  %177 = load i32, ptr %143, align 4, !tbaa !22
  store i32 %177, ptr %170, align 4, !tbaa !22
  %178 = getelementptr inbounds i32, ptr %171, i64 1
  br label %182

179:                                              ; preds = %174, %173
  %180 = getelementptr inbounds i32, ptr %171, i64 1
  %181 = icmp eq ptr %143, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %176, %179
  %183 = phi ptr [ %178, %176 ], [ %180, %179 ]
  tail call void @_ZdlPv(ptr noundef nonnull %143) #23
  br label %184

184:                                              ; preds = %182, %179
  %185 = phi ptr [ %180, %179 ], [ %183, %182 ]
  %186 = getelementptr inbounds i32, ptr %170, i64 %164
  br label %187

187:                                              ; preds = %184, %148
  %188 = phi ptr [ %186, %184 ], [ %145, %148 ]
  %189 = phi ptr [ %185, %184 ], [ %149, %148 ]
  %190 = phi ptr [ %170, %184 ], [ %143, %148 ]
  %191 = add nuw i32 %142, 1
  %192 = icmp eq i32 %191, %5
  br i1 %192, label %251, label %141

193:                                              ; preds = %166
  %194 = landingpad { ptr, i32 }
          cleanup
  br label %464

195:                                              ; preds = %155
  %196 = landingpad { ptr, i32 }
          cleanup
  br label %464

197:                                              ; preds = %76
  %198 = sub i32 %77, %78
  %199 = icmp eq ptr %80, %81
  br i1 %199, label %202, label %200

200:                                              ; preds = %197
  store i32 %198, ptr %80, align 4, !tbaa !22
  %201 = getelementptr inbounds i32, ptr %80, i64 1
  br label %243

202:                                              ; preds = %197
  %203 = ptrtoint ptr %80 to i64
  %204 = ptrtoint ptr %79 to i64
  %205 = sub i64 %203, %204
  %206 = icmp eq i64 %205, 9223372036854775804
  br i1 %206, label %207, label %209

207:                                              ; preds = %202
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %208 unwind label %241

208:                                              ; preds = %207
  unreachable

209:                                              ; preds = %202
  %210 = ashr exact i64 %205, 2
  %211 = tail call i64 @llvm.umax.i64(i64 %210, i64 1)
  %212 = add i64 %211, %210
  %213 = icmp ult i64 %212, %210
  %214 = icmp ugt i64 %212, 2305843009213693951
  %215 = or i1 %213, %214
  %216 = select i1 %215, i64 2305843009213693951, i64 %212
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %221, label %218

218:                                              ; preds = %209
  %219 = shl nuw nsw i64 %216, 2
  %220 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %219) #21
          to label %221 unwind label %239

221:                                              ; preds = %218, %209
  %222 = phi ptr [ null, %209 ], [ %220, %218 ]
  %223 = getelementptr inbounds i32, ptr %222, i64 %210
  store i32 %198, ptr %223, align 4, !tbaa !22
  %224 = icmp sgt i64 %205, 4
  br i1 %224, label %225, label %226, !prof !23

225:                                              ; preds = %221
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %222, ptr align 4 %79, i64 %205, i1 false)
  br label %231

226:                                              ; preds = %221
  %227 = icmp eq i64 %205, 4
  br i1 %227, label %228, label %231

228:                                              ; preds = %226
  %229 = load i32, ptr %79, align 4, !tbaa !22
  store i32 %229, ptr %222, align 4, !tbaa !22
  %230 = getelementptr inbounds i32, ptr %223, i64 1
  br label %234

231:                                              ; preds = %226, %225
  %232 = getelementptr inbounds i32, ptr %223, i64 1
  %233 = icmp eq ptr %79, null
  br i1 %233, label %236, label %234

234:                                              ; preds = %228, %231
  %235 = phi ptr [ %230, %228 ], [ %232, %231 ]
  tail call void @_ZdlPv(ptr noundef nonnull %79) #23
  br label %236

236:                                              ; preds = %234, %231
  %237 = phi ptr [ %232, %231 ], [ %235, %234 ]
  %238 = getelementptr inbounds i32, ptr %222, i64 %216
  br label %243

239:                                              ; preds = %218
  %240 = landingpad { ptr, i32 }
          cleanup
  br label %464

241:                                              ; preds = %207
  %242 = landingpad { ptr, i32 }
          cleanup
  br label %464

243:                                              ; preds = %200, %236, %126
  %244 = phi ptr [ %131, %126 ], [ %82, %236 ], [ %82, %200 ]
  %245 = phi ptr [ %127, %126 ], [ %238, %236 ], [ %81, %200 ]
  %246 = phi ptr [ %128, %126 ], [ %237, %236 ], [ %201, %200 ]
  %247 = phi ptr [ %129, %126 ], [ %222, %236 ], [ %79, %200 ]
  %248 = phi i32 [ %130, %126 ], [ %78, %236 ], [ %78, %200 ]
  %249 = add nuw i32 %77, 1
  %250 = icmp eq i32 %249, %5
  br i1 %250, label %251, label %76

251:                                              ; preds = %243, %187, %66, %7, %134
  %252 = phi ptr [ %14, %134 ], [ %8, %7 ], [ %14, %66 ], [ %14, %187 ], [ %14, %243 ]
  %253 = phi ptr [ %129, %134 ], [ null, %7 ], [ %69, %66 ], [ %190, %187 ], [ %247, %243 ]
  %254 = load i32, ptr %4, align 4, !tbaa !38
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %260, label %256

256:                                              ; preds = %251
  %257 = load ptr, ptr %252, align 8, !tbaa !21
  %258 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %1, i64 0, i32 8
  %259 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %1, i64 0, i32 9
  br label %261

260:                                              ; preds = %455, %251
  invoke void @_ZN6dealii15SparsityPattern8compressEv(ptr noundef nonnull align 8 dereferenceable(122) %2)
          to label %460 unwind label %19

261:                                              ; preds = %256, %455
  %262 = phi i64 [ 0, %256 ], [ %270, %455 ]
  %263 = phi ptr [ %257, %256 ], [ %456, %455 ]
  %264 = getelementptr inbounds i32, ptr %253, i64 %262
  %265 = load i32, ptr %264, align 4, !tbaa !22
  %266 = icmp eq i32 %265, -1
  %267 = load ptr, ptr %258, align 8, !tbaa !41
  %268 = getelementptr inbounds i64, ptr %267, i64 %262
  %269 = load i64, ptr %268, align 8, !tbaa !42
  %270 = add nuw nsw i64 %262, 1
  %271 = and i64 %269, 4294967295
  %272 = getelementptr inbounds i64, ptr %267, i64 %270
  %273 = load i64, ptr %272, align 8, !tbaa !42
  %274 = icmp ugt i64 %273, %271
  br i1 %266, label %334, label %275

275:                                              ; preds = %261
  br i1 %274, label %276, label %455

276:                                              ; preds = %275
  %277 = trunc i64 %269 to i32
  br label %280

278:                                              ; preds = %290
  %279 = landingpad { ptr, i32 }
          cleanup
  br label %468

280:                                              ; preds = %276, %327
  %281 = phi i64 [ %329, %327 ], [ %271, %276 ]
  %282 = phi i32 [ %328, %327 ], [ %277, %276 ]
  %283 = load ptr, ptr %259, align 8, !tbaa !43
  %284 = getelementptr inbounds i32, ptr %283, i64 %281
  %285 = load i32, ptr %284, align 4, !tbaa !22
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds i32, ptr %253, i64 %286
  %288 = load i32, ptr %287, align 4, !tbaa !22
  %289 = icmp eq i32 %288, -1
  br i1 %289, label %292, label %290

290:                                              ; preds = %280
  %291 = load i32, ptr %264, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %2, i32 noundef %291, i32 noundef %288)
          to label %327 unwind label %278

292:                                              ; preds = %280
  %293 = load ptr, ptr %252, align 8, !tbaa !21
  br label %294

294:                                              ; preds = %294, %292
  %295 = phi ptr [ %293, %292 ], [ %298, %294 ]
  %296 = load i32, ptr %295, align 8, !tbaa !24
  %297 = icmp eq i32 %296, %285
  %298 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %295, i64 1
  br i1 %297, label %299, label %294

299:                                              ; preds = %294
  %300 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %295, i64 0, i32 1
  %301 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %295, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %302 = load ptr, ptr %301, align 8, !tbaa !31
  %303 = load ptr, ptr %300, align 8, !tbaa !32
  %304 = icmp eq ptr %302, %303
  br i1 %304, label %327, label %307

305:                                              ; preds = %307
  %306 = landingpad { ptr, i32 }
          cleanup
  br label %468

307:                                              ; preds = %299, %317
  %308 = phi ptr [ %321, %317 ], [ %303, %299 ]
  %309 = phi i64 [ %319, %317 ], [ 0, %299 ]
  %310 = phi i32 [ %318, %317 ], [ 0, %299 ]
  %311 = load i32, ptr %264, align 4, !tbaa !22
  %312 = getelementptr inbounds %"struct.std::pair", ptr %308, i64 %309
  %313 = load i32, ptr %312, align 8, !tbaa !37
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds i32, ptr %253, i64 %314
  %316 = load i32, ptr %315, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %2, i32 noundef %311, i32 noundef %316)
          to label %317 unwind label %305

317:                                              ; preds = %307
  %318 = add i32 %310, 1
  %319 = zext i32 %318 to i64
  %320 = load ptr, ptr %301, align 8, !tbaa !31
  %321 = load ptr, ptr %300, align 8, !tbaa !32
  %322 = ptrtoint ptr %320 to i64
  %323 = ptrtoint ptr %321 to i64
  %324 = sub i64 %322, %323
  %325 = ashr exact i64 %324, 4
  %326 = icmp eq i64 %325, %319
  br i1 %326, label %327, label %307

327:                                              ; preds = %317, %299, %290
  %328 = add i32 %282, 1
  %329 = zext i32 %328 to i64
  %330 = load ptr, ptr %258, align 8, !tbaa !41
  %331 = getelementptr inbounds i64, ptr %330, i64 %270
  %332 = load i64, ptr %331, align 8, !tbaa !42
  %333 = icmp ugt i64 %332, %329
  br i1 %333, label %280, label %455

334:                                              ; preds = %261
  br i1 %274, label %335, label %339

335:                                              ; preds = %334
  %336 = trunc i64 %269 to i32
  %337 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %263, i64 0, i32 1
  %338 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %263, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %341

339:                                              ; preds = %448, %334
  %340 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %263, i64 1
  br label %455

341:                                              ; preds = %335, %448
  %342 = phi i64 [ %271, %335 ], [ %450, %448 ]
  %343 = phi i32 [ %336, %335 ], [ %449, %448 ]
  %344 = load ptr, ptr %259, align 8, !tbaa !43
  %345 = getelementptr inbounds i32, ptr %344, i64 %342
  %346 = load i32, ptr %345, align 4, !tbaa !22
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds i32, ptr %253, i64 %347
  %349 = load i32, ptr %348, align 4, !tbaa !22
  %350 = icmp eq i32 %349, -1
  br i1 %350, label %382, label %351

351:                                              ; preds = %341
  %352 = load ptr, ptr %338, align 8, !tbaa !31
  %353 = load ptr, ptr %337, align 8, !tbaa !32
  %354 = icmp eq ptr %352, %353
  br i1 %354, label %448, label %357

355:                                              ; preds = %357
  %356 = landingpad { ptr, i32 }
          cleanup
  br label %468

357:                                              ; preds = %351, %372
  %358 = phi ptr [ %376, %372 ], [ %353, %351 ]
  %359 = phi i64 [ %374, %372 ], [ 0, %351 ]
  %360 = phi i32 [ %373, %372 ], [ 0, %351 ]
  %361 = getelementptr inbounds %"struct.std::pair", ptr %358, i64 %359
  %362 = load i32, ptr %361, align 8, !tbaa !37
  %363 = zext i32 %362 to i64
  %364 = getelementptr inbounds i32, ptr %253, i64 %363
  %365 = load i32, ptr %364, align 4, !tbaa !22
  %366 = load ptr, ptr %259, align 8, !tbaa !43
  %367 = getelementptr inbounds i32, ptr %366, i64 %342
  %368 = load i32, ptr %367, align 4, !tbaa !22
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds i32, ptr %253, i64 %369
  %371 = load i32, ptr %370, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %2, i32 noundef %365, i32 noundef %371)
          to label %372 unwind label %355

372:                                              ; preds = %357
  %373 = add i32 %360, 1
  %374 = zext i32 %373 to i64
  %375 = load ptr, ptr %338, align 8, !tbaa !31
  %376 = load ptr, ptr %337, align 8, !tbaa !32
  %377 = ptrtoint ptr %375 to i64
  %378 = ptrtoint ptr %376 to i64
  %379 = sub i64 %377, %378
  %380 = ashr exact i64 %379, 4
  %381 = icmp eq i64 %380, %374
  br i1 %381, label %448, label %357

382:                                              ; preds = %341
  %383 = load ptr, ptr %252, align 8, !tbaa !21
  br label %384

384:                                              ; preds = %384, %382
  %385 = phi ptr [ %383, %382 ], [ %388, %384 ]
  %386 = load i32, ptr %385, align 8, !tbaa !24
  %387 = icmp eq i32 %386, %346
  %388 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %385, i64 1
  br i1 %387, label %389, label %384

389:                                              ; preds = %384
  %390 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %385, i64 0, i32 1
  %391 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %385, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %392 = load ptr, ptr %391, align 8, !tbaa !31
  %393 = load ptr, ptr %390, align 8, !tbaa !32
  %394 = icmp eq ptr %392, %393
  br i1 %394, label %448, label %395

395:                                              ; preds = %389
  %396 = load ptr, ptr %338, align 8, !tbaa !31
  %397 = load ptr, ptr %337, align 8, !tbaa !32
  br label %398

398:                                              ; preds = %395, %409
  %399 = phi ptr [ %410, %409 ], [ %393, %395 ]
  %400 = phi ptr [ %411, %409 ], [ %392, %395 ]
  %401 = phi ptr [ %412, %409 ], [ %397, %395 ]
  %402 = phi ptr [ %413, %409 ], [ %396, %395 ]
  %403 = phi i64 [ %415, %409 ], [ 0, %395 ]
  %404 = phi i32 [ %414, %409 ], [ 0, %395 ]
  %405 = icmp eq ptr %402, %401
  br i1 %405, label %409, label %423

406:                                              ; preds = %438
  %407 = load ptr, ptr %391, align 8, !tbaa !31
  %408 = load ptr, ptr %390, align 8, !tbaa !32
  br label %409

409:                                              ; preds = %406, %398
  %410 = phi ptr [ %408, %406 ], [ %399, %398 ]
  %411 = phi ptr [ %407, %406 ], [ %400, %398 ]
  %412 = phi ptr [ %442, %406 ], [ %401, %398 ]
  %413 = phi ptr [ %441, %406 ], [ %401, %398 ]
  %414 = add i32 %404, 1
  %415 = zext i32 %414 to i64
  %416 = ptrtoint ptr %411 to i64
  %417 = ptrtoint ptr %410 to i64
  %418 = sub i64 %416, %417
  %419 = ashr exact i64 %418, 4
  %420 = icmp eq i64 %419, %415
  br i1 %420, label %448, label %398

421:                                              ; preds = %423
  %422 = landingpad { ptr, i32 }
          cleanup
  br label %468

423:                                              ; preds = %398, %438
  %424 = phi ptr [ %442, %438 ], [ %401, %398 ]
  %425 = phi i64 [ %440, %438 ], [ 0, %398 ]
  %426 = phi i32 [ %439, %438 ], [ 0, %398 ]
  %427 = getelementptr inbounds %"struct.std::pair", ptr %424, i64 %425
  %428 = load i32, ptr %427, align 8, !tbaa !37
  %429 = zext i32 %428 to i64
  %430 = getelementptr inbounds i32, ptr %253, i64 %429
  %431 = load i32, ptr %430, align 4, !tbaa !22
  %432 = load ptr, ptr %390, align 8, !tbaa !32
  %433 = getelementptr inbounds %"struct.std::pair", ptr %432, i64 %403
  %434 = load i32, ptr %433, align 8, !tbaa !37
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds i32, ptr %253, i64 %435
  %437 = load i32, ptr %436, align 4, !tbaa !22
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %2, i32 noundef %431, i32 noundef %437)
          to label %438 unwind label %421

438:                                              ; preds = %423
  %439 = add i32 %426, 1
  %440 = zext i32 %439 to i64
  %441 = load ptr, ptr %338, align 8, !tbaa !31
  %442 = load ptr, ptr %337, align 8, !tbaa !32
  %443 = ptrtoint ptr %441 to i64
  %444 = ptrtoint ptr %442 to i64
  %445 = sub i64 %443, %444
  %446 = ashr exact i64 %445, 4
  %447 = icmp eq i64 %446, %440
  br i1 %447, label %406, label %423

448:                                              ; preds = %372, %409, %351, %389
  %449 = add i32 %343, 1
  %450 = zext i32 %449 to i64
  %451 = load ptr, ptr %258, align 8, !tbaa !41
  %452 = getelementptr inbounds i64, ptr %451, i64 %270
  %453 = load i64, ptr %452, align 8, !tbaa !42
  %454 = icmp ugt i64 %453, %450
  br i1 %454, label %341, label %339

455:                                              ; preds = %327, %275, %339
  %456 = phi ptr [ %263, %275 ], [ %340, %339 ], [ %263, %327 ]
  %457 = load i32, ptr %4, align 4, !tbaa !38
  %458 = zext i32 %457 to i64
  %459 = icmp ult i64 %270, %458
  br i1 %459, label %261, label %260

460:                                              ; preds = %260
  %461 = icmp eq ptr %253, null
  br i1 %461, label %463, label %462

462:                                              ; preds = %460
  tail call void @_ZdlPv(ptr noundef nonnull %253) #23
  br label %463

463:                                              ; preds = %460, %462
  ret void

464:                                              ; preds = %239, %241, %193, %195, %137, %139, %72, %74, %19
  %465 = phi ptr [ %253, %19 ], [ %23, %72 ], [ %23, %74 ], [ %79, %137 ], [ %79, %139 ], [ %143, %193 ], [ %143, %195 ], [ %79, %239 ], [ %79, %241 ]
  %466 = phi { ptr, i32 } [ %20, %19 ], [ %73, %72 ], [ %75, %74 ], [ %138, %137 ], [ %140, %139 ], [ %194, %193 ], [ %196, %195 ], [ %240, %239 ], [ %242, %241 ]
  %467 = icmp eq ptr %465, null
  br i1 %467, label %471, label %468

468:                                              ; preds = %421, %305, %278, %355, %464
  %469 = phi { ptr, i32 } [ %466, %464 ], [ %422, %421 ], [ %306, %305 ], [ %356, %355 ], [ %279, %278 ]
  %470 = phi ptr [ %465, %464 ], [ %253, %421 ], [ %253, %305 ], [ %253, %355 ], [ %253, %278 ]
  tail call void @_ZdlPv(ptr noundef nonnull %470) #23
  br label %471

471:                                              ; preds = %468, %464
  %472 = phi { ptr, i32 } [ %466, %464 ], [ %469, %468 ]
  resume { ptr, i32 } %472
}

declare void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122), i32 noundef, i32 noundef) local_unnamed_addr #5

declare void @_ZN6dealii15SparsityPattern8compressEv(ptr noundef nonnull align 8 dereferenceable(122)) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK6dealii16ConstraintMatrix8condenseERNS_15SparsityPatternE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(122) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %1, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !38
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = zext i32 %4 to i64
  %8 = shl nuw nsw i64 %7, 2
  %9 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %8) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %9, i8 -1, i64 %8, i1 false), !tbaa !22
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi ptr [ null, %2 ], [ %9, %6 ]
  %12 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !70
  %15 = load ptr, ptr %12, align 8, !tbaa !72
  %16 = ptrtoint ptr %14 to i64
  %17 = ptrtoint ptr %15 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 40
  %20 = icmp eq ptr %14, %15
  br i1 %20, label %21, label %26

21:                                               ; preds = %26, %10
  br i1 %5, label %36, label %22

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %1, i64 0, i32 8
  %24 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %1, i64 0, i32 9
  %25 = zext i32 %4 to i64
  br label %40

26:                                               ; preds = %10, %26
  %27 = phi i64 [ %34, %26 ], [ 0, %10 ]
  %28 = phi i32 [ %33, %26 ], [ 0, %10 ]
  %29 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %15, i64 %27
  %30 = load i32, ptr %29, align 8, !tbaa !24
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, ptr %11, i64 %31
  store i32 %28, ptr %32, align 4, !tbaa !22
  %33 = add i32 %28, 1
  %34 = zext i32 %33 to i64
  %35 = icmp ugt i64 %19, %34
  br i1 %35, label %26, label %21

36:                                               ; preds = %437, %21
  invoke void @_ZN6dealii15SparsityPattern8compressEv(ptr noundef nonnull align 8 dereferenceable(122) %1)
          to label %446 unwind label %37

37:                                               ; preds = %36
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = icmp eq ptr %11, null
  br i1 %39, label %452, label %450

40:                                               ; preds = %22, %437
  %41 = phi i32 [ %4, %22 ], [ %438, %437 ]
  %42 = phi ptr [ %15, %22 ], [ %439, %437 ]
  %43 = phi i32 [ %4, %22 ], [ %440, %437 ]
  %44 = phi ptr [ %15, %22 ], [ %441, %437 ]
  %45 = phi ptr [ %15, %22 ], [ %442, %437 ]
  %46 = phi ptr [ %15, %22 ], [ %443, %437 ]
  %47 = phi i32 [ %4, %22 ], [ %444, %437 ]
  %48 = phi i64 [ 0, %22 ], [ %53, %437 ]
  %49 = getelementptr inbounds i32, ptr %11, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !22
  %51 = icmp eq i32 %50, -1
  %52 = load ptr, ptr %23, align 8
  %53 = add nuw nsw i64 %48, 1
  %54 = getelementptr inbounds i64, ptr %52, i64 %53
  %55 = load i64, ptr %54, align 8, !tbaa !42
  %56 = getelementptr inbounds i64, ptr %52, i64 %48
  %57 = load i64, ptr %56, align 8, !tbaa !42
  %58 = sub i64 %55, %57
  %59 = and i64 %58, 4294967295
  %60 = icmp eq i64 %59, 0
  br i1 %51, label %61, label %211

61:                                               ; preds = %40
  br i1 %60, label %62, label %79

62:                                               ; preds = %61
  %63 = zext i32 %47 to i64
  br label %64

64:                                               ; preds = %69, %62
  %65 = phi i64 [ %67, %69 ], [ %48, %62 ]
  %66 = phi i64 [ %73, %69 ], [ %55, %62 ]
  %67 = add nuw nsw i64 %65, 1
  %68 = icmp ult i64 %67, %63
  br i1 %68, label %69, label %79

69:                                               ; preds = %64
  %70 = add nuw i64 %65, 2
  %71 = and i64 %70, 4294967295
  %72 = getelementptr inbounds i64, ptr %52, i64 %71
  %73 = load i64, ptr %72, align 8, !tbaa !42
  %74 = sub i64 %73, %66
  %75 = and i64 %74, 4294967295
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %64, label %77

77:                                               ; preds = %69
  %78 = and i64 %67, 4294967295
  br label %79

79:                                               ; preds = %64, %77, %61
  %80 = phi i64 [ %48, %61 ], [ %78, %77 ], [ %63, %64 ]
  %81 = trunc i64 %48 to i32
  br label %82

82:                                               ; preds = %196, %79
  %83 = phi i32 [ %41, %79 ], [ %166, %196 ]
  %84 = phi ptr [ %52, %79 ], [ %168, %196 ]
  %85 = phi ptr [ %42, %79 ], [ %169, %196 ]
  %86 = phi i32 [ %43, %79 ], [ %166, %196 ]
  %87 = phi ptr [ %44, %79 ], [ %170, %196 ]
  %88 = phi ptr [ %45, %79 ], [ %171, %196 ]
  %89 = phi ptr [ %46, %79 ], [ %172, %196 ]
  %90 = phi i64 [ %80, %79 ], [ %197, %196 ]
  %91 = zext i32 %86 to i64
  br label %92

92:                                               ; preds = %96, %82
  %93 = phi i64 [ %94, %96 ], [ %48, %82 ]
  %94 = add nuw nsw i64 %93, 1
  %95 = icmp ult i64 %94, %91
  br i1 %95, label %96, label %108

96:                                               ; preds = %92
  %97 = add nuw i64 %93, 2
  %98 = and i64 %97, 4294967295
  %99 = getelementptr inbounds i64, ptr %84, i64 %98
  %100 = load i64, ptr %99, align 8, !tbaa !42
  %101 = getelementptr inbounds i64, ptr %84, i64 %94
  %102 = load i64, ptr %101, align 8, !tbaa !42
  %103 = sub i64 %100, %102
  %104 = and i64 %103, 4294967295
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %92, label %106

106:                                              ; preds = %96
  %107 = trunc i64 %94 to i32
  br label %108

108:                                              ; preds = %92, %106
  %109 = phi i32 [ %107, %106 ], [ %86, %92 ]
  %110 = trunc i64 %90 to i32
  %111 = icmp eq i32 %109, %110
  %112 = icmp ult i64 %90, 4294967296
  %113 = and i1 %112, %111
  br i1 %113, label %437, label %114

114:                                              ; preds = %108
  %115 = load ptr, ptr %24, align 8, !tbaa !43
  %116 = and i64 %90, 4294967295
  %117 = getelementptr inbounds i64, ptr %84, i64 %116
  %118 = load i64, ptr %117, align 8, !tbaa !42
  %119 = lshr i64 %90, 32
  %120 = trunc i64 %119 to i32
  %121 = add i64 %118, %119
  %122 = getelementptr inbounds i32, ptr %115, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !22
  %124 = icmp eq i32 %123, -1
  br i1 %124, label %437, label %125

125:                                              ; preds = %114
  %126 = zext i32 %123 to i64
  %127 = getelementptr inbounds i32, ptr %11, i64 %126
  %128 = load i32, ptr %127, align 4, !tbaa !22
  %129 = icmp eq i32 %128, -1
  br i1 %129, label %165, label %130

130:                                              ; preds = %125
  %131 = zext i32 %128 to i64
  %132 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %85, i64 %131, i32 1
  %133 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %132, i64 0, i32 1
  %134 = load ptr, ptr %133, align 8, !tbaa !31
  %135 = load ptr, ptr %132, align 8, !tbaa !32
  %136 = icmp eq ptr %134, %135
  br i1 %136, label %165, label %139

137:                                              ; preds = %139
  %138 = landingpad { ptr, i32 }
          cleanup
  br label %450

139:                                              ; preds = %130, %145
  %140 = phi ptr [ %154, %145 ], [ %135, %130 ]
  %141 = phi i64 [ %147, %145 ], [ 0, %130 ]
  %142 = phi i32 [ %146, %145 ], [ 0, %130 ]
  %143 = getelementptr inbounds %"struct.std::pair", ptr %140, i64 %141
  %144 = load i32, ptr %143, align 8, !tbaa !37
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %1, i32 noundef %81, i32 noundef %144)
          to label %145 unwind label %137

145:                                              ; preds = %139
  %146 = add i32 %142, 1
  %147 = zext i32 %146 to i64
  %148 = load i32, ptr %127, align 4, !tbaa !22
  %149 = zext i32 %148 to i64
  %150 = load ptr, ptr %12, align 8, !tbaa !72
  %151 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %150, i64 %149, i32 1
  %152 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %151, i64 0, i32 1
  %153 = load ptr, ptr %152, align 8, !tbaa !31
  %154 = load ptr, ptr %151, align 8, !tbaa !32
  %155 = ptrtoint ptr %153 to i64
  %156 = ptrtoint ptr %154 to i64
  %157 = sub i64 %155, %156
  %158 = ashr exact i64 %157, 4
  %159 = icmp eq i64 %158, %147
  br i1 %159, label %160, label %139

160:                                              ; preds = %145
  %161 = load ptr, ptr %23, align 8
  %162 = getelementptr inbounds i64, ptr %161, i64 %116
  %163 = load i64, ptr %162, align 8, !tbaa !42
  %164 = load i32, ptr %3, align 4, !tbaa !38
  br label %165

165:                                              ; preds = %160, %130, %125
  %166 = phi i32 [ %164, %160 ], [ %83, %130 ], [ %83, %125 ]
  %167 = phi i64 [ %163, %160 ], [ %118, %130 ], [ %118, %125 ]
  %168 = phi ptr [ %161, %160 ], [ %84, %130 ], [ %84, %125 ]
  %169 = phi ptr [ %150, %160 ], [ %85, %130 ], [ %85, %125 ]
  %170 = phi ptr [ %150, %160 ], [ %85, %130 ], [ %87, %125 ]
  %171 = phi ptr [ %150, %160 ], [ %85, %130 ], [ %88, %125 ]
  %172 = phi ptr [ %150, %160 ], [ %85, %130 ], [ %89, %125 ]
  %173 = add i32 %120, 1
  %174 = zext i32 %173 to i64
  %175 = shl nuw i64 %174, 32
  %176 = or i64 %175, %116
  %177 = add i32 %110, 1
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds i64, ptr %168, i64 %178
  %180 = load i64, ptr %179, align 8, !tbaa !42
  %181 = sub i64 %180, %167
  %182 = trunc i64 %181 to i32
  %183 = icmp ult i32 %173, %182
  br i1 %183, label %196, label %184

184:                                              ; preds = %165
  %185 = icmp eq i32 %177, %166
  br i1 %185, label %196, label %186

186:                                              ; preds = %184
  %187 = add i32 %110, 2
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds i64, ptr %168, i64 %188
  %190 = load i64, ptr %189, align 8, !tbaa !42
  %191 = sub i64 %190, %180
  %192 = and i64 %191, 4294967295
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %186
  %195 = icmp eq i32 %187, %166
  br i1 %195, label %196, label %198

196:                                              ; preds = %209, %198, %194, %186, %165, %184
  %197 = phi i64 [ %188, %194 ], [ %178, %186 ], [ %176, %165 ], [ %178, %184 ], [ %203, %209 ], [ %200, %198 ]
  br label %82, !llvm.loop !82

198:                                              ; preds = %194, %209
  %199 = phi i32 [ %202, %209 ], [ %187, %194 ]
  %200 = phi i64 [ %203, %209 ], [ %188, %194 ]
  %201 = phi i64 [ %205, %209 ], [ %190, %194 ]
  %202 = add i32 %199, 1
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds i64, ptr %168, i64 %203
  %205 = load i64, ptr %204, align 8, !tbaa !42
  %206 = sub i64 %205, %201
  %207 = and i64 %206, 4294967295
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %196, !llvm.loop !82

209:                                              ; preds = %198
  %210 = icmp eq i32 %202, %166
  br i1 %210, label %196, label %198, !llvm.loop !82

211:                                              ; preds = %40
  br i1 %60, label %212, label %229

212:                                              ; preds = %211
  %213 = zext i32 %47 to i64
  br label %214

214:                                              ; preds = %219, %212
  %215 = phi i64 [ %217, %219 ], [ %48, %212 ]
  %216 = phi i64 [ %223, %219 ], [ %55, %212 ]
  %217 = add nuw nsw i64 %215, 1
  %218 = icmp ult i64 %217, %213
  br i1 %218, label %219, label %229

219:                                              ; preds = %214
  %220 = add nuw i64 %215, 2
  %221 = and i64 %220, 4294967295
  %222 = getelementptr inbounds i64, ptr %52, i64 %221
  %223 = load i64, ptr %222, align 8, !tbaa !42
  %224 = sub i64 %223, %216
  %225 = and i64 %224, 4294967295
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %214, label %227

227:                                              ; preds = %219
  %228 = and i64 %217, 4294967295
  br label %229

229:                                              ; preds = %214, %227, %211
  %230 = phi i64 [ %48, %211 ], [ %228, %227 ], [ %213, %214 ]
  br label %231

231:                                              ; preds = %422, %229
  %232 = phi i32 [ %41, %229 ], [ %409, %422 ]
  %233 = phi ptr [ %42, %229 ], [ %388, %422 ]
  %234 = phi i32 [ %43, %229 ], [ %409, %422 ]
  %235 = phi ptr [ %44, %229 ], [ %389, %422 ]
  %236 = phi i32 [ %50, %229 ], [ %390, %422 ]
  %237 = phi ptr [ %45, %229 ], [ %391, %422 ]
  %238 = phi i32 [ %50, %229 ], [ %392, %422 ]
  %239 = phi ptr [ %46, %229 ], [ %393, %422 ]
  %240 = phi i32 [ %50, %229 ], [ %394, %422 ]
  %241 = phi ptr [ %52, %229 ], [ %399, %422 ]
  %242 = phi i32 [ %47, %229 ], [ %409, %422 ]
  %243 = phi i64 [ %230, %229 ], [ %423, %422 ]
  %244 = zext i32 %242 to i64
  br label %245

245:                                              ; preds = %249, %231
  %246 = phi i64 [ %247, %249 ], [ %48, %231 ]
  %247 = add nuw nsw i64 %246, 1
  %248 = icmp ult i64 %247, %244
  br i1 %248, label %249, label %261

249:                                              ; preds = %245
  %250 = add nuw i64 %246, 2
  %251 = and i64 %250, 4294967295
  %252 = getelementptr inbounds i64, ptr %241, i64 %251
  %253 = load i64, ptr %252, align 8, !tbaa !42
  %254 = getelementptr inbounds i64, ptr %241, i64 %247
  %255 = load i64, ptr %254, align 8, !tbaa !42
  %256 = sub i64 %253, %255
  %257 = and i64 %256, 4294967295
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %245, label %259

259:                                              ; preds = %249
  %260 = trunc i64 %247 to i32
  br label %261

261:                                              ; preds = %245, %259
  %262 = phi i32 [ %260, %259 ], [ %242, %245 ]
  %263 = trunc i64 %243 to i32
  %264 = icmp eq i32 %262, %263
  %265 = icmp ult i64 %243, 4294967296
  %266 = and i1 %265, %264
  br i1 %266, label %437, label %267

267:                                              ; preds = %261
  %268 = load ptr, ptr %24, align 8, !tbaa !43
  %269 = and i64 %243, 4294967295
  %270 = getelementptr inbounds i64, ptr %241, i64 %269
  %271 = load i64, ptr %270, align 8, !tbaa !42
  %272 = lshr i64 %243, 32
  %273 = trunc i64 %272 to i32
  %274 = add i64 %271, %272
  %275 = getelementptr inbounds i32, ptr %268, i64 %274
  %276 = load i32, ptr %275, align 4, !tbaa !22
  %277 = icmp eq i32 %276, -1
  br i1 %277, label %437, label %278

278:                                              ; preds = %267
  %279 = zext i32 %276 to i64
  %280 = getelementptr inbounds i32, ptr %11, i64 %279
  %281 = load i32, ptr %280, align 4, !tbaa !22
  %282 = icmp eq i32 %281, -1
  br i1 %282, label %290, label %283

283:                                              ; preds = %278
  %284 = zext i32 %240 to i64
  %285 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %239, i64 %284, i32 1
  %286 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %285, i64 0, i32 1
  %287 = load ptr, ptr %286, align 8, !tbaa !31
  %288 = load ptr, ptr %285, align 8, !tbaa !32
  %289 = icmp eq ptr %287, %288
  br i1 %289, label %387, label %320

290:                                              ; preds = %278
  %291 = zext i32 %236 to i64
  %292 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %235, i64 %291, i32 1
  %293 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %292, i64 0, i32 1
  %294 = load ptr, ptr %293, align 8, !tbaa !31
  %295 = load ptr, ptr %292, align 8, !tbaa !32
  %296 = icmp eq ptr %294, %295
  br i1 %296, label %387, label %299

297:                                              ; preds = %299
  %298 = landingpad { ptr, i32 }
          cleanup
  br label %450

299:                                              ; preds = %290, %305
  %300 = phi ptr [ %314, %305 ], [ %295, %290 ]
  %301 = phi i64 [ %307, %305 ], [ 0, %290 ]
  %302 = phi i32 [ %306, %305 ], [ 0, %290 ]
  %303 = getelementptr inbounds %"struct.std::pair", ptr %300, i64 %301
  %304 = load i32, ptr %303, align 8, !tbaa !37
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %1, i32 noundef %304, i32 noundef %276)
          to label %305 unwind label %297

305:                                              ; preds = %299
  %306 = add i32 %302, 1
  %307 = zext i32 %306 to i64
  %308 = load i32, ptr %49, align 4, !tbaa !22
  %309 = zext i32 %308 to i64
  %310 = load ptr, ptr %12, align 8, !tbaa !72
  %311 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %310, i64 %309, i32 1
  %312 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %311, i64 0, i32 1
  %313 = load ptr, ptr %312, align 8, !tbaa !31
  %314 = load ptr, ptr %311, align 8, !tbaa !32
  %315 = ptrtoint ptr %313 to i64
  %316 = ptrtoint ptr %314 to i64
  %317 = sub i64 %315, %316
  %318 = ashr exact i64 %317, 4
  %319 = icmp eq i64 %318, %307
  br i1 %319, label %387, label %299

320:                                              ; preds = %283, %338
  %321 = phi ptr [ %339, %338 ], [ %233, %283 ]
  %322 = phi ptr [ %340, %338 ], [ %235, %283 ]
  %323 = phi i32 [ %341, %338 ], [ %236, %283 ]
  %324 = phi ptr [ %342, %338 ], [ %237, %283 ]
  %325 = phi i32 [ %343, %338 ], [ %238, %283 ]
  %326 = phi ptr [ %342, %338 ], [ %239, %283 ]
  %327 = phi i32 [ %344, %338 ], [ %281, %283 ]
  %328 = phi i64 [ %346, %338 ], [ 0, %283 ]
  %329 = phi i32 [ %345, %338 ], [ 0, %283 ]
  %330 = zext i32 %327 to i64
  %331 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %326, i64 %330, i32 1
  %332 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %331, i64 0, i32 1
  %333 = load ptr, ptr %332, align 8, !tbaa !31
  %334 = load ptr, ptr %331, align 8, !tbaa !32
  %335 = icmp eq ptr %333, %334
  br i1 %335, label %338, label %359

336:                                              ; preds = %372
  %337 = load i32, ptr %49, align 4, !tbaa !22
  br label %338

338:                                              ; preds = %336, %320
  %339 = phi ptr [ %377, %336 ], [ %321, %320 ]
  %340 = phi ptr [ %377, %336 ], [ %322, %320 ]
  %341 = phi i32 [ %337, %336 ], [ %323, %320 ]
  %342 = phi ptr [ %377, %336 ], [ %324, %320 ]
  %343 = phi i32 [ %337, %336 ], [ %325, %320 ]
  %344 = phi i32 [ %375, %336 ], [ %327, %320 ]
  %345 = add i32 %329, 1
  %346 = zext i32 %345 to i64
  %347 = zext i32 %343 to i64
  %348 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %342, i64 %347, i32 1
  %349 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %348, i64 0, i32 1
  %350 = load ptr, ptr %349, align 8, !tbaa !31
  %351 = load ptr, ptr %348, align 8, !tbaa !32
  %352 = ptrtoint ptr %350 to i64
  %353 = ptrtoint ptr %351 to i64
  %354 = sub i64 %352, %353
  %355 = ashr exact i64 %354, 4
  %356 = icmp eq i64 %355, %346
  br i1 %356, label %387, label %320

357:                                              ; preds = %359
  %358 = landingpad { ptr, i32 }
          cleanup
  br label %450

359:                                              ; preds = %320, %372
  %360 = phi ptr [ %381, %372 ], [ %334, %320 ]
  %361 = phi ptr [ %377, %372 ], [ %326, %320 ]
  %362 = phi i64 [ %374, %372 ], [ 0, %320 ]
  %363 = phi i32 [ %373, %372 ], [ 0, %320 ]
  %364 = load i32, ptr %49, align 4, !tbaa !22
  %365 = zext i32 %364 to i64
  %366 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %361, i64 %365, i32 1
  %367 = load ptr, ptr %366, align 8, !tbaa !32
  %368 = getelementptr inbounds %"struct.std::pair", ptr %367, i64 %328
  %369 = load i32, ptr %368, align 8, !tbaa !37
  %370 = getelementptr inbounds %"struct.std::pair", ptr %360, i64 %362
  %371 = load i32, ptr %370, align 8, !tbaa !37
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %1, i32 noundef %369, i32 noundef %371)
          to label %372 unwind label %357

372:                                              ; preds = %359
  %373 = add i32 %363, 1
  %374 = zext i32 %373 to i64
  %375 = load i32, ptr %280, align 4, !tbaa !22
  %376 = zext i32 %375 to i64
  %377 = load ptr, ptr %12, align 8, !tbaa !72
  %378 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %377, i64 %376, i32 1
  %379 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %378, i64 0, i32 1
  %380 = load ptr, ptr %379, align 8, !tbaa !31
  %381 = load ptr, ptr %378, align 8, !tbaa !32
  %382 = ptrtoint ptr %380 to i64
  %383 = ptrtoint ptr %381 to i64
  %384 = sub i64 %382, %383
  %385 = ashr exact i64 %384, 4
  %386 = icmp eq i64 %385, %374
  br i1 %386, label %336, label %359

387:                                              ; preds = %338, %305, %283, %290
  %388 = phi ptr [ %233, %283 ], [ %233, %290 ], [ %310, %305 ], [ %339, %338 ]
  %389 = phi ptr [ %235, %283 ], [ %235, %290 ], [ %310, %305 ], [ %340, %338 ]
  %390 = phi i32 [ %236, %283 ], [ %236, %290 ], [ %308, %305 ], [ %341, %338 ]
  %391 = phi ptr [ %237, %283 ], [ %235, %290 ], [ %310, %305 ], [ %342, %338 ]
  %392 = phi i32 [ %238, %283 ], [ %236, %290 ], [ %308, %305 ], [ %343, %338 ]
  %393 = phi ptr [ %239, %283 ], [ %235, %290 ], [ %310, %305 ], [ %342, %338 ]
  %394 = phi i32 [ %240, %283 ], [ %236, %290 ], [ %308, %305 ], [ %343, %338 ]
  %395 = add i32 %273, 1
  %396 = zext i32 %395 to i64
  %397 = shl nuw i64 %396, 32
  %398 = or i64 %397, %269
  %399 = load ptr, ptr %23, align 8
  %400 = add i32 %263, 1
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds i64, ptr %399, i64 %401
  %403 = load i64, ptr %402, align 8, !tbaa !42
  %404 = getelementptr inbounds i64, ptr %399, i64 %269
  %405 = load i64, ptr %404, align 8, !tbaa !42
  %406 = sub i64 %403, %405
  %407 = trunc i64 %406 to i32
  %408 = icmp ult i32 %395, %407
  %409 = load i32, ptr %3, align 4, !tbaa !38
  br i1 %408, label %422, label %410

410:                                              ; preds = %387
  %411 = icmp eq i32 %400, %409
  br i1 %411, label %422, label %412

412:                                              ; preds = %410
  %413 = add i32 %263, 2
  %414 = zext i32 %413 to i64
  %415 = getelementptr inbounds i64, ptr %399, i64 %414
  %416 = load i64, ptr %415, align 8, !tbaa !42
  %417 = sub i64 %416, %403
  %418 = and i64 %417, 4294967295
  %419 = icmp eq i64 %418, 0
  br i1 %419, label %420, label %422

420:                                              ; preds = %412
  %421 = icmp eq i32 %413, %409
  br i1 %421, label %422, label %424

422:                                              ; preds = %435, %424, %420, %412, %387, %410
  %423 = phi i64 [ %414, %420 ], [ %401, %412 ], [ %398, %387 ], [ %401, %410 ], [ %429, %435 ], [ %426, %424 ]
  br label %231, !llvm.loop !82

424:                                              ; preds = %420, %435
  %425 = phi i32 [ %428, %435 ], [ %413, %420 ]
  %426 = phi i64 [ %429, %435 ], [ %414, %420 ]
  %427 = phi i64 [ %431, %435 ], [ %416, %420 ]
  %428 = add i32 %425, 1
  %429 = zext i32 %428 to i64
  %430 = getelementptr inbounds i64, ptr %399, i64 %429
  %431 = load i64, ptr %430, align 8, !tbaa !42
  %432 = sub i64 %431, %427
  %433 = and i64 %432, 4294967295
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %435, label %422, !llvm.loop !82

435:                                              ; preds = %424
  %436 = icmp eq i32 %428, %409
  br i1 %436, label %422, label %424, !llvm.loop !82

437:                                              ; preds = %261, %267, %108, %114
  %438 = phi i32 [ %83, %114 ], [ %83, %108 ], [ %232, %267 ], [ %232, %261 ]
  %439 = phi ptr [ %85, %114 ], [ %85, %108 ], [ %233, %267 ], [ %233, %261 ]
  %440 = phi i32 [ %86, %114 ], [ %86, %108 ], [ %234, %267 ], [ %234, %261 ]
  %441 = phi ptr [ %87, %114 ], [ %87, %108 ], [ %235, %267 ], [ %235, %261 ]
  %442 = phi ptr [ %88, %114 ], [ %88, %108 ], [ %237, %267 ], [ %237, %261 ]
  %443 = phi ptr [ %89, %114 ], [ %89, %108 ], [ %239, %267 ], [ %239, %261 ]
  %444 = phi i32 [ %86, %114 ], [ %86, %108 ], [ %242, %267 ], [ %242, %261 ]
  %445 = icmp eq i64 %53, %25
  br i1 %445, label %36, label %40

446:                                              ; preds = %36
  %447 = icmp eq ptr %11, null
  br i1 %447, label %449, label %448

448:                                              ; preds = %446
  tail call void @_ZdlPv(ptr noundef nonnull %11) #23
  br label %449

449:                                              ; preds = %446, %448
  ret void

450:                                              ; preds = %137, %297, %357, %37
  %451 = phi { ptr, i32 } [ %38, %37 ], [ %358, %357 ], [ %298, %297 ], [ %138, %137 ]
  tail call void @_ZdlPv(ptr noundef nonnull %11) #23
  br label %452

452:                                              ; preds = %450, %37
  %453 = phi { ptr, i32 } [ %38, %37 ], [ %451, %450 ]
  resume { ptr, i32 } %453
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK6dealii16ConstraintMatrix8condenseERNS_25CompressedSparsityPatternE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(104) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !729
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = zext i32 %4 to i64
  %8 = shl nuw nsw i64 %7, 2
  %9 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %8) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %9, i8 -1, i64 %8, i1 false), !tbaa !22
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi ptr [ null, %2 ], [ %9, %6 ]
  %12 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !70
  %15 = load ptr, ptr %12, align 8, !tbaa !72
  %16 = ptrtoint ptr %14 to i64
  %17 = ptrtoint ptr %15 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 40
  %20 = icmp eq ptr %14, %15
  br i1 %20, label %21, label %25

21:                                               ; preds = %25, %10
  br i1 %5, label %35, label %22

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %1, i64 0, i32 3
  %24 = zext i32 %4 to i64
  br label %39

25:                                               ; preds = %10, %25
  %26 = phi i64 [ %33, %25 ], [ 0, %10 ]
  %27 = phi i32 [ %32, %25 ], [ 0, %10 ]
  %28 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %15, i64 %26
  %29 = load i32, ptr %28, align 8, !tbaa !24
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i32, ptr %11, i64 %30
  store i32 %27, ptr %31, align 4, !tbaa !22
  %32 = add i32 %27, 1
  %33 = zext i32 %32 to i64
  %34 = icmp ugt i64 %19, %33
  br i1 %34, label %25, label %21

35:                                               ; preds = %456, %21
  %36 = icmp eq ptr %11, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %35
  tail call void @_ZdlPv(ptr noundef nonnull %11) #23
  br label %38

38:                                               ; preds = %35, %37
  ret void

39:                                               ; preds = %22, %456
  %40 = phi i64 [ 0, %22 ], [ %457, %456 ]
  %41 = getelementptr inbounds i32, ptr %11, i64 %40
  %42 = load i32, ptr %41, align 4, !tbaa !22
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %223

44:                                               ; preds = %39
  %45 = load ptr, ptr %23, align 8, !tbaa !438
  br label %46

46:                                               ; preds = %44, %216
  %47 = phi ptr [ %217, %216 ], [ %45, %44 ]
  %48 = phi ptr [ %218, %216 ], [ %45, %44 ]
  %49 = phi ptr [ %219, %216 ], [ %45, %44 ]
  %50 = phi ptr [ %220, %216 ], [ %45, %44 ]
  %51 = phi i32 [ %222, %216 ], [ 0, %44 ]
  %52 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %50, i64 %40, i32 2
  %53 = load i32, ptr %52, align 8, !tbaa !440
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %50, i64 %40
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %56)
          to label %57 unwind label %74

57:                                               ; preds = %55
  %58 = load ptr, ptr %23, align 8, !tbaa !438
  br label %59

59:                                               ; preds = %57, %46
  %60 = phi ptr [ %58, %57 ], [ %47, %46 ]
  %61 = phi ptr [ %58, %57 ], [ %48, %46 ]
  %62 = phi ptr [ %58, %57 ], [ %49, %46 ]
  %63 = phi ptr [ %58, %57 ], [ %50, %46 ]
  %64 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %63, i64 %40
  %65 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %64, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !313
  %67 = load ptr, ptr %64, align 8, !tbaa !58
  %68 = ptrtoint ptr %66 to i64
  %69 = ptrtoint ptr %67 to i64
  %70 = sub i64 %68, %69
  %71 = lshr exact i64 %70, 2
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %51, %72
  br i1 %73, label %76, label %456

74:                                               ; preds = %55
  %75 = landingpad { ptr, i32 }
          cleanup
  br label %462

76:                                               ; preds = %59
  %77 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %63, i64 %40, i32 2
  %78 = load i32, ptr %77, align 8, !tbaa !440
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %64)
          to label %81 unwind label %129

81:                                               ; preds = %80
  %82 = load ptr, ptr %23, align 8, !tbaa !438
  %83 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %82, i64 %40
  %84 = load ptr, ptr %83, align 8, !tbaa !58
  br label %85

85:                                               ; preds = %81, %76
  %86 = phi ptr [ %82, %81 ], [ %60, %76 ]
  %87 = phi ptr [ %84, %81 ], [ %67, %76 ]
  %88 = phi ptr [ %82, %81 ], [ %61, %76 ]
  %89 = phi ptr [ %82, %81 ], [ %62, %76 ]
  %90 = phi ptr [ %82, %81 ], [ %63, %76 ]
  %91 = zext i32 %51 to i64
  %92 = getelementptr inbounds i32, ptr %87, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !22
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i32, ptr %11, i64 %94
  %96 = load i32, ptr %95, align 4, !tbaa !22
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %216, label %98

98:                                               ; preds = %85
  %99 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %89, i64 %40, i32 2
  %100 = load i32, ptr %99, align 8, !tbaa !440
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %89, i64 %40
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %103)
          to label %104 unwind label %131

104:                                              ; preds = %102
  %105 = load ptr, ptr %23, align 8, !tbaa !438
  %106 = load i32, ptr %95, align 4, !tbaa !22
  br label %107

107:                                              ; preds = %98, %104
  %108 = phi ptr [ %105, %104 ], [ %86, %98 ]
  %109 = phi ptr [ %105, %104 ], [ %88, %98 ]
  %110 = phi i32 [ %106, %104 ], [ %96, %98 ]
  %111 = phi ptr [ %105, %104 ], [ %89, %98 ]
  %112 = zext i32 %110 to i64
  %113 = load ptr, ptr %12, align 8, !tbaa !72
  %114 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %113, i64 %112, i32 1
  %115 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %115, align 8, !tbaa !31
  %117 = load ptr, ptr %114, align 8, !tbaa !32
  %118 = icmp eq ptr %116, %117
  br i1 %118, label %216, label %119

119:                                              ; preds = %107
  %120 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %111, i64 %40
  %121 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %120, i64 0, i32 1
  %122 = load ptr, ptr %121, align 8, !tbaa !313
  %123 = ptrtoint ptr %122 to i64
  %124 = load ptr, ptr %120, align 8, !tbaa !58
  %125 = ptrtoint ptr %124 to i64
  %126 = sub i64 %123, %125
  %127 = lshr exact i64 %126, 2
  %128 = trunc i64 %127 to i32
  br label %133

129:                                              ; preds = %80
  %130 = landingpad { ptr, i32 }
          cleanup
  br label %462

131:                                              ; preds = %102
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %462

133:                                              ; preds = %119, %181
  %134 = phi ptr [ %182, %181 ], [ %108, %119 ]
  %135 = phi ptr [ %183, %181 ], [ %109, %119 ]
  %136 = phi ptr [ %183, %181 ], [ %111, %119 ]
  %137 = phi ptr [ %206, %181 ], [ %117, %119 ]
  %138 = phi i64 [ %199, %181 ], [ 0, %119 ]
  %139 = phi i32 [ %198, %181 ], [ 0, %119 ]
  %140 = phi i32 [ %192, %181 ], [ %128, %119 ]
  %141 = phi i32 [ %197, %181 ], [ %51, %119 ]
  %142 = getelementptr inbounds %"struct.std::pair", ptr %137, i64 %138
  %143 = load i32, ptr %142, align 8, !tbaa !37
  %144 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %136, i64 %40
  %145 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %136, i64 %40, i32 2
  %146 = load i32, ptr %145, align 8, !tbaa !440
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %133
  %149 = zext i32 %146 to i64
  br label %153

150:                                              ; preds = %153
  %151 = add nuw nsw i64 %154, 1
  %152 = icmp eq i64 %151, %149
  br i1 %152, label %158, label %153

153:                                              ; preds = %150, %148
  %154 = phi i64 [ 0, %148 ], [ %151, %150 ]
  %155 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %136, i64 %40, i32 1, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !22
  %157 = icmp eq i32 %156, %143
  br i1 %157, label %171, label %150

158:                                              ; preds = %150
  %159 = icmp eq i32 %146, 8
  br i1 %159, label %160, label %164

160:                                              ; preds = %158
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %144)
          to label %161 unwind label %212

161:                                              ; preds = %160
  %162 = load i32, ptr %145, align 8, !tbaa !440
  %163 = load ptr, ptr %23, align 8, !tbaa !438
  br label %164

164:                                              ; preds = %161, %158, %133
  %165 = phi ptr [ %163, %161 ], [ %134, %158 ], [ %134, %133 ]
  %166 = phi i32 [ %162, %161 ], [ %146, %158 ], [ 0, %133 ]
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %136, i64 %40, i32 1, i64 %167
  store i32 %143, ptr %168, align 4, !tbaa !22
  %169 = load i32, ptr %145, align 8, !tbaa !440
  %170 = add i32 %169, 1
  store i32 %170, ptr %145, align 8, !tbaa !440
  br label %171

171:                                              ; preds = %153, %164
  %172 = phi ptr [ %165, %164 ], [ %134, %153 ]
  %173 = phi ptr [ %165, %164 ], [ %135, %153 ]
  %174 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %173, i64 %40, i32 2
  %175 = load i32, ptr %174, align 8, !tbaa !440
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %181, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %173, i64 %40
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %178)
          to label %179 unwind label %214

179:                                              ; preds = %177
  %180 = load ptr, ptr %23, align 8, !tbaa !438
  br label %181

181:                                              ; preds = %179, %171
  %182 = phi ptr [ %180, %179 ], [ %172, %171 ]
  %183 = phi ptr [ %180, %179 ], [ %173, %171 ]
  %184 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %183, i64 %40
  %185 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %184, i64 0, i32 1
  %186 = load ptr, ptr %185, align 8, !tbaa !313
  %187 = load ptr, ptr %184, align 8, !tbaa !58
  %188 = ptrtoint ptr %186 to i64
  %189 = ptrtoint ptr %187 to i64
  %190 = sub i64 %188, %189
  %191 = lshr exact i64 %190, 2
  %192 = trunc i64 %191 to i32
  %193 = icmp ult i32 %143, %93
  %194 = icmp ne i32 %140, %192
  %195 = and i1 %193, %194
  %196 = zext i1 %195 to i32
  %197 = add i32 %141, %196
  %198 = add i32 %139, 1
  %199 = zext i32 %198 to i64
  %200 = load i32, ptr %95, align 4, !tbaa !22
  %201 = zext i32 %200 to i64
  %202 = load ptr, ptr %12, align 8, !tbaa !72
  %203 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %202, i64 %201, i32 1
  %204 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %203, i64 0, i32 1
  %205 = load ptr, ptr %204, align 8, !tbaa !31
  %206 = load ptr, ptr %203, align 8, !tbaa !32
  %207 = ptrtoint ptr %205 to i64
  %208 = ptrtoint ptr %206 to i64
  %209 = sub i64 %207, %208
  %210 = ashr exact i64 %209, 4
  %211 = icmp eq i64 %210, %199
  br i1 %211, label %216, label %133

212:                                              ; preds = %160
  %213 = landingpad { ptr, i32 }
          cleanup
  br label %459

214:                                              ; preds = %177
  %215 = landingpad { ptr, i32 }
          cleanup
  br label %459

216:                                              ; preds = %181, %107, %85
  %217 = phi ptr [ %86, %85 ], [ %108, %107 ], [ %182, %181 ]
  %218 = phi ptr [ %88, %85 ], [ %109, %107 ], [ %183, %181 ]
  %219 = phi ptr [ %89, %85 ], [ %111, %107 ], [ %183, %181 ]
  %220 = phi ptr [ %90, %85 ], [ %111, %107 ], [ %183, %181 ]
  %221 = phi i32 [ %51, %85 ], [ %51, %107 ], [ %197, %181 ]
  %222 = add i32 %221, 1
  br label %46

223:                                              ; preds = %39, %454
  %224 = phi i64 [ %455, %454 ], [ 0, %39 ]
  %225 = load ptr, ptr %23, align 8, !tbaa !438
  %226 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %225, i64 %40, i32 2
  %227 = load i32, ptr %226, align 8, !tbaa !440
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %233, label %229

229:                                              ; preds = %223
  %230 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %225, i64 %40
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %230)
          to label %231 unwind label %245

231:                                              ; preds = %229
  %232 = load ptr, ptr %23, align 8, !tbaa !438
  br label %233

233:                                              ; preds = %231, %223
  %234 = phi ptr [ %232, %231 ], [ %225, %223 ]
  %235 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %234, i64 %40
  %236 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %235, i64 0, i32 1
  %237 = load ptr, ptr %236, align 8, !tbaa !313
  %238 = load ptr, ptr %235, align 8, !tbaa !58
  %239 = ptrtoint ptr %237 to i64
  %240 = ptrtoint ptr %238 to i64
  %241 = sub i64 %239, %240
  %242 = lshr exact i64 %241, 2
  %243 = and i64 %242, 4294967295
  %244 = icmp ult i64 %224, %243
  br i1 %244, label %247, label %456

245:                                              ; preds = %229
  %246 = landingpad { ptr, i32 }
          cleanup
  br label %462

247:                                              ; preds = %233
  %248 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %234, i64 %40, i32 2
  %249 = load i32, ptr %248, align 8, !tbaa !440
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %256, label %251

251:                                              ; preds = %247
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %235)
          to label %252 unwind label %275

252:                                              ; preds = %251
  %253 = load ptr, ptr %23, align 8, !tbaa !438
  %254 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %253, i64 %40
  %255 = load ptr, ptr %254, align 8, !tbaa !58
  br label %256

256:                                              ; preds = %252, %247
  %257 = phi ptr [ %255, %252 ], [ %238, %247 ]
  %258 = phi ptr [ %253, %252 ], [ %234, %247 ]
  %259 = getelementptr inbounds i32, ptr %257, i64 %224
  %260 = load i32, ptr %259, align 4, !tbaa !22
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds i32, ptr %11, i64 %261
  %263 = load i32, ptr %262, align 4, !tbaa !22
  %264 = icmp eq i32 %263, -1
  %265 = load i32, ptr %41, align 4, !tbaa !22
  %266 = zext i32 %265 to i64
  %267 = load ptr, ptr %12, align 8, !tbaa !72
  %268 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 %266, i32 1
  %269 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %268, i64 0, i32 1
  %270 = load ptr, ptr %269, align 8, !tbaa !31
  %271 = load ptr, ptr %268, align 8, !tbaa !32
  %272 = icmp eq ptr %270, %271
  br i1 %264, label %274, label %273

273:                                              ; preds = %256
  br i1 %272, label %454, label %334

274:                                              ; preds = %256
  br i1 %272, label %454, label %279

275:                                              ; preds = %251
  %276 = landingpad { ptr, i32 }
          cleanup
  br label %459

277:                                              ; preds = %306
  %278 = landingpad { ptr, i32 }
          cleanup
  br label %459

279:                                              ; preds = %274, %318
  %280 = phi ptr [ %319, %318 ], [ %267, %274 ]
  %281 = phi ptr [ %320, %318 ], [ %267, %274 ]
  %282 = phi i32 [ %321, %318 ], [ %265, %274 ]
  %283 = phi ptr [ %328, %318 ], [ %271, %274 ]
  %284 = phi i64 [ %323, %318 ], [ 0, %274 ]
  %285 = phi i32 [ %322, %318 ], [ 0, %274 ]
  %286 = getelementptr inbounds %"struct.std::pair", ptr %283, i64 %284
  %287 = load i32, ptr %286, align 8, !tbaa !37
  %288 = zext i32 %287 to i64
  %289 = load ptr, ptr %23, align 8, !tbaa !438
  %290 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %289, i64 %288
  %291 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %289, i64 %288, i32 2
  %292 = load i32, ptr %291, align 8, !tbaa !440
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %310, label %294

294:                                              ; preds = %279
  %295 = zext i32 %292 to i64
  br label %299

296:                                              ; preds = %299
  %297 = add nuw nsw i64 %300, 1
  %298 = icmp eq i64 %297, %295
  br i1 %298, label %304, label %299

299:                                              ; preds = %296, %294
  %300 = phi i64 [ 0, %294 ], [ %297, %296 ]
  %301 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %289, i64 %288, i32 1, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !22
  %303 = icmp eq i32 %302, %260
  br i1 %303, label %318, label %296

304:                                              ; preds = %296
  %305 = icmp eq i32 %292, 8
  br i1 %305, label %306, label %310

306:                                              ; preds = %304
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %290)
          to label %307 unwind label %277

307:                                              ; preds = %306
  %308 = load i32, ptr %291, align 8, !tbaa !440
  %309 = load ptr, ptr %12, align 8, !tbaa !72
  br label %310

310:                                              ; preds = %307, %304, %279
  %311 = phi ptr [ %309, %307 ], [ %280, %304 ], [ %280, %279 ]
  %312 = phi i32 [ %308, %307 ], [ %292, %304 ], [ 0, %279 ]
  %313 = zext i32 %312 to i64
  %314 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %289, i64 %288, i32 1, i64 %313
  store i32 %260, ptr %314, align 4, !tbaa !22
  %315 = load i32, ptr %291, align 8, !tbaa !440
  %316 = add i32 %315, 1
  store i32 %316, ptr %291, align 8, !tbaa !440
  %317 = load i32, ptr %41, align 4, !tbaa !22
  br label %318

318:                                              ; preds = %299, %310
  %319 = phi ptr [ %311, %310 ], [ %280, %299 ]
  %320 = phi ptr [ %311, %310 ], [ %281, %299 ]
  %321 = phi i32 [ %317, %310 ], [ %282, %299 ]
  %322 = add i32 %285, 1
  %323 = zext i32 %322 to i64
  %324 = zext i32 %321 to i64
  %325 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %320, i64 %324, i32 1
  %326 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %325, i64 0, i32 1
  %327 = load ptr, ptr %326, align 8, !tbaa !31
  %328 = load ptr, ptr %325, align 8, !tbaa !32
  %329 = ptrtoint ptr %327 to i64
  %330 = ptrtoint ptr %328 to i64
  %331 = sub i64 %329, %330
  %332 = ashr exact i64 %331, 4
  %333 = icmp eq i64 %332, %323
  br i1 %333, label %454, label %279

334:                                              ; preds = %273, %375
  %335 = phi ptr [ %354, %375 ], [ %258, %273 ]
  %336 = phi ptr [ %355, %375 ], [ %258, %273 ]
  %337 = phi ptr [ %356, %375 ], [ %258, %273 ]
  %338 = phi i64 [ %377, %375 ], [ 0, %273 ]
  %339 = phi i32 [ %376, %375 ], [ 0, %273 ]
  br label %340

340:                                              ; preds = %334, %450
  %341 = phi ptr [ %451, %450 ], [ %335, %334 ]
  %342 = phi ptr [ %452, %450 ], [ %336, %334 ]
  %343 = phi ptr [ %452, %450 ], [ %337, %334 ]
  %344 = phi i32 [ %453, %450 ], [ 0, %334 ]
  %345 = zext i32 %344 to i64
  %346 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %343, i64 %40, i32 2
  %347 = load i32, ptr %346, align 8, !tbaa !440
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %353, label %349

349:                                              ; preds = %340
  %350 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %343, i64 %40
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %350)
          to label %351 unwind label %389

351:                                              ; preds = %349
  %352 = load ptr, ptr %23, align 8, !tbaa !438
  br label %353

353:                                              ; preds = %351, %340
  %354 = phi ptr [ %352, %351 ], [ %341, %340 ]
  %355 = phi ptr [ %352, %351 ], [ %342, %340 ]
  %356 = phi ptr [ %352, %351 ], [ %343, %340 ]
  %357 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %356, i64 %40
  %358 = load ptr, ptr %357, align 8, !tbaa !58
  %359 = getelementptr inbounds i32, ptr %358, i64 %224
  %360 = load i32, ptr %359, align 4, !tbaa !22
  %361 = zext i32 %360 to i64
  %362 = getelementptr inbounds i32, ptr %11, i64 %361
  %363 = load i32, ptr %362, align 4, !tbaa !22
  %364 = zext i32 %363 to i64
  %365 = load ptr, ptr %12, align 8, !tbaa !72
  %366 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %365, i64 %364, i32 1
  %367 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %366, i64 0, i32 1
  %368 = load ptr, ptr %367, align 8, !tbaa !31
  %369 = load ptr, ptr %366, align 8, !tbaa !32
  %370 = ptrtoint ptr %368 to i64
  %371 = ptrtoint ptr %369 to i64
  %372 = sub i64 %370, %371
  %373 = ashr exact i64 %372, 4
  %374 = icmp eq i64 %373, %345
  br i1 %374, label %375, label %391

375:                                              ; preds = %353
  %376 = add i32 %339, 1
  %377 = zext i32 %376 to i64
  %378 = load i32, ptr %41, align 4, !tbaa !22
  %379 = zext i32 %378 to i64
  %380 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %365, i64 %379, i32 1
  %381 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %380, i64 0, i32 1
  %382 = load ptr, ptr %381, align 8, !tbaa !31
  %383 = load ptr, ptr %380, align 8, !tbaa !32
  %384 = ptrtoint ptr %382 to i64
  %385 = ptrtoint ptr %383 to i64
  %386 = sub i64 %384, %385
  %387 = ashr exact i64 %386, 4
  %388 = icmp eq i64 %387, %377
  br i1 %388, label %454, label %334

389:                                              ; preds = %439, %401, %349
  %390 = landingpad { ptr, i32 }
          cleanup
  br label %459

391:                                              ; preds = %353
  %392 = load i32, ptr %41, align 4, !tbaa !22
  %393 = zext i32 %392 to i64
  %394 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %365, i64 %393, i32 1
  %395 = load ptr, ptr %394, align 8, !tbaa !32
  %396 = getelementptr inbounds %"struct.std::pair", ptr %395, i64 %338
  %397 = load i32, ptr %396, align 8, !tbaa !37
  %398 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %356, i64 %40, i32 2
  %399 = load i32, ptr %398, align 8, !tbaa !440
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %415, label %401

401:                                              ; preds = %391
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %357)
          to label %402 unwind label %389

402:                                              ; preds = %401
  %403 = load ptr, ptr %23, align 8, !tbaa !438
  %404 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %403, i64 %40
  %405 = load ptr, ptr %404, align 8, !tbaa !58
  %406 = getelementptr inbounds i32, ptr %405, i64 %224
  %407 = load i32, ptr %406, align 4, !tbaa !22
  %408 = zext i32 %407 to i64
  %409 = getelementptr inbounds i32, ptr %11, i64 %408
  %410 = load i32, ptr %409, align 4, !tbaa !22
  %411 = load ptr, ptr %12, align 8, !tbaa !72
  %412 = zext i32 %410 to i64
  %413 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %411, i64 %412, i32 1
  %414 = load ptr, ptr %413, align 8, !tbaa !32
  br label %415

415:                                              ; preds = %402, %391
  %416 = phi ptr [ %403, %402 ], [ %354, %391 ]
  %417 = phi ptr [ %403, %402 ], [ %355, %391 ]
  %418 = phi ptr [ %414, %402 ], [ %369, %391 ]
  %419 = phi ptr [ %403, %402 ], [ %356, %391 ]
  %420 = getelementptr inbounds %"struct.std::pair", ptr %418, i64 %345
  %421 = load i32, ptr %420, align 8, !tbaa !37
  %422 = zext i32 %397 to i64
  %423 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %419, i64 %422
  %424 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %419, i64 %422, i32 2
  %425 = load i32, ptr %424, align 8, !tbaa !440
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %443, label %427

427:                                              ; preds = %415
  %428 = zext i32 %425 to i64
  br label %432

429:                                              ; preds = %432
  %430 = add nuw nsw i64 %433, 1
  %431 = icmp eq i64 %430, %428
  br i1 %431, label %437, label %432

432:                                              ; preds = %429, %427
  %433 = phi i64 [ 0, %427 ], [ %430, %429 ]
  %434 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %419, i64 %422, i32 1, i64 %433
  %435 = load i32, ptr %434, align 4, !tbaa !22
  %436 = icmp eq i32 %435, %421
  br i1 %436, label %450, label %429

437:                                              ; preds = %429
  %438 = icmp eq i32 %425, 8
  br i1 %438, label %439, label %443

439:                                              ; preds = %437
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %423)
          to label %440 unwind label %389

440:                                              ; preds = %439
  %441 = load i32, ptr %424, align 8, !tbaa !440
  %442 = load ptr, ptr %23, align 8, !tbaa !438
  br label %443

443:                                              ; preds = %440, %437, %415
  %444 = phi ptr [ %442, %440 ], [ %416, %437 ], [ %416, %415 ]
  %445 = phi i32 [ %441, %440 ], [ %425, %437 ], [ 0, %415 ]
  %446 = zext i32 %445 to i64
  %447 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %419, i64 %422, i32 1, i64 %446
  store i32 %421, ptr %447, align 4, !tbaa !22
  %448 = load i32, ptr %424, align 8, !tbaa !440
  %449 = add i32 %448, 1
  store i32 %449, ptr %424, align 8, !tbaa !440
  br label %450

450:                                              ; preds = %432, %443
  %451 = phi ptr [ %444, %443 ], [ %416, %432 ]
  %452 = phi ptr [ %444, %443 ], [ %417, %432 ]
  %453 = add i32 %344, 1
  br label %340

454:                                              ; preds = %375, %318, %273, %274
  %455 = add nuw nsw i64 %224, 1
  br label %223

456:                                              ; preds = %233, %59
  %457 = add nuw nsw i64 %40, 1
  %458 = icmp eq i64 %457, %24
  br i1 %458, label %35, label %39

459:                                              ; preds = %389, %277, %275, %214, %212
  %460 = phi { ptr, i32 } [ %215, %214 ], [ %213, %212 ], [ %278, %277 ], [ %390, %389 ], [ %276, %275 ]
  %461 = icmp eq ptr %11, null
  br i1 %461, label %464, label %462

462:                                              ; preds = %129, %131, %74, %245, %459
  %463 = phi { ptr, i32 } [ %460, %459 ], [ %246, %245 ], [ %132, %131 ], [ %75, %74 ], [ %130, %129 ]
  tail call void @_ZdlPv(ptr noundef nonnull %11) #23
  br label %464

464:                                              ; preds = %462, %459
  %465 = phi { ptr, i32 } [ %460, %459 ], [ %463, %462 ]
  resume { ptr, i32 } %465
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK6dealii16ConstraintMatrix8condenseERNS_28CompressedSetSparsityPatternE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(104) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !734
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = zext i32 %4 to i64
  %8 = shl nuw nsw i64 %7, 2
  %9 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %8) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %9, i8 -1, i64 %8, i1 false), !tbaa !22
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi ptr [ null, %2 ], [ %9, %6 ]
  %12 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !70
  %15 = load ptr, ptr %12, align 8, !tbaa !72
  %16 = ptrtoint ptr %14 to i64
  %17 = ptrtoint ptr %15 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 40
  %20 = icmp eq ptr %14, %15
  br i1 %20, label %21, label %25

21:                                               ; preds = %25, %10
  br i1 %5, label %35, label %22

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %1, i64 0, i32 3
  %24 = zext i32 %4 to i64
  br label %39

25:                                               ; preds = %10, %25
  %26 = phi i64 [ %33, %25 ], [ 0, %10 ]
  %27 = phi i32 [ %32, %25 ], [ 0, %10 ]
  %28 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %15, i64 %26
  %29 = load i32, ptr %28, align 8, !tbaa !24
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i32, ptr %11, i64 %30
  store i32 %27, ptr %31, align 4, !tbaa !22
  %32 = add i32 %27, 1
  %33 = zext i32 %32 to i64
  %34 = icmp ugt i64 %19, %33
  br i1 %34, label %25, label %21

35:                                               ; preds = %422, %21
  %36 = icmp eq ptr %11, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %35
  tail call void @_ZdlPv(ptr noundef nonnull %11) #23
  br label %38

38:                                               ; preds = %35, %37
  ret void

39:                                               ; preds = %22, %422
  %40 = phi ptr [ %15, %22 ], [ %423, %422 ]
  %41 = phi ptr [ %15, %22 ], [ %424, %422 ]
  %42 = phi ptr [ %15, %22 ], [ %425, %422 ]
  %43 = phi ptr [ %15, %22 ], [ %426, %422 ]
  %44 = phi ptr [ %15, %22 ], [ %427, %422 ]
  %45 = phi ptr [ %15, %22 ], [ %428, %422 ]
  %46 = phi i64 [ 0, %22 ], [ %429, %422 ]
  %47 = getelementptr inbounds i32, ptr %11, i64 %46
  %48 = load i32, ptr %47, align 4, !tbaa !22
  %49 = icmp eq i32 %48, -1
  %50 = load ptr, ptr %23, align 8, !tbaa !455
  %51 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %50, i64 %46, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !457
  %53 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %50, i64 %46, i32 0, i32 0, i32 0, i32 1
  %54 = icmp eq ptr %52, %53
  br i1 %49, label %55, label %163

55:                                               ; preds = %39
  br i1 %54, label %422, label %56

56:                                               ; preds = %55, %152
  %57 = phi ptr [ %153, %152 ], [ %50, %55 ]
  %58 = phi ptr [ %154, %152 ], [ %40, %55 ]
  %59 = phi ptr [ %155, %152 ], [ %41, %55 ]
  %60 = phi ptr [ %156, %152 ], [ %42, %55 ]
  %61 = phi ptr [ %157, %152 ], [ %43, %55 ]
  %62 = phi ptr [ %158, %152 ], [ %44, %55 ]
  %63 = phi ptr [ %159, %152 ], [ %45, %55 ]
  %64 = phi ptr [ %160, %152 ], [ %52, %55 ]
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %64, i64 0, i32 1
  %66 = load i32, ptr %65, align 4, !tbaa !22
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i32, ptr %11, i64 %67
  %69 = load i32, ptr %68, align 4, !tbaa !22
  %70 = icmp eq i32 %69, -1
  br i1 %70, label %152, label %71

71:                                               ; preds = %56
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %59, i64 %72, i32 1
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %74, align 8, !tbaa !31
  %76 = load ptr, ptr %73, align 8, !tbaa !32
  %77 = icmp eq ptr %75, %76
  br i1 %77, label %152, label %78

78:                                               ; preds = %71, %133
  %79 = phi ptr [ %134, %133 ], [ %58, %71 ]
  %80 = phi i32 [ %135, %133 ], [ %69, %71 ]
  %81 = phi ptr [ %142, %133 ], [ %76, %71 ]
  %82 = phi i64 [ %137, %133 ], [ 0, %71 ]
  %83 = phi i32 [ %136, %133 ], [ 0, %71 ]
  %84 = getelementptr inbounds %"struct.std::pair", ptr %81, i64 %82
  %85 = load i32, ptr %84, align 8, !tbaa !37
  %86 = load ptr, ptr %23, align 8, !tbaa !455
  %87 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %86, i64 %46
  %88 = getelementptr inbounds i8, ptr %87, i64 16
  %89 = getelementptr inbounds i8, ptr %87, i64 8
  %90 = load ptr, ptr %88, align 8, !tbaa !21
  %91 = icmp eq ptr %90, null
  br i1 %91, label %103, label %92

92:                                               ; preds = %78, %92
  %93 = phi ptr [ %100, %92 ], [ %90, %78 ]
  %94 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %93, i64 0, i32 1
  %95 = load i32, ptr %94, align 4, !tbaa !22
  %96 = icmp ugt i32 %95, %85
  %97 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %93, i64 0, i32 2
  %98 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %93, i64 0, i32 3
  %99 = select i1 %96, ptr %97, ptr %98
  %100 = load ptr, ptr %99, align 8, !tbaa !21
  %101 = icmp eq ptr %100, null
  br i1 %101, label %102, label %92

102:                                              ; preds = %92
  br i1 %96, label %103, label %112

103:                                              ; preds = %102, %78
  %104 = phi ptr [ %93, %102 ], [ %89, %78 ]
  %105 = getelementptr inbounds i8, ptr %87, i64 24
  %106 = load ptr, ptr %105, align 8, !tbaa !457
  %107 = icmp eq ptr %104, %106
  br i1 %107, label %116, label %108

108:                                              ; preds = %103
  %109 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %104) #26
  %110 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %109, i64 0, i32 1
  %111 = load i32, ptr %110, align 4, !tbaa !22
  br label %112

112:                                              ; preds = %108, %102
  %113 = phi i32 [ %111, %108 ], [ %95, %102 ]
  %114 = phi ptr [ %104, %108 ], [ %93, %102 ]
  %115 = icmp ult i32 %113, %85
  br i1 %115, label %116, label %133

116:                                              ; preds = %112, %103
  %117 = phi ptr [ %104, %103 ], [ %114, %112 ]
  %118 = icmp eq ptr %89, %117
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %117, i64 0, i32 1
  %121 = load i32, ptr %120, align 4, !tbaa !22
  %122 = icmp ugt i32 %121, %85
  br label %123

123:                                              ; preds = %119, %116
  %124 = phi i1 [ true, %116 ], [ %122, %119 ]
  %125 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %126 unwind label %148

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %125, i64 0, i32 1
  store i32 %85, ptr %127, align 4, !tbaa !22
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %124, ptr noundef nonnull %125, ptr noundef nonnull %117, ptr noundef nonnull align 8 dereferenceable(32) %89) #24
  %128 = getelementptr inbounds i8, ptr %87, i64 40
  %129 = load i64, ptr %128, align 8, !tbaa !458
  %130 = add i64 %129, 1
  store i64 %130, ptr %128, align 8, !tbaa !458
  %131 = load i32, ptr %68, align 4, !tbaa !22
  %132 = load ptr, ptr %12, align 8, !tbaa !72
  br label %133

133:                                              ; preds = %112, %126
  %134 = phi ptr [ %79, %112 ], [ %132, %126 ]
  %135 = phi i32 [ %80, %112 ], [ %131, %126 ]
  %136 = add i32 %83, 1
  %137 = zext i32 %136 to i64
  %138 = zext i32 %135 to i64
  %139 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %134, i64 %138, i32 1
  %140 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %139, i64 0, i32 1
  %141 = load ptr, ptr %140, align 8, !tbaa !31
  %142 = load ptr, ptr %139, align 8, !tbaa !32
  %143 = ptrtoint ptr %141 to i64
  %144 = ptrtoint ptr %142 to i64
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 4
  %147 = icmp eq i64 %146, %137
  br i1 %147, label %150, label %78

148:                                              ; preds = %123
  %149 = landingpad { ptr, i32 }
          cleanup
  br label %431

150:                                              ; preds = %133
  %151 = load ptr, ptr %23, align 8, !tbaa !455
  br label %152

152:                                              ; preds = %150, %71, %56
  %153 = phi ptr [ %151, %150 ], [ %57, %71 ], [ %57, %56 ]
  %154 = phi ptr [ %134, %150 ], [ %58, %71 ], [ %58, %56 ]
  %155 = phi ptr [ %134, %150 ], [ %59, %71 ], [ %59, %56 ]
  %156 = phi ptr [ %134, %150 ], [ %59, %71 ], [ %60, %56 ]
  %157 = phi ptr [ %134, %150 ], [ %59, %71 ], [ %61, %56 ]
  %158 = phi ptr [ %134, %150 ], [ %59, %71 ], [ %62, %56 ]
  %159 = phi ptr [ %134, %150 ], [ %59, %71 ], [ %63, %56 ]
  %160 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef %64) #26
  %161 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %153, i64 %46, i32 0, i32 0, i32 0, i32 1
  %162 = icmp eq ptr %160, %161
  br i1 %162, label %422, label %56

163:                                              ; preds = %39
  br i1 %54, label %422, label %164

164:                                              ; preds = %163, %407
  %165 = phi ptr [ %408, %407 ], [ %40, %163 ]
  %166 = phi ptr [ %409, %407 ], [ %41, %163 ]
  %167 = phi ptr [ %410, %407 ], [ %42, %163 ]
  %168 = phi i32 [ %411, %407 ], [ %48, %163 ]
  %169 = phi ptr [ %412, %407 ], [ %43, %163 ]
  %170 = phi i32 [ %413, %407 ], [ %48, %163 ]
  %171 = phi ptr [ %414, %407 ], [ %44, %163 ]
  %172 = phi i32 [ %415, %407 ], [ %48, %163 ]
  %173 = phi ptr [ %416, %407 ], [ %45, %163 ]
  %174 = phi i32 [ %417, %407 ], [ %48, %163 ]
  %175 = phi ptr [ %418, %407 ], [ %52, %163 ]
  %176 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %175, i64 0, i32 1
  %177 = load i32, ptr %176, align 4, !tbaa !22
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds i32, ptr %11, i64 %178
  %180 = load i32, ptr %179, align 4, !tbaa !22
  %181 = icmp eq i32 %180, -1
  br i1 %181, label %189, label %182

182:                                              ; preds = %164
  %183 = zext i32 %174 to i64
  %184 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %173, i64 %183, i32 1
  %185 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %184, i64 0, i32 1
  %186 = load ptr, ptr %185, align 8, !tbaa !31
  %187 = load ptr, ptr %184, align 8, !tbaa !32
  %188 = icmp eq ptr %186, %187
  br i1 %188, label %407, label %273

189:                                              ; preds = %164
  %190 = zext i32 %170 to i64
  %191 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %169, i64 %190, i32 1
  %192 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %191, i64 0, i32 1
  %193 = load ptr, ptr %192, align 8, !tbaa !31
  %194 = load ptr, ptr %191, align 8, !tbaa !32
  %195 = icmp eq ptr %193, %194
  br i1 %195, label %407, label %198

196:                                              ; preds = %246
  %197 = landingpad { ptr, i32 }
          cleanup
  br label %431

198:                                              ; preds = %189, %256
  %199 = phi ptr [ %257, %256 ], [ %165, %189 ]
  %200 = phi ptr [ %258, %256 ], [ %166, %189 ]
  %201 = phi ptr [ %259, %256 ], [ %167, %189 ]
  %202 = phi i32 [ %260, %256 ], [ %168, %189 ]
  %203 = phi ptr [ %267, %256 ], [ %194, %189 ]
  %204 = phi i64 [ %262, %256 ], [ 0, %189 ]
  %205 = phi i32 [ %261, %256 ], [ 0, %189 ]
  %206 = getelementptr inbounds %"struct.std::pair", ptr %203, i64 %204
  %207 = load i32, ptr %206, align 8, !tbaa !37
  %208 = zext i32 %207 to i64
  %209 = load ptr, ptr %23, align 8, !tbaa !455
  %210 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %209, i64 %208
  %211 = getelementptr inbounds i8, ptr %210, i64 16
  %212 = getelementptr inbounds i8, ptr %210, i64 8
  %213 = load ptr, ptr %211, align 8, !tbaa !21
  %214 = icmp eq ptr %213, null
  br i1 %214, label %226, label %215

215:                                              ; preds = %198, %215
  %216 = phi ptr [ %223, %215 ], [ %213, %198 ]
  %217 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %216, i64 0, i32 1
  %218 = load i32, ptr %217, align 4, !tbaa !22
  %219 = icmp ugt i32 %218, %177
  %220 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %216, i64 0, i32 2
  %221 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %216, i64 0, i32 3
  %222 = select i1 %219, ptr %220, ptr %221
  %223 = load ptr, ptr %222, align 8, !tbaa !21
  %224 = icmp eq ptr %223, null
  br i1 %224, label %225, label %215

225:                                              ; preds = %215
  br i1 %219, label %226, label %235

226:                                              ; preds = %225, %198
  %227 = phi ptr [ %216, %225 ], [ %212, %198 ]
  %228 = getelementptr inbounds i8, ptr %210, i64 24
  %229 = load ptr, ptr %228, align 8, !tbaa !457
  %230 = icmp eq ptr %227, %229
  br i1 %230, label %239, label %231

231:                                              ; preds = %226
  %232 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %227) #26
  %233 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %232, i64 0, i32 1
  %234 = load i32, ptr %233, align 4, !tbaa !22
  br label %235

235:                                              ; preds = %231, %225
  %236 = phi i32 [ %234, %231 ], [ %218, %225 ]
  %237 = phi ptr [ %227, %231 ], [ %216, %225 ]
  %238 = icmp ult i32 %236, %177
  br i1 %238, label %239, label %256

239:                                              ; preds = %235, %226
  %240 = phi ptr [ %227, %226 ], [ %237, %235 ]
  %241 = icmp eq ptr %212, %240
  br i1 %241, label %246, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %240, i64 0, i32 1
  %244 = load i32, ptr %243, align 4, !tbaa !22
  %245 = icmp ugt i32 %244, %177
  br label %246

246:                                              ; preds = %242, %239
  %247 = phi i1 [ true, %239 ], [ %245, %242 ]
  %248 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %249 unwind label %196

249:                                              ; preds = %246
  %250 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %248, i64 0, i32 1
  store i32 %177, ptr %250, align 4, !tbaa !22
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %247, ptr noundef nonnull %248, ptr noundef nonnull %240, ptr noundef nonnull align 8 dereferenceable(32) %212) #24
  %251 = getelementptr inbounds i8, ptr %210, i64 40
  %252 = load i64, ptr %251, align 8, !tbaa !458
  %253 = add i64 %252, 1
  store i64 %253, ptr %251, align 8, !tbaa !458
  %254 = load i32, ptr %47, align 4, !tbaa !22
  %255 = load ptr, ptr %12, align 8, !tbaa !72
  br label %256

256:                                              ; preds = %249, %235
  %257 = phi ptr [ %255, %249 ], [ %199, %235 ]
  %258 = phi ptr [ %255, %249 ], [ %200, %235 ]
  %259 = phi ptr [ %255, %249 ], [ %201, %235 ]
  %260 = phi i32 [ %254, %249 ], [ %202, %235 ]
  %261 = add i32 %205, 1
  %262 = zext i32 %261 to i64
  %263 = zext i32 %260 to i64
  %264 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %259, i64 %263, i32 1
  %265 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %264, i64 0, i32 1
  %266 = load ptr, ptr %265, align 8, !tbaa !31
  %267 = load ptr, ptr %264, align 8, !tbaa !32
  %268 = ptrtoint ptr %266 to i64
  %269 = ptrtoint ptr %267 to i64
  %270 = sub i64 %268, %269
  %271 = ashr exact i64 %270, 4
  %272 = icmp eq i64 %271, %262
  br i1 %272, label %407, label %198

273:                                              ; preds = %182, %295
  %274 = phi ptr [ %296, %295 ], [ %165, %182 ]
  %275 = phi ptr [ %297, %295 ], [ %166, %182 ]
  %276 = phi ptr [ %298, %295 ], [ %167, %182 ]
  %277 = phi i32 [ %299, %295 ], [ %168, %182 ]
  %278 = phi ptr [ %300, %295 ], [ %169, %182 ]
  %279 = phi i32 [ %301, %295 ], [ %170, %182 ]
  %280 = phi ptr [ %302, %295 ], [ %171, %182 ]
  %281 = phi i32 [ %303, %295 ], [ %172, %182 ]
  %282 = phi i32 [ %304, %295 ], [ %180, %182 ]
  %283 = phi ptr [ %302, %295 ], [ %173, %182 ]
  %284 = phi i32 [ %305, %295 ], [ %180, %182 ]
  %285 = phi i64 [ %307, %295 ], [ 0, %182 ]
  %286 = phi i32 [ %306, %295 ], [ 0, %182 ]
  %287 = zext i32 %284 to i64
  %288 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %283, i64 %287, i32 1
  %289 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %288, i64 0, i32 1
  %290 = load ptr, ptr %289, align 8, !tbaa !31
  %291 = load ptr, ptr %288, align 8, !tbaa !32
  %292 = icmp eq ptr %290, %291
  br i1 %292, label %295, label %320

293:                                              ; preds = %387
  %294 = load i32, ptr %47, align 4, !tbaa !22
  br label %295

295:                                              ; preds = %293, %273
  %296 = phi ptr [ %388, %293 ], [ %274, %273 ]
  %297 = phi ptr [ %389, %293 ], [ %275, %273 ]
  %298 = phi ptr [ %390, %293 ], [ %276, %273 ]
  %299 = phi i32 [ %294, %293 ], [ %277, %273 ]
  %300 = phi ptr [ %391, %293 ], [ %278, %273 ]
  %301 = phi i32 [ %294, %293 ], [ %279, %273 ]
  %302 = phi ptr [ %392, %293 ], [ %280, %273 ]
  %303 = phi i32 [ %294, %293 ], [ %281, %273 ]
  %304 = phi i32 [ %394, %293 ], [ %282, %273 ]
  %305 = phi i32 [ %394, %293 ], [ %284, %273 ]
  %306 = add i32 %286, 1
  %307 = zext i32 %306 to i64
  %308 = zext i32 %303 to i64
  %309 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %302, i64 %308, i32 1
  %310 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %309, i64 0, i32 1
  %311 = load ptr, ptr %310, align 8, !tbaa !31
  %312 = load ptr, ptr %309, align 8, !tbaa !32
  %313 = ptrtoint ptr %311 to i64
  %314 = ptrtoint ptr %312 to i64
  %315 = sub i64 %313, %314
  %316 = ashr exact i64 %315, 4
  %317 = icmp eq i64 %316, %307
  br i1 %317, label %407, label %273

318:                                              ; preds = %377
  %319 = landingpad { ptr, i32 }
          cleanup
  br label %431

320:                                              ; preds = %273, %387
  %321 = phi ptr [ %388, %387 ], [ %274, %273 ]
  %322 = phi ptr [ %389, %387 ], [ %275, %273 ]
  %323 = phi ptr [ %390, %387 ], [ %276, %273 ]
  %324 = phi ptr [ %391, %387 ], [ %278, %273 ]
  %325 = phi ptr [ %392, %387 ], [ %280, %273 ]
  %326 = phi ptr [ %393, %387 ], [ %283, %273 ]
  %327 = phi i32 [ %394, %387 ], [ %282, %273 ]
  %328 = phi ptr [ %401, %387 ], [ %291, %273 ]
  %329 = phi i64 [ %396, %387 ], [ 0, %273 ]
  %330 = phi i32 [ %395, %387 ], [ 0, %273 ]
  %331 = load i32, ptr %47, align 4, !tbaa !22
  %332 = zext i32 %331 to i64
  %333 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %326, i64 %332, i32 1
  %334 = load ptr, ptr %333, align 8, !tbaa !32
  %335 = getelementptr inbounds %"struct.std::pair", ptr %334, i64 %285
  %336 = load i32, ptr %335, align 8, !tbaa !37
  %337 = getelementptr inbounds %"struct.std::pair", ptr %328, i64 %329
  %338 = load i32, ptr %337, align 8, !tbaa !37
  %339 = zext i32 %336 to i64
  %340 = load ptr, ptr %23, align 8, !tbaa !455
  %341 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %340, i64 %339
  %342 = getelementptr inbounds i8, ptr %341, i64 16
  %343 = getelementptr inbounds i8, ptr %341, i64 8
  %344 = load ptr, ptr %342, align 8, !tbaa !21
  %345 = icmp eq ptr %344, null
  br i1 %345, label %357, label %346

346:                                              ; preds = %320, %346
  %347 = phi ptr [ %354, %346 ], [ %344, %320 ]
  %348 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %347, i64 0, i32 1
  %349 = load i32, ptr %348, align 4, !tbaa !22
  %350 = icmp ugt i32 %349, %338
  %351 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %347, i64 0, i32 2
  %352 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %347, i64 0, i32 3
  %353 = select i1 %350, ptr %351, ptr %352
  %354 = load ptr, ptr %353, align 8, !tbaa !21
  %355 = icmp eq ptr %354, null
  br i1 %355, label %356, label %346

356:                                              ; preds = %346
  br i1 %350, label %357, label %366

357:                                              ; preds = %356, %320
  %358 = phi ptr [ %347, %356 ], [ %343, %320 ]
  %359 = getelementptr inbounds i8, ptr %341, i64 24
  %360 = load ptr, ptr %359, align 8, !tbaa !457
  %361 = icmp eq ptr %358, %360
  br i1 %361, label %370, label %362

362:                                              ; preds = %357
  %363 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %358) #26
  %364 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %363, i64 0, i32 1
  %365 = load i32, ptr %364, align 4, !tbaa !22
  br label %366

366:                                              ; preds = %362, %356
  %367 = phi i32 [ %365, %362 ], [ %349, %356 ]
  %368 = phi ptr [ %358, %362 ], [ %347, %356 ]
  %369 = icmp ult i32 %367, %338
  br i1 %369, label %370, label %387

370:                                              ; preds = %366, %357
  %371 = phi ptr [ %358, %357 ], [ %368, %366 ]
  %372 = icmp eq ptr %343, %371
  br i1 %372, label %377, label %373

373:                                              ; preds = %370
  %374 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %371, i64 0, i32 1
  %375 = load i32, ptr %374, align 4, !tbaa !22
  %376 = icmp ugt i32 %375, %338
  br label %377

377:                                              ; preds = %373, %370
  %378 = phi i1 [ true, %370 ], [ %376, %373 ]
  %379 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %380 unwind label %318

380:                                              ; preds = %377
  %381 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %379, i64 0, i32 1
  store i32 %338, ptr %381, align 4, !tbaa !22
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %378, ptr noundef nonnull %379, ptr noundef nonnull %371, ptr noundef nonnull align 8 dereferenceable(32) %343) #24
  %382 = getelementptr inbounds i8, ptr %341, i64 40
  %383 = load i64, ptr %382, align 8, !tbaa !458
  %384 = add i64 %383, 1
  store i64 %384, ptr %382, align 8, !tbaa !458
  %385 = load i32, ptr %179, align 4, !tbaa !22
  %386 = load ptr, ptr %12, align 8, !tbaa !72
  br label %387

387:                                              ; preds = %380, %366
  %388 = phi ptr [ %386, %380 ], [ %321, %366 ]
  %389 = phi ptr [ %386, %380 ], [ %322, %366 ]
  %390 = phi ptr [ %386, %380 ], [ %323, %366 ]
  %391 = phi ptr [ %386, %380 ], [ %324, %366 ]
  %392 = phi ptr [ %386, %380 ], [ %325, %366 ]
  %393 = phi ptr [ %386, %380 ], [ %326, %366 ]
  %394 = phi i32 [ %385, %380 ], [ %327, %366 ]
  %395 = add i32 %330, 1
  %396 = zext i32 %395 to i64
  %397 = zext i32 %394 to i64
  %398 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %393, i64 %397, i32 1
  %399 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %398, i64 0, i32 1
  %400 = load ptr, ptr %399, align 8, !tbaa !31
  %401 = load ptr, ptr %398, align 8, !tbaa !32
  %402 = ptrtoint ptr %400 to i64
  %403 = ptrtoint ptr %401 to i64
  %404 = sub i64 %402, %403
  %405 = ashr exact i64 %404, 4
  %406 = icmp eq i64 %405, %396
  br i1 %406, label %293, label %320

407:                                              ; preds = %295, %256, %182, %189
  %408 = phi ptr [ %165, %182 ], [ %165, %189 ], [ %257, %256 ], [ %296, %295 ]
  %409 = phi ptr [ %166, %182 ], [ %166, %189 ], [ %258, %256 ], [ %297, %295 ]
  %410 = phi ptr [ %167, %182 ], [ %167, %189 ], [ %259, %256 ], [ %298, %295 ]
  %411 = phi i32 [ %168, %182 ], [ %168, %189 ], [ %260, %256 ], [ %299, %295 ]
  %412 = phi ptr [ %169, %182 ], [ %169, %189 ], [ %259, %256 ], [ %300, %295 ]
  %413 = phi i32 [ %170, %182 ], [ %170, %189 ], [ %260, %256 ], [ %301, %295 ]
  %414 = phi ptr [ %171, %182 ], [ %169, %189 ], [ %259, %256 ], [ %302, %295 ]
  %415 = phi i32 [ %172, %182 ], [ %170, %189 ], [ %260, %256 ], [ %303, %295 ]
  %416 = phi ptr [ %173, %182 ], [ %169, %189 ], [ %259, %256 ], [ %302, %295 ]
  %417 = phi i32 [ %174, %182 ], [ %170, %189 ], [ %260, %256 ], [ %303, %295 ]
  %418 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef %175) #26
  %419 = load ptr, ptr %23, align 8, !tbaa !455
  %420 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %419, i64 %46, i32 0, i32 0, i32 0, i32 1
  %421 = icmp eq ptr %418, %420
  br i1 %421, label %422, label %164

422:                                              ; preds = %407, %152, %163, %55
  %423 = phi ptr [ %40, %163 ], [ %40, %55 ], [ %154, %152 ], [ %408, %407 ]
  %424 = phi ptr [ %41, %163 ], [ %41, %55 ], [ %155, %152 ], [ %409, %407 ]
  %425 = phi ptr [ %42, %163 ], [ %42, %55 ], [ %156, %152 ], [ %410, %407 ]
  %426 = phi ptr [ %43, %163 ], [ %43, %55 ], [ %157, %152 ], [ %412, %407 ]
  %427 = phi ptr [ %44, %163 ], [ %44, %55 ], [ %158, %152 ], [ %414, %407 ]
  %428 = phi ptr [ %45, %163 ], [ %45, %55 ], [ %159, %152 ], [ %416, %407 ]
  %429 = add nuw nsw i64 %46, 1
  %430 = icmp eq i64 %429, %24
  br i1 %430, label %35, label %39

431:                                              ; preds = %318, %196, %148
  %432 = phi { ptr, i32 } [ %149, %148 ], [ %197, %196 ], [ %319, %318 ]
  %433 = icmp eq ptr %11, null
  br i1 %433, label %435, label %434

434:                                              ; preds = %431
  tail call void @_ZdlPv(ptr noundef nonnull %11) #23
  br label %435

435:                                              ; preds = %434, %431
  resume { ptr, i32 } %432
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK6dealii16ConstraintMatrix8condenseERNS_31CompressedSimpleSparsityPatternE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(104) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %1, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !739
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = zext i32 %4 to i64
  %8 = shl nuw nsw i64 %7, 2
  %9 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %8) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %9, i8 -1, i64 %8, i1 false), !tbaa !22
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi ptr [ null, %2 ], [ %9, %6 ]
  %12 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !70
  %15 = load ptr, ptr %12, align 8, !tbaa !72
  %16 = ptrtoint ptr %14 to i64
  %17 = ptrtoint ptr %15 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 40
  %20 = icmp eq ptr %14, %15
  br i1 %20, label %21, label %25

21:                                               ; preds = %25, %10
  br i1 %5, label %35, label %22

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %1, i64 0, i32 3
  %24 = zext i32 %4 to i64
  br label %39

25:                                               ; preds = %10, %25
  %26 = phi i64 [ %33, %25 ], [ 0, %10 ]
  %27 = phi i32 [ %32, %25 ], [ 0, %10 ]
  %28 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %15, i64 %26
  %29 = load i32, ptr %28, align 8, !tbaa !24
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i32, ptr %11, i64 %30
  store i32 %27, ptr %31, align 4, !tbaa !22
  %32 = add i32 %27, 1
  %33 = zext i32 %32 to i64
  %34 = icmp ugt i64 %19, %33
  br i1 %34, label %25, label %21

35:                                               ; preds = %21
  %36 = icmp eq ptr %11, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %723, %35
  tail call void @_ZdlPv(ptr noundef nonnull %11) #23
  br label %38

38:                                               ; preds = %35, %37
  ret void

39:                                               ; preds = %22, %723
  %40 = phi ptr [ %15, %22 ], [ %724, %723 ]
  %41 = phi ptr [ %15, %22 ], [ %725, %723 ]
  %42 = phi ptr [ %15, %22 ], [ %726, %723 ]
  %43 = phi ptr [ %15, %22 ], [ %727, %723 ]
  %44 = phi i64 [ 0, %22 ], [ %728, %723 ]
  %45 = getelementptr inbounds i32, ptr %11, i64 %44
  %46 = load i32, ptr %45, align 4, !tbaa !22
  %47 = icmp eq i32 %46, -1
  %48 = load ptr, ptr %23, align 8, !tbaa !472
  %49 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %48, i64 %44
  %50 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %49, i64 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !21
  %52 = load ptr, ptr %49, align 8, !tbaa !21
  %53 = ptrtoint ptr %51 to i64
  %54 = ptrtoint ptr %52 to i64
  %55 = sub i64 %53, %54
  br i1 %47, label %59, label %56

56:                                               ; preds = %39
  %57 = and i64 %55, 17179869180
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %723, label %284

59:                                               ; preds = %39
  %60 = lshr exact i64 %55, 2
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %723, label %63

63:                                               ; preds = %59, %266
  %64 = phi ptr [ %276, %266 ], [ %51, %59 ]
  %65 = phi ptr [ %267, %266 ], [ %48, %59 ]
  %66 = phi ptr [ %268, %266 ], [ %40, %59 ]
  %67 = phi ptr [ %269, %266 ], [ %41, %59 ]
  %68 = phi ptr [ %270, %266 ], [ %42, %59 ]
  %69 = phi ptr [ %271, %266 ], [ %43, %59 ]
  %70 = phi i32 [ %282, %266 ], [ %61, %59 ]
  %71 = phi ptr [ %277, %266 ], [ %52, %59 ]
  %72 = phi i32 [ %273, %266 ], [ 0, %59 ]
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i32, ptr %71, i64 %73
  %75 = load i32, ptr %74, align 4, !tbaa !22
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i32, ptr %11, i64 %76
  %78 = load i32, ptr %77, align 4, !tbaa !22
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %266, label %80

80:                                               ; preds = %63
  %81 = zext i32 %78 to i64
  %82 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %66, i64 %81, i32 1
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %82, i64 0, i32 1
  %84 = load ptr, ptr %83, align 8, !tbaa !31
  %85 = load ptr, ptr %82, align 8, !tbaa !32
  %86 = icmp eq ptr %84, %85
  br i1 %86, label %266, label %87

87:                                               ; preds = %80, %232
  %88 = phi ptr [ %237, %232 ], [ %71, %80 ]
  %89 = phi ptr [ %236, %232 ], [ %64, %80 ]
  %90 = phi ptr [ %233, %232 ], [ %65, %80 ]
  %91 = phi ptr [ %256, %232 ], [ %85, %80 ]
  %92 = phi i64 [ %249, %232 ], [ 0, %80 ]
  %93 = phi i32 [ %248, %232 ], [ 0, %80 ]
  %94 = phi i32 [ %242, %232 ], [ %70, %80 ]
  %95 = phi i32 [ %247, %232 ], [ %72, %80 ]
  %96 = getelementptr inbounds %"struct.std::pair", ptr %91, i64 %92
  %97 = load i32, ptr %96, align 8, !tbaa !37
  %98 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %90, i64 %44
  %99 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %98, i64 0, i32 1
  %100 = ptrtoint ptr %89 to i64
  %101 = ptrtoint ptr %88 to i64
  %102 = sub i64 %100, %101
  %103 = icmp eq ptr %89, %88
  br i1 %103, label %108, label %104

104:                                              ; preds = %87
  %105 = getelementptr inbounds i32, ptr %89, i64 -1
  %106 = load i32, ptr %105, align 4, !tbaa !22
  %107 = icmp ult i32 %106, %97
  br i1 %107, label %108, label %146

108:                                              ; preds = %104, %87
  %109 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %98, i64 0, i32 2
  %110 = load ptr, ptr %109, align 8, !tbaa !417
  %111 = icmp eq ptr %89, %110
  br i1 %111, label %114, label %112

112:                                              ; preds = %108
  store i32 %97, ptr %89, align 4, !tbaa !22
  %113 = getelementptr inbounds i32, ptr %89, i64 1
  store ptr %113, ptr %99, align 8, !tbaa !313
  br label %232

114:                                              ; preds = %108
  %115 = icmp eq i64 %102, 9223372036854775804
  br i1 %115, label %191, label %116

116:                                              ; preds = %114
  %117 = ashr exact i64 %102, 2
  %118 = tail call i64 @llvm.umax.i64(i64 %117, i64 1)
  %119 = add i64 %118, %117
  %120 = icmp ult i64 %119, %117
  %121 = icmp ugt i64 %119, 2305843009213693951
  %122 = or i1 %120, %121
  %123 = select i1 %122, i64 2305843009213693951, i64 %119
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %116
  %126 = shl nuw nsw i64 %123, 2
  %127 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %126) #21
          to label %128 unwind label %262

128:                                              ; preds = %125, %116
  %129 = phi ptr [ null, %116 ], [ %127, %125 ]
  %130 = getelementptr inbounds i32, ptr %129, i64 %117
  store i32 %97, ptr %130, align 4, !tbaa !22
  %131 = icmp sgt i64 %102, 4
  br i1 %131, label %132, label %133, !prof !23

132:                                              ; preds = %128
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %129, ptr align 4 %88, i64 %102, i1 false)
  br label %138

133:                                              ; preds = %128
  %134 = icmp eq i64 %102, 4
  br i1 %134, label %135, label %138

135:                                              ; preds = %133
  %136 = load i32, ptr %88, align 4, !tbaa !22
  store i32 %136, ptr %129, align 4, !tbaa !22
  %137 = getelementptr inbounds i32, ptr %130, i64 1
  br label %141

138:                                              ; preds = %133, %132
  %139 = getelementptr inbounds i32, ptr %130, i64 1
  %140 = icmp eq ptr %88, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %135, %138
  %142 = phi ptr [ %137, %135 ], [ %139, %138 ]
  tail call void @_ZdlPv(ptr noundef nonnull %88) #23
  br label %143

143:                                              ; preds = %141, %138
  %144 = phi ptr [ %139, %138 ], [ %142, %141 ]
  store ptr %129, ptr %98, align 8, !tbaa !58
  store ptr %144, ptr %99, align 8, !tbaa !313
  %145 = getelementptr inbounds i32, ptr %129, i64 %123
  store ptr %145, ptr %109, align 8, !tbaa !417
  br label %232

146:                                              ; preds = %104
  %147 = icmp sgt i64 %102, 0
  br i1 %147, label %148, label %163

148:                                              ; preds = %146
  %149 = lshr exact i64 %102, 2
  br label %150

150:                                              ; preds = %150, %148
  %151 = phi i64 [ %149, %148 ], [ %161, %150 ]
  %152 = phi ptr [ %88, %148 ], [ %160, %150 ]
  %153 = lshr i64 %151, 1
  %154 = getelementptr inbounds i32, ptr %152, i64 %153
  %155 = load i32, ptr %154, align 4, !tbaa !22
  %156 = icmp ult i32 %155, %97
  %157 = getelementptr inbounds i32, ptr %154, i64 1
  %158 = xor i64 %153, -1
  %159 = add nsw i64 %151, %158
  %160 = select i1 %156, ptr %157, ptr %152
  %161 = select i1 %156, i64 %159, i64 %153
  %162 = icmp sgt i64 %161, 0
  br i1 %162, label %150, label %163

163:                                              ; preds = %150, %146
  %164 = phi ptr [ %88, %146 ], [ %160, %150 ]
  %165 = load i32, ptr %164, align 4, !tbaa !22
  %166 = icmp eq i32 %165, %97
  br i1 %166, label %232, label %167

167:                                              ; preds = %163
  %168 = ptrtoint ptr %164 to i64
  %169 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %98, i64 0, i32 2
  %170 = load ptr, ptr %169, align 8, !tbaa !417
  %171 = icmp eq ptr %89, %170
  br i1 %171, label %189, label %172

172:                                              ; preds = %167
  %173 = icmp eq ptr %89, %164
  %174 = getelementptr inbounds i32, ptr %89, i64 1
  br i1 %173, label %175, label %176

175:                                              ; preds = %172
  store i32 %97, ptr %89, align 4, !tbaa !22
  store ptr %174, ptr %99, align 8, !tbaa !313
  br label %232

176:                                              ; preds = %172
  store i32 %106, ptr %89, align 4, !tbaa !22
  store ptr %174, ptr %99, align 8, !tbaa !313
  %177 = ptrtoint ptr %105 to i64
  %178 = sub i64 %177, %168
  %179 = icmp sgt i64 %178, 4
  br i1 %179, label %180, label %184, !prof !23

180:                                              ; preds = %176
  %181 = lshr exact i64 %178, 2
  %182 = sub nsw i64 0, %181
  %183 = getelementptr inbounds i32, ptr %89, i64 %182
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %183, ptr nonnull align 4 %164, i64 %178, i1 false)
  br label %188

184:                                              ; preds = %176
  %185 = icmp eq i64 %178, 4
  br i1 %185, label %186, label %188

186:                                              ; preds = %184
  %187 = load i32, ptr %164, align 4, !tbaa !22
  store i32 %187, ptr %105, align 4, !tbaa !22
  br label %188

188:                                              ; preds = %186, %184, %180
  store i32 %97, ptr %164, align 4, !tbaa !22
  br label %232

189:                                              ; preds = %167
  %190 = icmp eq i64 %102, 9223372036854775804
  br i1 %190, label %191, label %193

191:                                              ; preds = %189, %114
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %192 unwind label %264

192:                                              ; preds = %191
  unreachable

193:                                              ; preds = %189
  %194 = ashr exact i64 %102, 2
  %195 = tail call i64 @llvm.umax.i64(i64 %194, i64 1)
  %196 = add i64 %195, %194
  %197 = icmp ult i64 %196, %194
  %198 = icmp ugt i64 %196, 2305843009213693951
  %199 = or i1 %197, %198
  %200 = select i1 %199, i64 2305843009213693951, i64 %196
  %201 = sub i64 %168, %101
  %202 = ashr exact i64 %201, 2
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %207, label %204

204:                                              ; preds = %193
  %205 = shl nuw nsw i64 %200, 2
  %206 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %205) #21
          to label %207 unwind label %262

207:                                              ; preds = %204, %193
  %208 = phi ptr [ null, %193 ], [ %206, %204 ]
  %209 = getelementptr inbounds i32, ptr %208, i64 %202
  store i32 %97, ptr %209, align 4, !tbaa !22
  %210 = icmp sgt i64 %201, 4
  br i1 %210, label %211, label %212, !prof !23

211:                                              ; preds = %207
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %208, ptr align 4 %88, i64 %201, i1 false)
  br label %216

212:                                              ; preds = %207
  %213 = icmp eq i64 %201, 4
  br i1 %213, label %214, label %216

214:                                              ; preds = %212
  %215 = load i32, ptr %88, align 4, !tbaa !22
  store i32 %215, ptr %208, align 4, !tbaa !22
  br label %216

216:                                              ; preds = %214, %212, %211
  %217 = getelementptr inbounds i32, ptr %209, i64 1
  %218 = sub i64 %100, %168
  %219 = icmp sgt i64 %218, 4
  br i1 %219, label %220, label %221, !prof !23

220:                                              ; preds = %216
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %217, ptr nonnull align 4 %164, i64 %218, i1 false)
  br label %225

221:                                              ; preds = %216
  %222 = icmp eq i64 %218, 4
  br i1 %222, label %223, label %225

223:                                              ; preds = %221
  %224 = load i32, ptr %164, align 4, !tbaa !22
  store i32 %224, ptr %217, align 4, !tbaa !22
  br label %225

225:                                              ; preds = %223, %221, %220
  %226 = icmp eq ptr %88, null
  br i1 %226, label %228, label %227

227:                                              ; preds = %225
  tail call void @_ZdlPv(ptr noundef nonnull %88) #23
  br label %228

228:                                              ; preds = %227, %225
  %229 = ashr exact i64 %218, 2
  %230 = getelementptr inbounds i32, ptr %217, i64 %229
  store ptr %208, ptr %98, align 8, !tbaa !58
  store ptr %230, ptr %99, align 8, !tbaa !313
  %231 = getelementptr inbounds i32, ptr %208, i64 %200
  store ptr %231, ptr %169, align 8, !tbaa !417
  br label %232

232:                                              ; preds = %112, %143, %163, %175, %188, %228
  %233 = load ptr, ptr %23, align 8, !tbaa !472
  %234 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %233, i64 %44
  %235 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %234, i64 0, i32 1
  %236 = load ptr, ptr %235, align 8, !tbaa !21
  %237 = load ptr, ptr %234, align 8, !tbaa !21
  %238 = ptrtoint ptr %236 to i64
  %239 = ptrtoint ptr %237 to i64
  %240 = sub i64 %238, %239
  %241 = lshr exact i64 %240, 2
  %242 = trunc i64 %241 to i32
  %243 = icmp ult i32 %97, %75
  %244 = icmp ne i32 %94, %242
  %245 = and i1 %243, %244
  %246 = zext i1 %245 to i32
  %247 = add i32 %95, %246
  %248 = add i32 %93, 1
  %249 = zext i32 %248 to i64
  %250 = load i32, ptr %77, align 4, !tbaa !22
  %251 = zext i32 %250 to i64
  %252 = load ptr, ptr %12, align 8, !tbaa !72
  %253 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %252, i64 %251, i32 1
  %254 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %253, i64 0, i32 1
  %255 = load ptr, ptr %254, align 8, !tbaa !31
  %256 = load ptr, ptr %253, align 8, !tbaa !32
  %257 = ptrtoint ptr %255 to i64
  %258 = ptrtoint ptr %256 to i64
  %259 = sub i64 %257, %258
  %260 = ashr exact i64 %259, 4
  %261 = icmp eq i64 %260, %249
  br i1 %261, label %266, label %87

262:                                              ; preds = %204, %125
  %263 = landingpad { ptr, i32 }
          cleanup
  br label %730

264:                                              ; preds = %191
  %265 = landingpad { ptr, i32 }
          cleanup
  br label %730

266:                                              ; preds = %232, %80, %63
  %267 = phi ptr [ %65, %63 ], [ %65, %80 ], [ %233, %232 ]
  %268 = phi ptr [ %66, %63 ], [ %66, %80 ], [ %252, %232 ]
  %269 = phi ptr [ %67, %63 ], [ %66, %80 ], [ %252, %232 ]
  %270 = phi ptr [ %68, %63 ], [ %66, %80 ], [ %252, %232 ]
  %271 = phi ptr [ %69, %63 ], [ %66, %80 ], [ %252, %232 ]
  %272 = phi i32 [ %72, %63 ], [ %72, %80 ], [ %247, %232 ]
  %273 = add i32 %272, 1
  %274 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %267, i64 %44
  %275 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %274, i64 0, i32 1
  %276 = load ptr, ptr %275, align 8, !tbaa !21
  %277 = load ptr, ptr %274, align 8, !tbaa !21
  %278 = ptrtoint ptr %276 to i64
  %279 = ptrtoint ptr %277 to i64
  %280 = sub i64 %278, %279
  %281 = lshr exact i64 %280, 2
  %282 = trunc i64 %281 to i32
  %283 = icmp ult i32 %273, %282
  br i1 %283, label %63, label %723

284:                                              ; preds = %56, %703
  %285 = phi ptr [ %704, %703 ], [ %40, %56 ]
  %286 = phi ptr [ %705, %703 ], [ %48, %56 ]
  %287 = phi ptr [ %706, %703 ], [ %41, %56 ]
  %288 = phi i32 [ %707, %703 ], [ %46, %56 ]
  %289 = phi ptr [ %708, %703 ], [ %42, %56 ]
  %290 = phi i32 [ %709, %703 ], [ %46, %56 ]
  %291 = phi ptr [ %710, %703 ], [ %43, %56 ]
  %292 = phi i32 [ %711, %703 ], [ %46, %56 ]
  %293 = phi i64 [ %712, %703 ], [ 0, %56 ]
  %294 = phi ptr [ %716, %703 ], [ %52, %56 ]
  %295 = getelementptr inbounds i32, ptr %294, i64 %293
  %296 = load i32, ptr %295, align 4, !tbaa !22
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds i32, ptr %11, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !22
  %300 = icmp eq i32 %299, -1
  br i1 %300, label %308, label %301

301:                                              ; preds = %284
  %302 = zext i32 %292 to i64
  %303 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %291, i64 %302, i32 1
  %304 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %303, i64 0, i32 1
  %305 = load ptr, ptr %304, align 8, !tbaa !31
  %306 = load ptr, ptr %303, align 8, !tbaa !32
  %307 = icmp eq ptr %305, %306
  br i1 %307, label %703, label %478

308:                                              ; preds = %284
  %309 = zext i32 %288 to i64
  %310 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %287, i64 %309, i32 1
  %311 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %310, i64 0, i32 1
  %312 = load ptr, ptr %311, align 8, !tbaa !31
  %313 = load ptr, ptr %310, align 8, !tbaa !32
  %314 = icmp eq ptr %312, %313
  br i1 %314, label %703, label %319

315:                                              ; preds = %435, %356
  %316 = landingpad { ptr, i32 }
          cleanup
  br label %730

317:                                              ; preds = %422
  %318 = landingpad { ptr, i32 }
          cleanup
  br label %730

319:                                              ; preds = %308, %463
  %320 = phi ptr [ %472, %463 ], [ %313, %308 ]
  %321 = phi i64 [ %465, %463 ], [ 0, %308 ]
  %322 = phi i32 [ %464, %463 ], [ 0, %308 ]
  %323 = getelementptr inbounds %"struct.std::pair", ptr %320, i64 %321
  %324 = load i32, ptr %323, align 8, !tbaa !37
  %325 = zext i32 %324 to i64
  %326 = load ptr, ptr %23, align 8, !tbaa !472
  %327 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %326, i64 %325
  %328 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %327, i64 0, i32 1
  %329 = load ptr, ptr %328, align 8, !tbaa !21
  %330 = load ptr, ptr %327, align 8, !tbaa !21
  %331 = ptrtoint ptr %329 to i64
  %332 = ptrtoint ptr %330 to i64
  %333 = sub i64 %331, %332
  %334 = icmp eq ptr %329, %330
  br i1 %334, label %339, label %335

335:                                              ; preds = %319
  %336 = getelementptr inbounds i32, ptr %329, i64 -1
  %337 = load i32, ptr %336, align 4, !tbaa !22
  %338 = icmp ult i32 %337, %296
  br i1 %338, label %339, label %377

339:                                              ; preds = %335, %319
  %340 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %327, i64 0, i32 2
  %341 = load ptr, ptr %340, align 8, !tbaa !417
  %342 = icmp eq ptr %329, %341
  br i1 %342, label %345, label %343

343:                                              ; preds = %339
  store i32 %296, ptr %329, align 4, !tbaa !22
  %344 = getelementptr inbounds i32, ptr %329, i64 1
  store ptr %344, ptr %328, align 8, !tbaa !313
  br label %463

345:                                              ; preds = %339
  %346 = icmp eq i64 %333, 9223372036854775804
  br i1 %346, label %422, label %347

347:                                              ; preds = %345
  %348 = ashr exact i64 %333, 2
  %349 = tail call i64 @llvm.umax.i64(i64 %348, i64 1)
  %350 = add i64 %349, %348
  %351 = icmp ult i64 %350, %348
  %352 = icmp ugt i64 %350, 2305843009213693951
  %353 = or i1 %351, %352
  %354 = select i1 %353, i64 2305843009213693951, i64 %350
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %359, label %356

356:                                              ; preds = %347
  %357 = shl nuw nsw i64 %354, 2
  %358 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %357) #21
          to label %359 unwind label %315

359:                                              ; preds = %356, %347
  %360 = phi ptr [ null, %347 ], [ %358, %356 ]
  %361 = getelementptr inbounds i32, ptr %360, i64 %348
  store i32 %296, ptr %361, align 4, !tbaa !22
  %362 = icmp sgt i64 %333, 4
  br i1 %362, label %363, label %364, !prof !23

363:                                              ; preds = %359
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %360, ptr align 4 %330, i64 %333, i1 false)
  br label %369

364:                                              ; preds = %359
  %365 = icmp eq i64 %333, 4
  br i1 %365, label %366, label %369

366:                                              ; preds = %364
  %367 = load i32, ptr %330, align 4, !tbaa !22
  store i32 %367, ptr %360, align 4, !tbaa !22
  %368 = getelementptr inbounds i32, ptr %361, i64 1
  br label %372

369:                                              ; preds = %364, %363
  %370 = getelementptr inbounds i32, ptr %361, i64 1
  %371 = icmp eq ptr %330, null
  br i1 %371, label %374, label %372

372:                                              ; preds = %366, %369
  %373 = phi ptr [ %368, %366 ], [ %370, %369 ]
  tail call void @_ZdlPv(ptr noundef nonnull %330) #23
  br label %374

374:                                              ; preds = %372, %369
  %375 = phi ptr [ %370, %369 ], [ %373, %372 ]
  store ptr %360, ptr %327, align 8, !tbaa !58
  store ptr %375, ptr %328, align 8, !tbaa !313
  %376 = getelementptr inbounds i32, ptr %360, i64 %354
  store ptr %376, ptr %340, align 8, !tbaa !417
  br label %463

377:                                              ; preds = %335
  %378 = icmp sgt i64 %333, 0
  br i1 %378, label %379, label %394

379:                                              ; preds = %377
  %380 = lshr exact i64 %333, 2
  br label %381

381:                                              ; preds = %381, %379
  %382 = phi i64 [ %380, %379 ], [ %392, %381 ]
  %383 = phi ptr [ %330, %379 ], [ %391, %381 ]
  %384 = lshr i64 %382, 1
  %385 = getelementptr inbounds i32, ptr %383, i64 %384
  %386 = load i32, ptr %385, align 4, !tbaa !22
  %387 = icmp ult i32 %386, %296
  %388 = getelementptr inbounds i32, ptr %385, i64 1
  %389 = xor i64 %384, -1
  %390 = add nsw i64 %382, %389
  %391 = select i1 %387, ptr %388, ptr %383
  %392 = select i1 %387, i64 %390, i64 %384
  %393 = icmp sgt i64 %392, 0
  br i1 %393, label %381, label %394

394:                                              ; preds = %381, %377
  %395 = phi ptr [ %330, %377 ], [ %391, %381 ]
  %396 = load i32, ptr %395, align 4, !tbaa !22
  %397 = icmp eq i32 %396, %296
  br i1 %397, label %463, label %398

398:                                              ; preds = %394
  %399 = ptrtoint ptr %395 to i64
  %400 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %327, i64 0, i32 2
  %401 = load ptr, ptr %400, align 8, !tbaa !417
  %402 = icmp eq ptr %329, %401
  br i1 %402, label %420, label %403

403:                                              ; preds = %398
  %404 = icmp eq ptr %329, %395
  %405 = getelementptr inbounds i32, ptr %329, i64 1
  br i1 %404, label %406, label %407

406:                                              ; preds = %403
  store i32 %296, ptr %329, align 4, !tbaa !22
  store ptr %405, ptr %328, align 8, !tbaa !313
  br label %463

407:                                              ; preds = %403
  store i32 %337, ptr %329, align 4, !tbaa !22
  store ptr %405, ptr %328, align 8, !tbaa !313
  %408 = ptrtoint ptr %336 to i64
  %409 = sub i64 %408, %399
  %410 = icmp sgt i64 %409, 4
  br i1 %410, label %411, label %415, !prof !23

411:                                              ; preds = %407
  %412 = lshr exact i64 %409, 2
  %413 = sub nsw i64 0, %412
  %414 = getelementptr inbounds i32, ptr %329, i64 %413
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %414, ptr nonnull align 4 %395, i64 %409, i1 false)
  br label %419

415:                                              ; preds = %407
  %416 = icmp eq i64 %409, 4
  br i1 %416, label %417, label %419

417:                                              ; preds = %415
  %418 = load i32, ptr %395, align 4, !tbaa !22
  store i32 %418, ptr %336, align 4, !tbaa !22
  br label %419

419:                                              ; preds = %417, %415, %411
  store i32 %296, ptr %395, align 4, !tbaa !22
  br label %463

420:                                              ; preds = %398
  %421 = icmp eq i64 %333, 9223372036854775804
  br i1 %421, label %422, label %424

422:                                              ; preds = %420, %345
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %423 unwind label %317

423:                                              ; preds = %422
  unreachable

424:                                              ; preds = %420
  %425 = ashr exact i64 %333, 2
  %426 = tail call i64 @llvm.umax.i64(i64 %425, i64 1)
  %427 = add i64 %426, %425
  %428 = icmp ult i64 %427, %425
  %429 = icmp ugt i64 %427, 2305843009213693951
  %430 = or i1 %428, %429
  %431 = select i1 %430, i64 2305843009213693951, i64 %427
  %432 = sub i64 %399, %332
  %433 = ashr exact i64 %432, 2
  %434 = icmp eq i64 %431, 0
  br i1 %434, label %438, label %435

435:                                              ; preds = %424
  %436 = shl nuw nsw i64 %431, 2
  %437 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %436) #21
          to label %438 unwind label %315

438:                                              ; preds = %435, %424
  %439 = phi ptr [ null, %424 ], [ %437, %435 ]
  %440 = getelementptr inbounds i32, ptr %439, i64 %433
  store i32 %296, ptr %440, align 4, !tbaa !22
  %441 = icmp sgt i64 %432, 4
  br i1 %441, label %442, label %443, !prof !23

442:                                              ; preds = %438
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %439, ptr align 4 %330, i64 %432, i1 false)
  br label %447

443:                                              ; preds = %438
  %444 = icmp eq i64 %432, 4
  br i1 %444, label %445, label %447

445:                                              ; preds = %443
  %446 = load i32, ptr %330, align 4, !tbaa !22
  store i32 %446, ptr %439, align 4, !tbaa !22
  br label %447

447:                                              ; preds = %445, %443, %442
  %448 = getelementptr inbounds i32, ptr %440, i64 1
  %449 = sub i64 %331, %399
  %450 = icmp sgt i64 %449, 4
  br i1 %450, label %451, label %452, !prof !23

451:                                              ; preds = %447
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %448, ptr nonnull align 4 %395, i64 %449, i1 false)
  br label %456

452:                                              ; preds = %447
  %453 = icmp eq i64 %449, 4
  br i1 %453, label %454, label %456

454:                                              ; preds = %452
  %455 = load i32, ptr %395, align 4, !tbaa !22
  store i32 %455, ptr %448, align 4, !tbaa !22
  br label %456

456:                                              ; preds = %454, %452, %451
  %457 = icmp eq ptr %330, null
  br i1 %457, label %459, label %458

458:                                              ; preds = %456
  tail call void @_ZdlPv(ptr noundef nonnull %330) #23
  br label %459

459:                                              ; preds = %458, %456
  %460 = ashr exact i64 %449, 2
  %461 = getelementptr inbounds i32, ptr %448, i64 %460
  store ptr %439, ptr %327, align 8, !tbaa !58
  store ptr %461, ptr %328, align 8, !tbaa !313
  %462 = getelementptr inbounds i32, ptr %439, i64 %431
  store ptr %462, ptr %400, align 8, !tbaa !417
  br label %463

463:                                              ; preds = %459, %419, %406, %394, %374, %343
  %464 = add i32 %322, 1
  %465 = zext i32 %464 to i64
  %466 = load i32, ptr %45, align 4, !tbaa !22
  %467 = zext i32 %466 to i64
  %468 = load ptr, ptr %12, align 8, !tbaa !72
  %469 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %468, i64 %467, i32 1
  %470 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %469, i64 0, i32 1
  %471 = load ptr, ptr %470, align 8, !tbaa !31
  %472 = load ptr, ptr %469, align 8, !tbaa !32
  %473 = ptrtoint ptr %471 to i64
  %474 = ptrtoint ptr %472 to i64
  %475 = sub i64 %473, %474
  %476 = ashr exact i64 %475, 4
  %477 = icmp eq i64 %476, %465
  br i1 %477, label %701, label %319

478:                                              ; preds = %301, %504
  %479 = phi ptr [ %505, %504 ], [ %285, %301 ]
  %480 = phi ptr [ %506, %504 ], [ %286, %301 ]
  %481 = phi ptr [ %507, %504 ], [ %287, %301 ]
  %482 = phi i32 [ %508, %504 ], [ %288, %301 ]
  %483 = phi ptr [ %509, %504 ], [ %289, %301 ]
  %484 = phi i32 [ %510, %504 ], [ %290, %301 ]
  %485 = phi ptr [ %509, %504 ], [ %291, %301 ]
  %486 = phi ptr [ %511, %504 ], [ %286, %301 ]
  %487 = phi i64 [ %513, %504 ], [ 0, %301 ]
  %488 = phi i32 [ %512, %504 ], [ 0, %301 ]
  %489 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %486, i64 %44
  %490 = load ptr, ptr %489, align 8, !tbaa !58
  %491 = getelementptr inbounds i32, ptr %490, i64 %293
  %492 = load i32, ptr %491, align 4, !tbaa !22
  %493 = zext i32 %492 to i64
  %494 = getelementptr inbounds i32, ptr %11, i64 %493
  %495 = load i32, ptr %494, align 4, !tbaa !22
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %485, i64 %496, i32 1
  %498 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %497, i64 0, i32 1
  %499 = load ptr, ptr %498, align 8, !tbaa !31
  %500 = load ptr, ptr %497, align 8, !tbaa !32
  %501 = icmp eq ptr %499, %500
  br i1 %501, label %504, label %528

502:                                              ; preds = %679
  %503 = load i32, ptr %45, align 4, !tbaa !22
  br label %504

504:                                              ; preds = %502, %478
  %505 = phi ptr [ %691, %502 ], [ %479, %478 ]
  %506 = phi ptr [ %682, %502 ], [ %480, %478 ]
  %507 = phi ptr [ %691, %502 ], [ %481, %478 ]
  %508 = phi i32 [ %503, %502 ], [ %482, %478 ]
  %509 = phi ptr [ %691, %502 ], [ %483, %478 ]
  %510 = phi i32 [ %503, %502 ], [ %484, %478 ]
  %511 = phi ptr [ %682, %502 ], [ %486, %478 ]
  %512 = add i32 %488, 1
  %513 = zext i32 %512 to i64
  %514 = zext i32 %510 to i64
  %515 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %509, i64 %514, i32 1
  %516 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %515, i64 0, i32 1
  %517 = load ptr, ptr %516, align 8, !tbaa !31
  %518 = load ptr, ptr %515, align 8, !tbaa !32
  %519 = ptrtoint ptr %517 to i64
  %520 = ptrtoint ptr %518 to i64
  %521 = sub i64 %519, %520
  %522 = ashr exact i64 %521, 4
  %523 = icmp eq i64 %522, %513
  br i1 %523, label %703, label %478

524:                                              ; preds = %651, %572
  %525 = landingpad { ptr, i32 }
          cleanup
  br label %730

526:                                              ; preds = %638
  %527 = landingpad { ptr, i32 }
          cleanup
  br label %730

528:                                              ; preds = %478, %679
  %529 = phi ptr [ %695, %679 ], [ %500, %478 ]
  %530 = phi ptr [ %691, %679 ], [ %485, %478 ]
  %531 = phi ptr [ %682, %679 ], [ %486, %478 ]
  %532 = phi i64 [ %681, %679 ], [ 0, %478 ]
  %533 = phi i32 [ %680, %679 ], [ 0, %478 ]
  %534 = load i32, ptr %45, align 4, !tbaa !22
  %535 = zext i32 %534 to i64
  %536 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %530, i64 %535, i32 1
  %537 = load ptr, ptr %536, align 8, !tbaa !32
  %538 = getelementptr inbounds %"struct.std::pair", ptr %537, i64 %487
  %539 = load i32, ptr %538, align 8, !tbaa !37
  %540 = getelementptr inbounds %"struct.std::pair", ptr %529, i64 %532
  %541 = load i32, ptr %540, align 8, !tbaa !37
  %542 = zext i32 %539 to i64
  %543 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %531, i64 %542
  %544 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %543, i64 0, i32 1
  %545 = load ptr, ptr %544, align 8, !tbaa !21
  %546 = load ptr, ptr %543, align 8, !tbaa !21
  %547 = ptrtoint ptr %545 to i64
  %548 = ptrtoint ptr %546 to i64
  %549 = sub i64 %547, %548
  %550 = icmp eq ptr %545, %546
  br i1 %550, label %555, label %551

551:                                              ; preds = %528
  %552 = getelementptr inbounds i32, ptr %545, i64 -1
  %553 = load i32, ptr %552, align 4, !tbaa !22
  %554 = icmp ult i32 %553, %541
  br i1 %554, label %555, label %593

555:                                              ; preds = %551, %528
  %556 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %543, i64 0, i32 2
  %557 = load ptr, ptr %556, align 8, !tbaa !417
  %558 = icmp eq ptr %545, %557
  br i1 %558, label %561, label %559

559:                                              ; preds = %555
  store i32 %541, ptr %545, align 4, !tbaa !22
  %560 = getelementptr inbounds i32, ptr %545, i64 1
  store ptr %560, ptr %544, align 8, !tbaa !313
  br label %679

561:                                              ; preds = %555
  %562 = icmp eq i64 %549, 9223372036854775804
  br i1 %562, label %638, label %563

563:                                              ; preds = %561
  %564 = ashr exact i64 %549, 2
  %565 = tail call i64 @llvm.umax.i64(i64 %564, i64 1)
  %566 = add i64 %565, %564
  %567 = icmp ult i64 %566, %564
  %568 = icmp ugt i64 %566, 2305843009213693951
  %569 = or i1 %567, %568
  %570 = select i1 %569, i64 2305843009213693951, i64 %566
  %571 = icmp eq i64 %570, 0
  br i1 %571, label %575, label %572

572:                                              ; preds = %563
  %573 = shl nuw nsw i64 %570, 2
  %574 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %573) #21
          to label %575 unwind label %524

575:                                              ; preds = %572, %563
  %576 = phi ptr [ null, %563 ], [ %574, %572 ]
  %577 = getelementptr inbounds i32, ptr %576, i64 %564
  store i32 %541, ptr %577, align 4, !tbaa !22
  %578 = icmp sgt i64 %549, 4
  br i1 %578, label %579, label %580, !prof !23

579:                                              ; preds = %575
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %576, ptr align 4 %546, i64 %549, i1 false)
  br label %585

580:                                              ; preds = %575
  %581 = icmp eq i64 %549, 4
  br i1 %581, label %582, label %585

582:                                              ; preds = %580
  %583 = load i32, ptr %546, align 4, !tbaa !22
  store i32 %583, ptr %576, align 4, !tbaa !22
  %584 = getelementptr inbounds i32, ptr %577, i64 1
  br label %588

585:                                              ; preds = %580, %579
  %586 = getelementptr inbounds i32, ptr %577, i64 1
  %587 = icmp eq ptr %546, null
  br i1 %587, label %590, label %588

588:                                              ; preds = %582, %585
  %589 = phi ptr [ %584, %582 ], [ %586, %585 ]
  tail call void @_ZdlPv(ptr noundef nonnull %546) #23
  br label %590

590:                                              ; preds = %588, %585
  %591 = phi ptr [ %586, %585 ], [ %589, %588 ]
  store ptr %576, ptr %543, align 8, !tbaa !58
  store ptr %591, ptr %544, align 8, !tbaa !313
  %592 = getelementptr inbounds i32, ptr %576, i64 %570
  store ptr %592, ptr %556, align 8, !tbaa !417
  br label %679

593:                                              ; preds = %551
  %594 = icmp sgt i64 %549, 0
  br i1 %594, label %595, label %610

595:                                              ; preds = %593
  %596 = lshr exact i64 %549, 2
  br label %597

597:                                              ; preds = %597, %595
  %598 = phi i64 [ %596, %595 ], [ %608, %597 ]
  %599 = phi ptr [ %546, %595 ], [ %607, %597 ]
  %600 = lshr i64 %598, 1
  %601 = getelementptr inbounds i32, ptr %599, i64 %600
  %602 = load i32, ptr %601, align 4, !tbaa !22
  %603 = icmp ult i32 %602, %541
  %604 = getelementptr inbounds i32, ptr %601, i64 1
  %605 = xor i64 %600, -1
  %606 = add nsw i64 %598, %605
  %607 = select i1 %603, ptr %604, ptr %599
  %608 = select i1 %603, i64 %606, i64 %600
  %609 = icmp sgt i64 %608, 0
  br i1 %609, label %597, label %610

610:                                              ; preds = %597, %593
  %611 = phi ptr [ %546, %593 ], [ %607, %597 ]
  %612 = load i32, ptr %611, align 4, !tbaa !22
  %613 = icmp eq i32 %612, %541
  br i1 %613, label %679, label %614

614:                                              ; preds = %610
  %615 = ptrtoint ptr %611 to i64
  %616 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %543, i64 0, i32 2
  %617 = load ptr, ptr %616, align 8, !tbaa !417
  %618 = icmp eq ptr %545, %617
  br i1 %618, label %636, label %619

619:                                              ; preds = %614
  %620 = icmp eq ptr %545, %611
  %621 = getelementptr inbounds i32, ptr %545, i64 1
  br i1 %620, label %622, label %623

622:                                              ; preds = %619
  store i32 %541, ptr %545, align 4, !tbaa !22
  store ptr %621, ptr %544, align 8, !tbaa !313
  br label %679

623:                                              ; preds = %619
  store i32 %553, ptr %545, align 4, !tbaa !22
  store ptr %621, ptr %544, align 8, !tbaa !313
  %624 = ptrtoint ptr %552 to i64
  %625 = sub i64 %624, %615
  %626 = icmp sgt i64 %625, 4
  br i1 %626, label %627, label %631, !prof !23

627:                                              ; preds = %623
  %628 = lshr exact i64 %625, 2
  %629 = sub nsw i64 0, %628
  %630 = getelementptr inbounds i32, ptr %545, i64 %629
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %630, ptr nonnull align 4 %611, i64 %625, i1 false)
  br label %635

631:                                              ; preds = %623
  %632 = icmp eq i64 %625, 4
  br i1 %632, label %633, label %635

633:                                              ; preds = %631
  %634 = load i32, ptr %611, align 4, !tbaa !22
  store i32 %634, ptr %552, align 4, !tbaa !22
  br label %635

635:                                              ; preds = %633, %631, %627
  store i32 %541, ptr %611, align 4, !tbaa !22
  br label %679

636:                                              ; preds = %614
  %637 = icmp eq i64 %549, 9223372036854775804
  br i1 %637, label %638, label %640

638:                                              ; preds = %636, %561
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %639 unwind label %526

639:                                              ; preds = %638
  unreachable

640:                                              ; preds = %636
  %641 = ashr exact i64 %549, 2
  %642 = tail call i64 @llvm.umax.i64(i64 %641, i64 1)
  %643 = add i64 %642, %641
  %644 = icmp ult i64 %643, %641
  %645 = icmp ugt i64 %643, 2305843009213693951
  %646 = or i1 %644, %645
  %647 = select i1 %646, i64 2305843009213693951, i64 %643
  %648 = sub i64 %615, %548
  %649 = ashr exact i64 %648, 2
  %650 = icmp eq i64 %647, 0
  br i1 %650, label %654, label %651

651:                                              ; preds = %640
  %652 = shl nuw nsw i64 %647, 2
  %653 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %652) #21
          to label %654 unwind label %524

654:                                              ; preds = %651, %640
  %655 = phi ptr [ null, %640 ], [ %653, %651 ]
  %656 = getelementptr inbounds i32, ptr %655, i64 %649
  store i32 %541, ptr %656, align 4, !tbaa !22
  %657 = icmp sgt i64 %648, 4
  br i1 %657, label %658, label %659, !prof !23

658:                                              ; preds = %654
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %655, ptr align 4 %546, i64 %648, i1 false)
  br label %663

659:                                              ; preds = %654
  %660 = icmp eq i64 %648, 4
  br i1 %660, label %661, label %663

661:                                              ; preds = %659
  %662 = load i32, ptr %546, align 4, !tbaa !22
  store i32 %662, ptr %655, align 4, !tbaa !22
  br label %663

663:                                              ; preds = %661, %659, %658
  %664 = getelementptr inbounds i32, ptr %656, i64 1
  %665 = sub i64 %547, %615
  %666 = icmp sgt i64 %665, 4
  br i1 %666, label %667, label %668, !prof !23

667:                                              ; preds = %663
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %664, ptr nonnull align 4 %611, i64 %665, i1 false)
  br label %672

668:                                              ; preds = %663
  %669 = icmp eq i64 %665, 4
  br i1 %669, label %670, label %672

670:                                              ; preds = %668
  %671 = load i32, ptr %611, align 4, !tbaa !22
  store i32 %671, ptr %664, align 4, !tbaa !22
  br label %672

672:                                              ; preds = %670, %668, %667
  %673 = icmp eq ptr %546, null
  br i1 %673, label %675, label %674

674:                                              ; preds = %672
  tail call void @_ZdlPv(ptr noundef nonnull %546) #23
  br label %675

675:                                              ; preds = %674, %672
  %676 = ashr exact i64 %665, 2
  %677 = getelementptr inbounds i32, ptr %664, i64 %676
  store ptr %655, ptr %543, align 8, !tbaa !58
  store ptr %677, ptr %544, align 8, !tbaa !313
  %678 = getelementptr inbounds i32, ptr %655, i64 %647
  store ptr %678, ptr %616, align 8, !tbaa !417
  br label %679

679:                                              ; preds = %675, %635, %622, %610, %590, %559
  %680 = add i32 %533, 1
  %681 = zext i32 %680 to i64
  %682 = load ptr, ptr %23, align 8, !tbaa !472
  %683 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %682, i64 %44
  %684 = load ptr, ptr %683, align 8, !tbaa !58
  %685 = getelementptr inbounds i32, ptr %684, i64 %293
  %686 = load i32, ptr %685, align 4, !tbaa !22
  %687 = zext i32 %686 to i64
  %688 = getelementptr inbounds i32, ptr %11, i64 %687
  %689 = load i32, ptr %688, align 4, !tbaa !22
  %690 = zext i32 %689 to i64
  %691 = load ptr, ptr %12, align 8, !tbaa !72
  %692 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %691, i64 %690, i32 1
  %693 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %692, i64 0, i32 1
  %694 = load ptr, ptr %693, align 8, !tbaa !31
  %695 = load ptr, ptr %692, align 8, !tbaa !32
  %696 = ptrtoint ptr %694 to i64
  %697 = ptrtoint ptr %695 to i64
  %698 = sub i64 %696, %697
  %699 = ashr exact i64 %698, 4
  %700 = icmp eq i64 %699, %681
  br i1 %700, label %502, label %528

701:                                              ; preds = %463
  %702 = load ptr, ptr %23, align 8, !tbaa !472
  br label %703

703:                                              ; preds = %504, %701, %301, %308
  %704 = phi ptr [ %468, %701 ], [ %285, %301 ], [ %285, %308 ], [ %505, %504 ]
  %705 = phi ptr [ %702, %701 ], [ %286, %301 ], [ %286, %308 ], [ %506, %504 ]
  %706 = phi ptr [ %468, %701 ], [ %287, %301 ], [ %287, %308 ], [ %507, %504 ]
  %707 = phi i32 [ %466, %701 ], [ %288, %301 ], [ %288, %308 ], [ %508, %504 ]
  %708 = phi ptr [ %468, %701 ], [ %289, %301 ], [ %287, %308 ], [ %509, %504 ]
  %709 = phi i32 [ %466, %701 ], [ %290, %301 ], [ %288, %308 ], [ %510, %504 ]
  %710 = phi ptr [ %468, %701 ], [ %291, %301 ], [ %287, %308 ], [ %509, %504 ]
  %711 = phi i32 [ %466, %701 ], [ %292, %301 ], [ %288, %308 ], [ %510, %504 ]
  %712 = add nuw nsw i64 %293, 1
  %713 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %705, i64 %44
  %714 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %713, i64 0, i32 1
  %715 = load ptr, ptr %714, align 8, !tbaa !313
  %716 = load ptr, ptr %713, align 8, !tbaa !58
  %717 = ptrtoint ptr %715 to i64
  %718 = ptrtoint ptr %716 to i64
  %719 = sub i64 %717, %718
  %720 = lshr exact i64 %719, 2
  %721 = and i64 %720, 4294967295
  %722 = icmp ult i64 %712, %721
  br i1 %722, label %284, label %723

723:                                              ; preds = %703, %266, %56, %59
  %724 = phi ptr [ %40, %56 ], [ %40, %59 ], [ %268, %266 ], [ %704, %703 ]
  %725 = phi ptr [ %41, %56 ], [ %41, %59 ], [ %269, %266 ], [ %706, %703 ]
  %726 = phi ptr [ %42, %56 ], [ %42, %59 ], [ %270, %266 ], [ %708, %703 ]
  %727 = phi ptr [ %43, %56 ], [ %43, %59 ], [ %271, %266 ], [ %710, %703 ]
  %728 = add nuw nsw i64 %44, 1
  %729 = icmp eq i64 %728, %24
  br i1 %729, label %37, label %39

730:                                              ; preds = %524, %526, %315, %317, %262, %264
  %731 = phi { ptr, i32 } [ %263, %262 ], [ %265, %264 ], [ %316, %315 ], [ %318, %317 ], [ %525, %524 ], [ %527, %526 ]
  %732 = icmp eq ptr %11, null
  br i1 %732, label %734, label %733

733:                                              ; preds = %730
  tail call void @_ZdlPv(ptr noundef nonnull %11) #23
  br label %734

734:                                              ; preds = %733, %730
  resume { ptr, i32 } %731
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK6dealii16ConstraintMatrix8condenseERNS_20BlockSparsityPatternE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(288) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %1, i64 0, i32 5
  %4 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !487
  %6 = tail call noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %1)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = zext i32 %6 to i64
  %10 = shl nuw nsw i64 %9, 2
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %11, i8 -1, i64 %10, i1 false), !tbaa !22
  br label %12

12:                                               ; preds = %8, %2
  %13 = phi ptr [ null, %2 ], [ %11, %8 ]
  %14 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !70
  %17 = load ptr, ptr %14, align 8, !tbaa !72
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 40
  %22 = icmp eq ptr %16, %17
  br i1 %22, label %23, label %37

23:                                               ; preds = %37, %12
  %24 = invoke noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %1)
          to label %25 unwind label %48

25:                                               ; preds = %23
  %26 = icmp eq i32 %24, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %1, i64 0, i32 5, i32 1
  %29 = icmp eq i32 %5, 0
  %30 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %1, i64 0, i32 3, i32 0, i32 1
  %31 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %32 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %1, i64 0, i32 4
  %33 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase", ptr %1, i64 0, i32 4, i32 1
  %34 = zext i32 %24 to i64
  %35 = zext i32 %5 to i64
  %36 = zext i32 %5 to i64
  br label %50

37:                                               ; preds = %12, %37
  %38 = phi i64 [ %45, %37 ], [ 0, %12 ]
  %39 = phi i32 [ %44, %37 ], [ 0, %12 ]
  %40 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %17, i64 %38
  %41 = load i32, ptr %40, align 8, !tbaa !24
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i32, ptr %13, i64 %42
  store i32 %39, ptr %43, align 4, !tbaa !22
  %44 = add i32 %39, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %37, label %23

47:                                               ; preds = %575, %25
  invoke void @_ZN6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE8compressEv(ptr noundef nonnull align 8 dereferenceable(288) %1)
          to label %578 unwind label %48

48:                                               ; preds = %47, %23
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %582

50:                                               ; preds = %27, %575
  %51 = phi i64 [ 0, %27 ], [ %576, %575 ]
  %52 = load i32, ptr %3, align 8, !tbaa !61
  %53 = load ptr, ptr %28, align 8, !tbaa !58
  br label %54

54:                                               ; preds = %54, %50
  %55 = phi i32 [ %52, %50 ], [ %56, %54 ]
  %56 = add i32 %55, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, ptr %53, i64 %57
  %59 = load i32, ptr %58, align 4, !tbaa !22
  %60 = zext i32 %59 to i64
  %61 = icmp ult i64 %51, %60
  br i1 %61, label %54, label %62

62:                                               ; preds = %54
  %63 = trunc i64 %51 to i32
  %64 = sub i32 %63, %59
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i32, ptr %13, i64 %51
  %67 = load i32, ptr %66, align 4, !tbaa !22
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %73, label %69

69:                                               ; preds = %62
  br i1 %29, label %575, label %70

70:                                               ; preds = %69
  %71 = add i32 %64, 1
  %72 = zext i32 %71 to i64
  br label %274

73:                                               ; preds = %62
  br i1 %29, label %575, label %74

74:                                               ; preds = %73
  %75 = add i32 %64, 1
  %76 = zext i32 %75 to i64
  br label %77

77:                                               ; preds = %74, %154
  %78 = phi i64 [ 0, %74 ], [ %155, %154 ]
  %79 = load ptr, ptr %30, align 8, !tbaa !497, !noalias !744
  %80 = load i32, ptr %31, align 8, !tbaa !22, !noalias !744
  %81 = mul i32 %80, %56
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %79, i64 %82
  %84 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %83, i64 %78
  %85 = load ptr, ptr %84, align 8, !tbaa !501
  %86 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %85, i64 0, i32 8
  %87 = load ptr, ptr %86, align 8
  %88 = getelementptr inbounds i64, ptr %87, i64 %76
  %89 = load i64, ptr %88, align 8, !tbaa !42
  %90 = getelementptr inbounds i64, ptr %87, i64 %65
  %91 = load i64, ptr %90, align 8, !tbaa !42
  %92 = sub i64 %89, %91
  %93 = and i64 %92, 4294967295
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %114

95:                                               ; preds = %77
  %96 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %85, i64 0, i32 2
  %97 = load i32, ptr %96, align 4, !tbaa !38
  br label %98

98:                                               ; preds = %103, %95
  %99 = phi i64 [ %89, %95 ], [ %107, %103 ]
  %100 = phi i32 [ %64, %95 ], [ %101, %103 ]
  %101 = add i32 %100, 1
  %102 = icmp ult i32 %101, %97
  br i1 %102, label %103, label %111

103:                                              ; preds = %98
  %104 = add i32 %100, 2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i64, ptr %87, i64 %105
  %107 = load i64, ptr %106, align 8, !tbaa !42
  %108 = sub i64 %107, %99
  %109 = and i64 %108, 4294967295
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %98, label %111

111:                                              ; preds = %103, %98
  %112 = phi i32 [ %97, %98 ], [ %101, %103 ]
  %113 = zext i32 %112 to i64
  br label %114

114:                                              ; preds = %111, %77
  %115 = phi i64 [ %113, %111 ], [ %65, %77 ]
  %116 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %85, i64 0, i32 2
  %117 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %85, i64 0, i32 9
  br label %118

118:                                              ; preds = %259, %114
  %119 = phi ptr [ %87, %114 ], [ %234, %259 ]
  %120 = phi i64 [ %115, %114 ], [ %260, %259 ]
  %121 = load i32, ptr %116, align 4, !tbaa !38
  br label %122

122:                                              ; preds = %126, %118
  %123 = phi i32 [ %64, %118 ], [ %124, %126 ]
  %124 = add i32 %123, 1
  %125 = icmp ult i32 %124, %121
  br i1 %125, label %126, label %137

126:                                              ; preds = %122
  %127 = add i32 %123, 2
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds i64, ptr %119, i64 %128
  %130 = load i64, ptr %129, align 8, !tbaa !42
  %131 = zext i32 %124 to i64
  %132 = getelementptr inbounds i64, ptr %119, i64 %131
  %133 = load i64, ptr %132, align 8, !tbaa !42
  %134 = sub i64 %130, %133
  %135 = and i64 %134, 4294967295
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %122, label %137

137:                                              ; preds = %122, %126
  %138 = phi i32 [ %124, %126 ], [ %121, %122 ]
  %139 = trunc i64 %120 to i32
  %140 = icmp eq i32 %138, %139
  %141 = icmp ult i64 %120, 4294967296
  %142 = and i1 %141, %140
  br i1 %142, label %154, label %143

143:                                              ; preds = %137
  %144 = load ptr, ptr %117, align 8, !tbaa !43
  %145 = and i64 %120, 4294967295
  %146 = getelementptr inbounds i64, ptr %119, i64 %145
  %147 = load i64, ptr %146, align 8, !tbaa !42
  %148 = lshr i64 %120, 32
  %149 = trunc i64 %148 to i32
  %150 = add i64 %147, %148
  %151 = getelementptr inbounds i32, ptr %144, i64 %150
  %152 = load i32, ptr %151, align 4, !tbaa !22
  %153 = icmp eq i32 %152, -1
  br i1 %153, label %154, label %157

154:                                              ; preds = %137, %143
  %155 = add nuw nsw i64 %78, 1
  %156 = icmp eq i64 %155, %36
  br i1 %156, label %575, label %77

157:                                              ; preds = %143
  %158 = load ptr, ptr %28, align 8, !tbaa !58
  %159 = getelementptr inbounds i32, ptr %158, i64 %78
  %160 = load i32, ptr %159, align 4, !tbaa !22
  %161 = add i32 %160, %152
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds i32, ptr %13, i64 %162
  %164 = load i32, ptr %163, align 4, !tbaa !22
  %165 = icmp eq i32 %164, -1
  br i1 %165, label %232, label %166

166:                                              ; preds = %157
  %167 = zext i32 %164 to i64
  %168 = load ptr, ptr %14, align 8, !tbaa !72
  %169 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %168, i64 %167, i32 1
  %170 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %169, i64 0, i32 1
  %171 = load ptr, ptr %170, align 8, !tbaa !31
  %172 = load ptr, ptr %169, align 8, !tbaa !32
  %173 = icmp eq ptr %171, %172
  br i1 %173, label %232, label %176

174:                                              ; preds = %202
  %175 = landingpad { ptr, i32 }
          cleanup
  br label %582

176:                                              ; preds = %166, %213
  %177 = phi ptr [ %222, %213 ], [ %172, %166 ]
  %178 = phi i64 [ %215, %213 ], [ 0, %166 ]
  %179 = phi i32 [ %214, %213 ], [ 0, %166 ]
  %180 = getelementptr inbounds %"struct.std::pair", ptr %177, i64 %178
  %181 = load i32, ptr %180, align 8, !tbaa !37
  %182 = load i32, ptr %32, align 8, !tbaa !61
  %183 = load ptr, ptr %33, align 8, !tbaa !58
  br label %184

184:                                              ; preds = %184, %176
  %185 = phi i32 [ %182, %176 ], [ %186, %184 ]
  %186 = add i32 %185, -1
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i32, ptr %183, i64 %187
  %189 = load i32, ptr %188, align 4, !tbaa !22
  %190 = zext i32 %189 to i64
  %191 = icmp ult i64 %51, %190
  br i1 %191, label %184, label %192

192:                                              ; preds = %184
  %193 = load i32, ptr %3, align 8, !tbaa !61
  %194 = load ptr, ptr %28, align 8, !tbaa !58
  br label %195

195:                                              ; preds = %195, %192
  %196 = phi i32 [ %193, %192 ], [ %197, %195 ]
  %197 = add i32 %196, -1
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i32, ptr %194, i64 %198
  %200 = load i32, ptr %199, align 4, !tbaa !22
  %201 = icmp ugt i32 %200, %181
  br i1 %201, label %195, label %202

202:                                              ; preds = %195
  %203 = sub i32 %63, %189
  %204 = sub i32 %181, %200
  %205 = load ptr, ptr %30, align 8, !tbaa !497, !noalias !747
  %206 = load i32, ptr %31, align 8, !tbaa !22, !noalias !747
  %207 = mul i32 %206, %186
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %205, i64 %208
  %210 = zext i32 %197 to i64
  %211 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %209, i64 %210
  %212 = load ptr, ptr %211, align 8, !tbaa !501
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %212, i32 noundef %203, i32 noundef %204)
          to label %213 unwind label %174

213:                                              ; preds = %202
  %214 = add i32 %179, 1
  %215 = zext i32 %214 to i64
  %216 = load i32, ptr %163, align 4, !tbaa !22
  %217 = zext i32 %216 to i64
  %218 = load ptr, ptr %14, align 8, !tbaa !72
  %219 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %218, i64 %217, i32 1
  %220 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %219, i64 0, i32 1
  %221 = load ptr, ptr %220, align 8, !tbaa !31
  %222 = load ptr, ptr %219, align 8, !tbaa !32
  %223 = ptrtoint ptr %221 to i64
  %224 = ptrtoint ptr %222 to i64
  %225 = sub i64 %223, %224
  %226 = ashr exact i64 %225, 4
  %227 = icmp eq i64 %226, %215
  br i1 %227, label %228, label %176

228:                                              ; preds = %213
  %229 = load ptr, ptr %86, align 8
  %230 = getelementptr inbounds i64, ptr %229, i64 %145
  %231 = load i64, ptr %230, align 8, !tbaa !42
  br label %232

232:                                              ; preds = %228, %166, %157
  %233 = phi i64 [ %231, %228 ], [ %147, %166 ], [ %147, %157 ]
  %234 = phi ptr [ %229, %228 ], [ %119, %166 ], [ %119, %157 ]
  %235 = add i32 %149, 1
  %236 = zext i32 %235 to i64
  %237 = shl nuw i64 %236, 32
  %238 = or i64 %237, %145
  %239 = add i32 %139, 1
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds i64, ptr %234, i64 %240
  %242 = load i64, ptr %241, align 8, !tbaa !42
  %243 = sub i64 %242, %233
  %244 = trunc i64 %243 to i32
  %245 = icmp ult i32 %235, %244
  br i1 %245, label %259, label %246

246:                                              ; preds = %232
  %247 = load i32, ptr %116, align 4, !tbaa !38
  %248 = icmp eq i32 %239, %247
  br i1 %248, label %259, label %249

249:                                              ; preds = %246
  %250 = add i32 %139, 2
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds i64, ptr %234, i64 %251
  %253 = load i64, ptr %252, align 8, !tbaa !42
  %254 = sub i64 %253, %242
  %255 = and i64 %254, 4294967295
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %249
  %258 = icmp eq i32 %250, %247
  br i1 %258, label %259, label %261

259:                                              ; preds = %272, %261, %257, %249, %232, %246
  %260 = phi i64 [ %251, %257 ], [ %240, %249 ], [ %238, %232 ], [ %240, %246 ], [ %266, %272 ], [ %263, %261 ]
  br label %118, !llvm.loop !82

261:                                              ; preds = %257, %272
  %262 = phi i32 [ %265, %272 ], [ %250, %257 ]
  %263 = phi i64 [ %266, %272 ], [ %251, %257 ]
  %264 = phi i64 [ %268, %272 ], [ %253, %257 ]
  %265 = add i32 %262, 1
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds i64, ptr %234, i64 %266
  %268 = load i64, ptr %267, align 8, !tbaa !42
  %269 = sub i64 %268, %264
  %270 = and i64 %269, 4294967295
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %259, !llvm.loop !82

272:                                              ; preds = %261
  %273 = icmp eq i32 %265, %247
  br i1 %273, label %259, label %261, !llvm.loop !82

274:                                              ; preds = %70, %357
  %275 = phi i32 [ %67, %70 ], [ %319, %357 ]
  %276 = phi i32 [ %67, %70 ], [ %320, %357 ]
  %277 = phi i32 [ %67, %70 ], [ %321, %357 ]
  %278 = phi i64 [ 0, %70 ], [ %358, %357 ]
  %279 = load ptr, ptr %30, align 8, !tbaa !497, !noalias !750
  %280 = load i32, ptr %31, align 8, !tbaa !22, !noalias !750
  %281 = mul i32 %280, %56
  %282 = zext i32 %281 to i64
  %283 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %279, i64 %282
  %284 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %283, i64 %278
  %285 = load ptr, ptr %284, align 8, !tbaa !501
  %286 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %285, i64 0, i32 8
  %287 = load ptr, ptr %286, align 8
  %288 = getelementptr inbounds i64, ptr %287, i64 %72
  %289 = load i64, ptr %288, align 8, !tbaa !42
  %290 = getelementptr inbounds i64, ptr %287, i64 %65
  %291 = load i64, ptr %290, align 8, !tbaa !42
  %292 = sub i64 %289, %291
  %293 = and i64 %292, 4294967295
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %314

295:                                              ; preds = %274
  %296 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %285, i64 0, i32 2
  %297 = load i32, ptr %296, align 4, !tbaa !38
  br label %298

298:                                              ; preds = %303, %295
  %299 = phi i64 [ %289, %295 ], [ %307, %303 ]
  %300 = phi i32 [ %64, %295 ], [ %301, %303 ]
  %301 = add i32 %300, 1
  %302 = icmp ult i32 %301, %297
  br i1 %302, label %303, label %311

303:                                              ; preds = %298
  %304 = add i32 %300, 2
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds i64, ptr %287, i64 %305
  %307 = load i64, ptr %306, align 8, !tbaa !42
  %308 = sub i64 %307, %299
  %309 = and i64 %308, 4294967295
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %298, label %311

311:                                              ; preds = %303, %298
  %312 = phi i32 [ %297, %298 ], [ %301, %303 ]
  %313 = zext i32 %312 to i64
  br label %314

314:                                              ; preds = %311, %274
  %315 = phi i64 [ %313, %311 ], [ %65, %274 ]
  %316 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %285, i64 0, i32 2
  %317 = getelementptr inbounds %"class.dealii::SparsityPattern", ptr %285, i64 0, i32 9
  br label %318

318:                                              ; preds = %560, %314
  %319 = phi i32 [ %275, %314 ], [ %530, %560 ]
  %320 = phi i32 [ %276, %314 ], [ %531, %560 ]
  %321 = phi i32 [ %277, %314 ], [ %532, %560 ]
  %322 = phi ptr [ %287, %314 ], [ %537, %560 ]
  %323 = phi i64 [ %315, %314 ], [ %561, %560 ]
  %324 = load i32, ptr %316, align 4, !tbaa !38
  br label %325

325:                                              ; preds = %329, %318
  %326 = phi i32 [ %64, %318 ], [ %327, %329 ]
  %327 = add i32 %326, 1
  %328 = icmp ult i32 %327, %324
  br i1 %328, label %329, label %340

329:                                              ; preds = %325
  %330 = add i32 %326, 2
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds i64, ptr %322, i64 %331
  %333 = load i64, ptr %332, align 8, !tbaa !42
  %334 = zext i32 %327 to i64
  %335 = getelementptr inbounds i64, ptr %322, i64 %334
  %336 = load i64, ptr %335, align 8, !tbaa !42
  %337 = sub i64 %333, %336
  %338 = and i64 %337, 4294967295
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %325, label %340

340:                                              ; preds = %325, %329
  %341 = phi i32 [ %327, %329 ], [ %324, %325 ]
  %342 = trunc i64 %323 to i32
  %343 = icmp eq i32 %341, %342
  %344 = icmp ult i64 %323, 4294967296
  %345 = and i1 %344, %343
  br i1 %345, label %357, label %346

346:                                              ; preds = %340
  %347 = load ptr, ptr %317, align 8, !tbaa !43
  %348 = and i64 %323, 4294967295
  %349 = getelementptr inbounds i64, ptr %322, i64 %348
  %350 = load i64, ptr %349, align 8, !tbaa !42
  %351 = lshr i64 %323, 32
  %352 = trunc i64 %351 to i32
  %353 = add i64 %350, %351
  %354 = getelementptr inbounds i32, ptr %347, i64 %353
  %355 = load i32, ptr %354, align 4, !tbaa !22
  %356 = icmp eq i32 %355, -1
  br i1 %356, label %357, label %360

357:                                              ; preds = %340, %346
  %358 = add nuw nsw i64 %278, 1
  %359 = icmp eq i64 %358, %35
  br i1 %359, label %575, label %274

360:                                              ; preds = %346
  %361 = load ptr, ptr %28, align 8, !tbaa !58
  %362 = getelementptr inbounds i32, ptr %361, i64 %278
  %363 = load i32, ptr %362, align 4, !tbaa !22
  %364 = add i32 %363, %355
  %365 = zext i32 %364 to i64
  %366 = getelementptr inbounds i32, ptr %13, i64 %365
  %367 = load i32, ptr %366, align 4, !tbaa !22
  %368 = icmp eq i32 %367, -1
  %369 = load ptr, ptr %14, align 8, !tbaa !72
  br i1 %368, label %377, label %370

370:                                              ; preds = %360
  %371 = zext i32 %321 to i64
  %372 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %369, i64 %371, i32 1
  %373 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %372, i64 0, i32 1
  %374 = load ptr, ptr %373, align 8, !tbaa !31
  %375 = load ptr, ptr %372, align 8, !tbaa !32
  %376 = icmp eq ptr %374, %375
  br i1 %376, label %529, label %437

377:                                              ; preds = %360
  %378 = zext i32 %319 to i64
  %379 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %369, i64 %378, i32 1
  %380 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %379, i64 0, i32 1
  %381 = load ptr, ptr %380, align 8, !tbaa !31
  %382 = load ptr, ptr %379, align 8, !tbaa !32
  %383 = icmp eq ptr %381, %382
  br i1 %383, label %529, label %386

384:                                              ; preds = %411
  %385 = landingpad { ptr, i32 }
          cleanup
  br label %582

386:                                              ; preds = %377, %422
  %387 = phi ptr [ %431, %422 ], [ %382, %377 ]
  %388 = phi i64 [ %424, %422 ], [ 0, %377 ]
  %389 = phi i32 [ %423, %422 ], [ 0, %377 ]
  %390 = getelementptr inbounds %"struct.std::pair", ptr %387, i64 %388
  %391 = load i32, ptr %390, align 8, !tbaa !37
  %392 = load i32, ptr %32, align 8, !tbaa !61
  %393 = load ptr, ptr %33, align 8, !tbaa !58
  br label %394

394:                                              ; preds = %394, %386
  %395 = phi i32 [ %392, %386 ], [ %396, %394 ]
  %396 = add i32 %395, -1
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds i32, ptr %393, i64 %397
  %399 = load i32, ptr %398, align 4, !tbaa !22
  %400 = icmp ugt i32 %399, %391
  br i1 %400, label %394, label %401

401:                                              ; preds = %394
  %402 = load i32, ptr %3, align 8, !tbaa !61
  %403 = load ptr, ptr %28, align 8, !tbaa !58
  br label %404

404:                                              ; preds = %404, %401
  %405 = phi i32 [ %402, %401 ], [ %406, %404 ]
  %406 = add i32 %405, -1
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds i32, ptr %403, i64 %407
  %409 = load i32, ptr %408, align 4, !tbaa !22
  %410 = icmp ugt i32 %409, %364
  br i1 %410, label %404, label %411

411:                                              ; preds = %404
  %412 = sub i32 %391, %399
  %413 = sub i32 %364, %409
  %414 = load ptr, ptr %30, align 8, !tbaa !497, !noalias !753
  %415 = load i32, ptr %31, align 8, !tbaa !22, !noalias !753
  %416 = mul i32 %415, %396
  %417 = zext i32 %416 to i64
  %418 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %414, i64 %417
  %419 = zext i32 %406 to i64
  %420 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %418, i64 %419
  %421 = load ptr, ptr %420, align 8, !tbaa !501
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %421, i32 noundef %412, i32 noundef %413)
          to label %422 unwind label %384

422:                                              ; preds = %411
  %423 = add i32 %389, 1
  %424 = zext i32 %423 to i64
  %425 = load i32, ptr %66, align 4, !tbaa !22
  %426 = zext i32 %425 to i64
  %427 = load ptr, ptr %14, align 8, !tbaa !72
  %428 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %427, i64 %426, i32 1
  %429 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %428, i64 0, i32 1
  %430 = load ptr, ptr %429, align 8, !tbaa !31
  %431 = load ptr, ptr %428, align 8, !tbaa !32
  %432 = ptrtoint ptr %430 to i64
  %433 = ptrtoint ptr %431 to i64
  %434 = sub i64 %432, %433
  %435 = ashr exact i64 %434, 4
  %436 = icmp eq i64 %435, %424
  br i1 %436, label %529, label %386

437:                                              ; preds = %370, %452
  %438 = phi i32 [ %453, %452 ], [ %319, %370 ]
  %439 = phi ptr [ %454, %452 ], [ %369, %370 ]
  %440 = phi i32 [ %455, %452 ], [ %320, %370 ]
  %441 = phi i32 [ %456, %452 ], [ %367, %370 ]
  %442 = phi i64 [ %458, %452 ], [ 0, %370 ]
  %443 = phi i32 [ %457, %452 ], [ 0, %370 ]
  %444 = zext i32 %441 to i64
  %445 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %439, i64 %444, i32 1
  %446 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %445, i64 0, i32 1
  %447 = load ptr, ptr %446, align 8, !tbaa !31
  %448 = load ptr, ptr %445, align 8, !tbaa !32
  %449 = icmp eq ptr %447, %448
  br i1 %449, label %452, label %471

450:                                              ; preds = %514
  %451 = load i32, ptr %66, align 4, !tbaa !22
  br label %452

452:                                              ; preds = %450, %437
  %453 = phi i32 [ %451, %450 ], [ %438, %437 ]
  %454 = phi ptr [ %519, %450 ], [ %439, %437 ]
  %455 = phi i32 [ %451, %450 ], [ %440, %437 ]
  %456 = phi i32 [ %517, %450 ], [ %441, %437 ]
  %457 = add i32 %443, 1
  %458 = zext i32 %457 to i64
  %459 = zext i32 %455 to i64
  %460 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %454, i64 %459, i32 1
  %461 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %460, i64 0, i32 1
  %462 = load ptr, ptr %461, align 8, !tbaa !31
  %463 = load ptr, ptr %460, align 8, !tbaa !32
  %464 = ptrtoint ptr %462 to i64
  %465 = ptrtoint ptr %463 to i64
  %466 = sub i64 %464, %465
  %467 = ashr exact i64 %466, 4
  %468 = icmp eq i64 %467, %458
  br i1 %468, label %529, label %437

469:                                              ; preds = %503
  %470 = landingpad { ptr, i32 }
          cleanup
  br label %582

471:                                              ; preds = %437, %514
  %472 = phi ptr [ %523, %514 ], [ %448, %437 ]
  %473 = phi ptr [ %519, %514 ], [ %439, %437 ]
  %474 = phi i64 [ %516, %514 ], [ 0, %437 ]
  %475 = phi i32 [ %515, %514 ], [ 0, %437 ]
  %476 = load i32, ptr %66, align 4, !tbaa !22
  %477 = zext i32 %476 to i64
  %478 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %473, i64 %477, i32 1
  %479 = load ptr, ptr %478, align 8, !tbaa !32
  %480 = getelementptr inbounds %"struct.std::pair", ptr %479, i64 %442
  %481 = load i32, ptr %480, align 8, !tbaa !37
  %482 = getelementptr inbounds %"struct.std::pair", ptr %472, i64 %474
  %483 = load i32, ptr %482, align 8, !tbaa !37
  %484 = load i32, ptr %32, align 8, !tbaa !61
  %485 = load ptr, ptr %33, align 8, !tbaa !58
  br label %486

486:                                              ; preds = %486, %471
  %487 = phi i32 [ %484, %471 ], [ %488, %486 ]
  %488 = add i32 %487, -1
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds i32, ptr %485, i64 %489
  %491 = load i32, ptr %490, align 4, !tbaa !22
  %492 = icmp ugt i32 %491, %481
  br i1 %492, label %486, label %493

493:                                              ; preds = %486
  %494 = load i32, ptr %3, align 8, !tbaa !61
  %495 = load ptr, ptr %28, align 8, !tbaa !58
  br label %496

496:                                              ; preds = %496, %493
  %497 = phi i32 [ %494, %493 ], [ %498, %496 ]
  %498 = add i32 %497, -1
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds i32, ptr %495, i64 %499
  %501 = load i32, ptr %500, align 4, !tbaa !22
  %502 = icmp ugt i32 %501, %483
  br i1 %502, label %496, label %503

503:                                              ; preds = %496
  %504 = sub i32 %481, %491
  %505 = sub i32 %483, %501
  %506 = load ptr, ptr %30, align 8, !tbaa !497, !noalias !756
  %507 = load i32, ptr %31, align 8, !tbaa !22, !noalias !756
  %508 = mul i32 %507, %488
  %509 = zext i32 %508 to i64
  %510 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %506, i64 %509
  %511 = zext i32 %498 to i64
  %512 = getelementptr inbounds %"class.dealii::SmartPointer.167", ptr %510, i64 %511
  %513 = load ptr, ptr %512, align 8, !tbaa !501
  invoke void @_ZN6dealii15SparsityPattern3addEjj(ptr noundef nonnull align 8 dereferenceable(122) %513, i32 noundef %504, i32 noundef %505)
          to label %514 unwind label %469

514:                                              ; preds = %503
  %515 = add i32 %475, 1
  %516 = zext i32 %515 to i64
  %517 = load i32, ptr %366, align 4, !tbaa !22
  %518 = zext i32 %517 to i64
  %519 = load ptr, ptr %14, align 8, !tbaa !72
  %520 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %519, i64 %518, i32 1
  %521 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %520, i64 0, i32 1
  %522 = load ptr, ptr %521, align 8, !tbaa !31
  %523 = load ptr, ptr %520, align 8, !tbaa !32
  %524 = ptrtoint ptr %522 to i64
  %525 = ptrtoint ptr %523 to i64
  %526 = sub i64 %524, %525
  %527 = ashr exact i64 %526, 4
  %528 = icmp eq i64 %527, %516
  br i1 %528, label %450, label %471

529:                                              ; preds = %452, %422, %370, %377
  %530 = phi i32 [ %319, %370 ], [ %319, %377 ], [ %425, %422 ], [ %453, %452 ]
  %531 = phi i32 [ %320, %370 ], [ %319, %377 ], [ %425, %422 ], [ %455, %452 ]
  %532 = phi i32 [ %321, %370 ], [ %319, %377 ], [ %425, %422 ], [ %455, %452 ]
  %533 = add i32 %352, 1
  %534 = zext i32 %533 to i64
  %535 = shl nuw i64 %534, 32
  %536 = or i64 %535, %348
  %537 = load ptr, ptr %286, align 8
  %538 = add i32 %342, 1
  %539 = zext i32 %538 to i64
  %540 = getelementptr inbounds i64, ptr %537, i64 %539
  %541 = load i64, ptr %540, align 8, !tbaa !42
  %542 = getelementptr inbounds i64, ptr %537, i64 %348
  %543 = load i64, ptr %542, align 8, !tbaa !42
  %544 = sub i64 %541, %543
  %545 = trunc i64 %544 to i32
  %546 = icmp ult i32 %533, %545
  br i1 %546, label %560, label %547

547:                                              ; preds = %529
  %548 = load i32, ptr %316, align 4, !tbaa !38
  %549 = icmp eq i32 %538, %548
  br i1 %549, label %560, label %550

550:                                              ; preds = %547
  %551 = add i32 %342, 2
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds i64, ptr %537, i64 %552
  %554 = load i64, ptr %553, align 8, !tbaa !42
  %555 = sub i64 %554, %541
  %556 = and i64 %555, 4294967295
  %557 = icmp eq i64 %556, 0
  br i1 %557, label %558, label %560

558:                                              ; preds = %550
  %559 = icmp eq i32 %551, %548
  br i1 %559, label %560, label %562

560:                                              ; preds = %573, %562, %558, %550, %529, %547
  %561 = phi i64 [ %552, %558 ], [ %539, %550 ], [ %536, %529 ], [ %539, %547 ], [ %567, %573 ], [ %564, %562 ]
  br label %318, !llvm.loop !82

562:                                              ; preds = %558, %573
  %563 = phi i32 [ %566, %573 ], [ %551, %558 ]
  %564 = phi i64 [ %567, %573 ], [ %552, %558 ]
  %565 = phi i64 [ %569, %573 ], [ %554, %558 ]
  %566 = add i32 %563, 1
  %567 = zext i32 %566 to i64
  %568 = getelementptr inbounds i64, ptr %537, i64 %567
  %569 = load i64, ptr %568, align 8, !tbaa !42
  %570 = sub i64 %569, %565
  %571 = and i64 %570, 4294967295
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %560, !llvm.loop !82

573:                                              ; preds = %562
  %574 = icmp eq i32 %566, %548
  br i1 %574, label %560, label %562, !llvm.loop !82

575:                                              ; preds = %357, %154, %69, %73
  %576 = add nuw nsw i64 %51, 1
  %577 = icmp eq i64 %576, %34
  br i1 %577, label %47, label %50

578:                                              ; preds = %47
  %579 = icmp eq ptr %13, null
  br i1 %579, label %581, label %580

580:                                              ; preds = %578
  tail call void @_ZdlPv(ptr noundef nonnull %13) #23
  br label %581

581:                                              ; preds = %578, %580
  ret void

582:                                              ; preds = %469, %384, %174, %48
  %583 = phi { ptr, i32 } [ %49, %48 ], [ %175, %174 ], [ %385, %384 ], [ %470, %469 ]
  %584 = icmp eq ptr %13, null
  br i1 %584, label %586, label %585

585:                                              ; preds = %582
  tail call void @_ZdlPv(ptr noundef nonnull %13) #23
  br label %586

586:                                              ; preds = %585, %582
  resume { ptr, i32 } %583
}

declare void @_ZN6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEE8compressEv(ptr noundef nonnull align 8 dereferenceable(288)) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK6dealii16ConstraintMatrix8condenseERNS_30BlockCompressedSparsityPatternE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(288) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %1, i64 0, i32 5
  %4 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !547
  %6 = tail call noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_25CompressedSparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %1)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = zext i32 %6 to i64
  %10 = shl nuw nsw i64 %9, 2
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %11, i8 -1, i64 %10, i1 false), !tbaa !22
  br label %12

12:                                               ; preds = %8, %2
  %13 = phi ptr [ null, %2 ], [ %11, %8 ]
  %14 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !70
  %17 = load ptr, ptr %14, align 8, !tbaa !72
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 40
  %22 = icmp eq ptr %16, %17
  br i1 %22, label %23, label %37

23:                                               ; preds = %37, %12
  %24 = invoke noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_25CompressedSparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %1)
          to label %25 unwind label %51

25:                                               ; preds = %23
  %26 = icmp eq i32 %24, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %1, i64 0, i32 5, i32 1
  %29 = icmp eq i32 %5, 0
  %30 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %1, i64 0, i32 3, i32 0, i32 1
  %31 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %32 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %1, i64 0, i32 4
  %33 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.124", ptr %1, i64 0, i32 4, i32 1
  %34 = zext i32 %24 to i64
  %35 = zext i32 %5 to i64
  %36 = zext i32 %5 to i64
  br label %53

37:                                               ; preds = %12, %37
  %38 = phi i64 [ %45, %37 ], [ 0, %12 ]
  %39 = phi i32 [ %44, %37 ], [ 0, %12 ]
  %40 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %17, i64 %38
  %41 = load i32, ptr %40, align 8, !tbaa !24
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i32, ptr %13, i64 %42
  store i32 %39, ptr %43, align 4, !tbaa !22
  %44 = add i32 %39, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %37, label %23

47:                                               ; preds = %523, %25
  %48 = icmp eq ptr %13, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %47
  tail call void @_ZdlPv(ptr noundef nonnull %13) #23
  br label %50

50:                                               ; preds = %47, %49
  ret void

51:                                               ; preds = %23
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %526

53:                                               ; preds = %27, %523
  %54 = phi i64 [ 0, %27 ], [ %524, %523 ]
  %55 = load i32, ptr %3, align 8, !tbaa !61
  %56 = load ptr, ptr %28, align 8, !tbaa !58
  br label %57

57:                                               ; preds = %57, %53
  %58 = phi i32 [ %55, %53 ], [ %59, %57 ]
  %59 = add i32 %58, -1
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, ptr %56, i64 %60
  %62 = load i32, ptr %61, align 4, !tbaa !22
  %63 = zext i32 %62 to i64
  %64 = icmp ult i64 %54, %63
  br i1 %64, label %57, label %65

65:                                               ; preds = %57
  %66 = trunc i64 %54 to i32
  %67 = sub i32 %66, %62
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i32, ptr %13, i64 %54
  %70 = load i32, ptr %69, align 4, !tbaa !22
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %73, label %72

72:                                               ; preds = %65
  br i1 %29, label %523, label %233

73:                                               ; preds = %65
  br i1 %29, label %523, label %74

74:                                               ; preds = %73, %106
  %75 = phi i64 [ %107, %106 ], [ 0, %73 ]
  %76 = load ptr, ptr %30, align 8, !tbaa !553, !noalias !759
  %77 = load i32, ptr %31, align 8, !tbaa !22, !noalias !759
  %78 = mul i32 %77, %59
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %76, i64 %79
  %81 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %80, i64 %75
  %82 = load ptr, ptr %81, align 8, !tbaa !557
  %83 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %82, i64 0, i32 3
  br label %84

84:                                               ; preds = %74, %231
  %85 = phi i64 [ 0, %74 ], [ %232, %231 ]
  %86 = load ptr, ptr %83, align 8, !tbaa !438
  %87 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %86, i64 %68, i32 2
  %88 = load i32, ptr %87, align 8, !tbaa !440
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %86, i64 %68
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %91)
          to label %92 unwind label %109

92:                                               ; preds = %90
  %93 = load ptr, ptr %83, align 8, !tbaa !438
  br label %94

94:                                               ; preds = %92, %84
  %95 = phi ptr [ %93, %92 ], [ %86, %84 ]
  %96 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %95, i64 %68
  %97 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %96, i64 0, i32 1
  %98 = load ptr, ptr %97, align 8, !tbaa !313
  %99 = load ptr, ptr %96, align 8, !tbaa !58
  %100 = ptrtoint ptr %98 to i64
  %101 = ptrtoint ptr %99 to i64
  %102 = sub i64 %100, %101
  %103 = lshr exact i64 %102, 2
  %104 = and i64 %103, 4294967295
  %105 = icmp ult i64 %85, %104
  br i1 %105, label %111, label %106

106:                                              ; preds = %94
  %107 = add nuw nsw i64 %75, 1
  %108 = icmp eq i64 %107, %36
  br i1 %108, label %523, label %74

109:                                              ; preds = %90
  %110 = landingpad { ptr, i32 }
          cleanup
  br label %526

111:                                              ; preds = %94
  %112 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %95, i64 %68, i32 2
  %113 = load i32, ptr %112, align 8, !tbaa !440
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %96)
          to label %116 unwind label %140

116:                                              ; preds = %115
  %117 = load ptr, ptr %83, align 8, !tbaa !438
  %118 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %117, i64 %68
  %119 = load ptr, ptr %118, align 8, !tbaa !58
  br label %120

120:                                              ; preds = %111, %116
  %121 = phi ptr [ %119, %116 ], [ %99, %111 ]
  %122 = getelementptr inbounds i32, ptr %121, i64 %85
  %123 = load i32, ptr %122, align 4, !tbaa !22
  %124 = load ptr, ptr %28, align 8, !tbaa !58
  %125 = getelementptr inbounds i32, ptr %124, i64 %75
  %126 = load i32, ptr %125, align 4, !tbaa !22
  %127 = add i32 %126, %123
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds i32, ptr %13, i64 %128
  %130 = load i32, ptr %129, align 4, !tbaa !22
  %131 = icmp eq i32 %130, -1
  br i1 %131, label %231, label %132

132:                                              ; preds = %120
  %133 = zext i32 %130 to i64
  %134 = load ptr, ptr %14, align 8, !tbaa !72
  %135 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %134, i64 %133, i32 1
  %136 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %135, i64 0, i32 1
  %137 = load ptr, ptr %136, align 8, !tbaa !31
  %138 = load ptr, ptr %135, align 8, !tbaa !32
  %139 = icmp eq ptr %137, %138
  br i1 %139, label %231, label %144

140:                                              ; preds = %115
  %141 = landingpad { ptr, i32 }
          cleanup
  br label %526

142:                                              ; preds = %203
  %143 = landingpad { ptr, i32 }
          cleanup
  br label %526

144:                                              ; preds = %132, %215
  %145 = phi ptr [ %216, %215 ], [ %134, %132 ]
  %146 = phi ptr [ %217, %215 ], [ %134, %132 ]
  %147 = phi i32 [ %218, %215 ], [ %130, %132 ]
  %148 = phi ptr [ %225, %215 ], [ %138, %132 ]
  %149 = phi i64 [ %220, %215 ], [ 0, %132 ]
  %150 = phi i32 [ %219, %215 ], [ 0, %132 ]
  %151 = getelementptr inbounds %"struct.std::pair", ptr %148, i64 %149
  %152 = load i32, ptr %151, align 8, !tbaa !37
  %153 = load i32, ptr %32, align 8, !tbaa !61
  %154 = load ptr, ptr %33, align 8, !tbaa !58
  br label %155

155:                                              ; preds = %155, %144
  %156 = phi i32 [ %153, %144 ], [ %157, %155 ]
  %157 = add i32 %156, -1
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i32, ptr %154, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !22
  %161 = zext i32 %160 to i64
  %162 = icmp ult i64 %54, %161
  br i1 %162, label %155, label %163

163:                                              ; preds = %155
  %164 = load i32, ptr %3, align 8, !tbaa !61
  %165 = load ptr, ptr %28, align 8, !tbaa !58
  br label %166

166:                                              ; preds = %166, %163
  %167 = phi i32 [ %164, %163 ], [ %168, %166 ]
  %168 = add i32 %167, -1
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i32, ptr %165, i64 %169
  %171 = load i32, ptr %170, align 4, !tbaa !22
  %172 = icmp ugt i32 %171, %152
  br i1 %172, label %166, label %173

173:                                              ; preds = %166
  %174 = sub i32 %66, %160
  %175 = zext i32 %174 to i64
  %176 = sub i32 %152, %171
  %177 = load ptr, ptr %30, align 8, !tbaa !553, !noalias !762
  %178 = load i32, ptr %31, align 8, !tbaa !22, !noalias !762
  %179 = mul i32 %178, %157
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %177, i64 %180
  %182 = zext i32 %168 to i64
  %183 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %181, i64 %182
  %184 = load ptr, ptr %183, align 8, !tbaa !557
  %185 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %184, i64 0, i32 3
  %186 = load ptr, ptr %185, align 8, !tbaa !438
  %187 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %186, i64 %175
  %188 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %186, i64 %175, i32 2
  %189 = load i32, ptr %188, align 8, !tbaa !440
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %207, label %191

191:                                              ; preds = %173
  %192 = zext i32 %189 to i64
  br label %196

193:                                              ; preds = %196
  %194 = add nuw nsw i64 %197, 1
  %195 = icmp eq i64 %194, %192
  br i1 %195, label %201, label %196

196:                                              ; preds = %193, %191
  %197 = phi i64 [ 0, %191 ], [ %194, %193 ]
  %198 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %186, i64 %175, i32 1, i64 %197
  %199 = load i32, ptr %198, align 4, !tbaa !22
  %200 = icmp eq i32 %199, %176
  br i1 %200, label %215, label %193

201:                                              ; preds = %193
  %202 = icmp eq i32 %189, 8
  br i1 %202, label %203, label %207

203:                                              ; preds = %201
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %187)
          to label %204 unwind label %142

204:                                              ; preds = %203
  %205 = load i32, ptr %188, align 8, !tbaa !440
  %206 = load ptr, ptr %14, align 8, !tbaa !72
  br label %207

207:                                              ; preds = %204, %201, %173
  %208 = phi ptr [ %206, %204 ], [ %145, %201 ], [ %145, %173 ]
  %209 = phi i32 [ %205, %204 ], [ %189, %201 ], [ 0, %173 ]
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %186, i64 %175, i32 1, i64 %210
  store i32 %176, ptr %211, align 4, !tbaa !22
  %212 = load i32, ptr %188, align 8, !tbaa !440
  %213 = add i32 %212, 1
  store i32 %213, ptr %188, align 8, !tbaa !440
  %214 = load i32, ptr %129, align 4, !tbaa !22
  br label %215

215:                                              ; preds = %196, %207
  %216 = phi ptr [ %208, %207 ], [ %145, %196 ]
  %217 = phi ptr [ %208, %207 ], [ %146, %196 ]
  %218 = phi i32 [ %214, %207 ], [ %147, %196 ]
  %219 = add i32 %150, 1
  %220 = zext i32 %219 to i64
  %221 = zext i32 %218 to i64
  %222 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %217, i64 %221, i32 1
  %223 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %222, i64 0, i32 1
  %224 = load ptr, ptr %223, align 8, !tbaa !31
  %225 = load ptr, ptr %222, align 8, !tbaa !32
  %226 = ptrtoint ptr %224 to i64
  %227 = ptrtoint ptr %225 to i64
  %228 = sub i64 %226, %227
  %229 = ashr exact i64 %228, 4
  %230 = icmp eq i64 %229, %220
  br i1 %230, label %231, label %144

231:                                              ; preds = %215, %132, %120
  %232 = add nuw nsw i64 %85, 1
  br label %84

233:                                              ; preds = %72, %265
  %234 = phi i64 [ %266, %265 ], [ 0, %72 ]
  %235 = load ptr, ptr %30, align 8, !tbaa !553, !noalias !765
  %236 = load i32, ptr %31, align 8, !tbaa !22, !noalias !765
  %237 = mul i32 %236, %59
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %235, i64 %238
  %240 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %239, i64 %234
  %241 = load ptr, ptr %240, align 8, !tbaa !557
  %242 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %241, i64 0, i32 3
  br label %243

243:                                              ; preds = %233, %521
  %244 = phi i64 [ 0, %233 ], [ %522, %521 ]
  %245 = load ptr, ptr %242, align 8, !tbaa !438
  %246 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %245, i64 %68, i32 2
  %247 = load i32, ptr %246, align 8, !tbaa !440
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %253, label %249

249:                                              ; preds = %243
  %250 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %245, i64 %68
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %250)
          to label %251 unwind label %268

251:                                              ; preds = %249
  %252 = load ptr, ptr %242, align 8, !tbaa !438
  br label %253

253:                                              ; preds = %251, %243
  %254 = phi ptr [ %252, %251 ], [ %245, %243 ]
  %255 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %254, i64 %68
  %256 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %255, i64 0, i32 1
  %257 = load ptr, ptr %256, align 8, !tbaa !313
  %258 = load ptr, ptr %255, align 8, !tbaa !58
  %259 = ptrtoint ptr %257 to i64
  %260 = ptrtoint ptr %258 to i64
  %261 = sub i64 %259, %260
  %262 = lshr exact i64 %261, 2
  %263 = and i64 %262, 4294967295
  %264 = icmp ult i64 %244, %263
  br i1 %264, label %270, label %265

265:                                              ; preds = %253
  %266 = add nuw nsw i64 %234, 1
  %267 = icmp eq i64 %266, %35
  br i1 %267, label %523, label %233

268:                                              ; preds = %249
  %269 = landingpad { ptr, i32 }
          cleanup
  br label %526

270:                                              ; preds = %253
  %271 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %254, i64 %68, i32 2
  %272 = load i32, ptr %271, align 8, !tbaa !440
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %279, label %274

274:                                              ; preds = %270
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %255)
          to label %275 unwind label %301

275:                                              ; preds = %274
  %276 = load ptr, ptr %242, align 8, !tbaa !438
  %277 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %276, i64 %68
  %278 = load ptr, ptr %277, align 8, !tbaa !58
  br label %279

279:                                              ; preds = %270, %275
  %280 = phi ptr [ %278, %275 ], [ %258, %270 ]
  %281 = getelementptr inbounds i32, ptr %280, i64 %244
  %282 = load i32, ptr %281, align 4, !tbaa !22
  %283 = load ptr, ptr %28, align 8, !tbaa !58
  %284 = getelementptr inbounds i32, ptr %283, i64 %234
  %285 = load i32, ptr %284, align 4, !tbaa !22
  %286 = add i32 %285, %282
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds i32, ptr %13, i64 %287
  %289 = load i32, ptr %288, align 4, !tbaa !22
  %290 = icmp eq i32 %289, -1
  %291 = load i32, ptr %69, align 4, !tbaa !22
  %292 = zext i32 %291 to i64
  %293 = load ptr, ptr %14, align 8, !tbaa !72
  %294 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %293, i64 %292, i32 1
  %295 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %294, i64 0, i32 1
  %296 = load ptr, ptr %295, align 8, !tbaa !31
  %297 = load ptr, ptr %294, align 8, !tbaa !32
  %298 = icmp eq ptr %296, %297
  br i1 %290, label %300, label %299

299:                                              ; preds = %279
  br i1 %298, label %521, label %391

300:                                              ; preds = %279
  br i1 %298, label %521, label %305

301:                                              ; preds = %274
  %302 = landingpad { ptr, i32 }
          cleanup
  br label %526

303:                                              ; preds = %363
  %304 = landingpad { ptr, i32 }
          cleanup
  br label %526

305:                                              ; preds = %300, %375
  %306 = phi ptr [ %376, %375 ], [ %293, %300 ]
  %307 = phi ptr [ %377, %375 ], [ %293, %300 ]
  %308 = phi i32 [ %378, %375 ], [ %291, %300 ]
  %309 = phi ptr [ %385, %375 ], [ %297, %300 ]
  %310 = phi i64 [ %380, %375 ], [ 0, %300 ]
  %311 = phi i32 [ %379, %375 ], [ 0, %300 ]
  %312 = getelementptr inbounds %"struct.std::pair", ptr %309, i64 %310
  %313 = load i32, ptr %312, align 8, !tbaa !37
  %314 = load i32, ptr %32, align 8, !tbaa !61
  %315 = load ptr, ptr %33, align 8, !tbaa !58
  br label %316

316:                                              ; preds = %316, %305
  %317 = phi i32 [ %314, %305 ], [ %318, %316 ]
  %318 = add i32 %317, -1
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds i32, ptr %315, i64 %319
  %321 = load i32, ptr %320, align 4, !tbaa !22
  %322 = icmp ugt i32 %321, %313
  br i1 %322, label %316, label %323

323:                                              ; preds = %316
  %324 = load i32, ptr %3, align 8, !tbaa !61
  %325 = load ptr, ptr %28, align 8, !tbaa !58
  br label %326

326:                                              ; preds = %326, %323
  %327 = phi i32 [ %324, %323 ], [ %328, %326 ]
  %328 = add i32 %327, -1
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i32, ptr %325, i64 %329
  %331 = load i32, ptr %330, align 4, !tbaa !22
  %332 = icmp ugt i32 %331, %286
  br i1 %332, label %326, label %333

333:                                              ; preds = %326
  %334 = sub i32 %313, %321
  %335 = zext i32 %334 to i64
  %336 = sub i32 %286, %331
  %337 = load ptr, ptr %30, align 8, !tbaa !553, !noalias !768
  %338 = load i32, ptr %31, align 8, !tbaa !22, !noalias !768
  %339 = mul i32 %338, %318
  %340 = zext i32 %339 to i64
  %341 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %337, i64 %340
  %342 = zext i32 %328 to i64
  %343 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %341, i64 %342
  %344 = load ptr, ptr %343, align 8, !tbaa !557
  %345 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %344, i64 0, i32 3
  %346 = load ptr, ptr %345, align 8, !tbaa !438
  %347 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %346, i64 %335
  %348 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %346, i64 %335, i32 2
  %349 = load i32, ptr %348, align 8, !tbaa !440
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %367, label %351

351:                                              ; preds = %333
  %352 = zext i32 %349 to i64
  br label %356

353:                                              ; preds = %356
  %354 = add nuw nsw i64 %357, 1
  %355 = icmp eq i64 %354, %352
  br i1 %355, label %361, label %356

356:                                              ; preds = %353, %351
  %357 = phi i64 [ 0, %351 ], [ %354, %353 ]
  %358 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %346, i64 %335, i32 1, i64 %357
  %359 = load i32, ptr %358, align 4, !tbaa !22
  %360 = icmp eq i32 %359, %336
  br i1 %360, label %375, label %353

361:                                              ; preds = %353
  %362 = icmp eq i32 %349, 8
  br i1 %362, label %363, label %367

363:                                              ; preds = %361
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %347)
          to label %364 unwind label %303

364:                                              ; preds = %363
  %365 = load i32, ptr %348, align 8, !tbaa !440
  %366 = load ptr, ptr %14, align 8, !tbaa !72
  br label %367

367:                                              ; preds = %364, %361, %333
  %368 = phi ptr [ %366, %364 ], [ %306, %361 ], [ %306, %333 ]
  %369 = phi i32 [ %365, %364 ], [ %349, %361 ], [ 0, %333 ]
  %370 = zext i32 %369 to i64
  %371 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %346, i64 %335, i32 1, i64 %370
  store i32 %336, ptr %371, align 4, !tbaa !22
  %372 = load i32, ptr %348, align 8, !tbaa !440
  %373 = add i32 %372, 1
  store i32 %373, ptr %348, align 8, !tbaa !440
  %374 = load i32, ptr %69, align 4, !tbaa !22
  br label %375

375:                                              ; preds = %356, %367
  %376 = phi ptr [ %368, %367 ], [ %306, %356 ]
  %377 = phi ptr [ %368, %367 ], [ %307, %356 ]
  %378 = phi i32 [ %374, %367 ], [ %308, %356 ]
  %379 = add i32 %311, 1
  %380 = zext i32 %379 to i64
  %381 = zext i32 %378 to i64
  %382 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %377, i64 %381, i32 1
  %383 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %382, i64 0, i32 1
  %384 = load ptr, ptr %383, align 8, !tbaa !31
  %385 = load ptr, ptr %382, align 8, !tbaa !32
  %386 = ptrtoint ptr %384 to i64
  %387 = ptrtoint ptr %385 to i64
  %388 = sub i64 %386, %387
  %389 = ashr exact i64 %388, 4
  %390 = icmp eq i64 %389, %380
  br i1 %390, label %521, label %305

391:                                              ; preds = %299, %407
  %392 = phi ptr [ %408, %407 ], [ %293, %299 ]
  %393 = phi ptr [ %409, %407 ], [ %293, %299 ]
  %394 = phi i32 [ %410, %407 ], [ %291, %299 ]
  %395 = phi i32 [ %411, %407 ], [ %289, %299 ]
  %396 = phi i32 [ %412, %407 ], [ %289, %299 ]
  %397 = phi i64 [ %414, %407 ], [ 0, %299 ]
  %398 = phi i32 [ %413, %407 ], [ 0, %299 ]
  %399 = zext i32 %396 to i64
  %400 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %393, i64 %399, i32 1
  %401 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %400, i64 0, i32 1
  %402 = load ptr, ptr %401, align 8, !tbaa !31
  %403 = load ptr, ptr %400, align 8, !tbaa !32
  %404 = icmp eq ptr %402, %403
  br i1 %404, label %407, label %427

405:                                              ; preds = %504
  %406 = load i32, ptr %69, align 4, !tbaa !22
  br label %407

407:                                              ; preds = %405, %391
  %408 = phi ptr [ %505, %405 ], [ %392, %391 ]
  %409 = phi ptr [ %506, %405 ], [ %393, %391 ]
  %410 = phi i32 [ %406, %405 ], [ %394, %391 ]
  %411 = phi i32 [ %508, %405 ], [ %395, %391 ]
  %412 = phi i32 [ %508, %405 ], [ %396, %391 ]
  %413 = add i32 %398, 1
  %414 = zext i32 %413 to i64
  %415 = zext i32 %410 to i64
  %416 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %409, i64 %415, i32 1
  %417 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %416, i64 0, i32 1
  %418 = load ptr, ptr %417, align 8, !tbaa !31
  %419 = load ptr, ptr %416, align 8, !tbaa !32
  %420 = ptrtoint ptr %418 to i64
  %421 = ptrtoint ptr %419 to i64
  %422 = sub i64 %420, %421
  %423 = ashr exact i64 %422, 4
  %424 = icmp eq i64 %423, %414
  br i1 %424, label %521, label %391

425:                                              ; preds = %492
  %426 = landingpad { ptr, i32 }
          cleanup
  br label %526

427:                                              ; preds = %391, %504
  %428 = phi ptr [ %505, %504 ], [ %392, %391 ]
  %429 = phi ptr [ %506, %504 ], [ %393, %391 ]
  %430 = phi ptr [ %507, %504 ], [ %393, %391 ]
  %431 = phi i32 [ %508, %504 ], [ %395, %391 ]
  %432 = phi ptr [ %515, %504 ], [ %403, %391 ]
  %433 = phi i64 [ %510, %504 ], [ 0, %391 ]
  %434 = phi i32 [ %509, %504 ], [ 0, %391 ]
  %435 = load i32, ptr %69, align 4, !tbaa !22
  %436 = zext i32 %435 to i64
  %437 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %430, i64 %436, i32 1
  %438 = load ptr, ptr %437, align 8, !tbaa !32
  %439 = getelementptr inbounds %"struct.std::pair", ptr %438, i64 %397
  %440 = load i32, ptr %439, align 8, !tbaa !37
  %441 = getelementptr inbounds %"struct.std::pair", ptr %432, i64 %433
  %442 = load i32, ptr %441, align 8, !tbaa !37
  %443 = load i32, ptr %32, align 8, !tbaa !61
  %444 = load ptr, ptr %33, align 8, !tbaa !58
  br label %445

445:                                              ; preds = %445, %427
  %446 = phi i32 [ %443, %427 ], [ %447, %445 ]
  %447 = add i32 %446, -1
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds i32, ptr %444, i64 %448
  %450 = load i32, ptr %449, align 4, !tbaa !22
  %451 = icmp ugt i32 %450, %440
  br i1 %451, label %445, label %452

452:                                              ; preds = %445
  %453 = load i32, ptr %3, align 8, !tbaa !61
  %454 = load ptr, ptr %28, align 8, !tbaa !58
  br label %455

455:                                              ; preds = %455, %452
  %456 = phi i32 [ %453, %452 ], [ %457, %455 ]
  %457 = add i32 %456, -1
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds i32, ptr %454, i64 %458
  %460 = load i32, ptr %459, align 4, !tbaa !22
  %461 = icmp ugt i32 %460, %442
  br i1 %461, label %455, label %462

462:                                              ; preds = %455
  %463 = sub i32 %440, %450
  %464 = zext i32 %463 to i64
  %465 = sub i32 %442, %460
  %466 = load ptr, ptr %30, align 8, !tbaa !553, !noalias !771
  %467 = load i32, ptr %31, align 8, !tbaa !22, !noalias !771
  %468 = mul i32 %467, %447
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %466, i64 %469
  %471 = zext i32 %457 to i64
  %472 = getelementptr inbounds %"class.dealii::SmartPointer.169", ptr %470, i64 %471
  %473 = load ptr, ptr %472, align 8, !tbaa !557
  %474 = getelementptr inbounds %"class.dealii::CompressedSparsityPattern", ptr %473, i64 0, i32 3
  %475 = load ptr, ptr %474, align 8, !tbaa !438
  %476 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %475, i64 %464
  %477 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %475, i64 %464, i32 2
  %478 = load i32, ptr %477, align 8, !tbaa !440
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %496, label %480

480:                                              ; preds = %462
  %481 = zext i32 %478 to i64
  br label %485

482:                                              ; preds = %485
  %483 = add nuw nsw i64 %486, 1
  %484 = icmp eq i64 %483, %481
  br i1 %484, label %490, label %485

485:                                              ; preds = %482, %480
  %486 = phi i64 [ 0, %480 ], [ %483, %482 ]
  %487 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %475, i64 %464, i32 1, i64 %486
  %488 = load i32, ptr %487, align 4, !tbaa !22
  %489 = icmp eq i32 %488, %465
  br i1 %489, label %504, label %482

490:                                              ; preds = %482
  %491 = icmp eq i32 %478, 8
  br i1 %491, label %492, label %496

492:                                              ; preds = %490
  invoke void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %476)
          to label %493 unwind label %425

493:                                              ; preds = %492
  %494 = load i32, ptr %477, align 8, !tbaa !440
  %495 = load ptr, ptr %14, align 8, !tbaa !72
  br label %496

496:                                              ; preds = %493, %490, %462
  %497 = phi ptr [ %495, %493 ], [ %428, %490 ], [ %428, %462 ]
  %498 = phi i32 [ %494, %493 ], [ %478, %490 ], [ 0, %462 ]
  %499 = zext i32 %498 to i64
  %500 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %475, i64 %464, i32 1, i64 %499
  store i32 %465, ptr %500, align 4, !tbaa !22
  %501 = load i32, ptr %477, align 8, !tbaa !440
  %502 = add i32 %501, 1
  store i32 %502, ptr %477, align 8, !tbaa !440
  %503 = load i32, ptr %288, align 4, !tbaa !22
  br label %504

504:                                              ; preds = %485, %496
  %505 = phi ptr [ %497, %496 ], [ %428, %485 ]
  %506 = phi ptr [ %497, %496 ], [ %429, %485 ]
  %507 = phi ptr [ %497, %496 ], [ %430, %485 ]
  %508 = phi i32 [ %503, %496 ], [ %431, %485 ]
  %509 = add i32 %434, 1
  %510 = zext i32 %509 to i64
  %511 = zext i32 %508 to i64
  %512 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %507, i64 %511, i32 1
  %513 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %512, i64 0, i32 1
  %514 = load ptr, ptr %513, align 8, !tbaa !31
  %515 = load ptr, ptr %512, align 8, !tbaa !32
  %516 = ptrtoint ptr %514 to i64
  %517 = ptrtoint ptr %515 to i64
  %518 = sub i64 %516, %517
  %519 = ashr exact i64 %518, 4
  %520 = icmp eq i64 %519, %510
  br i1 %520, label %405, label %427

521:                                              ; preds = %407, %375, %299, %300
  %522 = add nuw nsw i64 %244, 1
  br label %243

523:                                              ; preds = %265, %106, %72, %73
  %524 = add nuw nsw i64 %54, 1
  %525 = icmp eq i64 %524, %34
  br i1 %525, label %47, label %53

526:                                              ; preds = %301, %303, %425, %268, %140, %142, %109, %51
  %527 = phi { ptr, i32 } [ %52, %51 ], [ %110, %109 ], [ %143, %142 ], [ %141, %140 ], [ %269, %268 ], [ %304, %303 ], [ %426, %425 ], [ %302, %301 ]
  %528 = icmp eq ptr %13, null
  br i1 %528, label %530, label %529

529:                                              ; preds = %526
  tail call void @_ZdlPv(ptr noundef nonnull %13) #23
  br label %530

530:                                              ; preds = %529, %526
  resume { ptr, i32 } %527
}

declare noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_25CompressedSparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288)) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK6dealii16ConstraintMatrix8condenseERNS_33BlockCompressedSetSparsityPatternE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(288) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %1, i64 0, i32 5
  %4 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !603
  %6 = tail call noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_28CompressedSetSparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %1)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = zext i32 %6 to i64
  %10 = shl nuw nsw i64 %9, 2
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %11, i8 -1, i64 %10, i1 false), !tbaa !22
  br label %12

12:                                               ; preds = %8, %2
  %13 = phi ptr [ null, %2 ], [ %11, %8 ]
  %14 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !70
  %17 = load ptr, ptr %14, align 8, !tbaa !72
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 40
  %22 = icmp eq ptr %16, %17
  br i1 %22, label %23, label %37

23:                                               ; preds = %37, %12
  %24 = invoke noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_28CompressedSetSparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %1)
          to label %25 unwind label %51

25:                                               ; preds = %23
  %26 = icmp eq i32 %24, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %1, i64 0, i32 5, i32 1
  %29 = icmp eq i32 %5, 0
  %30 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %1, i64 0, i32 3, i32 0, i32 1
  %31 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %32 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %1, i64 0, i32 4
  %33 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.129", ptr %1, i64 0, i32 4, i32 1
  %34 = zext i32 %24 to i64
  %35 = zext i32 %5 to i64
  %36 = zext i32 %5 to i64
  br label %53

37:                                               ; preds = %12, %37
  %38 = phi i64 [ %45, %37 ], [ 0, %12 ]
  %39 = phi i32 [ %44, %37 ], [ 0, %12 ]
  %40 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %17, i64 %38
  %41 = load i32, ptr %40, align 8, !tbaa !24
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i32, ptr %13, i64 %42
  store i32 %39, ptr %43, align 4, !tbaa !22
  %44 = add i32 %39, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %37, label %23

47:                                               ; preds = %543, %25
  %48 = icmp eq ptr %13, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %47
  tail call void @_ZdlPv(ptr noundef nonnull %13) #23
  br label %50

50:                                               ; preds = %47, %49
  ret void

51:                                               ; preds = %23
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %546

53:                                               ; preds = %27, %543
  %54 = phi i64 [ 0, %27 ], [ %544, %543 ]
  %55 = load i32, ptr %3, align 8, !tbaa !61
  %56 = load ptr, ptr %28, align 8, !tbaa !58
  br label %57

57:                                               ; preds = %57, %53
  %58 = phi i32 [ %55, %53 ], [ %59, %57 ]
  %59 = add i32 %58, -1
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, ptr %56, i64 %60
  %62 = load i32, ptr %61, align 4, !tbaa !22
  %63 = zext i32 %62 to i64
  %64 = icmp ult i64 %54, %63
  br i1 %64, label %57, label %65

65:                                               ; preds = %57
  %66 = trunc i64 %54 to i32
  %67 = sub i32 %66, %62
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i32, ptr %13, i64 %54
  %70 = load i32, ptr %69, align 4, !tbaa !22
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %73, label %72

72:                                               ; preds = %65
  br i1 %29, label %543, label %225

73:                                               ; preds = %65
  br i1 %29, label %543, label %74

74:                                               ; preds = %73, %89
  %75 = phi i64 [ %90, %89 ], [ 0, %73 ]
  %76 = load ptr, ptr %30, align 8, !tbaa !609, !noalias !774
  %77 = load i32, ptr %31, align 8, !tbaa !22, !noalias !774
  %78 = mul i32 %77, %59
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %76, i64 %79
  %81 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %80, i64 %75
  %82 = load ptr, ptr %81, align 8, !tbaa !613
  %83 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %82, i64 0, i32 3
  %84 = load ptr, ptr %83, align 8, !tbaa !455
  %85 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %84, i64 %68, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %86 = load ptr, ptr %85, align 8, !tbaa !457
  %87 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %84, i64 %68, i32 0, i32 0, i32 0, i32 1
  %88 = icmp eq ptr %86, %87
  br i1 %88, label %89, label %92

89:                                               ; preds = %220, %74
  %90 = add nuw nsw i64 %75, 1
  %91 = icmp eq i64 %90, %36
  br i1 %91, label %543, label %74

92:                                               ; preds = %74, %220
  %93 = phi ptr [ %221, %220 ], [ %84, %74 ]
  %94 = phi ptr [ %222, %220 ], [ %86, %74 ]
  %95 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %94, i64 0, i32 1
  %96 = load i32, ptr %95, align 4, !tbaa !22
  %97 = load ptr, ptr %28, align 8, !tbaa !58
  %98 = getelementptr inbounds i32, ptr %97, i64 %75
  %99 = load i32, ptr %98, align 4, !tbaa !22
  %100 = add i32 %99, %96
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %13, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !22
  %104 = icmp eq i32 %103, -1
  br i1 %104, label %220, label %105

105:                                              ; preds = %92
  %106 = zext i32 %103 to i64
  %107 = load ptr, ptr %14, align 8, !tbaa !72
  %108 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %107, i64 %106, i32 1
  %109 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %108, i64 0, i32 1
  %110 = load ptr, ptr %109, align 8, !tbaa !31
  %111 = load ptr, ptr %108, align 8, !tbaa !32
  %112 = icmp eq ptr %110, %111
  br i1 %112, label %220, label %115

113:                                              ; preds = %193
  %114 = landingpad { ptr, i32 }
          cleanup
  br label %546

115:                                              ; preds = %105, %203
  %116 = phi ptr [ %204, %203 ], [ %107, %105 ]
  %117 = phi i32 [ %205, %203 ], [ %103, %105 ]
  %118 = phi ptr [ %212, %203 ], [ %111, %105 ]
  %119 = phi i64 [ %207, %203 ], [ 0, %105 ]
  %120 = phi i32 [ %206, %203 ], [ 0, %105 ]
  %121 = getelementptr inbounds %"struct.std::pair", ptr %118, i64 %119
  %122 = load i32, ptr %121, align 8, !tbaa !37
  %123 = load i32, ptr %32, align 8, !tbaa !61
  %124 = load ptr, ptr %33, align 8, !tbaa !58
  br label %125

125:                                              ; preds = %125, %115
  %126 = phi i32 [ %123, %115 ], [ %127, %125 ]
  %127 = add i32 %126, -1
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i32, ptr %124, i64 %128
  %130 = load i32, ptr %129, align 4, !tbaa !22
  %131 = zext i32 %130 to i64
  %132 = icmp ult i64 %54, %131
  br i1 %132, label %125, label %133

133:                                              ; preds = %125
  %134 = load i32, ptr %3, align 8, !tbaa !61
  %135 = load ptr, ptr %28, align 8, !tbaa !58
  br label %136

136:                                              ; preds = %136, %133
  %137 = phi i32 [ %134, %133 ], [ %138, %136 ]
  %138 = add i32 %137, -1
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i32, ptr %135, i64 %139
  %141 = load i32, ptr %140, align 4, !tbaa !22
  %142 = icmp ugt i32 %141, %122
  br i1 %142, label %136, label %143

143:                                              ; preds = %136
  %144 = sub i32 %66, %130
  %145 = zext i32 %144 to i64
  %146 = sub i32 %122, %141
  %147 = load ptr, ptr %30, align 8, !tbaa !609, !noalias !777
  %148 = load i32, ptr %31, align 8, !tbaa !22, !noalias !777
  %149 = mul i32 %148, %127
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %147, i64 %150
  %152 = zext i32 %138 to i64
  %153 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %151, i64 %152
  %154 = load ptr, ptr %153, align 8, !tbaa !613
  %155 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %154, i64 0, i32 3
  %156 = load ptr, ptr %155, align 8, !tbaa !455
  %157 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %156, i64 %145
  %158 = getelementptr inbounds i8, ptr %157, i64 16
  %159 = getelementptr inbounds i8, ptr %157, i64 8
  %160 = load ptr, ptr %158, align 8, !tbaa !21
  %161 = icmp eq ptr %160, null
  br i1 %161, label %173, label %162

162:                                              ; preds = %143, %162
  %163 = phi ptr [ %170, %162 ], [ %160, %143 ]
  %164 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %163, i64 0, i32 1
  %165 = load i32, ptr %164, align 4, !tbaa !22
  %166 = icmp ugt i32 %165, %146
  %167 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %163, i64 0, i32 2
  %168 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %163, i64 0, i32 3
  %169 = select i1 %166, ptr %167, ptr %168
  %170 = load ptr, ptr %169, align 8, !tbaa !21
  %171 = icmp eq ptr %170, null
  br i1 %171, label %172, label %162

172:                                              ; preds = %162
  br i1 %166, label %173, label %182

173:                                              ; preds = %172, %143
  %174 = phi ptr [ %163, %172 ], [ %159, %143 ]
  %175 = getelementptr inbounds i8, ptr %157, i64 24
  %176 = load ptr, ptr %175, align 8, !tbaa !457
  %177 = icmp eq ptr %174, %176
  br i1 %177, label %186, label %178

178:                                              ; preds = %173
  %179 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %174) #26
  %180 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %179, i64 0, i32 1
  %181 = load i32, ptr %180, align 4, !tbaa !22
  br label %182

182:                                              ; preds = %178, %172
  %183 = phi i32 [ %181, %178 ], [ %165, %172 ]
  %184 = phi ptr [ %174, %178 ], [ %163, %172 ]
  %185 = icmp ult i32 %183, %146
  br i1 %185, label %186, label %203

186:                                              ; preds = %182, %173
  %187 = phi ptr [ %174, %173 ], [ %184, %182 ]
  %188 = icmp eq ptr %159, %187
  br i1 %188, label %193, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %187, i64 0, i32 1
  %191 = load i32, ptr %190, align 4, !tbaa !22
  %192 = icmp ugt i32 %191, %146
  br label %193

193:                                              ; preds = %189, %186
  %194 = phi i1 [ true, %186 ], [ %192, %189 ]
  %195 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %196 unwind label %113

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %195, i64 0, i32 1
  store i32 %146, ptr %197, align 4, !tbaa !22
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %194, ptr noundef nonnull %195, ptr noundef nonnull %187, ptr noundef nonnull align 8 dereferenceable(32) %159) #24
  %198 = getelementptr inbounds i8, ptr %157, i64 40
  %199 = load i64, ptr %198, align 8, !tbaa !458
  %200 = add i64 %199, 1
  store i64 %200, ptr %198, align 8, !tbaa !458
  %201 = load i32, ptr %102, align 4, !tbaa !22
  %202 = load ptr, ptr %14, align 8, !tbaa !72
  br label %203

203:                                              ; preds = %196, %182
  %204 = phi ptr [ %202, %196 ], [ %116, %182 ]
  %205 = phi i32 [ %201, %196 ], [ %117, %182 ]
  %206 = add i32 %120, 1
  %207 = zext i32 %206 to i64
  %208 = zext i32 %205 to i64
  %209 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %204, i64 %208, i32 1
  %210 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %209, i64 0, i32 1
  %211 = load ptr, ptr %210, align 8, !tbaa !31
  %212 = load ptr, ptr %209, align 8, !tbaa !32
  %213 = ptrtoint ptr %211 to i64
  %214 = ptrtoint ptr %212 to i64
  %215 = sub i64 %213, %214
  %216 = ashr exact i64 %215, 4
  %217 = icmp eq i64 %216, %207
  br i1 %217, label %218, label %115

218:                                              ; preds = %203
  %219 = load ptr, ptr %83, align 8, !tbaa !455
  br label %220

220:                                              ; preds = %218, %105, %92
  %221 = phi ptr [ %219, %218 ], [ %93, %105 ], [ %93, %92 ]
  %222 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef %94) #26
  %223 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %221, i64 %68, i32 0, i32 0, i32 0, i32 1
  %224 = icmp eq ptr %222, %223
  br i1 %224, label %89, label %92

225:                                              ; preds = %72, %244
  %226 = phi i32 [ %245, %244 ], [ %70, %72 ]
  %227 = phi i32 [ %246, %244 ], [ %70, %72 ]
  %228 = phi i32 [ %247, %244 ], [ %70, %72 ]
  %229 = phi i32 [ %248, %244 ], [ %70, %72 ]
  %230 = phi i64 [ %249, %244 ], [ 0, %72 ]
  %231 = load ptr, ptr %30, align 8, !tbaa !609, !noalias !780
  %232 = load i32, ptr %31, align 8, !tbaa !22, !noalias !780
  %233 = mul i32 %232, %59
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %231, i64 %234
  %236 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %235, i64 %230
  %237 = load ptr, ptr %236, align 8, !tbaa !613
  %238 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %237, i64 0, i32 3
  %239 = load ptr, ptr %238, align 8, !tbaa !455
  %240 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %239, i64 %68, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %241 = load ptr, ptr %240, align 8, !tbaa !457
  %242 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %239, i64 %68, i32 0, i32 0, i32 0, i32 1
  %243 = icmp eq ptr %241, %242
  br i1 %243, label %244, label %251

244:                                              ; preds = %534, %225
  %245 = phi i32 [ %226, %225 ], [ %535, %534 ]
  %246 = phi i32 [ %227, %225 ], [ %536, %534 ]
  %247 = phi i32 [ %228, %225 ], [ %537, %534 ]
  %248 = phi i32 [ %229, %225 ], [ %538, %534 ]
  %249 = add nuw nsw i64 %230, 1
  %250 = icmp eq i64 %249, %35
  br i1 %250, label %543, label %225

251:                                              ; preds = %225, %534
  %252 = phi i32 [ %535, %534 ], [ %226, %225 ]
  %253 = phi i32 [ %536, %534 ], [ %227, %225 ]
  %254 = phi i32 [ %537, %534 ], [ %228, %225 ]
  %255 = phi i32 [ %538, %534 ], [ %229, %225 ]
  %256 = phi ptr [ %539, %534 ], [ %241, %225 ]
  %257 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %256, i64 0, i32 1
  %258 = load i32, ptr %257, align 4, !tbaa !22
  %259 = load ptr, ptr %28, align 8, !tbaa !58
  %260 = getelementptr inbounds i32, ptr %259, i64 %230
  %261 = load i32, ptr %260, align 4, !tbaa !22
  %262 = add i32 %261, %258
  %263 = zext i32 %262 to i64
  %264 = getelementptr inbounds i32, ptr %13, i64 %263
  %265 = load i32, ptr %264, align 4, !tbaa !22
  %266 = icmp eq i32 %265, -1
  %267 = load ptr, ptr %14, align 8, !tbaa !72
  br i1 %266, label %275, label %268

268:                                              ; preds = %251
  %269 = zext i32 %255 to i64
  %270 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 %269, i32 1
  %271 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %270, i64 0, i32 1
  %272 = load ptr, ptr %271, align 8, !tbaa !31
  %273 = load ptr, ptr %270, align 8, !tbaa !32
  %274 = icmp eq ptr %272, %273
  br i1 %274, label %534, label %386

275:                                              ; preds = %251
  %276 = zext i32 %253 to i64
  %277 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %267, i64 %276, i32 1
  %278 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %277, i64 0, i32 1
  %279 = load ptr, ptr %278, align 8, !tbaa !31
  %280 = load ptr, ptr %277, align 8, !tbaa !32
  %281 = icmp eq ptr %279, %280
  br i1 %281, label %534, label %284

282:                                              ; preds = %361
  %283 = landingpad { ptr, i32 }
          cleanup
  br label %546

284:                                              ; preds = %275, %371
  %285 = phi ptr [ %372, %371 ], [ %267, %275 ]
  %286 = phi i32 [ %373, %371 ], [ %252, %275 ]
  %287 = phi ptr [ %380, %371 ], [ %280, %275 ]
  %288 = phi i64 [ %375, %371 ], [ 0, %275 ]
  %289 = phi i32 [ %374, %371 ], [ 0, %275 ]
  %290 = getelementptr inbounds %"struct.std::pair", ptr %287, i64 %288
  %291 = load i32, ptr %290, align 8, !tbaa !37
  %292 = load i32, ptr %32, align 8, !tbaa !61
  %293 = load ptr, ptr %33, align 8, !tbaa !58
  br label %294

294:                                              ; preds = %294, %284
  %295 = phi i32 [ %292, %284 ], [ %296, %294 ]
  %296 = add i32 %295, -1
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i32, ptr %293, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !22
  %300 = icmp ugt i32 %299, %291
  br i1 %300, label %294, label %301

301:                                              ; preds = %294
  %302 = load i32, ptr %3, align 8, !tbaa !61
  %303 = load ptr, ptr %28, align 8, !tbaa !58
  br label %304

304:                                              ; preds = %304, %301
  %305 = phi i32 [ %302, %301 ], [ %306, %304 ]
  %306 = add i32 %305, -1
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds i32, ptr %303, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !22
  %310 = icmp ugt i32 %309, %262
  br i1 %310, label %304, label %311

311:                                              ; preds = %304
  %312 = sub i32 %291, %299
  %313 = zext i32 %312 to i64
  %314 = sub i32 %262, %309
  %315 = load ptr, ptr %30, align 8, !tbaa !609, !noalias !783
  %316 = load i32, ptr %31, align 8, !tbaa !22, !noalias !783
  %317 = mul i32 %316, %296
  %318 = zext i32 %317 to i64
  %319 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %315, i64 %318
  %320 = zext i32 %306 to i64
  %321 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %319, i64 %320
  %322 = load ptr, ptr %321, align 8, !tbaa !613
  %323 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %322, i64 0, i32 3
  %324 = load ptr, ptr %323, align 8, !tbaa !455
  %325 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %324, i64 %313
  %326 = getelementptr inbounds i8, ptr %325, i64 16
  %327 = getelementptr inbounds i8, ptr %325, i64 8
  %328 = load ptr, ptr %326, align 8, !tbaa !21
  %329 = icmp eq ptr %328, null
  br i1 %329, label %341, label %330

330:                                              ; preds = %311, %330
  %331 = phi ptr [ %338, %330 ], [ %328, %311 ]
  %332 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %331, i64 0, i32 1
  %333 = load i32, ptr %332, align 4, !tbaa !22
  %334 = icmp ugt i32 %333, %314
  %335 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %331, i64 0, i32 2
  %336 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %331, i64 0, i32 3
  %337 = select i1 %334, ptr %335, ptr %336
  %338 = load ptr, ptr %337, align 8, !tbaa !21
  %339 = icmp eq ptr %338, null
  br i1 %339, label %340, label %330

340:                                              ; preds = %330
  br i1 %334, label %341, label %350

341:                                              ; preds = %340, %311
  %342 = phi ptr [ %331, %340 ], [ %327, %311 ]
  %343 = getelementptr inbounds i8, ptr %325, i64 24
  %344 = load ptr, ptr %343, align 8, !tbaa !457
  %345 = icmp eq ptr %342, %344
  br i1 %345, label %354, label %346

346:                                              ; preds = %341
  %347 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %342) #26
  %348 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %347, i64 0, i32 1
  %349 = load i32, ptr %348, align 4, !tbaa !22
  br label %350

350:                                              ; preds = %346, %340
  %351 = phi i32 [ %349, %346 ], [ %333, %340 ]
  %352 = phi ptr [ %342, %346 ], [ %331, %340 ]
  %353 = icmp ult i32 %351, %314
  br i1 %353, label %354, label %371

354:                                              ; preds = %350, %341
  %355 = phi ptr [ %342, %341 ], [ %352, %350 ]
  %356 = icmp eq ptr %327, %355
  br i1 %356, label %361, label %357

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %355, i64 0, i32 1
  %359 = load i32, ptr %358, align 4, !tbaa !22
  %360 = icmp ugt i32 %359, %314
  br label %361

361:                                              ; preds = %357, %354
  %362 = phi i1 [ true, %354 ], [ %360, %357 ]
  %363 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %364 unwind label %282

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %363, i64 0, i32 1
  store i32 %314, ptr %365, align 4, !tbaa !22
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %362, ptr noundef nonnull %363, ptr noundef nonnull %355, ptr noundef nonnull align 8 dereferenceable(32) %327) #24
  %366 = getelementptr inbounds i8, ptr %325, i64 40
  %367 = load i64, ptr %366, align 8, !tbaa !458
  %368 = add i64 %367, 1
  store i64 %368, ptr %366, align 8, !tbaa !458
  %369 = load i32, ptr %69, align 4, !tbaa !22
  %370 = load ptr, ptr %14, align 8, !tbaa !72
  br label %371

371:                                              ; preds = %364, %350
  %372 = phi ptr [ %370, %364 ], [ %285, %350 ]
  %373 = phi i32 [ %369, %364 ], [ %286, %350 ]
  %374 = add i32 %289, 1
  %375 = zext i32 %374 to i64
  %376 = zext i32 %373 to i64
  %377 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %372, i64 %376, i32 1
  %378 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %377, i64 0, i32 1
  %379 = load ptr, ptr %378, align 8, !tbaa !31
  %380 = load ptr, ptr %377, align 8, !tbaa !32
  %381 = ptrtoint ptr %379 to i64
  %382 = ptrtoint ptr %380 to i64
  %383 = sub i64 %381, %382
  %384 = ashr exact i64 %383, 4
  %385 = icmp eq i64 %384, %375
  br i1 %385, label %534, label %284

386:                                              ; preds = %268, %403
  %387 = phi i32 [ %404, %403 ], [ %252, %268 ]
  %388 = phi i32 [ %405, %403 ], [ %253, %268 ]
  %389 = phi ptr [ %406, %403 ], [ %267, %268 ]
  %390 = phi i32 [ %407, %403 ], [ %254, %268 ]
  %391 = phi i32 [ %408, %403 ], [ %265, %268 ]
  %392 = phi i32 [ %409, %403 ], [ %265, %268 ]
  %393 = phi i64 [ %411, %403 ], [ 0, %268 ]
  %394 = phi i32 [ %410, %403 ], [ 0, %268 ]
  %395 = zext i32 %392 to i64
  %396 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %389, i64 %395, i32 1
  %397 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %396, i64 0, i32 1
  %398 = load ptr, ptr %397, align 8, !tbaa !31
  %399 = load ptr, ptr %396, align 8, !tbaa !32
  %400 = icmp eq ptr %398, %399
  br i1 %400, label %403, label %424

401:                                              ; preds = %518
  %402 = load i32, ptr %69, align 4, !tbaa !22
  br label %403

403:                                              ; preds = %401, %386
  %404 = phi i32 [ %402, %401 ], [ %387, %386 ]
  %405 = phi i32 [ %402, %401 ], [ %388, %386 ]
  %406 = phi ptr [ %519, %401 ], [ %389, %386 ]
  %407 = phi i32 [ %402, %401 ], [ %390, %386 ]
  %408 = phi i32 [ %521, %401 ], [ %391, %386 ]
  %409 = phi i32 [ %521, %401 ], [ %392, %386 ]
  %410 = add i32 %394, 1
  %411 = zext i32 %410 to i64
  %412 = zext i32 %407 to i64
  %413 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %406, i64 %412, i32 1
  %414 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %413, i64 0, i32 1
  %415 = load ptr, ptr %414, align 8, !tbaa !31
  %416 = load ptr, ptr %413, align 8, !tbaa !32
  %417 = ptrtoint ptr %415 to i64
  %418 = ptrtoint ptr %416 to i64
  %419 = sub i64 %417, %418
  %420 = ashr exact i64 %419, 4
  %421 = icmp eq i64 %420, %411
  br i1 %421, label %534, label %386

422:                                              ; preds = %508
  %423 = landingpad { ptr, i32 }
          cleanup
  br label %546

424:                                              ; preds = %386, %518
  %425 = phi ptr [ %519, %518 ], [ %389, %386 ]
  %426 = phi ptr [ %520, %518 ], [ %389, %386 ]
  %427 = phi i32 [ %521, %518 ], [ %391, %386 ]
  %428 = phi ptr [ %528, %518 ], [ %399, %386 ]
  %429 = phi i64 [ %523, %518 ], [ 0, %386 ]
  %430 = phi i32 [ %522, %518 ], [ 0, %386 ]
  %431 = load i32, ptr %69, align 4, !tbaa !22
  %432 = zext i32 %431 to i64
  %433 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %426, i64 %432, i32 1
  %434 = load ptr, ptr %433, align 8, !tbaa !32
  %435 = getelementptr inbounds %"struct.std::pair", ptr %434, i64 %393
  %436 = load i32, ptr %435, align 8, !tbaa !37
  %437 = getelementptr inbounds %"struct.std::pair", ptr %428, i64 %429
  %438 = load i32, ptr %437, align 8, !tbaa !37
  %439 = load i32, ptr %32, align 8, !tbaa !61
  %440 = load ptr, ptr %33, align 8, !tbaa !58
  br label %441

441:                                              ; preds = %441, %424
  %442 = phi i32 [ %439, %424 ], [ %443, %441 ]
  %443 = add i32 %442, -1
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds i32, ptr %440, i64 %444
  %446 = load i32, ptr %445, align 4, !tbaa !22
  %447 = icmp ugt i32 %446, %436
  br i1 %447, label %441, label %448

448:                                              ; preds = %441
  %449 = load i32, ptr %3, align 8, !tbaa !61
  %450 = load ptr, ptr %28, align 8, !tbaa !58
  br label %451

451:                                              ; preds = %451, %448
  %452 = phi i32 [ %449, %448 ], [ %453, %451 ]
  %453 = add i32 %452, -1
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds i32, ptr %450, i64 %454
  %456 = load i32, ptr %455, align 4, !tbaa !22
  %457 = icmp ugt i32 %456, %438
  br i1 %457, label %451, label %458

458:                                              ; preds = %451
  %459 = sub i32 %436, %446
  %460 = zext i32 %459 to i64
  %461 = sub i32 %438, %456
  %462 = load ptr, ptr %30, align 8, !tbaa !609, !noalias !786
  %463 = load i32, ptr %31, align 8, !tbaa !22, !noalias !786
  %464 = mul i32 %463, %443
  %465 = zext i32 %464 to i64
  %466 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %462, i64 %465
  %467 = zext i32 %453 to i64
  %468 = getelementptr inbounds %"class.dealii::SmartPointer.171", ptr %466, i64 %467
  %469 = load ptr, ptr %468, align 8, !tbaa !613
  %470 = getelementptr inbounds %"class.dealii::CompressedSetSparsityPattern", ptr %469, i64 0, i32 3
  %471 = load ptr, ptr %470, align 8, !tbaa !455
  %472 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %471, i64 %460
  %473 = getelementptr inbounds i8, ptr %472, i64 16
  %474 = getelementptr inbounds i8, ptr %472, i64 8
  %475 = load ptr, ptr %473, align 8, !tbaa !21
  %476 = icmp eq ptr %475, null
  br i1 %476, label %488, label %477

477:                                              ; preds = %458, %477
  %478 = phi ptr [ %485, %477 ], [ %475, %458 ]
  %479 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %478, i64 0, i32 1
  %480 = load i32, ptr %479, align 4, !tbaa !22
  %481 = icmp ugt i32 %480, %461
  %482 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %478, i64 0, i32 2
  %483 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %478, i64 0, i32 3
  %484 = select i1 %481, ptr %482, ptr %483
  %485 = load ptr, ptr %484, align 8, !tbaa !21
  %486 = icmp eq ptr %485, null
  br i1 %486, label %487, label %477

487:                                              ; preds = %477
  br i1 %481, label %488, label %497

488:                                              ; preds = %487, %458
  %489 = phi ptr [ %478, %487 ], [ %474, %458 ]
  %490 = getelementptr inbounds i8, ptr %472, i64 24
  %491 = load ptr, ptr %490, align 8, !tbaa !457
  %492 = icmp eq ptr %489, %491
  br i1 %492, label %501, label %493

493:                                              ; preds = %488
  %494 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %489) #26
  %495 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %494, i64 0, i32 1
  %496 = load i32, ptr %495, align 4, !tbaa !22
  br label %497

497:                                              ; preds = %493, %487
  %498 = phi i32 [ %496, %493 ], [ %480, %487 ]
  %499 = phi ptr [ %489, %493 ], [ %478, %487 ]
  %500 = icmp ult i32 %498, %461
  br i1 %500, label %501, label %518

501:                                              ; preds = %497, %488
  %502 = phi ptr [ %489, %488 ], [ %499, %497 ]
  %503 = icmp eq ptr %474, %502
  br i1 %503, label %508, label %504

504:                                              ; preds = %501
  %505 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %502, i64 0, i32 1
  %506 = load i32, ptr %505, align 4, !tbaa !22
  %507 = icmp ugt i32 %506, %461
  br label %508

508:                                              ; preds = %504, %501
  %509 = phi i1 [ true, %501 ], [ %507, %504 ]
  %510 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
          to label %511 unwind label %422

511:                                              ; preds = %508
  %512 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %510, i64 0, i32 1
  store i32 %461, ptr %512, align 4, !tbaa !22
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %509, ptr noundef nonnull %510, ptr noundef nonnull %502, ptr noundef nonnull align 8 dereferenceable(32) %474) #24
  %513 = getelementptr inbounds i8, ptr %472, i64 40
  %514 = load i64, ptr %513, align 8, !tbaa !458
  %515 = add i64 %514, 1
  store i64 %515, ptr %513, align 8, !tbaa !458
  %516 = load i32, ptr %264, align 4, !tbaa !22
  %517 = load ptr, ptr %14, align 8, !tbaa !72
  br label %518

518:                                              ; preds = %511, %497
  %519 = phi ptr [ %517, %511 ], [ %425, %497 ]
  %520 = phi ptr [ %517, %511 ], [ %426, %497 ]
  %521 = phi i32 [ %516, %511 ], [ %427, %497 ]
  %522 = add i32 %430, 1
  %523 = zext i32 %522 to i64
  %524 = zext i32 %521 to i64
  %525 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %520, i64 %524, i32 1
  %526 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %525, i64 0, i32 1
  %527 = load ptr, ptr %526, align 8, !tbaa !31
  %528 = load ptr, ptr %525, align 8, !tbaa !32
  %529 = ptrtoint ptr %527 to i64
  %530 = ptrtoint ptr %528 to i64
  %531 = sub i64 %529, %530
  %532 = ashr exact i64 %531, 4
  %533 = icmp eq i64 %532, %523
  br i1 %533, label %401, label %424

534:                                              ; preds = %403, %371, %268, %275
  %535 = phi i32 [ %252, %268 ], [ %252, %275 ], [ %373, %371 ], [ %404, %403 ]
  %536 = phi i32 [ %253, %268 ], [ %253, %275 ], [ %373, %371 ], [ %405, %403 ]
  %537 = phi i32 [ %254, %268 ], [ %253, %275 ], [ %373, %371 ], [ %407, %403 ]
  %538 = phi i32 [ %255, %268 ], [ %253, %275 ], [ %373, %371 ], [ %407, %403 ]
  %539 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef %256) #26
  %540 = load ptr, ptr %238, align 8, !tbaa !455
  %541 = getelementptr inbounds %"struct.dealii::CompressedSetSparsityPattern::Line", ptr %540, i64 %68, i32 0, i32 0, i32 0, i32 1
  %542 = icmp eq ptr %539, %541
  br i1 %542, label %244, label %251

543:                                              ; preds = %244, %89, %72, %73
  %544 = add nuw nsw i64 %54, 1
  %545 = icmp eq i64 %544, %34
  br i1 %545, label %47, label %53

546:                                              ; preds = %422, %282, %113, %51
  %547 = phi { ptr, i32 } [ %52, %51 ], [ %114, %113 ], [ %283, %282 ], [ %423, %422 ]
  %548 = icmp eq ptr %13, null
  br i1 %548, label %550, label %549

549:                                              ; preds = %546
  tail call void @_ZdlPv(ptr noundef nonnull %13) #23
  br label %550

550:                                              ; preds = %549, %546
  resume { ptr, i32 } %547
}

declare noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_28CompressedSetSparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288)) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK6dealii16ConstraintMatrix8condenseERNS_36BlockCompressedSimpleSparsityPatternE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(288) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %1, i64 0, i32 5
  %4 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !659
  %6 = tail call noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_31CompressedSimpleSparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %1)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = zext i32 %6 to i64
  %10 = shl nuw nsw i64 %9, 2
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #21
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %11, i8 -1, i64 %10, i1 false), !tbaa !22
  br label %12

12:                                               ; preds = %8, %2
  %13 = phi ptr [ null, %2 ], [ %11, %8 ]
  %14 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !70
  %17 = load ptr, ptr %14, align 8, !tbaa !72
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 40
  %22 = icmp eq ptr %16, %17
  br i1 %22, label %23, label %37

23:                                               ; preds = %37, %12
  %24 = invoke noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_31CompressedSimpleSparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288) %1)
          to label %25 unwind label %51

25:                                               ; preds = %23
  %26 = icmp eq i32 %24, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %1, i64 0, i32 5, i32 1
  %29 = icmp eq i32 %5, 0
  %30 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %1, i64 0, i32 3, i32 0, i32 1
  %31 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %32 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %1, i64 0, i32 4
  %33 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %1, i64 0, i32 4, i32 1
  %34 = zext i32 %24 to i64
  %35 = zext i32 %5 to i64
  %36 = zext i32 %5 to i64
  br label %53

37:                                               ; preds = %12, %37
  %38 = phi i64 [ %45, %37 ], [ 0, %12 ]
  %39 = phi i32 [ %44, %37 ], [ 0, %12 ]
  %40 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %17, i64 %38
  %41 = load i32, ptr %40, align 8, !tbaa !24
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i32, ptr %13, i64 %42
  store i32 %39, ptr %43, align 4, !tbaa !22
  %44 = add i32 %39, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %37, label %23

47:                                               ; preds = %832, %25
  %48 = icmp eq ptr %13, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %47
  tail call void @_ZdlPv(ptr noundef nonnull %13) #23
  br label %50

50:                                               ; preds = %47, %49
  ret void

51:                                               ; preds = %23
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %835

53:                                               ; preds = %27, %832
  %54 = phi i64 [ 0, %27 ], [ %833, %832 ]
  %55 = load i32, ptr %3, align 8, !tbaa !61
  %56 = load ptr, ptr %28, align 8, !tbaa !58
  br label %57

57:                                               ; preds = %57, %53
  %58 = phi i32 [ %55, %53 ], [ %59, %57 ]
  %59 = add i32 %58, -1
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, ptr %56, i64 %60
  %62 = load i32, ptr %61, align 4, !tbaa !22
  %63 = zext i32 %62 to i64
  %64 = icmp ult i64 %54, %63
  br i1 %64, label %57, label %65

65:                                               ; preds = %57
  %66 = trunc i64 %54 to i32
  %67 = sub i32 %66, %62
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i32, ptr %13, i64 %54
  %70 = load i32, ptr %69, align 4, !tbaa !22
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %73, label %72

72:                                               ; preds = %65
  br i1 %29, label %832, label %329

73:                                               ; preds = %65
  br i1 %29, label %832, label %74

74:                                               ; preds = %73, %94
  %75 = phi i64 [ %95, %94 ], [ 0, %73 ]
  %76 = load ptr, ptr %30, align 8, !tbaa !665, !noalias !789
  %77 = load i32, ptr %31, align 8, !tbaa !22, !noalias !789
  %78 = mul i32 %77, %59
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %76, i64 %79
  %81 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %80, i64 %75
  %82 = load ptr, ptr %81, align 8, !tbaa !669
  %83 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %82, i64 0, i32 3
  %84 = load ptr, ptr %83, align 8, !tbaa !472
  %85 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %84, i64 %68
  %86 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %85, i64 0, i32 1
  %87 = load ptr, ptr %86, align 8, !tbaa !313
  %88 = load ptr, ptr %85, align 8, !tbaa !58
  %89 = ptrtoint ptr %87 to i64
  %90 = ptrtoint ptr %88 to i64
  %91 = sub i64 %89, %90
  %92 = and i64 %91, 17179869180
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %316, %74
  %95 = add nuw nsw i64 %75, 1
  %96 = icmp eq i64 %95, %36
  br i1 %96, label %832, label %74

97:                                               ; preds = %74, %316
  %98 = phi ptr [ %317, %316 ], [ %84, %74 ]
  %99 = phi i64 [ %318, %316 ], [ 0, %74 ]
  %100 = phi ptr [ %322, %316 ], [ %88, %74 ]
  %101 = getelementptr inbounds i32, ptr %100, i64 %99
  %102 = load i32, ptr %101, align 4, !tbaa !22
  %103 = load ptr, ptr %28, align 8, !tbaa !58
  %104 = getelementptr inbounds i32, ptr %103, i64 %75
  %105 = load i32, ptr %104, align 4, !tbaa !22
  %106 = add i32 %105, %102
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i32, ptr %13, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !22
  %110 = icmp eq i32 %109, -1
  br i1 %110, label %316, label %111

111:                                              ; preds = %97
  %112 = zext i32 %109 to i64
  %113 = load ptr, ptr %14, align 8, !tbaa !72
  %114 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %113, i64 %112, i32 1
  %115 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %115, align 8, !tbaa !31
  %117 = load ptr, ptr %114, align 8, !tbaa !32
  %118 = icmp eq ptr %116, %117
  br i1 %118, label %316, label %123

119:                                              ; preds = %271, %192
  %120 = landingpad { ptr, i32 }
          cleanup
  br label %835

121:                                              ; preds = %258
  %122 = landingpad { ptr, i32 }
          cleanup
  br label %835

123:                                              ; preds = %111, %299
  %124 = phi ptr [ %308, %299 ], [ %117, %111 ]
  %125 = phi i64 [ %301, %299 ], [ 0, %111 ]
  %126 = phi i32 [ %300, %299 ], [ 0, %111 ]
  %127 = getelementptr inbounds %"struct.std::pair", ptr %124, i64 %125
  %128 = load i32, ptr %127, align 8, !tbaa !37
  %129 = load i32, ptr %32, align 8, !tbaa !61
  %130 = load ptr, ptr %33, align 8, !tbaa !58
  br label %131

131:                                              ; preds = %131, %123
  %132 = phi i32 [ %129, %123 ], [ %133, %131 ]
  %133 = add i32 %132, -1
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i32, ptr %130, i64 %134
  %136 = load i32, ptr %135, align 4, !tbaa !22
  %137 = zext i32 %136 to i64
  %138 = icmp ult i64 %54, %137
  br i1 %138, label %131, label %139

139:                                              ; preds = %131
  %140 = load i32, ptr %3, align 8, !tbaa !61
  %141 = load ptr, ptr %28, align 8, !tbaa !58
  br label %142

142:                                              ; preds = %142, %139
  %143 = phi i32 [ %140, %139 ], [ %144, %142 ]
  %144 = add i32 %143, -1
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i32, ptr %141, i64 %145
  %147 = load i32, ptr %146, align 4, !tbaa !22
  %148 = icmp ugt i32 %147, %128
  br i1 %148, label %142, label %149

149:                                              ; preds = %142
  %150 = sub i32 %66, %136
  %151 = zext i32 %150 to i64
  %152 = sub i32 %128, %147
  %153 = load ptr, ptr %30, align 8, !tbaa !665, !noalias !792
  %154 = load i32, ptr %31, align 8, !tbaa !22, !noalias !792
  %155 = mul i32 %154, %133
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %153, i64 %156
  %158 = zext i32 %144 to i64
  %159 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %157, i64 %158
  %160 = load ptr, ptr %159, align 8, !tbaa !669
  %161 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %160, i64 0, i32 3
  %162 = load ptr, ptr %161, align 8, !tbaa !472
  %163 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %162, i64 %151
  %164 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %163, i64 0, i32 1
  %165 = load ptr, ptr %164, align 8, !tbaa !21
  %166 = load ptr, ptr %163, align 8, !tbaa !21
  %167 = ptrtoint ptr %165 to i64
  %168 = ptrtoint ptr %166 to i64
  %169 = sub i64 %167, %168
  %170 = icmp eq ptr %165, %166
  br i1 %170, label %175, label %171

171:                                              ; preds = %149
  %172 = getelementptr inbounds i32, ptr %165, i64 -1
  %173 = load i32, ptr %172, align 4, !tbaa !22
  %174 = icmp ult i32 %173, %152
  br i1 %174, label %175, label %213

175:                                              ; preds = %171, %149
  %176 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %163, i64 0, i32 2
  %177 = load ptr, ptr %176, align 8, !tbaa !417
  %178 = icmp eq ptr %165, %177
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  store i32 %152, ptr %165, align 4, !tbaa !22
  %180 = getelementptr inbounds i32, ptr %165, i64 1
  store ptr %180, ptr %164, align 8, !tbaa !313
  br label %299

181:                                              ; preds = %175
  %182 = icmp eq i64 %169, 9223372036854775804
  br i1 %182, label %258, label %183

183:                                              ; preds = %181
  %184 = ashr exact i64 %169, 2
  %185 = tail call i64 @llvm.umax.i64(i64 %184, i64 1)
  %186 = add i64 %185, %184
  %187 = icmp ult i64 %186, %184
  %188 = icmp ugt i64 %186, 2305843009213693951
  %189 = or i1 %187, %188
  %190 = select i1 %189, i64 2305843009213693951, i64 %186
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %183
  %193 = shl nuw nsw i64 %190, 2
  %194 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %193) #21
          to label %195 unwind label %119

195:                                              ; preds = %192, %183
  %196 = phi ptr [ null, %183 ], [ %194, %192 ]
  %197 = getelementptr inbounds i32, ptr %196, i64 %184
  store i32 %152, ptr %197, align 4, !tbaa !22
  %198 = icmp sgt i64 %169, 4
  br i1 %198, label %199, label %200, !prof !23

199:                                              ; preds = %195
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %196, ptr align 4 %166, i64 %169, i1 false)
  br label %205

200:                                              ; preds = %195
  %201 = icmp eq i64 %169, 4
  br i1 %201, label %202, label %205

202:                                              ; preds = %200
  %203 = load i32, ptr %166, align 4, !tbaa !22
  store i32 %203, ptr %196, align 4, !tbaa !22
  %204 = getelementptr inbounds i32, ptr %197, i64 1
  br label %208

205:                                              ; preds = %200, %199
  %206 = getelementptr inbounds i32, ptr %197, i64 1
  %207 = icmp eq ptr %166, null
  br i1 %207, label %210, label %208

208:                                              ; preds = %202, %205
  %209 = phi ptr [ %204, %202 ], [ %206, %205 ]
  tail call void @_ZdlPv(ptr noundef nonnull %166) #23
  br label %210

210:                                              ; preds = %208, %205
  %211 = phi ptr [ %206, %205 ], [ %209, %208 ]
  store ptr %196, ptr %163, align 8, !tbaa !58
  store ptr %211, ptr %164, align 8, !tbaa !313
  %212 = getelementptr inbounds i32, ptr %196, i64 %190
  store ptr %212, ptr %176, align 8, !tbaa !417
  br label %299

213:                                              ; preds = %171
  %214 = icmp sgt i64 %169, 0
  br i1 %214, label %215, label %230

215:                                              ; preds = %213
  %216 = lshr exact i64 %169, 2
  br label %217

217:                                              ; preds = %217, %215
  %218 = phi i64 [ %216, %215 ], [ %228, %217 ]
  %219 = phi ptr [ %166, %215 ], [ %227, %217 ]
  %220 = lshr i64 %218, 1
  %221 = getelementptr inbounds i32, ptr %219, i64 %220
  %222 = load i32, ptr %221, align 4, !tbaa !22
  %223 = icmp ult i32 %222, %152
  %224 = getelementptr inbounds i32, ptr %221, i64 1
  %225 = xor i64 %220, -1
  %226 = add nsw i64 %218, %225
  %227 = select i1 %223, ptr %224, ptr %219
  %228 = select i1 %223, i64 %226, i64 %220
  %229 = icmp sgt i64 %228, 0
  br i1 %229, label %217, label %230

230:                                              ; preds = %217, %213
  %231 = phi ptr [ %166, %213 ], [ %227, %217 ]
  %232 = load i32, ptr %231, align 4, !tbaa !22
  %233 = icmp eq i32 %232, %152
  br i1 %233, label %299, label %234

234:                                              ; preds = %230
  %235 = ptrtoint ptr %231 to i64
  %236 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %163, i64 0, i32 2
  %237 = load ptr, ptr %236, align 8, !tbaa !417
  %238 = icmp eq ptr %165, %237
  br i1 %238, label %256, label %239

239:                                              ; preds = %234
  %240 = icmp eq ptr %165, %231
  %241 = getelementptr inbounds i32, ptr %165, i64 1
  br i1 %240, label %242, label %243

242:                                              ; preds = %239
  store i32 %152, ptr %165, align 4, !tbaa !22
  store ptr %241, ptr %164, align 8, !tbaa !313
  br label %299

243:                                              ; preds = %239
  store i32 %173, ptr %165, align 4, !tbaa !22
  store ptr %241, ptr %164, align 8, !tbaa !313
  %244 = ptrtoint ptr %172 to i64
  %245 = sub i64 %244, %235
  %246 = icmp sgt i64 %245, 4
  br i1 %246, label %247, label %251, !prof !23

247:                                              ; preds = %243
  %248 = lshr exact i64 %245, 2
  %249 = sub nsw i64 0, %248
  %250 = getelementptr inbounds i32, ptr %165, i64 %249
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %250, ptr nonnull align 4 %231, i64 %245, i1 false)
  br label %255

251:                                              ; preds = %243
  %252 = icmp eq i64 %245, 4
  br i1 %252, label %253, label %255

253:                                              ; preds = %251
  %254 = load i32, ptr %231, align 4, !tbaa !22
  store i32 %254, ptr %172, align 4, !tbaa !22
  br label %255

255:                                              ; preds = %253, %251, %247
  store i32 %152, ptr %231, align 4, !tbaa !22
  br label %299

256:                                              ; preds = %234
  %257 = icmp eq i64 %169, 9223372036854775804
  br i1 %257, label %258, label %260

258:                                              ; preds = %256, %181
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %259 unwind label %121

259:                                              ; preds = %258
  unreachable

260:                                              ; preds = %256
  %261 = ashr exact i64 %169, 2
  %262 = tail call i64 @llvm.umax.i64(i64 %261, i64 1)
  %263 = add i64 %262, %261
  %264 = icmp ult i64 %263, %261
  %265 = icmp ugt i64 %263, 2305843009213693951
  %266 = or i1 %264, %265
  %267 = select i1 %266, i64 2305843009213693951, i64 %263
  %268 = sub i64 %235, %168
  %269 = ashr exact i64 %268, 2
  %270 = icmp eq i64 %267, 0
  br i1 %270, label %274, label %271

271:                                              ; preds = %260
  %272 = shl nuw nsw i64 %267, 2
  %273 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %272) #21
          to label %274 unwind label %119

274:                                              ; preds = %271, %260
  %275 = phi ptr [ null, %260 ], [ %273, %271 ]
  %276 = getelementptr inbounds i32, ptr %275, i64 %269
  store i32 %152, ptr %276, align 4, !tbaa !22
  %277 = icmp sgt i64 %268, 4
  br i1 %277, label %278, label %279, !prof !23

278:                                              ; preds = %274
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %275, ptr align 4 %166, i64 %268, i1 false)
  br label %283

279:                                              ; preds = %274
  %280 = icmp eq i64 %268, 4
  br i1 %280, label %281, label %283

281:                                              ; preds = %279
  %282 = load i32, ptr %166, align 4, !tbaa !22
  store i32 %282, ptr %275, align 4, !tbaa !22
  br label %283

283:                                              ; preds = %281, %279, %278
  %284 = getelementptr inbounds i32, ptr %276, i64 1
  %285 = sub i64 %167, %235
  %286 = icmp sgt i64 %285, 4
  br i1 %286, label %287, label %288, !prof !23

287:                                              ; preds = %283
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %284, ptr nonnull align 4 %231, i64 %285, i1 false)
  br label %292

288:                                              ; preds = %283
  %289 = icmp eq i64 %285, 4
  br i1 %289, label %290, label %292

290:                                              ; preds = %288
  %291 = load i32, ptr %231, align 4, !tbaa !22
  store i32 %291, ptr %284, align 4, !tbaa !22
  br label %292

292:                                              ; preds = %290, %288, %287
  %293 = icmp eq ptr %166, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %292
  tail call void @_ZdlPv(ptr noundef nonnull %166) #23
  br label %295

295:                                              ; preds = %294, %292
  %296 = ashr exact i64 %285, 2
  %297 = getelementptr inbounds i32, ptr %284, i64 %296
  store ptr %275, ptr %163, align 8, !tbaa !58
  store ptr %297, ptr %164, align 8, !tbaa !313
  %298 = getelementptr inbounds i32, ptr %275, i64 %267
  store ptr %298, ptr %236, align 8, !tbaa !417
  br label %299

299:                                              ; preds = %295, %255, %242, %230, %210, %179
  %300 = add i32 %126, 1
  %301 = zext i32 %300 to i64
  %302 = load i32, ptr %108, align 4, !tbaa !22
  %303 = zext i32 %302 to i64
  %304 = load ptr, ptr %14, align 8, !tbaa !72
  %305 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %304, i64 %303, i32 1
  %306 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %305, i64 0, i32 1
  %307 = load ptr, ptr %306, align 8, !tbaa !31
  %308 = load ptr, ptr %305, align 8, !tbaa !32
  %309 = ptrtoint ptr %307 to i64
  %310 = ptrtoint ptr %308 to i64
  %311 = sub i64 %309, %310
  %312 = ashr exact i64 %311, 4
  %313 = icmp eq i64 %312, %301
  br i1 %313, label %314, label %123

314:                                              ; preds = %299
  %315 = load ptr, ptr %83, align 8, !tbaa !472
  br label %316

316:                                              ; preds = %314, %111, %97
  %317 = phi ptr [ %315, %314 ], [ %98, %111 ], [ %98, %97 ]
  %318 = add nuw nsw i64 %99, 1
  %319 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %317, i64 %68
  %320 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %319, i64 0, i32 1
  %321 = load ptr, ptr %320, align 8, !tbaa !313
  %322 = load ptr, ptr %319, align 8, !tbaa !58
  %323 = ptrtoint ptr %321 to i64
  %324 = ptrtoint ptr %322 to i64
  %325 = sub i64 %323, %324
  %326 = lshr exact i64 %325, 2
  %327 = and i64 %326, 4294967295
  %328 = icmp ult i64 %318, %327
  br i1 %328, label %97, label %94

329:                                              ; preds = %72, %352
  %330 = phi i32 [ %353, %352 ], [ %70, %72 ]
  %331 = phi i32 [ %354, %352 ], [ %70, %72 ]
  %332 = phi i32 [ %355, %352 ], [ %70, %72 ]
  %333 = phi i64 [ %356, %352 ], [ 0, %72 ]
  %334 = load ptr, ptr %30, align 8, !tbaa !665, !noalias !795
  %335 = load i32, ptr %31, align 8, !tbaa !22, !noalias !795
  %336 = mul i32 %335, %59
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %334, i64 %337
  %339 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %338, i64 %333
  %340 = load ptr, ptr %339, align 8, !tbaa !669
  %341 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %340, i64 0, i32 3
  %342 = load ptr, ptr %341, align 8, !tbaa !472
  %343 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %342, i64 %68
  %344 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %343, i64 0, i32 1
  %345 = load ptr, ptr %344, align 8, !tbaa !313
  %346 = load ptr, ptr %343, align 8, !tbaa !58
  %347 = ptrtoint ptr %345 to i64
  %348 = ptrtoint ptr %346 to i64
  %349 = sub i64 %347, %348
  %350 = and i64 %349, 17179869180
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %358

352:                                              ; preds = %816, %329
  %353 = phi i32 [ %330, %329 ], [ %817, %816 ]
  %354 = phi i32 [ %331, %329 ], [ %818, %816 ]
  %355 = phi i32 [ %332, %329 ], [ %819, %816 ]
  %356 = add nuw nsw i64 %333, 1
  %357 = icmp eq i64 %356, %35
  br i1 %357, label %832, label %329

358:                                              ; preds = %329, %816
  %359 = phi i32 [ %817, %816 ], [ %330, %329 ]
  %360 = phi i32 [ %818, %816 ], [ %331, %329 ]
  %361 = phi i32 [ %819, %816 ], [ %332, %329 ]
  %362 = phi i64 [ %820, %816 ], [ 0, %329 ]
  %363 = phi ptr [ %825, %816 ], [ %346, %329 ]
  %364 = getelementptr inbounds i32, ptr %363, i64 %362
  %365 = load i32, ptr %364, align 4, !tbaa !22
  %366 = load ptr, ptr %28, align 8, !tbaa !58
  %367 = getelementptr inbounds i32, ptr %366, i64 %333
  %368 = load i32, ptr %367, align 4, !tbaa !22
  %369 = add i32 %368, %365
  %370 = zext i32 %369 to i64
  %371 = getelementptr inbounds i32, ptr %13, i64 %370
  %372 = load i32, ptr %371, align 4, !tbaa !22
  %373 = icmp eq i32 %372, -1
  %374 = load ptr, ptr %14, align 8, !tbaa !72
  br i1 %373, label %382, label %375

375:                                              ; preds = %358
  %376 = zext i32 %361 to i64
  %377 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %374, i64 %376, i32 1
  %378 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %377, i64 0, i32 1
  %379 = load ptr, ptr %378, align 8, !tbaa !31
  %380 = load ptr, ptr %377, align 8, !tbaa !32
  %381 = icmp eq ptr %379, %380
  br i1 %381, label %816, label %583

382:                                              ; preds = %358
  %383 = zext i32 %359 to i64
  %384 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %374, i64 %383, i32 1
  %385 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %384, i64 0, i32 1
  %386 = load ptr, ptr %385, align 8, !tbaa !31
  %387 = load ptr, ptr %384, align 8, !tbaa !32
  %388 = icmp eq ptr %386, %387
  br i1 %388, label %816, label %393

389:                                              ; preds = %540, %461
  %390 = landingpad { ptr, i32 }
          cleanup
  br label %835

391:                                              ; preds = %527
  %392 = landingpad { ptr, i32 }
          cleanup
  br label %835

393:                                              ; preds = %382, %568
  %394 = phi ptr [ %577, %568 ], [ %387, %382 ]
  %395 = phi i64 [ %570, %568 ], [ 0, %382 ]
  %396 = phi i32 [ %569, %568 ], [ 0, %382 ]
  %397 = getelementptr inbounds %"struct.std::pair", ptr %394, i64 %395
  %398 = load i32, ptr %397, align 8, !tbaa !37
  %399 = load i32, ptr %32, align 8, !tbaa !61
  %400 = load ptr, ptr %33, align 8, !tbaa !58
  br label %401

401:                                              ; preds = %401, %393
  %402 = phi i32 [ %399, %393 ], [ %403, %401 ]
  %403 = add i32 %402, -1
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds i32, ptr %400, i64 %404
  %406 = load i32, ptr %405, align 4, !tbaa !22
  %407 = icmp ugt i32 %406, %398
  br i1 %407, label %401, label %408

408:                                              ; preds = %401
  %409 = load i32, ptr %3, align 8, !tbaa !61
  %410 = load ptr, ptr %28, align 8, !tbaa !58
  br label %411

411:                                              ; preds = %411, %408
  %412 = phi i32 [ %409, %408 ], [ %413, %411 ]
  %413 = add i32 %412, -1
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds i32, ptr %410, i64 %414
  %416 = load i32, ptr %415, align 4, !tbaa !22
  %417 = icmp ugt i32 %416, %369
  br i1 %417, label %411, label %418

418:                                              ; preds = %411
  %419 = sub i32 %398, %406
  %420 = zext i32 %419 to i64
  %421 = sub i32 %369, %416
  %422 = load ptr, ptr %30, align 8, !tbaa !665, !noalias !798
  %423 = load i32, ptr %31, align 8, !tbaa !22, !noalias !798
  %424 = mul i32 %423, %403
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %422, i64 %425
  %427 = zext i32 %413 to i64
  %428 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %426, i64 %427
  %429 = load ptr, ptr %428, align 8, !tbaa !669
  %430 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %429, i64 0, i32 3
  %431 = load ptr, ptr %430, align 8, !tbaa !472
  %432 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %431, i64 %420
  %433 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %432, i64 0, i32 1
  %434 = load ptr, ptr %433, align 8, !tbaa !21
  %435 = load ptr, ptr %432, align 8, !tbaa !21
  %436 = ptrtoint ptr %434 to i64
  %437 = ptrtoint ptr %435 to i64
  %438 = sub i64 %436, %437
  %439 = icmp eq ptr %434, %435
  br i1 %439, label %444, label %440

440:                                              ; preds = %418
  %441 = getelementptr inbounds i32, ptr %434, i64 -1
  %442 = load i32, ptr %441, align 4, !tbaa !22
  %443 = icmp ult i32 %442, %421
  br i1 %443, label %444, label %482

444:                                              ; preds = %440, %418
  %445 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %432, i64 0, i32 2
  %446 = load ptr, ptr %445, align 8, !tbaa !417
  %447 = icmp eq ptr %434, %446
  br i1 %447, label %450, label %448

448:                                              ; preds = %444
  store i32 %421, ptr %434, align 4, !tbaa !22
  %449 = getelementptr inbounds i32, ptr %434, i64 1
  store ptr %449, ptr %433, align 8, !tbaa !313
  br label %568

450:                                              ; preds = %444
  %451 = icmp eq i64 %438, 9223372036854775804
  br i1 %451, label %527, label %452

452:                                              ; preds = %450
  %453 = ashr exact i64 %438, 2
  %454 = tail call i64 @llvm.umax.i64(i64 %453, i64 1)
  %455 = add i64 %454, %453
  %456 = icmp ult i64 %455, %453
  %457 = icmp ugt i64 %455, 2305843009213693951
  %458 = or i1 %456, %457
  %459 = select i1 %458, i64 2305843009213693951, i64 %455
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %464, label %461

461:                                              ; preds = %452
  %462 = shl nuw nsw i64 %459, 2
  %463 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %462) #21
          to label %464 unwind label %389

464:                                              ; preds = %461, %452
  %465 = phi ptr [ null, %452 ], [ %463, %461 ]
  %466 = getelementptr inbounds i32, ptr %465, i64 %453
  store i32 %421, ptr %466, align 4, !tbaa !22
  %467 = icmp sgt i64 %438, 4
  br i1 %467, label %468, label %469, !prof !23

468:                                              ; preds = %464
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %465, ptr align 4 %435, i64 %438, i1 false)
  br label %474

469:                                              ; preds = %464
  %470 = icmp eq i64 %438, 4
  br i1 %470, label %471, label %474

471:                                              ; preds = %469
  %472 = load i32, ptr %435, align 4, !tbaa !22
  store i32 %472, ptr %465, align 4, !tbaa !22
  %473 = getelementptr inbounds i32, ptr %466, i64 1
  br label %477

474:                                              ; preds = %469, %468
  %475 = getelementptr inbounds i32, ptr %466, i64 1
  %476 = icmp eq ptr %435, null
  br i1 %476, label %479, label %477

477:                                              ; preds = %471, %474
  %478 = phi ptr [ %473, %471 ], [ %475, %474 ]
  tail call void @_ZdlPv(ptr noundef nonnull %435) #23
  br label %479

479:                                              ; preds = %477, %474
  %480 = phi ptr [ %475, %474 ], [ %478, %477 ]
  store ptr %465, ptr %432, align 8, !tbaa !58
  store ptr %480, ptr %433, align 8, !tbaa !313
  %481 = getelementptr inbounds i32, ptr %465, i64 %459
  store ptr %481, ptr %445, align 8, !tbaa !417
  br label %568

482:                                              ; preds = %440
  %483 = icmp sgt i64 %438, 0
  br i1 %483, label %484, label %499

484:                                              ; preds = %482
  %485 = lshr exact i64 %438, 2
  br label %486

486:                                              ; preds = %486, %484
  %487 = phi i64 [ %485, %484 ], [ %497, %486 ]
  %488 = phi ptr [ %435, %484 ], [ %496, %486 ]
  %489 = lshr i64 %487, 1
  %490 = getelementptr inbounds i32, ptr %488, i64 %489
  %491 = load i32, ptr %490, align 4, !tbaa !22
  %492 = icmp ult i32 %491, %421
  %493 = getelementptr inbounds i32, ptr %490, i64 1
  %494 = xor i64 %489, -1
  %495 = add nsw i64 %487, %494
  %496 = select i1 %492, ptr %493, ptr %488
  %497 = select i1 %492, i64 %495, i64 %489
  %498 = icmp sgt i64 %497, 0
  br i1 %498, label %486, label %499

499:                                              ; preds = %486, %482
  %500 = phi ptr [ %435, %482 ], [ %496, %486 ]
  %501 = load i32, ptr %500, align 4, !tbaa !22
  %502 = icmp eq i32 %501, %421
  br i1 %502, label %568, label %503

503:                                              ; preds = %499
  %504 = ptrtoint ptr %500 to i64
  %505 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %432, i64 0, i32 2
  %506 = load ptr, ptr %505, align 8, !tbaa !417
  %507 = icmp eq ptr %434, %506
  br i1 %507, label %525, label %508

508:                                              ; preds = %503
  %509 = icmp eq ptr %434, %500
  %510 = getelementptr inbounds i32, ptr %434, i64 1
  br i1 %509, label %511, label %512

511:                                              ; preds = %508
  store i32 %421, ptr %434, align 4, !tbaa !22
  store ptr %510, ptr %433, align 8, !tbaa !313
  br label %568

512:                                              ; preds = %508
  store i32 %442, ptr %434, align 4, !tbaa !22
  store ptr %510, ptr %433, align 8, !tbaa !313
  %513 = ptrtoint ptr %441 to i64
  %514 = sub i64 %513, %504
  %515 = icmp sgt i64 %514, 4
  br i1 %515, label %516, label %520, !prof !23

516:                                              ; preds = %512
  %517 = lshr exact i64 %514, 2
  %518 = sub nsw i64 0, %517
  %519 = getelementptr inbounds i32, ptr %434, i64 %518
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %519, ptr nonnull align 4 %500, i64 %514, i1 false)
  br label %524

520:                                              ; preds = %512
  %521 = icmp eq i64 %514, 4
  br i1 %521, label %522, label %524

522:                                              ; preds = %520
  %523 = load i32, ptr %500, align 4, !tbaa !22
  store i32 %523, ptr %441, align 4, !tbaa !22
  br label %524

524:                                              ; preds = %522, %520, %516
  store i32 %421, ptr %500, align 4, !tbaa !22
  br label %568

525:                                              ; preds = %503
  %526 = icmp eq i64 %438, 9223372036854775804
  br i1 %526, label %527, label %529

527:                                              ; preds = %525, %450
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %528 unwind label %391

528:                                              ; preds = %527
  unreachable

529:                                              ; preds = %525
  %530 = ashr exact i64 %438, 2
  %531 = tail call i64 @llvm.umax.i64(i64 %530, i64 1)
  %532 = add i64 %531, %530
  %533 = icmp ult i64 %532, %530
  %534 = icmp ugt i64 %532, 2305843009213693951
  %535 = or i1 %533, %534
  %536 = select i1 %535, i64 2305843009213693951, i64 %532
  %537 = sub i64 %504, %437
  %538 = ashr exact i64 %537, 2
  %539 = icmp eq i64 %536, 0
  br i1 %539, label %543, label %540

540:                                              ; preds = %529
  %541 = shl nuw nsw i64 %536, 2
  %542 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %541) #21
          to label %543 unwind label %389

543:                                              ; preds = %540, %529
  %544 = phi ptr [ null, %529 ], [ %542, %540 ]
  %545 = getelementptr inbounds i32, ptr %544, i64 %538
  store i32 %421, ptr %545, align 4, !tbaa !22
  %546 = icmp sgt i64 %537, 4
  br i1 %546, label %547, label %548, !prof !23

547:                                              ; preds = %543
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %544, ptr align 4 %435, i64 %537, i1 false)
  br label %552

548:                                              ; preds = %543
  %549 = icmp eq i64 %537, 4
  br i1 %549, label %550, label %552

550:                                              ; preds = %548
  %551 = load i32, ptr %435, align 4, !tbaa !22
  store i32 %551, ptr %544, align 4, !tbaa !22
  br label %552

552:                                              ; preds = %550, %548, %547
  %553 = getelementptr inbounds i32, ptr %545, i64 1
  %554 = sub i64 %436, %504
  %555 = icmp sgt i64 %554, 4
  br i1 %555, label %556, label %557, !prof !23

556:                                              ; preds = %552
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %553, ptr nonnull align 4 %500, i64 %554, i1 false)
  br label %561

557:                                              ; preds = %552
  %558 = icmp eq i64 %554, 4
  br i1 %558, label %559, label %561

559:                                              ; preds = %557
  %560 = load i32, ptr %500, align 4, !tbaa !22
  store i32 %560, ptr %553, align 4, !tbaa !22
  br label %561

561:                                              ; preds = %559, %557, %556
  %562 = icmp eq ptr %435, null
  br i1 %562, label %564, label %563

563:                                              ; preds = %561
  tail call void @_ZdlPv(ptr noundef nonnull %435) #23
  br label %564

564:                                              ; preds = %563, %561
  %565 = ashr exact i64 %554, 2
  %566 = getelementptr inbounds i32, ptr %553, i64 %565
  store ptr %544, ptr %432, align 8, !tbaa !58
  store ptr %566, ptr %433, align 8, !tbaa !313
  %567 = getelementptr inbounds i32, ptr %544, i64 %536
  store ptr %567, ptr %505, align 8, !tbaa !417
  br label %568

568:                                              ; preds = %564, %524, %511, %499, %479, %448
  %569 = add i32 %396, 1
  %570 = zext i32 %569 to i64
  %571 = load i32, ptr %69, align 4, !tbaa !22
  %572 = zext i32 %571 to i64
  %573 = load ptr, ptr %14, align 8, !tbaa !72
  %574 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %573, i64 %572, i32 1
  %575 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %574, i64 0, i32 1
  %576 = load ptr, ptr %575, align 8, !tbaa !31
  %577 = load ptr, ptr %574, align 8, !tbaa !32
  %578 = ptrtoint ptr %576 to i64
  %579 = ptrtoint ptr %577 to i64
  %580 = sub i64 %578, %579
  %581 = ashr exact i64 %580, 4
  %582 = icmp eq i64 %581, %570
  br i1 %582, label %816, label %393

583:                                              ; preds = %375, %598
  %584 = phi i32 [ %599, %598 ], [ %359, %375 ]
  %585 = phi ptr [ %600, %598 ], [ %374, %375 ]
  %586 = phi i32 [ %601, %598 ], [ %360, %375 ]
  %587 = phi i32 [ %602, %598 ], [ %372, %375 ]
  %588 = phi i64 [ %604, %598 ], [ 0, %375 ]
  %589 = phi i32 [ %603, %598 ], [ 0, %375 ]
  %590 = zext i32 %587 to i64
  %591 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %585, i64 %590, i32 1
  %592 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %591, i64 0, i32 1
  %593 = load ptr, ptr %592, align 8, !tbaa !31
  %594 = load ptr, ptr %591, align 8, !tbaa !32
  %595 = icmp eq ptr %593, %594
  br i1 %595, label %598, label %619

596:                                              ; preds = %801
  %597 = load i32, ptr %69, align 4, !tbaa !22
  br label %598

598:                                              ; preds = %596, %583
  %599 = phi i32 [ %597, %596 ], [ %584, %583 ]
  %600 = phi ptr [ %806, %596 ], [ %585, %583 ]
  %601 = phi i32 [ %597, %596 ], [ %586, %583 ]
  %602 = phi i32 [ %804, %596 ], [ %587, %583 ]
  %603 = add i32 %589, 1
  %604 = zext i32 %603 to i64
  %605 = zext i32 %601 to i64
  %606 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %600, i64 %605, i32 1
  %607 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %606, i64 0, i32 1
  %608 = load ptr, ptr %607, align 8, !tbaa !31
  %609 = load ptr, ptr %606, align 8, !tbaa !32
  %610 = ptrtoint ptr %608 to i64
  %611 = ptrtoint ptr %609 to i64
  %612 = sub i64 %610, %611
  %613 = ashr exact i64 %612, 4
  %614 = icmp eq i64 %613, %604
  br i1 %614, label %816, label %583

615:                                              ; preds = %773, %694
  %616 = landingpad { ptr, i32 }
          cleanup
  br label %835

617:                                              ; preds = %760
  %618 = landingpad { ptr, i32 }
          cleanup
  br label %835

619:                                              ; preds = %583, %801
  %620 = phi ptr [ %810, %801 ], [ %594, %583 ]
  %621 = phi ptr [ %806, %801 ], [ %585, %583 ]
  %622 = phi i64 [ %803, %801 ], [ 0, %583 ]
  %623 = phi i32 [ %802, %801 ], [ 0, %583 ]
  %624 = load i32, ptr %69, align 4, !tbaa !22
  %625 = zext i32 %624 to i64
  %626 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %621, i64 %625, i32 1
  %627 = load ptr, ptr %626, align 8, !tbaa !32
  %628 = getelementptr inbounds %"struct.std::pair", ptr %627, i64 %588
  %629 = load i32, ptr %628, align 8, !tbaa !37
  %630 = getelementptr inbounds %"struct.std::pair", ptr %620, i64 %622
  %631 = load i32, ptr %630, align 8, !tbaa !37
  %632 = load i32, ptr %32, align 8, !tbaa !61
  %633 = load ptr, ptr %33, align 8, !tbaa !58
  br label %634

634:                                              ; preds = %634, %619
  %635 = phi i32 [ %632, %619 ], [ %636, %634 ]
  %636 = add i32 %635, -1
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds i32, ptr %633, i64 %637
  %639 = load i32, ptr %638, align 4, !tbaa !22
  %640 = icmp ugt i32 %639, %629
  br i1 %640, label %634, label %641

641:                                              ; preds = %634
  %642 = load i32, ptr %3, align 8, !tbaa !61
  %643 = load ptr, ptr %28, align 8, !tbaa !58
  br label %644

644:                                              ; preds = %644, %641
  %645 = phi i32 [ %642, %641 ], [ %646, %644 ]
  %646 = add i32 %645, -1
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds i32, ptr %643, i64 %647
  %649 = load i32, ptr %648, align 4, !tbaa !22
  %650 = icmp ugt i32 %649, %631
  br i1 %650, label %644, label %651

651:                                              ; preds = %644
  %652 = sub i32 %629, %639
  %653 = zext i32 %652 to i64
  %654 = sub i32 %631, %649
  %655 = load ptr, ptr %30, align 8, !tbaa !665, !noalias !801
  %656 = load i32, ptr %31, align 8, !tbaa !22, !noalias !801
  %657 = mul i32 %656, %636
  %658 = zext i32 %657 to i64
  %659 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %655, i64 %658
  %660 = zext i32 %646 to i64
  %661 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %659, i64 %660
  %662 = load ptr, ptr %661, align 8, !tbaa !669
  %663 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %662, i64 0, i32 3
  %664 = load ptr, ptr %663, align 8, !tbaa !472
  %665 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %664, i64 %653
  %666 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %665, i64 0, i32 1
  %667 = load ptr, ptr %666, align 8, !tbaa !21
  %668 = load ptr, ptr %665, align 8, !tbaa !21
  %669 = ptrtoint ptr %667 to i64
  %670 = ptrtoint ptr %668 to i64
  %671 = sub i64 %669, %670
  %672 = icmp eq ptr %667, %668
  br i1 %672, label %677, label %673

673:                                              ; preds = %651
  %674 = getelementptr inbounds i32, ptr %667, i64 -1
  %675 = load i32, ptr %674, align 4, !tbaa !22
  %676 = icmp ult i32 %675, %654
  br i1 %676, label %677, label %715

677:                                              ; preds = %673, %651
  %678 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %665, i64 0, i32 2
  %679 = load ptr, ptr %678, align 8, !tbaa !417
  %680 = icmp eq ptr %667, %679
  br i1 %680, label %683, label %681

681:                                              ; preds = %677
  store i32 %654, ptr %667, align 4, !tbaa !22
  %682 = getelementptr inbounds i32, ptr %667, i64 1
  store ptr %682, ptr %666, align 8, !tbaa !313
  br label %801

683:                                              ; preds = %677
  %684 = icmp eq i64 %671, 9223372036854775804
  br i1 %684, label %760, label %685

685:                                              ; preds = %683
  %686 = ashr exact i64 %671, 2
  %687 = tail call i64 @llvm.umax.i64(i64 %686, i64 1)
  %688 = add i64 %687, %686
  %689 = icmp ult i64 %688, %686
  %690 = icmp ugt i64 %688, 2305843009213693951
  %691 = or i1 %689, %690
  %692 = select i1 %691, i64 2305843009213693951, i64 %688
  %693 = icmp eq i64 %692, 0
  br i1 %693, label %697, label %694

694:                                              ; preds = %685
  %695 = shl nuw nsw i64 %692, 2
  %696 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %695) #21
          to label %697 unwind label %615

697:                                              ; preds = %694, %685
  %698 = phi ptr [ null, %685 ], [ %696, %694 ]
  %699 = getelementptr inbounds i32, ptr %698, i64 %686
  store i32 %654, ptr %699, align 4, !tbaa !22
  %700 = icmp sgt i64 %671, 4
  br i1 %700, label %701, label %702, !prof !23

701:                                              ; preds = %697
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %698, ptr align 4 %668, i64 %671, i1 false)
  br label %707

702:                                              ; preds = %697
  %703 = icmp eq i64 %671, 4
  br i1 %703, label %704, label %707

704:                                              ; preds = %702
  %705 = load i32, ptr %668, align 4, !tbaa !22
  store i32 %705, ptr %698, align 4, !tbaa !22
  %706 = getelementptr inbounds i32, ptr %699, i64 1
  br label %710

707:                                              ; preds = %702, %701
  %708 = getelementptr inbounds i32, ptr %699, i64 1
  %709 = icmp eq ptr %668, null
  br i1 %709, label %712, label %710

710:                                              ; preds = %704, %707
  %711 = phi ptr [ %706, %704 ], [ %708, %707 ]
  tail call void @_ZdlPv(ptr noundef nonnull %668) #23
  br label %712

712:                                              ; preds = %710, %707
  %713 = phi ptr [ %708, %707 ], [ %711, %710 ]
  store ptr %698, ptr %665, align 8, !tbaa !58
  store ptr %713, ptr %666, align 8, !tbaa !313
  %714 = getelementptr inbounds i32, ptr %698, i64 %692
  store ptr %714, ptr %678, align 8, !tbaa !417
  br label %801

715:                                              ; preds = %673
  %716 = icmp sgt i64 %671, 0
  br i1 %716, label %717, label %732

717:                                              ; preds = %715
  %718 = lshr exact i64 %671, 2
  br label %719

719:                                              ; preds = %719, %717
  %720 = phi i64 [ %718, %717 ], [ %730, %719 ]
  %721 = phi ptr [ %668, %717 ], [ %729, %719 ]
  %722 = lshr i64 %720, 1
  %723 = getelementptr inbounds i32, ptr %721, i64 %722
  %724 = load i32, ptr %723, align 4, !tbaa !22
  %725 = icmp ult i32 %724, %654
  %726 = getelementptr inbounds i32, ptr %723, i64 1
  %727 = xor i64 %722, -1
  %728 = add nsw i64 %720, %727
  %729 = select i1 %725, ptr %726, ptr %721
  %730 = select i1 %725, i64 %728, i64 %722
  %731 = icmp sgt i64 %730, 0
  br i1 %731, label %719, label %732

732:                                              ; preds = %719, %715
  %733 = phi ptr [ %668, %715 ], [ %729, %719 ]
  %734 = load i32, ptr %733, align 4, !tbaa !22
  %735 = icmp eq i32 %734, %654
  br i1 %735, label %801, label %736

736:                                              ; preds = %732
  %737 = ptrtoint ptr %733 to i64
  %738 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %665, i64 0, i32 2
  %739 = load ptr, ptr %738, align 8, !tbaa !417
  %740 = icmp eq ptr %667, %739
  br i1 %740, label %758, label %741

741:                                              ; preds = %736
  %742 = icmp eq ptr %667, %733
  %743 = getelementptr inbounds i32, ptr %667, i64 1
  br i1 %742, label %744, label %745

744:                                              ; preds = %741
  store i32 %654, ptr %667, align 4, !tbaa !22
  store ptr %743, ptr %666, align 8, !tbaa !313
  br label %801

745:                                              ; preds = %741
  store i32 %675, ptr %667, align 4, !tbaa !22
  store ptr %743, ptr %666, align 8, !tbaa !313
  %746 = ptrtoint ptr %674 to i64
  %747 = sub i64 %746, %737
  %748 = icmp sgt i64 %747, 4
  br i1 %748, label %749, label %753, !prof !23

749:                                              ; preds = %745
  %750 = lshr exact i64 %747, 2
  %751 = sub nsw i64 0, %750
  %752 = getelementptr inbounds i32, ptr %667, i64 %751
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %752, ptr nonnull align 4 %733, i64 %747, i1 false)
  br label %757

753:                                              ; preds = %745
  %754 = icmp eq i64 %747, 4
  br i1 %754, label %755, label %757

755:                                              ; preds = %753
  %756 = load i32, ptr %733, align 4, !tbaa !22
  store i32 %756, ptr %674, align 4, !tbaa !22
  br label %757

757:                                              ; preds = %755, %753, %749
  store i32 %654, ptr %733, align 4, !tbaa !22
  br label %801

758:                                              ; preds = %736
  %759 = icmp eq i64 %671, 9223372036854775804
  br i1 %759, label %760, label %762

760:                                              ; preds = %758, %683
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %761 unwind label %617

761:                                              ; preds = %760
  unreachable

762:                                              ; preds = %758
  %763 = ashr exact i64 %671, 2
  %764 = tail call i64 @llvm.umax.i64(i64 %763, i64 1)
  %765 = add i64 %764, %763
  %766 = icmp ult i64 %765, %763
  %767 = icmp ugt i64 %765, 2305843009213693951
  %768 = or i1 %766, %767
  %769 = select i1 %768, i64 2305843009213693951, i64 %765
  %770 = sub i64 %737, %670
  %771 = ashr exact i64 %770, 2
  %772 = icmp eq i64 %769, 0
  br i1 %772, label %776, label %773

773:                                              ; preds = %762
  %774 = shl nuw nsw i64 %769, 2
  %775 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %774) #21
          to label %776 unwind label %615

776:                                              ; preds = %773, %762
  %777 = phi ptr [ null, %762 ], [ %775, %773 ]
  %778 = getelementptr inbounds i32, ptr %777, i64 %771
  store i32 %654, ptr %778, align 4, !tbaa !22
  %779 = icmp sgt i64 %770, 4
  br i1 %779, label %780, label %781, !prof !23

780:                                              ; preds = %776
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %777, ptr align 4 %668, i64 %770, i1 false)
  br label %785

781:                                              ; preds = %776
  %782 = icmp eq i64 %770, 4
  br i1 %782, label %783, label %785

783:                                              ; preds = %781
  %784 = load i32, ptr %668, align 4, !tbaa !22
  store i32 %784, ptr %777, align 4, !tbaa !22
  br label %785

785:                                              ; preds = %783, %781, %780
  %786 = getelementptr inbounds i32, ptr %778, i64 1
  %787 = sub i64 %669, %737
  %788 = icmp sgt i64 %787, 4
  br i1 %788, label %789, label %790, !prof !23

789:                                              ; preds = %785
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %786, ptr nonnull align 4 %733, i64 %787, i1 false)
  br label %794

790:                                              ; preds = %785
  %791 = icmp eq i64 %787, 4
  br i1 %791, label %792, label %794

792:                                              ; preds = %790
  %793 = load i32, ptr %733, align 4, !tbaa !22
  store i32 %793, ptr %786, align 4, !tbaa !22
  br label %794

794:                                              ; preds = %792, %790, %789
  %795 = icmp eq ptr %668, null
  br i1 %795, label %797, label %796

796:                                              ; preds = %794
  tail call void @_ZdlPv(ptr noundef nonnull %668) #23
  br label %797

797:                                              ; preds = %796, %794
  %798 = ashr exact i64 %787, 2
  %799 = getelementptr inbounds i32, ptr %786, i64 %798
  store ptr %777, ptr %665, align 8, !tbaa !58
  store ptr %799, ptr %666, align 8, !tbaa !313
  %800 = getelementptr inbounds i32, ptr %777, i64 %769
  store ptr %800, ptr %738, align 8, !tbaa !417
  br label %801

801:                                              ; preds = %797, %757, %744, %732, %712, %681
  %802 = add i32 %623, 1
  %803 = zext i32 %802 to i64
  %804 = load i32, ptr %371, align 4, !tbaa !22
  %805 = zext i32 %804 to i64
  %806 = load ptr, ptr %14, align 8, !tbaa !72
  %807 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %806, i64 %805, i32 1
  %808 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %807, i64 0, i32 1
  %809 = load ptr, ptr %808, align 8, !tbaa !31
  %810 = load ptr, ptr %807, align 8, !tbaa !32
  %811 = ptrtoint ptr %809 to i64
  %812 = ptrtoint ptr %810 to i64
  %813 = sub i64 %811, %812
  %814 = ashr exact i64 %813, 4
  %815 = icmp eq i64 %814, %803
  br i1 %815, label %596, label %619

816:                                              ; preds = %598, %568, %375, %382
  %817 = phi i32 [ %359, %375 ], [ %359, %382 ], [ %571, %568 ], [ %599, %598 ]
  %818 = phi i32 [ %360, %375 ], [ %359, %382 ], [ %571, %568 ], [ %601, %598 ]
  %819 = phi i32 [ %361, %375 ], [ %359, %382 ], [ %571, %568 ], [ %601, %598 ]
  %820 = add nuw nsw i64 %362, 1
  %821 = load ptr, ptr %341, align 8, !tbaa !472
  %822 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %821, i64 %68
  %823 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %822, i64 0, i32 1
  %824 = load ptr, ptr %823, align 8, !tbaa !313
  %825 = load ptr, ptr %822, align 8, !tbaa !58
  %826 = ptrtoint ptr %824 to i64
  %827 = ptrtoint ptr %825 to i64
  %828 = sub i64 %826, %827
  %829 = lshr exact i64 %828, 2
  %830 = and i64 %829, 4294967295
  %831 = icmp ult i64 %820, %830
  br i1 %831, label %358, label %352

832:                                              ; preds = %352, %94, %72, %73
  %833 = add nuw nsw i64 %54, 1
  %834 = icmp eq i64 %833, %34
  br i1 %834, label %47, label %53

835:                                              ; preds = %615, %617, %389, %391, %119, %121, %51
  %836 = phi { ptr, i32 } [ %52, %51 ], [ %120, %119 ], [ %122, %121 ], [ %390, %389 ], [ %392, %391 ], [ %616, %615 ], [ %618, %617 ]
  %837 = icmp eq ptr %13, null
  br i1 %837, label %839, label %838

838:                                              ; preds = %835
  tail call void @_ZdlPv(ptr noundef nonnull %13) #23
  br label %839

839:                                              ; preds = %838, %835
  resume { ptr, i32 } %836
}

declare noundef i32 @_ZNK6dealii24BlockSparsityPatternBaseINS_31CompressedSimpleSparsityPatternEE6n_rowsEv(ptr noundef nonnull align 8 dereferenceable(288)) local_unnamed_addr #5

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii24BlockSparsityPatternBaseINS_31CompressedSimpleSparsityPatternEE3addEjj(ptr noundef nonnull align 8 dereferenceable(288) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %0, i64 0, i32 4
  %6 = load i32, ptr %5, align 8, !tbaa !61
  %7 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %0, i64 0, i32 4, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !58
  br label %9

9:                                                ; preds = %9, %3
  %10 = phi i32 [ %6, %3 ], [ %11, %9 ]
  %11 = add i32 %10, -1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, ptr %8, i64 %12
  %14 = load i32, ptr %13, align 4, !tbaa !22
  %15 = icmp ugt i32 %14, %1
  br i1 %15, label %9, label %16

16:                                               ; preds = %9
  %17 = sub i32 %1, %14
  %18 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %0, i64 0, i32 5
  %19 = load i32, ptr %18, align 8, !tbaa !61
  %20 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %0, i64 0, i32 5, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !58
  br label %22

22:                                               ; preds = %22, %16
  %23 = phi i32 [ %19, %16 ], [ %24, %22 ]
  %24 = add i32 %23, -1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, ptr %21, i64 %25
  %27 = load i32, ptr %26, align 4, !tbaa !22
  %28 = icmp ugt i32 %27, %2
  br i1 %28, label %22, label %29

29:                                               ; preds = %22
  %30 = zext i32 %17 to i64
  %31 = sub i32 %2, %27
  %32 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %0, i64 0, i32 3, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !665, !noalias !804
  %34 = getelementptr inbounds %"class.dealii::BlockSparsityPatternBase.134", ptr %0, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %35 = load i32, ptr %34, align 8, !tbaa !22, !noalias !804
  %36 = mul i32 %35, %11
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %33, i64 %37
  %39 = zext i32 %24 to i64
  %40 = getelementptr inbounds %"class.dealii::SmartPointer.173", ptr %38, i64 %39
  %41 = load ptr, ptr %40, align 8, !tbaa !669
  %42 = getelementptr inbounds %"class.dealii::CompressedSimpleSparsityPattern", ptr %41, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !472
  %44 = getelementptr inbounds %"struct.dealii::CompressedSimpleSparsityPattern::Line", ptr %43, i64 %30
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4)
  store i32 %31, ptr %4, align 4, !tbaa !22
  %45 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !21
  %47 = load ptr, ptr %44, align 8, !tbaa !21
  %48 = ptrtoint ptr %46 to i64
  %49 = ptrtoint ptr %47 to i64
  %50 = sub i64 %48, %49
  %51 = icmp eq ptr %46, %47
  br i1 %51, label %56, label %52

52:                                               ; preds = %29
  %53 = getelementptr inbounds i32, ptr %46, i64 -1
  %54 = load i32, ptr %53, align 4, !tbaa !22
  %55 = icmp ult i32 %54, %31
  br i1 %55, label %56, label %63

56:                                               ; preds = %52, %29
  %57 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %44, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !417
  %59 = icmp eq ptr %46, %58
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  store i32 %31, ptr %46, align 4, !tbaa !22
  %61 = getelementptr inbounds i32, ptr %46, i64 1
  store ptr %61, ptr %45, align 8, !tbaa !313
  br label %108

62:                                               ; preds = %56
  call void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr %46, ptr noundef nonnull align 4 dereferenceable(4) %4)
  br label %108

63:                                               ; preds = %52
  %64 = icmp sgt i64 %50, 0
  br i1 %64, label %65, label %80

65:                                               ; preds = %63
  %66 = lshr exact i64 %50, 2
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ %66, %65 ], [ %78, %67 ]
  %69 = phi ptr [ %47, %65 ], [ %77, %67 ]
  %70 = lshr i64 %68, 1
  %71 = getelementptr inbounds i32, ptr %69, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !22
  %73 = icmp ult i32 %72, %31
  %74 = getelementptr inbounds i32, ptr %71, i64 1
  %75 = xor i64 %70, -1
  %76 = add nsw i64 %68, %75
  %77 = select i1 %73, ptr %74, ptr %69
  %78 = select i1 %73, i64 %76, i64 %70
  %79 = icmp sgt i64 %78, 0
  br i1 %79, label %67, label %80

80:                                               ; preds = %67, %63
  %81 = phi ptr [ %47, %63 ], [ %77, %67 ]
  %82 = load i32, ptr %81, align 4, !tbaa !22
  %83 = icmp eq i32 %82, %31
  br i1 %83, label %108, label %84

84:                                               ; preds = %80
  %85 = ptrtoint ptr %81 to i64
  %86 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %44, i64 0, i32 2
  %87 = load ptr, ptr %86, align 8, !tbaa !417
  %88 = icmp eq ptr %46, %87
  br i1 %88, label %107, label %89

89:                                               ; preds = %84
  %90 = icmp eq ptr %46, %81
  %91 = getelementptr inbounds i32, ptr %46, i64 1
  br i1 %90, label %92, label %93

92:                                               ; preds = %89
  store i32 %31, ptr %46, align 4, !tbaa !22
  store ptr %91, ptr %45, align 8, !tbaa !313
  br label %108

93:                                               ; preds = %89
  store i32 %54, ptr %46, align 4, !tbaa !22
  store ptr %91, ptr %45, align 8, !tbaa !313
  %94 = load i32, ptr %4, align 4, !tbaa !22
  %95 = ptrtoint ptr %53 to i64
  %96 = sub i64 %95, %85
  %97 = icmp sgt i64 %96, 4
  br i1 %97, label %98, label %102, !prof !23

98:                                               ; preds = %93
  %99 = lshr exact i64 %96, 2
  %100 = sub nsw i64 0, %99
  %101 = getelementptr inbounds i32, ptr %46, i64 %100
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %101, ptr nonnull align 4 %81, i64 %96, i1 false)
  br label %106

102:                                              ; preds = %93
  %103 = icmp eq i64 %96, 4
  br i1 %103, label %104, label %106

104:                                              ; preds = %102
  %105 = load i32, ptr %81, align 4, !tbaa !22
  store i32 %105, ptr %53, align 4, !tbaa !22
  br label %106

106:                                              ; preds = %104, %102, %98
  store i32 %94, ptr %81, align 4, !tbaa !22
  br label %108

107:                                              ; preds = %84
  call void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr nonnull %81, ptr noundef nonnull align 4 dereferenceable(4) %4)
  br label %108

108:                                              ; preds = %60, %62, %80, %92, %106, %107
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local noundef i32 @_ZNK6dealii16ConstraintMatrix13n_constraintsEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !70
  %5 = load ptr, ptr %2, align 8, !tbaa !72
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = sdiv exact i64 %8, 40
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local noundef zeroext i1 @_ZNK6dealii16ConstraintMatrix23is_identity_constrainedEj(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, i32 noundef %1) local_unnamed_addr #10 align 2 personality ptr @__gxx_personality_v0 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !55
  %7 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !57
  %9 = load ptr, ptr %4, align 8, !tbaa !55
  %10 = ptrtoint ptr %6 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = shl nsw i64 %12, 3
  %14 = zext i32 %8 to i64
  %15 = add nsw i64 %13, %14
  %16 = icmp ugt i64 %15, %3
  br i1 %16, label %17, label %93

17:                                               ; preds = %2
  %18 = lshr i32 %1, 6
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i64, ptr %9, i64 %19
  %21 = and i32 %1, 63
  %22 = zext i32 %21 to i64
  %23 = shl nuw i64 1, %22
  %24 = load i64, ptr %20, align 8, !tbaa !42
  %25 = and i64 %24, %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %93, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 3
  %29 = load i8, ptr %28, align 8, !tbaa !710, !range !425, !noundef !73
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !21
  %33 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !21
  br i1 %30, label %70, label %35

35:                                               ; preds = %27
  %36 = ptrtoint ptr %34 to i64
  %37 = ptrtoint ptr %32 to i64
  %38 = sub i64 %36, %37
  %39 = icmp sgt i64 %38, 0
  br i1 %39, label %40, label %55

40:                                               ; preds = %35
  %41 = udiv exact i64 %38, 40
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ %41, %40 ], [ %53, %42 ]
  %44 = phi ptr [ %32, %40 ], [ %52, %42 ]
  %45 = lshr i64 %43, 1
  %46 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %44, i64 %45
  %47 = load i32, ptr %46, align 8, !tbaa !24
  %48 = icmp ult i32 %47, %1
  %49 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add nsw i64 %43, %50
  %52 = select i1 %48, ptr %49, ptr %44
  %53 = select i1 %48, i64 %51, i64 %45
  %54 = icmp sgt i64 %53, 0
  br i1 %54, label %42, label %55

55:                                               ; preds = %42, %35
  %56 = phi ptr [ %32, %35 ], [ %52, %42 ]
  %57 = icmp eq ptr %56, %34
  br i1 %57, label %93, label %58

58:                                               ; preds = %55
  %59 = load i32, ptr %56, align 8, !tbaa !24
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %61, label %93

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %56, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %56, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !31
  %65 = load ptr, ptr %62, align 8, !tbaa !32
  %66 = ptrtoint ptr %64 to i64
  %67 = ptrtoint ptr %65 to i64
  %68 = sub i64 %66, %67
  %69 = icmp eq i64 %68, 16
  br i1 %69, label %88, label %93

70:                                               ; preds = %27
  %71 = icmp eq ptr %32, %34
  br i1 %71, label %93, label %72

72:                                               ; preds = %70, %85
  %73 = phi ptr [ %86, %85 ], [ %32, %70 ]
  %74 = load i32, ptr %73, align 8, !tbaa !24
  %75 = icmp eq i32 %74, %1
  br i1 %75, label %76, label %85

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %73, i64 0, i32 1
  %78 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %79 = load ptr, ptr %78, align 8, !tbaa !31
  %80 = load ptr, ptr %77, align 8, !tbaa !32
  %81 = ptrtoint ptr %79 to i64
  %82 = ptrtoint ptr %80 to i64
  %83 = sub i64 %81, %82
  %84 = icmp eq i64 %83, 16
  br i1 %84, label %88, label %93

85:                                               ; preds = %72
  %86 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %73, i64 1
  %87 = icmp eq ptr %86, %34
  br i1 %87, label %93, label %72

88:                                               ; preds = %76, %61
  %89 = phi ptr [ %65, %61 ], [ %80, %76 ]
  %90 = getelementptr inbounds %"struct.std::pair", ptr %89, i64 0, i32 1
  %91 = load double, ptr %90, align 8, !tbaa !35
  %92 = fcmp oeq double %91, 1.000000e+00
  br label %93

93:                                               ; preds = %85, %88, %70, %76, %61, %58, %55, %2, %17
  %94 = phi i1 [ false, %17 ], [ false, %2 ], [ false, %61 ], [ false, %58 ], [ false, %55 ], [ false, %76 ], [ false, %70 ], [ %92, %88 ], [ false, %85 ]
  ret i1 %94
}

; Function Attrs: nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_ZNK6dealii16ConstraintMatrix27max_constraint_indirectionsEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !21
  %4 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !21
  %6 = icmp eq ptr %3, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %9, %1
  %8 = phi i32 [ 0, %1 ], [ %21, %9 ]
  ret i32 %8

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %21, %9 ], [ 0, %1 ]
  %11 = phi ptr [ %22, %9 ], [ %3, %1 ]
  %12 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %11, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !31
  %15 = load ptr, ptr %12, align 8, !tbaa !32
  %16 = ptrtoint ptr %14 to i64
  %17 = ptrtoint ptr %15 to i64
  %18 = sub i64 %16, %17
  %19 = lshr exact i64 %18, 4
  %20 = trunc i64 %19 to i32
  %21 = tail call i32 @llvm.umax.i32(i32 %10, i32 %20)
  %22 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %11, i64 1
  %23 = icmp eq ptr %22, %5
  br i1 %23, label %7, label %9
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK6dealii16ConstraintMatrix5printERSo(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.dealii::StandardExceptions::ExcIO", align 8
  %4 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !70
  %7 = load ptr, ptr %4, align 8, !tbaa !72
  %8 = icmp eq ptr %6, %7
  br i1 %8, label %9, label %18

9:                                                ; preds = %74, %2
  %10 = load ptr, ptr %1, align 8, !tbaa !311
  %11 = getelementptr i8, ptr %10, i64 -24
  %12 = load i64, ptr %11, align 8
  %13 = getelementptr inbounds i8, ptr %1, i64 %12
  %14 = getelementptr inbounds %"class.std::ios_base", ptr %13, i64 0, i32 5
  %15 = load i32, ptr %14, align 8, !tbaa !807
  %16 = and i32 %15, 5
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %95, label %84

18:                                               ; preds = %2, %74
  %19 = phi ptr [ %75, %74 ], [ %7, %2 ]
  %20 = phi i64 [ %77, %74 ], [ 0, %2 ]
  %21 = phi i32 [ %76, %74 ], [ 0, %2 ]
  %22 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %19, i64 %20, i32 1
  %23 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !31
  %25 = load ptr, ptr %22, align 8, !tbaa !32
  %26 = icmp eq ptr %24, %25
  br i1 %26, label %64, label %27

27:                                               ; preds = %18, %27
  %28 = phi i64 [ %53, %27 ], [ 0, %18 ]
  %29 = phi i32 [ %52, %27 ], [ 0, %18 ]
  %30 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str, i64 noundef 4)
  %31 = load ptr, ptr %4, align 8, !tbaa !72
  %32 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %31, i64 %20
  %33 = load i32, ptr %32, align 8, !tbaa !24
  %34 = zext i32 %33 to i64
  %35 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, i64 noundef %34)
  %36 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %35, ptr noundef nonnull @.str.10, i64 noundef 1)
  %37 = load ptr, ptr %4, align 8, !tbaa !72
  %38 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %37, i64 %20, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !32
  %40 = getelementptr inbounds %"struct.std::pair", ptr %39, i64 %28
  %41 = load i32, ptr %40, align 8, !tbaa !37
  %42 = zext i32 %41 to i64
  %43 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %35, i64 noundef %42)
  %44 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %43, ptr noundef nonnull @.str.11, i64 noundef 3)
  %45 = load ptr, ptr %4, align 8, !tbaa !72
  %46 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %45, i64 %20, i32 1
  %47 = load ptr, ptr %46, align 8, !tbaa !32
  %48 = getelementptr inbounds %"struct.std::pair", ptr %47, i64 %28, i32 1
  %49 = load double, ptr %48, align 8, !tbaa !35
  %50 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %43, double noundef %49)
  %51 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %50, ptr noundef nonnull @.str.12, i64 noundef 1)
  %52 = add i32 %29, 1
  %53 = zext i32 %52 to i64
  %54 = load ptr, ptr %4, align 8, !tbaa !72
  %55 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %54, i64 %20, i32 1
  %56 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !31
  %58 = load ptr, ptr %55, align 8, !tbaa !32
  %59 = ptrtoint ptr %57 to i64
  %60 = ptrtoint ptr %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 4
  %63 = icmp ugt i64 %62, %53
  br i1 %63, label %27, label %74

64:                                               ; preds = %18
  %65 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str, i64 noundef 4)
  %66 = load ptr, ptr %4, align 8, !tbaa !72
  %67 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %66, i64 %20
  %68 = load i32, ptr %67, align 8, !tbaa !24
  %69 = zext i32 %68 to i64
  %70 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, i64 noundef %69)
  %71 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %70, ptr noundef nonnull @.str.13, i64 noundef 4)
  %72 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %70, ptr noundef nonnull @.str.12, i64 noundef 1)
  %73 = load ptr, ptr %4, align 8, !tbaa !72
  br label %74

74:                                               ; preds = %27, %64
  %75 = phi ptr [ %73, %64 ], [ %54, %27 ]
  %76 = add i32 %21, 1
  %77 = zext i32 %76 to i64
  %78 = load ptr, ptr %5, align 8, !tbaa !70
  %79 = ptrtoint ptr %78 to i64
  %80 = ptrtoint ptr %75 to i64
  %81 = sub i64 %79, %80
  %82 = sdiv exact i64 %81, 40
  %83 = icmp eq i64 %82, %77
  br i1 %83, label %9, label %18

84:                                               ; preds = %9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %3, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !311
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %3, ptr noundef nonnull @.str.14, i32 noundef 1944, ptr noundef nonnull @.str.15, ptr noundef nonnull @.str.16, ptr noundef nonnull @.str.17)
          to label %85 unwind label %91

85:                                               ; preds = %84
  %86 = call ptr @__cxa_allocate_exception(i64 64) #24
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %86, ptr noundef nonnull align 8 dereferenceable(60) %3)
          to label %87 unwind label %89

87:                                               ; preds = %85
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii18StandardExceptions5ExcIOE, i64 0, inrange i32 0, i64 2), ptr %86, align 8, !tbaa !311
  invoke void @__cxa_throw(ptr nonnull %86, ptr nonnull @_ZTIN6dealii18StandardExceptions5ExcIOE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #22
          to label %88 unwind label %91

88:                                               ; preds = %87
  unreachable

89:                                               ; preds = %85
  %90 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %86) #24
  br label %93

91:                                               ; preds = %87, %84
  %92 = landingpad { ptr, i32 }
          cleanup
  br label %93

93:                                               ; preds = %89, %91
  %94 = phi { ptr, i32 } [ %92, %91 ], [ %90, %89 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %3) #24
  resume { ptr, i32 } %94

95:                                               ; preds = %9
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: nounwind
declare void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #12

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK6dealii16ConstraintMatrix9write_dotERSo(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #0 align 2 {
  %3 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.18, i64 noundef 21)
  %4 = load ptr, ptr %1, align 8, !tbaa !311
  %5 = getelementptr i8, ptr %4, i64 -24
  %6 = load i64, ptr %5, align 8
  %7 = getelementptr inbounds i8, ptr %1, i64 %6
  %8 = getelementptr inbounds %"class.std::basic_ios", ptr %7, i64 0, i32 5
  %9 = load ptr, ptr %8, align 8, !tbaa !813
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void @_ZSt16__throw_bad_castv() #22
  unreachable

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::ctype", ptr %9, i64 0, i32 8
  %14 = load i8, ptr %13, align 8, !tbaa !815
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.std::ctype", ptr %9, i64 0, i32 9, i64 10
  %18 = load i8, ptr %17, align 1, !tbaa !818
  br label %24

19:                                               ; preds = %12
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %9)
  %20 = load ptr, ptr %9, align 8, !tbaa !311
  %21 = getelementptr inbounds ptr, ptr %20, i64 6
  %22 = load ptr, ptr %21, align 8
  %23 = tail call noundef signext i8 %22(ptr noundef nonnull align 8 dereferenceable(570) %9, i8 noundef signext 10)
  br label %24

24:                                               ; preds = %16, %19
  %25 = phi i8 [ %18, %16 ], [ %23, %19 ]
  %26 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %25)
  %27 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %26)
  %28 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !70
  %31 = load ptr, ptr %28, align 8, !tbaa !72
  %32 = icmp eq ptr %30, %31
  br i1 %32, label %33, label %59

33:                                               ; preds = %114, %24
  %34 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.22, i64 noundef 1)
  %35 = load ptr, ptr %1, align 8, !tbaa !311
  %36 = getelementptr i8, ptr %35, i64 -24
  %37 = load i64, ptr %36, align 8
  %38 = getelementptr inbounds i8, ptr %1, i64 %37
  %39 = getelementptr inbounds %"class.std::basic_ios", ptr %38, i64 0, i32 5
  %40 = load ptr, ptr %39, align 8, !tbaa !813
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %33
  tail call void @_ZSt16__throw_bad_castv() #22
  unreachable

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.std::ctype", ptr %40, i64 0, i32 8
  %45 = load i8, ptr %44, align 8, !tbaa !815
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.std::ctype", ptr %40, i64 0, i32 9, i64 10
  %49 = load i8, ptr %48, align 1, !tbaa !818
  br label %55

50:                                               ; preds = %43
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %40)
  %51 = load ptr, ptr %40, align 8, !tbaa !311
  %52 = getelementptr inbounds ptr, ptr %51, i64 6
  %53 = load ptr, ptr %52, align 8
  %54 = tail call noundef signext i8 %53(ptr noundef nonnull align 8 dereferenceable(570) %40, i8 noundef signext 10)
  br label %55

55:                                               ; preds = %47, %50
  %56 = phi i8 [ %49, %47 ], [ %54, %50 ]
  %57 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %1, i8 noundef signext %56)
  %58 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %57)
  ret void

59:                                               ; preds = %24, %114
  %60 = phi ptr [ %115, %114 ], [ %31, %24 ]
  %61 = phi i64 [ %117, %114 ], [ 0, %24 ]
  %62 = phi i32 [ %116, %114 ], [ 0, %24 ]
  %63 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %60, i64 %61, i32 1
  %64 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %63, i64 0, i32 1
  %65 = load ptr, ptr %64, align 8, !tbaa !31
  %66 = load ptr, ptr %63, align 8, !tbaa !32
  %67 = icmp eq ptr %65, %66
  br i1 %67, label %105, label %68

68:                                               ; preds = %59, %68
  %69 = phi i64 [ %94, %68 ], [ 0, %59 ]
  %70 = phi i32 [ %93, %68 ], [ 0, %59 ]
  %71 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.19, i64 noundef 2)
  %72 = load ptr, ptr %28, align 8, !tbaa !72
  %73 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %72, i64 %61
  %74 = load i32, ptr %73, align 8, !tbaa !24
  %75 = zext i32 %74 to i64
  %76 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, i64 noundef %75)
  %77 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %76, ptr noundef nonnull @.str.20, i64 noundef 2)
  %78 = load ptr, ptr %28, align 8, !tbaa !72
  %79 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %78, i64 %61, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !32
  %81 = getelementptr inbounds %"struct.std::pair", ptr %80, i64 %69
  %82 = load i32, ptr %81, align 8, !tbaa !37
  %83 = zext i32 %82 to i64
  %84 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %76, i64 noundef %83)
  %85 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %84, ptr noundef nonnull @.str.21, i64 noundef 13)
  %86 = load ptr, ptr %28, align 8, !tbaa !72
  %87 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %86, i64 %61, i32 1
  %88 = load ptr, ptr %87, align 8, !tbaa !32
  %89 = getelementptr inbounds %"struct.std::pair", ptr %88, i64 %69, i32 1
  %90 = load double, ptr %89, align 8, !tbaa !35
  %91 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %84, double noundef %90)
  %92 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %91, ptr noundef nonnull @.str.12, i64 noundef 1)
  %93 = add i32 %70, 1
  %94 = zext i32 %93 to i64
  %95 = load ptr, ptr %28, align 8, !tbaa !72
  %96 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %95, i64 %61, i32 1
  %97 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %96, i64 0, i32 1
  %98 = load ptr, ptr %97, align 8, !tbaa !31
  %99 = load ptr, ptr %96, align 8, !tbaa !32
  %100 = ptrtoint ptr %98 to i64
  %101 = ptrtoint ptr %99 to i64
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 4
  %104 = icmp ugt i64 %103, %94
  br i1 %104, label %68, label %114

105:                                              ; preds = %59
  %106 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull @.str.19, i64 noundef 2)
  %107 = load ptr, ptr %28, align 8, !tbaa !72
  %108 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %107, i64 %61
  %109 = load i32, ptr %108, align 8, !tbaa !24
  %110 = zext i32 %109 to i64
  %111 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %1, i64 noundef %110)
  %112 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %111, ptr noundef nonnull @.str.12, i64 noundef 1)
  %113 = load ptr, ptr %28, align 8, !tbaa !72
  br label %114

114:                                              ; preds = %68, %105
  %115 = phi ptr [ %113, %105 ], [ %95, %68 ]
  %116 = add i32 %62, 1
  %117 = zext i32 %116 to i64
  %118 = load ptr, ptr %29, align 8, !tbaa !70
  %119 = ptrtoint ptr %118 to i64
  %120 = ptrtoint ptr %115 to i64
  %121 = sub i64 %119, %120
  %122 = sdiv exact i64 %121, 40
  %123 = icmp eq i64 %122, %117
  br i1 %123, label %33, label %59
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_ZNK6dealii16ConstraintMatrix18memory_consumptionEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(138) %0) local_unnamed_addr #13 align 2 {
  %2 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !70
  %5 = load ptr, ptr %2, align 8, !tbaa !72
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = sdiv exact i64 %8, 40
  %10 = and i64 %9, 4294967295
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %128, label %12

12:                                               ; preds = %1
  %13 = icmp ult i64 %10, 5
  br i1 %13, label %97, label %14

14:                                               ; preds = %12
  %15 = and i64 %9, 3
  %16 = icmp eq i64 %15, 0
  %17 = select i1 %16, i64 4, i64 %15
  %18 = sub nsw i64 %10, %17
  br label %19

19:                                               ; preds = %19, %14
  %20 = phi i64 [ 0, %14 ], [ %92, %19 ]
  %21 = phi <2 x i32> [ <i32 24, i32 0>, %14 ], [ %90, %19 ]
  %22 = phi <2 x i32> [ zeroinitializer, %14 ], [ %91, %19 ]
  %23 = or i64 %20, 1
  %24 = or i64 %20, 2
  %25 = or i64 %20, 3
  %26 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %20, i32 1
  %27 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %23, i32 1
  %28 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %24, i32 1
  %29 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %25, i32 1
  %30 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %20, i32 1, i32 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %23, i32 1, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %24, i32 1, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %25, i32 1, i32 0, i32 0, i32 0, i32 1
  %34 = load ptr, ptr %30, align 8, !tbaa !31
  %35 = load ptr, ptr %31, align 8, !tbaa !31
  %36 = insertelement <2 x ptr> poison, ptr %34, i64 0
  %37 = insertelement <2 x ptr> %36, ptr %35, i64 1
  %38 = load ptr, ptr %32, align 8, !tbaa !31
  %39 = load ptr, ptr %33, align 8, !tbaa !31
  %40 = insertelement <2 x ptr> poison, ptr %38, i64 0
  %41 = insertelement <2 x ptr> %40, ptr %39, i64 1
  %42 = load ptr, ptr %26, align 8, !tbaa !32
  %43 = load ptr, ptr %27, align 8, !tbaa !32
  %44 = insertelement <2 x ptr> poison, ptr %42, i64 0
  %45 = insertelement <2 x ptr> %44, ptr %43, i64 1
  %46 = load ptr, ptr %28, align 8, !tbaa !32
  %47 = load ptr, ptr %29, align 8, !tbaa !32
  %48 = insertelement <2 x ptr> poison, ptr %46, i64 0
  %49 = insertelement <2 x ptr> %48, ptr %47, i64 1
  %50 = ptrtoint <2 x ptr> %37 to <2 x i64>
  %51 = ptrtoint <2 x ptr> %41 to <2 x i64>
  %52 = ptrtoint <2 x ptr> %45 to <2 x i64>
  %53 = ptrtoint <2 x ptr> %49 to <2 x i64>
  %54 = sub <2 x i64> %50, %52
  %55 = sub <2 x i64> %51, %53
  %56 = ashr exact <2 x i64> %54, <i64 4, i64 4>
  %57 = ashr exact <2 x i64> %55, <i64 4, i64 4>
  %58 = trunc <2 x i64> %56 to <2 x i32>
  %59 = trunc <2 x i64> %57 to <2 x i32>
  %60 = mul <2 x i32> %58, <i32 12, i32 12>
  %61 = mul <2 x i32> %59, <i32 12, i32 12>
  %62 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %20, i32 1, i32 0, i32 0, i32 0, i32 2
  %63 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %23, i32 1, i32 0, i32 0, i32 0, i32 2
  %64 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %24, i32 1, i32 0, i32 0, i32 0, i32 2
  %65 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %25, i32 1, i32 0, i32 0, i32 0, i32 2
  %66 = load ptr, ptr %62, align 8, !tbaa !709
  %67 = load ptr, ptr %63, align 8, !tbaa !709
  %68 = insertelement <2 x ptr> poison, ptr %66, i64 0
  %69 = insertelement <2 x ptr> %68, ptr %67, i64 1
  %70 = load ptr, ptr %64, align 8, !tbaa !709
  %71 = load ptr, ptr %65, align 8, !tbaa !709
  %72 = insertelement <2 x ptr> poison, ptr %70, i64 0
  %73 = insertelement <2 x ptr> %72, ptr %71, i64 1
  %74 = ptrtoint <2 x ptr> %69 to <2 x i64>
  %75 = ptrtoint <2 x ptr> %73 to <2 x i64>
  %76 = sub <2 x i64> %74, %52
  %77 = sub <2 x i64> %75, %53
  %78 = lshr exact <2 x i64> %76, <i64 4, i64 4>
  %79 = lshr exact <2 x i64> %77, <i64 4, i64 4>
  %80 = sub nsw <2 x i64> %78, %56
  %81 = sub nsw <2 x i64> %79, %57
  %82 = trunc <2 x i64> %80 to <2 x i32>
  %83 = trunc <2 x i64> %81 to <2 x i32>
  %84 = shl <2 x i32> %82, <i32 4, i32 4>
  %85 = shl <2 x i32> %83, <i32 4, i32 4>
  %86 = add <2 x i32> %21, <i32 28, i32 28>
  %87 = add <2 x i32> %22, <i32 28, i32 28>
  %88 = add <2 x i32> %86, %60
  %89 = add <2 x i32> %87, %61
  %90 = add <2 x i32> %88, %84
  %91 = add <2 x i32> %89, %85
  %92 = add nuw i64 %20, 4
  %93 = icmp eq i64 %92, %18
  br i1 %93, label %94, label %19, !llvm.loop !819

94:                                               ; preds = %19
  %95 = add <2 x i32> %91, %90
  %96 = tail call i32 @llvm.vector.reduce.add.v2i32(<2 x i32> %95)
  br label %97

97:                                               ; preds = %12, %94
  %98 = phi i64 [ 0, %12 ], [ %18, %94 ]
  %99 = phi i32 [ 24, %12 ], [ %96, %94 ]
  br label %100

100:                                              ; preds = %97, %100
  %101 = phi i64 [ %124, %100 ], [ %98, %97 ]
  %102 = phi i32 [ %123, %100 ], [ %99, %97 ]
  %103 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %101, i32 1
  %104 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %101, i32 1, i32 0, i32 0, i32 0, i32 1
  %105 = load ptr, ptr %104, align 8, !tbaa !31
  %106 = load ptr, ptr %103, align 8, !tbaa !32
  %107 = ptrtoint ptr %105 to i64
  %108 = ptrtoint ptr %106 to i64
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 4
  %111 = trunc i64 %110 to i32
  %112 = mul i32 %111, 12
  %113 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 %101, i32 1, i32 0, i32 0, i32 0, i32 2
  %114 = load ptr, ptr %113, align 8, !tbaa !709
  %115 = ptrtoint ptr %114 to i64
  %116 = sub i64 %115, %108
  %117 = lshr exact i64 %116, 4
  %118 = sub nsw i64 %117, %110
  %119 = trunc i64 %118 to i32
  %120 = shl i32 %119, 4
  %121 = add i32 %102, 28
  %122 = add i32 %121, %112
  %123 = add i32 %122, %120
  %124 = add nuw nsw i64 %101, 1
  %125 = icmp eq i64 %124, %10
  br i1 %125, label %126, label %100, !llvm.loop !820

126:                                              ; preds = %100
  %127 = add i32 %123, 41
  br label %128

128:                                              ; preds = %126, %1
  %129 = phi i32 [ 65, %1 ], [ %127, %126 ]
  %130 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %131 = load ptr, ptr %130, align 8, !tbaa !821
  %132 = ptrtoint ptr %131 to i64
  %133 = sub i64 %132, %7
  %134 = sdiv exact i64 %133, 40
  %135 = sub nsw i64 %134, %9
  %136 = trunc i64 %135 to i32
  %137 = mul i32 %136, 40
  %138 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2
  %139 = getelementptr inbounds %"class.dealii::ConstraintMatrix", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %140 = load ptr, ptr %139, align 8, !tbaa !822
  %141 = load ptr, ptr %138, align 8, !tbaa !55
  %142 = ptrtoint ptr %140 to i64
  %143 = ptrtoint ptr %141 to i64
  %144 = sub i64 %142, %143
  %145 = trunc i64 %144 to i32
  %146 = add i32 %129, %145
  %147 = add i32 %146, %137
  ret i32 %147
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #14

declare void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72)) unnamed_addr #5

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9TableBaseILi2EbED2Ev(ptr noundef nonnull align 8 dereferenceable(92) %0) unnamed_addr #6 comdat align 2 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EbEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !311
  %2 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !422
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9TableBaseILi2EbED0Ev(ptr noundef nonnull align 8 dereferenceable(92) %0) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EbEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !311
  %2 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !422
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %9
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #14

declare void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60)) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #15

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext, ptr noundef, ptr noundef, ptr noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #12

; Function Attrs: noreturn
declare void @_ZSt28__throw_bad_array_new_lengthv() local_unnamed_addr #16

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #17

declare void @__cxa_rethrow() local_unnamed_addr

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 4 dereferenceable(4) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !313
  %6 = load ptr, ptr %0, align 8, !tbaa !21
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 9223372036854775804
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
  unreachable

12:                                               ; preds = %3
  %13 = ashr exact i64 %9, 2
  %14 = tail call i64 @llvm.umax.i64(i64 %13, i64 1)
  %15 = add i64 %14, %13
  %16 = icmp ult i64 %15, %13
  %17 = icmp ugt i64 %15, 2305843009213693951
  %18 = or i1 %16, %17
  %19 = select i1 %18, i64 2305843009213693951, i64 %15
  %20 = ptrtoint ptr %1 to i64
  %21 = sub i64 %20, %8
  %22 = ashr exact i64 %21, 2
  %23 = icmp eq i64 %19, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %12
  %25 = shl nuw nsw i64 %19, 2
  %26 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %25) #21
  br label %27

27:                                               ; preds = %12, %24
  %28 = phi ptr [ %26, %24 ], [ null, %12 ]
  %29 = getelementptr inbounds i32, ptr %28, i64 %22
  %30 = load i32, ptr %2, align 4, !tbaa !22
  store i32 %30, ptr %29, align 4, !tbaa !22
  %31 = icmp sgt i64 %21, 4
  br i1 %31, label %32, label %33, !prof !23

32:                                               ; preds = %27
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %28, ptr align 4 %6, i64 %21, i1 false)
  br label %37

33:                                               ; preds = %27
  %34 = icmp eq i64 %21, 4
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = load i32, ptr %6, align 4, !tbaa !22
  store i32 %36, ptr %28, align 4, !tbaa !22
  br label %37

37:                                               ; preds = %35, %33, %32
  %38 = getelementptr inbounds i32, ptr %29, i64 1
  %39 = sub i64 %7, %20
  %40 = icmp sgt i64 %39, 4
  br i1 %40, label %41, label %42, !prof !23

41:                                               ; preds = %37
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %38, ptr align 4 %1, i64 %39, i1 false)
  br label %46

42:                                               ; preds = %37
  %43 = icmp eq i64 %39, 4
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = load i32, ptr %1, align 4, !tbaa !22
  store i32 %45, ptr %38, align 4, !tbaa !22
  br label %46

46:                                               ; preds = %44, %42, %41
  %47 = icmp eq ptr %6, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %46
  tail call void @_ZdlPv(ptr noundef nonnull %6) #23
  br label %49

49:                                               ; preds = %46, %48
  %50 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %51 = ashr exact i64 %39, 2
  %52 = getelementptr inbounds i32, ptr %38, i64 %51
  store ptr %28, ptr %0, align 8, !tbaa !58
  store ptr %52, ptr %4, align 8, !tbaa !313
  %53 = getelementptr inbounds i32, ptr %28, i64 %19
  store ptr %53, ptr %50, align 8, !tbaa !417
  ret void
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(ptr noundef) local_unnamed_addr #16

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #2

declare void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #5

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii18StandardExceptions5ExcIOD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #18 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #24
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void
}

; Function Attrs: nounwind
declare noundef ptr @_ZNK6dealii13ExceptionBase4whatEv(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #12

declare void @_ZNK6dealii13ExceptionBase10print_infoERSo(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #5

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, i64 noundef) local_unnamed_addr #5

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8), i8 noundef signext) local_unnamed_addr #5

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZSt16__throw_bad_castv() local_unnamed_addr #16

declare void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570)) local_unnamed_addr #5

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertImEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #5

declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), double noundef) local_unnamed_addr #5

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii5TableILi2EbED0Ev(ptr noundef nonnull align 8 dereferenceable(92) %0) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EbEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !311
  %2 = getelementptr inbounds %"class.dealii::TableBase.106", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !422
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #23
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %9
}

declare void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72)) unnamed_addr #5

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_(ptr %0, ptr %1, i64 noundef %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %6 = ptrtoint ptr %0 to i64
  %7 = ptrtoint ptr %1 to i64
  %8 = sub i64 %7, %6
  %9 = icmp sgt i64 %8, 640
  br i1 %9, label %10, label %252

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 1
  br label %12

12:                                               ; preds = %10, %248
  %13 = phi i64 [ %8, %10 ], [ %250, %248 ]
  %14 = phi i64 [ %2, %10 ], [ %26, %248 ]
  %15 = phi ptr [ %1, %10 ], [ %51, %248 ]
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %17, label %25

17:                                               ; preds = %12
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_RT0_(ptr %0, ptr %15, ptr noundef nonnull align 1 dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  br label %18

18:                                               ; preds = %17, %18
  %19 = phi ptr [ %20, %18 ], [ %15, %17 ]
  %20 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %19, i64 -1
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_SC_RT0_(ptr %0, ptr nonnull %20, ptr nonnull %20, ptr noundef nonnull align 1 dereferenceable(1) %5)
  %21 = ptrtoint ptr %20 to i64
  %22 = sub i64 %21, %6
  %23 = icmp sgt i64 %22, 40
  br i1 %23, label %18, label %24

24:                                               ; preds = %18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5)
  br label %252

25:                                               ; preds = %12
  %26 = add nsw i64 %14, -1
  %27 = udiv i64 %13, 80
  %28 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %27
  %29 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %15, i64 -1
  %30 = load i32, ptr %11, align 8, !tbaa !24
  %31 = load i32, ptr %28, align 8, !tbaa !24
  %32 = icmp ult i32 %30, %31
  %33 = load i32, ptr %29, align 8, !tbaa !24
  br i1 %32, label %34, label %39

34:                                               ; preds = %25
  %35 = icmp ult i32 %31, %33
  br i1 %35, label %44, label %36

36:                                               ; preds = %34
  %37 = icmp ult i32 %30, %33
  %38 = select i1 %37, ptr %29, ptr %11
  br label %44

39:                                               ; preds = %25
  %40 = icmp ult i32 %30, %33
  br i1 %40, label %44, label %41

41:                                               ; preds = %39
  %42 = icmp ult i32 %31, %33
  %43 = select i1 %42, ptr %29, ptr %28
  br label %44

44:                                               ; preds = %41, %39, %36, %34
  %45 = phi ptr [ %28, %34 ], [ %38, %36 ], [ %11, %39 ], [ %43, %41 ]
  tail call void @_ZSt4swapIN6dealii16ConstraintMatrix14ConstraintLineEEvRT_S4_(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %45)
  br label %46

46:                                               ; preds = %237, %44
  %47 = phi ptr [ %11, %44 ], [ %54, %237 ]
  %48 = phi ptr [ %15, %44 ], [ %57, %237 ]
  %49 = load i32, ptr %0, align 8, !tbaa !24
  br label %50

50:                                               ; preds = %50, %46
  %51 = phi ptr [ %47, %46 ], [ %54, %50 ]
  %52 = load i32, ptr %51, align 8, !tbaa !24
  %53 = icmp ult i32 %52, %49
  %54 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %51, i64 1
  br i1 %53, label %50, label %55

55:                                               ; preds = %50, %55
  %56 = phi ptr [ %57, %55 ], [ %48, %50 ]
  %57 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %56, i64 -1
  %58 = load i32, ptr %57, align 8, !tbaa !24
  %59 = icmp ult i32 %49, %58
  br i1 %59, label %55, label %60

60:                                               ; preds = %55
  %61 = icmp ult ptr %51, %57
  br i1 %61, label %62, label %248

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %51, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %51, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %65 = load ptr, ptr %64, align 8, !tbaa !21
  %66 = load ptr, ptr %63, align 8, !tbaa !21
  %67 = ptrtoint ptr %65 to i64
  %68 = ptrtoint ptr %66 to i64
  %69 = sub i64 %67, %68
  %70 = icmp eq ptr %65, %66
  br i1 %70, label %84, label %71

71:                                               ; preds = %62
  %72 = icmp ugt i64 %69, 9223372036854775792
  br i1 %72, label %73, label %74, !prof !823

73:                                               ; preds = %71
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #22
  unreachable

74:                                               ; preds = %71
  %75 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %69) #21
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi ptr [ %80, %76 ], [ %75, %74 ]
  %78 = phi ptr [ %79, %76 ], [ %66, %74 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %77, ptr noundef nonnull align 8 dereferenceable(16) %78, i64 16, i1 false)
  %79 = getelementptr inbounds %"struct.std::pair", ptr %78, i64 1
  %80 = getelementptr inbounds %"struct.std::pair", ptr %77, i64 1
  %81 = icmp eq ptr %79, %65
  br i1 %81, label %82, label %76

82:                                               ; preds = %76
  %83 = load i32, ptr %57, align 8, !tbaa !24
  br label %84

84:                                               ; preds = %62, %82
  %85 = phi i32 [ %83, %82 ], [ %58, %62 ]
  %86 = phi ptr [ %75, %82 ], [ null, %62 ]
  %87 = phi ptr [ %80, %82 ], [ null, %62 ]
  %88 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %51, i64 0, i32 2
  %89 = load double, ptr %88, align 8, !tbaa !48
  store i32 %85, ptr %51, align 8, !tbaa !24
  %90 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %56, i64 -1, i32 1
  %91 = icmp eq ptr %90, %63
  br i1 %91, label %162, label %92

92:                                               ; preds = %84
  %93 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %56, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 1
  %94 = load ptr, ptr %93, align 8, !tbaa !21
  %95 = load ptr, ptr %90, align 8, !tbaa !21
  %96 = ptrtoint ptr %94 to i64
  %97 = ptrtoint ptr %95 to i64
  %98 = sub i64 %96, %97
  %99 = ashr exact i64 %98, 4
  %100 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %51, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %101 = load ptr, ptr %100, align 8, !tbaa !709
  %102 = load ptr, ptr %63, align 8, !tbaa !21
  %103 = ptrtoint ptr %101 to i64
  %104 = ptrtoint ptr %102 to i64
  %105 = sub i64 %103, %104
  %106 = ashr exact i64 %105, 4
  %107 = icmp ugt i64 %99, %106
  br i1 %107, label %108, label %124

108:                                              ; preds = %92
  %109 = icmp ugt i64 %98, 9223372036854775792
  br i1 %109, label %179, label %110, !prof !823

110:                                              ; preds = %108
  %111 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %98) #21
          to label %112 unwind label %239

112:                                              ; preds = %110
  %113 = icmp eq ptr %95, %94
  br i1 %113, label %119, label %114

114:                                              ; preds = %112
  %115 = add i64 %96, -16
  %116 = sub i64 %115, %97
  %117 = and i64 %116, -16
  %118 = add i64 %117, 16
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %111, ptr align 8 %95, i64 %118, i1 false)
  br label %119

119:                                              ; preds = %114, %112
  %120 = icmp eq ptr %102, null
  br i1 %120, label %122, label %121

121:                                              ; preds = %119
  tail call void @_ZdlPv(ptr noundef nonnull %102) #23
  br label %122

122:                                              ; preds = %121, %119
  store ptr %111, ptr %63, align 8, !tbaa !32
  %123 = getelementptr inbounds %"struct.std::pair", ptr %111, i64 %99
  store ptr %123, ptr %100, align 8, !tbaa !709
  br label %159

124:                                              ; preds = %92
  %125 = load ptr, ptr %64, align 8, !tbaa !31
  %126 = ptrtoint ptr %125 to i64
  %127 = sub i64 %126, %104
  %128 = ashr exact i64 %127, 4
  %129 = icmp ult i64 %128, %99
  br i1 %129, label %136, label %130

130:                                              ; preds = %124
  %131 = icmp sgt i64 %98, 16
  br i1 %131, label %132, label %133, !prof !23

132:                                              ; preds = %130
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %102, ptr align 8 %95, i64 %98, i1 false)
  br label %159

133:                                              ; preds = %130
  %134 = icmp eq i64 %98, 16
  br i1 %134, label %135, label %159

135:                                              ; preds = %133
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %102, ptr noundef nonnull align 8 dereferenceable(16) %95, i64 16, i1 false)
  br label %159

136:                                              ; preds = %124
  %137 = icmp sgt i64 %127, 16
  br i1 %137, label %138, label %139, !prof !23

138:                                              ; preds = %136
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %102, ptr align 8 %95, i64 %127, i1 false)
  br label %142

139:                                              ; preds = %136
  %140 = icmp eq i64 %127, 16
  br i1 %140, label %141, label %142

141:                                              ; preds = %139
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %102, ptr noundef nonnull align 8 dereferenceable(16) %95, i64 16, i1 false)
  br label %142

142:                                              ; preds = %141, %139, %138
  %143 = load ptr, ptr %90, align 8, !tbaa !32
  %144 = load ptr, ptr %64, align 8, !tbaa !31
  %145 = load ptr, ptr %63, align 8, !tbaa !32
  %146 = ptrtoint ptr %144 to i64
  %147 = ptrtoint ptr %145 to i64
  %148 = sub i64 %146, %147
  %149 = ashr exact i64 %148, 4
  %150 = getelementptr inbounds %"struct.std::pair", ptr %143, i64 %149
  %151 = load ptr, ptr %93, align 8, !tbaa !31
  %152 = icmp eq ptr %150, %151
  br i1 %152, label %159, label %153

153:                                              ; preds = %142, %153
  %154 = phi ptr [ %157, %153 ], [ %144, %142 ]
  %155 = phi ptr [ %156, %153 ], [ %150, %142 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %154, ptr noundef nonnull align 8 dereferenceable(16) %155, i64 16, i1 false)
  %156 = getelementptr inbounds %"struct.std::pair", ptr %155, i64 1
  %157 = getelementptr inbounds %"struct.std::pair", ptr %154, i64 1
  %158 = icmp eq ptr %156, %151
  br i1 %158, label %159, label %153

159:                                              ; preds = %153, %142, %135, %133, %132, %122
  %160 = load ptr, ptr %63, align 8, !tbaa !32
  %161 = getelementptr inbounds %"struct.std::pair", ptr %160, i64 %99
  store ptr %161, ptr %64, align 8, !tbaa !31
  br label %162

162:                                              ; preds = %159, %84
  %163 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %56, i64 -1, i32 2
  %164 = load double, ptr %163, align 8, !tbaa !48
  store double %164, ptr %88, align 8, !tbaa !48
  store i32 %52, ptr %57, align 8, !tbaa !24
  %165 = ptrtoint ptr %87 to i64
  %166 = ptrtoint ptr %86 to i64
  %167 = sub i64 %165, %166
  %168 = ashr exact i64 %167, 4
  %169 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %56, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 2
  %170 = load ptr, ptr %169, align 8, !tbaa !709
  %171 = load ptr, ptr %90, align 8, !tbaa !21
  %172 = ptrtoint ptr %170 to i64
  %173 = ptrtoint ptr %171 to i64
  %174 = sub i64 %172, %173
  %175 = ashr exact i64 %174, 4
  %176 = icmp ugt i64 %168, %175
  br i1 %176, label %177, label %195

177:                                              ; preds = %162
  %178 = icmp ugt i64 %167, 9223372036854775792
  br i1 %178, label %179, label %181, !prof !823

179:                                              ; preds = %177, %108
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #22
          to label %180 unwind label %241

180:                                              ; preds = %179
  unreachable

181:                                              ; preds = %177
  %182 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %167) #21
          to label %183 unwind label %239

183:                                              ; preds = %181
  %184 = icmp eq ptr %86, %87
  br i1 %184, label %190, label %185

185:                                              ; preds = %183
  %186 = add i64 %165, -16
  %187 = sub i64 %186, %166
  %188 = and i64 %187, -16
  %189 = add i64 %188, 16
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %182, ptr align 8 %86, i64 %189, i1 false)
  br label %190

190:                                              ; preds = %185, %183
  %191 = icmp eq ptr %171, null
  br i1 %191, label %193, label %192

192:                                              ; preds = %190
  tail call void @_ZdlPv(ptr noundef nonnull %171) #23
  br label %193

193:                                              ; preds = %192, %190
  store ptr %182, ptr %90, align 8, !tbaa !32
  %194 = getelementptr inbounds %"struct.std::pair", ptr %182, i64 %168
  store ptr %194, ptr %169, align 8, !tbaa !709
  br label %232

195:                                              ; preds = %162
  %196 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %56, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 1
  %197 = load ptr, ptr %196, align 8, !tbaa !31
  %198 = ptrtoint ptr %197 to i64
  %199 = sub i64 %198, %173
  %200 = ashr exact i64 %199, 4
  %201 = icmp ult i64 %200, %168
  br i1 %201, label %211, label %202

202:                                              ; preds = %195
  %203 = icmp sgt i64 %167, 16
  br i1 %203, label %204, label %205, !prof !23

204:                                              ; preds = %202
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %171, ptr align 8 %86, i64 %167, i1 false)
  br label %232

205:                                              ; preds = %202
  %206 = icmp eq i64 %167, 16
  br i1 %206, label %207, label %232

207:                                              ; preds = %205
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %171, ptr noundef nonnull align 8 dereferenceable(16) %86, i64 16, i1 false)
  %208 = load ptr, ptr %90, align 8, !tbaa !32
  %209 = getelementptr inbounds %"struct.std::pair", ptr %208, i64 %168
  %210 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %56, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %209, ptr %210, align 8, !tbaa !31
  store double %89, ptr %163, align 8, !tbaa !48
  br label %238

211:                                              ; preds = %195
  %212 = icmp sgt i64 %199, 16
  br i1 %212, label %213, label %214, !prof !23

213:                                              ; preds = %211
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %171, ptr align 8 %86, i64 %199, i1 false)
  br label %217

214:                                              ; preds = %211
  %215 = icmp eq i64 %199, 16
  br i1 %215, label %216, label %217

216:                                              ; preds = %214
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %171, ptr noundef nonnull align 8 dereferenceable(16) %86, i64 16, i1 false)
  br label %217

217:                                              ; preds = %216, %214, %213
  %218 = load ptr, ptr %196, align 8, !tbaa !31
  %219 = load ptr, ptr %90, align 8, !tbaa !32
  %220 = ptrtoint ptr %218 to i64
  %221 = ptrtoint ptr %219 to i64
  %222 = sub i64 %220, %221
  %223 = ashr exact i64 %222, 4
  %224 = getelementptr inbounds %"struct.std::pair", ptr %86, i64 %223
  %225 = icmp eq ptr %224, %87
  br i1 %225, label %232, label %226

226:                                              ; preds = %217, %226
  %227 = phi ptr [ %230, %226 ], [ %218, %217 ]
  %228 = phi ptr [ %229, %226 ], [ %224, %217 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %227, ptr noundef nonnull align 8 dereferenceable(16) %228, i64 16, i1 false)
  %229 = getelementptr inbounds %"struct.std::pair", ptr %228, i64 1
  %230 = getelementptr inbounds %"struct.std::pair", ptr %227, i64 1
  %231 = icmp eq ptr %229, %87
  br i1 %231, label %232, label %226

232:                                              ; preds = %226, %217, %205, %204, %193
  %233 = load ptr, ptr %90, align 8, !tbaa !32
  %234 = getelementptr inbounds %"struct.std::pair", ptr %233, i64 %168
  %235 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %56, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %234, ptr %235, align 8, !tbaa !31
  store double %89, ptr %163, align 8, !tbaa !48
  %236 = icmp eq ptr %86, null
  br i1 %236, label %237, label %238

237:                                              ; preds = %232, %238
  br label %46

238:                                              ; preds = %207, %232
  tail call void @_ZdlPv(ptr noundef nonnull %86) #23
  br label %237

239:                                              ; preds = %181, %110
  %240 = landingpad { ptr, i32 }
          cleanup
  br label %243

241:                                              ; preds = %179
  %242 = landingpad { ptr, i32 }
          cleanup
  br label %243

243:                                              ; preds = %241, %239
  %244 = phi { ptr, i32 } [ %240, %239 ], [ %242, %241 ]
  %245 = icmp eq ptr %86, null
  br i1 %245, label %247, label %246

246:                                              ; preds = %243
  tail call void @_ZdlPv(ptr noundef nonnull %86) #23
  br label %247

247:                                              ; preds = %246, %243
  resume { ptr, i32 } %244

248:                                              ; preds = %60
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_less_iterEEvT_SC_T0_T1_(ptr nonnull %51, ptr %15, i64 noundef %26)
  %249 = ptrtoint ptr %51 to i64
  %250 = sub i64 %249, %6
  %251 = icmp sgt i64 %250, 640
  br i1 %251, label %12, label %252

252:                                              ; preds = %248, %3, %24
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_RT0_(ptr %0, ptr %1, ptr noundef nonnull align 1 dereferenceable(1) %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %4 = alloca %"struct.dealii::ConstraintMatrix::ConstraintLine", align 8
  %5 = ptrtoint ptr %1 to i64
  %6 = ptrtoint ptr %0 to i64
  %7 = sub i64 %5, %6
  %8 = sdiv exact i64 %7, 40
  %9 = icmp slt i64 %7, 80
  br i1 %9, label %92, label %10

10:                                               ; preds = %3
  %11 = add nsw i64 %8, -2
  %12 = lshr i64 %11, 1
  %13 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %4, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %4, i64 0, i32 2
  br label %17

17:                                               ; preds = %77, %10
  %18 = phi i64 [ %12, %10 ], [ %74, %77 ]
  %19 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %18
  %20 = load i32, ptr %19, align 8, !tbaa !24
  %21 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %18, i32 1
  %22 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %18, i32 1, i32 0, i32 0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !21
  %24 = load ptr, ptr %21, align 8, !tbaa !21
  %25 = ptrtoint ptr %23 to i64
  %26 = ptrtoint ptr %24 to i64
  %27 = sub i64 %25, %26
  %28 = icmp eq ptr %23, %24
  br i1 %28, label %40, label %29

29:                                               ; preds = %17
  %30 = icmp ugt i64 %27, 9223372036854775792
  br i1 %30, label %31, label %32, !prof !823

31:                                               ; preds = %29
  call void @_ZSt28__throw_bad_array_new_lengthv() #22
  unreachable

32:                                               ; preds = %29
  %33 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %27) #21
  br label %34

34:                                               ; preds = %32, %34
  %35 = phi ptr [ %38, %34 ], [ %33, %32 ]
  %36 = phi ptr [ %37, %34 ], [ %24, %32 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %35, ptr noundef nonnull align 8 dereferenceable(16) %36, i64 16, i1 false)
  %37 = getelementptr inbounds %"struct.std::pair", ptr %36, i64 1
  %38 = getelementptr inbounds %"struct.std::pair", ptr %35, i64 1
  %39 = icmp eq ptr %37, %23
  br i1 %39, label %40, label %34

40:                                               ; preds = %34, %17
  %41 = phi ptr [ null, %17 ], [ %33, %34 ]
  %42 = phi ptr [ null, %17 ], [ %38, %34 ]
  %43 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %18, i32 2
  %44 = load double, ptr %43, align 8, !tbaa !48
  store i32 %20, ptr %4, align 8, !tbaa !24
  %45 = ptrtoint ptr %42 to i64
  %46 = ptrtoint ptr %41 to i64
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  %49 = icmp eq ptr %42, %41
  br i1 %49, label %50, label %52

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"struct.std::pair", ptr null, i64 %48
  store i64 0, ptr %13, align 8
  store ptr %51, ptr %15, align 8, !tbaa !709
  br label %66

52:                                               ; preds = %40
  %53 = icmp ugt i64 %47, 9223372036854775792
  br i1 %53, label %54, label %56, !prof !823

54:                                               ; preds = %52
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #22
          to label %55 unwind label %80

55:                                               ; preds = %54
  unreachable

56:                                               ; preds = %52
  %57 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %47) #21
          to label %58 unwind label %78

58:                                               ; preds = %56
  store ptr %57, ptr %13, align 8, !tbaa !32
  %59 = getelementptr inbounds %"struct.std::pair", ptr %57, i64 %48
  store ptr %59, ptr %15, align 8, !tbaa !709
  %60 = add i64 %45, -16
  %61 = sub i64 %60, %46
  %62 = and i64 %61, -16
  %63 = add i64 %62, 16
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %57, ptr align 8 %41, i64 %63, i1 false)
  %64 = getelementptr i8, ptr %57, i64 16
  %65 = getelementptr i8, ptr %64, i64 %62
  br label %66

66:                                               ; preds = %58, %50
  %67 = phi ptr [ null, %50 ], [ %65, %58 ]
  store ptr %67, ptr %14, align 8, !tbaa !31
  store double %44, ptr %16, align 8, !tbaa !48
  invoke void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_less_iterEEvT_T0_SD_T1_T2_(ptr nonnull %0, i64 noundef %18, i64 noundef %8, ptr noundef nonnull %4)
          to label %68 unwind label %82

68:                                               ; preds = %66
  %69 = load ptr, ptr %13, align 8, !tbaa !32
  %70 = icmp eq ptr %69, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %68
  call void @_ZdlPv(ptr noundef nonnull %69) #23
  br label %72

72:                                               ; preds = %71, %68
  %73 = icmp eq i64 %18, 0
  %74 = add nsw i64 %18, -1
  %75 = icmp eq ptr %41, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %72
  call void @_ZdlPv(ptr noundef nonnull %41) #23
  br label %77

77:                                               ; preds = %72, %76
  br i1 %73, label %92, label %17

78:                                               ; preds = %56
  %79 = landingpad { ptr, i32 }
          cleanup
  br label %87

80:                                               ; preds = %54
  %81 = landingpad { ptr, i32 }
          cleanup
  br label %87

82:                                               ; preds = %66
  %83 = landingpad { ptr, i32 }
          cleanup
  %84 = load ptr, ptr %13, align 8, !tbaa !32
  %85 = icmp eq ptr %84, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %82
  call void @_ZdlPv(ptr noundef nonnull %84) #23
  br label %87

87:                                               ; preds = %78, %80, %86, %82
  %88 = phi { ptr, i32 } [ %83, %82 ], [ %83, %86 ], [ %79, %78 ], [ %81, %80 ]
  %89 = icmp eq ptr %41, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %87
  call void @_ZdlPv(ptr noundef nonnull %41) #23
  br label %91

91:                                               ; preds = %90, %87
  resume { ptr, i32 } %88

92:                                               ; preds = %77, %3
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_SC_RT0_(ptr %0, ptr %1, ptr %2, ptr noundef nonnull align 1 dereferenceable(1) %3) local_unnamed_addr #6 comdat personality ptr @__gxx_personality_v0 {
  %5 = alloca %"struct.dealii::ConstraintMatrix::ConstraintLine", align 8
  %6 = load i32, ptr %2, align 8, !tbaa !24
  %7 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %2, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !21
  %10 = load ptr, ptr %7, align 8, !tbaa !21
  %11 = ptrtoint ptr %9 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = icmp eq ptr %9, %10
  br i1 %14, label %26, label %15

15:                                               ; preds = %4
  %16 = icmp ugt i64 %13, 9223372036854775792
  br i1 %16, label %17, label %18, !prof !823

17:                                               ; preds = %15
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #22
  unreachable

18:                                               ; preds = %15
  %19 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %13) #21
  br label %20

20:                                               ; preds = %18, %20
  %21 = phi ptr [ %24, %20 ], [ %19, %18 ]
  %22 = phi ptr [ %23, %20 ], [ %10, %18 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %21, ptr noundef nonnull align 8 dereferenceable(16) %22, i64 16, i1 false)
  %23 = getelementptr inbounds %"struct.std::pair", ptr %22, i64 1
  %24 = getelementptr inbounds %"struct.std::pair", ptr %21, i64 1
  %25 = icmp eq ptr %23, %9
  br i1 %25, label %26, label %20

26:                                               ; preds = %20, %4
  %27 = phi ptr [ null, %4 ], [ %19, %20 ]
  %28 = phi ptr [ null, %4 ], [ %24, %20 ]
  %29 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %2, i64 0, i32 2
  %30 = load double, ptr %29, align 8, !tbaa !48
  %31 = load i32, ptr %0, align 8, !tbaa !24
  store i32 %31, ptr %2, align 8, !tbaa !24
  %32 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 1
  %33 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %32)
          to label %34 unwind label %78

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 2
  %36 = load double, ptr %35, align 8, !tbaa !48
  store double %36, ptr %29, align 8, !tbaa !48
  %37 = ptrtoint ptr %1 to i64
  %38 = ptrtoint ptr %0 to i64
  %39 = sub i64 %37, %38
  %40 = sdiv exact i64 %39, 40
  store i32 %6, ptr %5, align 8, !tbaa !24
  %41 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 0, i32 1
  %42 = ptrtoint ptr %28 to i64
  %43 = ptrtoint ptr %27 to i64
  %44 = sub i64 %42, %43
  %45 = ashr exact i64 %44, 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %41, i8 0, i64 24, i1 false)
  %46 = icmp eq ptr %28, %27
  br i1 %46, label %47, label %51

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.std::pair", ptr null, i64 %45
  %50 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %41, i8 0, i64 16, i1 false)
  store ptr %49, ptr %50, align 8, !tbaa !709
  br label %66

51:                                               ; preds = %34
  %52 = icmp ugt i64 %44, 9223372036854775792
  br i1 %52, label %53, label %55, !prof !823

53:                                               ; preds = %51
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #22
          to label %54 unwind label %78

54:                                               ; preds = %53
  unreachable

55:                                               ; preds = %51
  %56 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %44) #21
          to label %57 unwind label %78

57:                                               ; preds = %55
  store ptr %56, ptr %41, align 8, !tbaa !32
  %58 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %56, ptr %58, align 8, !tbaa !31
  %59 = getelementptr inbounds %"struct.std::pair", ptr %56, i64 %45
  %60 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store ptr %59, ptr %60, align 8, !tbaa !709
  %61 = add i64 %42, -16
  %62 = sub i64 %61, %43
  %63 = and i64 %62, -16
  %64 = add i64 %63, 16
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %56, ptr align 8 %27, i64 %64, i1 false)
  %65 = getelementptr i8, ptr %56, i64 %64
  br label %66

66:                                               ; preds = %57, %47
  %67 = phi ptr [ %48, %47 ], [ %58, %57 ]
  %68 = phi ptr [ null, %47 ], [ %65, %57 ]
  store ptr %68, ptr %67, align 8, !tbaa !31
  %69 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 0, i32 2
  store double %30, ptr %69, align 8, !tbaa !48
  invoke void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_less_iterEEvT_T0_SD_T1_T2_(ptr nonnull %0, i64 noundef 0, i64 noundef %40, ptr noundef nonnull %5)
          to label %70 unwind label %80

70:                                               ; preds = %66
  %71 = load ptr, ptr %41, align 8, !tbaa !32
  %72 = icmp eq ptr %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  call void @_ZdlPv(ptr noundef nonnull %71) #23
  br label %74

74:                                               ; preds = %73, %70
  %75 = icmp eq ptr %27, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %74
  call void @_ZdlPv(ptr noundef nonnull %27) #23
  br label %77

77:                                               ; preds = %74, %76
  ret void

78:                                               ; preds = %55, %53, %26
  %79 = landingpad { ptr, i32 }
          cleanup
  br label %85

80:                                               ; preds = %66
  %81 = landingpad { ptr, i32 }
          cleanup
  %82 = load ptr, ptr %41, align 8, !tbaa !32
  %83 = icmp eq ptr %82, null
  br i1 %83, label %85, label %84

84:                                               ; preds = %80
  call void @_ZdlPv(ptr noundef nonnull %82) #23
  br label %85

85:                                               ; preds = %84, %80, %78
  %86 = phi { ptr, i32 } [ %79, %78 ], [ %81, %80 ], [ %81, %84 ]
  %87 = icmp eq ptr %27, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %85
  call void @_ZdlPv(ptr noundef nonnull %27) #23
  br label %89

89:                                               ; preds = %88, %85
  resume { ptr, i32 } %86
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_less_iterEEvT_T0_SD_T1_T2_(ptr %0, i64 noundef %1, i64 noundef %2, ptr noundef %3) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %5 = alloca %"struct.dealii::ConstraintMatrix::ConstraintLine", align 8
  %6 = add nsw i64 %2, -1
  %7 = sdiv i64 %6, 2
  %8 = icmp sgt i64 %7, %1
  br i1 %8, label %9, label %30

9:                                                ; preds = %4, %9
  %10 = phi i64 [ %19, %9 ], [ %1, %4 ]
  %11 = shl i64 %10, 1
  %12 = add i64 %11, 2
  %13 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %12
  %14 = or i64 %11, 1
  %15 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %14
  %16 = load i32, ptr %13, align 8, !tbaa !24
  %17 = load i32, ptr %15, align 8, !tbaa !24
  %18 = icmp ult i32 %16, %17
  %19 = select i1 %18, i64 %14, i64 %12
  %20 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %19
  %21 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %10
  %22 = load i32, ptr %20, align 8, !tbaa !24
  store i32 %22, ptr %21, align 8, !tbaa !24
  %23 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %10, i32 1
  %24 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %19, i32 1
  %25 = tail call noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %23, ptr noundef nonnull align 8 dereferenceable(24) %24)
  %26 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %19, i32 2
  %27 = load double, ptr %26, align 8, !tbaa !48
  %28 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %10, i32 2
  store double %27, ptr %28, align 8, !tbaa !48
  %29 = icmp slt i64 %19, %7
  br i1 %29, label %9, label %30

30:                                               ; preds = %9, %4
  %31 = phi i64 [ %1, %4 ], [ %19, %9 ]
  %32 = and i64 %2, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = add nsw i64 %2, -2
  %36 = sdiv i64 %35, 2
  %37 = icmp eq i64 %31, %36
  br i1 %37, label %38, label %50

38:                                               ; preds = %34
  %39 = shl i64 %31, 1
  %40 = or i64 %39, 1
  %41 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %40
  %42 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %31
  %43 = load i32, ptr %41, align 8, !tbaa !24
  store i32 %43, ptr %42, align 8, !tbaa !24
  %44 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %31, i32 1
  %45 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %40, i32 1
  %46 = tail call noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %45)
  %47 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %40, i32 2
  %48 = load double, ptr %47, align 8, !tbaa !48
  %49 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %31, i32 2
  store double %48, ptr %49, align 8, !tbaa !48
  br label %50

50:                                               ; preds = %38, %34, %30
  %51 = phi i64 [ %40, %38 ], [ %31, %34 ], [ %31, %30 ]
  %52 = load i32, ptr %3, align 8, !tbaa !24
  store i32 %52, ptr %5, align 8, !tbaa !24
  %53 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !21
  %57 = load ptr, ptr %54, align 8, !tbaa !21
  %58 = ptrtoint ptr %56 to i64
  %59 = ptrtoint ptr %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %53, i8 0, i64 24, i1 false)
  %62 = icmp eq ptr %56, %57
  br i1 %62, label %63, label %67

63:                                               ; preds = %50
  %64 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"struct.std::pair", ptr null, i64 %61
  %66 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %53, i8 0, i64 16, i1 false)
  store ptr %65, ptr %66, align 8, !tbaa !709
  br label %81

67:                                               ; preds = %50
  %68 = icmp ugt i64 %60, 9223372036854775792
  br i1 %68, label %69, label %70, !prof !823

69:                                               ; preds = %67
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #22
  unreachable

70:                                               ; preds = %67
  %71 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %60) #21
  store ptr %71, ptr %53, align 8, !tbaa !32
  %72 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %71, ptr %72, align 8, !tbaa !31
  %73 = getelementptr inbounds %"struct.std::pair", ptr %71, i64 %61
  %74 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store ptr %73, ptr %74, align 8, !tbaa !709
  br label %75

75:                                               ; preds = %70, %75
  %76 = phi ptr [ %79, %75 ], [ %71, %70 ]
  %77 = phi ptr [ %78, %75 ], [ %57, %70 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %76, ptr noundef nonnull align 8 dereferenceable(16) %77, i64 16, i1 false)
  %78 = getelementptr inbounds %"struct.std::pair", ptr %77, i64 1
  %79 = getelementptr inbounds %"struct.std::pair", ptr %76, i64 1
  %80 = icmp eq ptr %78, %56
  br i1 %80, label %81, label %75

81:                                               ; preds = %75, %63
  %82 = phi ptr [ null, %63 ], [ %71, %75 ]
  %83 = phi ptr [ %64, %63 ], [ %72, %75 ]
  %84 = phi ptr [ null, %63 ], [ %79, %75 ]
  store ptr %84, ptr %83, align 8, !tbaa !31
  %85 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %5, i64 0, i32 2
  %86 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 2
  %87 = load double, ptr %86, align 8, !tbaa !48
  store double %87, ptr %85, align 8, !tbaa !48
  %88 = icmp sgt i64 %51, %1
  br i1 %88, label %89, label %106

89:                                               ; preds = %81, %101
  %90 = phi i64 [ %92, %101 ], [ %51, %81 ]
  %91 = add nsw i64 %90, -1
  %92 = sdiv i64 %91, 2
  %93 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %92
  %94 = load i32, ptr %93, align 8, !tbaa !24
  %95 = icmp ult i32 %94, %52
  br i1 %95, label %96, label %106

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %90
  store i32 %94, ptr %97, align 8, !tbaa !24
  %98 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %90, i32 1
  %99 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %92, i32 1
  %100 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %98, ptr noundef nonnull align 8 dereferenceable(24) %99)
          to label %101 unwind label %118

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %92, i32 2
  %103 = load double, ptr %102, align 8, !tbaa !48
  %104 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %90, i32 2
  store double %103, ptr %104, align 8, !tbaa !48
  %105 = icmp sgt i64 %92, %1
  br i1 %105, label %89, label %106

106:                                              ; preds = %101, %89, %81
  %107 = phi i64 [ %51, %81 ], [ %90, %89 ], [ %92, %101 ]
  %108 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %107
  store i32 %52, ptr %108, align 8, !tbaa !24
  %109 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %107, i32 1
  %110 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %109, ptr noundef nonnull align 8 dereferenceable(24) %53)
          to label %111 unwind label %120

111:                                              ; preds = %106
  %112 = load double, ptr %85, align 8, !tbaa !48
  %113 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 %107, i32 2
  store double %112, ptr %113, align 8, !tbaa !48
  %114 = load ptr, ptr %53, align 8, !tbaa !32
  %115 = icmp eq ptr %114, null
  br i1 %115, label %117, label %116

116:                                              ; preds = %111
  call void @_ZdlPv(ptr noundef nonnull %114) #23
  br label %117

117:                                              ; preds = %111, %116
  ret void

118:                                              ; preds = %96
  %119 = landingpad { ptr, i32 }
          cleanup
  br label %123

120:                                              ; preds = %106
  %121 = landingpad { ptr, i32 }
          cleanup
  %122 = load ptr, ptr %53, align 8, !tbaa !32
  br label %123

123:                                              ; preds = %120, %118
  %124 = phi ptr [ %82, %118 ], [ %122, %120 ]
  %125 = phi { ptr, i32 } [ %119, %118 ], [ %121, %120 ]
  %126 = icmp eq ptr %124, null
  br i1 %126, label %128, label %127

127:                                              ; preds = %123
  call void @_ZdlPv(ptr noundef nonnull %124) #23
  br label %128

128:                                              ; preds = %127, %123
  resume { ptr, i32 } %125
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, %0
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !21
  %7 = load ptr, ptr %1, align 8, !tbaa !21
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 4
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !709
  %14 = load ptr, ptr %0, align 8, !tbaa !21
  %15 = ptrtoint ptr %13 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = ashr exact i64 %17, 4
  %19 = icmp ugt i64 %11, %18
  br i1 %19, label %20, label %36

20:                                               ; preds = %4
  %21 = icmp ugt i64 %10, 9223372036854775792
  br i1 %21, label %22, label %23, !prof !823

22:                                               ; preds = %20
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #22
  unreachable

23:                                               ; preds = %20
  %24 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #21
  %25 = icmp eq ptr %7, %6
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = add i64 %8, -16
  %28 = sub i64 %27, %9
  %29 = and i64 %28, -16
  %30 = add i64 %29, 16
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %24, ptr align 8 %7, i64 %30, i1 false)
  br label %31

31:                                               ; preds = %23, %26
  %32 = icmp eq ptr %14, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %31
  tail call void @_ZdlPv(ptr noundef nonnull %14) #23
  br label %34

34:                                               ; preds = %31, %33
  store ptr %24, ptr %0, align 8, !tbaa !32
  %35 = getelementptr inbounds %"struct.std::pair", ptr %24, i64 %11
  store ptr %35, ptr %12, align 8, !tbaa !709
  br label %72

36:                                               ; preds = %4
  %37 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !31
  %39 = ptrtoint ptr %38 to i64
  %40 = sub i64 %39, %16
  %41 = ashr exact i64 %40, 4
  %42 = icmp ult i64 %41, %11
  br i1 %42, label %49, label %43

43:                                               ; preds = %36
  %44 = icmp sgt i64 %10, 16
  br i1 %44, label %45, label %46, !prof !23

45:                                               ; preds = %43
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %14, ptr align 8 %7, i64 %10, i1 false)
  br label %72

46:                                               ; preds = %43
  %47 = icmp eq i64 %10, 16
  br i1 %47, label %48, label %72

48:                                               ; preds = %46
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  br label %72

49:                                               ; preds = %36
  %50 = icmp sgt i64 %40, 16
  br i1 %50, label %51, label %52, !prof !23

51:                                               ; preds = %49
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %14, ptr align 8 %7, i64 %40, i1 false)
  br label %55

52:                                               ; preds = %49
  %53 = icmp eq i64 %40, 16
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  br label %55

55:                                               ; preds = %51, %52, %54
  %56 = load ptr, ptr %1, align 8, !tbaa !32
  %57 = load ptr, ptr %37, align 8, !tbaa !31
  %58 = load ptr, ptr %0, align 8, !tbaa !32
  %59 = ptrtoint ptr %57 to i64
  %60 = ptrtoint ptr %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 4
  %63 = getelementptr inbounds %"struct.std::pair", ptr %56, i64 %62
  %64 = load ptr, ptr %5, align 8, !tbaa !31
  %65 = icmp eq ptr %63, %64
  br i1 %65, label %72, label %66

66:                                               ; preds = %55, %66
  %67 = phi ptr [ %70, %66 ], [ %57, %55 ]
  %68 = phi ptr [ %69, %66 ], [ %63, %55 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %67, ptr noundef nonnull align 8 dereferenceable(16) %68, i64 16, i1 false)
  %69 = getelementptr inbounds %"struct.std::pair", ptr %68, i64 1
  %70 = getelementptr inbounds %"struct.std::pair", ptr %67, i64 1
  %71 = icmp eq ptr %69, %64
  br i1 %71, label %72, label %66

72:                                               ; preds = %66, %55, %48, %46, %45, %34
  %73 = load ptr, ptr %0, align 8, !tbaa !32
  %74 = getelementptr inbounds %"struct.std::pair", ptr %73, i64 %11
  %75 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %74, ptr %75, align 8, !tbaa !31
  br label %76

76:                                               ; preds = %72, %2
  ret ptr %0
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZSt4swapIN6dealii16ConstraintMatrix14ConstraintLineEEvRT_S4_(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %1) local_unnamed_addr #6 comdat personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.dealii::ConstraintMatrix::ConstraintLine", align 8
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %3) #24
  %4 = load i32, ptr %0, align 8, !tbaa !24
  store i32 %4, ptr %3, align 8, !tbaa !24
  %5 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !21
  %9 = load ptr, ptr %6, align 8, !tbaa !21
  %10 = ptrtoint ptr %8 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = ashr exact i64 %12, 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  %14 = icmp eq ptr %8, %9
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"struct.std::pair", ptr null, i64 %13
  %18 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, i8 0, i64 16, i1 false)
  store ptr %17, ptr %18, align 8, !tbaa !709
  br label %33

19:                                               ; preds = %2
  %20 = icmp ugt i64 %12, 9223372036854775792
  br i1 %20, label %21, label %22, !prof !823

21:                                               ; preds = %19
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #22
  unreachable

22:                                               ; preds = %19
  %23 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %12) #21
  store ptr %23, ptr %5, align 8, !tbaa !32
  %24 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %23, ptr %24, align 8, !tbaa !31
  %25 = getelementptr inbounds %"struct.std::pair", ptr %23, i64 %13
  %26 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store ptr %25, ptr %26, align 8, !tbaa !709
  br label %27

27:                                               ; preds = %22, %27
  %28 = phi ptr [ %31, %27 ], [ %23, %22 ]
  %29 = phi ptr [ %30, %27 ], [ %9, %22 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, ptr noundef nonnull align 8 dereferenceable(16) %29, i64 16, i1 false)
  %30 = getelementptr inbounds %"struct.std::pair", ptr %29, i64 1
  %31 = getelementptr inbounds %"struct.std::pair", ptr %28, i64 1
  %32 = icmp eq ptr %30, %8
  br i1 %32, label %33, label %27

33:                                               ; preds = %27, %15
  %34 = phi ptr [ %16, %15 ], [ %24, %27 ]
  %35 = phi ptr [ null, %15 ], [ %31, %27 ]
  store ptr %35, ptr %34, align 8, !tbaa !31
  %36 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 2
  %37 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 2
  %38 = load double, ptr %37, align 8, !tbaa !48
  store double %38, ptr %36, align 8, !tbaa !48
  %39 = load i32, ptr %1, align 8, !tbaa !24
  store i32 %39, ptr %0, align 8, !tbaa !24
  %40 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1, i64 0, i32 1
  %41 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %40)
          to label %42 unwind label %52

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %1, i64 0, i32 2
  %44 = load double, ptr %43, align 8, !tbaa !48
  store double %44, ptr %37, align 8, !tbaa !48
  store i32 %4, ptr %1, align 8, !tbaa !24
  %45 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %40, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %46 unwind label %52

46:                                               ; preds = %42
  %47 = load double, ptr %36, align 8, !tbaa !48
  store double %47, ptr %43, align 8, !tbaa !48
  %48 = load ptr, ptr %5, align 8, !tbaa !32
  %49 = icmp eq ptr %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  call void @_ZdlPv(ptr noundef nonnull %48) #23
  br label %51

51:                                               ; preds = %46, %50
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %3) #24
  ret void

52:                                               ; preds = %42, %33
  %53 = landingpad { ptr, i32 }
          cleanup
  %54 = load ptr, ptr %5, align 8, !tbaa !32
  %55 = icmp eq ptr %54, null
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  call void @_ZdlPv(ptr noundef nonnull %54) #23
  br label %57

57:                                               ; preds = %56, %52
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %3) #24
  resume { ptr, i32 } %53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #3

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_less_iterEEvT_SC_T0_(ptr %0, ptr %1) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.dealii::ConstraintMatrix::ConstraintLine", align 8
  %4 = icmp eq ptr %0, %1
  br i1 %4, label %173, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 1
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %173, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %3, i64 0, i32 2
  %13 = ptrtoint ptr %0 to i64
  %14 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 2
  br label %16

16:                                               ; preds = %8, %170
  %17 = phi ptr [ %6, %8 ], [ %171, %170 ]
  %18 = phi ptr [ %0, %8 ], [ %17, %170 ]
  %19 = load i32, ptr %17, align 8, !tbaa !24
  %20 = load i32, ptr %0, align 8, !tbaa !24
  %21 = icmp ult i32 %19, %20
  br i1 %21, label %22, label %169

22:                                               ; preds = %16
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %3) #24
  store i32 %19, ptr %3, align 8, !tbaa !24
  %23 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %18, i64 1, i32 1
  %24 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %18, i64 1, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !21
  %26 = load ptr, ptr %23, align 8, !tbaa !21
  %27 = ptrtoint ptr %25 to i64
  %28 = ptrtoint ptr %26 to i64
  %29 = sub i64 %27, %28
  %30 = ashr exact i64 %29, 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)
  %31 = icmp eq ptr %25, %26
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"struct.std::pair", ptr null, i64 %30
  store i64 0, ptr %9, align 8
  store ptr %33, ptr %11, align 8, !tbaa !709
  br label %49

34:                                               ; preds = %22
  %35 = icmp ugt i64 %29, 9223372036854775792
  br i1 %35, label %36, label %37, !prof !823

36:                                               ; preds = %34
  call void @_ZSt28__throw_bad_array_new_lengthv() #22
  unreachable

37:                                               ; preds = %34
  %38 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %29) #21
  %39 = load ptr, ptr %23, align 8, !tbaa !21
  %40 = load ptr, ptr %24, align 8, !tbaa !21
  store ptr %38, ptr %9, align 8, !tbaa !32
  store ptr %38, ptr %10, align 8, !tbaa !31
  %41 = getelementptr inbounds %"struct.std::pair", ptr %38, i64 %30
  store ptr %41, ptr %11, align 8, !tbaa !709
  %42 = icmp eq ptr %39, %40
  br i1 %42, label %49, label %43

43:                                               ; preds = %37, %43
  %44 = phi ptr [ %47, %43 ], [ %38, %37 ]
  %45 = phi ptr [ %46, %43 ], [ %39, %37 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %44, ptr noundef nonnull align 8 dereferenceable(16) %45, i64 16, i1 false)
  %46 = getelementptr inbounds %"struct.std::pair", ptr %45, i64 1
  %47 = getelementptr inbounds %"struct.std::pair", ptr %44, i64 1
  %48 = icmp eq ptr %46, %40
  br i1 %48, label %49, label %43

49:                                               ; preds = %43, %32, %37
  %50 = phi ptr [ %38, %37 ], [ null, %32 ], [ %47, %43 ]
  store ptr %50, ptr %10, align 8, !tbaa !31
  %51 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %18, i64 1, i32 2
  %52 = load double, ptr %51, align 8, !tbaa !48
  store double %52, ptr %12, align 8, !tbaa !48
  %53 = ptrtoint ptr %17 to i64
  %54 = sub i64 %53, %13
  %55 = icmp sgt i64 %54, 0
  br i1 %55, label %56, label %148

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %18, i64 2
  %58 = udiv exact i64 %54, 40
  br label %59

59:                                               ; preds = %56, %137
  %60 = phi i64 [ %144, %137 ], [ %58, %56 ]
  %61 = phi ptr [ %64, %137 ], [ %57, %56 ]
  %62 = phi ptr [ %63, %137 ], [ %17, %56 ]
  %63 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %62, i64 -1
  %64 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %61, i64 -1
  %65 = load i32, ptr %63, align 8, !tbaa !24
  store i32 %65, ptr %64, align 8, !tbaa !24
  %66 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %61, i64 -1, i32 1
  %67 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %62, i64 -1, i32 1
  %68 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %62, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 1
  %69 = load ptr, ptr %68, align 8, !tbaa !21
  %70 = load ptr, ptr %67, align 8, !tbaa !21
  %71 = ptrtoint ptr %69 to i64
  %72 = ptrtoint ptr %70 to i64
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 4
  %75 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %61, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 2
  %76 = load ptr, ptr %75, align 8, !tbaa !709
  %77 = load ptr, ptr %66, align 8, !tbaa !21
  %78 = ptrtoint ptr %76 to i64
  %79 = ptrtoint ptr %77 to i64
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 4
  %82 = icmp ugt i64 %74, %81
  br i1 %82, label %83, label %101

83:                                               ; preds = %59
  %84 = icmp ugt i64 %73, 9223372036854775792
  br i1 %84, label %85, label %87, !prof !823

85:                                               ; preds = %83
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #22
          to label %86 unwind label %161

86:                                               ; preds = %85
  unreachable

87:                                               ; preds = %83
  %88 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %73) #21
          to label %89 unwind label %157

89:                                               ; preds = %87
  %90 = icmp eq ptr %70, %69
  br i1 %90, label %96, label %91

91:                                               ; preds = %89
  %92 = add i64 %71, -16
  %93 = sub i64 %92, %72
  %94 = and i64 %93, -16
  %95 = add i64 %94, 16
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %88, ptr align 8 %70, i64 %95, i1 false)
  br label %96

96:                                               ; preds = %91, %89
  %97 = icmp eq ptr %77, null
  br i1 %97, label %99, label %98

98:                                               ; preds = %96
  call void @_ZdlPv(ptr noundef nonnull %77) #23
  br label %99

99:                                               ; preds = %98, %96
  store ptr %88, ptr %66, align 8, !tbaa !32
  %100 = getelementptr inbounds %"struct.std::pair", ptr %88, i64 %74
  store ptr %100, ptr %75, align 8, !tbaa !709
  br label %137

101:                                              ; preds = %59
  %102 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %61, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !31
  %104 = ptrtoint ptr %103 to i64
  %105 = sub i64 %104, %79
  %106 = ashr exact i64 %105, 4
  %107 = icmp ult i64 %106, %74
  br i1 %107, label %114, label %108

108:                                              ; preds = %101
  %109 = icmp sgt i64 %73, 16
  br i1 %109, label %110, label %111, !prof !23

110:                                              ; preds = %108
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %77, ptr align 8 %70, i64 %73, i1 false)
  br label %137

111:                                              ; preds = %108
  %112 = icmp eq i64 %73, 16
  br i1 %112, label %113, label %137

113:                                              ; preds = %111
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %77, ptr noundef nonnull align 8 dereferenceable(16) %70, i64 16, i1 false)
  br label %137

114:                                              ; preds = %101
  %115 = icmp sgt i64 %105, 16
  br i1 %115, label %116, label %117, !prof !23

116:                                              ; preds = %114
  call void @llvm.memmove.p0.p0.i64(ptr align 8 %77, ptr align 8 %70, i64 %105, i1 false)
  br label %120

117:                                              ; preds = %114
  %118 = icmp eq i64 %105, 16
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %77, ptr noundef nonnull align 8 dereferenceable(16) %70, i64 16, i1 false)
  br label %120

120:                                              ; preds = %119, %117, %116
  %121 = load ptr, ptr %67, align 8, !tbaa !32
  %122 = load ptr, ptr %102, align 8, !tbaa !31
  %123 = load ptr, ptr %66, align 8, !tbaa !32
  %124 = ptrtoint ptr %122 to i64
  %125 = ptrtoint ptr %123 to i64
  %126 = sub i64 %124, %125
  %127 = ashr exact i64 %126, 4
  %128 = getelementptr inbounds %"struct.std::pair", ptr %121, i64 %127
  %129 = load ptr, ptr %68, align 8, !tbaa !31
  %130 = icmp eq ptr %128, %129
  br i1 %130, label %137, label %131

131:                                              ; preds = %120, %131
  %132 = phi ptr [ %135, %131 ], [ %122, %120 ]
  %133 = phi ptr [ %134, %131 ], [ %128, %120 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %132, ptr noundef nonnull align 8 dereferenceable(16) %133, i64 16, i1 false)
  %134 = getelementptr inbounds %"struct.std::pair", ptr %133, i64 1
  %135 = getelementptr inbounds %"struct.std::pair", ptr %132, i64 1
  %136 = icmp eq ptr %134, %129
  br i1 %136, label %137, label %131

137:                                              ; preds = %131, %99, %110, %111, %113, %120
  %138 = load ptr, ptr %66, align 8, !tbaa !32
  %139 = getelementptr inbounds %"struct.std::pair", ptr %138, i64 %74
  %140 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %61, i64 -1, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %139, ptr %140, align 8, !tbaa !31
  %141 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %62, i64 -1, i32 2
  %142 = load double, ptr %141, align 8, !tbaa !48
  %143 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %61, i64 -1, i32 2
  store double %142, ptr %143, align 8, !tbaa !48
  %144 = add nsw i64 %60, -1
  %145 = icmp ugt i64 %60, 1
  br i1 %145, label %59, label %146

146:                                              ; preds = %137
  %147 = load i32, ptr %3, align 8, !tbaa !24
  br label %148

148:                                              ; preds = %146, %49
  %149 = phi i32 [ %147, %146 ], [ %19, %49 ]
  store i32 %149, ptr %0, align 8, !tbaa !24
  %150 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %14, ptr noundef nonnull align 8 dereferenceable(24) %9)
          to label %151 unwind label %159

151:                                              ; preds = %148
  %152 = load double, ptr %12, align 8, !tbaa !48
  store double %152, ptr %15, align 8, !tbaa !48
  %153 = load ptr, ptr %9, align 8, !tbaa !32
  %154 = icmp eq ptr %153, null
  br i1 %154, label %156, label %155

155:                                              ; preds = %151
  call void @_ZdlPv(ptr noundef nonnull %153) #23
  br label %156

156:                                              ; preds = %151, %155
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %3) #24
  br label %170

157:                                              ; preds = %87
  %158 = landingpad { ptr, i32 }
          cleanup
  br label %163

159:                                              ; preds = %148
  %160 = landingpad { ptr, i32 }
          cleanup
  br label %163

161:                                              ; preds = %85
  %162 = landingpad { ptr, i32 }
          cleanup
  br label %163

163:                                              ; preds = %159, %161, %157
  %164 = phi { ptr, i32 } [ %158, %157 ], [ %160, %159 ], [ %162, %161 ]
  %165 = load ptr, ptr %9, align 8, !tbaa !32
  %166 = icmp eq ptr %165, null
  br i1 %166, label %168, label %167

167:                                              ; preds = %163
  call void @_ZdlPv(ptr noundef nonnull %165) #23
  br label %168

168:                                              ; preds = %167, %163
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %3) #24
  resume { ptr, i32 } %164

169:                                              ; preds = %16
  call void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops14_Val_less_iterEEvT_T0_(ptr nonnull %17)
  br label %170

170:                                              ; preds = %156, %169
  %171 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %17, i64 1
  %172 = icmp eq ptr %171, %1
  br i1 %172, label %173, label %16

173:                                              ; preds = %170, %5, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEENS0_5__ops14_Val_less_iterEEvT_T0_(ptr %0) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %2 = alloca %"struct.dealii::ConstraintMatrix::ConstraintLine", align 8
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %2) #24
  %3 = load i32, ptr %0, align 8, !tbaa !24
  store i32 %3, ptr %2, align 8, !tbaa !24
  %4 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %2, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !21
  %8 = load ptr, ptr %5, align 8, !tbaa !21
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %13 = icmp eq ptr %7, %8
  br i1 %13, label %14, label %18

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.std::pair", ptr null, i64 %12
  %17 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %4, i8 0, i64 16, i1 false)
  store ptr %16, ptr %17, align 8, !tbaa !709
  br label %32

18:                                               ; preds = %1
  %19 = icmp ugt i64 %11, 9223372036854775792
  br i1 %19, label %20, label %21, !prof !823

20:                                               ; preds = %18
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #22
  unreachable

21:                                               ; preds = %18
  %22 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %11) #21
  store ptr %22, ptr %4, align 8, !tbaa !32
  %23 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !31
  %24 = getelementptr inbounds %"struct.std::pair", ptr %22, i64 %12
  %25 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store ptr %24, ptr %25, align 8, !tbaa !709
  br label %26

26:                                               ; preds = %21, %26
  %27 = phi ptr [ %30, %26 ], [ %22, %21 ]
  %28 = phi ptr [ %29, %26 ], [ %8, %21 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %27, ptr noundef nonnull align 8 dereferenceable(16) %28, i64 16, i1 false)
  %29 = getelementptr inbounds %"struct.std::pair", ptr %28, i64 1
  %30 = getelementptr inbounds %"struct.std::pair", ptr %27, i64 1
  %31 = icmp eq ptr %29, %7
  br i1 %31, label %32, label %26

32:                                               ; preds = %26, %14
  %33 = phi ptr [ null, %14 ], [ %22, %26 ]
  %34 = phi ptr [ %15, %14 ], [ %23, %26 ]
  %35 = phi ptr [ null, %14 ], [ %30, %26 ]
  store ptr %35, ptr %34, align 8, !tbaa !31
  %36 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %2, i64 0, i32 2
  %37 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 0, i32 2
  %38 = load double, ptr %37, align 8, !tbaa !48
  store double %38, ptr %36, align 8, !tbaa !48
  %39 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %0, i64 -1
  %40 = load i32, ptr %39, align 8, !tbaa !24
  %41 = icmp ult i32 %3, %40
  br i1 %41, label %42, label %67

42:                                               ; preds = %32, %49
  %43 = phi i32 [ %55, %49 ], [ %40, %32 ]
  %44 = phi ptr [ %53, %49 ], [ %39, %32 ]
  %45 = phi ptr [ %44, %49 ], [ %0, %32 ]
  store i32 %43, ptr %45, align 8, !tbaa !24
  %46 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %45, i64 0, i32 1
  %47 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %45, i64 -1, i32 1
  %48 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr noundef nonnull align 8 dereferenceable(24) %47)
          to label %49 unwind label %57

49:                                               ; preds = %42
  %50 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %45, i64 -1, i32 2
  %51 = load double, ptr %50, align 8, !tbaa !48
  %52 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %45, i64 0, i32 2
  store double %51, ptr %52, align 8, !tbaa !48
  %53 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %44, i64 -1
  %54 = load i32, ptr %2, align 8, !tbaa !24
  %55 = load i32, ptr %53, align 8, !tbaa !24
  %56 = icmp ult i32 %54, %55
  br i1 %56, label %42, label %67

57:                                               ; preds = %42
  %58 = landingpad { ptr, i32 }
          cleanup
  br label %62

59:                                               ; preds = %67
  %60 = landingpad { ptr, i32 }
          cleanup
  %61 = load ptr, ptr %4, align 8, !tbaa !32
  br label %62

62:                                               ; preds = %59, %57
  %63 = phi ptr [ %33, %57 ], [ %61, %59 ]
  %64 = phi { ptr, i32 } [ %58, %57 ], [ %60, %59 ]
  %65 = icmp eq ptr %63, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %62
  call void @_ZdlPv(ptr noundef nonnull %63) #23
  br label %79

67:                                               ; preds = %49, %32
  %68 = phi ptr [ %0, %32 ], [ %44, %49 ]
  %69 = phi i32 [ %3, %32 ], [ %54, %49 ]
  store i32 %69, ptr %68, align 8, !tbaa !24
  %70 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %68, i64 0, i32 1
  %71 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %70, ptr noundef nonnull align 8 dereferenceable(24) %4)
          to label %72 unwind label %59

72:                                               ; preds = %67
  %73 = load double, ptr %36, align 8, !tbaa !48
  %74 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %68, i64 0, i32 2
  store double %73, ptr %74, align 8, !tbaa !48
  %75 = load ptr, ptr %4, align 8, !tbaa !32
  %76 = icmp eq ptr %75, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %72
  call void @_ZdlPv(ptr noundef nonnull %75) #23
  br label %78

78:                                               ; preds = %72, %77
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %2) #24
  ret void

79:                                               ; preds = %66, %62
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %2) #24
  resume { ptr, i32 } %64
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_(ptr %0, ptr %1, i64 noundef %2) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %5 = alloca %"struct.std::pair", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %7 = ptrtoint ptr %0 to i64
  %8 = ptrtoint ptr %1 to i64
  %9 = sub i64 %8, %7
  %10 = icmp sgt i64 %9, 256
  br i1 %10, label %11, label %64

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 1
  %13 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1
  br label %14

14:                                               ; preds = %11, %59
  %15 = phi i64 [ %9, %11 ], [ %62, %59 ]
  %16 = phi i64 [ %2, %11 ], [ %60, %59 ]
  %17 = phi ptr [ %1, %11 ], [ %29, %59 ]
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_RT0_(ptr %0, ptr %17, ptr noundef nonnull align 1 dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  call void @_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_RT0_(ptr %0, ptr %17, ptr noundef nonnull align 1 dereferenceable(1) %6)
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6)
  br label %64

20:                                               ; preds = %14
  %21 = lshr i64 %15, 5
  %22 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %21
  %23 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 -1
  tail call void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_SB_SB_T0_(ptr %0, ptr nonnull %12, ptr %22, ptr nonnull %23)
  br label %24

24:                                               ; preds = %57, %20
  %25 = phi ptr [ %12, %20 ], [ %58, %57 ]
  %26 = phi ptr [ %17, %20 ], [ %44, %57 ]
  %27 = load i32, ptr %0, align 8, !tbaa !37
  br label %28

28:                                               ; preds = %40, %24
  %29 = phi ptr [ %25, %24 ], [ %41, %40 ]
  %30 = load i32, ptr %29, align 8, !tbaa !37
  %31 = icmp ult i32 %30, %27
  br i1 %31, label %40, label %32

32:                                               ; preds = %28
  %33 = icmp ult i32 %27, %30
  br i1 %33, label %34, label %35

34:                                               ; preds = %35, %32
  br label %42

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"struct.std::pair", ptr %29, i64 0, i32 1
  %37 = load double, ptr %36, align 8, !tbaa !35
  %38 = load double, ptr %13, align 8, !tbaa !35
  %39 = fcmp olt double %37, %38
  br i1 %39, label %40, label %34

40:                                               ; preds = %35, %28
  %41 = getelementptr inbounds %"struct.std::pair", ptr %29, i64 1
  br label %28

42:                                               ; preds = %54, %34
  %43 = phi ptr [ %26, %34 ], [ %44, %54 ]
  %44 = getelementptr inbounds %"struct.std::pair", ptr %43, i64 -1
  %45 = load i32, ptr %44, align 8, !tbaa !37
  %46 = icmp ult i32 %27, %45
  br i1 %46, label %54, label %47

47:                                               ; preds = %42
  %48 = icmp ult i32 %45, %27
  br i1 %48, label %55, label %49

49:                                               ; preds = %47
  %50 = load double, ptr %13, align 8, !tbaa !35
  %51 = getelementptr %"struct.std::pair", ptr %43, i64 -1, i32 1
  %52 = load double, ptr %51, align 8, !tbaa !35
  %53 = fcmp olt double %50, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %49, %42
  br label %42

55:                                               ; preds = %49, %47
  %56 = icmp ult ptr %29, %44
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, ptr noundef nonnull align 8 dereferenceable(16) %29, i64 16, i1 false)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %29, ptr noundef nonnull align 8 dereferenceable(16) %44, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %44, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5)
  %58 = getelementptr inbounds %"struct.std::pair", ptr %29, i64 1
  br label %24

59:                                               ; preds = %55
  %60 = add nsw i64 %16, -1
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEElNS0_5__ops15_Iter_less_iterEEvT_SB_T0_T1_(ptr nonnull %29, ptr %17, i64 noundef %60)
  %61 = ptrtoint ptr %29 to i64
  %62 = sub i64 %61, %7
  %63 = icmp sgt i64 %62, 256
  br i1 %63, label %14, label %64

64:                                               ; preds = %59, %3, %19
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_T0_(ptr %0, ptr %1) local_unnamed_addr #0 comdat {
  %3 = alloca %"struct.std::pair", align 8
  %4 = alloca %"struct.std::pair", align 8
  %5 = ptrtoint ptr %1 to i64
  %6 = ptrtoint ptr %0 to i64
  %7 = sub i64 %5, %6
  %8 = icmp sgt i64 %7, 256
  br i1 %8, label %9, label %81

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1
  %11 = getelementptr i8, ptr %0, i64 16
  br label %12

12:                                               ; preds = %53, %9
  %13 = phi i64 [ 1, %9 ], [ %54, %53 ]
  %14 = phi ptr [ %0, %9 ], [ %15, %53 ]
  %15 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %13
  %16 = load i32, ptr %15, align 8
  %17 = load i32, ptr %0, align 8, !tbaa !37
  %18 = icmp ult i32 %16, %17
  br i1 %18, label %26, label %19

19:                                               ; preds = %12
  %20 = icmp ult i32 %17, %16
  %21 = getelementptr inbounds %"struct.std::pair", ptr %14, i64 1, i32 1
  %22 = load double, ptr %21, align 8
  br i1 %20, label %35, label %23

23:                                               ; preds = %19
  %24 = load double, ptr %10, align 8, !tbaa !35
  %25 = fcmp olt double %22, %24
  br i1 %25, label %26, label %35

26:                                               ; preds = %23, %12
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %4, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %27 = shl nsw i64 %13, 4
  %28 = icmp ugt i64 %27, 16
  br i1 %28, label %29, label %30, !prof !23

29:                                               ; preds = %26
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(1) %11, ptr noundef nonnull align 8 dereferenceable(1) %0, i64 %27, i1 false)
  br label %34

30:                                               ; preds = %26
  %31 = icmp eq i64 %13, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"struct.std::pair", ptr %14, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %33, ptr noundef nonnull align 8 dereferenceable(16) %0, i64 16, i1 false)
  br label %34

34:                                               ; preds = %32, %30, %29
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %4, i64 16, i1 false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4)
  br label %53

35:                                               ; preds = %23, %19
  %36 = getelementptr inbounds i8, ptr %14, i64 20
  %37 = load i32, ptr %36, align 4
  br label %38

38:                                               ; preds = %49, %35
  %39 = phi ptr [ %15, %35 ], [ %40, %49 ]
  %40 = getelementptr inbounds %"struct.std::pair", ptr %39, i64 -1
  %41 = load i32, ptr %40, align 8, !tbaa !37
  %42 = icmp ult i32 %16, %41
  br i1 %42, label %49, label %43

43:                                               ; preds = %38
  %44 = icmp ult i32 %41, %16
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = getelementptr %"struct.std::pair", ptr %39, i64 -1, i32 1
  %47 = load double, ptr %46, align 8, !tbaa !35
  %48 = fcmp olt double %22, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %45, %38
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %39, ptr noundef nonnull align 8 dereferenceable(16) %40, i64 16, i1 false)
  br label %38

50:                                               ; preds = %45, %43
  store i32 %16, ptr %39, align 8
  %51 = getelementptr inbounds i8, ptr %39, i64 4
  store i32 %37, ptr %51, align 4
  %52 = getelementptr inbounds i8, ptr %39, i64 8
  store double %22, ptr %52, align 8
  br label %53

53:                                               ; preds = %50, %34
  %54 = add nuw nsw i64 %13, 1
  %55 = icmp eq i64 %54, 16
  br i1 %55, label %56, label %12

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 16
  %58 = icmp eq ptr %57, %1
  br i1 %58, label %136, label %59

59:                                               ; preds = %56, %77
  %60 = phi ptr [ %79, %77 ], [ %57, %56 ]
  %61 = load <2 x i32>, ptr %60, align 8
  %62 = getelementptr inbounds i8, ptr %60, i64 8
  %63 = load double, ptr %62, align 8
  %64 = extractelement <2 x i32> %61, i64 0
  br label %65

65:                                               ; preds = %76, %59
  %66 = phi ptr [ %60, %59 ], [ %67, %76 ]
  %67 = getelementptr inbounds %"struct.std::pair", ptr %66, i64 -1
  %68 = load i32, ptr %67, align 8, !tbaa !37
  %69 = icmp ult i32 %64, %68
  br i1 %69, label %76, label %70

70:                                               ; preds = %65
  %71 = icmp ult i32 %68, %64
  br i1 %71, label %77, label %72

72:                                               ; preds = %70
  %73 = getelementptr %"struct.std::pair", ptr %66, i64 -1, i32 1
  %74 = load double, ptr %73, align 8, !tbaa !35
  %75 = fcmp olt double %63, %74
  br i1 %75, label %76, label %77

76:                                               ; preds = %72, %65
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %66, ptr noundef nonnull align 8 dereferenceable(16) %67, i64 16, i1 false)
  br label %65

77:                                               ; preds = %72, %70
  store <2 x i32> %61, ptr %66, align 8
  %78 = getelementptr inbounds i8, ptr %66, i64 8
  store double %63, ptr %78, align 8
  %79 = getelementptr inbounds %"struct.std::pair", ptr %60, i64 1
  %80 = icmp eq ptr %79, %1
  br i1 %80, label %136, label %59

81:                                               ; preds = %2
  %82 = icmp eq ptr %0, %1
  br i1 %82, label %136, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 1
  %85 = icmp eq ptr %84, %1
  br i1 %85, label %136, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1
  br label %88

88:                                               ; preds = %133, %86
  %89 = phi ptr [ %84, %86 ], [ %134, %133 ]
  %90 = phi ptr [ %0, %86 ], [ %89, %133 ]
  %91 = load i32, ptr %89, align 8
  %92 = load i32, ptr %0, align 8, !tbaa !37
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %101, label %94

94:                                               ; preds = %88
  %95 = icmp ult i32 %92, %91
  %96 = getelementptr inbounds %"struct.std::pair", ptr %90, i64 1, i32 1
  %97 = load double, ptr %96, align 8
  br i1 %95, label %115, label %98

98:                                               ; preds = %94
  %99 = load double, ptr %87, align 8, !tbaa !35
  %100 = fcmp olt double %97, %99
  br i1 %100, label %101, label %115

101:                                              ; preds = %98, %88
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(16) %89, i64 16, i1 false)
  %102 = ptrtoint ptr %89 to i64
  %103 = sub i64 %102, %6
  %104 = icmp sgt i64 %103, 16
  br i1 %104, label %105, label %110, !prof !23

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.std::pair", ptr %90, i64 2
  %107 = lshr exact i64 %103, 4
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds %"struct.std::pair", ptr %106, i64 %108
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %109, ptr nonnull align 8 %0, i64 %103, i1 false)
  br label %114

110:                                              ; preds = %101
  %111 = icmp eq i64 %103, 16
  br i1 %111, label %112, label %114

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"struct.std::pair", ptr %90, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %113, ptr noundef nonnull align 8 dereferenceable(16) %0, i64 16, i1 false)
  br label %114

114:                                              ; preds = %112, %110, %105
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3)
  br label %133

115:                                              ; preds = %98, %94
  %116 = getelementptr inbounds i8, ptr %90, i64 20
  %117 = load i32, ptr %116, align 4
  br label %118

118:                                              ; preds = %129, %115
  %119 = phi ptr [ %89, %115 ], [ %120, %129 ]
  %120 = getelementptr inbounds %"struct.std::pair", ptr %119, i64 -1
  %121 = load i32, ptr %120, align 8, !tbaa !37
  %122 = icmp ult i32 %91, %121
  br i1 %122, label %129, label %123

123:                                              ; preds = %118
  %124 = icmp ult i32 %121, %91
  br i1 %124, label %130, label %125

125:                                              ; preds = %123
  %126 = getelementptr %"struct.std::pair", ptr %119, i64 -1, i32 1
  %127 = load double, ptr %126, align 8, !tbaa !35
  %128 = fcmp olt double %97, %127
  br i1 %128, label %129, label %130

129:                                              ; preds = %125, %118
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %119, ptr noundef nonnull align 8 dereferenceable(16) %120, i64 16, i1 false)
  br label %118

130:                                              ; preds = %125, %123
  store i32 %91, ptr %119, align 8
  %131 = getelementptr inbounds i8, ptr %119, i64 4
  store i32 %117, ptr %131, align 4
  %132 = getelementptr inbounds i8, ptr %119, i64 8
  store double %97, ptr %132, align 8
  br label %133

133:                                              ; preds = %130, %114
  %134 = getelementptr inbounds %"struct.std::pair", ptr %89, i64 1
  %135 = icmp eq ptr %134, %1
  br i1 %135, label %136, label %88

136:                                              ; preds = %133, %77, %83, %81, %56
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_RT0_(ptr %0, ptr %1, ptr noundef nonnull align 1 dereferenceable(1) %2) local_unnamed_addr #0 comdat {
  %4 = ptrtoint ptr %0 to i64
  %5 = ptrtoint ptr %1 to i64
  %6 = sub i64 %5, %4
  %7 = icmp sgt i64 %6, 16
  br i1 %7, label %8, label %82

8:                                                ; preds = %3, %77
  %9 = phi ptr [ %10, %77 ], [ %1, %3 ]
  %10 = getelementptr inbounds %"struct.std::pair", ptr %9, i64 -1
  %11 = load i32, ptr %10, align 8
  %12 = getelementptr %"struct.std::pair", ptr %9, i64 -1, i32 1
  %13 = load double, ptr %12, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %10, ptr noundef nonnull align 8 dereferenceable(16) %0, i64 16, i1 false)
  %14 = ptrtoint ptr %10 to i64
  %15 = sub i64 %14, %4
  %16 = ashr exact i64 %15, 4
  %17 = add nsw i64 %16, -1
  %18 = sdiv i64 %17, 2
  %19 = icmp sgt i64 %15, 32
  br i1 %19, label %20, label %45

20:                                               ; preds = %8, %40
  %21 = phi i64 [ %41, %40 ], [ 0, %8 ]
  %22 = shl i64 %21, 1
  %23 = add i64 %22, 2
  %24 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %23
  %25 = or i64 %22, 1
  %26 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %25
  %27 = load i32, ptr %24, align 8, !tbaa !37
  %28 = load i32, ptr %26, align 8, !tbaa !37
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %39, label %30

30:                                               ; preds = %20
  %31 = icmp ult i32 %28, %27
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %23, i32 1
  %34 = load double, ptr %33, align 8, !tbaa !35
  %35 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %25, i32 1
  %36 = load double, ptr %35, align 8, !tbaa !35
  %37 = fcmp olt double %34, %36
  %38 = freeze i1 %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %32, %20
  br label %40

40:                                               ; preds = %39, %32, %30
  %41 = phi i64 [ %25, %39 ], [ %23, %32 ], [ %23, %30 ]
  %42 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %41
  %43 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %21
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %43, ptr noundef nonnull align 8 dereferenceable(16) %42, i64 16, i1 false)
  %44 = icmp slt i64 %41, %18
  br i1 %44, label %20, label %45

45:                                               ; preds = %40, %8
  %46 = phi i64 [ 0, %8 ], [ %41, %40 ]
  %47 = and i64 %15, 16
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = add nsw i64 %16, -2
  %51 = sdiv i64 %50, 2
  %52 = icmp eq i64 %46, %51
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = shl i64 %46, 1
  %55 = or i64 %54, 1
  %56 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %55
  %57 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %46
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %57, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  br label %58

58:                                               ; preds = %53, %49, %45
  %59 = phi i64 [ %55, %53 ], [ %46, %49 ], [ %46, %45 ]
  %60 = icmp sgt i64 %59, 0
  br i1 %60, label %61, label %77

61:                                               ; preds = %58, %74
  %62 = phi i64 [ %64, %74 ], [ %59, %58 ]
  %63 = add nsw i64 %62, -1
  %64 = lshr i64 %63, 1
  %65 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %64
  %66 = load i32, ptr %65, align 8, !tbaa !37
  %67 = icmp ult i32 %66, %11
  br i1 %67, label %74, label %68

68:                                               ; preds = %61
  %69 = icmp ugt i32 %66, %11
  br i1 %69, label %77, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %64, i32 1
  %72 = load double, ptr %71, align 8, !tbaa !35
  %73 = fcmp olt double %72, %13
  br i1 %73, label %74, label %77

74:                                               ; preds = %70, %61
  %75 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %62
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %75, ptr noundef nonnull align 8 dereferenceable(16) %65, i64 16, i1 false)
  %76 = icmp ult i64 %63, 2
  br i1 %76, label %77, label %61

77:                                               ; preds = %68, %70, %74, %58
  %78 = phi i64 [ %59, %58 ], [ %62, %70 ], [ 0, %74 ], [ %62, %68 ]
  %79 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %78
  store i32 %11, ptr %79, align 8
  %80 = getelementptr inbounds i8, ptr %79, i64 8
  store double %13, ptr %80, align 8
  %81 = icmp sgt i64 %15, 16
  br i1 %81, label %8, label %82

82:                                               ; preds = %77, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_RT0_(ptr %0, ptr %1, ptr noundef nonnull align 1 dereferenceable(1) %2) local_unnamed_addr #0 comdat {
  %4 = ptrtoint ptr %1 to i64
  %5 = ptrtoint ptr %0 to i64
  %6 = sub i64 %4, %5
  %7 = icmp slt i64 %6, 32
  br i1 %7, label %81, label %8

8:                                                ; preds = %3
  %9 = lshr exact i64 %6, 4
  %10 = add nsw i64 %9, -2
  %11 = lshr i64 %10, 1
  %12 = add nsw i64 %9, -1
  %13 = lshr i64 %12, 1
  %14 = and i64 %6, 16
  %15 = icmp eq i64 %14, 0
  %16 = or i64 %10, 1
  %17 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %16
  %18 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %11
  br label %19

19:                                               ; preds = %75, %8
  %20 = phi i64 [ %11, %8 ], [ %80, %75 ]
  %21 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %20
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds i8, ptr %21, i64 8
  %24 = load double, ptr %23, align 8
  %25 = icmp sgt i64 %13, %20
  br i1 %25, label %26, label %51

26:                                               ; preds = %19, %46
  %27 = phi i64 [ %47, %46 ], [ %20, %19 ]
  %28 = shl i64 %27, 1
  %29 = add i64 %28, 2
  %30 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %29
  %31 = or i64 %28, 1
  %32 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %31
  %33 = load i32, ptr %30, align 8, !tbaa !37
  %34 = load i32, ptr %32, align 8, !tbaa !37
  %35 = icmp ult i32 %33, %34
  br i1 %35, label %45, label %36

36:                                               ; preds = %26
  %37 = icmp ult i32 %34, %33
  br i1 %37, label %46, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %29, i32 1
  %40 = load double, ptr %39, align 8, !tbaa !35
  %41 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %31, i32 1
  %42 = load double, ptr %41, align 8, !tbaa !35
  %43 = fcmp olt double %40, %42
  %44 = freeze i1 %43
  br i1 %44, label %45, label %46

45:                                               ; preds = %38, %26
  br label %46

46:                                               ; preds = %45, %38, %36
  %47 = phi i64 [ %31, %45 ], [ %29, %38 ], [ %29, %36 ]
  %48 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %47
  %49 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %27
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %49, ptr noundef nonnull align 8 dereferenceable(16) %48, i64 16, i1 false)
  %50 = icmp slt i64 %47, %13
  br i1 %50, label %26, label %51

51:                                               ; preds = %46, %19
  %52 = phi i64 [ %20, %19 ], [ %47, %46 ]
  %53 = icmp eq i64 %52, %11
  %54 = select i1 %15, i1 %53, i1 false
  br i1 %54, label %55, label %56

55:                                               ; preds = %51
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %17, i64 16, i1 false)
  br label %56

56:                                               ; preds = %55, %51
  %57 = phi i64 [ %16, %55 ], [ %52, %51 ]
  %58 = icmp sgt i64 %57, %20
  br i1 %58, label %59, label %75

59:                                               ; preds = %56, %72
  %60 = phi i64 [ %62, %72 ], [ %57, %56 ]
  %61 = add nsw i64 %60, -1
  %62 = sdiv i64 %61, 2
  %63 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %62
  %64 = load i32, ptr %63, align 8, !tbaa !37
  %65 = icmp ult i32 %64, %22
  br i1 %65, label %72, label %66

66:                                               ; preds = %59
  %67 = icmp ugt i32 %64, %22
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %62, i32 1
  %70 = load double, ptr %69, align 8, !tbaa !35
  %71 = fcmp olt double %70, %24
  br i1 %71, label %72, label %75

72:                                               ; preds = %68, %59
  %73 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %60
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %73, ptr noundef nonnull align 8 dereferenceable(16) %63, i64 16, i1 false)
  %74 = icmp sgt i64 %62, %20
  br i1 %74, label %59, label %75

75:                                               ; preds = %66, %68, %72, %56
  %76 = phi i64 [ %57, %56 ], [ %60, %66 ], [ %62, %72 ], [ %60, %68 ]
  %77 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 %76
  store i32 %22, ptr %77, align 8
  %78 = getelementptr inbounds i8, ptr %77, i64 8
  store double %24, ptr %78, align 8
  %79 = icmp eq i64 %20, 0
  %80 = add nsw i64 %20, -1
  br i1 %79, label %81, label %19

81:                                               ; preds = %75, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPSt4pairIjdESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_less_iterEEvT_SB_SB_SB_T0_(ptr %0, ptr %1, ptr %2, ptr %3) local_unnamed_addr #0 comdat {
  %5 = alloca %"struct.std::pair", align 8
  %6 = alloca %"struct.std::pair", align 8
  %7 = alloca %"struct.std::pair", align 8
  %8 = alloca %"struct.std::pair", align 8
  %9 = alloca %"struct.std::pair", align 8
  %10 = alloca %"struct.std::pair", align 8
  %11 = load i32, ptr %1, align 8, !tbaa !37
  %12 = load i32, ptr %2, align 8, !tbaa !37
  %13 = icmp ult i32 %11, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %4
  %15 = icmp ult i32 %12, %11
  br i1 %15, label %46, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::pair", ptr %1, i64 0, i32 1
  %18 = load double, ptr %17, align 8, !tbaa !35
  %19 = getelementptr inbounds %"struct.std::pair", ptr %2, i64 0, i32 1
  %20 = load double, ptr %19, align 8, !tbaa !35
  %21 = fcmp olt double %18, %20
  br i1 %21, label %22, label %46

22:                                               ; preds = %4, %16
  %23 = load i32, ptr %3, align 8, !tbaa !37
  %24 = icmp ult i32 %12, %23
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = icmp ult i32 %23, %12
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"struct.std::pair", ptr %2, i64 0, i32 1
  %29 = load double, ptr %28, align 8, !tbaa !35
  %30 = getelementptr inbounds %"struct.std::pair", ptr %3, i64 0, i32 1
  %31 = load double, ptr %30, align 8, !tbaa !35
  %32 = fcmp olt double %29, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %22, %27
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %10, ptr noundef nonnull align 8 dereferenceable(16) %0, i64 16, i1 false)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %2, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %10, i64 16, i1 false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10)
  br label %70

34:                                               ; preds = %25, %27
  %35 = icmp ult i32 %11, %23
  br i1 %35, label %44, label %36

36:                                               ; preds = %34
  %37 = icmp ult i32 %23, %11
  br i1 %37, label %45, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.std::pair", ptr %1, i64 0, i32 1
  %40 = load double, ptr %39, align 8, !tbaa !35
  %41 = getelementptr inbounds %"struct.std::pair", ptr %3, i64 0, i32 1
  %42 = load double, ptr %41, align 8, !tbaa !35
  %43 = fcmp olt double %40, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %34, %38
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(16) %0, i64 16, i1 false)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9)
  br label %70

45:                                               ; preds = %36, %38
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, ptr noundef nonnull align 8 dereferenceable(16) %0, i64 16, i1 false)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %1, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8)
  br label %70

46:                                               ; preds = %14, %16
  %47 = load i32, ptr %3, align 8, !tbaa !37
  %48 = icmp ult i32 %11, %47
  br i1 %48, label %57, label %49

49:                                               ; preds = %46
  %50 = icmp ult i32 %47, %11
  br i1 %50, label %58, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.std::pair", ptr %1, i64 0, i32 1
  %53 = load double, ptr %52, align 8, !tbaa !35
  %54 = getelementptr inbounds %"struct.std::pair", ptr %3, i64 0, i32 1
  %55 = load double, ptr %54, align 8, !tbaa !35
  %56 = fcmp olt double %53, %55
  br i1 %56, label %57, label %58

57:                                               ; preds = %46, %51
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, ptr noundef nonnull align 8 dereferenceable(16) %0, i64 16, i1 false)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %1, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7)
  br label %70

58:                                               ; preds = %49, %51
  %59 = icmp ult i32 %12, %47
  br i1 %59, label %68, label %60

60:                                               ; preds = %58
  %61 = icmp ult i32 %47, %12
  br i1 %61, label %69, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.std::pair", ptr %2, i64 0, i32 1
  %64 = load double, ptr %63, align 8, !tbaa !35
  %65 = getelementptr inbounds %"struct.std::pair", ptr %3, i64 0, i32 1
  %66 = load double, ptr %65, align 8, !tbaa !35
  %67 = fcmp olt double %64, %66
  br i1 %67, label %68, label %69

68:                                               ; preds = %58, %62
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, ptr noundef nonnull align 8 dereferenceable(16) %0, i64 16, i1 false)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(16) %6, i64 16, i1 false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  br label %70

69:                                               ; preds = %60, %62
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, ptr noundef nonnull align 8 dereferenceable(16) %0, i64 16, i1 false)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %2, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5)
  br label %70

70:                                               ; preds = %57, %69, %68, %33, %45, %44
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt4pairIjdESaIS1_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvS8_T_S9_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr %2, ptr %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq ptr %2, %3
  br i1 %5, label %136, label %6

6:                                                ; preds = %4
  %7 = ptrtoint ptr %3 to i64
  %8 = ptrtoint ptr %2 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 4
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !709
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !21
  %15 = ptrtoint ptr %12 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = ashr exact i64 %17, 4
  %19 = icmp ult i64 %18, %10
  br i1 %19, label %86, label %20

20:                                               ; preds = %6
  %21 = ptrtoint ptr %1 to i64
  %22 = sub i64 %16, %21
  %23 = ashr exact i64 %22, 4
  %24 = icmp ugt i64 %23, %10
  br i1 %24, label %25, label %54

25:                                               ; preds = %20
  %26 = sub nsw i64 0, %10
  %27 = getelementptr %"struct.std::pair", ptr %14, i64 %26
  br label %28

28:                                               ; preds = %25, %28
  %29 = phi ptr [ %32, %28 ], [ %14, %25 ]
  %30 = phi ptr [ %31, %28 ], [ %27, %25 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %29, ptr noundef nonnull align 8 dereferenceable(16) %30, i64 16, i1 false)
  %31 = getelementptr inbounds %"struct.std::pair", ptr %30, i64 1
  %32 = getelementptr inbounds %"struct.std::pair", ptr %29, i64 1
  %33 = icmp eq ptr %31, %14
  br i1 %33, label %34, label %28

34:                                               ; preds = %28
  %35 = load ptr, ptr %13, align 8, !tbaa !31
  %36 = getelementptr inbounds %"struct.std::pair", ptr %35, i64 %10
  store ptr %36, ptr %13, align 8, !tbaa !31
  %37 = ptrtoint ptr %27 to i64
  %38 = sub i64 %37, %21
  %39 = icmp sgt i64 %38, 16
  br i1 %39, label %40, label %44, !prof !23

40:                                               ; preds = %34
  %41 = lshr exact i64 %38, 4
  %42 = sub nsw i64 0, %41
  %43 = getelementptr inbounds %"struct.std::pair", ptr %14, i64 %42
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %43, ptr align 8 %1, i64 %38, i1 false)
  br label %48

44:                                               ; preds = %34
  %45 = icmp eq i64 %38, 16
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"struct.std::pair", ptr %14, i64 -1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %47, ptr noundef nonnull align 8 dereferenceable(16) %1, i64 16, i1 false)
  br label %48

48:                                               ; preds = %40, %44, %46
  %49 = icmp sgt i64 %9, 16
  br i1 %49, label %50, label %51, !prof !23

50:                                               ; preds = %48
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %1, ptr align 8 %2, i64 %9, i1 false)
  br label %136

51:                                               ; preds = %48
  %52 = icmp eq i64 %9, 16
  br i1 %52, label %53, label %136

53:                                               ; preds = %51
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i64 16, i1 false)
  br label %136

54:                                               ; preds = %20
  %55 = getelementptr inbounds %"struct.std::pair", ptr %2, i64 %23
  %56 = icmp eq ptr %55, %3
  br i1 %56, label %65, label %57

57:                                               ; preds = %54, %57
  %58 = phi ptr [ %61, %57 ], [ %14, %54 ]
  %59 = phi ptr [ %60, %57 ], [ %55, %54 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %58, ptr noundef nonnull align 8 dereferenceable(16) %59, i64 16, i1 false)
  %60 = getelementptr inbounds %"struct.std::pair", ptr %59, i64 1
  %61 = getelementptr inbounds %"struct.std::pair", ptr %58, i64 1
  %62 = icmp eq ptr %60, %3
  br i1 %62, label %63, label %57

63:                                               ; preds = %57
  %64 = load ptr, ptr %13, align 8, !tbaa !31
  br label %65

65:                                               ; preds = %63, %54
  %66 = phi ptr [ %64, %63 ], [ %14, %54 ]
  %67 = sub nsw i64 %10, %23
  %68 = getelementptr %"struct.std::pair", ptr %66, i64 %67
  store ptr %68, ptr %13, align 8, !tbaa !31
  %69 = icmp eq ptr %14, %1
  br i1 %69, label %78, label %70

70:                                               ; preds = %65, %70
  %71 = phi ptr [ %74, %70 ], [ %68, %65 ]
  %72 = phi ptr [ %73, %70 ], [ %1, %65 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %71, ptr noundef nonnull align 8 dereferenceable(16) %72, i64 16, i1 false)
  %73 = getelementptr inbounds %"struct.std::pair", ptr %72, i64 1
  %74 = getelementptr inbounds %"struct.std::pair", ptr %71, i64 1
  %75 = icmp eq ptr %73, %14
  br i1 %75, label %76, label %70

76:                                               ; preds = %70
  %77 = load ptr, ptr %13, align 8, !tbaa !31
  br label %78

78:                                               ; preds = %76, %65
  %79 = phi ptr [ %77, %76 ], [ %68, %65 ]
  %80 = getelementptr inbounds %"struct.std::pair", ptr %79, i64 %23
  store ptr %80, ptr %13, align 8, !tbaa !31
  %81 = icmp sgt i64 %22, 16
  br i1 %81, label %82, label %83, !prof !23

82:                                               ; preds = %78
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %1, ptr align 8 %2, i64 %22, i1 false)
  br label %136

83:                                               ; preds = %78
  %84 = icmp eq i64 %22, 16
  br i1 %84, label %85, label %136

85:                                               ; preds = %83
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i64 16, i1 false)
  br label %136

86:                                               ; preds = %6
  %87 = load ptr, ptr %0, align 8, !tbaa !32
  %88 = ptrtoint ptr %87 to i64
  %89 = sub i64 %16, %88
  %90 = ashr exact i64 %89, 4
  %91 = sub nsw i64 576460752303423487, %90
  %92 = icmp ult i64 %91, %10
  br i1 %92, label %93, label %94

93:                                               ; preds = %86
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.26) #22
  unreachable

94:                                               ; preds = %86
  %95 = tail call i64 @llvm.umax.i64(i64 %90, i64 %10)
  %96 = add nsw i64 %95, %90
  %97 = icmp ult i64 %96, %90
  %98 = icmp ugt i64 %96, 576460752303423487
  %99 = or i1 %97, %98
  %100 = select i1 %99, i64 576460752303423487, i64 %96
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %94
  %103 = shl nuw nsw i64 %100, 4
  %104 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %103) #21
  br label %105

105:                                              ; preds = %94, %102
  %106 = phi ptr [ %104, %102 ], [ null, %94 ]
  %107 = icmp eq ptr %87, %1
  br i1 %107, label %114, label %108

108:                                              ; preds = %105, %108
  %109 = phi ptr [ %112, %108 ], [ %106, %105 ]
  %110 = phi ptr [ %111, %108 ], [ %87, %105 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %109, ptr noundef nonnull align 8 dereferenceable(16) %110, i64 16, i1 false)
  %111 = getelementptr inbounds %"struct.std::pair", ptr %110, i64 1
  %112 = getelementptr inbounds %"struct.std::pair", ptr %109, i64 1
  %113 = icmp eq ptr %111, %1
  br i1 %113, label %114, label %108

114:                                              ; preds = %108, %105
  %115 = phi ptr [ %106, %105 ], [ %112, %108 ]
  br label %116

116:                                              ; preds = %114, %116
  %117 = phi ptr [ %120, %116 ], [ %115, %114 ]
  %118 = phi ptr [ %119, %116 ], [ %2, %114 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %117, ptr noundef nonnull align 8 dereferenceable(16) %118, i64 16, i1 false)
  %119 = getelementptr inbounds %"struct.std::pair", ptr %118, i64 1
  %120 = getelementptr inbounds %"struct.std::pair", ptr %117, i64 1
  %121 = icmp eq ptr %119, %3
  br i1 %121, label %122, label %116

122:                                              ; preds = %116
  %123 = icmp eq ptr %14, %1
  br i1 %123, label %130, label %124

124:                                              ; preds = %122, %124
  %125 = phi ptr [ %128, %124 ], [ %120, %122 ]
  %126 = phi ptr [ %127, %124 ], [ %1, %122 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %125, ptr noundef nonnull align 8 dereferenceable(16) %126, i64 16, i1 false)
  %127 = getelementptr inbounds %"struct.std::pair", ptr %126, i64 1
  %128 = getelementptr inbounds %"struct.std::pair", ptr %125, i64 1
  %129 = icmp eq ptr %127, %14
  br i1 %129, label %130, label %124

130:                                              ; preds = %124, %122
  %131 = phi ptr [ %120, %122 ], [ %128, %124 ]
  %132 = icmp eq ptr %87, null
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  tail call void @_ZdlPv(ptr noundef nonnull %87) #23
  br label %134

134:                                              ; preds = %130, %133
  store ptr %106, ptr %0, align 8, !tbaa !32
  store ptr %131, ptr %13, align 8, !tbaa !31
  %135 = getelementptr inbounds %"struct.std::pair", ptr %106, i64 %100
  store ptr %135, ptr %11, align 8, !tbaa !709
  br label %136

136:                                              ; preds = %85, %83, %82, %53, %51, %50, %134, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN6dealii16ConstraintMatrix14ConstraintLineESaIS2_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEvNS7_IPS2_S4_EET_SD_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr %2, ptr %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq ptr %2, %3
  br i1 %5, label %161, label %6

6:                                                ; preds = %4
  %7 = ptrtoint ptr %3 to i64
  %8 = ptrtoint ptr %2 to i64
  %9 = sub i64 %7, %8
  %10 = sdiv exact i64 %9, 40
  %11 = getelementptr inbounds %"struct.std::_Vector_base<dealii::ConstraintMatrix::ConstraintLine, std::allocator<dealii::ConstraintMatrix::ConstraintLine> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !821
  %13 = getelementptr inbounds %"struct.std::_Vector_base<dealii::ConstraintMatrix::ConstraintLine, std::allocator<dealii::ConstraintMatrix::ConstraintLine> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !21
  %15 = ptrtoint ptr %12 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = sdiv exact i64 %17, 40
  %19 = icmp ult i64 %18, %10
  br i1 %19, label %97, label %20

20:                                               ; preds = %6
  %21 = ptrtoint ptr %1 to i64
  %22 = sub i64 %16, %21
  %23 = sdiv exact i64 %22, 40
  %24 = icmp ugt i64 %23, %10
  br i1 %24, label %25, label %70

25:                                               ; preds = %20
  %26 = sub nsw i64 0, %10
  %27 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %14, i64 %26
  %28 = tail call noundef ptr @_ZSt16__do_uninit_copyIPN6dealii16ConstraintMatrix14ConstraintLineES3_ET0_T_S5_S4_(ptr noundef %27, ptr noundef %14, ptr noundef %14)
  %29 = load ptr, ptr %13, align 8, !tbaa !70
  %30 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %29, i64 %10
  store ptr %30, ptr %13, align 8, !tbaa !70
  %31 = ptrtoint ptr %27 to i64
  %32 = sub i64 %31, %21
  %33 = icmp sgt i64 %32, 0
  br i1 %33, label %34, label %51

34:                                               ; preds = %25
  %35 = udiv exact i64 %32, 40
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ %49, %36 ], [ %35, %34 ]
  %38 = phi ptr [ %41, %36 ], [ %14, %34 ]
  %39 = phi ptr [ %40, %36 ], [ %27, %34 ]
  %40 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %39, i64 -1
  %41 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %38, i64 -1
  %42 = load i32, ptr %40, align 8, !tbaa !24
  store i32 %42, ptr %41, align 8, !tbaa !24
  %43 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %38, i64 -1, i32 1
  %44 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %39, i64 -1, i32 1
  %45 = tail call noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %43, ptr noundef nonnull align 8 dereferenceable(24) %44)
  %46 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %39, i64 -1, i32 2
  %47 = load double, ptr %46, align 8, !tbaa !48
  %48 = getelementptr %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %38, i64 -1, i32 2
  store double %47, ptr %48, align 8, !tbaa !48
  %49 = add nsw i64 %37, -1
  %50 = icmp ugt i64 %37, 1
  br i1 %50, label %36, label %51

51:                                               ; preds = %36, %25
  %52 = icmp sgt i64 %9, 0
  br i1 %52, label %53, label %161

53:                                               ; preds = %51
  %54 = udiv exact i64 %9, 40
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ %68, %55 ], [ %54, %53 ]
  %57 = phi ptr [ %67, %55 ], [ %1, %53 ]
  %58 = phi ptr [ %66, %55 ], [ %2, %53 ]
  %59 = load i32, ptr %58, align 8, !tbaa !24
  store i32 %59, ptr %57, align 8, !tbaa !24
  %60 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %57, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %58, i64 0, i32 1
  %62 = tail call noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %60, ptr noundef nonnull align 8 dereferenceable(24) %61)
  %63 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %58, i64 0, i32 2
  %64 = load double, ptr %63, align 8, !tbaa !48
  %65 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %57, i64 0, i32 2
  store double %64, ptr %65, align 8, !tbaa !48
  %66 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %58, i64 1
  %67 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %57, i64 1
  %68 = add nsw i64 %56, -1
  %69 = icmp ugt i64 %56, 1
  br i1 %69, label %55, label %161

70:                                               ; preds = %20
  %71 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %2, i64 %23
  %72 = tail call noundef ptr @_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(ptr %71, ptr %3, ptr noundef %14)
  %73 = sub nsw i64 %10, %23
  %74 = load ptr, ptr %13, align 8, !tbaa !70
  %75 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %74, i64 %73
  store ptr %75, ptr %13, align 8, !tbaa !70
  %76 = tail call noundef ptr @_ZSt16__do_uninit_copyIPN6dealii16ConstraintMatrix14ConstraintLineES3_ET0_T_S5_S4_(ptr noundef %1, ptr noundef %14, ptr noundef %75)
  %77 = load ptr, ptr %13, align 8, !tbaa !70
  %78 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %77, i64 %23
  store ptr %78, ptr %13, align 8, !tbaa !70
  %79 = icmp sgt i64 %22, 0
  br i1 %79, label %80, label %161

80:                                               ; preds = %70
  %81 = udiv exact i64 %22, 40
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ %95, %82 ], [ %81, %80 ]
  %84 = phi ptr [ %94, %82 ], [ %1, %80 ]
  %85 = phi ptr [ %93, %82 ], [ %2, %80 ]
  %86 = load i32, ptr %85, align 8, !tbaa !24
  store i32 %86, ptr %84, align 8, !tbaa !24
  %87 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %84, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %85, i64 0, i32 1
  %89 = tail call noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorISt4pairIjdESaIS1_EEaSERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %87, ptr noundef nonnull align 8 dereferenceable(24) %88)
  %90 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %85, i64 0, i32 2
  %91 = load double, ptr %90, align 8, !tbaa !48
  %92 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %84, i64 0, i32 2
  store double %91, ptr %92, align 8, !tbaa !48
  %93 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %85, i64 1
  %94 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %84, i64 1
  %95 = add nsw i64 %83, -1
  %96 = icmp ugt i64 %83, 1
  br i1 %96, label %82, label %161

97:                                               ; preds = %6
  %98 = load ptr, ptr %0, align 8, !tbaa !72
  %99 = ptrtoint ptr %98 to i64
  %100 = sub i64 %16, %99
  %101 = sdiv exact i64 %100, 40
  %102 = sub nsw i64 230584300921369395, %101
  %103 = icmp ult i64 %102, %10
  br i1 %103, label %104, label %105

104:                                              ; preds = %97
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.26) #22
  unreachable

105:                                              ; preds = %97
  %106 = tail call i64 @llvm.umax.i64(i64 %101, i64 %10)
  %107 = add nsw i64 %106, %101
  %108 = icmp ult i64 %107, %101
  %109 = icmp ugt i64 %107, 230584300921369395
  %110 = or i1 %108, %109
  %111 = select i1 %110, i64 230584300921369395, i64 %107
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %105
  %114 = mul nuw nsw i64 %111, 40
  %115 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %114) #21
  br label %116

116:                                              ; preds = %105, %113
  %117 = phi ptr [ %115, %113 ], [ null, %105 ]
  %118 = invoke noundef ptr @_ZSt16__do_uninit_copyIPN6dealii16ConstraintMatrix14ConstraintLineES3_ET0_T_S5_S4_(ptr noundef %98, ptr noundef %1, ptr noundef %117)
          to label %119 unwind label %139

119:                                              ; preds = %116
  %120 = invoke noundef ptr @_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(ptr %2, ptr %3, ptr noundef %118)
          to label %121 unwind label %139

121:                                              ; preds = %119
  %122 = invoke noundef ptr @_ZSt16__do_uninit_copyIPN6dealii16ConstraintMatrix14ConstraintLineES3_ET0_T_S5_S4_(ptr noundef %1, ptr noundef %14, ptr noundef %120)
          to label %123 unwind label %139

123:                                              ; preds = %121
  %124 = icmp eq ptr %98, %14
  br i1 %124, label %134, label %125

125:                                              ; preds = %123, %131
  %126 = phi ptr [ %132, %131 ], [ %98, %123 ]
  %127 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %126, i64 0, i32 1
  %128 = load ptr, ptr %127, align 8, !tbaa !32
  %129 = icmp eq ptr %128, null
  br i1 %129, label %131, label %130

130:                                              ; preds = %125
  tail call void @_ZdlPv(ptr noundef nonnull %128) #23
  br label %131

131:                                              ; preds = %130, %125
  %132 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %126, i64 1
  %133 = icmp eq ptr %132, %14
  br i1 %133, label %134, label %125

134:                                              ; preds = %131, %123
  %135 = icmp eq ptr %98, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %134
  tail call void @_ZdlPv(ptr noundef nonnull %98) #23
  br label %137

137:                                              ; preds = %134, %136
  store ptr %117, ptr %0, align 8, !tbaa !72
  store ptr %122, ptr %13, align 8, !tbaa !70
  %138 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %117, i64 %111
  store ptr %138, ptr %11, align 8, !tbaa !821
  br label %161

139:                                              ; preds = %121, %119, %116
  %140 = phi ptr [ %117, %116 ], [ %118, %119 ], [ %120, %121 ]
  %141 = landingpad { ptr, i32 }
          catch ptr null
  %142 = extractvalue { ptr, i32 } %141, 0
  %143 = tail call ptr @__cxa_begin_catch(ptr %142) #24
  %144 = icmp eq ptr %117, %140
  br i1 %144, label %154, label %145

145:                                              ; preds = %139, %151
  %146 = phi ptr [ %152, %151 ], [ %117, %139 ]
  %147 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %146, i64 0, i32 1
  %148 = load ptr, ptr %147, align 8, !tbaa !32
  %149 = icmp eq ptr %148, null
  br i1 %149, label %151, label %150

150:                                              ; preds = %145
  tail call void @_ZdlPv(ptr noundef nonnull %148) #23
  br label %151

151:                                              ; preds = %150, %145
  %152 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %146, i64 1
  %153 = icmp eq ptr %152, %140
  br i1 %153, label %154, label %145

154:                                              ; preds = %151, %139
  %155 = icmp eq ptr %117, null
  br i1 %155, label %157, label %156

156:                                              ; preds = %154
  tail call void @_ZdlPv(ptr noundef nonnull %117) #23
  br label %157

157:                                              ; preds = %156, %154
  invoke void @__cxa_rethrow() #22
          to label %165 unwind label %158

158:                                              ; preds = %157
  %159 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %160 unwind label %162

160:                                              ; preds = %158
  resume { ptr, i32 } %159

161:                                              ; preds = %82, %55, %70, %51, %137, %4
  ret void

162:                                              ; preds = %158
  %163 = landingpad { ptr, i32 }
          catch ptr null
  %164 = extractvalue { ptr, i32 } %163, 0
  tail call void @__clang_call_terminate(ptr %164) #25
  unreachable

165:                                              ; preds = %157
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZSt16__do_uninit_copyIPN6dealii16ConstraintMatrix14ConstraintLineES3_ET0_T_S5_S4_(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %4 = icmp eq ptr %0, %1
  br i1 %4, label %66, label %5

5:                                                ; preds = %3, %39
  %6 = phi ptr [ %45, %39 ], [ %2, %3 ]
  %7 = phi ptr [ %44, %39 ], [ %0, %3 ]
  %8 = load i32, ptr %7, align 8, !tbaa !24
  store i32 %8, ptr %6, align 8, !tbaa !24
  %9 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %6, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %7, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !31
  %13 = load ptr, ptr %10, align 8, !tbaa !32
  %14 = ptrtoint ptr %12 to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)
  %18 = icmp eq ptr %12, %13
  br i1 %18, label %25, label %19

19:                                               ; preds = %5
  %20 = icmp ugt i64 %16, 9223372036854775792
  br i1 %20, label %21, label %23, !prof !823

21:                                               ; preds = %19
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #22
          to label %22 unwind label %49

22:                                               ; preds = %21
  unreachable

23:                                               ; preds = %19
  %24 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %16) #21
          to label %25 unwind label %47

25:                                               ; preds = %23, %5
  %26 = phi ptr [ null, %5 ], [ %24, %23 ]
  store ptr %26, ptr %9, align 8, !tbaa !32
  %27 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %26, ptr %27, align 8, !tbaa !31
  %28 = getelementptr inbounds %"struct.std::pair", ptr %26, i64 %17
  %29 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store ptr %28, ptr %29, align 8, !tbaa !709
  %30 = load ptr, ptr %10, align 8, !tbaa !21
  %31 = load ptr, ptr %11, align 8, !tbaa !21
  %32 = icmp eq ptr %30, %31
  br i1 %32, label %39, label %33

33:                                               ; preds = %25, %33
  %34 = phi ptr [ %37, %33 ], [ %26, %25 ]
  %35 = phi ptr [ %36, %33 ], [ %30, %25 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %34, ptr noundef nonnull align 8 dereferenceable(16) %35, i64 16, i1 false)
  %36 = getelementptr inbounds %"struct.std::pair", ptr %35, i64 1
  %37 = getelementptr inbounds %"struct.std::pair", ptr %34, i64 1
  %38 = icmp eq ptr %36, %31
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %25
  %40 = phi ptr [ %26, %25 ], [ %37, %33 ]
  store ptr %40, ptr %27, align 8, !tbaa !31
  %41 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %6, i64 0, i32 2
  %42 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %7, i64 0, i32 2
  %43 = load double, ptr %42, align 8, !tbaa !48
  store double %43, ptr %41, align 8, !tbaa !48
  %44 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %7, i64 1
  %45 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %6, i64 1
  %46 = icmp eq ptr %44, %1
  br i1 %46, label %66, label %5

47:                                               ; preds = %23
  %48 = landingpad { ptr, i32 }
          catch ptr null
  br label %51

49:                                               ; preds = %21
  %50 = landingpad { ptr, i32 }
          catch ptr null
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi { ptr, i32 } [ %48, %47 ], [ %50, %49 ]
  %53 = extractvalue { ptr, i32 } %52, 0
  %54 = tail call ptr @__cxa_begin_catch(ptr %53) #24
  %55 = icmp eq ptr %6, %2
  br i1 %55, label %65, label %56

56:                                               ; preds = %51, %62
  %57 = phi ptr [ %63, %62 ], [ %2, %51 ]
  %58 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %57, i64 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !32
  %60 = icmp eq ptr %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %56
  tail call void @_ZdlPv(ptr noundef nonnull %59) #23
  br label %62

62:                                               ; preds = %61, %56
  %63 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %57, i64 1
  %64 = icmp eq ptr %63, %6
  br i1 %64, label %65, label %56

65:                                               ; preds = %62, %51
  invoke void @__cxa_rethrow() #22
          to label %74 unwind label %68

66:                                               ; preds = %39, %3
  %67 = phi ptr [ %2, %3 ], [ %45, %39 ]
  ret ptr %67

68:                                               ; preds = %65
  %69 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %70 unwind label %71

70:                                               ; preds = %68
  resume { ptr, i32 } %69

71:                                               ; preds = %68
  %72 = landingpad { ptr, i32 }
          catch ptr null
  %73 = extractvalue { ptr, i32 } %72, 0
  tail call void @__clang_call_terminate(ptr %73) #25
  unreachable

74:                                               ; preds = %65
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(ptr %0, ptr %1, ptr noundef %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %4 = icmp eq ptr %0, %1
  br i1 %4, label %66, label %5

5:                                                ; preds = %3, %39
  %6 = phi ptr [ %45, %39 ], [ %2, %3 ]
  %7 = phi ptr [ %44, %39 ], [ %0, %3 ]
  %8 = load i32, ptr %7, align 8, !tbaa !24
  store i32 %8, ptr %6, align 8, !tbaa !24
  %9 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %6, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %7, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !31
  %13 = load ptr, ptr %10, align 8, !tbaa !32
  %14 = ptrtoint ptr %12 to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)
  %18 = icmp eq ptr %12, %13
  br i1 %18, label %25, label %19

19:                                               ; preds = %5
  %20 = icmp ugt i64 %16, 9223372036854775792
  br i1 %20, label %21, label %23, !prof !823

21:                                               ; preds = %19
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #22
          to label %22 unwind label %49

22:                                               ; preds = %21
  unreachable

23:                                               ; preds = %19
  %24 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %16) #21
          to label %25 unwind label %47

25:                                               ; preds = %23, %5
  %26 = phi ptr [ null, %5 ], [ %24, %23 ]
  store ptr %26, ptr %9, align 8, !tbaa !32
  %27 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %26, ptr %27, align 8, !tbaa !31
  %28 = getelementptr inbounds %"struct.std::pair", ptr %26, i64 %17
  %29 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store ptr %28, ptr %29, align 8, !tbaa !709
  %30 = load ptr, ptr %10, align 8, !tbaa !21
  %31 = load ptr, ptr %11, align 8, !tbaa !21
  %32 = icmp eq ptr %30, %31
  br i1 %32, label %39, label %33

33:                                               ; preds = %25, %33
  %34 = phi ptr [ %37, %33 ], [ %26, %25 ]
  %35 = phi ptr [ %36, %33 ], [ %30, %25 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %34, ptr noundef nonnull align 8 dereferenceable(16) %35, i64 16, i1 false)
  %36 = getelementptr inbounds %"struct.std::pair", ptr %35, i64 1
  %37 = getelementptr inbounds %"struct.std::pair", ptr %34, i64 1
  %38 = icmp eq ptr %36, %31
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %25
  %40 = phi ptr [ %26, %25 ], [ %37, %33 ]
  store ptr %40, ptr %27, align 8, !tbaa !31
  %41 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %6, i64 0, i32 2
  %42 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %7, i64 0, i32 2
  %43 = load double, ptr %42, align 8, !tbaa !48
  store double %43, ptr %41, align 8, !tbaa !48
  %44 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %7, i64 1
  %45 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %6, i64 1
  %46 = icmp eq ptr %44, %1
  br i1 %46, label %66, label %5

47:                                               ; preds = %23
  %48 = landingpad { ptr, i32 }
          catch ptr null
  br label %51

49:                                               ; preds = %21
  %50 = landingpad { ptr, i32 }
          catch ptr null
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi { ptr, i32 } [ %48, %47 ], [ %50, %49 ]
  %53 = extractvalue { ptr, i32 } %52, 0
  %54 = tail call ptr @__cxa_begin_catch(ptr %53) #24
  %55 = icmp eq ptr %6, %2
  br i1 %55, label %65, label %56

56:                                               ; preds = %51, %62
  %57 = phi ptr [ %63, %62 ], [ %2, %51 ]
  %58 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %57, i64 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !32
  %60 = icmp eq ptr %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %56
  tail call void @_ZdlPv(ptr noundef nonnull %59) #23
  br label %62

62:                                               ; preds = %61, %56
  %63 = getelementptr inbounds %"struct.dealii::ConstraintMatrix::ConstraintLine", ptr %57, i64 1
  %64 = icmp eq ptr %63, %6
  br i1 %64, label %65, label %56

65:                                               ; preds = %62, %51
  invoke void @__cxa_rethrow() #22
          to label %74 unwind label %68

66:                                               ; preds = %39, %3
  %67 = phi ptr [ %2, %3 ], [ %45, %39 ]
  ret ptr %67

68:                                               ; preds = %65
  %69 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %70 unwind label %71

70:                                               ; preds = %68
  resume { ptr, i32 } %69

71:                                               ; preds = %68
  %72 = landingpad { ptr, i32 }
          catch ptr null
  %73 = extractvalue { ptr, i32 } %72, 0
  tail call void @__clang_call_terminate(ptr %73) #25
  unreachable

74:                                               ; preds = %65
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr %1, i32 %2, i64 noundef %3, i1 noundef zeroext %4) local_unnamed_addr #0 comdat align 2 {
  %6 = sext i1 %4 to i8
  %7 = icmp eq i64 %3, 0
  br i1 %7, label %349, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !822
  %11 = load ptr, ptr %0, align 8, !tbaa !55
  %12 = ptrtoint ptr %10 to i64
  %13 = ptrtoint ptr %11 to i64
  %14 = sub i64 %12, %13
  %15 = shl nsw i64 %14, 3
  %16 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", ptr %0, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", ptr %0, i64 0, i32 1, i32 0, i32 1
  %19 = load i32, ptr %18, align 8
  %20 = ptrtoint ptr %17 to i64
  %21 = sub i64 %20, %13
  %22 = shl nsw i64 %21, 3
  %23 = zext i32 %19 to i64
  %24 = add nsw i64 %22, %23
  %25 = sub i64 %15, %24
  %26 = icmp ult i64 %25, %3
  br i1 %26, label %157, label %27

27:                                               ; preds = %8
  %28 = ptrtoint ptr %1 to i64
  %29 = sub i64 %20, %28
  %30 = shl nsw i64 %29, 3
  %31 = zext i32 %2 to i64
  %32 = sub nsw i64 %23, %31
  %33 = add i64 %32, %30
  %34 = icmp sgt i64 %33, 0
  br i1 %34, label %35, label %80

35:                                               ; preds = %27
  %36 = add nsw i64 %23, %3
  %37 = srem i64 %36, 64
  %38 = icmp slt i64 %37, 0
  %39 = add nsw i64 %37, 64
  %40 = select i1 %38, i64 %39, i64 %37
  %41 = trunc i64 %40 to i32
  %42 = sdiv i64 %36, 64
  %43 = getelementptr inbounds i64, ptr %17, i64 %42
  %44 = ashr i64 %37, 63
  %45 = getelementptr inbounds i64, ptr %43, i64 %44
  br label %46

46:                                               ; preds = %35, %76
  %47 = phi i64 [ %78, %76 ], [ %33, %35 ]
  %48 = phi i32 [ %56, %76 ], [ %19, %35 ]
  %49 = phi ptr [ %55, %76 ], [ %17, %35 ]
  %50 = phi i32 [ %63, %76 ], [ %41, %35 ]
  %51 = phi ptr [ %62, %76 ], [ %45, %35 ]
  %52 = add i32 %48, -1
  %53 = icmp eq i32 %48, 0
  %54 = sext i1 %53 to i64
  %55 = getelementptr inbounds i64, ptr %49, i64 %54
  %56 = select i1 %53, i32 63, i32 %52
  %57 = zext i32 %56 to i64
  %58 = shl nuw i64 1, %57
  %59 = add i32 %50, -1
  %60 = icmp eq i32 %50, 0
  %61 = sext i1 %60 to i64
  %62 = getelementptr inbounds i64, ptr %51, i64 %61
  %63 = select i1 %60, i32 63, i32 %59
  %64 = zext i32 %63 to i64
  %65 = shl nuw i64 1, %64
  %66 = load i64, ptr %55, align 8, !tbaa !42
  %67 = and i64 %66, %58
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %46
  %70 = load i64, ptr %62, align 8, !tbaa !42
  %71 = or i64 %70, %65
  br label %76

72:                                               ; preds = %46
  %73 = xor i64 %65, -1
  %74 = load i64, ptr %62, align 8, !tbaa !42
  %75 = and i64 %74, %73
  br label %76

76:                                               ; preds = %72, %69
  %77 = phi i64 [ %71, %69 ], [ %75, %72 ]
  store i64 %77, ptr %62, align 8, !tbaa !42
  %78 = add nsw i64 %47, -1
  %79 = icmp sgt i64 %47, 1
  br i1 %79, label %46, label %80

80:                                               ; preds = %76, %27
  %81 = add nsw i64 %31, %3
  %82 = sdiv i64 %81, 64
  %83 = getelementptr inbounds i64, ptr %1, i64 %82
  %84 = srem i64 %81, 64
  %85 = icmp slt i64 %84, 0
  %86 = add nsw i64 %84, 64
  %87 = ashr i64 %84, 63
  %88 = getelementptr inbounds i64, ptr %83, i64 %87
  %89 = select i1 %85, i64 %86, i64 %84
  %90 = trunc i64 %89 to i32
  %91 = icmp eq ptr %88, %1
  br i1 %91, label %126, label %92

92:                                               ; preds = %80
  %93 = icmp eq i32 %2, 0
  br i1 %93, label %107, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds i64, ptr %1, i64 1
  %96 = shl nsw i64 -1, %31
  br i1 %4, label %97, label %100

97:                                               ; preds = %94
  %98 = load i64, ptr %1, align 8, !tbaa !42
  %99 = or i64 %98, %96
  br label %104

100:                                              ; preds = %94
  %101 = xor i64 %96, -1
  %102 = load i64, ptr %1, align 8, !tbaa !42
  %103 = and i64 %102, %101
  br label %104

104:                                              ; preds = %100, %97
  %105 = phi i64 [ %103, %100 ], [ %99, %97 ]
  store i64 %105, ptr %1, align 8, !tbaa !42
  %106 = ptrtoint ptr %95 to i64
  br label %107

107:                                              ; preds = %104, %92
  %108 = phi i64 [ %106, %104 ], [ %28, %92 ]
  %109 = phi ptr [ %95, %104 ], [ %1, %92 ]
  %110 = ptrtoint ptr %88 to i64
  %111 = sub i64 %110, %108
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %109, i8 %6, i64 %111, i1 false)
  %112 = icmp eq i32 %90, 0
  br i1 %112, label %143, label %113

113:                                              ; preds = %107
  %114 = sub nsw i64 64, %89
  %115 = and i64 %114, 4294967295
  %116 = lshr i64 -1, %115
  br i1 %4, label %117, label %120

117:                                              ; preds = %113
  %118 = load i64, ptr %88, align 8, !tbaa !42
  %119 = or i64 %118, %116
  br label %124

120:                                              ; preds = %113
  %121 = xor i64 %116, -1
  %122 = load i64, ptr %88, align 8, !tbaa !42
  %123 = and i64 %122, %121
  br label %124

124:                                              ; preds = %120, %117
  %125 = phi i64 [ %123, %120 ], [ %119, %117 ]
  store i64 %125, ptr %88, align 8, !tbaa !42
  br label %143

126:                                              ; preds = %80
  %127 = icmp eq i32 %90, %2
  br i1 %127, label %143, label %128

128:                                              ; preds = %126
  %129 = shl nsw i64 -1, %31
  %130 = sub nsw i64 64, %89
  %131 = and i64 %130, 4294967295
  %132 = lshr i64 -1, %131
  %133 = and i64 %132, %129
  br i1 %4, label %134, label %137

134:                                              ; preds = %128
  %135 = load i64, ptr %1, align 8, !tbaa !42
  %136 = or i64 %135, %133
  br label %141

137:                                              ; preds = %128
  %138 = xor i64 %133, -1
  %139 = load i64, ptr %1, align 8, !tbaa !42
  %140 = and i64 %139, %138
  br label %141

141:                                              ; preds = %137, %134
  %142 = phi i64 [ %140, %137 ], [ %136, %134 ]
  store i64 %142, ptr %1, align 8, !tbaa !42
  br label %143

143:                                              ; preds = %107, %124, %126, %141
  %144 = load i32, ptr %18, align 8, !tbaa !57
  %145 = zext i32 %144 to i64
  %146 = add nsw i64 %145, %3
  %147 = sdiv i64 %146, 64
  %148 = load ptr, ptr %16, align 8, !tbaa !55
  %149 = getelementptr inbounds i64, ptr %148, i64 %147
  %150 = srem i64 %146, 64
  %151 = icmp slt i64 %150, 0
  %152 = add nsw i64 %150, 64
  %153 = ashr i64 %150, 63
  %154 = getelementptr inbounds i64, ptr %149, i64 %153
  %155 = select i1 %151, i64 %152, i64 %150
  store ptr %154, ptr %16, align 8, !tbaa !55
  %156 = trunc i64 %155 to i32
  br label %347

157:                                              ; preds = %8
  %158 = sub i64 9223372036854775744, %24
  %159 = icmp ult i64 %158, %3
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.27) #22
  unreachable

161:                                              ; preds = %157
  %162 = tail call i64 @llvm.umax.i64(i64 %24, i64 %3)
  %163 = add i64 %162, %24
  %164 = icmp ult i64 %163, %24
  %165 = icmp ugt i64 %163, 9223372036854775744
  %166 = or i1 %164, %165
  %167 = add i64 %163, 63
  %168 = select i1 %166, i64 9223372036854775807, i64 %167
  %169 = lshr i64 %168, 3
  %170 = and i64 %169, 2305843009213693944
  %171 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %170) #21
  %172 = ptrtoint ptr %1 to i64
  %173 = sub i64 %172, %13
  %174 = icmp sgt i64 %173, 8
  br i1 %174, label %175, label %176, !prof !23

175:                                              ; preds = %161
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %171, ptr align 8 %11, i64 %173, i1 false)
  br label %180

176:                                              ; preds = %161
  %177 = icmp eq i64 %173, 8
  br i1 %177, label %178, label %180

178:                                              ; preds = %176
  %179 = load i64, ptr %11, align 8, !tbaa !42
  store i64 %179, ptr %171, align 8, !tbaa !42
  br label %180

180:                                              ; preds = %178, %176, %175
  %181 = ashr exact i64 %173, 3
  %182 = getelementptr inbounds i64, ptr %171, i64 %181
  %183 = icmp eq i32 %2, 0
  br i1 %183, label %220, label %184

184:                                              ; preds = %180
  %185 = zext i32 %2 to i64
  br label %186

186:                                              ; preds = %206, %184
  %187 = phi i64 [ %218, %206 ], [ %185, %184 ]
  %188 = phi i32 [ %212, %206 ], [ 0, %184 ]
  %189 = phi ptr [ %211, %206 ], [ %1, %184 ]
  %190 = phi ptr [ %217, %206 ], [ %182, %184 ]
  %191 = phi i32 [ %215, %206 ], [ 0, %184 ]
  %192 = zext i32 %188 to i64
  %193 = shl nuw i64 1, %192
  %194 = load i64, ptr %189, align 8, !tbaa !42
  %195 = and i64 %194, %193
  %196 = icmp eq i64 %195, 0
  %197 = zext i32 %191 to i64
  %198 = shl nuw i64 1, %197
  br i1 %196, label %202, label %199

199:                                              ; preds = %186
  %200 = load i64, ptr %190, align 8, !tbaa !42
  %201 = or i64 %200, %198
  br label %206

202:                                              ; preds = %186
  %203 = xor i64 %198, -1
  %204 = load i64, ptr %190, align 8, !tbaa !42
  %205 = and i64 %204, %203
  br label %206

206:                                              ; preds = %202, %199
  %207 = phi i64 [ %205, %202 ], [ %201, %199 ]
  store i64 %207, ptr %190, align 8, !tbaa !42
  %208 = add i32 %188, 1
  %209 = icmp eq i32 %188, 63
  %210 = zext i1 %209 to i64
  %211 = getelementptr inbounds i64, ptr %189, i64 %210
  %212 = select i1 %209, i32 0, i32 %208
  %213 = add i32 %191, 1
  %214 = icmp eq i32 %191, 63
  %215 = select i1 %214, i32 0, i32 %213
  %216 = zext i1 %214 to i64
  %217 = getelementptr inbounds i64, ptr %190, i64 %216
  %218 = add nsw i64 %187, -1
  %219 = icmp sgt i64 %187, 1
  br i1 %219, label %186, label %220

220:                                              ; preds = %206, %180
  %221 = phi i32 [ 0, %180 ], [ %215, %206 ]
  %222 = phi ptr [ %182, %180 ], [ %217, %206 ]
  %223 = zext i32 %221 to i64
  %224 = add nsw i64 %223, %3
  %225 = sdiv i64 %224, 64
  %226 = getelementptr inbounds i64, ptr %222, i64 %225
  %227 = srem i64 %224, 64
  %228 = icmp slt i64 %227, 0
  %229 = add nsw i64 %227, 64
  %230 = ashr i64 %227, 63
  %231 = getelementptr inbounds i64, ptr %226, i64 %230
  %232 = select i1 %228, i64 %229, i64 %227
  %233 = trunc i64 %232 to i32
  %234 = icmp eq ptr %222, %231
  br i1 %234, label %268, label %235

235:                                              ; preds = %220
  %236 = icmp eq i32 %221, 0
  br i1 %236, label %249, label %237

237:                                              ; preds = %235
  %238 = getelementptr inbounds i64, ptr %222, i64 1
  %239 = shl nsw i64 -1, %223
  br i1 %4, label %240, label %243

240:                                              ; preds = %237
  %241 = load i64, ptr %222, align 8, !tbaa !42
  %242 = or i64 %241, %239
  br label %247

243:                                              ; preds = %237
  %244 = xor i64 %239, -1
  %245 = load i64, ptr %222, align 8, !tbaa !42
  %246 = and i64 %245, %244
  br label %247

247:                                              ; preds = %243, %240
  %248 = phi i64 [ %246, %243 ], [ %242, %240 ]
  store i64 %248, ptr %222, align 8, !tbaa !42
  br label %249

249:                                              ; preds = %247, %235
  %250 = phi ptr [ %238, %247 ], [ %222, %235 ]
  %251 = ptrtoint ptr %231 to i64
  %252 = ptrtoint ptr %250 to i64
  %253 = sub i64 %251, %252
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %250, i8 %6, i64 %253, i1 false)
  %254 = icmp eq i32 %233, 0
  br i1 %254, label %285, label %255

255:                                              ; preds = %249
  %256 = sub nsw i64 64, %232
  %257 = and i64 %256, 4294967295
  %258 = lshr i64 -1, %257
  br i1 %4, label %259, label %262

259:                                              ; preds = %255
  %260 = load i64, ptr %231, align 8, !tbaa !42
  %261 = or i64 %260, %258
  br label %266

262:                                              ; preds = %255
  %263 = xor i64 %258, -1
  %264 = load i64, ptr %231, align 8, !tbaa !42
  %265 = and i64 %264, %263
  br label %266

266:                                              ; preds = %262, %259
  %267 = phi i64 [ %265, %262 ], [ %261, %259 ]
  store i64 %267, ptr %231, align 8, !tbaa !42
  br label %285

268:                                              ; preds = %220
  %269 = icmp eq i32 %221, %233
  br i1 %269, label %285, label %270

270:                                              ; preds = %268
  %271 = shl nsw i64 -1, %223
  %272 = sub nsw i64 64, %232
  %273 = and i64 %272, 4294967295
  %274 = lshr i64 -1, %273
  %275 = and i64 %274, %271
  br i1 %4, label %276, label %279

276:                                              ; preds = %270
  %277 = load i64, ptr %222, align 8, !tbaa !42
  %278 = or i64 %277, %275
  br label %283

279:                                              ; preds = %270
  %280 = xor i64 %275, -1
  %281 = load i64, ptr %222, align 8, !tbaa !42
  %282 = and i64 %281, %280
  br label %283

283:                                              ; preds = %279, %276
  %284 = phi i64 [ %282, %279 ], [ %278, %276 ]
  store i64 %284, ptr %222, align 8, !tbaa !42
  br label %285

285:                                              ; preds = %249, %266, %268, %283
  %286 = load ptr, ptr %16, align 8
  %287 = load i32, ptr %18, align 8
  %288 = ptrtoint ptr %286 to i64
  %289 = sub i64 %288, %172
  %290 = shl nsw i64 %289, 3
  %291 = zext i32 %287 to i64
  %292 = zext i32 %2 to i64
  %293 = sub nsw i64 %291, %292
  %294 = add i64 %293, %290
  %295 = icmp sgt i64 %294, 0
  br i1 %295, label %296, label %330

296:                                              ; preds = %285, %316
  %297 = phi i64 [ %328, %316 ], [ %294, %285 ]
  %298 = phi i32 [ %322, %316 ], [ %2, %285 ]
  %299 = phi ptr [ %321, %316 ], [ %1, %285 ]
  %300 = phi i32 [ %327, %316 ], [ %233, %285 ]
  %301 = phi ptr [ %326, %316 ], [ %231, %285 ]
  %302 = zext i32 %298 to i64
  %303 = shl nuw i64 1, %302
  %304 = zext i32 %300 to i64
  %305 = shl nuw i64 1, %304
  %306 = load i64, ptr %299, align 8, !tbaa !42
  %307 = and i64 %306, %303
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %312, label %309

309:                                              ; preds = %296
  %310 = load i64, ptr %301, align 8, !tbaa !42
  %311 = or i64 %310, %305
  br label %316

312:                                              ; preds = %296
  %313 = xor i64 %305, -1
  %314 = load i64, ptr %301, align 8, !tbaa !42
  %315 = and i64 %314, %313
  br label %316

316:                                              ; preds = %312, %309
  %317 = phi i64 [ %311, %309 ], [ %315, %312 ]
  store i64 %317, ptr %301, align 8, !tbaa !42
  %318 = add i32 %298, 1
  %319 = icmp eq i32 %298, 63
  %320 = zext i1 %319 to i64
  %321 = getelementptr inbounds i64, ptr %299, i64 %320
  %322 = select i1 %319, i32 0, i32 %318
  %323 = add i32 %300, 1
  %324 = icmp eq i32 %300, 63
  %325 = zext i1 %324 to i64
  %326 = getelementptr inbounds i64, ptr %301, i64 %325
  %327 = select i1 %324, i32 0, i32 %323
  %328 = add nsw i64 %297, -1
  %329 = icmp sgt i64 %297, 1
  br i1 %329, label %296, label %330

330:                                              ; preds = %316, %285
  %331 = phi ptr [ %231, %285 ], [ %326, %316 ]
  %332 = phi i32 [ %233, %285 ], [ %327, %316 ]
  %333 = load ptr, ptr %0, align 8, !tbaa !55
  %334 = icmp eq ptr %333, null
  br i1 %334, label %343, label %335

335:                                              ; preds = %330
  %336 = load ptr, ptr %9, align 8, !tbaa !822
  %337 = ptrtoint ptr %336 to i64
  %338 = ptrtoint ptr %333 to i64
  %339 = sub i64 %337, %338
  %340 = ashr exact i64 %339, 3
  %341 = sub nsw i64 0, %340
  %342 = getelementptr inbounds i64, ptr %336, i64 %341
  tail call void @_ZdlPv(ptr noundef %342) #23
  br label %343

343:                                              ; preds = %330, %335
  %344 = lshr i64 %168, 6
  %345 = getelementptr inbounds i64, ptr %171, i64 %344
  store ptr %345, ptr %9, align 8, !tbaa !822
  store ptr %171, ptr %0, align 8
  %346 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 0, ptr %346, align 8
  store ptr %331, ptr %16, align 8
  br label %347

347:                                              ; preds = %143, %343
  %348 = phi i32 [ %332, %343 ], [ %156, %143 ]
  store i32 %348, ptr %18, align 8
  br label %349

349:                                              ; preds = %347, %5
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #15

declare void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @__cxa_allocate_exception(i64) local_unnamed_addr

declare void @__cxa_free_exception(ptr) local_unnamed_addr

declare void @__cxa_throw(ptr, ptr, ptr) local_unnamed_addr

declare void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #5

declare noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122), i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIfED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !311
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !49
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #23
  store ptr null, ptr %2, align 8, !tbaa !49
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %9
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIfE6reinitEjb(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #6 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !49
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(ptr noundef nonnull %7) #23
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  br label %32

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !824
  %15 = icmp ult i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !49
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %18) #23
  br label %21

21:                                               ; preds = %20, %16
  %22 = zext i32 %1 to i64
  %23 = shl nuw nsw i64 %22, 2
  %24 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %23) #21
  store ptr %24, ptr %17, align 8, !tbaa !49
  store i32 %1, ptr %13, align 4, !tbaa !824
  br label %25

25:                                               ; preds = %21, %12
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  store i32 %1, ptr %26, align 8, !tbaa !5
  br i1 %2, label %32, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !49
  %30 = zext i32 %1 to i64
  %31 = shl nuw nsw i64 %30, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %29, i8 0, i64 %31, i1 false), !tbaa !33
  br label %32

32:                                               ; preds = %27, %10, %25
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIfE4swapERS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !22
  %6 = load i32, ptr %4, align 8, !tbaa !22
  store i32 %6, ptr %3, align 8, !tbaa !22
  store i32 %5, ptr %4, align 8, !tbaa !22
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 2
  %9 = load i32, ptr %7, align 4, !tbaa !22
  %10 = load i32, ptr %8, align 4, !tbaa !22
  store i32 %10, ptr %7, align 4, !tbaa !22
  store i32 %9, ptr %8, align 4, !tbaa !22
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %11, align 8, !tbaa !21
  %14 = load ptr, ptr %12, align 8, !tbaa !21
  store ptr %14, ptr %11, align 8, !tbaa !21
  store ptr %13, ptr %12, align 8, !tbaa !21
  ret void
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #17

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIdED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !311
  %2 = getelementptr inbounds %"class.dealii::Vector.35", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !60
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #23
  store ptr null, ptr %2, align 8, !tbaa !60
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #23
  resume { ptr, i32 } %9
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIdE6reinitEjb(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #6 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector.35", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !60
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(ptr noundef nonnull %7) #23
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.dealii::Vector.35", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  br label %32

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector.35", ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !825
  %15 = icmp ult i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector.35", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !60
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %18) #23
  br label %21

21:                                               ; preds = %20, %16
  %22 = zext i32 %1 to i64
  %23 = shl nuw nsw i64 %22, 3
  %24 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %23) #21
  store ptr %24, ptr %17, align 8, !tbaa !60
  store i32 %1, ptr %13, align 4, !tbaa !825
  br label %25

25:                                               ; preds = %21, %12
  %26 = getelementptr inbounds %"class.dealii::Vector.35", ptr %0, i64 0, i32 1
  store i32 %1, ptr %26, align 8, !tbaa !53
  br i1 %2, label %32, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::Vector.35", ptr %0, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !60
  %30 = zext i32 %1 to i64
  %31 = shl nuw nsw i64 %30, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %29, i8 0, i64 %31, i1 false), !tbaa !52
  br label %32

32:                                               ; preds = %27, %10, %25
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIdE4swapERS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector.35", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !22
  %6 = load i32, ptr %4, align 8, !tbaa !22
  store i32 %6, ptr %3, align 8, !tbaa !22
  store i32 %5, ptr %4, align 8, !tbaa !22
  %7 = getelementptr inbounds %"class.dealii::Vector.35", ptr %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 2
  %9 = load i32, ptr %7, align 4, !tbaa !22
  %10 = load i32, ptr %8, align 4, !tbaa !22
  store i32 %10, ptr %7, align 4, !tbaa !22
  store i32 %9, ptr %8, align 4, !tbaa !22
  %11 = getelementptr inbounds %"class.dealii::Vector.35", ptr %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dealii::Vector.35", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %11, align 8, !tbaa !21
  %14 = load ptr, ptr %12, align 8, !tbaa !21
  store ptr %14, ptr %11, align 8, !tbaa !21
  store ptr %13, ptr %12, align 8, !tbaa !21
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !320
  %4 = icmp eq ptr %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr %3, align 8, !tbaa !32
  %7 = icmp eq ptr %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZdlPv(ptr noundef nonnull %6) #23
  br label %9

9:                                                ; preds = %8, %5
  tail call void @_ZdlPv(ptr noundef nonnull %3) #23
  store ptr null, ptr %2, align 8, !tbaa !320
  br label %10

10:                                               ; preds = %9, %1
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9internals12insert_indexERSt6vectorINS0_12distributingESaIS2_EEjSt4pairIjdE(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1, i32 %2, double %3) local_unnamed_addr #6 comdat personality ptr @__gxx_personality_v0 {
  %5 = alloca %"struct.dealii::internals::distributing", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #24
  store i32 %1, ptr %5, align 8, !tbaa !317
  %6 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %5, i64 0, i32 1
  store i32 -1, ptr %6, align 4, !tbaa !319
  %7 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %5, i64 0, i32 2
  store ptr null, ptr %7, align 8, !tbaa !320
  %8 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !21
  %10 = load ptr, ptr %0, align 8, !tbaa !21
  %11 = ptrtoint ptr %9 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = icmp eq ptr %9, %10
  br i1 %14, label %19, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 -1
  %17 = load i32, ptr %16, align 8, !tbaa !317
  %18 = icmp ult i32 %17, %1
  br i1 %18, label %19, label %39

19:                                               ; preds = %15, %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !323
  %22 = icmp eq ptr %9, %21
  br i1 %22, label %31, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 2
  store ptr null, ptr %24, align 8, !tbaa !320
  store i32 %1, ptr %9, align 8, !tbaa !317
  %25 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 0, i32 1
  store i32 -1, ptr %25, align 4, !tbaa !319
  %26 = load ptr, ptr %7, align 8, !tbaa !320
  %27 = icmp eq ptr %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  store ptr %26, ptr %24, align 8, !tbaa !320
  store ptr null, ptr %7, align 8, !tbaa !320
  br label %29

29:                                               ; preds = %28, %23
  %30 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %9, i64 1
  store ptr %30, ptr %8, align 8, !tbaa !325
  br label %34

31:                                               ; preds = %19
  invoke void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %9, ptr noundef nonnull align 8 dereferenceable(16) %5)
          to label %32 unwind label %37

32:                                               ; preds = %31
  %33 = load ptr, ptr %8, align 8, !tbaa !21
  br label %34

34:                                               ; preds = %32, %29
  %35 = phi ptr [ %33, %32 ], [ %30, %29 ]
  %36 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %35, i64 -1
  br label %64

37:                                               ; preds = %107, %96, %31, %69
  %38 = landingpad { ptr, i32 }
          cleanup
  br label %137

39:                                               ; preds = %15
  %40 = icmp sgt i64 %13, 0
  br i1 %40, label %41, label %56

41:                                               ; preds = %39
  %42 = lshr exact i64 %13, 4
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ %42, %41 ], [ %54, %43 ]
  %45 = phi ptr [ %10, %41 ], [ %53, %43 ]
  %46 = lshr i64 %44, 1
  %47 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %45, i64 %46
  %48 = load i32, ptr %47, align 8, !tbaa !317
  %49 = icmp ult i32 %48, %1
  %50 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %47, i64 1
  %51 = xor i64 %46, -1
  %52 = add nsw i64 %44, %51
  %53 = select i1 %49, ptr %50, ptr %45
  %54 = select i1 %49, i64 %52, i64 %46
  %55 = icmp sgt i64 %54, 0
  br i1 %55, label %43, label %56

56:                                               ; preds = %43, %39
  %57 = phi ptr [ %10, %39 ], [ %53, %43 ]
  %58 = load i32, ptr %57, align 8, !tbaa !317
  %59 = icmp eq i32 %58, %1
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = invoke ptr @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE6insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr nonnull %57, ptr noundef nonnull align 8 dereferenceable(16) %5)
          to label %64 unwind label %62

62:                                               ; preds = %60
  %63 = landingpad { ptr, i32 }
          cleanup
  br label %137

64:                                               ; preds = %56, %60, %34
  %65 = phi ptr [ %36, %34 ], [ %61, %60 ], [ %57, %56 ]
  %66 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %65, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !320
  %68 = icmp eq ptr %67, null
  br i1 %68, label %69, label %80

69:                                               ; preds = %64
  %70 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #21
          to label %71 unwind label %37

71:                                               ; preds = %69
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %70, i8 0, i64 24, i1 false)
  %72 = invoke noalias noundef nonnull dereferenceable(16) ptr @_Znwm(i64 noundef 16) #21
          to label %73 unwind label %78

73:                                               ; preds = %71
  store ptr %72, ptr %70, align 8, !tbaa !32
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %70, i64 0, i32 1
  %75 = getelementptr inbounds %"struct.std::pair", ptr %72, i64 1
  %76 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %70, i64 0, i32 2
  store ptr %75, ptr %76, align 8, !tbaa !709
  store i32 %2, ptr %72, align 8
  %77 = getelementptr inbounds i8, ptr %72, i64 8
  store double %3, ptr %77, align 8
  store ptr %75, ptr %74, align 8, !tbaa !31
  store ptr %70, ptr %66, align 8, !tbaa !320
  br label %128

78:                                               ; preds = %71
  %79 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %70) #23
  br label %137

80:                                               ; preds = %64
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %67, i64 0, i32 1
  %82 = load ptr, ptr %81, align 8, !tbaa !21
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<unsigned int, double>, std::allocator<std::pair<unsigned int, double> > >::_Vector_impl_data", ptr %67, i64 0, i32 2
  %84 = load ptr, ptr %83, align 8, !tbaa !709
  %85 = icmp eq ptr %82, %84
  br i1 %85, label %90, label %86

86:                                               ; preds = %80
  store i32 %2, ptr %82, align 8
  %87 = getelementptr inbounds i8, ptr %82, i64 8
  store double %3, ptr %87, align 8
  %88 = load ptr, ptr %81, align 8, !tbaa !31
  %89 = getelementptr inbounds %"struct.std::pair", ptr %88, i64 1
  store ptr %89, ptr %81, align 8, !tbaa !31
  br label %128

90:                                               ; preds = %80
  %91 = load ptr, ptr %67, align 8, !tbaa !21
  %92 = ptrtoint ptr %82 to i64
  %93 = ptrtoint ptr %91 to i64
  %94 = sub i64 %92, %93
  %95 = icmp eq i64 %94, 9223372036854775792
  br i1 %95, label %96, label %98

96:                                               ; preds = %90
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %97 unwind label %37

97:                                               ; preds = %96
  unreachable

98:                                               ; preds = %90
  %99 = ashr exact i64 %94, 4
  %100 = call i64 @llvm.umax.i64(i64 %99, i64 1)
  %101 = add i64 %100, %99
  %102 = icmp ult i64 %101, %99
  %103 = icmp ugt i64 %101, 576460752303423487
  %104 = or i1 %102, %103
  %105 = select i1 %104, i64 576460752303423487, i64 %101
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %98
  %108 = shl nuw nsw i64 %105, 4
  %109 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %108) #21
          to label %110 unwind label %37

110:                                              ; preds = %107, %98
  %111 = phi ptr [ null, %98 ], [ %109, %107 ]
  %112 = getelementptr inbounds %"struct.std::pair", ptr %111, i64 %99
  store i32 %2, ptr %112, align 8
  %113 = getelementptr inbounds i8, ptr %112, i64 8
  store double %3, ptr %113, align 8
  %114 = icmp eq ptr %91, %82
  br i1 %114, label %121, label %115

115:                                              ; preds = %110, %115
  %116 = phi ptr [ %119, %115 ], [ %111, %110 ]
  %117 = phi ptr [ %118, %115 ], [ %91, %110 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %116, ptr noundef nonnull align 8 dereferenceable(16) %117, i64 16, i1 false)
  %118 = getelementptr inbounds %"struct.std::pair", ptr %117, i64 1
  %119 = getelementptr inbounds %"struct.std::pair", ptr %116, i64 1
  %120 = icmp eq ptr %118, %82
  br i1 %120, label %121, label %115

121:                                              ; preds = %115, %110
  %122 = phi ptr [ %111, %110 ], [ %119, %115 ]
  %123 = getelementptr %"struct.std::pair", ptr %122, i64 1
  %124 = icmp eq ptr %91, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  call void @_ZdlPv(ptr noundef nonnull %91) #23
  br label %126

126:                                              ; preds = %125, %121
  store ptr %111, ptr %67, align 8, !tbaa !32
  store ptr %123, ptr %81, align 8, !tbaa !31
  %127 = getelementptr inbounds %"struct.std::pair", ptr %111, i64 %105
  store ptr %127, ptr %83, align 8, !tbaa !709
  br label %128

128:                                              ; preds = %126, %86, %73
  %129 = load ptr, ptr %7, align 8, !tbaa !320
  %130 = icmp eq ptr %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %128
  %132 = load ptr, ptr %129, align 8, !tbaa !32
  %133 = icmp eq ptr %132, null
  br i1 %133, label %135, label %134

134:                                              ; preds = %131
  call void @_ZdlPv(ptr noundef nonnull %132) #23
  br label %135

135:                                              ; preds = %134, %131
  call void @_ZdlPv(ptr noundef nonnull %129) #23
  br label %136

136:                                              ; preds = %128, %135
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #24
  ret void

137:                                              ; preds = %78, %62, %37
  %138 = phi { ptr, i32 } [ %79, %78 ], [ %38, %37 ], [ %63, %62 ]
  invoke void @_ZN6dealii9internals12distributingD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %5)
          to label %139 unwind label %140

139:                                              ; preds = %137
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #24
  resume { ptr, i32 } %138

140:                                              ; preds = %137
  %141 = landingpad { ptr, i32 }
          catch ptr null
  %142 = extractvalue { ptr, i32 } %141, 0
  call void @__clang_call_terminate(ptr %142) #25
  unreachable
}

declare void @_ZN6dealii12SparseMatrixIdE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36), i32 noundef, i32 noundef, ptr noundef, ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !321
  %3 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !325
  %5 = icmp eq ptr %2, %4
  br i1 %5, label %21, label %6

6:                                                ; preds = %1, %16
  %7 = phi ptr [ %17, %16 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %7, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !320
  %10 = icmp eq ptr %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = load ptr, ptr %9, align 8, !tbaa !32
  %13 = icmp eq ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %12) #23
  br label %15

15:                                               ; preds = %14, %11
  tail call void @_ZdlPv(ptr noundef nonnull %9) #23
  store ptr null, ptr %8, align 8, !tbaa !320
  br label %16

16:                                               ; preds = %15, %6
  %17 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %7, i64 1
  %18 = icmp eq ptr %17, %4
  br i1 %18, label %19, label %6

19:                                               ; preds = %16
  %20 = load ptr, ptr %0, align 8, !tbaa !321
  br label %21

21:                                               ; preds = %19, %1
  %22 = phi ptr [ %20, %19 ], [ %2, %1 ]
  %23 = icmp eq ptr %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  tail call void @_ZdlPv(ptr noundef nonnull %22) #23
  br label %25

25:                                               ; preds = %21, %24
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 8 dereferenceable(16) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %272, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !323
  %9 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !21
  %11 = ptrtoint ptr %8 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %159, label %16

16:                                               ; preds = %6
  %17 = load i32, ptr %3, align 8, !tbaa !317
  %18 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %3, i64 0, i32 1
  %19 = load i32, ptr %18, align 4, !tbaa !319
  %20 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %3, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !320
  %22 = icmp eq ptr %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  store ptr null, ptr %20, align 8, !tbaa !320
  %24 = load ptr, ptr %9, align 8, !tbaa !21
  %25 = ptrtoint ptr %24 to i64
  br label %26

26:                                               ; preds = %16, %23
  %27 = phi i64 [ %12, %16 ], [ %25, %23 ]
  %28 = phi ptr [ %10, %16 ], [ %24, %23 ]
  %29 = ptrtoint ptr %1 to i64
  %30 = sub i64 %27, %29
  %31 = ashr exact i64 %30, 4
  %32 = icmp ugt i64 %31, %2
  br i1 %32, label %33, label %90

33:                                               ; preds = %26
  %34 = sub i64 0, %2
  %35 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %28, i64 %34
  br label %36

36:                                               ; preds = %33, %45
  %37 = phi ptr [ %47, %45 ], [ %28, %33 ]
  %38 = phi ptr [ %46, %45 ], [ %35, %33 ]
  %39 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %37, i64 0, i32 2
  store ptr null, ptr %39, align 8, !tbaa !320
  %40 = load <2 x i32>, ptr %38, align 8, !tbaa !22
  store <2 x i32> %40, ptr %37, align 8, !tbaa !22
  %41 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %38, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !320
  %43 = icmp eq ptr %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %36
  store ptr %42, ptr %39, align 8, !tbaa !320
  store ptr null, ptr %41, align 8, !tbaa !320
  br label %45

45:                                               ; preds = %44, %36
  %46 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %38, i64 1
  %47 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %37, i64 1
  %48 = icmp eq ptr %46, %28
  br i1 %48, label %49, label %36

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %28, i64 %2
  store ptr %50, ptr %9, align 8, !tbaa !325
  %51 = ptrtoint ptr %35 to i64
  %52 = sub i64 %51, %29
  %53 = icmp sgt i64 %52, 0
  br i1 %53, label %54, label %71

54:                                               ; preds = %49
  %55 = lshr exact i64 %52, 4
  br label %56

56:                                               ; preds = %68, %54
  %57 = phi i64 [ %69, %68 ], [ %55, %54 ]
  %58 = phi ptr [ %61, %68 ], [ %28, %54 ]
  %59 = phi ptr [ %60, %68 ], [ %35, %54 ]
  %60 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %59, i64 -1
  %61 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %58, i64 -1
  %62 = load <2 x i32>, ptr %60, align 8, !tbaa !22
  store <2 x i32> %62, ptr %61, align 8, !tbaa !22
  %63 = getelementptr %"struct.dealii::internals::distributing", ptr %59, i64 -1, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !320
  %65 = icmp eq ptr %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %56
  %67 = getelementptr %"struct.dealii::internals::distributing", ptr %58, i64 -1, i32 2
  store ptr %64, ptr %67, align 8, !tbaa !320
  store ptr null, ptr %63, align 8, !tbaa !320
  br label %68

68:                                               ; preds = %66, %56
  %69 = add nsw i64 %57, -1
  %70 = icmp sgt i64 %57, 1
  br i1 %70, label %56, label %71

71:                                               ; preds = %68, %49
  %72 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1, i64 %2
  %73 = icmp eq ptr %21, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %71
  store i32 %17, ptr %1, align 8, !tbaa !317
  %75 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1, i64 0, i32 1
  store i32 %19, ptr %75, align 4, !tbaa !319
  %76 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1, i64 0, i32 2
  store ptr %21, ptr %76, align 8, !tbaa !320
  %77 = icmp eq i64 %2, 1
  br i1 %77, label %272, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1, i64 1
  br label %85

80:                                               ; preds = %71, %80
  %81 = phi ptr [ %83, %80 ], [ %1, %71 ]
  store i32 %17, ptr %81, align 8, !tbaa !317
  %82 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %81, i64 0, i32 1
  store i32 %19, ptr %82, align 4, !tbaa !319
  %83 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %81, i64 1
  %84 = icmp eq ptr %83, %72
  br i1 %84, label %272, label %80

85:                                               ; preds = %78, %85
  %86 = phi ptr [ %88, %85 ], [ %79, %78 ]
  store i32 %17, ptr %86, align 8, !tbaa !317
  %87 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %86, i64 0, i32 1
  store i32 %19, ptr %87, align 4, !tbaa !319
  %88 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %86, i64 1
  %89 = icmp eq ptr %88, %72
  br i1 %89, label %272, label %85, !llvm.loop !826

90:                                               ; preds = %26
  %91 = icmp eq i64 %31, %2
  br i1 %91, label %110, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %28, i64 0, i32 2
  store ptr null, ptr %93, align 8, !tbaa !320
  store i32 %17, ptr %28, align 8, !tbaa !317
  %94 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %28, i64 0, i32 1
  store i32 %19, ptr %94, align 4, !tbaa !319
  %95 = icmp eq ptr %21, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %92
  store ptr %21, ptr %93, align 8, !tbaa !320
  br label %97

97:                                               ; preds = %96, %92
  %98 = xor i64 %31, -1
  %99 = add i64 %98, %2
  %100 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %28, i64 1
  %101 = icmp eq i64 %99, 0
  br i1 %101, label %112, label %102

102:                                              ; preds = %97, %102
  %103 = phi ptr [ %108, %102 ], [ %100, %97 ]
  %104 = phi i64 [ %107, %102 ], [ %99, %97 ]
  %105 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %103, i64 0, i32 2
  store ptr null, ptr %105, align 8, !tbaa !320
  store i32 %17, ptr %103, align 8, !tbaa !317
  %106 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %103, i64 0, i32 1
  store i32 %19, ptr %106, align 4, !tbaa !319
  %107 = add i64 %104, -1
  %108 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %103, i64 1
  %109 = icmp eq i64 %107, 0
  br i1 %109, label %112, label %102, !llvm.loop !827

110:                                              ; preds = %90
  store ptr %28, ptr %9, align 8, !tbaa !325
  %111 = icmp eq ptr %28, %1
  br i1 %111, label %151, label %117

112:                                              ; preds = %102, %97
  %113 = phi ptr [ %100, %97 ], [ %108, %102 ]
  store ptr %113, ptr %9, align 8, !tbaa !325
  %114 = icmp eq ptr %28, %1
  br i1 %114, label %115, label %117

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %113, i64 %31
  store ptr %116, ptr %9, align 8, !tbaa !325
  br label %272

117:                                              ; preds = %112, %110
  %118 = phi ptr [ %113, %112 ], [ %28, %110 ]
  %119 = phi ptr [ null, %112 ], [ %21, %110 ]
  br label %120

120:                                              ; preds = %117, %129
  %121 = phi ptr [ %131, %129 ], [ %118, %117 ]
  %122 = phi ptr [ %130, %129 ], [ %1, %117 ]
  %123 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %121, i64 0, i32 2
  store ptr null, ptr %123, align 8, !tbaa !320
  %124 = load <2 x i32>, ptr %122, align 8, !tbaa !22
  store <2 x i32> %124, ptr %121, align 8, !tbaa !22
  %125 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %122, i64 0, i32 2
  %126 = load ptr, ptr %125, align 8, !tbaa !320
  %127 = icmp eq ptr %126, null
  br i1 %127, label %129, label %128

128:                                              ; preds = %120
  store ptr %126, ptr %123, align 8, !tbaa !320
  store ptr null, ptr %125, align 8, !tbaa !320
  br label %129

129:                                              ; preds = %128, %120
  %130 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %122, i64 1
  %131 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %121, i64 1
  %132 = icmp eq ptr %130, %28
  br i1 %132, label %133, label %120

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %118, i64 %31
  store ptr %134, ptr %9, align 8, !tbaa !325
  %135 = icmp eq ptr %119, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %133
  store i32 %17, ptr %1, align 8, !tbaa !317
  %137 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1, i64 0, i32 1
  store i32 %19, ptr %137, align 4, !tbaa !319
  %138 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1, i64 0, i32 2
  store ptr %119, ptr %138, align 8, !tbaa !320
  %139 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1, i64 1
  %140 = icmp eq ptr %139, %28
  br i1 %140, label %272, label %146

141:                                              ; preds = %133, %141
  %142 = phi ptr [ %144, %141 ], [ %1, %133 ]
  store i32 %17, ptr %142, align 8, !tbaa !317
  %143 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %142, i64 0, i32 1
  store i32 %19, ptr %143, align 4, !tbaa !319
  %144 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %142, i64 1
  %145 = icmp eq ptr %144, %28
  br i1 %145, label %272, label %141

146:                                              ; preds = %136, %146
  %147 = phi ptr [ %149, %146 ], [ %139, %136 ]
  store i32 %17, ptr %147, align 8, !tbaa !317
  %148 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %147, i64 0, i32 1
  store i32 %19, ptr %148, align 4, !tbaa !319
  %149 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %147, i64 1
  %150 = icmp eq ptr %149, %28
  br i1 %150, label %272, label %146, !llvm.loop !826

151:                                              ; preds = %110
  %152 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %28, i64 %31
  store ptr %152, ptr %9, align 8, !tbaa !325
  %153 = icmp eq ptr %21, null
  br i1 %153, label %272, label %154

154:                                              ; preds = %151
  %155 = load ptr, ptr %21, align 8, !tbaa !32
  %156 = icmp eq ptr %155, null
  br i1 %156, label %158, label %157

157:                                              ; preds = %154
  tail call void @_ZdlPv(ptr noundef nonnull %155) #23
  br label %158

158:                                              ; preds = %157, %154
  tail call void @_ZdlPv(ptr noundef nonnull %21) #23
  br label %272

159:                                              ; preds = %6
  %160 = load ptr, ptr %0, align 8, !tbaa !321
  %161 = ptrtoint ptr %160 to i64
  %162 = sub i64 %12, %161
  %163 = ashr exact i64 %162, 4
  %164 = sub nsw i64 576460752303423487, %163
  %165 = icmp ult i64 %164, %2
  br i1 %165, label %166, label %167

166:                                              ; preds = %159
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.28) #22
  unreachable

167:                                              ; preds = %159
  %168 = tail call i64 @llvm.umax.i64(i64 %163, i64 %2)
  %169 = add i64 %168, %163
  %170 = icmp ult i64 %169, %163
  %171 = icmp ugt i64 %169, 576460752303423487
  %172 = or i1 %170, %171
  %173 = select i1 %172, i64 576460752303423487, i64 %169
  %174 = ptrtoint ptr %1 to i64
  %175 = sub i64 %174, %161
  %176 = ashr exact i64 %175, 4
  %177 = icmp eq i64 %173, 0
  br i1 %177, label %181, label %178

178:                                              ; preds = %167
  %179 = shl nuw nsw i64 %173, 4
  %180 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %179) #21
  br label %181

181:                                              ; preds = %178, %167
  %182 = phi ptr [ %180, %178 ], [ null, %167 ]
  %183 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %182, i64 %176
  %184 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %3, i64 0, i32 2
  %185 = and i64 %2, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %182, i64 %176, i32 2
  store ptr null, ptr %188, align 8, !tbaa !320
  %189 = load <2 x i32>, ptr %3, align 8, !tbaa !22
  store <2 x i32> %189, ptr %183, align 8, !tbaa !22
  %190 = load ptr, ptr %184, align 8, !tbaa !320
  %191 = icmp eq ptr %190, null
  br i1 %191, label %193, label %192

192:                                              ; preds = %187
  store ptr %190, ptr %188, align 8, !tbaa !320
  store ptr null, ptr %184, align 8, !tbaa !320
  br label %193

193:                                              ; preds = %192, %187
  %194 = add i64 %2, -1
  %195 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %183, i64 1
  br label %196

196:                                              ; preds = %193, %181
  %197 = phi ptr [ %183, %181 ], [ %195, %193 ]
  %198 = phi i64 [ %2, %181 ], [ %194, %193 ]
  %199 = icmp eq i64 %2, 1
  br i1 %199, label %219, label %200

200:                                              ; preds = %196, %215
  %201 = phi ptr [ %217, %215 ], [ %197, %196 ]
  %202 = phi i64 [ %216, %215 ], [ %198, %196 ]
  %203 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %201, i64 0, i32 2
  store ptr null, ptr %203, align 8, !tbaa !320
  %204 = load <2 x i32>, ptr %3, align 8, !tbaa !22
  store <2 x i32> %204, ptr %201, align 8, !tbaa !22
  %205 = load ptr, ptr %184, align 8, !tbaa !320
  %206 = icmp eq ptr %205, null
  br i1 %206, label %208, label %207

207:                                              ; preds = %200
  store ptr %205, ptr %203, align 8, !tbaa !320
  store ptr null, ptr %184, align 8, !tbaa !320
  br label %208

208:                                              ; preds = %207, %200
  %209 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %201, i64 1
  %210 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %201, i64 1, i32 2
  store ptr null, ptr %210, align 8, !tbaa !320
  %211 = load <2 x i32>, ptr %3, align 8, !tbaa !22
  store <2 x i32> %211, ptr %209, align 8, !tbaa !22
  %212 = load ptr, ptr %184, align 8, !tbaa !320
  %213 = icmp eq ptr %212, null
  br i1 %213, label %215, label %214

214:                                              ; preds = %208
  store ptr %212, ptr %210, align 8, !tbaa !320
  store ptr null, ptr %184, align 8, !tbaa !320
  br label %215

215:                                              ; preds = %214, %208
  %216 = add i64 %202, -2
  %217 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %201, i64 2
  %218 = icmp eq i64 %216, 0
  br i1 %218, label %219, label %200

219:                                              ; preds = %215, %196
  %220 = icmp eq ptr %160, %1
  br i1 %220, label %234, label %221

221:                                              ; preds = %219, %230
  %222 = phi ptr [ %232, %230 ], [ %182, %219 ]
  %223 = phi ptr [ %231, %230 ], [ %160, %219 ]
  %224 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %222, i64 0, i32 2
  store ptr null, ptr %224, align 8, !tbaa !320
  %225 = load <2 x i32>, ptr %223, align 8, !tbaa !22
  store <2 x i32> %225, ptr %222, align 8, !tbaa !22
  %226 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %223, i64 0, i32 2
  %227 = load ptr, ptr %226, align 8, !tbaa !320
  %228 = icmp eq ptr %227, null
  br i1 %228, label %230, label %229

229:                                              ; preds = %221
  store ptr %227, ptr %224, align 8, !tbaa !320
  store ptr null, ptr %226, align 8, !tbaa !320
  br label %230

230:                                              ; preds = %229, %221
  %231 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %223, i64 1
  %232 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %222, i64 1
  %233 = icmp eq ptr %231, %1
  br i1 %233, label %234, label %221

234:                                              ; preds = %230, %219
  %235 = phi ptr [ %182, %219 ], [ %232, %230 ]
  %236 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %235, i64 %2
  %237 = icmp eq ptr %10, %1
  br i1 %237, label %251, label %238

238:                                              ; preds = %234, %247
  %239 = phi ptr [ %249, %247 ], [ %236, %234 ]
  %240 = phi ptr [ %248, %247 ], [ %1, %234 ]
  %241 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %239, i64 0, i32 2
  store ptr null, ptr %241, align 8, !tbaa !320
  %242 = load <2 x i32>, ptr %240, align 8, !tbaa !22
  store <2 x i32> %242, ptr %239, align 8, !tbaa !22
  %243 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %240, i64 0, i32 2
  %244 = load ptr, ptr %243, align 8, !tbaa !320
  %245 = icmp eq ptr %244, null
  br i1 %245, label %247, label %246

246:                                              ; preds = %238
  store ptr %244, ptr %241, align 8, !tbaa !320
  store ptr null, ptr %243, align 8, !tbaa !320
  br label %247

247:                                              ; preds = %246, %238
  %248 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %240, i64 1
  %249 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %239, i64 1
  %250 = icmp eq ptr %248, %10
  br i1 %250, label %251, label %238

251:                                              ; preds = %247, %234
  %252 = phi ptr [ %236, %234 ], [ %249, %247 ]
  %253 = icmp eq ptr %160, %10
  br i1 %253, label %267, label %254

254:                                              ; preds = %251, %264
  %255 = phi ptr [ %265, %264 ], [ %160, %251 ]
  %256 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %255, i64 0, i32 2
  %257 = load ptr, ptr %256, align 8, !tbaa !320
  %258 = icmp eq ptr %257, null
  br i1 %258, label %264, label %259

259:                                              ; preds = %254
  %260 = load ptr, ptr %257, align 8, !tbaa !32
  %261 = icmp eq ptr %260, null
  br i1 %261, label %263, label %262

262:                                              ; preds = %259
  tail call void @_ZdlPv(ptr noundef nonnull %260) #23
  br label %263

263:                                              ; preds = %262, %259
  tail call void @_ZdlPv(ptr noundef nonnull %257) #23
  store ptr null, ptr %256, align 8, !tbaa !320
  br label %264

264:                                              ; preds = %263, %254
  %265 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %255, i64 1
  %266 = icmp eq ptr %265, %10
  br i1 %266, label %267, label %254

267:                                              ; preds = %264, %251
  %268 = icmp eq ptr %160, null
  br i1 %268, label %270, label %269

269:                                              ; preds = %267
  tail call void @_ZdlPv(ptr noundef nonnull %160) #23
  br label %270

270:                                              ; preds = %267, %269
  store ptr %182, ptr %0, align 8, !tbaa !321
  store ptr %252, ptr %9, align 8, !tbaa !325
  %271 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %182, i64 %173
  store ptr %271, ptr %7, align 8, !tbaa !323
  br label %272

272:                                              ; preds = %146, %141, %85, %80, %158, %151, %136, %74, %115, %270, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local ptr @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE6insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(16) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = load ptr, ptr %0, align 8, !tbaa !21
  %5 = ptrtoint ptr %1 to i64
  %6 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !21
  %8 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !323
  %10 = icmp eq ptr %7, %9
  br i1 %10, label %62, label %11

11:                                               ; preds = %3
  %12 = icmp ne ptr %1, null
  tail call void @llvm.assume(i1 %12)
  %13 = icmp eq ptr %7, %1
  br i1 %13, label %14, label %23

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1, i64 0, i32 2
  store ptr null, ptr %15, align 8, !tbaa !320
  %16 = load <2 x i32>, ptr %2, align 8, !tbaa !22
  store <2 x i32> %16, ptr %1, align 8, !tbaa !22
  %17 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %2, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !320
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %14
  store ptr %18, ptr %15, align 8, !tbaa !320
  store ptr null, ptr %17, align 8, !tbaa !320
  br label %21

21:                                               ; preds = %14, %20
  %22 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1, i64 1
  store ptr %22, ptr %6, align 8, !tbaa !325
  br label %64

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %7, i64 -1
  %25 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %7, i64 0, i32 2
  store ptr null, ptr %25, align 8, !tbaa !320
  %26 = load <2 x i32>, ptr %24, align 8, !tbaa !22
  store <2 x i32> %26, ptr %7, align 8, !tbaa !22
  %27 = getelementptr %"struct.dealii::internals::distributing", ptr %7, i64 -1, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !320
  %29 = icmp eq ptr %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %23
  store ptr %28, ptr %25, align 8, !tbaa !320
  store ptr null, ptr %27, align 8, !tbaa !320
  br label %31

31:                                               ; preds = %30, %23
  %32 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %7, i64 1
  store ptr %32, ptr %6, align 8, !tbaa !325
  %33 = load <2 x i32>, ptr %2, align 8, !tbaa !22
  %34 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %2, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !320
  %36 = icmp eq ptr %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %31
  store ptr null, ptr %34, align 8, !tbaa !320
  br label %38

38:                                               ; preds = %37, %31
  %39 = ptrtoint ptr %24 to i64
  %40 = sub i64 %39, %5
  %41 = icmp sgt i64 %40, 0
  br i1 %41, label %42, label %59

42:                                               ; preds = %38
  %43 = lshr exact i64 %40, 4
  br label %44

44:                                               ; preds = %56, %42
  %45 = phi i64 [ %57, %56 ], [ %43, %42 ]
  %46 = phi ptr [ %49, %56 ], [ %7, %42 ]
  %47 = phi ptr [ %48, %56 ], [ %24, %42 ]
  %48 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %47, i64 -1
  %49 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %46, i64 -1
  %50 = load <2 x i32>, ptr %48, align 8, !tbaa !22
  store <2 x i32> %50, ptr %49, align 8, !tbaa !22
  %51 = getelementptr %"struct.dealii::internals::distributing", ptr %47, i64 -1, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !320
  %53 = icmp eq ptr %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %44
  %55 = getelementptr %"struct.dealii::internals::distributing", ptr %46, i64 -1, i32 2
  store ptr %52, ptr %55, align 8, !tbaa !320
  store ptr null, ptr %51, align 8, !tbaa !320
  br label %56

56:                                               ; preds = %54, %44
  %57 = add nsw i64 %45, -1
  %58 = icmp sgt i64 %45, 1
  br i1 %58, label %44, label %59

59:                                               ; preds = %56, %38
  store <2 x i32> %33, ptr %1, align 8, !tbaa !22
  br i1 %36, label %64, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %1, i64 0, i32 2
  store ptr %35, ptr %61, align 8, !tbaa !320
  br label %64

62:                                               ; preds = %3
  tail call void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(16) %2)
  %63 = load ptr, ptr %0, align 8, !tbaa !321
  br label %64

64:                                               ; preds = %60, %59, %21, %62
  %65 = phi ptr [ %4, %60 ], [ %4, %59 ], [ %4, %21 ], [ %63, %62 ]
  %66 = ptrtoint ptr %4 to i64
  %67 = sub i64 %5, %66
  %68 = ashr exact i64 %67, 4
  %69 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %65, i64 %68
  ret ptr %69
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN6dealii9internals12distributingESaIS2_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(16) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !325
  %6 = load ptr, ptr %0, align 8, !tbaa !21
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 9223372036854775792
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
  unreachable

12:                                               ; preds = %3
  %13 = ashr exact i64 %9, 4
  %14 = tail call i64 @llvm.umax.i64(i64 %13, i64 1)
  %15 = add i64 %14, %13
  %16 = icmp ult i64 %15, %13
  %17 = icmp ugt i64 %15, 576460752303423487
  %18 = or i1 %16, %17
  %19 = select i1 %18, i64 576460752303423487, i64 %15
  %20 = ptrtoint ptr %1 to i64
  %21 = sub i64 %20, %8
  %22 = ashr exact i64 %21, 4
  %23 = icmp ne i64 %19, 0
  tail call void @llvm.assume(i1 %23)
  %24 = shl nuw nsw i64 %19, 4
  %25 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %24) #21
  %26 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %25, i64 %22
  %27 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %25, i64 %22, i32 2
  store ptr null, ptr %27, align 8, !tbaa !320
  %28 = load <2 x i32>, ptr %2, align 8, !tbaa !22
  store <2 x i32> %28, ptr %26, align 8, !tbaa !22
  %29 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %2, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !320
  %31 = icmp eq ptr %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %12
  store ptr %30, ptr %27, align 8, !tbaa !320
  store ptr null, ptr %29, align 8, !tbaa !320
  br label %33

33:                                               ; preds = %32, %12
  %34 = icmp eq ptr %6, %1
  br i1 %34, label %48, label %35

35:                                               ; preds = %33, %44
  %36 = phi ptr [ %46, %44 ], [ %25, %33 ]
  %37 = phi ptr [ %45, %44 ], [ %6, %33 ]
  %38 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %36, i64 0, i32 2
  store ptr null, ptr %38, align 8, !tbaa !320
  %39 = load <2 x i32>, ptr %37, align 8, !tbaa !22
  store <2 x i32> %39, ptr %36, align 8, !tbaa !22
  %40 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %37, i64 0, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !320
  %42 = icmp eq ptr %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %35
  store ptr %41, ptr %38, align 8, !tbaa !320
  store ptr null, ptr %40, align 8, !tbaa !320
  br label %44

44:                                               ; preds = %43, %35
  %45 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %37, i64 1
  %46 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %36, i64 1
  %47 = icmp eq ptr %45, %1
  br i1 %47, label %48, label %35

48:                                               ; preds = %44, %33
  %49 = phi ptr [ %25, %33 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %49, i64 1
  %51 = icmp eq ptr %5, %1
  br i1 %51, label %65, label %52

52:                                               ; preds = %48, %61
  %53 = phi ptr [ %63, %61 ], [ %50, %48 ]
  %54 = phi ptr [ %62, %61 ], [ %1, %48 ]
  %55 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %53, i64 0, i32 2
  store ptr null, ptr %55, align 8, !tbaa !320
  %56 = load <2 x i32>, ptr %54, align 8, !tbaa !22
  store <2 x i32> %56, ptr %53, align 8, !tbaa !22
  %57 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %54, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !320
  %59 = icmp eq ptr %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %52
  store ptr %58, ptr %55, align 8, !tbaa !320
  store ptr null, ptr %57, align 8, !tbaa !320
  br label %61

61:                                               ; preds = %60, %52
  %62 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %54, i64 1
  %63 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %53, i64 1
  %64 = icmp eq ptr %62, %5
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %48
  %66 = phi ptr [ %50, %48 ], [ %63, %61 ]
  %67 = icmp eq ptr %6, %5
  br i1 %67, label %81, label %68

68:                                               ; preds = %65, %78
  %69 = phi ptr [ %79, %78 ], [ %6, %65 ]
  %70 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %69, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !320
  %72 = icmp eq ptr %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %68
  %74 = load ptr, ptr %71, align 8, !tbaa !32
  %75 = icmp eq ptr %74, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  tail call void @_ZdlPv(ptr noundef nonnull %74) #23
  br label %77

77:                                               ; preds = %76, %73
  tail call void @_ZdlPv(ptr noundef nonnull %71) #23
  store ptr null, ptr %70, align 8, !tbaa !320
  br label %78

78:                                               ; preds = %77, %68
  %79 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %69, i64 1
  %80 = icmp eq ptr %79, %5
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %65
  %82 = icmp eq ptr %6, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %81
  tail call void @_ZdlPv(ptr noundef nonnull %6) #23
  br label %84

84:                                               ; preds = %81, %83
  %85 = getelementptr inbounds %"struct.std::_Vector_base<dealii::internals::distributing, std::allocator<dealii::internals::distributing> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %25, ptr %0, align 8, !tbaa !321
  store ptr %66, ptr %4, align 8, !tbaa !325
  %86 = getelementptr inbounds %"struct.dealii::internals::distributing", ptr %25, i64 %19
  store ptr %86, ptr %85, align 8, !tbaa !323
  ret void
}

declare void @_ZN6dealii12SparseMatrixIfE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36), i32 noundef, i32 noundef, ptr noundef, ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZN6dealii14SparseMatrixEZIdE8allocateEjj(ptr noundef nonnull align 8 dereferenceable(132) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"struct.dealii::SparseMatrixEZ<double>::Entry", align 8
  %5 = alloca %"struct.dealii::SparseMatrixEZ<double>::Entry", align 8
  %6 = alloca %"struct.dealii::SparseMatrixEZ<double>::Entry", align 8
  %7 = getelementptr inbounds %"class.dealii::SparseMatrixEZ", ptr %0, i64 0, i32 3
  %8 = zext i32 %1 to i64
  %9 = load ptr, ptr %7, align 8, !tbaa !828
  %10 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::RowInfo", ptr %9, i64 %8
  %11 = load i32, ptr %10, align 4, !tbaa !830
  %12 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::RowInfo", ptr %9, i64 %8, i32 1
  %13 = load i16, ptr %12, align 4, !tbaa !833
  %14 = zext i16 %13 to i32
  %15 = add i32 %11, %14
  %16 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::RowInfo", ptr %9, i64 %8, i32 2
  %17 = load i16, ptr %16, align 2, !tbaa !834
  %18 = zext i16 %17 to i32
  %19 = icmp eq i16 %17, -1
  %20 = icmp ult i32 %2, %1
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 0, i32 %18
  %23 = add i32 %22, %11
  %24 = icmp ult i32 %23, %15
  br i1 %24, label %25, label %40

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.dealii::SparseMatrixEZ", ptr %0, i64 0, i32 4
  %27 = load ptr, ptr %26, align 8, !tbaa !835
  %28 = zext i32 %23 to i64
  br label %29

29:                                               ; preds = %25, %34
  %30 = phi i64 [ %28, %25 ], [ %35, %34 ]
  %31 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %27, i64 %30
  %32 = load i32, ptr %31, align 8, !tbaa !837
  %33 = icmp ult i32 %32, %2
  br i1 %33, label %34, label %38

34:                                               ; preds = %29
  %35 = add nuw nsw i64 %30, 1
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %15, %36
  br i1 %37, label %50, label %29

38:                                               ; preds = %29
  %39 = trunc i64 %30 to i32
  br label %40

40:                                               ; preds = %38, %3
  %41 = phi i32 [ %23, %3 ], [ %39, %38 ]
  %42 = icmp eq i32 %41, %15
  br i1 %42, label %50, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.dealii::SparseMatrixEZ", ptr %0, i64 0, i32 4
  %45 = zext i32 %41 to i64
  %46 = load ptr, ptr %44, align 8, !tbaa !835
  %47 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %46, i64 %45
  %48 = load i32, ptr %47, align 8, !tbaa !837
  %49 = icmp eq i32 %48, %2
  br i1 %49, label %186, label %50

50:                                               ; preds = %34, %43, %40
  %51 = phi i1 [ false, %43 ], [ true, %40 ], [ true, %34 ]
  %52 = phi i32 [ %41, %43 ], [ %41, %40 ], [ %15, %34 ]
  %53 = getelementptr inbounds %"class.dealii::SparseMatrixEZ", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !838
  %55 = ptrtoint ptr %54 to i64
  %56 = ptrtoint ptr %9 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = add nsw i64 %58, -1
  %60 = icmp eq i64 %59, %8
  br i1 %60, label %94, label %61

61:                                               ; preds = %50
  %62 = add i32 %1, 1
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::RowInfo", ptr %9, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !830
  %66 = icmp ult i32 %15, %65
  br i1 %66, label %145, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.dealii::SparseMatrixEZ", ptr %0, i64 0, i32 4
  %69 = load ptr, ptr %68, align 8, !tbaa !21
  %70 = zext i32 %15 to i64
  %71 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %69, i64 %70
  %72 = getelementptr inbounds %"class.dealii::SparseMatrixEZ", ptr %0, i64 0, i32 5
  %73 = load i32, ptr %72, align 8, !tbaa !839
  %74 = zext i32 %73 to i64
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #24
  store i32 -1, ptr %5, align 8, !tbaa !837
  %75 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %5, i64 0, i32 1
  store double 0.000000e+00, ptr %75, align 8, !tbaa !409
  call void @_ZNSt6vectorIN6dealii14SparseMatrixEZIdE5EntryESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_(ptr noundef nonnull align 8 dereferenceable(24) %68, ptr %71, i64 noundef %74, ptr noundef nonnull align 8 dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #24
  %76 = load ptr, ptr %53, align 8, !tbaa !838
  %77 = load ptr, ptr %7, align 8, !tbaa !828
  %78 = ptrtoint ptr %76 to i64
  %79 = ptrtoint ptr %77 to i64
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 3
  %82 = icmp ugt i64 %81, %63
  br i1 %82, label %83, label %145

83:                                               ; preds = %67
  %84 = load i32, ptr %72, align 8, !tbaa !839
  br label %85

85:                                               ; preds = %83, %85
  %86 = phi i64 [ %63, %83 ], [ %92, %85 ]
  %87 = phi i32 [ %62, %83 ], [ %91, %85 ]
  %88 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::RowInfo", ptr %77, i64 %86
  %89 = load i32, ptr %88, align 4, !tbaa !830
  %90 = add i32 %89, %84
  store i32 %90, ptr %88, align 4, !tbaa !830
  %91 = add i32 %87, 1
  %92 = zext i32 %91 to i64
  %93 = icmp ugt i64 %81, %92
  br i1 %93, label %85, label %145

94:                                               ; preds = %50
  %95 = zext i32 %15 to i64
  %96 = getelementptr inbounds %"class.dealii::SparseMatrixEZ", ptr %0, i64 0, i32 4
  %97 = getelementptr inbounds %"class.dealii::SparseMatrixEZ", ptr %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %98 = load ptr, ptr %97, align 8, !tbaa !21
  %99 = load ptr, ptr %96, align 8, !tbaa !21
  %100 = ptrtoint ptr %98 to i64
  %101 = ptrtoint ptr %99 to i64
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 4
  %104 = icmp ugt i64 %103, %95
  br i1 %104, label %145, label %105

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.dealii::SparseMatrixEZ", ptr %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %107 = load ptr, ptr %106, align 8, !tbaa !847
  %108 = icmp eq ptr %98, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  store i32 -1, ptr %98, align 8, !tbaa.struct !848
  %110 = getelementptr inbounds i8, ptr %98, i64 8
  store double 0.000000e+00, ptr %110, align 8, !tbaa.struct !849
  %111 = load ptr, ptr %97, align 8, !tbaa !850
  %112 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %111, i64 1
  store ptr %112, ptr %97, align 8, !tbaa !850
  br label %145

113:                                              ; preds = %105
  %114 = icmp eq i64 %102, 9223372036854775792
  br i1 %114, label %115, label %116

115:                                              ; preds = %113
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
  unreachable

116:                                              ; preds = %113
  %117 = tail call i64 @llvm.umax.i64(i64 %103, i64 1)
  %118 = add i64 %117, %103
  %119 = icmp ult i64 %118, %103
  %120 = icmp ugt i64 %118, 576460752303423487
  %121 = or i1 %119, %120
  %122 = select i1 %121, i64 576460752303423487, i64 %118
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %116
  %125 = shl nuw nsw i64 %122, 4
  %126 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %125) #21
  br label %127

127:                                              ; preds = %124, %116
  %128 = phi ptr [ %126, %124 ], [ null, %116 ]
  %129 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %128, i64 %103
  store i32 -1, ptr %129, align 8, !tbaa.struct !848
  %130 = getelementptr inbounds i8, ptr %129, i64 8
  store double 0.000000e+00, ptr %130, align 8, !tbaa.struct !849
  %131 = icmp eq ptr %99, %98
  br i1 %131, label %138, label %132

132:                                              ; preds = %127, %132
  %133 = phi ptr [ %136, %132 ], [ %128, %127 ]
  %134 = phi ptr [ %135, %132 ], [ %99, %127 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %133, ptr noundef nonnull align 8 dereferenceable(16) %134, i64 16, i1 false), !tbaa.struct !848
  %135 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %134, i64 1
  %136 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %133, i64 1
  %137 = icmp eq ptr %135, %98
  br i1 %137, label %138, label %132

138:                                              ; preds = %132, %127
  %139 = phi ptr [ %128, %127 ], [ %136, %132 ]
  %140 = getelementptr %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %139, i64 1
  %141 = icmp eq ptr %99, null
  br i1 %141, label %143, label %142

142:                                              ; preds = %138
  tail call void @_ZdlPv(ptr noundef nonnull %99) #23
  br label %143

143:                                              ; preds = %142, %138
  store ptr %128, ptr %96, align 8, !tbaa !835
  store ptr %140, ptr %97, align 8, !tbaa !850
  %144 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %128, i64 %122
  store ptr %144, ptr %106, align 8, !tbaa !847
  br label %145

145:                                              ; preds = %85, %67, %143, %109, %94, %61
  %146 = getelementptr inbounds %"class.dealii::SparseMatrixEZ", ptr %0, i64 0, i32 4
  %147 = zext i32 %52 to i64
  %148 = load ptr, ptr %146, align 8, !tbaa !835
  %149 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %148, i64 %147
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, ptr noundef nonnull align 8 dereferenceable(16) %149, i64 16, i1 false), !tbaa.struct !848
  store i32 %2, ptr %149, align 8, !tbaa !837
  %150 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %148, i64 %147, i32 1
  store double 0.000000e+00, ptr %150, align 8, !tbaa !409
  %151 = load i16, ptr %12, align 4, !tbaa !833
  %152 = add i16 %151, 1
  store i16 %152, ptr %12, align 4, !tbaa !833
  %153 = icmp eq i32 %2, %1
  br i1 %153, label %154, label %158

154:                                              ; preds = %145
  %155 = load i32, ptr %10, align 4, !tbaa !830
  %156 = sub i32 %52, %155
  %157 = trunc i32 %156 to i16
  br label %164

158:                                              ; preds = %145
  br i1 %20, label %159, label %166

159:                                              ; preds = %158
  %160 = load i16, ptr %16, align 2, !tbaa !834
  %161 = icmp eq i16 %160, -1
  br i1 %161, label %166, label %162

162:                                              ; preds = %159
  %163 = add nuw i16 %160, 1
  br label %164

164:                                              ; preds = %154, %162
  %165 = phi i16 [ %163, %162 ], [ %157, %154 ]
  store i16 %165, ptr %16, align 2, !tbaa !834
  br label %166

166:                                              ; preds = %164, %158, %159
  br i1 %51, label %185, label %167

167:                                              ; preds = %166
  %168 = add i32 %52, 1
  %169 = icmp ult i32 %168, %15
  br i1 %169, label %170, label %174

170:                                              ; preds = %167
  %171 = zext i32 %168 to i64
  br label %178

172:                                              ; preds = %178
  %173 = load ptr, ptr %146, align 8, !tbaa !835
  br label %174

174:                                              ; preds = %172, %167
  %175 = phi ptr [ %173, %172 ], [ %148, %167 ]
  %176 = zext i32 %15 to i64
  %177 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %175, i64 %176
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %177, ptr noundef nonnull align 8 dereferenceable(16) %6, i64 16, i1 false), !tbaa.struct !848
  br label %185

178:                                              ; preds = %170, %178
  %179 = phi i64 [ %171, %170 ], [ %182, %178 ]
  %180 = load ptr, ptr %146, align 8, !tbaa !835
  %181 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %180, i64 %179
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %4, ptr noundef nonnull align 8 dereferenceable(16) %181, i64 16, i1 false), !tbaa.struct !848
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %181, ptr noundef nonnull align 8 dereferenceable(16) %6, i64 16, i1 false), !tbaa.struct !848
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, ptr noundef nonnull align 8 dereferenceable(16) %4, i64 16, i1 false), !tbaa.struct !848
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4)
  %182 = add nuw nsw i64 %179, 1
  %183 = trunc i64 %182 to i32
  %184 = icmp eq i32 %15, %183
  br i1 %184, label %172, label %178

185:                                              ; preds = %166, %174
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  br label %186

186:                                              ; preds = %43, %185
  %187 = phi ptr [ %149, %185 ], [ %47, %43 ]
  ret ptr %187
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN6dealii14SparseMatrixEZIdE5EntryESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 8 dereferenceable(16) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"struct.dealii::SparseMatrixEZ<double>::Entry", align 8
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %172, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.std::_Vector_base<dealii::SparseMatrixEZ<double>::Entry, std::allocator<dealii::SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !847
  %10 = getelementptr inbounds %"struct.std::_Vector_base<dealii::SparseMatrixEZ<double>::Entry, std::allocator<dealii::SparseMatrixEZ<double>::Entry> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !21
  %12 = ptrtoint ptr %9 to i64
  %13 = ptrtoint ptr %11 to i64
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 4
  %16 = icmp ult i64 %15, %2
  br i1 %16, label %100, label %17

17:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, ptr noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false), !tbaa.struct !848
  %18 = ptrtoint ptr %1 to i64
  %19 = sub i64 %13, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp ugt i64 %20, %2
  br i1 %21, label %22, label %51

22:                                               ; preds = %17
  %23 = sub i64 0, %2
  %24 = getelementptr %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %11, i64 %23
  br label %25

25:                                               ; preds = %22, %25
  %26 = phi ptr [ %29, %25 ], [ %11, %22 ]
  %27 = phi ptr [ %28, %25 ], [ %24, %22 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %26, ptr noundef nonnull align 8 dereferenceable(16) %27, i64 16, i1 false), !tbaa.struct !848
  %28 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %27, i64 1
  %29 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %26, i64 1
  %30 = icmp eq ptr %28, %11
  br i1 %30, label %31, label %25

31:                                               ; preds = %25
  %32 = load ptr, ptr %10, align 8, !tbaa !850
  %33 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %32, i64 %2
  store ptr %33, ptr %10, align 8, !tbaa !850
  %34 = ptrtoint ptr %24 to i64
  %35 = sub i64 %34, %18
  %36 = icmp sgt i64 %35, 16
  br i1 %36, label %37, label %41, !prof !23

37:                                               ; preds = %31
  %38 = lshr exact i64 %35, 4
  %39 = sub nsw i64 0, %38
  %40 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %11, i64 %39
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %40, ptr align 8 %1, i64 %35, i1 false)
  br label %45

41:                                               ; preds = %31
  %42 = icmp eq i64 %35, 16
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %11, i64 -1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %44, ptr noundef nonnull align 8 dereferenceable(16) %1, i64 16, i1 false), !tbaa.struct !848
  br label %45

45:                                               ; preds = %37, %41, %43
  %46 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %1, i64 %2
  br label %47

47:                                               ; preds = %45, %47
  %48 = phi ptr [ %49, %47 ], [ %1, %45 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %48, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false), !tbaa.struct !848
  %49 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %48, i64 1
  %50 = icmp eq ptr %49, %46
  br i1 %50, label %99, label %47

51:                                               ; preds = %17
  %52 = sub i64 %2, %20
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %81, label %54

54:                                               ; preds = %51
  %55 = xor i64 %20, -1
  %56 = add i64 %55, %2
  %57 = and i64 %52, 3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %54, %59
  %60 = phi ptr [ %64, %59 ], [ %11, %54 ]
  %61 = phi i64 [ %63, %59 ], [ %52, %54 ]
  %62 = phi i64 [ %65, %59 ], [ 0, %54 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %60, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false), !tbaa.struct !848
  %63 = add i64 %61, -1
  %64 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %60, i64 1
  %65 = add i64 %62, 1
  %66 = icmp eq i64 %65, %57
  br i1 %66, label %67, label %59, !llvm.loop !851

67:                                               ; preds = %59, %54
  %68 = phi ptr [ undef, %54 ], [ %64, %59 ]
  %69 = phi ptr [ %11, %54 ], [ %64, %59 ]
  %70 = phi i64 [ %52, %54 ], [ %63, %59 ]
  %71 = icmp ult i64 %56, 3
  br i1 %71, label %81, label %72

72:                                               ; preds = %67, %72
  %73 = phi ptr [ %79, %72 ], [ %69, %67 ]
  %74 = phi i64 [ %78, %72 ], [ %70, %67 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %73, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false), !tbaa.struct !848
  %75 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %73, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %75, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false), !tbaa.struct !848
  %76 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %73, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %76, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false), !tbaa.struct !848
  %77 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %73, i64 3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %77, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false), !tbaa.struct !848
  %78 = add i64 %74, -4
  %79 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %73, i64 4
  %80 = icmp eq i64 %78, 0
  br i1 %80, label %81, label %72

81:                                               ; preds = %67, %72, %51
  %82 = phi ptr [ %11, %51 ], [ %68, %67 ], [ %79, %72 ]
  store ptr %82, ptr %10, align 8, !tbaa !850
  %83 = icmp eq ptr %11, %1
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %82, i64 %20
  store ptr %85, ptr %10, align 8, !tbaa !850
  br label %99

86:                                               ; preds = %81, %86
  %87 = phi ptr [ %90, %86 ], [ %82, %81 ]
  %88 = phi ptr [ %89, %86 ], [ %1, %81 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %87, ptr noundef nonnull align 8 dereferenceable(16) %88, i64 16, i1 false), !tbaa.struct !848
  %89 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %88, i64 1
  %90 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %87, i64 1
  %91 = icmp eq ptr %89, %11
  br i1 %91, label %92, label %86

92:                                               ; preds = %86
  %93 = load ptr, ptr %10, align 8, !tbaa !850
  %94 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %93, i64 %20
  store ptr %94, ptr %10, align 8, !tbaa !850
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi ptr [ %97, %95 ], [ %1, %92 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %96, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false), !tbaa.struct !848
  %97 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %96, i64 1
  %98 = icmp eq ptr %97, %11
  br i1 %98, label %99, label %95

99:                                               ; preds = %95, %47, %84
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5)
  br label %172

100:                                              ; preds = %7
  %101 = load ptr, ptr %0, align 8, !tbaa !835
  %102 = ptrtoint ptr %101 to i64
  %103 = sub i64 %13, %102
  %104 = ashr exact i64 %103, 4
  %105 = sub nsw i64 576460752303423487, %104
  %106 = icmp ult i64 %105, %2
  br i1 %106, label %107, label %108

107:                                              ; preds = %100
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.28) #22
  unreachable

108:                                              ; preds = %100
  %109 = tail call i64 @llvm.umax.i64(i64 %104, i64 %2)
  %110 = add i64 %109, %104
  %111 = icmp ult i64 %110, %104
  %112 = icmp ugt i64 %110, 576460752303423487
  %113 = or i1 %111, %112
  %114 = select i1 %113, i64 576460752303423487, i64 %110
  %115 = ptrtoint ptr %1 to i64
  %116 = sub i64 %115, %102
  %117 = ashr exact i64 %116, 4
  %118 = icmp eq i64 %114, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %108
  %120 = shl nuw nsw i64 %114, 4
  %121 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %120) #21
  br label %122

122:                                              ; preds = %108, %119
  %123 = phi ptr [ %121, %119 ], [ null, %108 ]
  %124 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %123, i64 %117
  %125 = and i64 %2, 3
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %122, %127
  %128 = phi ptr [ %132, %127 ], [ %124, %122 ]
  %129 = phi i64 [ %131, %127 ], [ %2, %122 ]
  %130 = phi i64 [ %133, %127 ], [ 0, %122 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %128, ptr noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false), !tbaa.struct !848
  %131 = add i64 %129, -1
  %132 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %128, i64 1
  %133 = add i64 %130, 1
  %134 = icmp eq i64 %133, %125
  br i1 %134, label %135, label %127, !llvm.loop !852

135:                                              ; preds = %127, %122
  %136 = phi ptr [ %124, %122 ], [ %132, %127 ]
  %137 = phi i64 [ %2, %122 ], [ %131, %127 ]
  %138 = icmp ult i64 %2, 4
  br i1 %138, label %148, label %139

139:                                              ; preds = %135, %139
  %140 = phi ptr [ %146, %139 ], [ %136, %135 ]
  %141 = phi i64 [ %145, %139 ], [ %137, %135 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %140, ptr noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false), !tbaa.struct !848
  %142 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %140, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %142, ptr noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false), !tbaa.struct !848
  %143 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %140, i64 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %143, ptr noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false), !tbaa.struct !848
  %144 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %140, i64 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %144, ptr noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false), !tbaa.struct !848
  %145 = add i64 %141, -4
  %146 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %140, i64 4
  %147 = icmp eq i64 %145, 0
  br i1 %147, label %148, label %139

148:                                              ; preds = %139, %135
  %149 = icmp eq ptr %101, %1
  br i1 %149, label %156, label %150

150:                                              ; preds = %148, %150
  %151 = phi ptr [ %154, %150 ], [ %123, %148 ]
  %152 = phi ptr [ %153, %150 ], [ %101, %148 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %151, ptr noundef nonnull align 8 dereferenceable(16) %152, i64 16, i1 false), !tbaa.struct !848
  %153 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %152, i64 1
  %154 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %151, i64 1
  %155 = icmp eq ptr %153, %1
  br i1 %155, label %156, label %150

156:                                              ; preds = %150, %148
  %157 = phi ptr [ %123, %148 ], [ %154, %150 ]
  %158 = getelementptr %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %157, i64 %2
  %159 = icmp eq ptr %11, %1
  br i1 %159, label %166, label %160

160:                                              ; preds = %156, %160
  %161 = phi ptr [ %164, %160 ], [ %158, %156 ]
  %162 = phi ptr [ %163, %160 ], [ %1, %156 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %161, ptr noundef nonnull align 8 dereferenceable(16) %162, i64 16, i1 false), !tbaa.struct !848
  %163 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %162, i64 1
  %164 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %161, i64 1
  %165 = icmp eq ptr %163, %11
  br i1 %165, label %166, label %160

166:                                              ; preds = %160, %156
  %167 = phi ptr [ %158, %156 ], [ %164, %160 ]
  %168 = icmp eq ptr %101, null
  br i1 %168, label %170, label %169

169:                                              ; preds = %166
  tail call void @_ZdlPv(ptr noundef nonnull %101) #23
  br label %170

170:                                              ; preds = %166, %169
  store ptr %123, ptr %0, align 8, !tbaa !835
  store ptr %167, ptr %10, align 8, !tbaa !850
  %171 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<double>::Entry", ptr %123, i64 %114
  store ptr %171, ptr %8, align 8, !tbaa !847
  br label %172

172:                                              ; preds = %99, %170, %4
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZN6dealii14SparseMatrixEZIfE8allocateEjj(ptr noundef nonnull align 8 dereferenceable(132) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"struct.dealii::SparseMatrixEZ<float>::Entry", align 4
  %5 = getelementptr inbounds %"class.dealii::SparseMatrixEZ.93", ptr %0, i64 0, i32 3
  %6 = zext i32 %1 to i64
  %7 = load ptr, ptr %5, align 8, !tbaa !853
  %8 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::RowInfo", ptr %7, i64 %6
  %9 = load i32, ptr %8, align 4, !tbaa !855
  %10 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::RowInfo", ptr %7, i64 %6, i32 1
  %11 = load i16, ptr %10, align 4, !tbaa !857
  %12 = zext i16 %11 to i32
  %13 = add i32 %9, %12
  %14 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::RowInfo", ptr %7, i64 %6, i32 2
  %15 = load i16, ptr %14, align 2, !tbaa !858
  %16 = zext i16 %15 to i32
  %17 = icmp eq i16 %15, -1
  %18 = icmp ult i32 %2, %1
  %19 = or i1 %18, %17
  %20 = select i1 %19, i32 0, i32 %16
  %21 = add i32 %20, %9
  %22 = icmp ult i32 %21, %13
  br i1 %22, label %23, label %38

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.dealii::SparseMatrixEZ.93", ptr %0, i64 0, i32 4
  %25 = load ptr, ptr %24, align 8, !tbaa !859
  %26 = zext i32 %21 to i64
  br label %27

27:                                               ; preds = %23, %32
  %28 = phi i64 [ %26, %23 ], [ %33, %32 ]
  %29 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %25, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !861
  %31 = icmp ult i32 %30, %2
  br i1 %31, label %32, label %36

32:                                               ; preds = %27
  %33 = add nuw nsw i64 %28, 1
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %13, %34
  br i1 %35, label %48, label %27

36:                                               ; preds = %27
  %37 = trunc i64 %28 to i32
  br label %38

38:                                               ; preds = %36, %3
  %39 = phi i32 [ %21, %3 ], [ %37, %36 ]
  %40 = icmp eq i32 %39, %13
  br i1 %40, label %48, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.dealii::SparseMatrixEZ.93", ptr %0, i64 0, i32 4
  %43 = zext i32 %39 to i64
  %44 = load ptr, ptr %42, align 8, !tbaa !859
  %45 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %44, i64 %43
  %46 = load i32, ptr %45, align 4, !tbaa !861
  %47 = icmp eq i32 %46, %2
  br i1 %47, label %264, label %48

48:                                               ; preds = %32, %41, %38
  %49 = phi i1 [ false, %41 ], [ true, %38 ], [ true, %32 ]
  %50 = phi i32 [ %39, %41 ], [ %39, %38 ], [ %13, %32 ]
  %51 = getelementptr inbounds %"class.dealii::SparseMatrixEZ.93", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !862
  %53 = ptrtoint ptr %52 to i64
  %54 = ptrtoint ptr %7 to i64
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 3
  %57 = add nsw i64 %56, -1
  %58 = icmp eq i64 %57, %6
  br i1 %58, label %92, label %59

59:                                               ; preds = %48
  %60 = add i32 %1, 1
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::RowInfo", ptr %7, i64 %61
  %63 = load i32, ptr %62, align 4, !tbaa !855
  %64 = icmp ult i32 %13, %63
  br i1 %64, label %185, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.dealii::SparseMatrixEZ.93", ptr %0, i64 0, i32 4
  %67 = load ptr, ptr %66, align 8, !tbaa !21
  %68 = zext i32 %13 to i64
  %69 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %67, i64 %68
  %70 = getelementptr inbounds %"class.dealii::SparseMatrixEZ.93", ptr %0, i64 0, i32 5
  %71 = load i32, ptr %70, align 8, !tbaa !863
  %72 = zext i32 %71 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #24
  store i32 -1, ptr %4, align 4, !tbaa !861
  %73 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %4, i64 0, i32 1
  store float 0.000000e+00, ptr %73, align 4, !tbaa !413
  call void @_ZNSt6vectorIN6dealii14SparseMatrixEZIfE5EntryESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_(ptr noundef nonnull align 8 dereferenceable(24) %66, ptr %69, i64 noundef %72, ptr noundef nonnull align 4 dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #24
  %74 = load ptr, ptr %51, align 8, !tbaa !862
  %75 = load ptr, ptr %5, align 8, !tbaa !853
  %76 = ptrtoint ptr %74 to i64
  %77 = ptrtoint ptr %75 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = icmp ugt i64 %79, %61
  br i1 %80, label %81, label %185

81:                                               ; preds = %65
  %82 = load i32, ptr %70, align 8, !tbaa !863
  br label %83

83:                                               ; preds = %81, %83
  %84 = phi i64 [ %61, %81 ], [ %90, %83 ]
  %85 = phi i32 [ %60, %81 ], [ %89, %83 ]
  %86 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::RowInfo", ptr %75, i64 %84
  %87 = load i32, ptr %86, align 4, !tbaa !855
  %88 = add i32 %87, %82
  store i32 %88, ptr %86, align 4, !tbaa !855
  %89 = add i32 %85, 1
  %90 = zext i32 %89 to i64
  %91 = icmp ugt i64 %79, %90
  br i1 %91, label %83, label %185

92:                                               ; preds = %48
  %93 = zext i32 %13 to i64
  %94 = getelementptr inbounds %"class.dealii::SparseMatrixEZ.93", ptr %0, i64 0, i32 4
  %95 = getelementptr inbounds %"class.dealii::SparseMatrixEZ.93", ptr %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %96 = load ptr, ptr %95, align 8, !tbaa !21
  %97 = ptrtoint ptr %96 to i64
  %98 = load ptr, ptr %94, align 8, !tbaa !21
  %99 = ptrtoint ptr %98 to i64
  %100 = ptrtoint ptr %96 to i64
  %101 = ptrtoint ptr %98 to i64
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 3
  %104 = icmp ugt i64 %103, %93
  br i1 %104, label %185, label %105

105:                                              ; preds = %92
  %106 = getelementptr inbounds %"class.dealii::SparseMatrixEZ.93", ptr %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %107 = load ptr, ptr %106, align 8, !tbaa !871
  %108 = icmp eq ptr %96, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  store i32 -1, ptr %96, align 4
  %110 = getelementptr inbounds i8, ptr %96, i64 4
  store i32 0, ptr %110, align 4
  %111 = load ptr, ptr %95, align 8, !tbaa !872
  %112 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %111, i64 1
  store ptr %112, ptr %95, align 8, !tbaa !872
  br label %185

113:                                              ; preds = %105
  %114 = icmp eq i64 %102, 9223372036854775800
  br i1 %114, label %115, label %116

115:                                              ; preds = %113
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
  unreachable

116:                                              ; preds = %113
  %117 = tail call i64 @llvm.umax.i64(i64 %103, i64 1)
  %118 = add i64 %117, %103
  %119 = icmp ult i64 %118, %103
  %120 = icmp ugt i64 %118, 1152921504606846975
  %121 = or i1 %119, %120
  %122 = select i1 %121, i64 1152921504606846975, i64 %118
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %116
  %125 = shl nuw nsw i64 %122, 3
  %126 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %125) #21
  br label %127

127:                                              ; preds = %124, %116
  %128 = phi ptr [ %126, %124 ], [ null, %116 ]
  %129 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %128, i64 %103
  store i32 -1, ptr %129, align 4
  %130 = getelementptr inbounds i8, ptr %129, i64 4
  store i32 0, ptr %130, align 4
  %131 = icmp eq ptr %98, %96
  br i1 %131, label %178, label %132

132:                                              ; preds = %127
  %133 = ptrtoint ptr %128 to i64
  %134 = add i64 %97, -8
  %135 = sub i64 %134, %99
  %136 = lshr i64 %135, 3
  %137 = add nuw nsw i64 %136, 1
  %138 = icmp ult i64 %135, 120
  %139 = sub i64 %133, %99
  %140 = icmp ult i64 %139, 128
  %141 = or i1 %138, %140
  br i1 %141, label %168, label %142

142:                                              ; preds = %132
  %143 = and i64 %137, 4611686018427387888
  %144 = shl i64 %143, 3
  %145 = getelementptr i8, ptr %128, i64 %144
  %146 = shl i64 %143, 3
  %147 = getelementptr i8, ptr %98, i64 %146
  br label %148

148:                                              ; preds = %148, %142
  %149 = phi i64 [ 0, %142 ], [ %164, %148 ]
  %150 = shl i64 %149, 3
  %151 = getelementptr i8, ptr %128, i64 %150
  %152 = shl i64 %149, 3
  %153 = getelementptr i8, ptr %98, i64 %152
  %154 = load <4 x i64>, ptr %153, align 4
  %155 = getelementptr i64, ptr %153, i64 4
  %156 = load <4 x i64>, ptr %155, align 4
  %157 = getelementptr i64, ptr %153, i64 8
  %158 = load <4 x i64>, ptr %157, align 4
  %159 = getelementptr i64, ptr %153, i64 12
  %160 = load <4 x i64>, ptr %159, align 4
  store <4 x i64> %154, ptr %151, align 4
  %161 = getelementptr i64, ptr %151, i64 4
  store <4 x i64> %156, ptr %161, align 4
  %162 = getelementptr i64, ptr %151, i64 8
  store <4 x i64> %158, ptr %162, align 4
  %163 = getelementptr i64, ptr %151, i64 12
  store <4 x i64> %160, ptr %163, align 4
  %164 = add nuw i64 %149, 16
  %165 = icmp eq i64 %164, %143
  br i1 %165, label %166, label %148, !llvm.loop !873

166:                                              ; preds = %148
  %167 = icmp eq i64 %137, %143
  br i1 %167, label %178, label %168

168:                                              ; preds = %132, %166
  %169 = phi ptr [ %128, %132 ], [ %145, %166 ]
  %170 = phi ptr [ %98, %132 ], [ %147, %166 ]
  br label %171

171:                                              ; preds = %168, %171
  %172 = phi ptr [ %176, %171 ], [ %169, %168 ]
  %173 = phi ptr [ %175, %171 ], [ %170, %168 ]
  %174 = load i64, ptr %173, align 4
  store i64 %174, ptr %172, align 4
  %175 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %173, i64 1
  %176 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %172, i64 1
  %177 = icmp eq ptr %175, %96
  br i1 %177, label %178, label %171, !llvm.loop !874

178:                                              ; preds = %171, %166, %127
  %179 = phi ptr [ %128, %127 ], [ %145, %166 ], [ %176, %171 ]
  %180 = getelementptr %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %179, i64 1
  %181 = icmp eq ptr %98, null
  br i1 %181, label %183, label %182

182:                                              ; preds = %178
  tail call void @_ZdlPv(ptr noundef nonnull %98) #23
  br label %183

183:                                              ; preds = %182, %178
  store ptr %128, ptr %94, align 8, !tbaa !859
  store ptr %180, ptr %95, align 8, !tbaa !872
  %184 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %128, i64 %122
  store ptr %184, ptr %106, align 8, !tbaa !871
  br label %185

185:                                              ; preds = %83, %65, %183, %109, %92, %59
  %186 = getelementptr inbounds %"class.dealii::SparseMatrixEZ.93", ptr %0, i64 0, i32 4
  %187 = zext i32 %50 to i64
  %188 = load ptr, ptr %186, align 8, !tbaa !859
  %189 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %188, i64 %187
  %190 = load i64, ptr %189, align 4
  store i32 %2, ptr %189, align 4, !tbaa !861
  %191 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %188, i64 %187, i32 1
  store float 0.000000e+00, ptr %191, align 4, !tbaa !413
  %192 = load i16, ptr %10, align 4, !tbaa !857
  %193 = add i16 %192, 1
  store i16 %193, ptr %10, align 4, !tbaa !857
  %194 = icmp eq i32 %2, %1
  br i1 %194, label %195, label %199

195:                                              ; preds = %185
  %196 = load i32, ptr %8, align 4, !tbaa !855
  %197 = sub i32 %50, %196
  %198 = trunc i32 %197 to i16
  br label %205

199:                                              ; preds = %185
  br i1 %18, label %200, label %207

200:                                              ; preds = %199
  %201 = load i16, ptr %14, align 2, !tbaa !858
  %202 = icmp eq i16 %201, -1
  br i1 %202, label %207, label %203

203:                                              ; preds = %200
  %204 = add nuw i16 %201, 1
  br label %205

205:                                              ; preds = %195, %203
  %206 = phi i16 [ %204, %203 ], [ %198, %195 ]
  store i16 %206, ptr %14, align 2, !tbaa !858
  br label %207

207:                                              ; preds = %205, %199, %200
  br i1 %49, label %264, label %208

208:                                              ; preds = %207
  %209 = add i32 %50, 1
  %210 = icmp ult i32 %209, %13
  br i1 %210, label %211, label %238

211:                                              ; preds = %208
  %212 = zext i32 %209 to i64
  %213 = add i32 %9, %12
  %214 = xor i32 %50, -1
  %215 = add i32 %213, %214
  %216 = add i32 %213, -2
  %217 = sub i32 %216, %50
  %218 = and i32 %215, 3
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %230, label %220

220:                                              ; preds = %211, %220
  %221 = phi i64 [ %227, %220 ], [ %212, %211 ]
  %222 = phi i64 [ %226, %220 ], [ %190, %211 ]
  %223 = phi i32 [ %228, %220 ], [ 0, %211 ]
  %224 = load ptr, ptr %186, align 8, !tbaa !859
  %225 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %224, i64 %221
  %226 = load i64, ptr %225, align 4
  store i64 %222, ptr %225, align 4
  %227 = add nuw nsw i64 %221, 1
  %228 = add i32 %223, 1
  %229 = icmp eq i32 %228, %218
  br i1 %229, label %230, label %220, !llvm.loop !875

230:                                              ; preds = %220, %211
  %231 = phi i64 [ undef, %211 ], [ %226, %220 ]
  %232 = phi i64 [ %212, %211 ], [ %227, %220 ]
  %233 = phi i64 [ %190, %211 ], [ %226, %220 ]
  %234 = icmp ult i32 %217, 3
  br i1 %234, label %235, label %243

235:                                              ; preds = %243, %230
  %236 = phi i64 [ %231, %230 ], [ %260, %243 ]
  %237 = load ptr, ptr %186, align 8, !tbaa !859
  br label %238

238:                                              ; preds = %235, %208
  %239 = phi ptr [ %188, %208 ], [ %237, %235 ]
  %240 = phi i64 [ %190, %208 ], [ %236, %235 ]
  %241 = zext i32 %13 to i64
  %242 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %239, i64 %241
  store i64 %240, ptr %242, align 4
  br label %264

243:                                              ; preds = %230, %243
  %244 = phi i64 [ %261, %243 ], [ %232, %230 ]
  %245 = phi i64 [ %260, %243 ], [ %233, %230 ]
  %246 = load ptr, ptr %186, align 8, !tbaa !859
  %247 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %246, i64 %244
  %248 = load i64, ptr %247, align 4
  store i64 %245, ptr %247, align 4
  %249 = add nuw nsw i64 %244, 1
  %250 = load ptr, ptr %186, align 8, !tbaa !859
  %251 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %250, i64 %249
  %252 = load i64, ptr %251, align 4
  store i64 %248, ptr %251, align 4
  %253 = add nuw nsw i64 %244, 2
  %254 = load ptr, ptr %186, align 8, !tbaa !859
  %255 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %254, i64 %253
  %256 = load i64, ptr %255, align 4
  store i64 %252, ptr %255, align 4
  %257 = add nuw nsw i64 %244, 3
  %258 = load ptr, ptr %186, align 8, !tbaa !859
  %259 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %258, i64 %257
  %260 = load i64, ptr %259, align 4
  store i64 %256, ptr %259, align 4
  %261 = add nuw nsw i64 %244, 4
  %262 = trunc i64 %261 to i32
  %263 = icmp eq i32 %13, %262
  br i1 %263, label %235, label %243

264:                                              ; preds = %238, %207, %41
  %265 = phi ptr [ %45, %41 ], [ %189, %207 ], [ %189, %238 ]
  ret ptr %265
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN6dealii14SparseMatrixEZIfE5EntryESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 4 dereferenceable(8) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %444, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::_Vector_base<dealii::SparseMatrixEZ<float>::Entry, std::allocator<dealii::SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !871
  %9 = getelementptr inbounds %"struct.std::_Vector_base<dealii::SparseMatrixEZ<float>::Entry, std::allocator<dealii::SparseMatrixEZ<float>::Entry> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !21
  %11 = ptrtoint ptr %8 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %244, label %16

16:                                               ; preds = %6
  %17 = load i64, ptr %3, align 4
  %18 = ptrtoint ptr %1 to i64
  %19 = sub i64 %12, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp ugt i64 %20, %2
  br i1 %21, label %22, label %118

22:                                               ; preds = %16
  %23 = sub i64 0, %2
  %24 = getelementptr %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %10, i64 %23
  %25 = add i64 %2, 2305843009213693951
  %26 = and i64 %25, 2305843009213693951
  %27 = add nuw nsw i64 %26, 1
  %28 = icmp ult i64 %26, 15
  %29 = and i64 %2, 2305843009213693936
  %30 = icmp eq i64 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %58, label %32

32:                                               ; preds = %22
  %33 = and i64 %27, 4611686018427387888
  %34 = shl i64 %33, 3
  %35 = getelementptr i8, ptr %10, i64 %34
  %36 = shl i64 %33, 3
  %37 = getelementptr i8, ptr %24, i64 %36
  br label %38

38:                                               ; preds = %38, %32
  %39 = phi i64 [ 0, %32 ], [ %54, %38 ]
  %40 = shl i64 %39, 3
  %41 = getelementptr i8, ptr %10, i64 %40
  %42 = shl i64 %39, 3
  %43 = getelementptr i8, ptr %24, i64 %42
  %44 = load <4 x i64>, ptr %43, align 4
  %45 = getelementptr i64, ptr %43, i64 4
  %46 = load <4 x i64>, ptr %45, align 4
  %47 = getelementptr i64, ptr %43, i64 8
  %48 = load <4 x i64>, ptr %47, align 4
  %49 = getelementptr i64, ptr %43, i64 12
  %50 = load <4 x i64>, ptr %49, align 4
  store <4 x i64> %44, ptr %41, align 4
  %51 = getelementptr i64, ptr %41, i64 4
  store <4 x i64> %46, ptr %51, align 4
  %52 = getelementptr i64, ptr %41, i64 8
  store <4 x i64> %48, ptr %52, align 4
  %53 = getelementptr i64, ptr %41, i64 12
  store <4 x i64> %50, ptr %53, align 4
  %54 = add nuw i64 %39, 16
  %55 = icmp eq i64 %54, %33
  br i1 %55, label %56, label %38, !llvm.loop !876

56:                                               ; preds = %38
  %57 = icmp eq i64 %27, %33
  br i1 %57, label %68, label %58

58:                                               ; preds = %22, %56
  %59 = phi ptr [ %10, %22 ], [ %35, %56 ]
  %60 = phi ptr [ %24, %22 ], [ %37, %56 ]
  br label %61

61:                                               ; preds = %58, %61
  %62 = phi ptr [ %66, %61 ], [ %59, %58 ]
  %63 = phi ptr [ %65, %61 ], [ %60, %58 ]
  %64 = load i64, ptr %63, align 4
  store i64 %64, ptr %62, align 4
  %65 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %63, i64 1
  %66 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %62, i64 1
  %67 = icmp eq ptr %65, %10
  br i1 %67, label %68, label %61, !llvm.loop !877

68:                                               ; preds = %61, %56
  %69 = load ptr, ptr %9, align 8, !tbaa !872
  %70 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %69, i64 %2
  store ptr %70, ptr %9, align 8, !tbaa !872
  %71 = ptrtoint ptr %24 to i64
  %72 = sub i64 %71, %18
  %73 = icmp sgt i64 %72, 8
  br i1 %73, label %74, label %78, !prof !23

74:                                               ; preds = %68
  %75 = lshr exact i64 %72, 3
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %10, i64 %76
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %77, ptr align 4 %1, i64 %72, i1 false)
  br label %83

78:                                               ; preds = %68
  %79 = icmp eq i64 %72, 8
  br i1 %79, label %80, label %83

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %10, i64 -1
  %82 = load i64, ptr %1, align 4
  store i64 %82, ptr %81, align 4
  br label %83

83:                                               ; preds = %74, %78, %80
  %84 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %1, i64 %2
  %85 = add i64 %2, 2305843009213693951
  %86 = and i64 %85, 2305843009213693951
  %87 = add nuw nsw i64 %86, 1
  %88 = icmp ult i64 %86, 15
  br i1 %88, label %112, label %89

89:                                               ; preds = %83
  %90 = and i64 %87, 4611686018427387888
  %91 = shl i64 %90, 3
  %92 = getelementptr i8, ptr %1, i64 %91
  %93 = insertelement <4 x i64> poison, i64 %17, i64 0
  %94 = shufflevector <4 x i64> %93, <4 x i64> poison, <4 x i32> zeroinitializer
  %95 = insertelement <4 x i64> poison, i64 %17, i64 0
  %96 = shufflevector <4 x i64> %95, <4 x i64> poison, <4 x i32> zeroinitializer
  %97 = insertelement <4 x i64> poison, i64 %17, i64 0
  %98 = shufflevector <4 x i64> %97, <4 x i64> poison, <4 x i32> zeroinitializer
  %99 = insertelement <4 x i64> poison, i64 %17, i64 0
  %100 = shufflevector <4 x i64> %99, <4 x i64> poison, <4 x i32> zeroinitializer
  br label %101

101:                                              ; preds = %101, %89
  %102 = phi i64 [ 0, %89 ], [ %108, %101 ]
  %103 = shl i64 %102, 3
  %104 = getelementptr i8, ptr %1, i64 %103
  store <4 x i64> %94, ptr %104, align 4
  %105 = getelementptr i64, ptr %104, i64 4
  store <4 x i64> %96, ptr %105, align 4
  %106 = getelementptr i64, ptr %104, i64 8
  store <4 x i64> %98, ptr %106, align 4
  %107 = getelementptr i64, ptr %104, i64 12
  store <4 x i64> %100, ptr %107, align 4
  %108 = add nuw i64 %102, 16
  %109 = icmp eq i64 %108, %90
  br i1 %109, label %110, label %101, !llvm.loop !878

110:                                              ; preds = %101
  %111 = icmp eq i64 %87, %90
  br i1 %111, label %444, label %112

112:                                              ; preds = %83, %110
  %113 = phi ptr [ %1, %83 ], [ %92, %110 ]
  br label %114

114:                                              ; preds = %112, %114
  %115 = phi ptr [ %116, %114 ], [ %113, %112 ]
  store i64 %17, ptr %115, align 4
  %116 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %115, i64 1
  %117 = icmp eq ptr %116, %84
  br i1 %117, label %444, label %114, !llvm.loop !879

118:                                              ; preds = %16
  %119 = sub i64 %2, %20
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %156, label %121

121:                                              ; preds = %118
  %122 = icmp ult i64 %119, 16
  br i1 %122, label %147, label %123

123:                                              ; preds = %121
  %124 = and i64 %119, -16
  %125 = shl i64 %124, 3
  %126 = getelementptr i8, ptr %10, i64 %125
  %127 = and i64 %119, 15
  %128 = insertelement <4 x i64> poison, i64 %17, i64 0
  %129 = shufflevector <4 x i64> %128, <4 x i64> poison, <4 x i32> zeroinitializer
  %130 = insertelement <4 x i64> poison, i64 %17, i64 0
  %131 = shufflevector <4 x i64> %130, <4 x i64> poison, <4 x i32> zeroinitializer
  %132 = insertelement <4 x i64> poison, i64 %17, i64 0
  %133 = shufflevector <4 x i64> %132, <4 x i64> poison, <4 x i32> zeroinitializer
  %134 = insertelement <4 x i64> poison, i64 %17, i64 0
  %135 = shufflevector <4 x i64> %134, <4 x i64> poison, <4 x i32> zeroinitializer
  br label %136

136:                                              ; preds = %136, %123
  %137 = phi i64 [ 0, %123 ], [ %143, %136 ]
  %138 = shl i64 %137, 3
  %139 = getelementptr i8, ptr %10, i64 %138
  store <4 x i64> %129, ptr %139, align 4
  %140 = getelementptr i64, ptr %139, i64 4
  store <4 x i64> %131, ptr %140, align 4
  %141 = getelementptr i64, ptr %139, i64 8
  store <4 x i64> %133, ptr %141, align 4
  %142 = getelementptr i64, ptr %139, i64 12
  store <4 x i64> %135, ptr %142, align 4
  %143 = add nuw i64 %137, 16
  %144 = icmp eq i64 %143, %124
  br i1 %144, label %145, label %136, !llvm.loop !880

145:                                              ; preds = %136
  %146 = icmp eq i64 %119, %124
  br i1 %146, label %156, label %147

147:                                              ; preds = %121, %145
  %148 = phi ptr [ %10, %121 ], [ %126, %145 ]
  %149 = phi i64 [ %119, %121 ], [ %127, %145 ]
  br label %150

150:                                              ; preds = %147, %150
  %151 = phi ptr [ %154, %150 ], [ %148, %147 ]
  %152 = phi i64 [ %153, %150 ], [ %149, %147 ]
  store i64 %17, ptr %151, align 4
  %153 = add i64 %152, -1
  %154 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %151, i64 1
  %155 = icmp eq i64 %153, 0
  br i1 %155, label %156, label %150, !llvm.loop !881

156:                                              ; preds = %150, %145, %118
  %157 = phi ptr [ %10, %118 ], [ %126, %145 ], [ %154, %150 ]
  store ptr %157, ptr %9, align 8, !tbaa !872
  %158 = icmp eq ptr %10, %1
  br i1 %158, label %198, label %159

159:                                              ; preds = %156
  %160 = ptrtoint ptr %157 to i64
  %161 = add i64 %12, -8
  %162 = sub i64 %161, %18
  %163 = lshr i64 %162, 3
  %164 = add nuw nsw i64 %163, 1
  %165 = icmp ult i64 %162, 120
  %166 = sub i64 %160, %18
  %167 = icmp ult i64 %166, 128
  %168 = select i1 %165, i1 true, i1 %167
  br i1 %168, label %195, label %169

169:                                              ; preds = %159
  %170 = and i64 %164, 4611686018427387888
  %171 = shl i64 %170, 3
  %172 = getelementptr i8, ptr %157, i64 %171
  %173 = shl i64 %170, 3
  %174 = getelementptr i8, ptr %1, i64 %173
  br label %175

175:                                              ; preds = %175, %169
  %176 = phi i64 [ 0, %169 ], [ %191, %175 ]
  %177 = shl i64 %176, 3
  %178 = getelementptr i8, ptr %157, i64 %177
  %179 = shl i64 %176, 3
  %180 = getelementptr i8, ptr %1, i64 %179
  %181 = load <4 x i64>, ptr %180, align 4
  %182 = getelementptr i64, ptr %180, i64 4
  %183 = load <4 x i64>, ptr %182, align 4
  %184 = getelementptr i64, ptr %180, i64 8
  %185 = load <4 x i64>, ptr %184, align 4
  %186 = getelementptr i64, ptr %180, i64 12
  %187 = load <4 x i64>, ptr %186, align 4
  store <4 x i64> %181, ptr %178, align 4
  %188 = getelementptr i64, ptr %178, i64 4
  store <4 x i64> %183, ptr %188, align 4
  %189 = getelementptr i64, ptr %178, i64 8
  store <4 x i64> %185, ptr %189, align 4
  %190 = getelementptr i64, ptr %178, i64 12
  store <4 x i64> %187, ptr %190, align 4
  %191 = add nuw i64 %176, 16
  %192 = icmp eq i64 %191, %170
  br i1 %192, label %193, label %175, !llvm.loop !882

193:                                              ; preds = %175
  %194 = icmp eq i64 %164, %170
  br i1 %194, label %207, label %195

195:                                              ; preds = %159, %193
  %196 = phi ptr [ %157, %159 ], [ %172, %193 ]
  %197 = phi ptr [ %1, %159 ], [ %174, %193 ]
  br label %200

198:                                              ; preds = %156
  %199 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %157, i64 %20
  store ptr %199, ptr %9, align 8, !tbaa !872
  br label %444

200:                                              ; preds = %195, %200
  %201 = phi ptr [ %205, %200 ], [ %196, %195 ]
  %202 = phi ptr [ %204, %200 ], [ %197, %195 ]
  %203 = load i64, ptr %202, align 4
  store i64 %203, ptr %201, align 4
  %204 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %202, i64 1
  %205 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %201, i64 1
  %206 = icmp eq ptr %204, %10
  br i1 %206, label %207, label %200, !llvm.loop !883

207:                                              ; preds = %200, %193
  %208 = load ptr, ptr %9, align 8, !tbaa !872
  %209 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %208, i64 %20
  store ptr %209, ptr %9, align 8, !tbaa !872
  %210 = add i64 %12, -8
  %211 = sub i64 %210, %18
  %212 = lshr i64 %211, 3
  %213 = add nuw nsw i64 %212, 1
  %214 = icmp ult i64 %211, 120
  br i1 %214, label %238, label %215

215:                                              ; preds = %207
  %216 = and i64 %213, 4611686018427387888
  %217 = shl i64 %216, 3
  %218 = getelementptr i8, ptr %1, i64 %217
  %219 = insertelement <4 x i64> poison, i64 %17, i64 0
  %220 = shufflevector <4 x i64> %219, <4 x i64> poison, <4 x i32> zeroinitializer
  %221 = insertelement <4 x i64> poison, i64 %17, i64 0
  %222 = shufflevector <4 x i64> %221, <4 x i64> poison, <4 x i32> zeroinitializer
  %223 = insertelement <4 x i64> poison, i64 %17, i64 0
  %224 = shufflevector <4 x i64> %223, <4 x i64> poison, <4 x i32> zeroinitializer
  %225 = insertelement <4 x i64> poison, i64 %17, i64 0
  %226 = shufflevector <4 x i64> %225, <4 x i64> poison, <4 x i32> zeroinitializer
  br label %227

227:                                              ; preds = %227, %215
  %228 = phi i64 [ 0, %215 ], [ %234, %227 ]
  %229 = shl i64 %228, 3
  %230 = getelementptr i8, ptr %1, i64 %229
  store <4 x i64> %220, ptr %230, align 4
  %231 = getelementptr i64, ptr %230, i64 4
  store <4 x i64> %222, ptr %231, align 4
  %232 = getelementptr i64, ptr %230, i64 8
  store <4 x i64> %224, ptr %232, align 4
  %233 = getelementptr i64, ptr %230, i64 12
  store <4 x i64> %226, ptr %233, align 4
  %234 = add nuw i64 %228, 16
  %235 = icmp eq i64 %234, %216
  br i1 %235, label %236, label %227, !llvm.loop !884

236:                                              ; preds = %227
  %237 = icmp eq i64 %213, %216
  br i1 %237, label %444, label %238

238:                                              ; preds = %207, %236
  %239 = phi ptr [ %1, %207 ], [ %218, %236 ]
  br label %240

240:                                              ; preds = %238, %240
  %241 = phi ptr [ %242, %240 ], [ %239, %238 ]
  store i64 %17, ptr %241, align 4
  %242 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %241, i64 1
  %243 = icmp eq ptr %242, %10
  br i1 %243, label %444, label %240, !llvm.loop !885

244:                                              ; preds = %6
  %245 = load ptr, ptr %0, align 8, !tbaa !859
  %246 = ptrtoint ptr %245 to i64
  %247 = sub i64 %12, %246
  %248 = ashr exact i64 %247, 3
  %249 = sub nsw i64 1152921504606846975, %248
  %250 = icmp ult i64 %249, %2
  br i1 %250, label %251, label %252

251:                                              ; preds = %244
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.28) #22
  unreachable

252:                                              ; preds = %244
  %253 = tail call i64 @llvm.umax.i64(i64 %248, i64 %2)
  %254 = add i64 %253, %248
  %255 = icmp ult i64 %254, %248
  %256 = icmp ugt i64 %254, 1152921504606846975
  %257 = or i1 %255, %256
  %258 = select i1 %257, i64 1152921504606846975, i64 %254
  %259 = ptrtoint ptr %1 to i64
  %260 = sub i64 %259, %246
  %261 = ashr i64 %260, 3
  %262 = icmp eq i64 %258, 0
  br i1 %262, label %266, label %263

263:                                              ; preds = %252
  %264 = shl nuw nsw i64 %258, 3
  %265 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %264) #21
  br label %266

266:                                              ; preds = %252, %263
  %267 = phi ptr [ %265, %263 ], [ null, %252 ]
  %268 = ptrtoint ptr %267 to i64
  %269 = getelementptr %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %267, i64 %261
  %270 = icmp ult i64 %2, 16
  br i1 %270, label %299, label %271

271:                                              ; preds = %266
  %272 = and i64 %260, -8
  %273 = shl i64 %2, 3
  %274 = add i64 %272, %273
  %275 = getelementptr i8, ptr %267, i64 %274
  %276 = getelementptr inbounds i8, ptr %3, i64 8
  %277 = icmp ult ptr %269, %276
  %278 = icmp ugt ptr %275, %3
  %279 = and i1 %277, %278
  br i1 %279, label %299, label %280

280:                                              ; preds = %271
  %281 = and i64 %2, -16
  %282 = shl i64 %281, 3
  %283 = getelementptr i8, ptr %269, i64 %282
  %284 = and i64 %2, 15
  %285 = load i64, ptr %3, align 4, !alias.scope !886
  %286 = insertelement <4 x i64> poison, i64 %285, i64 0
  %287 = shufflevector <4 x i64> %286, <4 x i64> poison, <4 x i32> zeroinitializer
  br label %288

288:                                              ; preds = %288, %280
  %289 = phi i64 [ 0, %280 ], [ %295, %288 ]
  %290 = shl i64 %289, 3
  %291 = getelementptr i8, ptr %269, i64 %290
  store <4 x i64> %287, ptr %291, align 4, !alias.scope !889, !noalias !886
  %292 = getelementptr i64, ptr %291, i64 4
  store <4 x i64> %287, ptr %292, align 4, !alias.scope !889, !noalias !886
  %293 = getelementptr i64, ptr %291, i64 8
  store <4 x i64> %287, ptr %293, align 4, !alias.scope !889, !noalias !886
  %294 = getelementptr i64, ptr %291, i64 12
  store <4 x i64> %287, ptr %294, align 4, !alias.scope !889, !noalias !886
  %295 = add nuw i64 %289, 16
  %296 = icmp eq i64 %295, %281
  br i1 %296, label %297, label %288, !llvm.loop !891

297:                                              ; preds = %288
  %298 = icmp eq i64 %281, %2
  br i1 %298, label %339, label %299

299:                                              ; preds = %271, %266, %297
  %300 = phi ptr [ %269, %271 ], [ %269, %266 ], [ %283, %297 ]
  %301 = phi i64 [ %2, %271 ], [ %2, %266 ], [ %284, %297 ]
  %302 = add i64 %301, -1
  %303 = and i64 %301, 7
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %314, label %305

305:                                              ; preds = %299, %305
  %306 = phi ptr [ %311, %305 ], [ %300, %299 ]
  %307 = phi i64 [ %310, %305 ], [ %301, %299 ]
  %308 = phi i64 [ %312, %305 ], [ 0, %299 ]
  %309 = load i64, ptr %3, align 4
  store i64 %309, ptr %306, align 4
  %310 = add i64 %307, -1
  %311 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %306, i64 1
  %312 = add i64 %308, 1
  %313 = icmp eq i64 %312, %303
  br i1 %313, label %314, label %305, !llvm.loop !892

314:                                              ; preds = %305, %299
  %315 = phi ptr [ %300, %299 ], [ %311, %305 ]
  %316 = phi i64 [ %301, %299 ], [ %310, %305 ]
  %317 = icmp ult i64 %302, 7
  br i1 %317, label %339, label %318

318:                                              ; preds = %314, %318
  %319 = phi ptr [ %337, %318 ], [ %315, %314 ]
  %320 = phi i64 [ %336, %318 ], [ %316, %314 ]
  %321 = load i64, ptr %3, align 4
  store i64 %321, ptr %319, align 4
  %322 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %319, i64 1
  %323 = load i64, ptr %3, align 4
  store i64 %323, ptr %322, align 4
  %324 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %319, i64 2
  %325 = load i64, ptr %3, align 4
  store i64 %325, ptr %324, align 4
  %326 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %319, i64 3
  %327 = load i64, ptr %3, align 4
  store i64 %327, ptr %326, align 4
  %328 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %319, i64 4
  %329 = load i64, ptr %3, align 4
  store i64 %329, ptr %328, align 4
  %330 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %319, i64 5
  %331 = load i64, ptr %3, align 4
  store i64 %331, ptr %330, align 4
  %332 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %319, i64 6
  %333 = load i64, ptr %3, align 4
  store i64 %333, ptr %332, align 4
  %334 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %319, i64 7
  %335 = load i64, ptr %3, align 4
  store i64 %335, ptr %334, align 4
  %336 = add i64 %320, -8
  %337 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %319, i64 8
  %338 = icmp eq i64 %336, 0
  br i1 %338, label %339, label %318, !llvm.loop !893

339:                                              ; preds = %314, %318, %297
  %340 = icmp eq ptr %245, %1
  br i1 %340, label %386, label %341

341:                                              ; preds = %339
  %342 = add i64 %259, -8
  %343 = sub i64 %342, %246
  %344 = lshr i64 %343, 3
  %345 = add nuw nsw i64 %344, 1
  %346 = icmp ult i64 %343, 120
  %347 = sub i64 %268, %246
  %348 = icmp ult i64 %347, 128
  %349 = or i1 %346, %348
  br i1 %349, label %376, label %350

350:                                              ; preds = %341
  %351 = and i64 %345, 4611686018427387888
  %352 = shl i64 %351, 3
  %353 = getelementptr i8, ptr %267, i64 %352
  %354 = shl i64 %351, 3
  %355 = getelementptr i8, ptr %245, i64 %354
  br label %356

356:                                              ; preds = %356, %350
  %357 = phi i64 [ 0, %350 ], [ %372, %356 ]
  %358 = shl i64 %357, 3
  %359 = getelementptr i8, ptr %267, i64 %358
  %360 = shl i64 %357, 3
  %361 = getelementptr i8, ptr %245, i64 %360
  %362 = load <4 x i64>, ptr %361, align 4
  %363 = getelementptr i64, ptr %361, i64 4
  %364 = load <4 x i64>, ptr %363, align 4
  %365 = getelementptr i64, ptr %361, i64 8
  %366 = load <4 x i64>, ptr %365, align 4
  %367 = getelementptr i64, ptr %361, i64 12
  %368 = load <4 x i64>, ptr %367, align 4
  store <4 x i64> %362, ptr %359, align 4
  %369 = getelementptr i64, ptr %359, i64 4
  store <4 x i64> %364, ptr %369, align 4
  %370 = getelementptr i64, ptr %359, i64 8
  store <4 x i64> %366, ptr %370, align 4
  %371 = getelementptr i64, ptr %359, i64 12
  store <4 x i64> %368, ptr %371, align 4
  %372 = add nuw i64 %357, 16
  %373 = icmp eq i64 %372, %351
  br i1 %373, label %374, label %356, !llvm.loop !894

374:                                              ; preds = %356
  %375 = icmp eq i64 %345, %351
  br i1 %375, label %386, label %376

376:                                              ; preds = %341, %374
  %377 = phi ptr [ %267, %341 ], [ %353, %374 ]
  %378 = phi ptr [ %245, %341 ], [ %355, %374 ]
  br label %379

379:                                              ; preds = %376, %379
  %380 = phi ptr [ %384, %379 ], [ %377, %376 ]
  %381 = phi ptr [ %383, %379 ], [ %378, %376 ]
  %382 = load i64, ptr %381, align 4
  store i64 %382, ptr %380, align 4
  %383 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %381, i64 1
  %384 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %380, i64 1
  %385 = icmp eq ptr %383, %1
  br i1 %385, label %386, label %379, !llvm.loop !895

386:                                              ; preds = %379, %374, %339
  %387 = phi ptr [ %267, %339 ], [ %353, %374 ], [ %384, %379 ]
  %388 = ptrtoint ptr %387 to i64
  %389 = getelementptr %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %387, i64 %2
  %390 = icmp eq ptr %10, %1
  br i1 %390, label %438, label %391

391:                                              ; preds = %386
  %392 = add i64 %12, -8
  %393 = sub i64 %392, %259
  %394 = lshr i64 %393, 3
  %395 = add nuw nsw i64 %394, 1
  %396 = icmp ult i64 %393, 120
  br i1 %396, label %428, label %397

397:                                              ; preds = %391
  %398 = shl i64 %2, 3
  %399 = add i64 %398, %388
  %400 = sub i64 %399, %259
  %401 = icmp ult i64 %400, 128
  br i1 %401, label %428, label %402

402:                                              ; preds = %397
  %403 = and i64 %395, 4611686018427387888
  %404 = shl i64 %403, 3
  %405 = getelementptr i8, ptr %389, i64 %404
  %406 = shl i64 %403, 3
  %407 = getelementptr i8, ptr %1, i64 %406
  br label %408

408:                                              ; preds = %408, %402
  %409 = phi i64 [ 0, %402 ], [ %424, %408 ]
  %410 = shl i64 %409, 3
  %411 = getelementptr i8, ptr %389, i64 %410
  %412 = shl i64 %409, 3
  %413 = getelementptr i8, ptr %1, i64 %412
  %414 = load <4 x i64>, ptr %413, align 4
  %415 = getelementptr i64, ptr %413, i64 4
  %416 = load <4 x i64>, ptr %415, align 4
  %417 = getelementptr i64, ptr %413, i64 8
  %418 = load <4 x i64>, ptr %417, align 4
  %419 = getelementptr i64, ptr %413, i64 12
  %420 = load <4 x i64>, ptr %419, align 4
  store <4 x i64> %414, ptr %411, align 4
  %421 = getelementptr i64, ptr %411, i64 4
  store <4 x i64> %416, ptr %421, align 4
  %422 = getelementptr i64, ptr %411, i64 8
  store <4 x i64> %418, ptr %422, align 4
  %423 = getelementptr i64, ptr %411, i64 12
  store <4 x i64> %420, ptr %423, align 4
  %424 = add nuw i64 %409, 16
  %425 = icmp eq i64 %424, %403
  br i1 %425, label %426, label %408, !llvm.loop !896

426:                                              ; preds = %408
  %427 = icmp eq i64 %395, %403
  br i1 %427, label %438, label %428

428:                                              ; preds = %397, %391, %426
  %429 = phi ptr [ %389, %397 ], [ %389, %391 ], [ %405, %426 ]
  %430 = phi ptr [ %1, %397 ], [ %1, %391 ], [ %407, %426 ]
  br label %431

431:                                              ; preds = %428, %431
  %432 = phi ptr [ %436, %431 ], [ %429, %428 ]
  %433 = phi ptr [ %435, %431 ], [ %430, %428 ]
  %434 = load i64, ptr %433, align 4
  store i64 %434, ptr %432, align 4
  %435 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %433, i64 1
  %436 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %432, i64 1
  %437 = icmp eq ptr %435, %10
  br i1 %437, label %438, label %431, !llvm.loop !897

438:                                              ; preds = %431, %426, %386
  %439 = phi ptr [ %389, %386 ], [ %405, %426 ], [ %436, %431 ]
  %440 = icmp eq ptr %245, null
  br i1 %440, label %442, label %441

441:                                              ; preds = %438
  tail call void @_ZdlPv(ptr noundef nonnull %245) #23
  br label %442

442:                                              ; preds = %438, %441
  store ptr %267, ptr %0, align 8, !tbaa !859
  store ptr %439, ptr %9, align 8, !tbaa !872
  %443 = getelementptr inbounds %"struct.dealii::SparseMatrixEZ<float>::Entry", ptr %267, i64 %258
  store ptr %443, ptr %7, align 8, !tbaa !871
  br label %444

444:                                              ; preds = %240, %114, %236, %110, %198, %442, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 4 dereferenceable(4) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %251, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !417
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !21
  %11 = ptrtoint ptr %8 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %169, label %16

16:                                               ; preds = %6
  %17 = load i32, ptr %3, align 4, !tbaa !22
  %18 = ptrtoint ptr %1 to i64
  %19 = sub i64 %12, %18
  %20 = ashr exact i64 %19, 2
  %21 = icmp ugt i64 %20, %2
  br i1 %21, label %22, label %82

22:                                               ; preds = %16
  %23 = sub i64 0, %2
  %24 = getelementptr inbounds i32, ptr %10, i64 %23
  %25 = ptrtoint ptr %24 to i64
  %26 = shl i64 %2, 2
  %27 = icmp sgt i64 %26, 4
  br i1 %27, label %28, label %29, !prof !23

28:                                               ; preds = %22
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %10, ptr nonnull align 4 %24, i64 %26, i1 false)
  br label %33

29:                                               ; preds = %22
  %30 = icmp eq i64 %26, 4
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = load i32, ptr %24, align 4, !tbaa !22
  store i32 %32, ptr %10, align 4, !tbaa !22
  br label %33

33:                                               ; preds = %28, %29, %31
  %34 = load ptr, ptr %9, align 8, !tbaa !313
  %35 = getelementptr inbounds i32, ptr %34, i64 %2
  store ptr %35, ptr %9, align 8, !tbaa !313
  %36 = sub i64 %25, %18
  %37 = icmp sgt i64 %36, 4
  br i1 %37, label %38, label %42, !prof !23

38:                                               ; preds = %33
  %39 = lshr exact i64 %36, 2
  %40 = sub nsw i64 0, %39
  %41 = getelementptr inbounds i32, ptr %10, i64 %40
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %41, ptr align 4 %1, i64 %36, i1 false)
  br label %47

42:                                               ; preds = %33
  %43 = icmp eq i64 %36, 4
  br i1 %43, label %44, label %47

44:                                               ; preds = %42
  %45 = getelementptr inbounds i32, ptr %10, i64 -1
  %46 = load i32, ptr %1, align 4, !tbaa !22
  store i32 %46, ptr %45, align 4, !tbaa !22
  br label %47

47:                                               ; preds = %38, %42, %44
  %48 = getelementptr inbounds i32, ptr %1, i64 %2
  %49 = add i64 %2, 4611686018427387903
  %50 = and i64 %49, 4611686018427387903
  %51 = add nuw nsw i64 %50, 1
  %52 = icmp ult i64 %50, 31
  br i1 %52, label %76, label %53

53:                                               ; preds = %47
  %54 = and i64 %51, 9223372036854775776
  %55 = shl i64 %54, 2
  %56 = getelementptr i8, ptr %1, i64 %55
  %57 = insertelement <8 x i32> poison, i32 %17, i64 0
  %58 = shufflevector <8 x i32> %57, <8 x i32> poison, <8 x i32> zeroinitializer
  %59 = insertelement <8 x i32> poison, i32 %17, i64 0
  %60 = shufflevector <8 x i32> %59, <8 x i32> poison, <8 x i32> zeroinitializer
  %61 = insertelement <8 x i32> poison, i32 %17, i64 0
  %62 = shufflevector <8 x i32> %61, <8 x i32> poison, <8 x i32> zeroinitializer
  %63 = insertelement <8 x i32> poison, i32 %17, i64 0
  %64 = shufflevector <8 x i32> %63, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %65

65:                                               ; preds = %65, %53
  %66 = phi i64 [ 0, %53 ], [ %72, %65 ]
  %67 = shl i64 %66, 2
  %68 = getelementptr i8, ptr %1, i64 %67
  store <8 x i32> %58, ptr %68, align 4, !tbaa !22
  %69 = getelementptr i32, ptr %68, i64 8
  store <8 x i32> %60, ptr %69, align 4, !tbaa !22
  %70 = getelementptr i32, ptr %68, i64 16
  store <8 x i32> %62, ptr %70, align 4, !tbaa !22
  %71 = getelementptr i32, ptr %68, i64 24
  store <8 x i32> %64, ptr %71, align 4, !tbaa !22
  %72 = add nuw i64 %66, 32
  %73 = icmp eq i64 %72, %54
  br i1 %73, label %74, label %65, !llvm.loop !898

74:                                               ; preds = %65
  %75 = icmp eq i64 %51, %54
  br i1 %75, label %251, label %76

76:                                               ; preds = %47, %74
  %77 = phi ptr [ %1, %47 ], [ %56, %74 ]
  br label %78

78:                                               ; preds = %76, %78
  %79 = phi ptr [ %80, %78 ], [ %77, %76 ]
  store i32 %17, ptr %79, align 4, !tbaa !22
  %80 = getelementptr inbounds i32, ptr %79, i64 1
  %81 = icmp eq ptr %80, %48
  br i1 %81, label %251, label %78, !llvm.loop !899

82:                                               ; preds = %16
  %83 = icmp eq i64 %20, %2
  br i1 %83, label %122, label %84

84:                                               ; preds = %82
  %85 = sub i64 %2, %20
  %86 = getelementptr inbounds i32, ptr %10, i64 %85
  %87 = shl nsw i64 %2, 2
  %88 = add i64 %87, -4
  %89 = sub i64 %88, %19
  %90 = lshr i64 %89, 2
  %91 = add nuw nsw i64 %90, 1
  %92 = icmp ult i64 %89, 124
  br i1 %92, label %116, label %93

93:                                               ; preds = %84
  %94 = and i64 %91, 9223372036854775776
  %95 = shl i64 %94, 2
  %96 = getelementptr i8, ptr %10, i64 %95
  %97 = insertelement <8 x i32> poison, i32 %17, i64 0
  %98 = shufflevector <8 x i32> %97, <8 x i32> poison, <8 x i32> zeroinitializer
  %99 = insertelement <8 x i32> poison, i32 %17, i64 0
  %100 = shufflevector <8 x i32> %99, <8 x i32> poison, <8 x i32> zeroinitializer
  %101 = insertelement <8 x i32> poison, i32 %17, i64 0
  %102 = shufflevector <8 x i32> %101, <8 x i32> poison, <8 x i32> zeroinitializer
  %103 = insertelement <8 x i32> poison, i32 %17, i64 0
  %104 = shufflevector <8 x i32> %103, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %105

105:                                              ; preds = %105, %93
  %106 = phi i64 [ 0, %93 ], [ %112, %105 ]
  %107 = shl i64 %106, 2
  %108 = getelementptr i8, ptr %10, i64 %107
  store <8 x i32> %98, ptr %108, align 4, !tbaa !22
  %109 = getelementptr i32, ptr %108, i64 8
  store <8 x i32> %100, ptr %109, align 4, !tbaa !22
  %110 = getelementptr i32, ptr %108, i64 16
  store <8 x i32> %102, ptr %110, align 4, !tbaa !22
  %111 = getelementptr i32, ptr %108, i64 24
  store <8 x i32> %104, ptr %111, align 4, !tbaa !22
  %112 = add nuw i64 %106, 32
  %113 = icmp eq i64 %112, %94
  br i1 %113, label %114, label %105, !llvm.loop !900

114:                                              ; preds = %105
  %115 = icmp eq i64 %91, %94
  br i1 %115, label %122, label %116

116:                                              ; preds = %84, %114
  %117 = phi ptr [ %10, %84 ], [ %96, %114 ]
  br label %118

118:                                              ; preds = %116, %118
  %119 = phi ptr [ %120, %118 ], [ %117, %116 ]
  store i32 %17, ptr %119, align 4, !tbaa !22
  %120 = getelementptr inbounds i32, ptr %119, i64 1
  %121 = icmp eq ptr %120, %86
  br i1 %121, label %122, label %118, !llvm.loop !901

122:                                              ; preds = %118, %114, %82
  %123 = phi ptr [ %10, %82 ], [ %86, %114 ], [ %86, %118 ]
  store ptr %123, ptr %9, align 8, !tbaa !313
  %124 = icmp sgt i64 %19, 4
  br i1 %124, label %125, label %126, !prof !23

125:                                              ; preds = %122
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %123, ptr align 4 %1, i64 %19, i1 false)
  br label %130

126:                                              ; preds = %122
  %127 = icmp eq i64 %19, 4
  br i1 %127, label %128, label %130

128:                                              ; preds = %126
  %129 = load i32, ptr %1, align 4, !tbaa !22
  store i32 %129, ptr %123, align 4, !tbaa !22
  br label %130

130:                                              ; preds = %125, %126, %128
  %131 = load ptr, ptr %9, align 8, !tbaa !313
  %132 = getelementptr inbounds i32, ptr %131, i64 %20
  store ptr %132, ptr %9, align 8, !tbaa !313
  %133 = icmp eq ptr %10, %1
  br i1 %133, label %251, label %134

134:                                              ; preds = %130
  %135 = add i64 %12, -4
  %136 = sub i64 %135, %18
  %137 = lshr i64 %136, 2
  %138 = add nuw nsw i64 %137, 1
  %139 = icmp ult i64 %136, 124
  br i1 %139, label %163, label %140

140:                                              ; preds = %134
  %141 = and i64 %138, 9223372036854775776
  %142 = shl i64 %141, 2
  %143 = getelementptr i8, ptr %1, i64 %142
  %144 = insertelement <8 x i32> poison, i32 %17, i64 0
  %145 = shufflevector <8 x i32> %144, <8 x i32> poison, <8 x i32> zeroinitializer
  %146 = insertelement <8 x i32> poison, i32 %17, i64 0
  %147 = shufflevector <8 x i32> %146, <8 x i32> poison, <8 x i32> zeroinitializer
  %148 = insertelement <8 x i32> poison, i32 %17, i64 0
  %149 = shufflevector <8 x i32> %148, <8 x i32> poison, <8 x i32> zeroinitializer
  %150 = insertelement <8 x i32> poison, i32 %17, i64 0
  %151 = shufflevector <8 x i32> %150, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %152

152:                                              ; preds = %152, %140
  %153 = phi i64 [ 0, %140 ], [ %159, %152 ]
  %154 = shl i64 %153, 2
  %155 = getelementptr i8, ptr %1, i64 %154
  store <8 x i32> %145, ptr %155, align 4, !tbaa !22
  %156 = getelementptr i32, ptr %155, i64 8
  store <8 x i32> %147, ptr %156, align 4, !tbaa !22
  %157 = getelementptr i32, ptr %155, i64 16
  store <8 x i32> %149, ptr %157, align 4, !tbaa !22
  %158 = getelementptr i32, ptr %155, i64 24
  store <8 x i32> %151, ptr %158, align 4, !tbaa !22
  %159 = add nuw i64 %153, 32
  %160 = icmp eq i64 %159, %141
  br i1 %160, label %161, label %152, !llvm.loop !902

161:                                              ; preds = %152
  %162 = icmp eq i64 %138, %141
  br i1 %162, label %251, label %163

163:                                              ; preds = %134, %161
  %164 = phi ptr [ %1, %134 ], [ %143, %161 ]
  br label %165

165:                                              ; preds = %163, %165
  %166 = phi ptr [ %167, %165 ], [ %164, %163 ]
  store i32 %17, ptr %166, align 4, !tbaa !22
  %167 = getelementptr inbounds i32, ptr %166, i64 1
  %168 = icmp eq ptr %167, %10
  br i1 %168, label %251, label %165, !llvm.loop !903

169:                                              ; preds = %6
  %170 = load ptr, ptr %0, align 8, !tbaa !58
  %171 = ptrtoint ptr %170 to i64
  %172 = sub i64 %12, %171
  %173 = ashr exact i64 %172, 2
  %174 = sub nsw i64 2305843009213693951, %173
  %175 = icmp ult i64 %174, %2
  br i1 %175, label %176, label %177

176:                                              ; preds = %169
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.28) #22
  unreachable

177:                                              ; preds = %169
  %178 = tail call i64 @llvm.umax.i64(i64 %173, i64 %2)
  %179 = add i64 %178, %173
  %180 = icmp ult i64 %179, %173
  %181 = icmp ugt i64 %179, 2305843009213693951
  %182 = or i1 %180, %181
  %183 = select i1 %182, i64 2305843009213693951, i64 %179
  %184 = ptrtoint ptr %1 to i64
  %185 = sub i64 %184, %171
  %186 = ashr exact i64 %185, 2
  %187 = icmp eq i64 %183, 0
  br i1 %187, label %191, label %188

188:                                              ; preds = %177
  %189 = shl nuw nsw i64 %183, 2
  %190 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %189) #21
  br label %191

191:                                              ; preds = %188, %177
  %192 = phi ptr [ %190, %188 ], [ null, %177 ]
  %193 = getelementptr inbounds i32, ptr %192, i64 %186
  %194 = getelementptr inbounds i32, ptr %193, i64 %2
  %195 = load i32, ptr %3, align 4, !tbaa !22
  %196 = add i64 %2, 4611686018427387903
  %197 = and i64 %196, 4611686018427387903
  %198 = add nuw nsw i64 %197, 1
  %199 = icmp ult i64 %197, 31
  br i1 %199, label %223, label %200

200:                                              ; preds = %191
  %201 = and i64 %198, 9223372036854775776
  %202 = shl i64 %201, 2
  %203 = getelementptr i8, ptr %193, i64 %202
  %204 = insertelement <8 x i32> poison, i32 %195, i64 0
  %205 = shufflevector <8 x i32> %204, <8 x i32> poison, <8 x i32> zeroinitializer
  %206 = insertelement <8 x i32> poison, i32 %195, i64 0
  %207 = shufflevector <8 x i32> %206, <8 x i32> poison, <8 x i32> zeroinitializer
  %208 = insertelement <8 x i32> poison, i32 %195, i64 0
  %209 = shufflevector <8 x i32> %208, <8 x i32> poison, <8 x i32> zeroinitializer
  %210 = insertelement <8 x i32> poison, i32 %195, i64 0
  %211 = shufflevector <8 x i32> %210, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %212

212:                                              ; preds = %212, %200
  %213 = phi i64 [ 0, %200 ], [ %219, %212 ]
  %214 = shl i64 %213, 2
  %215 = getelementptr i8, ptr %193, i64 %214
  store <8 x i32> %205, ptr %215, align 4, !tbaa !22
  %216 = getelementptr i32, ptr %215, i64 8
  store <8 x i32> %207, ptr %216, align 4, !tbaa !22
  %217 = getelementptr i32, ptr %215, i64 16
  store <8 x i32> %209, ptr %217, align 4, !tbaa !22
  %218 = getelementptr i32, ptr %215, i64 24
  store <8 x i32> %211, ptr %218, align 4, !tbaa !22
  %219 = add nuw i64 %213, 32
  %220 = icmp eq i64 %219, %201
  br i1 %220, label %221, label %212, !llvm.loop !904

221:                                              ; preds = %212
  %222 = icmp eq i64 %198, %201
  br i1 %222, label %229, label %223

223:                                              ; preds = %191, %221
  %224 = phi ptr [ %193, %191 ], [ %203, %221 ]
  br label %225

225:                                              ; preds = %223, %225
  %226 = phi ptr [ %227, %225 ], [ %224, %223 ]
  store i32 %195, ptr %226, align 4, !tbaa !22
  %227 = getelementptr inbounds i32, ptr %226, i64 1
  %228 = icmp eq ptr %227, %194
  br i1 %228, label %229, label %225, !llvm.loop !905

229:                                              ; preds = %225, %221
  %230 = icmp sgt i64 %185, 4
  br i1 %230, label %231, label %232, !prof !23

231:                                              ; preds = %229
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %192, ptr align 4 %170, i64 %185, i1 false)
  br label %236

232:                                              ; preds = %229
  %233 = icmp eq i64 %185, 4
  br i1 %233, label %234, label %236

234:                                              ; preds = %232
  %235 = load i32, ptr %170, align 4, !tbaa !22
  store i32 %235, ptr %192, align 4, !tbaa !22
  br label %236

236:                                              ; preds = %234, %232, %231
  %237 = sub i64 %12, %184
  %238 = icmp sgt i64 %237, 4
  br i1 %238, label %239, label %240, !prof !23

239:                                              ; preds = %236
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %194, ptr align 4 %1, i64 %237, i1 false)
  br label %244

240:                                              ; preds = %236
  %241 = icmp eq i64 %237, 4
  br i1 %241, label %242, label %244

242:                                              ; preds = %240
  %243 = load i32, ptr %1, align 4, !tbaa !22
  store i32 %243, ptr %194, align 4, !tbaa !22
  br label %244

244:                                              ; preds = %242, %240, %239
  %245 = ashr exact i64 %237, 2
  %246 = getelementptr inbounds i32, ptr %194, i64 %245
  %247 = icmp eq ptr %170, null
  br i1 %247, label %249, label %248

248:                                              ; preds = %244
  tail call void @_ZdlPv(ptr noundef nonnull %170) #23
  br label %249

249:                                              ; preds = %244, %248
  store ptr %192, ptr %0, align 8, !tbaa !58
  store ptr %246, ptr %9, align 8, !tbaa !313
  %250 = getelementptr inbounds i32, ptr %192, i64 %183
  store ptr %250, ptr %7, align 8, !tbaa !417
  br label %251

251:                                              ; preds = %165, %78, %161, %74, %130, %249, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %0, ptr %1, i64 noundef %2) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %5 = ptrtoint ptr %0 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %6, %5
  %8 = icmp sgt i64 %7, 64
  br i1 %8, label %9, label %123

9:                                                ; preds = %3
  %10 = getelementptr inbounds i32, ptr %0, i64 1
  br label %11

11:                                               ; preds = %9, %119
  %12 = phi i64 [ %7, %9 ], [ %121, %119 ]
  %13 = phi i64 [ %2, %9 ], [ %76, %119 ]
  %14 = phi ptr [ %1, %9 ], [ %107, %119 ]
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %16, label %74

16:                                               ; preds = %11
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_(ptr %0, ptr %14, ptr noundef nonnull align 1 dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  br label %17

17:                                               ; preds = %16, %70
  %18 = phi ptr [ %19, %70 ], [ %14, %16 ]
  %19 = getelementptr inbounds i32, ptr %18, i64 -1
  %20 = load i32, ptr %19, align 4, !tbaa !22
  %21 = load i32, ptr %0, align 4, !tbaa !22
  store i32 %21, ptr %19, align 4, !tbaa !22
  %22 = ptrtoint ptr %19 to i64
  %23 = sub i64 %22, %5
  %24 = ashr exact i64 %23, 2
  %25 = add nsw i64 %24, -1
  %26 = sdiv i64 %25, 2
  %27 = icmp sgt i64 %23, 8
  br i1 %27, label %28, label %43

28:                                               ; preds = %17, %28
  %29 = phi i64 [ %38, %28 ], [ 0, %17 ]
  %30 = shl i64 %29, 1
  %31 = add i64 %30, 2
  %32 = getelementptr inbounds i32, ptr %0, i64 %31
  %33 = or i64 %30, 1
  %34 = getelementptr inbounds i32, ptr %0, i64 %33
  %35 = load i32, ptr %32, align 4, !tbaa !22
  %36 = load i32, ptr %34, align 4, !tbaa !22
  %37 = icmp ult i32 %35, %36
  %38 = select i1 %37, i64 %33, i64 %31
  %39 = getelementptr inbounds i32, ptr %0, i64 %38
  %40 = load i32, ptr %39, align 4, !tbaa !22
  %41 = getelementptr inbounds i32, ptr %0, i64 %29
  store i32 %40, ptr %41, align 4, !tbaa !22
  %42 = icmp slt i64 %38, %26
  br i1 %42, label %28, label %43

43:                                               ; preds = %28, %17
  %44 = phi i64 [ 0, %17 ], [ %38, %28 ]
  %45 = and i64 %23, 4
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %43
  %48 = add nsw i64 %24, -2
  %49 = sdiv i64 %48, 2
  %50 = icmp eq i64 %44, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = shl i64 %44, 1
  %53 = or i64 %52, 1
  %54 = getelementptr inbounds i32, ptr %0, i64 %53
  %55 = load i32, ptr %54, align 4, !tbaa !22
  %56 = getelementptr inbounds i32, ptr %0, i64 %44
  store i32 %55, ptr %56, align 4, !tbaa !22
  br label %57

57:                                               ; preds = %51, %47, %43
  %58 = phi i64 [ %53, %51 ], [ %44, %47 ], [ %44, %43 ]
  %59 = icmp sgt i64 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %57, %67
  %61 = phi i64 [ %63, %67 ], [ %58, %57 ]
  %62 = add nsw i64 %61, -1
  %63 = lshr i64 %62, 1
  %64 = getelementptr inbounds i32, ptr %0, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !22
  %66 = icmp ult i32 %65, %20
  br i1 %66, label %67, label %70

67:                                               ; preds = %60
  %68 = getelementptr inbounds i32, ptr %0, i64 %61
  store i32 %65, ptr %68, align 4, !tbaa !22
  %69 = icmp ult i64 %62, 2
  br i1 %69, label %70, label %60

70:                                               ; preds = %67, %60, %57
  %71 = phi i64 [ %58, %57 ], [ %61, %60 ], [ 0, %67 ]
  %72 = getelementptr inbounds i32, ptr %0, i64 %71
  store i32 %20, ptr %72, align 4, !tbaa !22
  %73 = icmp sgt i64 %23, 4
  br i1 %73, label %17, label %123

74:                                               ; preds = %11
  %75 = lshr i64 %12, 3
  %76 = add nsw i64 %13, -1
  %77 = getelementptr inbounds i32, ptr %0, i64 %75
  %78 = getelementptr inbounds i32, ptr %14, i64 -1
  %79 = load i32, ptr %10, align 4, !tbaa !22
  %80 = load i32, ptr %77, align 4, !tbaa !22
  %81 = icmp ult i32 %79, %80
  %82 = load i32, ptr %78, align 4, !tbaa !22
  br i1 %81, label %83, label %92

83:                                               ; preds = %74
  %84 = icmp ult i32 %80, %82
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = load i32, ptr %0, align 4, !tbaa !22
  store i32 %80, ptr %0, align 4, !tbaa !22
  store i32 %86, ptr %77, align 4, !tbaa !22
  br label %101

87:                                               ; preds = %83
  %88 = icmp ult i32 %79, %82
  %89 = load i32, ptr %0, align 4, !tbaa !22
  br i1 %88, label %90, label %91

90:                                               ; preds = %87
  store i32 %82, ptr %0, align 4, !tbaa !22
  store i32 %89, ptr %78, align 4, !tbaa !22
  br label %101

91:                                               ; preds = %87
  store i32 %79, ptr %0, align 4, !tbaa !22
  store i32 %89, ptr %10, align 4, !tbaa !22
  br label %101

92:                                               ; preds = %74
  %93 = icmp ult i32 %79, %82
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = load i32, ptr %0, align 4, !tbaa !22
  store i32 %79, ptr %0, align 4, !tbaa !22
  store i32 %95, ptr %10, align 4, !tbaa !22
  br label %101

96:                                               ; preds = %92
  %97 = icmp ult i32 %80, %82
  %98 = load i32, ptr %0, align 4, !tbaa !22
  br i1 %97, label %99, label %100

99:                                               ; preds = %96
  store i32 %82, ptr %0, align 4, !tbaa !22
  store i32 %98, ptr %78, align 4, !tbaa !22
  br label %101

100:                                              ; preds = %96
  store i32 %80, ptr %0, align 4, !tbaa !22
  store i32 %98, ptr %77, align 4, !tbaa !22
  br label %101

101:                                              ; preds = %100, %99, %94, %91, %90, %85
  br label %102

102:                                              ; preds = %101, %118
  %103 = phi ptr [ %110, %118 ], [ %10, %101 ]
  %104 = phi ptr [ %113, %118 ], [ %14, %101 ]
  %105 = load i32, ptr %0, align 4, !tbaa !22
  br label %106

106:                                              ; preds = %106, %102
  %107 = phi ptr [ %103, %102 ], [ %110, %106 ]
  %108 = load i32, ptr %107, align 4, !tbaa !22
  %109 = icmp ult i32 %108, %105
  %110 = getelementptr inbounds i32, ptr %107, i64 1
  br i1 %109, label %106, label %111

111:                                              ; preds = %106, %111
  %112 = phi ptr [ %113, %111 ], [ %104, %106 ]
  %113 = getelementptr inbounds i32, ptr %112, i64 -1
  %114 = load i32, ptr %113, align 4, !tbaa !22
  %115 = icmp ult i32 %105, %114
  br i1 %115, label %111, label %116

116:                                              ; preds = %111
  %117 = icmp ult ptr %107, %113
  br i1 %117, label %118, label %119

118:                                              ; preds = %116
  store i32 %114, ptr %107, align 4, !tbaa !22
  store i32 %108, ptr %113, align 4, !tbaa !22
  br label %102

119:                                              ; preds = %116
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr nonnull %107, ptr %14, i64 noundef %76)
  %120 = ptrtoint ptr %107 to i64
  %121 = sub i64 %120, %5
  %122 = icmp sgt i64 %121, 64
  br i1 %122, label %11, label %123

123:                                              ; preds = %119, %70, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %0, ptr %1) local_unnamed_addr #0 comdat {
  %3 = ptrtoint ptr %1 to i64
  %4 = ptrtoint ptr %0 to i64
  %5 = sub i64 %3, %4
  %6 = icmp sgt i64 %5, 64
  br i1 %6, label %7, label %58

7:                                                ; preds = %2
  %8 = getelementptr i8, ptr %0, i64 4
  br label %9

9:                                                ; preds = %34, %7
  %10 = phi i64 [ 1, %7 ], [ %36, %34 ]
  %11 = phi ptr [ %0, %7 ], [ %12, %34 ]
  %12 = getelementptr inbounds i32, ptr %0, i64 %10
  %13 = load i32, ptr %12, align 4, !tbaa !22
  %14 = load i32, ptr %0, align 4, !tbaa !22
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %16, label %24

16:                                               ; preds = %9
  %17 = shl nsw i64 %10, 2
  %18 = icmp ugt i64 %17, 4
  br i1 %18, label %19, label %20, !prof !23

19:                                               ; preds = %16
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %8, ptr noundef nonnull align 4 dereferenceable(1) %0, i64 %17, i1 false)
  br label %34

20:                                               ; preds = %16
  %21 = icmp eq i64 %10, 1
  br i1 %21, label %22, label %34

22:                                               ; preds = %20
  %23 = getelementptr inbounds i32, ptr %11, i64 1
  store i32 %14, ptr %23, align 4, !tbaa !22
  br label %34

24:                                               ; preds = %9
  %25 = load i32, ptr %11, align 4, !tbaa !22
  %26 = icmp ult i32 %13, %25
  br i1 %26, label %27, label %34

27:                                               ; preds = %24, %27
  %28 = phi i32 [ %32, %27 ], [ %25, %24 ]
  %29 = phi ptr [ %31, %27 ], [ %11, %24 ]
  %30 = phi ptr [ %29, %27 ], [ %12, %24 ]
  store i32 %28, ptr %30, align 4, !tbaa !22
  %31 = getelementptr inbounds i32, ptr %29, i64 -1
  %32 = load i32, ptr %31, align 4, !tbaa !22
  %33 = icmp ult i32 %13, %32
  br i1 %33, label %27, label %34

34:                                               ; preds = %27, %24, %22, %20, %19
  %35 = phi ptr [ %0, %19 ], [ %0, %20 ], [ %0, %22 ], [ %12, %24 ], [ %29, %27 ]
  store i32 %13, ptr %35, align 4, !tbaa !22
  %36 = add nuw nsw i64 %10, 1
  %37 = icmp eq i64 %36, 16
  br i1 %37, label %38, label %9

38:                                               ; preds = %34
  %39 = getelementptr inbounds i32, ptr %0, i64 16
  %40 = icmp eq ptr %39, %1
  br i1 %40, label %96, label %41

41:                                               ; preds = %38, %54
  %42 = phi ptr [ %56, %54 ], [ %39, %38 ]
  %43 = load i32, ptr %42, align 4, !tbaa !22
  %44 = getelementptr inbounds i32, ptr %42, i64 -1
  %45 = load i32, ptr %44, align 4, !tbaa !22
  %46 = icmp ult i32 %43, %45
  br i1 %46, label %47, label %54

47:                                               ; preds = %41, %47
  %48 = phi i32 [ %52, %47 ], [ %45, %41 ]
  %49 = phi ptr [ %51, %47 ], [ %44, %41 ]
  %50 = phi ptr [ %49, %47 ], [ %42, %41 ]
  store i32 %48, ptr %50, align 4, !tbaa !22
  %51 = getelementptr inbounds i32, ptr %49, i64 -1
  %52 = load i32, ptr %51, align 4, !tbaa !22
  %53 = icmp ult i32 %43, %52
  br i1 %53, label %47, label %54

54:                                               ; preds = %47, %41
  %55 = phi ptr [ %42, %41 ], [ %49, %47 ]
  store i32 %43, ptr %55, align 4, !tbaa !22
  %56 = getelementptr inbounds i32, ptr %42, i64 1
  %57 = icmp eq ptr %56, %1
  br i1 %57, label %96, label %41

58:                                               ; preds = %2
  %59 = icmp eq ptr %0, %1
  %60 = getelementptr inbounds i32, ptr %0, i64 1
  %61 = icmp eq ptr %60, %1
  %62 = select i1 %59, i1 true, i1 %61
  br i1 %62, label %96, label %63

63:                                               ; preds = %58, %92
  %64 = phi ptr [ %94, %92 ], [ %60, %58 ]
  %65 = phi ptr [ %64, %92 ], [ %0, %58 ]
  %66 = load i32, ptr %64, align 4, !tbaa !22
  %67 = load i32, ptr %0, align 4, !tbaa !22
  %68 = icmp ult i32 %66, %67
  br i1 %68, label %69, label %82

69:                                               ; preds = %63
  %70 = ptrtoint ptr %64 to i64
  %71 = sub i64 %70, %4
  %72 = icmp sgt i64 %71, 4
  br i1 %72, label %73, label %78, !prof !23

73:                                               ; preds = %69
  %74 = getelementptr inbounds i32, ptr %65, i64 2
  %75 = lshr exact i64 %71, 2
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds i32, ptr %74, i64 %76
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %77, ptr nonnull align 4 %0, i64 %71, i1 false)
  br label %92

78:                                               ; preds = %69
  %79 = icmp eq i64 %71, 4
  br i1 %79, label %80, label %92

80:                                               ; preds = %78
  %81 = getelementptr inbounds i32, ptr %65, i64 1
  store i32 %67, ptr %81, align 4, !tbaa !22
  br label %92

82:                                               ; preds = %63
  %83 = load i32, ptr %65, align 4, !tbaa !22
  %84 = icmp ult i32 %66, %83
  br i1 %84, label %85, label %92

85:                                               ; preds = %82, %85
  %86 = phi i32 [ %90, %85 ], [ %83, %82 ]
  %87 = phi ptr [ %89, %85 ], [ %65, %82 ]
  %88 = phi ptr [ %87, %85 ], [ %64, %82 ]
  store i32 %86, ptr %88, align 4, !tbaa !22
  %89 = getelementptr inbounds i32, ptr %87, i64 -1
  %90 = load i32, ptr %89, align 4, !tbaa !22
  %91 = icmp ult i32 %66, %90
  br i1 %91, label %85, label %92

92:                                               ; preds = %85, %82, %80, %78, %73
  %93 = phi ptr [ %0, %73 ], [ %0, %78 ], [ %0, %80 ], [ %64, %82 ], [ %87, %85 ]
  store i32 %66, ptr %93, align 4, !tbaa !22
  %94 = getelementptr inbounds i32, ptr %64, i64 1
  %95 = icmp eq ptr %94, %1
  br i1 %95, label %96, label %63

96:                                               ; preds = %92, %54, %58, %38
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_(ptr %0, ptr %1, ptr noundef nonnull align 1 dereferenceable(1) %2) local_unnamed_addr #0 comdat {
  %4 = ptrtoint ptr %1 to i64
  %5 = ptrtoint ptr %0 to i64
  %6 = sub i64 %4, %5
  %7 = freeze i64 %6
  %8 = icmp slt i64 %7, 8
  br i1 %8, label %101, label %9

9:                                                ; preds = %3
  %10 = lshr exact i64 %7, 2
  %11 = add nsw i64 %10, -2
  %12 = lshr i64 %11, 1
  %13 = add nsw i64 %10, -1
  %14 = lshr i64 %13, 1
  %15 = and i64 %7, 4
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = or i64 %11, 1
  %19 = getelementptr inbounds i32, ptr %0, i64 %18
  %20 = getelementptr inbounds i32, ptr %0, i64 %12
  br label %58

21:                                               ; preds = %9, %53
  %22 = phi i64 [ %57, %53 ], [ %12, %9 ]
  %23 = getelementptr inbounds i32, ptr %0, i64 %22
  %24 = load i32, ptr %23, align 4, !tbaa !22
  %25 = icmp sgt i64 %14, %22
  br i1 %25, label %26, label %53

26:                                               ; preds = %21, %26
  %27 = phi i64 [ %36, %26 ], [ %22, %21 ]
  %28 = shl i64 %27, 1
  %29 = add i64 %28, 2
  %30 = getelementptr inbounds i32, ptr %0, i64 %29
  %31 = or i64 %28, 1
  %32 = getelementptr inbounds i32, ptr %0, i64 %31
  %33 = load i32, ptr %30, align 4, !tbaa !22
  %34 = load i32, ptr %32, align 4, !tbaa !22
  %35 = icmp ult i32 %33, %34
  %36 = select i1 %35, i64 %31, i64 %29
  %37 = getelementptr inbounds i32, ptr %0, i64 %36
  %38 = load i32, ptr %37, align 4, !tbaa !22
  %39 = getelementptr inbounds i32, ptr %0, i64 %27
  store i32 %38, ptr %39, align 4, !tbaa !22
  %40 = icmp slt i64 %36, %14
  br i1 %40, label %26, label %41

41:                                               ; preds = %26
  %42 = icmp sgt i64 %36, %22
  br i1 %42, label %43, label %53

43:                                               ; preds = %41, %50
  %44 = phi i64 [ %46, %50 ], [ %36, %41 ]
  %45 = add nsw i64 %44, -1
  %46 = sdiv i64 %45, 2
  %47 = getelementptr inbounds i32, ptr %0, i64 %46
  %48 = load i32, ptr %47, align 4, !tbaa !22
  %49 = icmp ult i32 %48, %24
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds i32, ptr %0, i64 %44
  store i32 %48, ptr %51, align 4, !tbaa !22
  %52 = icmp sgt i64 %46, %22
  br i1 %52, label %43, label %53

53:                                               ; preds = %43, %50, %21, %41
  %54 = phi i64 [ %36, %41 ], [ %22, %21 ], [ %46, %50 ], [ %44, %43 ]
  %55 = getelementptr inbounds i32, ptr %0, i64 %54
  store i32 %24, ptr %55, align 4, !tbaa !22
  %56 = icmp eq i64 %22, 0
  %57 = add nsw i64 %22, -1
  br i1 %56, label %101, label %21

58:                                               ; preds = %17, %96
  %59 = phi i64 [ %100, %96 ], [ %12, %17 ]
  %60 = getelementptr inbounds i32, ptr %0, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !22
  %62 = icmp sgt i64 %14, %59
  br i1 %62, label %63, label %78

63:                                               ; preds = %58, %63
  %64 = phi i64 [ %73, %63 ], [ %59, %58 ]
  %65 = shl i64 %64, 1
  %66 = add i64 %65, 2
  %67 = getelementptr inbounds i32, ptr %0, i64 %66
  %68 = or i64 %65, 1
  %69 = getelementptr inbounds i32, ptr %0, i64 %68
  %70 = load i32, ptr %67, align 4, !tbaa !22
  %71 = load i32, ptr %69, align 4, !tbaa !22
  %72 = icmp ult i32 %70, %71
  %73 = select i1 %72, i64 %68, i64 %66
  %74 = getelementptr inbounds i32, ptr %0, i64 %73
  %75 = load i32, ptr %74, align 4, !tbaa !22
  %76 = getelementptr inbounds i32, ptr %0, i64 %64
  store i32 %75, ptr %76, align 4, !tbaa !22
  %77 = icmp slt i64 %73, %14
  br i1 %77, label %63, label %78

78:                                               ; preds = %63, %58
  %79 = phi i64 [ %59, %58 ], [ %73, %63 ]
  %80 = icmp eq i64 %79, %12
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = load i32, ptr %19, align 4, !tbaa !22
  store i32 %82, ptr %20, align 4, !tbaa !22
  br label %83

83:                                               ; preds = %81, %78
  %84 = phi i64 [ %18, %81 ], [ %79, %78 ]
  %85 = icmp sgt i64 %84, %59
  br i1 %85, label %86, label %96

86:                                               ; preds = %83, %93
  %87 = phi i64 [ %89, %93 ], [ %84, %83 ]
  %88 = add nsw i64 %87, -1
  %89 = sdiv i64 %88, 2
  %90 = getelementptr inbounds i32, ptr %0, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !22
  %92 = icmp ult i32 %91, %61
  br i1 %92, label %93, label %96

93:                                               ; preds = %86
  %94 = getelementptr inbounds i32, ptr %0, i64 %87
  store i32 %91, ptr %94, align 4, !tbaa !22
  %95 = icmp sgt i64 %89, %59
  br i1 %95, label %86, label %96

96:                                               ; preds = %86, %93, %83
  %97 = phi i64 [ %84, %83 ], [ %89, %93 ], [ %87, %86 ]
  %98 = getelementptr inbounds i32, ptr %0, i64 %97
  store i32 %61, ptr %98, align 4, !tbaa !22
  %99 = icmp eq i64 %59, 0
  %100 = add nsw i64 %59, -1
  br i1 %99, label %101, label %58

101:                                              ; preds = %53, %96, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii25CompressedSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b(ptr noundef nonnull align 8 dereferenceable(60) %0, ptr %1, ptr %2, i1 noundef zeroext %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca i32, align 4
  %6 = ptrtoint ptr %2 to i64
  %7 = ptrtoint ptr %1 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 2
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %517, label %12

12:                                               ; preds = %4
  br i1 %3, label %18, label %13

13:                                               ; preds = %12
  %14 = icmp eq ptr %1, %2
  br i1 %14, label %517, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %0, i64 0, i32 2
  %17 = load i32, ptr %16, align 8, !tbaa !440
  br label %488

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !21
  %21 = load ptr, ptr %0, align 8, !tbaa !58
  %22 = ptrtoint ptr %20 to i64
  %23 = ptrtoint ptr %21 to i64
  %24 = sub i64 %22, %23
  %25 = ashr exact i64 %24, 2
  %26 = icmp eq ptr %20, %21
  br i1 %26, label %29, label %27

27:                                               ; preds = %18
  %28 = icmp eq ptr %1, %2
  br i1 %28, label %137, label %109

29:                                               ; preds = %18
  %30 = and i64 %9, 4294967295
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5)
  store i32 0, ptr %5, align 4, !tbaa !22
  %31 = icmp ult i64 %25, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = sub nuw nsw i64 %30, %25
  call void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %20, i64 noundef %33, ptr noundef nonnull align 4 dereferenceable(4) %5)
  %34 = load ptr, ptr %0, align 8, !tbaa !58
  br label %35

35:                                               ; preds = %29, %32
  %36 = phi ptr [ %20, %29 ], [ %34, %32 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5)
  %37 = and i64 %9, 4294967295
  %38 = icmp ult i64 %37, 32
  %39 = ptrtoint ptr %36 to i64
  %40 = sub i64 %39, %7
  %41 = icmp ult i64 %40, 128
  %42 = select i1 %38, i1 true, i1 %41
  br i1 %42, label %67, label %43

43:                                               ; preds = %35
  %44 = and i64 %9, 31
  %45 = sub nsw i64 %37, %44
  %46 = shl nsw i64 %45, 2
  %47 = getelementptr i8, ptr %1, i64 %46
  br label %48

48:                                               ; preds = %48, %43
  %49 = phi i64 [ 0, %43 ], [ %63, %48 ]
  %50 = shl i64 %49, 2
  %51 = getelementptr i8, ptr %1, i64 %50
  %52 = load <8 x i32>, ptr %51, align 4, !tbaa !22
  %53 = getelementptr i32, ptr %51, i64 8
  %54 = load <8 x i32>, ptr %53, align 4, !tbaa !22
  %55 = getelementptr i32, ptr %51, i64 16
  %56 = load <8 x i32>, ptr %55, align 4, !tbaa !22
  %57 = getelementptr i32, ptr %51, i64 24
  %58 = load <8 x i32>, ptr %57, align 4, !tbaa !22
  %59 = getelementptr inbounds i32, ptr %36, i64 %49
  store <8 x i32> %52, ptr %59, align 4, !tbaa !22
  %60 = getelementptr inbounds i32, ptr %59, i64 8
  store <8 x i32> %54, ptr %60, align 4, !tbaa !22
  %61 = getelementptr inbounds i32, ptr %59, i64 16
  store <8 x i32> %56, ptr %61, align 4, !tbaa !22
  %62 = getelementptr inbounds i32, ptr %59, i64 24
  store <8 x i32> %58, ptr %62, align 4, !tbaa !22
  %63 = add nuw i64 %49, 32
  %64 = icmp eq i64 %63, %45
  br i1 %64, label %65, label %48, !llvm.loop !906

65:                                               ; preds = %48
  %66 = icmp eq i64 %44, 0
  br i1 %66, label %517, label %67

67:                                               ; preds = %35, %65
  %68 = phi i64 [ 0, %35 ], [ %45, %65 ]
  %69 = phi ptr [ %1, %35 ], [ %47, %65 ]
  %70 = sub nsw i64 %9, %68
  %71 = xor i64 %68, -1
  %72 = add nsw i64 %37, %71
  %73 = and i64 %70, 3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %67, %75
  %76 = phi i64 [ %82, %75 ], [ %68, %67 ]
  %77 = phi ptr [ %79, %75 ], [ %69, %67 ]
  %78 = phi i64 [ %83, %75 ], [ 0, %67 ]
  %79 = getelementptr inbounds i32, ptr %77, i64 1
  %80 = load i32, ptr %77, align 4, !tbaa !22
  %81 = getelementptr inbounds i32, ptr %36, i64 %76
  store i32 %80, ptr %81, align 4, !tbaa !22
  %82 = add nuw nsw i64 %76, 1
  %83 = add i64 %78, 1
  %84 = icmp eq i64 %83, %73
  br i1 %84, label %85, label %75, !llvm.loop !907

85:                                               ; preds = %75, %67
  %86 = phi i64 [ %68, %67 ], [ %82, %75 ]
  %87 = phi ptr [ %69, %67 ], [ %79, %75 ]
  %88 = icmp ult i64 %72, 3
  br i1 %88, label %517, label %89

89:                                               ; preds = %85, %89
  %90 = phi i64 [ %107, %89 ], [ %86, %85 ]
  %91 = phi ptr [ %104, %89 ], [ %87, %85 ]
  %92 = getelementptr inbounds i32, ptr %91, i64 1
  %93 = load i32, ptr %91, align 4, !tbaa !22
  %94 = getelementptr inbounds i32, ptr %36, i64 %90
  store i32 %93, ptr %94, align 4, !tbaa !22
  %95 = add nuw nsw i64 %90, 1
  %96 = getelementptr inbounds i32, ptr %91, i64 2
  %97 = load i32, ptr %92, align 4, !tbaa !22
  %98 = getelementptr inbounds i32, ptr %36, i64 %95
  store i32 %97, ptr %98, align 4, !tbaa !22
  %99 = add nuw nsw i64 %90, 2
  %100 = getelementptr inbounds i32, ptr %91, i64 3
  %101 = load i32, ptr %96, align 4, !tbaa !22
  %102 = getelementptr inbounds i32, ptr %36, i64 %99
  store i32 %101, ptr %102, align 4, !tbaa !22
  %103 = add nuw nsw i64 %90, 3
  %104 = getelementptr inbounds i32, ptr %91, i64 4
  %105 = load i32, ptr %100, align 4, !tbaa !22
  %106 = getelementptr inbounds i32, ptr %36, i64 %103
  store i32 %105, ptr %106, align 4, !tbaa !22
  %107 = add nuw nsw i64 %90, 4
  %108 = icmp eq i64 %107, %37
  br i1 %108, label %517, label %89, !llvm.loop !908

109:                                              ; preds = %27, %128
  %110 = phi i64 [ %131, %128 ], [ 0, %27 ]
  %111 = phi i32 [ %130, %128 ], [ 0, %27 ]
  %112 = phi i32 [ %114, %128 ], [ 0, %27 ]
  %113 = phi ptr [ %129, %128 ], [ %1, %27 ]
  %114 = add i32 %112, 1
  %115 = getelementptr inbounds i32, ptr %21, i64 %110
  %116 = load i32, ptr %115, align 4, !tbaa !22
  %117 = load i32, ptr %113, align 4, !tbaa !22
  %118 = icmp ult i32 %116, %117
  br i1 %118, label %119, label %121

119:                                              ; preds = %109
  %120 = add i32 %111, 1
  br label %128

121:                                              ; preds = %109
  %122 = icmp eq i32 %116, %117
  br i1 %122, label %123, label %126

123:                                              ; preds = %121
  %124 = add i32 %111, 1
  %125 = getelementptr inbounds i32, ptr %113, i64 1
  br label %128

126:                                              ; preds = %121
  %127 = getelementptr inbounds i32, ptr %113, i64 1
  br label %128

128:                                              ; preds = %123, %126, %119
  %129 = phi ptr [ %113, %119 ], [ %125, %123 ], [ %127, %126 ]
  %130 = phi i32 [ %120, %119 ], [ %124, %123 ], [ %111, %126 ]
  %131 = zext i32 %130 to i64
  %132 = icmp ugt i64 %25, %131
  %133 = icmp ne ptr %129, %2
  %134 = select i1 %132, i1 %133, i1 false
  br i1 %134, label %109, label %135

135:                                              ; preds = %128
  %136 = ptrtoint ptr %129 to i64
  br label %137

137:                                              ; preds = %135, %27
  %138 = phi i64 [ %136, %135 ], [ %6, %27 ]
  %139 = phi i32 [ %114, %135 ], [ 0, %27 ]
  %140 = phi i64 [ %131, %135 ], [ 0, %27 ]
  %141 = sub nsw i64 %25, %140
  %142 = sub i64 %6, %138
  %143 = lshr exact i64 %142, 2
  %144 = add nsw i64 %141, %143
  %145 = trunc i64 %144 to i32
  %146 = add i32 %139, %145
  %147 = zext i32 %146 to i64
  %148 = icmp ult i64 %25, %147
  br i1 %148, label %149, label %517

149:                                              ; preds = %137
  %150 = shl nuw nsw i64 %147, 2
  %151 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %150) #21
  %152 = getelementptr inbounds i32, ptr %151, i64 %147
  %153 = icmp eq ptr %1, %2
  br i1 %153, label %154, label %164

154:                                              ; preds = %321, %149
  %155 = phi i64 [ %25, %149 ], [ %333, %321 ]
  %156 = phi ptr [ %21, %149 ], [ %329, %321 ]
  %157 = phi ptr [ %151, %149 ], [ %322, %321 ]
  %158 = phi ptr [ %151, %149 ], [ %323, %321 ]
  %159 = phi ptr [ %152, %149 ], [ %324, %321 ]
  %160 = phi ptr [ %2, %149 ], [ %325, %321 ]
  %161 = phi i32 [ 0, %149 ], [ %326, %321 ]
  %162 = zext i32 %161 to i64
  %163 = icmp ugt i64 %155, %162
  br i1 %163, label %343, label %337

164:                                              ; preds = %149, %321
  %165 = phi ptr [ %329, %321 ], [ %21, %149 ]
  %166 = phi i64 [ %327, %321 ], [ 0, %149 ]
  %167 = phi i32 [ %326, %321 ], [ 0, %149 ]
  %168 = phi ptr [ %325, %321 ], [ %1, %149 ]
  %169 = phi ptr [ %324, %321 ], [ %152, %149 ]
  %170 = phi ptr [ %323, %321 ], [ %151, %149 ]
  %171 = phi ptr [ %322, %321 ], [ %151, %149 ]
  %172 = getelementptr inbounds i32, ptr %165, i64 %166
  %173 = load i32, ptr %172, align 4, !tbaa !22
  %174 = load i32, ptr %168, align 4, !tbaa !22
  %175 = icmp ult i32 %173, %174
  br i1 %175, label %176, label %223

176:                                              ; preds = %164
  %177 = icmp eq ptr %170, %169
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  store i32 %173, ptr %170, align 4, !tbaa !22
  %179 = getelementptr inbounds i32, ptr %170, i64 1
  br label %218

180:                                              ; preds = %176
  %181 = ptrtoint ptr %169 to i64
  %182 = ptrtoint ptr %171 to i64
  %183 = sub i64 %181, %182
  %184 = icmp eq i64 %183, 9223372036854775804
  br i1 %184, label %281, label %185

185:                                              ; preds = %180
  %186 = ashr exact i64 %183, 2
  %187 = tail call i64 @llvm.umax.i64(i64 %186, i64 1)
  %188 = add i64 %187, %186
  %189 = icmp ult i64 %188, %186
  %190 = icmp ugt i64 %188, 2305843009213693951
  %191 = or i1 %189, %190
  %192 = select i1 %191, i64 2305843009213693951, i64 %188
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %199, label %194

194:                                              ; preds = %185
  %195 = shl nuw nsw i64 %192, 2
  %196 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %195) #21
          to label %197 unwind label %477

197:                                              ; preds = %194
  %198 = load i32, ptr %172, align 4, !tbaa !22
  br label %199

199:                                              ; preds = %197, %185
  %200 = phi i32 [ %173, %185 ], [ %198, %197 ]
  %201 = phi ptr [ null, %185 ], [ %196, %197 ]
  %202 = getelementptr inbounds i32, ptr %201, i64 %186
  store i32 %200, ptr %202, align 4, !tbaa !22
  %203 = icmp sgt i64 %183, 4
  br i1 %203, label %204, label %205, !prof !23

204:                                              ; preds = %199
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %201, ptr align 4 %171, i64 %183, i1 false)
  br label %210

205:                                              ; preds = %199
  %206 = icmp eq i64 %183, 4
  br i1 %206, label %207, label %210

207:                                              ; preds = %205
  %208 = load i32, ptr %171, align 4, !tbaa !22
  store i32 %208, ptr %201, align 4, !tbaa !22
  %209 = getelementptr inbounds i32, ptr %202, i64 1
  br label %213

210:                                              ; preds = %205, %204
  %211 = getelementptr inbounds i32, ptr %202, i64 1
  %212 = icmp eq ptr %171, null
  br i1 %212, label %215, label %213

213:                                              ; preds = %207, %210
  %214 = phi ptr [ %209, %207 ], [ %211, %210 ]
  tail call void @_ZdlPv(ptr noundef nonnull %171) #23
  br label %215

215:                                              ; preds = %213, %210
  %216 = phi ptr [ %211, %210 ], [ %214, %213 ]
  %217 = getelementptr inbounds i32, ptr %201, i64 %192
  br label %218

218:                                              ; preds = %215, %178
  %219 = phi ptr [ %201, %215 ], [ %171, %178 ]
  %220 = phi ptr [ %216, %215 ], [ %179, %178 ]
  %221 = phi ptr [ %217, %215 ], [ %169, %178 ]
  %222 = add i32 %167, 1
  br label %321

223:                                              ; preds = %164
  %224 = icmp eq i32 %173, %174
  %225 = icmp eq ptr %170, %169
  br i1 %224, label %226, label %273

226:                                              ; preds = %223
  br i1 %225, label %229, label %227

227:                                              ; preds = %226
  store i32 %173, ptr %170, align 4, !tbaa !22
  %228 = getelementptr inbounds i32, ptr %170, i64 1
  br label %267

229:                                              ; preds = %226
  %230 = ptrtoint ptr %169 to i64
  %231 = ptrtoint ptr %171 to i64
  %232 = sub i64 %230, %231
  %233 = icmp eq i64 %232, 9223372036854775804
  br i1 %233, label %281, label %234

234:                                              ; preds = %229
  %235 = ashr exact i64 %232, 2
  %236 = tail call i64 @llvm.umax.i64(i64 %235, i64 1)
  %237 = add i64 %236, %235
  %238 = icmp ult i64 %237, %235
  %239 = icmp ugt i64 %237, 2305843009213693951
  %240 = or i1 %238, %239
  %241 = select i1 %240, i64 2305843009213693951, i64 %237
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %248, label %243

243:                                              ; preds = %234
  %244 = shl nuw nsw i64 %241, 2
  %245 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %244) #21
          to label %246 unwind label %477

246:                                              ; preds = %243
  %247 = load i32, ptr %172, align 4, !tbaa !22
  br label %248

248:                                              ; preds = %246, %234
  %249 = phi i32 [ %173, %234 ], [ %247, %246 ]
  %250 = phi ptr [ null, %234 ], [ %245, %246 ]
  %251 = getelementptr inbounds i32, ptr %250, i64 %235
  store i32 %249, ptr %251, align 4, !tbaa !22
  %252 = icmp sgt i64 %232, 4
  br i1 %252, label %253, label %254, !prof !23

253:                                              ; preds = %248
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %250, ptr align 4 %171, i64 %232, i1 false)
  br label %259

254:                                              ; preds = %248
  %255 = icmp eq i64 %232, 4
  br i1 %255, label %256, label %259

256:                                              ; preds = %254
  %257 = load i32, ptr %171, align 4, !tbaa !22
  store i32 %257, ptr %250, align 4, !tbaa !22
  %258 = getelementptr inbounds i32, ptr %251, i64 1
  br label %262

259:                                              ; preds = %254, %253
  %260 = getelementptr inbounds i32, ptr %251, i64 1
  %261 = icmp eq ptr %171, null
  br i1 %261, label %264, label %262

262:                                              ; preds = %256, %259
  %263 = phi ptr [ %258, %256 ], [ %260, %259 ]
  tail call void @_ZdlPv(ptr noundef nonnull %171) #23
  br label %264

264:                                              ; preds = %262, %259
  %265 = phi ptr [ %260, %259 ], [ %263, %262 ]
  %266 = getelementptr inbounds i32, ptr %250, i64 %241
  br label %267

267:                                              ; preds = %264, %227
  %268 = phi ptr [ %250, %264 ], [ %171, %227 ]
  %269 = phi ptr [ %265, %264 ], [ %228, %227 ]
  %270 = phi ptr [ %266, %264 ], [ %169, %227 ]
  %271 = add i32 %167, 1
  %272 = getelementptr inbounds i32, ptr %168, i64 1
  br label %321

273:                                              ; preds = %223
  br i1 %225, label %276, label %274

274:                                              ; preds = %273
  store i32 %174, ptr %170, align 4, !tbaa !22
  %275 = getelementptr inbounds i32, ptr %170, i64 1
  br label %316

276:                                              ; preds = %273
  %277 = ptrtoint ptr %169 to i64
  %278 = ptrtoint ptr %171 to i64
  %279 = sub i64 %277, %278
  %280 = icmp eq i64 %279, 9223372036854775804
  br i1 %280, label %281, label %283

281:                                              ; preds = %276, %229, %180
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %282 unwind label %479

282:                                              ; preds = %281
  unreachable

283:                                              ; preds = %276
  %284 = ashr exact i64 %279, 2
  %285 = tail call i64 @llvm.umax.i64(i64 %284, i64 1)
  %286 = add i64 %285, %284
  %287 = icmp ult i64 %286, %284
  %288 = icmp ugt i64 %286, 2305843009213693951
  %289 = or i1 %287, %288
  %290 = select i1 %289, i64 2305843009213693951, i64 %286
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %297, label %292

292:                                              ; preds = %283
  %293 = shl nuw nsw i64 %290, 2
  %294 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %293) #21
          to label %295 unwind label %477

295:                                              ; preds = %292
  %296 = load i32, ptr %168, align 4, !tbaa !22
  br label %297

297:                                              ; preds = %295, %283
  %298 = phi i32 [ %174, %283 ], [ %296, %295 ]
  %299 = phi ptr [ null, %283 ], [ %294, %295 ]
  %300 = getelementptr inbounds i32, ptr %299, i64 %284
  store i32 %298, ptr %300, align 4, !tbaa !22
  %301 = icmp sgt i64 %279, 4
  br i1 %301, label %302, label %303, !prof !23

302:                                              ; preds = %297
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %299, ptr align 4 %171, i64 %279, i1 false)
  br label %308

303:                                              ; preds = %297
  %304 = icmp eq i64 %279, 4
  br i1 %304, label %305, label %308

305:                                              ; preds = %303
  %306 = load i32, ptr %171, align 4, !tbaa !22
  store i32 %306, ptr %299, align 4, !tbaa !22
  %307 = getelementptr inbounds i32, ptr %300, i64 1
  br label %311

308:                                              ; preds = %303, %302
  %309 = getelementptr inbounds i32, ptr %300, i64 1
  %310 = icmp eq ptr %171, null
  br i1 %310, label %313, label %311

311:                                              ; preds = %305, %308
  %312 = phi ptr [ %307, %305 ], [ %309, %308 ]
  tail call void @_ZdlPv(ptr noundef nonnull %171) #23
  br label %313

313:                                              ; preds = %311, %308
  %314 = phi ptr [ %309, %308 ], [ %312, %311 ]
  %315 = getelementptr inbounds i32, ptr %299, i64 %290
  br label %316

316:                                              ; preds = %313, %274
  %317 = phi ptr [ %299, %313 ], [ %171, %274 ]
  %318 = phi ptr [ %314, %313 ], [ %275, %274 ]
  %319 = phi ptr [ %315, %313 ], [ %169, %274 ]
  %320 = getelementptr inbounds i32, ptr %168, i64 1
  br label %321

321:                                              ; preds = %267, %316, %218
  %322 = phi ptr [ %219, %218 ], [ %268, %267 ], [ %317, %316 ]
  %323 = phi ptr [ %220, %218 ], [ %269, %267 ], [ %318, %316 ]
  %324 = phi ptr [ %221, %218 ], [ %270, %267 ], [ %319, %316 ]
  %325 = phi ptr [ %168, %218 ], [ %272, %267 ], [ %320, %316 ]
  %326 = phi i32 [ %222, %218 ], [ %271, %267 ], [ %167, %316 ]
  %327 = zext i32 %326 to i64
  %328 = load ptr, ptr %19, align 8, !tbaa !313
  %329 = load ptr, ptr %0, align 8, !tbaa !58
  %330 = ptrtoint ptr %328 to i64
  %331 = ptrtoint ptr %329 to i64
  %332 = sub i64 %330, %331
  %333 = ashr exact i64 %332, 2
  %334 = icmp ugt i64 %333, %327
  %335 = icmp ne ptr %325, %2
  %336 = select i1 %334, i1 %335, i1 false
  br i1 %336, label %164, label %154

337:                                              ; preds = %396, %154
  %338 = phi ptr [ %156, %154 ], [ %398, %396 ]
  %339 = phi ptr [ %157, %154 ], [ %399, %396 ]
  %340 = phi ptr [ %158, %154 ], [ %400, %396 ]
  %341 = phi ptr [ %159, %154 ], [ %401, %396 ]
  %342 = icmp eq ptr %160, %2
  br i1 %342, label %465, label %410

343:                                              ; preds = %154, %396
  %344 = phi ptr [ %397, %396 ], [ %156, %154 ]
  %345 = phi ptr [ %398, %396 ], [ %156, %154 ]
  %346 = phi i64 [ %403, %396 ], [ %162, %154 ]
  %347 = phi i32 [ %402, %396 ], [ %161, %154 ]
  %348 = phi ptr [ %401, %396 ], [ %159, %154 ]
  %349 = phi ptr [ %400, %396 ], [ %158, %154 ]
  %350 = phi ptr [ %399, %396 ], [ %157, %154 ]
  %351 = getelementptr inbounds i32, ptr %345, i64 %346
  %352 = icmp eq ptr %349, %348
  br i1 %352, label %356, label %353

353:                                              ; preds = %343
  %354 = load i32, ptr %351, align 4, !tbaa !22
  store i32 %354, ptr %349, align 4, !tbaa !22
  %355 = getelementptr inbounds i32, ptr %349, i64 1
  br label %396

356:                                              ; preds = %343
  %357 = ptrtoint ptr %348 to i64
  %358 = ptrtoint ptr %350 to i64
  %359 = sub i64 %357, %358
  %360 = icmp eq i64 %359, 9223372036854775804
  br i1 %360, label %361, label %363

361:                                              ; preds = %356
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %362 unwind label %479

362:                                              ; preds = %361
  unreachable

363:                                              ; preds = %356
  %364 = ashr exact i64 %359, 2
  %365 = tail call i64 @llvm.umax.i64(i64 %364, i64 1)
  %366 = add i64 %365, %364
  %367 = icmp ult i64 %366, %364
  %368 = icmp ugt i64 %366, 2305843009213693951
  %369 = or i1 %367, %368
  %370 = select i1 %369, i64 2305843009213693951, i64 %366
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %375, label %372

372:                                              ; preds = %363
  %373 = shl nuw nsw i64 %370, 2
  %374 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %373) #21
          to label %375 unwind label %475

375:                                              ; preds = %372, %363
  %376 = phi ptr [ null, %363 ], [ %374, %372 ]
  %377 = getelementptr inbounds i32, ptr %376, i64 %364
  %378 = load i32, ptr %351, align 4, !tbaa !22
  store i32 %378, ptr %377, align 4, !tbaa !22
  %379 = icmp sgt i64 %359, 4
  br i1 %379, label %380, label %381, !prof !23

380:                                              ; preds = %375
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %376, ptr align 4 %350, i64 %359, i1 false)
  br label %386

381:                                              ; preds = %375
  %382 = icmp eq i64 %359, 4
  br i1 %382, label %383, label %386

383:                                              ; preds = %381
  %384 = load i32, ptr %350, align 4, !tbaa !22
  store i32 %384, ptr %376, align 4, !tbaa !22
  %385 = getelementptr inbounds i32, ptr %377, i64 1
  br label %389

386:                                              ; preds = %381, %380
  %387 = getelementptr inbounds i32, ptr %377, i64 1
  %388 = icmp eq ptr %350, null
  br i1 %388, label %392, label %389

389:                                              ; preds = %383, %386
  %390 = phi ptr [ %385, %383 ], [ %387, %386 ]
  tail call void @_ZdlPv(ptr noundef nonnull %350) #23
  %391 = load ptr, ptr %0, align 8, !tbaa !58
  br label %392

392:                                              ; preds = %389, %386
  %393 = phi ptr [ %344, %386 ], [ %391, %389 ]
  %394 = phi ptr [ %387, %386 ], [ %390, %389 ]
  %395 = getelementptr inbounds i32, ptr %376, i64 %370
  br label %396

396:                                              ; preds = %392, %353
  %397 = phi ptr [ %393, %392 ], [ %344, %353 ]
  %398 = phi ptr [ %393, %392 ], [ %345, %353 ]
  %399 = phi ptr [ %376, %392 ], [ %350, %353 ]
  %400 = phi ptr [ %394, %392 ], [ %355, %353 ]
  %401 = phi ptr [ %395, %392 ], [ %348, %353 ]
  %402 = add i32 %347, 1
  %403 = zext i32 %402 to i64
  %404 = load ptr, ptr %19, align 8, !tbaa !313
  %405 = ptrtoint ptr %404 to i64
  %406 = ptrtoint ptr %398 to i64
  %407 = sub i64 %405, %406
  %408 = ashr exact i64 %407, 2
  %409 = icmp ugt i64 %408, %403
  br i1 %409, label %343, label %337

410:                                              ; preds = %337, %457
  %411 = phi ptr [ %461, %457 ], [ %160, %337 ]
  %412 = phi ptr [ %460, %457 ], [ %341, %337 ]
  %413 = phi ptr [ %459, %457 ], [ %340, %337 ]
  %414 = phi ptr [ %458, %457 ], [ %339, %337 ]
  %415 = icmp eq ptr %413, %412
  br i1 %415, label %419, label %416

416:                                              ; preds = %410
  %417 = load i32, ptr %411, align 4, !tbaa !22
  store i32 %417, ptr %413, align 4, !tbaa !22
  %418 = getelementptr inbounds i32, ptr %413, i64 1
  br label %457

419:                                              ; preds = %410
  %420 = ptrtoint ptr %412 to i64
  %421 = ptrtoint ptr %414 to i64
  %422 = sub i64 %420, %421
  %423 = icmp eq i64 %422, 9223372036854775804
  br i1 %423, label %424, label %426

424:                                              ; preds = %419
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.23) #22
          to label %425 unwind label %479

425:                                              ; preds = %424
  unreachable

426:                                              ; preds = %419
  %427 = ashr exact i64 %422, 2
  %428 = tail call i64 @llvm.umax.i64(i64 %427, i64 1)
  %429 = add i64 %428, %427
  %430 = icmp ult i64 %429, %427
  %431 = icmp ugt i64 %429, 2305843009213693951
  %432 = or i1 %430, %431
  %433 = select i1 %432, i64 2305843009213693951, i64 %429
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %438, label %435

435:                                              ; preds = %426
  %436 = shl nuw nsw i64 %433, 2
  %437 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %436) #21
          to label %438 unwind label %473

438:                                              ; preds = %435, %426
  %439 = phi ptr [ null, %426 ], [ %437, %435 ]
  %440 = getelementptr inbounds i32, ptr %439, i64 %427
  %441 = load i32, ptr %411, align 4, !tbaa !22
  store i32 %441, ptr %440, align 4, !tbaa !22
  %442 = icmp sgt i64 %422, 4
  br i1 %442, label %443, label %444, !prof !23

443:                                              ; preds = %438
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %439, ptr align 4 %414, i64 %422, i1 false)
  br label %449

444:                                              ; preds = %438
  %445 = icmp eq i64 %422, 4
  br i1 %445, label %446, label %449

446:                                              ; preds = %444
  %447 = load i32, ptr %414, align 4, !tbaa !22
  store i32 %447, ptr %439, align 4, !tbaa !22
  %448 = getelementptr inbounds i32, ptr %440, i64 1
  br label %452

449:                                              ; preds = %444, %443
  %450 = getelementptr inbounds i32, ptr %440, i64 1
  %451 = icmp eq ptr %414, null
  br i1 %451, label %454, label %452

452:                                              ; preds = %446, %449
  %453 = phi ptr [ %448, %446 ], [ %450, %449 ]
  tail call void @_ZdlPv(ptr noundef nonnull %414) #23
  br label %454

454:                                              ; preds = %452, %449
  %455 = phi ptr [ %450, %449 ], [ %453, %452 ]
  %456 = getelementptr inbounds i32, ptr %439, i64 %433
  br label %457

457:                                              ; preds = %454, %416
  %458 = phi ptr [ %439, %454 ], [ %414, %416 ]
  %459 = phi ptr [ %455, %454 ], [ %418, %416 ]
  %460 = phi ptr [ %456, %454 ], [ %412, %416 ]
  %461 = getelementptr inbounds i32, ptr %411, i64 1
  %462 = icmp eq ptr %461, %2
  br i1 %462, label %463, label %410

463:                                              ; preds = %457
  %464 = load ptr, ptr %0, align 8, !tbaa !58
  br label %465

465:                                              ; preds = %463, %337
  %466 = phi ptr [ %338, %337 ], [ %464, %463 ]
  %467 = phi ptr [ %339, %337 ], [ %458, %463 ]
  %468 = phi ptr [ %340, %337 ], [ %459, %463 ]
  %469 = phi ptr [ %341, %337 ], [ %460, %463 ]
  %470 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %467, ptr %0, align 8, !tbaa !58
  store ptr %468, ptr %19, align 8, !tbaa !313
  store ptr %469, ptr %470, align 8, !tbaa !417
  %471 = icmp eq ptr %466, null
  br i1 %471, label %517, label %472

472:                                              ; preds = %465
  tail call void @_ZdlPv(ptr noundef nonnull %466) #23
  br label %517

473:                                              ; preds = %435
  %474 = landingpad { ptr, i32 }
          cleanup
  br label %482

475:                                              ; preds = %372
  %476 = landingpad { ptr, i32 }
          cleanup
  br label %482

477:                                              ; preds = %292, %243, %194
  %478 = landingpad { ptr, i32 }
          cleanup
  br label %482

479:                                              ; preds = %281, %424, %361
  %480 = phi ptr [ %414, %424 ], [ %350, %361 ], [ %171, %281 ]
  %481 = landingpad { ptr, i32 }
          cleanup
  br label %482

482:                                              ; preds = %475, %479, %477, %473
  %483 = phi ptr [ %414, %473 ], [ %350, %475 ], [ %171, %477 ], [ %480, %479 ]
  %484 = phi { ptr, i32 } [ %474, %473 ], [ %476, %475 ], [ %478, %477 ], [ %481, %479 ]
  %485 = icmp eq ptr %483, null
  br i1 %485, label %487, label %486

486:                                              ; preds = %482
  tail call void @_ZdlPv(ptr noundef nonnull %483) #23
  br label %487

487:                                              ; preds = %486, %482
  resume { ptr, i32 } %484

488:                                              ; preds = %15, %513
  %489 = phi i32 [ %17, %15 ], [ %514, %513 ]
  %490 = phi ptr [ %1, %15 ], [ %515, %513 ]
  %491 = load i32, ptr %490, align 4, !tbaa !22
  %492 = icmp eq i32 %489, 0
  br i1 %492, label %507, label %493

493:                                              ; preds = %488
  %494 = zext i32 %489 to i64
  br label %498

495:                                              ; preds = %498
  %496 = add nuw nsw i64 %499, 1
  %497 = icmp eq i64 %496, %494
  br i1 %497, label %503, label %498

498:                                              ; preds = %495, %493
  %499 = phi i64 [ 0, %493 ], [ %496, %495 ]
  %500 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %0, i64 0, i32 1, i64 %499
  %501 = load i32, ptr %500, align 4, !tbaa !22
  %502 = icmp eq i32 %501, %491
  br i1 %502, label %513, label %495

503:                                              ; preds = %495
  %504 = icmp eq i32 %489, 8
  br i1 %504, label %505, label %507

505:                                              ; preds = %503
  tail call void @_ZNK6dealii25CompressedSparsityPattern4Line11flush_cacheEv(ptr noundef nonnull align 8 dereferenceable(60) %0)
  %506 = load i32, ptr %16, align 8, !tbaa !440
  br label %507

507:                                              ; preds = %505, %503, %488
  %508 = phi i32 [ %506, %505 ], [ %489, %503 ], [ 0, %488 ]
  %509 = zext i32 %508 to i64
  %510 = getelementptr inbounds %"struct.dealii::CompressedSparsityPattern::Line", ptr %0, i64 0, i32 1, i64 %509
  store i32 %491, ptr %510, align 4, !tbaa !22
  %511 = load i32, ptr %16, align 8, !tbaa !440
  %512 = add i32 %511, 1
  store i32 %512, ptr %16, align 8, !tbaa !440
  br label %513

513:                                              ; preds = %498, %507
  %514 = phi i32 [ %512, %507 ], [ %489, %498 ]
  %515 = getelementptr inbounds i32, ptr %490, i64 1
  %516 = icmp eq ptr %515, %2
  br i1 %516, label %517, label %488

517:                                              ; preds = %513, %85, %89, %65, %13, %472, %465, %137, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt3setIjSt4lessIjESaIjEE6insertIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjS2_EEEEEvT_SB_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp eq ptr %1, %2
  br i1 %4, label %65, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  %7 = getelementptr inbounds i8, ptr %0, i64 40
  %8 = getelementptr inbounds i8, ptr %0, i64 32
  %9 = getelementptr inbounds i8, ptr %0, i64 16
  %10 = getelementptr inbounds i8, ptr %0, i64 24
  %11 = load i64, ptr %7, align 8, !tbaa !458
  br label %12

12:                                               ; preds = %61, %5
  %13 = phi i64 [ %11, %5 ], [ %62, %61 ]
  %14 = phi ptr [ %1, %5 ], [ %63, %61 ]
  %15 = icmp eq i64 %13, 0
  %16 = load i32, ptr %14, align 4, !tbaa !22
  br i1 %15, label %22, label %17

17:                                               ; preds = %12
  %18 = load ptr, ptr %8, align 8, !tbaa !21
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %18, i64 0, i32 1
  %20 = load i32, ptr %19, align 4, !tbaa !22
  %21 = icmp ult i32 %20, %16
  br i1 %21, label %48, label %22

22:                                               ; preds = %17, %12
  %23 = load ptr, ptr %9, align 8, !tbaa !21
  %24 = icmp eq ptr %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %22, %25
  %26 = phi ptr [ %33, %25 ], [ %23, %22 ]
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %26, i64 0, i32 1
  %28 = load i32, ptr %27, align 4, !tbaa !22
  %29 = icmp ult i32 %16, %28
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %26, i64 0, i32 2
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %26, i64 0, i32 3
  %32 = select i1 %29, ptr %30, ptr %31
  %33 = load ptr, ptr %32, align 8, !tbaa !21
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %25

35:                                               ; preds = %25
  br i1 %29, label %36, label %44

36:                                               ; preds = %35, %22
  %37 = phi ptr [ %26, %35 ], [ %6, %22 ]
  %38 = load ptr, ptr %10, align 8, !tbaa !457
  %39 = icmp eq ptr %37, %38
  br i1 %39, label %48, label %40

40:                                               ; preds = %36
  %41 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %37) #26
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %41, i64 0, i32 1
  %43 = load i32, ptr %42, align 4, !tbaa !22
  br label %44

44:                                               ; preds = %40, %35
  %45 = phi i32 [ %43, %40 ], [ %28, %35 ]
  %46 = phi ptr [ %37, %40 ], [ %26, %35 ]
  %47 = icmp ult i32 %45, %16
  br i1 %47, label %48, label %61

48:                                               ; preds = %44, %17, %36
  %49 = phi ptr [ %37, %36 ], [ %18, %17 ], [ %46, %44 ]
  %50 = icmp eq ptr %6, %49
  br i1 %50, label %55, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %49, i64 0, i32 1
  %53 = load i32, ptr %52, align 4, !tbaa !22
  %54 = icmp ult i32 %16, %53
  br label %55

55:                                               ; preds = %51, %48
  %56 = phi i1 [ true, %48 ], [ %54, %51 ]
  %57 = tail call noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #21
  %58 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %57, i64 0, i32 1
  store i32 %16, ptr %58, align 4, !tbaa !22
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %56, ptr noundef nonnull %57, ptr noundef nonnull %49, ptr noundef nonnull align 8 dereferenceable(32) %6) #24
  %59 = load i64, ptr %7, align 8, !tbaa !458
  %60 = add i64 %59, 1
  store i64 %60, ptr %7, align 8, !tbaa !458
  br label %61

61:                                               ; preds = %44, %55
  %62 = phi i64 [ %13, %44 ], [ %60, %55 ]
  %63 = getelementptr inbounds i32, ptr %14, i64 1
  %64 = icmp eq ptr %63, %2
  br i1 %64, label %65, label %12

65:                                               ; preds = %61, %3
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii31CompressedSimpleSparsityPattern4Line11add_entriesIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEEEvT_SA_b(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr %2, i1 noundef zeroext %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = ptrtoint ptr %2 to i64
  %8 = ptrtoint ptr %1 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 2
  %11 = trunc i64 %10 to i32
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %498, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !21
  %16 = load ptr, ptr %0, align 8, !tbaa !21
  %17 = ptrtoint ptr %15 to i64
  %18 = ptrtoint ptr %16 to i64
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 2
  %21 = icmp ugt i32 %11, 3
  %22 = and i1 %21, %3
  br i1 %22, label %23, label %263

23:                                               ; preds = %13
  %24 = icmp eq ptr %15, %16
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds i32, ptr %15, i64 -1
  %27 = load i32, ptr %26, align 4, !tbaa !22
  %28 = load i32, ptr %1, align 4, !tbaa !22
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %25, %23
  tail call void @_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %15, ptr %1, ptr %2)
  br label %498

31:                                               ; preds = %25
  %32 = icmp sgt i64 %19, 0
  br i1 %32, label %33, label %48

33:                                               ; preds = %31
  %34 = lshr exact i64 %19, 2
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ %34, %33 ], [ %46, %35 ]
  %37 = phi ptr [ %16, %33 ], [ %45, %35 ]
  %38 = lshr i64 %36, 1
  %39 = getelementptr inbounds i32, ptr %37, i64 %38
  %40 = load i32, ptr %39, align 4, !tbaa !22
  %41 = icmp ult i32 %40, %28
  %42 = getelementptr inbounds i32, ptr %39, i64 1
  %43 = xor i64 %38, -1
  %44 = add nsw i64 %36, %43
  %45 = select i1 %41, ptr %42, ptr %37
  %46 = select i1 %41, i64 %44, i64 %38
  %47 = icmp sgt i64 %46, 0
  br i1 %47, label %35, label %48

48:                                               ; preds = %35, %31
  %49 = phi ptr [ %16, %31 ], [ %45, %35 ]
  %50 = load i32, ptr %49, align 4, !tbaa !22
  %51 = icmp eq i32 %50, %28
  br i1 %51, label %52, label %94

52:                                               ; preds = %48, %66
  %53 = phi ptr [ %55, %66 ], [ %1, %48 ]
  %54 = phi ptr [ %68, %66 ], [ %49, %48 ]
  %55 = getelementptr inbounds i32, ptr %53, i64 1
  %56 = icmp eq ptr %55, %2
  br i1 %56, label %498, label %57

57:                                               ; preds = %52
  %58 = load i32, ptr %55, align 4, !tbaa !22
  %59 = getelementptr inbounds i32, ptr %54, i64 1
  %60 = icmp eq ptr %59, %15
  br i1 %60, label %94, label %61

61:                                               ; preds = %57
  %62 = load i32, ptr %59, align 4, !tbaa !22
  %63 = icmp ugt i32 %62, %58
  br i1 %63, label %94, label %64

64:                                               ; preds = %61
  %65 = icmp eq i32 %62, %58
  br i1 %65, label %66, label %70

66:                                               ; preds = %92, %64
  %67 = phi i32 [ %58, %64 ], [ %93, %92 ]
  %68 = phi ptr [ %59, %64 ], [ %90, %92 ]
  %69 = icmp eq i32 %67, %58
  br i1 %69, label %52, label %94

70:                                               ; preds = %64
  %71 = ptrtoint ptr %59 to i64
  %72 = sub i64 %17, %71
  %73 = icmp sgt i64 %72, 0
  br i1 %73, label %74, label %89

74:                                               ; preds = %70
  %75 = lshr exact i64 %72, 2
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ %75, %74 ], [ %87, %76 ]
  %78 = phi ptr [ %59, %74 ], [ %86, %76 ]
  %79 = lshr i64 %77, 1
  %80 = getelementptr inbounds i32, ptr %78, i64 %79
  %81 = load i32, ptr %80, align 4, !tbaa !22
  %82 = icmp ult i32 %81, %58
  %83 = getelementptr inbounds i32, ptr %80, i64 1
  %84 = xor i64 %79, -1
  %85 = add nsw i64 %77, %84
  %86 = select i1 %82, ptr %83, ptr %78
  %87 = select i1 %82, i64 %85, i64 %79
  %88 = icmp sgt i64 %87, 0
  br i1 %88, label %76, label %89

89:                                               ; preds = %76, %70
  %90 = phi ptr [ %59, %70 ], [ %86, %76 ]
  %91 = icmp eq ptr %90, %15
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = load i32, ptr %90, align 4, !tbaa !22
  br label %66

94:                                               ; preds = %66, %57, %61, %89, %48
  %95 = phi ptr [ %49, %48 ], [ %68, %66 ], [ %15, %57 ], [ %59, %61 ], [ %15, %89 ]
  %96 = phi ptr [ %1, %48 ], [ %55, %89 ], [ %55, %61 ], [ %55, %57 ], [ %55, %66 ]
  %97 = icmp eq ptr %96, %2
  br i1 %97, label %498, label %98

98:                                               ; preds = %94
  %99 = ptrtoint ptr %95 to i64
  %100 = sub i64 %99, %18
  %101 = lshr exact i64 %100, 2
  tail call void @_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %95, ptr nonnull %96, ptr %2)
  %102 = load ptr, ptr %0, align 8, !tbaa !21
  %103 = and i64 %101, 4294967295
  %104 = getelementptr inbounds i32, ptr %102, i64 %103
  %105 = ptrtoint ptr %96 to i64
  %106 = sub i64 %7, %105
  %107 = ashr exact i64 %106, 2
  %108 = getelementptr inbounds i32, ptr %104, i64 %107
  %109 = load ptr, ptr %14, align 8
  %110 = icmp eq ptr %108, %109
  br i1 %110, label %111, label %159

111:                                              ; preds = %174, %98
  %112 = phi ptr [ %108, %98 ], [ %179, %174 ]
  %113 = phi ptr [ %108, %98 ], [ %175, %174 ]
  %114 = phi ptr [ %104, %98 ], [ %177, %174 ]
  %115 = phi ptr [ %96, %98 ], [ %176, %174 ]
  %116 = ptrtoint ptr %113 to i64
  %117 = icmp eq ptr %115, %2
  br i1 %117, label %185, label %118

118:                                              ; preds = %111
  %119 = ptrtoint ptr %115 to i64
  %120 = ptrtoint ptr %114 to i64
  %121 = ptrtoint ptr %115 to i64
  %122 = add i64 %7, -4
  %123 = sub i64 %122, %121
  %124 = lshr i64 %123, 2
  %125 = add nuw nsw i64 %124, 1
  %126 = icmp ult i64 %123, 124
  %127 = sub i64 %120, %119
  %128 = icmp ult i64 %127, 128
  %129 = select i1 %126, i1 true, i1 %128
  br i1 %129, label %156, label %130

130:                                              ; preds = %118
  %131 = and i64 %125, 9223372036854775776
  %132 = shl i64 %131, 2
  %133 = getelementptr i8, ptr %115, i64 %132
  %134 = shl i64 %131, 2
  %135 = getelementptr i8, ptr %114, i64 %134
  br label %136

136:                                              ; preds = %136, %130
  %137 = phi i64 [ 0, %130 ], [ %152, %136 ]
  %138 = shl i64 %137, 2
  %139 = getelementptr i8, ptr %115, i64 %138
  %140 = shl i64 %137, 2
  %141 = getelementptr i8, ptr %114, i64 %140
  %142 = load <8 x i32>, ptr %139, align 4, !tbaa !22
  %143 = getelementptr i32, ptr %139, i64 8
  %144 = load <8 x i32>, ptr %143, align 4, !tbaa !22
  %145 = getelementptr i32, ptr %139, i64 16
  %146 = load <8 x i32>, ptr %145, align 4, !tbaa !22
  %147 = getelementptr i32, ptr %139, i64 24
  %148 = load <8 x i32>, ptr %147, align 4, !tbaa !22
  store <8 x i32> %142, ptr %141, align 4, !tbaa !22
  %149 = getelementptr i32, ptr %141, i64 8
  store <8 x i32> %144, ptr %149, align 4, !tbaa !22
  %150 = getelementptr i32, ptr %141, i64 16
  store <8 x i32> %146, ptr %150, align 4, !tbaa !22
  %151 = getelementptr i32, ptr %141, i64 24
  store <8 x i32> %148, ptr %151, align 4, !tbaa !22
  %152 = add nuw i64 %137, 32
  %153 = icmp eq i64 %152, %131
  br i1 %153, label %154, label %136, !llvm.loop !909

154:                                              ; preds = %136
  %155 = icmp eq i64 %125, %131
  br i1 %155, label %182, label %156

156:                                              ; preds = %118, %154
  %157 = phi ptr [ %115, %118 ], [ %133, %154 ]
  %158 = phi ptr [ %114, %118 ], [ %135, %154 ]
  br label %229

159:                                              ; preds = %98, %174
  %160 = phi ptr [ %176, %174 ], [ %96, %98 ]
  %161 = phi ptr [ %177, %174 ], [ %104, %98 ]
  %162 = phi ptr [ %175, %174 ], [ %108, %98 ]
  %163 = load i32, ptr %160, align 4, !tbaa !22
  %164 = load i32, ptr %162, align 4, !tbaa !22
  %165 = icmp ult i32 %163, %164
  br i1 %165, label %166, label %168

166:                                              ; preds = %159
  %167 = getelementptr inbounds i32, ptr %160, i64 1
  store i32 %163, ptr %161, align 4, !tbaa !22
  br label %174

168:                                              ; preds = %159
  %169 = icmp eq i32 %163, %164
  %170 = getelementptr inbounds i32, ptr %162, i64 1
  br i1 %169, label %171, label %173

171:                                              ; preds = %168
  store i32 %163, ptr %161, align 4, !tbaa !22
  %172 = getelementptr inbounds i32, ptr %160, i64 1
  br label %174

173:                                              ; preds = %168
  store i32 %164, ptr %161, align 4, !tbaa !22
  br label %174

174:                                              ; preds = %171, %173, %166
  %175 = phi ptr [ %162, %166 ], [ %170, %171 ], [ %170, %173 ]
  %176 = phi ptr [ %167, %166 ], [ %172, %171 ], [ %160, %173 ]
  %177 = getelementptr inbounds i32, ptr %161, i64 1
  %178 = icmp ne ptr %176, %2
  %179 = load ptr, ptr %14, align 8
  %180 = icmp ne ptr %175, %179
  %181 = select i1 %178, i1 %180, i1 false
  br i1 %181, label %159, label %111

182:                                              ; preds = %229, %154
  %183 = phi ptr [ %135, %154 ], [ %234, %229 ]
  %184 = load ptr, ptr %14, align 8, !tbaa !21
  br label %185

185:                                              ; preds = %182, %111
  %186 = phi ptr [ %112, %111 ], [ %184, %182 ]
  %187 = phi ptr [ %114, %111 ], [ %183, %182 ]
  %188 = icmp eq ptr %113, %186
  br i1 %188, label %243, label %189

189:                                              ; preds = %185
  %190 = ptrtoint ptr %187 to i64
  %191 = ptrtoint ptr %186 to i64
  %192 = add i64 %191, -4
  %193 = sub i64 %192, %116
  %194 = lshr i64 %193, 2
  %195 = add nuw nsw i64 %194, 1
  %196 = icmp ult i64 %193, 124
  %197 = sub i64 %190, %116
  %198 = icmp ult i64 %197, 128
  %199 = select i1 %196, i1 true, i1 %198
  br i1 %199, label %226, label %200

200:                                              ; preds = %189
  %201 = and i64 %195, 9223372036854775776
  %202 = shl i64 %201, 2
  %203 = getelementptr i8, ptr %187, i64 %202
  %204 = shl i64 %201, 2
  %205 = getelementptr i8, ptr %113, i64 %204
  br label %206

206:                                              ; preds = %206, %200
  %207 = phi i64 [ 0, %200 ], [ %222, %206 ]
  %208 = shl i64 %207, 2
  %209 = getelementptr i8, ptr %187, i64 %208
  %210 = shl i64 %207, 2
  %211 = getelementptr i8, ptr %113, i64 %210
  %212 = load <8 x i32>, ptr %211, align 4, !tbaa !22
  %213 = getelementptr i32, ptr %211, i64 8
  %214 = load <8 x i32>, ptr %213, align 4, !tbaa !22
  %215 = getelementptr i32, ptr %211, i64 16
  %216 = load <8 x i32>, ptr %215, align 4, !tbaa !22
  %217 = getelementptr i32, ptr %211, i64 24
  %218 = load <8 x i32>, ptr %217, align 4, !tbaa !22
  store <8 x i32> %212, ptr %209, align 4, !tbaa !22
  %219 = getelementptr i32, ptr %209, i64 8
  store <8 x i32> %214, ptr %219, align 4, !tbaa !22
  %220 = getelementptr i32, ptr %209, i64 16
  store <8 x i32> %216, ptr %220, align 4, !tbaa !22
  %221 = getelementptr i32, ptr %209, i64 24
  store <8 x i32> %218, ptr %221, align 4, !tbaa !22
  %222 = add nuw i64 %207, 32
  %223 = icmp eq i64 %222, %201
  br i1 %223, label %224, label %206, !llvm.loop !910

224:                                              ; preds = %206
  %225 = icmp eq i64 %195, %201
  br i1 %225, label %243, label %226

226:                                              ; preds = %189, %224
  %227 = phi ptr [ %187, %189 ], [ %203, %224 ]
  %228 = phi ptr [ %113, %189 ], [ %205, %224 ]
  br label %236

229:                                              ; preds = %156, %229
  %230 = phi ptr [ %232, %229 ], [ %157, %156 ]
  %231 = phi ptr [ %234, %229 ], [ %158, %156 ]
  %232 = getelementptr inbounds i32, ptr %230, i64 1
  %233 = load i32, ptr %230, align 4, !tbaa !22
  %234 = getelementptr inbounds i32, ptr %231, i64 1
  store i32 %233, ptr %231, align 4, !tbaa !22
  %235 = icmp eq ptr %232, %2
  br i1 %235, label %182, label %229, !llvm.loop !911

236:                                              ; preds = %226, %236
  %237 = phi ptr [ %241, %236 ], [ %227, %226 ]
  %238 = phi ptr [ %239, %236 ], [ %228, %226 ]
  %239 = getelementptr inbounds i32, ptr %238, i64 1
  %240 = load i32, ptr %238, align 4, !tbaa !22
  %241 = getelementptr inbounds i32, ptr %237, i64 1
  store i32 %240, ptr %237, align 4, !tbaa !22
  %242 = icmp eq ptr %239, %186
  br i1 %242, label %243, label %236, !llvm.loop !912

243:                                              ; preds = %236, %224, %185
  %244 = phi ptr [ %187, %185 ], [ %203, %224 ], [ %241, %236 ]
  %245 = ptrtoint ptr %244 to i64
  %246 = ptrtoint ptr %102 to i64
  %247 = sub i64 %245, %246
  %248 = lshr exact i64 %247, 2
  %249 = and i64 %248, 4294967295
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5)
  store i32 0, ptr %5, align 4, !tbaa !22
  %250 = ptrtoint ptr %186 to i64
  %251 = sub i64 %250, %246
  %252 = ashr exact i64 %251, 2
  %253 = icmp ult i64 %252, %249
  br i1 %253, label %254, label %256

254:                                              ; preds = %243
  %255 = sub nsw i64 %249, %252
  call void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %186, i64 noundef %255, ptr noundef nonnull align 4 dereferenceable(4) %5)
  br label %262

256:                                              ; preds = %243
  %257 = icmp ugt i64 %252, %249
  br i1 %257, label %258, label %262

258:                                              ; preds = %256
  %259 = getelementptr inbounds i32, ptr %102, i64 %249
  %260 = icmp eq ptr %186, %259
  br i1 %260, label %262, label %261

261:                                              ; preds = %258
  store ptr %259, ptr %14, align 8, !tbaa !313
  br label %262

262:                                              ; preds = %254, %256, %258, %261
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5)
  br label %498

263:                                              ; preds = %13
  %264 = add nsw i64 %20, %10
  %265 = and i64 %264, 4294967295
  %266 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %267 = load ptr, ptr %266, align 8, !tbaa !417
  %268 = ptrtoint ptr %267 to i64
  %269 = sub i64 %268, %18
  %270 = ashr exact i64 %269, 2
  %271 = icmp ugt i64 %265, %270
  br i1 %271, label %272, label %288

272:                                              ; preds = %263
  %273 = shl nuw nsw i64 %265, 2
  %274 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %273) #21
  %275 = icmp sgt i64 %19, 4
  br i1 %275, label %276, label %277, !prof !23

276:                                              ; preds = %272
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %274, ptr align 4 %16, i64 %19, i1 false)
  br label %281

277:                                              ; preds = %272
  %278 = icmp eq i64 %19, 4
  br i1 %278, label %279, label %281

279:                                              ; preds = %277
  %280 = load i32, ptr %16, align 4, !tbaa !22
  store i32 %280, ptr %274, align 4, !tbaa !22
  br label %283

281:                                              ; preds = %277, %276
  %282 = icmp eq ptr %16, null
  br i1 %282, label %284, label %283

283:                                              ; preds = %281, %279
  tail call void @_ZdlPv(ptr noundef nonnull %16) #23
  br label %284

284:                                              ; preds = %281, %283
  store ptr %274, ptr %0, align 8, !tbaa !58
  %285 = getelementptr inbounds i32, ptr %274, i64 %20
  store ptr %285, ptr %14, align 8, !tbaa !313
  %286 = getelementptr inbounds i32, ptr %274, i64 %265
  store ptr %286, ptr %266, align 8, !tbaa !417
  %287 = ptrtoint ptr %274 to i64
  br label %288

288:                                              ; preds = %284, %263
  %289 = phi i64 [ %287, %284 ], [ %18, %263 ]
  %290 = phi ptr [ %286, %284 ], [ %267, %263 ]
  %291 = phi ptr [ %274, %284 ], [ %16, %263 ]
  %292 = phi ptr [ %285, %284 ], [ %15, %263 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #24
  %293 = load i32, ptr %1, align 4, !tbaa !22
  store i32 %293, ptr %6, align 4, !tbaa !22
  %294 = icmp eq ptr %292, %291
  br i1 %294, label %299, label %295

295:                                              ; preds = %288
  %296 = getelementptr inbounds i32, ptr %292, i64 -1
  %297 = load i32, ptr %296, align 4, !tbaa !22
  %298 = icmp ult i32 %297, %293
  br i1 %298, label %299, label %308

299:                                              ; preds = %295, %288
  %300 = icmp eq ptr %292, %290
  br i1 %300, label %303, label %301

301:                                              ; preds = %299
  store i32 %293, ptr %292, align 4, !tbaa !22
  %302 = getelementptr inbounds i32, ptr %292, i64 1
  store ptr %302, ptr %14, align 8, !tbaa !313
  br label %305

303:                                              ; preds = %299
  call void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %290, ptr noundef nonnull align 4 dereferenceable(4) %6)
  %304 = load ptr, ptr %14, align 8, !tbaa !21
  br label %305

305:                                              ; preds = %301, %303
  %306 = phi ptr [ %302, %301 ], [ %304, %303 ]
  %307 = getelementptr inbounds i32, ptr %306, i64 -1
  br label %356

308:                                              ; preds = %295
  %309 = icmp sgt i64 %19, 0
  br i1 %309, label %310, label %325

310:                                              ; preds = %308
  %311 = lshr exact i64 %19, 2
  br label %312

312:                                              ; preds = %312, %310
  %313 = phi i64 [ %311, %310 ], [ %323, %312 ]
  %314 = phi ptr [ %291, %310 ], [ %322, %312 ]
  %315 = lshr i64 %313, 1
  %316 = getelementptr inbounds i32, ptr %314, i64 %315
  %317 = load i32, ptr %316, align 4, !tbaa !22
  %318 = icmp ult i32 %317, %293
  %319 = getelementptr inbounds i32, ptr %316, i64 1
  %320 = xor i64 %315, -1
  %321 = add nsw i64 %313, %320
  %322 = select i1 %318, ptr %319, ptr %314
  %323 = select i1 %318, i64 %321, i64 %315
  %324 = icmp sgt i64 %323, 0
  br i1 %324, label %312, label %325

325:                                              ; preds = %312, %308
  %326 = phi ptr [ %291, %308 ], [ %322, %312 ]
  %327 = load i32, ptr %326, align 4, !tbaa !22
  %328 = icmp eq i32 %327, %293
  br i1 %328, label %356, label %329

329:                                              ; preds = %325
  %330 = ptrtoint ptr %326 to i64
  %331 = icmp eq ptr %292, %290
  br i1 %331, label %350, label %332

332:                                              ; preds = %329
  %333 = icmp eq ptr %292, %326
  %334 = getelementptr inbounds i32, ptr %292, i64 1
  br i1 %333, label %335, label %336

335:                                              ; preds = %332
  store i32 %293, ptr %292, align 4, !tbaa !22
  store ptr %334, ptr %14, align 8, !tbaa !313
  br label %351

336:                                              ; preds = %332
  store i32 %297, ptr %292, align 4, !tbaa !22
  store ptr %334, ptr %14, align 8, !tbaa !313
  %337 = load i32, ptr %6, align 4, !tbaa !22
  %338 = ptrtoint ptr %296 to i64
  %339 = sub i64 %338, %330
  %340 = icmp sgt i64 %339, 4
  br i1 %340, label %341, label %345, !prof !23

341:                                              ; preds = %336
  %342 = lshr exact i64 %339, 2
  %343 = sub nsw i64 0, %342
  %344 = getelementptr inbounds i32, ptr %292, i64 %343
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %344, ptr nonnull align 4 %326, i64 %339, i1 false)
  br label %349

345:                                              ; preds = %336
  %346 = icmp eq i64 %339, 4
  br i1 %346, label %347, label %349

347:                                              ; preds = %345
  %348 = load i32, ptr %326, align 4, !tbaa !22
  store i32 %348, ptr %296, align 4, !tbaa !22
  br label %349

349:                                              ; preds = %347, %345, %341
  store i32 %337, ptr %326, align 4, !tbaa !22
  br label %351

350:                                              ; preds = %329
  call void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr nonnull %326, ptr noundef nonnull align 4 dereferenceable(4) %6)
  br label %351

351:                                              ; preds = %335, %349, %350
  %352 = sub i64 %330, %289
  %353 = ashr exact i64 %352, 2
  %354 = load ptr, ptr %0, align 8, !tbaa !58
  %355 = getelementptr inbounds i32, ptr %354, i64 %353
  br label %356

356:                                              ; preds = %325, %351, %305
  %357 = phi ptr [ %307, %305 ], [ %355, %351 ], [ %326, %325 ]
  %358 = getelementptr inbounds i32, ptr %1, i64 1
  %359 = icmp eq ptr %358, %2
  br i1 %359, label %497, label %360

360:                                              ; preds = %356, %493
  %361 = phi ptr [ %495, %493 ], [ %358, %356 ]
  %362 = phi ptr [ %494, %493 ], [ %357, %356 ]
  %363 = load i32, ptr %361, align 4, !tbaa !22
  store i32 %363, ptr %6, align 4, !tbaa !22
  %364 = load ptr, ptr %14, align 8, !tbaa !21
  %365 = getelementptr inbounds i32, ptr %364, i64 -1
  %366 = load i32, ptr %365, align 4, !tbaa !22
  %367 = icmp ugt i32 %363, %366
  br i1 %367, label %368, label %378

368:                                              ; preds = %360
  %369 = load ptr, ptr %266, align 8, !tbaa !417
  %370 = icmp eq ptr %364, %369
  br i1 %370, label %373, label %371

371:                                              ; preds = %368
  store i32 %363, ptr %364, align 4, !tbaa !22
  %372 = getelementptr inbounds i32, ptr %364, i64 1
  store ptr %372, ptr %14, align 8, !tbaa !313
  br label %375

373:                                              ; preds = %368
  call void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr nonnull %364, ptr noundef nonnull align 4 dereferenceable(4) %6)
  %374 = load ptr, ptr %14, align 8, !tbaa !21
  br label %375

375:                                              ; preds = %371, %373
  %376 = phi ptr [ %372, %371 ], [ %374, %373 ]
  %377 = getelementptr inbounds i32, ptr %376, i64 -1
  br label %493

378:                                              ; preds = %360
  %379 = load i32, ptr %362, align 4, !tbaa !22
  %380 = icmp ugt i32 %363, %379
  br i1 %380, label %381, label %438

381:                                              ; preds = %378
  %382 = getelementptr inbounds i32, ptr %362, i64 1
  %383 = ptrtoint ptr %364 to i64
  %384 = ptrtoint ptr %362 to i64
  %385 = sub i64 %383, %384
  %386 = icmp sgt i64 %385, 0
  br i1 %386, label %387, label %404

387:                                              ; preds = %381
  %388 = lshr exact i64 %385, 2
  br label %389

389:                                              ; preds = %389, %387
  %390 = phi i64 [ %388, %387 ], [ %400, %389 ]
  %391 = phi ptr [ %362, %387 ], [ %399, %389 ]
  %392 = lshr i64 %390, 1
  %393 = getelementptr inbounds i32, ptr %391, i64 %392
  %394 = load i32, ptr %393, align 4, !tbaa !22
  %395 = icmp ult i32 %394, %363
  %396 = getelementptr inbounds i32, ptr %393, i64 1
  %397 = xor i64 %392, -1
  %398 = add nsw i64 %390, %397
  %399 = select i1 %395, ptr %396, ptr %391
  %400 = select i1 %395, i64 %398, i64 %392
  %401 = icmp sgt i64 %400, 0
  br i1 %401, label %389, label %402

402:                                              ; preds = %389
  %403 = load i32, ptr %399, align 4, !tbaa !22
  br label %404

404:                                              ; preds = %402, %381
  %405 = phi i32 [ %379, %381 ], [ %403, %402 ]
  %406 = phi ptr [ %362, %381 ], [ %399, %402 ]
  %407 = icmp eq i32 %405, %363
  br i1 %407, label %493, label %408

408:                                              ; preds = %404
  %409 = load ptr, ptr %0, align 8, !tbaa !21
  %410 = ptrtoint ptr %406 to i64
  %411 = load ptr, ptr %266, align 8, !tbaa !417
  %412 = icmp eq ptr %364, %411
  br i1 %412, label %431, label %413

413:                                              ; preds = %408
  %414 = icmp eq ptr %364, %406
  %415 = getelementptr inbounds i32, ptr %364, i64 1
  br i1 %414, label %416, label %417

416:                                              ; preds = %413
  store i32 %363, ptr %364, align 4, !tbaa !22
  store ptr %415, ptr %14, align 8, !tbaa !313
  br label %432

417:                                              ; preds = %413
  store i32 %366, ptr %364, align 4, !tbaa !22
  store ptr %415, ptr %14, align 8, !tbaa !313
  %418 = load i32, ptr %6, align 4, !tbaa !22
  %419 = ptrtoint ptr %365 to i64
  %420 = sub i64 %419, %410
  %421 = icmp sgt i64 %420, 4
  br i1 %421, label %422, label %426, !prof !23

422:                                              ; preds = %417
  %423 = lshr exact i64 %420, 2
  %424 = sub nsw i64 0, %423
  %425 = getelementptr inbounds i32, ptr %364, i64 %424
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %425, ptr nonnull align 4 %406, i64 %420, i1 false)
  br label %430

426:                                              ; preds = %417
  %427 = icmp eq i64 %420, 4
  br i1 %427, label %428, label %430

428:                                              ; preds = %426
  %429 = load i32, ptr %406, align 4, !tbaa !22
  store i32 %429, ptr %365, align 4, !tbaa !22
  br label %430

430:                                              ; preds = %428, %426, %422
  store i32 %418, ptr %406, align 4, !tbaa !22
  br label %432

431:                                              ; preds = %408
  call void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr nonnull %406, ptr noundef nonnull align 4 dereferenceable(4) %6)
  br label %432

432:                                              ; preds = %416, %430, %431
  %433 = ptrtoint ptr %409 to i64
  %434 = sub i64 %410, %433
  %435 = ashr exact i64 %434, 2
  %436 = load ptr, ptr %0, align 8, !tbaa !58
  %437 = getelementptr inbounds i32, ptr %436, i64 %435
  br label %493

438:                                              ; preds = %378
  %439 = icmp ult i32 %363, %379
  br i1 %439, label %440, label %493

440:                                              ; preds = %438
  %441 = load ptr, ptr %0, align 8, !tbaa !21
  %442 = ptrtoint ptr %362 to i64
  %443 = ptrtoint ptr %441 to i64
  %444 = sub i64 %442, %443
  %445 = icmp sgt i64 %444, 0
  br i1 %445, label %446, label %461

446:                                              ; preds = %440
  %447 = lshr exact i64 %444, 2
  br label %448

448:                                              ; preds = %448, %446
  %449 = phi i64 [ %447, %446 ], [ %459, %448 ]
  %450 = phi ptr [ %441, %446 ], [ %458, %448 ]
  %451 = lshr i64 %449, 1
  %452 = getelementptr inbounds i32, ptr %450, i64 %451
  %453 = load i32, ptr %452, align 4, !tbaa !22
  %454 = icmp ult i32 %453, %363
  %455 = getelementptr inbounds i32, ptr %452, i64 1
  %456 = xor i64 %451, -1
  %457 = add nsw i64 %449, %456
  %458 = select i1 %454, ptr %455, ptr %450
  %459 = select i1 %454, i64 %457, i64 %451
  %460 = icmp sgt i64 %459, 0
  br i1 %460, label %448, label %461

461:                                              ; preds = %448, %440
  %462 = phi ptr [ %441, %440 ], [ %458, %448 ]
  %463 = load i32, ptr %462, align 4, !tbaa !22
  %464 = icmp eq i32 %463, %363
  br i1 %464, label %493, label %465

465:                                              ; preds = %461
  %466 = ptrtoint ptr %462 to i64
  %467 = load ptr, ptr %266, align 8, !tbaa !417
  %468 = icmp eq ptr %364, %467
  br i1 %468, label %487, label %469

469:                                              ; preds = %465
  %470 = icmp eq ptr %364, %462
  %471 = getelementptr inbounds i32, ptr %364, i64 1
  br i1 %470, label %472, label %473

472:                                              ; preds = %469
  store i32 %363, ptr %364, align 4, !tbaa !22
  store ptr %471, ptr %14, align 8, !tbaa !313
  br label %488

473:                                              ; preds = %469
  store i32 %366, ptr %364, align 4, !tbaa !22
  store ptr %471, ptr %14, align 8, !tbaa !313
  %474 = load i32, ptr %6, align 4, !tbaa !22
  %475 = ptrtoint ptr %365 to i64
  %476 = sub i64 %475, %466
  %477 = icmp sgt i64 %476, 4
  br i1 %477, label %478, label %482, !prof !23

478:                                              ; preds = %473
  %479 = lshr exact i64 %476, 2
  %480 = sub nsw i64 0, %479
  %481 = getelementptr inbounds i32, ptr %364, i64 %480
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %481, ptr nonnull align 4 %462, i64 %476, i1 false)
  br label %486

482:                                              ; preds = %473
  %483 = icmp eq i64 %476, 4
  br i1 %483, label %484, label %486

484:                                              ; preds = %482
  %485 = load i32, ptr %462, align 4, !tbaa !22
  store i32 %485, ptr %365, align 4, !tbaa !22
  br label %486

486:                                              ; preds = %484, %482, %478
  store i32 %474, ptr %462, align 4, !tbaa !22
  br label %488

487:                                              ; preds = %465
  call void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr nonnull %462, ptr noundef nonnull align 4 dereferenceable(4) %6)
  br label %488

488:                                              ; preds = %472, %486, %487
  %489 = sub i64 %466, %443
  %490 = ashr exact i64 %489, 2
  %491 = load ptr, ptr %0, align 8, !tbaa !58
  %492 = getelementptr inbounds i32, ptr %491, i64 %490
  br label %493

493:                                              ; preds = %375, %438, %488, %461, %404, %432
  %494 = phi ptr [ %377, %375 ], [ %382, %404 ], [ %437, %432 ], [ %362, %461 ], [ %492, %488 ], [ %362, %438 ]
  %495 = getelementptr inbounds i32, ptr %361, i64 1
  %496 = icmp eq ptr %495, %2
  br i1 %496, label %497, label %360

497:                                              ; preds = %493, %356
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #24
  br label %498

498:                                              ; preds = %52, %262, %94, %30, %497, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr %2, ptr %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq ptr %2, %3
  br i1 %5, label %138, label %6

6:                                                ; preds = %4
  %7 = ptrtoint ptr %3 to i64
  %8 = ptrtoint ptr %2 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 2
  %11 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !417
  %13 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !21
  %15 = ptrtoint ptr %12 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = ashr exact i64 %17, 2
  %19 = icmp ult i64 %18, %10
  br i1 %19, label %84, label %20

20:                                               ; preds = %6
  %21 = ptrtoint ptr %1 to i64
  %22 = sub i64 %16, %21
  %23 = ashr exact i64 %22, 2
  %24 = icmp ugt i64 %23, %10
  br i1 %24, label %25, label %55

25:                                               ; preds = %20
  %26 = sub nsw i64 0, %10
  %27 = getelementptr inbounds i32, ptr %14, i64 %26
  %28 = ptrtoint ptr %27 to i64
  %29 = icmp sgt i64 %9, 4
  br i1 %29, label %30, label %31, !prof !23

30:                                               ; preds = %25
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %14, ptr nonnull align 4 %27, i64 %9, i1 false)
  br label %35

31:                                               ; preds = %25
  %32 = icmp eq i64 %9, 4
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = load i32, ptr %27, align 4, !tbaa !22
  store i32 %34, ptr %14, align 4, !tbaa !22
  br label %35

35:                                               ; preds = %30, %31, %33
  %36 = load ptr, ptr %13, align 8, !tbaa !313
  %37 = getelementptr inbounds i32, ptr %36, i64 %10
  store ptr %37, ptr %13, align 8, !tbaa !313
  %38 = sub i64 %28, %21
  %39 = icmp sgt i64 %38, 4
  br i1 %39, label %40, label %44, !prof !23

40:                                               ; preds = %35
  %41 = lshr exact i64 %38, 2
  %42 = sub nsw i64 0, %41
  %43 = getelementptr inbounds i32, ptr %14, i64 %42
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %43, ptr align 4 %1, i64 %38, i1 false)
  br label %49

44:                                               ; preds = %35
  %45 = icmp eq i64 %38, 4
  br i1 %45, label %46, label %49

46:                                               ; preds = %44
  %47 = getelementptr inbounds i32, ptr %14, i64 -1
  %48 = load i32, ptr %1, align 4, !tbaa !22
  store i32 %48, ptr %47, align 4, !tbaa !22
  br label %49

49:                                               ; preds = %40, %44, %46
  br i1 %29, label %50, label %51, !prof !23

50:                                               ; preds = %49
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %1, ptr align 4 %2, i64 %9, i1 false)
  br label %138

51:                                               ; preds = %49
  %52 = icmp eq i64 %9, 4
  br i1 %52, label %53, label %138

53:                                               ; preds = %51
  %54 = load i32, ptr %2, align 4, !tbaa !22
  store i32 %54, ptr %1, align 4, !tbaa !22
  br label %138

55:                                               ; preds = %20
  %56 = icmp eq i64 %22, 4
  %57 = getelementptr inbounds i32, ptr %2, i64 %23
  %58 = ptrtoint ptr %57 to i64
  %59 = sub i64 %7, %58
  %60 = icmp sgt i64 %59, 4
  br i1 %60, label %61, label %62, !prof !23

61:                                               ; preds = %55
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %14, ptr align 4 %57, i64 %59, i1 false)
  br label %66

62:                                               ; preds = %55
  %63 = icmp eq i64 %59, 4
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = load i32, ptr %57, align 4, !tbaa !22
  store i32 %65, ptr %14, align 4, !tbaa !22
  br label %66

66:                                               ; preds = %61, %62, %64
  %67 = sub nsw i64 %10, %23
  %68 = load ptr, ptr %13, align 8, !tbaa !313
  %69 = getelementptr inbounds i32, ptr %68, i64 %67
  store ptr %69, ptr %13, align 8, !tbaa !313
  %70 = icmp sgt i64 %22, 4
  br i1 %70, label %71, label %72, !prof !23

71:                                               ; preds = %66
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %69, ptr align 4 %1, i64 %22, i1 false)
  br label %75

72:                                               ; preds = %66
  br i1 %56, label %73, label %75

73:                                               ; preds = %72
  %74 = load i32, ptr %1, align 4, !tbaa !22
  store i32 %74, ptr %69, align 4, !tbaa !22
  br label %75

75:                                               ; preds = %71, %72, %73
  %76 = load ptr, ptr %13, align 8, !tbaa !313
  %77 = getelementptr inbounds i32, ptr %76, i64 %23
  store ptr %77, ptr %13, align 8, !tbaa !313
  %78 = icmp sgt i64 %22, 4
  br i1 %78, label %79, label %80, !prof !23

79:                                               ; preds = %75
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %1, ptr align 4 %2, i64 %22, i1 false)
  br label %138

80:                                               ; preds = %75
  %81 = icmp eq i64 %22, 4
  br i1 %81, label %82, label %138

82:                                               ; preds = %80
  %83 = load i32, ptr %2, align 4, !tbaa !22
  store i32 %83, ptr %1, align 4, !tbaa !22
  br label %138

84:                                               ; preds = %6
  %85 = load ptr, ptr %0, align 8, !tbaa !58
  %86 = ptrtoint ptr %85 to i64
  %87 = sub i64 %16, %86
  %88 = ashr exact i64 %87, 2
  %89 = sub nsw i64 2305843009213693951, %88
  %90 = icmp ult i64 %89, %10
  br i1 %90, label %91, label %92

91:                                               ; preds = %84
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.26) #22
  unreachable

92:                                               ; preds = %84
  %93 = tail call i64 @llvm.umax.i64(i64 %88, i64 %10)
  %94 = add nsw i64 %93, %88
  %95 = icmp ult i64 %94, %88
  %96 = icmp ugt i64 %94, 2305843009213693951
  %97 = or i1 %95, %96
  %98 = select i1 %97, i64 2305843009213693951, i64 %94
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %92
  %101 = shl nuw nsw i64 %98, 2
  %102 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %101) #21
  br label %103

103:                                              ; preds = %92, %100
  %104 = phi ptr [ %102, %100 ], [ null, %92 ]
  %105 = ptrtoint ptr %1 to i64
  %106 = sub i64 %105, %86
  %107 = icmp sgt i64 %106, 4
  br i1 %107, label %108, label %109, !prof !23

108:                                              ; preds = %103
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %104, ptr align 4 %85, i64 %106, i1 false)
  br label %113

109:                                              ; preds = %103
  %110 = icmp eq i64 %106, 4
  br i1 %110, label %111, label %113

111:                                              ; preds = %109
  %112 = load i32, ptr %85, align 4, !tbaa !22
  store i32 %112, ptr %104, align 4, !tbaa !22
  br label %113

113:                                              ; preds = %111, %109, %108
  %114 = ashr exact i64 %106, 2
  %115 = getelementptr inbounds i32, ptr %104, i64 %114
  %116 = icmp sgt i64 %9, 4
  br i1 %116, label %117, label %118, !prof !23

117:                                              ; preds = %113
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %115, ptr align 4 %2, i64 %9, i1 false)
  br label %122

118:                                              ; preds = %113
  %119 = icmp eq i64 %9, 4
  br i1 %119, label %120, label %122

120:                                              ; preds = %118
  %121 = load i32, ptr %2, align 4, !tbaa !22
  store i32 %121, ptr %115, align 4, !tbaa !22
  br label %122

122:                                              ; preds = %120, %118, %117
  %123 = getelementptr inbounds i32, ptr %115, i64 %10
  %124 = sub i64 %16, %105
  %125 = icmp sgt i64 %124, 4
  br i1 %125, label %126, label %127, !prof !23

126:                                              ; preds = %122
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %123, ptr align 4 %1, i64 %124, i1 false)
  br label %131

127:                                              ; preds = %122
  %128 = icmp eq i64 %124, 4
  br i1 %128, label %129, label %131

129:                                              ; preds = %127
  %130 = load i32, ptr %1, align 4, !tbaa !22
  store i32 %130, ptr %123, align 4, !tbaa !22
  br label %131

131:                                              ; preds = %129, %127, %126
  %132 = ashr exact i64 %124, 2
  %133 = getelementptr inbounds i32, ptr %123, i64 %132
  %134 = icmp eq ptr %85, null
  br i1 %134, label %136, label %135

135:                                              ; preds = %131
  tail call void @_ZdlPv(ptr noundef nonnull %85) #23
  br label %136

136:                                              ; preds = %131, %135
  store ptr %104, ptr %0, align 8, !tbaa !58
  store ptr %133, ptr %13, align 8, !tbaa !313
  %137 = getelementptr inbounds i32, ptr %104, i64 %98
  store ptr %137, ptr %11, align 8, !tbaa !417
  br label %138

138:                                              ; preds = %82, %80, %79, %53, %51, %50, %136, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define internal void @_GLOBAL__sub_I_constraint_matrix.cc() #0 section ".text.startup" personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) @_ZN6dealii16ConstraintMatrix19default_empty_tableE)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) getelementptr inbounds (%"class.dealii::Table.105", ptr @_ZN6dealii16ConstraintMatrix19default_empty_tableE, i64 0, i32 0, i32 1), i8 0, i64 20, i1 false)
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii5TableILi2EbEE, i64 0, inrange i32 0, i64 2), ptr @_ZN6dealii16ConstraintMatrix19default_empty_tableE, align 8, !tbaa !311
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN6dealii9TableBaseILi2EbED2Ev, ptr nonnull @_ZN6dealii16ConstraintMatrix19default_empty_tableE, ptr nonnull @__dso_handle) #24
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #19

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v2i32(<2 x i32>) #20

attributes #0 = { sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { noinline noreturn nounwind sspstrong uwtable "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #5 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #6 = { inlinehint sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #7 = { nofree nounwind }
attributes #8 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #9 = { nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #10 = { nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #11 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #12 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #13 = { nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #14 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #15 = { mustprogress nofree nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #16 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #17 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #18 = { inlinehint nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #19 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #20 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #21 = { builtin allocsize(0) }
attributes #22 = { noreturn }
attributes #23 = { builtin nounwind }
attributes #24 = { nounwind }
attributes #25 = { noreturn nounwind }
attributes #26 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !8, i64 72}
!6 = !{!"_ZTSN6dealii6VectorIfEE", !7, i64 0, !8, i64 72, !8, i64 76, !19, i64 80}
!7 = !{!"_ZTSN6dealii11SubscriptorE", !8, i64 8, !11, i64 16, !19, i64 64}
!8 = !{!"int", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
!11 = !{!"_ZTSSt3mapIPKcjSt4lessIS1_ESaISt4pairIKS1_jEEE", !12, i64 0}
!12 = !{!"_ZTSSt8_Rb_treeIPKcSt4pairIKS1_jESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE", !13, i64 0}
!13 = !{!"_ZTSNSt8_Rb_treeIPKcSt4pairIKS1_jESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb0EEE", !14, i64 0, !16, i64 8}
!14 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessIPKcEE", !15, i64 0}
!15 = !{!"_ZTSSt4lessIPKcE"}
!16 = !{!"_ZTSSt15_Rb_tree_header", !17, i64 0, !20, i64 32}
!17 = !{!"_ZTSSt18_Rb_tree_node_base", !18, i64 0, !19, i64 8, !19, i64 16, !19, i64 24}
!18 = !{!"_ZTSSt14_Rb_tree_color", !9, i64 0}
!19 = !{!"any pointer", !9, i64 0}
!20 = !{!"long", !9, i64 0}
!21 = !{!19, !19, i64 0}
!22 = !{!8, !8, i64 0}
!23 = !{!"branch_weights", i32 2000, i32 1}
!24 = !{!25, !8, i64 0}
!25 = !{!"_ZTSN6dealii16ConstraintMatrix14ConstraintLineE", !8, i64 0, !26, i64 8, !30, i64 32}
!26 = !{!"_ZTSSt6vectorISt4pairIjdESaIS1_EE", !27, i64 0}
!27 = !{!"_ZTSSt12_Vector_baseISt4pairIjdESaIS1_EE", !28, i64 0}
!28 = !{!"_ZTSNSt12_Vector_baseISt4pairIjdESaIS1_EE12_Vector_implE", !29, i64 0}
!29 = !{!"_ZTSNSt12_Vector_baseISt4pairIjdESaIS1_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!30 = !{!"double", !9, i64 0}
!31 = !{!29, !19, i64 8}
!32 = !{!29, !19, i64 0}
!33 = !{!34, !34, i64 0}
!34 = !{!"float", !9, i64 0}
!35 = !{!36, !30, i64 8}
!36 = !{!"_ZTSSt4pairIjdE", !8, i64 0, !30, i64 8}
!37 = !{!36, !8, i64 0}
!38 = !{!39, !8, i64 76}
!39 = !{!"_ZTSN6dealii15SparsityPatternE", !7, i64 0, !8, i64 72, !8, i64 76, !8, i64 80, !20, i64 88, !8, i64 96, !19, i64 104, !19, i64 112, !40, i64 120, !40, i64 121}
!40 = !{!"bool", !9, i64 0}
!41 = !{!39, !19, i64 104}
!42 = !{!20, !20, i64 0}
!43 = !{!39, !19, i64 112}
!44 = !{!45, !19, i64 24}
!45 = !{!"_ZTSN6dealii12SparseMatrixIfEE", !46, i64 8, !19, i64 24, !8, i64 32}
!46 = !{!"_ZTSN6dealii12SmartPointerIKNS_15SparsityPatternEEE", !19, i64 0, !19, i64 8}
!47 = !{!46, !19, i64 0}
!48 = !{!25, !30, i64 32}
!49 = !{!6, !19, i64 80}
!50 = !{!51, !19, i64 24}
!51 = !{!"_ZTSN6dealii12SparseMatrixIdEE", !46, i64 8, !19, i64 24, !8, i64 32}
!52 = !{!30, !30, i64 0}
!53 = !{!54, !8, i64 72}
!54 = !{!"_ZTSN6dealii6VectorIdEE", !7, i64 0, !8, i64 72, !8, i64 76, !19, i64 80}
!55 = !{!56, !19, i64 0}
!56 = !{!"_ZTSSt18_Bit_iterator_base", !19, i64 0, !8, i64 8}
!57 = !{!56, !8, i64 8}
!58 = !{!59, !19, i64 0}
!59 = !{!"_ZTSNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!60 = !{!54, !19, i64 80}
!61 = !{!62, !8, i64 0}
!62 = !{!"_ZTSN6dealii12BlockIndicesE", !8, i64 0, !63, i64 8}
!63 = !{!"_ZTSSt6vectorIjSaIjEE", !64, i64 0}
!64 = !{!"_ZTSSt12_Vector_baseIjSaIjEE", !65, i64 0}
!65 = !{!"_ZTSNSt12_Vector_baseIjSaIjEE12_Vector_implE", !59, i64 0}
!66 = !{!67, !19, i64 0}
!67 = !{!"_ZTSNSt12_Vector_baseIN6dealii6VectorIdEESaIS2_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!68 = !{!69, !19, i64 0}
!69 = !{!"_ZTSNSt12_Vector_baseIN6dealii6VectorIfEESaIS2_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!70 = !{!71, !19, i64 8}
!71 = !{!"_ZTSNSt12_Vector_baseIN6dealii16ConstraintMatrix14ConstraintLineESaIS2_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!72 = !{!71, !19, i64 0}
!73 = !{}
!74 = !{!75, !77}
!75 = distinct !{!75, !76, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!76 = distinct !{!76, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!77 = distinct !{!77, !78, !"_ZN6dealii12SparseMatrixIfE5beginEj: argument 0"}
!78 = distinct !{!78, !"_ZN6dealii12SparseMatrixIfE5beginEj"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!81 = distinct !{!81, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!82 = distinct !{!82, !83}
!83 = !{!"llvm.loop.peeled.count", i32 1}
!84 = !{!85, !87}
!85 = distinct !{!85, !86, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!86 = distinct !{!86, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!87 = distinct !{!87, !88, !"_ZN6dealii12SparseMatrixIfE5beginEj: argument 0"}
!88 = distinct !{!88, !"_ZN6dealii12SparseMatrixIfE5beginEj"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!91 = distinct !{!91, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!92 = !{!93, !95}
!93 = distinct !{!93, !94, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!94 = distinct !{!94, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!95 = distinct !{!95, !96, !"_ZN6dealii12SparseMatrixIfE5beginEj: argument 0"}
!96 = distinct !{!96, !"_ZN6dealii12SparseMatrixIfE5beginEj"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!99 = distinct !{!99, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!100 = !{!101, !103}
!101 = distinct !{!101, !102, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!102 = distinct !{!102, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!103 = distinct !{!103, !104, !"_ZN6dealii12SparseMatrixIfE5beginEj: argument 0"}
!104 = distinct !{!104, !"_ZN6dealii12SparseMatrixIfE5beginEj"}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!107 = distinct !{!107, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!108 = distinct !{!108, !109}
!109 = !{!"llvm.loop.unroll.disable"}
!110 = !{!111, !113}
!111 = distinct !{!111, !112, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!112 = distinct !{!112, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!113 = distinct !{!113, !114, !"_ZN6dealii12SparseMatrixIdE5beginEj: argument 0"}
!114 = distinct !{!114, !"_ZN6dealii12SparseMatrixIdE5beginEj"}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!117 = distinct !{!117, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!118 = !{!119, !121}
!119 = distinct !{!119, !120, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!120 = distinct !{!120, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!121 = distinct !{!121, !122, !"_ZN6dealii12SparseMatrixIdE5beginEj: argument 0"}
!122 = distinct !{!122, !"_ZN6dealii12SparseMatrixIdE5beginEj"}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!125 = distinct !{!125, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!126 = distinct !{!126, !109}
!127 = !{!128, !130}
!128 = distinct !{!128, !129, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!129 = distinct !{!129, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!130 = distinct !{!130, !131, !"_ZN6dealii12SparseMatrixIdE5beginEj: argument 0"}
!131 = distinct !{!131, !"_ZN6dealii12SparseMatrixIdE5beginEj"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!134 = distinct !{!134, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!135 = !{!136, !138}
!136 = distinct !{!136, !137, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!137 = distinct !{!137, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!138 = distinct !{!138, !139, !"_ZN6dealii12SparseMatrixIdE5beginEj: argument 0"}
!139 = distinct !{!139, !"_ZN6dealii12SparseMatrixIdE5beginEj"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!142 = distinct !{!142, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!143 = !{!144, !19, i64 72}
!144 = !{!"_ZTSN6dealii9TableBaseILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEE", !7, i64 0, !19, i64 72, !8, i64 80, !145, i64 84}
!145 = !{!"_ZTSN6dealii12TableIndicesILi2EEE", !146, i64 0}
!146 = !{!"_ZTSN6dealii16TableIndicesBaseILi2EEE", !9, i64 0}
!147 = !{!148, !19, i64 0}
!148 = !{!"_ZTSN6dealii12SmartPointerINS_12SparseMatrixIfEEEE", !19, i64 0, !19, i64 8}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!151 = distinct !{!151, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!152 = !{!153}
!153 = distinct !{!153, !154, !"_ZN6dealii12SparseMatrixIfE5beginEj: argument 0"}
!154 = distinct !{!154, !"_ZN6dealii12SparseMatrixIfE5beginEj"}
!155 = !{!156, !153}
!156 = distinct !{!156, !157, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!157 = distinct !{!157, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!158 = !{!159}
!159 = distinct !{!159, !160, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!160 = distinct !{!160, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!161 = !{!162}
!162 = distinct !{!162, !163, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!163 = distinct !{!163, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!164 = !{!165}
!165 = distinct !{!165, !166, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!166 = distinct !{!166, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!169 = distinct !{!169, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!170 = !{!171}
!171 = distinct !{!171, !172, !"_ZN6dealii12SparseMatrixIfE5beginEj: argument 0"}
!172 = distinct !{!172, !"_ZN6dealii12SparseMatrixIfE5beginEj"}
!173 = !{!174, !171}
!174 = distinct !{!174, !175, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!175 = distinct !{!175, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!176 = !{!177}
!177 = distinct !{!177, !178, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!178 = distinct !{!178, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!179 = !{!180}
!180 = distinct !{!180, !181, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!181 = distinct !{!181, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!182 = !{!183}
!183 = distinct !{!183, !184, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!184 = distinct !{!184, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!185 = !{!186}
!186 = distinct !{!186, !187, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!187 = distinct !{!187, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!188 = !{!189}
!189 = distinct !{!189, !190, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!190 = distinct !{!190, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!191 = !{!192}
!192 = distinct !{!192, !193, !"_ZN6dealii12SparseMatrixIfE5beginEj: argument 0"}
!193 = distinct !{!193, !"_ZN6dealii12SparseMatrixIfE5beginEj"}
!194 = !{!195, !192}
!195 = distinct !{!195, !196, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!196 = distinct !{!196, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!197 = !{!198}
!198 = distinct !{!198, !199, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!199 = distinct !{!199, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!200 = !{!201}
!201 = distinct !{!201, !202, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!202 = distinct !{!202, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!203 = !{!204}
!204 = distinct !{!204, !205, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!205 = distinct !{!205, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!206 = !{!207}
!207 = distinct !{!207, !208, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!208 = distinct !{!208, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!209 = !{!210}
!210 = distinct !{!210, !211, !"_ZN6dealii12SparseMatrixIfE5beginEj: argument 0"}
!211 = distinct !{!211, !"_ZN6dealii12SparseMatrixIfE5beginEj"}
!212 = !{!213, !210}
!213 = distinct !{!213, !214, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!214 = distinct !{!214, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!215 = !{!216}
!216 = distinct !{!216, !217, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!217 = distinct !{!217, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!218 = !{!219}
!219 = distinct !{!219, !220, !"_ZN6dealii12SparseMatrixIfE3endEj: argument 0"}
!220 = distinct !{!220, !"_ZN6dealii12SparseMatrixIfE3endEj"}
!221 = !{!222}
!222 = distinct !{!222, !223, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!223 = distinct !{!223, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!224 = !{!225}
!225 = distinct !{!225, !226, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!226 = distinct !{!226, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!227 = !{!228, !19, i64 72}
!228 = !{!"_ZTSN6dealii9TableBaseILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEE", !7, i64 0, !19, i64 72, !8, i64 80, !145, i64 84}
!229 = !{!230, !19, i64 0}
!230 = !{!"_ZTSN6dealii12SmartPointerINS_12SparseMatrixIdEEEE", !19, i64 0, !19, i64 8}
!231 = distinct !{!231, !109}
!232 = !{!233}
!233 = distinct !{!233, !234, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!234 = distinct !{!234, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!235 = !{!236}
!236 = distinct !{!236, !237, !"_ZN6dealii12SparseMatrixIdE5beginEj: argument 0"}
!237 = distinct !{!237, !"_ZN6dealii12SparseMatrixIdE5beginEj"}
!238 = !{!239, !236}
!239 = distinct !{!239, !240, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!240 = distinct !{!240, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!241 = !{!242}
!242 = distinct !{!242, !243, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!243 = distinct !{!243, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!244 = !{!245}
!245 = distinct !{!245, !246, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!246 = distinct !{!246, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!247 = !{!248}
!248 = distinct !{!248, !249, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!249 = distinct !{!249, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!250 = !{!251}
!251 = distinct !{!251, !252, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!252 = distinct !{!252, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!253 = !{!254}
!254 = distinct !{!254, !255, !"_ZN6dealii12SparseMatrixIdE5beginEj: argument 0"}
!255 = distinct !{!255, !"_ZN6dealii12SparseMatrixIdE5beginEj"}
!256 = !{!257, !254}
!257 = distinct !{!257, !258, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!258 = distinct !{!258, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!259 = !{!260}
!260 = distinct !{!260, !261, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!261 = distinct !{!261, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!262 = !{!263}
!263 = distinct !{!263, !264, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!264 = distinct !{!264, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!265 = !{!266}
!266 = distinct !{!266, !267, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!267 = distinct !{!267, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!268 = !{!269}
!269 = distinct !{!269, !270, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!270 = distinct !{!270, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!271 = distinct !{!271, !109}
!272 = !{!273}
!273 = distinct !{!273, !274, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!274 = distinct !{!274, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!275 = !{!276}
!276 = distinct !{!276, !277, !"_ZN6dealii12SparseMatrixIdE5beginEj: argument 0"}
!277 = distinct !{!277, !"_ZN6dealii12SparseMatrixIdE5beginEj"}
!278 = !{!279, !276}
!279 = distinct !{!279, !280, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!280 = distinct !{!280, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!281 = !{!282}
!282 = distinct !{!282, !283, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!283 = distinct !{!283, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!284 = !{!285}
!285 = distinct !{!285, !286, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!286 = distinct !{!286, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!287 = !{!288}
!288 = distinct !{!288, !289, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!289 = distinct !{!289, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!290 = !{!291}
!291 = distinct !{!291, !292, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!292 = distinct !{!292, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!293 = !{!294}
!294 = distinct !{!294, !295, !"_ZN6dealii12SparseMatrixIdE5beginEj: argument 0"}
!295 = distinct !{!295, !"_ZN6dealii12SparseMatrixIdE5beginEj"}
!296 = !{!297, !294}
!297 = distinct !{!297, !298, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!298 = distinct !{!298, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!299 = !{!300}
!300 = distinct !{!300, !301, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!301 = distinct !{!301, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!302 = !{!303}
!303 = distinct !{!303, !304, !"_ZN6dealii12SparseMatrixIdE3endEj: argument 0"}
!304 = distinct !{!304, !"_ZN6dealii12SparseMatrixIdE3endEj"}
!305 = !{!306}
!306 = distinct !{!306, !307, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!307 = distinct !{!307, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!308 = !{!309}
!309 = distinct !{!309, !310, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!310 = distinct !{!310, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!311 = !{!312, !312, i64 0}
!312 = !{!"vtable pointer", !10, i64 0}
!313 = !{!59, !19, i64 8}
!314 = !{!315, !19, i64 72}
!315 = !{!"_ZTSN6dealii9TableBaseILi2EdEE", !7, i64 0, !19, i64 72, !8, i64 80, !145, i64 84}
!316 = distinct !{!316, !109}
!317 = !{!318, !8, i64 0}
!318 = !{!"_ZTSN6dealii9internals12distributingE", !8, i64 0, !8, i64 4, !19, i64 8}
!319 = !{!318, !8, i64 4}
!320 = !{!318, !19, i64 8}
!321 = !{!322, !19, i64 0}
!322 = !{!"_ZTSNSt12_Vector_baseIN6dealii9internals12distributingESaIS2_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!323 = !{!322, !19, i64 16}
!324 = distinct !{!324, !109}
!325 = !{!322, !19, i64 8}
!326 = !{!327, !8, i64 0}
!327 = !{!"_ZTSSt4pairIjPKN6dealii16ConstraintMatrix14ConstraintLineEE", !8, i64 0, !19, i64 8}
!328 = !{!327, !19, i64 8}
!329 = distinct !{!329, !109}
!330 = distinct !{!330, !109}
!331 = distinct !{!331, !109}
!332 = distinct !{!332, !109}
!333 = distinct !{!333, !109}
!334 = distinct !{!334, !109}
!335 = !{!336}
!336 = distinct !{!336, !337, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!337 = distinct !{!337, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!338 = distinct !{!338, !109}
!339 = !{!340}
!340 = distinct !{!340, !341}
!341 = distinct !{!341, !"LVerDomain"}
!342 = !{!343}
!343 = distinct !{!343, !341}
!344 = distinct !{!344, !345, !346}
!345 = !{!"llvm.loop.isvectorized", i32 1}
!346 = !{!"llvm.loop.unroll.runtime.disable"}
!347 = distinct !{!347, !345, !346}
!348 = distinct !{!348, !346, !345}
!349 = distinct !{!349, !345}
!350 = !{!351}
!351 = distinct !{!351, !352, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!352 = distinct !{!352, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!353 = distinct !{!353, !109}
!354 = distinct !{!354, !109}
!355 = !{!356}
!356 = distinct !{!356, !357, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!357 = distinct !{!357, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!358 = distinct !{!358, !109}
!359 = !{!360}
!360 = distinct !{!360, !361}
!361 = distinct !{!361, !"LVerDomain"}
!362 = !{!363}
!363 = distinct !{!363, !361}
!364 = distinct !{!364, !345, !346}
!365 = distinct !{!365, !345, !346}
!366 = distinct !{!366, !346, !345}
!367 = distinct !{!367, !345}
!368 = !{!369}
!369 = distinct !{!369, !370, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj: argument 0"}
!370 = distinct !{!370, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIdEEEEEixEj"}
!371 = distinct !{!371, !109}
!372 = distinct !{!372, !109}
!373 = !{!374}
!374 = distinct !{!374, !375, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!375 = distinct !{!375, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!376 = distinct !{!376, !109}
!377 = !{!378}
!378 = distinct !{!378, !379}
!379 = distinct !{!379, !"LVerDomain"}
!380 = !{!381}
!381 = distinct !{!381, !379}
!382 = distinct !{!382, !345, !346}
!383 = distinct !{!383, !345, !346}
!384 = distinct !{!384, !346, !345}
!385 = distinct !{!385, !345}
!386 = !{!387}
!387 = distinct !{!387, !388, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!388 = distinct !{!388, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!389 = distinct !{!389, !109}
!390 = distinct !{!390, !109}
!391 = !{!392}
!392 = distinct !{!392, !393, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!393 = distinct !{!393, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!394 = distinct !{!394, !109}
!395 = !{!396}
!396 = distinct !{!396, !397}
!397 = distinct !{!397, !"LVerDomain"}
!398 = !{!399}
!399 = distinct !{!399, !397}
!400 = distinct !{!400, !345, !346}
!401 = distinct !{!401, !345, !346}
!402 = distinct !{!402, !346, !345}
!403 = distinct !{!403, !345}
!404 = !{!405}
!405 = distinct !{!405, !406, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj: argument 0"}
!406 = distinct !{!406, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_12SparseMatrixIfEEEEEixEj"}
!407 = distinct !{!407, !109}
!408 = distinct !{!408, !109}
!409 = !{!410, !30, i64 8}
!410 = !{!"_ZTSN6dealii14SparseMatrixEZIdE5EntryE", !8, i64 0, !30, i64 8}
!411 = distinct !{!411, !109}
!412 = distinct !{!412, !109}
!413 = !{!414, !34, i64 4}
!414 = !{!"_ZTSN6dealii14SparseMatrixEZIfE5EntryE", !8, i64 0, !34, i64 4}
!415 = distinct !{!415, !109}
!416 = distinct !{!416, !109}
!417 = !{!59, !19, i64 16}
!418 = !{i64 0, i64 65}
!419 = distinct !{!419, !420}
!420 = !{!"llvm.loop.unswitch.partial.disable"}
!421 = distinct !{!421, !109}
!422 = !{!423, !19, i64 72}
!423 = !{!"_ZTSN6dealii9TableBaseILi2EbEE", !7, i64 0, !19, i64 72, !8, i64 80, !145, i64 84}
!424 = !{!40, !40, i64 0}
!425 = !{i8 0, i8 2}
!426 = !{!427}
!427 = distinct !{!427, !428, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!428 = distinct !{!428, !"_ZNK6dealii5TableILi2EbEixEj"}
!429 = !{!430}
!430 = distinct !{!430, !431, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!431 = distinct !{!431, !"_ZNK6dealii5TableILi2EbEixEj"}
!432 = !{!433}
!433 = distinct !{!433, !434, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!434 = distinct !{!434, !"_ZNK6dealii5TableILi2EbEixEj"}
!435 = !{!436}
!436 = distinct !{!436, !437, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!437 = distinct !{!437, !"_ZNK6dealii5TableILi2EbEixEj"}
!438 = !{!439, !19, i64 0}
!439 = !{!"_ZTSNSt12_Vector_baseIN6dealii25CompressedSparsityPattern4LineESaIS2_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!440 = !{!441, !8, i64 56}
!441 = !{!"_ZTSN6dealii25CompressedSparsityPattern4LineE", !63, i64 0, !9, i64 24, !8, i64 56}
!442 = distinct !{!442, !109}
!443 = !{!444}
!444 = distinct !{!444, !445, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!445 = distinct !{!445, !"_ZNK6dealii5TableILi2EbEixEj"}
!446 = !{!447}
!447 = distinct !{!447, !448, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!448 = distinct !{!448, !"_ZNK6dealii5TableILi2EbEixEj"}
!449 = !{!450}
!450 = distinct !{!450, !451, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!451 = distinct !{!451, !"_ZNK6dealii5TableILi2EbEixEj"}
!452 = !{!453}
!453 = distinct !{!453, !454, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!454 = distinct !{!454, !"_ZNK6dealii5TableILi2EbEixEj"}
!455 = !{!456, !19, i64 0}
!456 = !{!"_ZTSNSt12_Vector_baseIN6dealii28CompressedSetSparsityPattern4LineESaIS2_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!457 = !{!16, !19, i64 16}
!458 = !{!16, !20, i64 32}
!459 = distinct !{!459, !109}
!460 = !{!461}
!461 = distinct !{!461, !462, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!462 = distinct !{!462, !"_ZNK6dealii5TableILi2EbEixEj"}
!463 = !{!464}
!464 = distinct !{!464, !465, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!465 = distinct !{!465, !"_ZNK6dealii5TableILi2EbEixEj"}
!466 = !{!467}
!467 = distinct !{!467, !468, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!468 = distinct !{!468, !"_ZNK6dealii5TableILi2EbEixEj"}
!469 = !{!470}
!470 = distinct !{!470, !471, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!471 = distinct !{!471, !"_ZNK6dealii5TableILi2EbEixEj"}
!472 = !{!473, !19, i64 0}
!473 = !{!"_ZTSNSt12_Vector_baseIN6dealii31CompressedSimpleSparsityPattern4LineESaIS2_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!474 = distinct !{!474, !109}
!475 = !{!476}
!476 = distinct !{!476, !477, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!477 = distinct !{!477, !"_ZNK6dealii5TableILi2EbEixEj"}
!478 = !{!479}
!479 = distinct !{!479, !480, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!480 = distinct !{!480, !"_ZNK6dealii5TableILi2EbEixEj"}
!481 = !{!482}
!482 = distinct !{!482, !483, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!483 = distinct !{!483, !"_ZNK6dealii5TableILi2EbEixEj"}
!484 = !{!485}
!485 = distinct !{!485, !486, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!486 = distinct !{!486, !"_ZNK6dealii5TableILi2EbEixEj"}
!487 = !{!488, !8, i64 72}
!488 = !{!"_ZTSN6dealii24BlockSparsityPatternBaseINS_15SparsityPatternEEE", !7, i64 0, !8, i64 72, !8, i64 76, !489, i64 80, !62, i64 176, !62, i64 208, !63, i64 240, !491, i64 264}
!489 = !{!"_ZTSN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEE", !490, i64 0}
!490 = !{!"_ZTSN6dealii9TableBaseILi2ENS_12SmartPointerINS_15SparsityPatternEEEEE", !7, i64 0, !19, i64 72, !8, i64 80, !145, i64 84}
!491 = !{!"_ZTSSt6vectorIS_IjSaIjEESaIS1_EE", !492, i64 0}
!492 = !{!"_ZTSSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE", !493, i64 0}
!493 = !{!"_ZTSNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE12_Vector_implE", !494, i64 0}
!494 = !{!"_ZTSNSt12_Vector_baseISt6vectorIjSaIjEESaIS2_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!495 = distinct !{!495, !345, !346}
!496 = distinct !{!496, !346, !345}
!497 = !{!490, !19, i64 72}
!498 = !{!499}
!499 = distinct !{!499, !500, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!500 = distinct !{!500, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!501 = !{!502, !19, i64 0}
!502 = !{!"_ZTSN6dealii12SmartPointerINS_15SparsityPatternEEE", !19, i64 0, !19, i64 8}
!503 = !{!504}
!504 = distinct !{!504, !505, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!505 = distinct !{!505, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!506 = !{!507}
!507 = distinct !{!507, !508, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!508 = distinct !{!508, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!509 = !{!510}
!510 = distinct !{!510, !511, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!511 = distinct !{!511, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!512 = distinct !{!512, !109}
!513 = !{!514}
!514 = distinct !{!514, !515, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!515 = distinct !{!515, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!516 = !{!517}
!517 = distinct !{!517, !518, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!518 = distinct !{!518, !"_ZNK6dealii5TableILi2EbEixEj"}
!519 = !{!520}
!520 = distinct !{!520, !521, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!521 = distinct !{!521, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!522 = !{!523}
!523 = distinct !{!523, !524, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!524 = distinct !{!524, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!525 = distinct !{!525, !109}
!526 = !{!527}
!527 = distinct !{!527, !528}
!528 = distinct !{!528, !"LVerDomain"}
!529 = !{!530}
!530 = distinct !{!530, !528}
!531 = distinct !{!531, !345, !346}
!532 = distinct !{!532, !345, !346}
!533 = distinct !{!533, !346, !345}
!534 = distinct !{!534, !345}
!535 = !{!536}
!536 = distinct !{!536, !537, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!537 = distinct !{!537, !"_ZNK6dealii5TableILi2EbEixEj"}
!538 = !{!539}
!539 = distinct !{!539, !540, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!540 = distinct !{!540, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!541 = !{!542}
!542 = distinct !{!542, !543, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!543 = distinct !{!543, !"_ZNK6dealii5TableILi2EbEixEj"}
!544 = !{!545}
!545 = distinct !{!545, !546, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!546 = distinct !{!546, !"_ZNK6dealii5TableILi2EbEixEj"}
!547 = !{!548, !8, i64 72}
!548 = !{!"_ZTSN6dealii24BlockSparsityPatternBaseINS_25CompressedSparsityPatternEEE", !7, i64 0, !8, i64 72, !8, i64 76, !549, i64 80, !62, i64 176, !62, i64 208, !63, i64 240, !491, i64 264}
!549 = !{!"_ZTSN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEE", !550, i64 0}
!550 = !{!"_ZTSN6dealii9TableBaseILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEE", !7, i64 0, !19, i64 72, !8, i64 80, !145, i64 84}
!551 = distinct !{!551, !345, !346}
!552 = distinct !{!552, !346, !345}
!553 = !{!550, !19, i64 72}
!554 = !{!555}
!555 = distinct !{!555, !556, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!556 = distinct !{!556, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!557 = !{!558, !19, i64 0}
!558 = !{!"_ZTSN6dealii12SmartPointerINS_25CompressedSparsityPatternEEE", !19, i64 0, !19, i64 8}
!559 = !{!560}
!560 = distinct !{!560, !561, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!561 = distinct !{!561, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!562 = !{!563}
!563 = distinct !{!563, !564, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!564 = distinct !{!564, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!565 = !{!566}
!566 = distinct !{!566, !567, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!567 = distinct !{!567, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!568 = distinct !{!568, !109}
!569 = !{!570}
!570 = distinct !{!570, !571, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!571 = distinct !{!571, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!572 = !{!573}
!573 = distinct !{!573, !574, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!574 = distinct !{!574, !"_ZNK6dealii5TableILi2EbEixEj"}
!575 = !{!576}
!576 = distinct !{!576, !577, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!577 = distinct !{!577, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!578 = !{!579}
!579 = distinct !{!579, !580, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!580 = distinct !{!580, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!581 = distinct !{!581, !109}
!582 = !{!583}
!583 = distinct !{!583, !584}
!584 = distinct !{!584, !"LVerDomain"}
!585 = !{!586}
!586 = distinct !{!586, !584}
!587 = distinct !{!587, !345, !346}
!588 = distinct !{!588, !345, !346}
!589 = distinct !{!589, !346, !345}
!590 = distinct !{!590, !345}
!591 = !{!592}
!592 = distinct !{!592, !593, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!593 = distinct !{!593, !"_ZNK6dealii5TableILi2EbEixEj"}
!594 = !{!595}
!595 = distinct !{!595, !596, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!596 = distinct !{!596, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!597 = !{!598}
!598 = distinct !{!598, !599, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!599 = distinct !{!599, !"_ZNK6dealii5TableILi2EbEixEj"}
!600 = !{!601}
!601 = distinct !{!601, !602, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!602 = distinct !{!602, !"_ZNK6dealii5TableILi2EbEixEj"}
!603 = !{!604, !8, i64 72}
!604 = !{!"_ZTSN6dealii24BlockSparsityPatternBaseINS_28CompressedSetSparsityPatternEEE", !7, i64 0, !8, i64 72, !8, i64 76, !605, i64 80, !62, i64 176, !62, i64 208, !63, i64 240, !491, i64 264}
!605 = !{!"_ZTSN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEE", !606, i64 0}
!606 = !{!"_ZTSN6dealii9TableBaseILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEE", !7, i64 0, !19, i64 72, !8, i64 80, !145, i64 84}
!607 = distinct !{!607, !345, !346}
!608 = distinct !{!608, !346, !345}
!609 = !{!606, !19, i64 72}
!610 = !{!611}
!611 = distinct !{!611, !612, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!612 = distinct !{!612, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!613 = !{!614, !19, i64 0}
!614 = !{!"_ZTSN6dealii12SmartPointerINS_28CompressedSetSparsityPatternEEE", !19, i64 0, !19, i64 8}
!615 = !{!616}
!616 = distinct !{!616, !617, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!617 = distinct !{!617, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!618 = !{!619}
!619 = distinct !{!619, !620, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!620 = distinct !{!620, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!621 = !{!622}
!622 = distinct !{!622, !623, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!623 = distinct !{!623, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!624 = distinct !{!624, !109}
!625 = !{!626}
!626 = distinct !{!626, !627, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!627 = distinct !{!627, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!628 = !{!629}
!629 = distinct !{!629, !630, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!630 = distinct !{!630, !"_ZNK6dealii5TableILi2EbEixEj"}
!631 = !{!632}
!632 = distinct !{!632, !633, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!633 = distinct !{!633, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!634 = !{!635}
!635 = distinct !{!635, !636, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!636 = distinct !{!636, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!637 = distinct !{!637, !109}
!638 = !{!639}
!639 = distinct !{!639, !640}
!640 = distinct !{!640, !"LVerDomain"}
!641 = !{!642}
!642 = distinct !{!642, !640}
!643 = distinct !{!643, !345, !346}
!644 = distinct !{!644, !345, !346}
!645 = distinct !{!645, !346, !345}
!646 = distinct !{!646, !345}
!647 = !{!648}
!648 = distinct !{!648, !649, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!649 = distinct !{!649, !"_ZNK6dealii5TableILi2EbEixEj"}
!650 = !{!651}
!651 = distinct !{!651, !652, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!652 = distinct !{!652, !"_ZNK6dealii5TableILi2EbEixEj"}
!653 = !{!654}
!654 = distinct !{!654, !655, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!655 = distinct !{!655, !"_ZNK6dealii5TableILi2EbEixEj"}
!656 = !{!657}
!657 = distinct !{!657, !658, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!658 = distinct !{!658, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!659 = !{!660, !8, i64 72}
!660 = !{!"_ZTSN6dealii24BlockSparsityPatternBaseINS_31CompressedSimpleSparsityPatternEEE", !7, i64 0, !8, i64 72, !8, i64 76, !661, i64 80, !62, i64 176, !62, i64 208, !63, i64 240, !491, i64 264}
!661 = !{!"_ZTSN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEE", !662, i64 0}
!662 = !{!"_ZTSN6dealii9TableBaseILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEE", !7, i64 0, !19, i64 72, !8, i64 80, !145, i64 84}
!663 = distinct !{!663, !345, !346}
!664 = distinct !{!664, !346, !345}
!665 = !{!662, !19, i64 72}
!666 = !{!667}
!667 = distinct !{!667, !668, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj: argument 0"}
!668 = distinct !{!668, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj"}
!669 = !{!670, !19, i64 0}
!670 = !{!"_ZTSN6dealii12SmartPointerINS_31CompressedSimpleSparsityPatternEEE", !19, i64 0, !19, i64 8}
!671 = !{!672}
!672 = distinct !{!672, !673, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj: argument 0"}
!673 = distinct !{!673, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj"}
!674 = !{!675}
!675 = distinct !{!675, !676, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj: argument 0"}
!676 = distinct !{!676, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj"}
!677 = distinct !{!677, !109}
!678 = !{!679}
!679 = distinct !{!679, !680, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj: argument 0"}
!680 = distinct !{!680, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj"}
!681 = !{!682}
!682 = distinct !{!682, !683, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!683 = distinct !{!683, !"_ZNK6dealii5TableILi2EbEixEj"}
!684 = !{!685}
!685 = distinct !{!685, !686, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj: argument 0"}
!686 = distinct !{!686, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj"}
!687 = distinct !{!687, !109}
!688 = !{!689}
!689 = distinct !{!689, !690}
!690 = distinct !{!690, !"LVerDomain"}
!691 = !{!692}
!692 = distinct !{!692, !690}
!693 = distinct !{!693, !345, !346}
!694 = distinct !{!694, !345, !346}
!695 = distinct !{!695, !346, !345}
!696 = distinct !{!696, !345}
!697 = !{!698}
!698 = distinct !{!698, !699, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!699 = distinct !{!699, !"_ZNK6dealii5TableILi2EbEixEj"}
!700 = !{!701}
!701 = distinct !{!701, !702, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj: argument 0"}
!702 = distinct !{!702, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj"}
!703 = !{!704}
!704 = distinct !{!704, !705, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!705 = distinct !{!705, !"_ZNK6dealii5TableILi2EbEixEj"}
!706 = !{!707}
!707 = distinct !{!707, !708, !"_ZNK6dealii5TableILi2EbEixEj: argument 0"}
!708 = distinct !{!708, !"_ZNK6dealii5TableILi2EbEixEj"}
!709 = !{!29, !19, i64 16}
!710 = !{!711, !40, i64 136}
!711 = !{!"_ZTSN6dealii16ConstraintMatrixE", !7, i64 0, !712, i64 72, !715, i64 96, !40, i64 136, !720, i64 137}
!712 = !{!"_ZTSSt6vectorIN6dealii16ConstraintMatrix14ConstraintLineESaIS2_EE", !713, i64 0}
!713 = !{!"_ZTSSt12_Vector_baseIN6dealii16ConstraintMatrix14ConstraintLineESaIS2_EE", !714, i64 0}
!714 = !{!"_ZTSNSt12_Vector_baseIN6dealii16ConstraintMatrix14ConstraintLineESaIS2_EE12_Vector_implE", !71, i64 0}
!715 = !{!"_ZTSSt6vectorIbSaIbEE", !716, i64 0}
!716 = !{!"_ZTSSt13_Bvector_baseISaIbEE", !717, i64 0}
!717 = !{!"_ZTSNSt13_Bvector_baseISaIbEE13_Bvector_implE", !718, i64 0}
!718 = !{!"_ZTSNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataE", !719, i64 0, !719, i64 16, !19, i64 32}
!719 = !{!"_ZTSSt13_Bit_iterator", !56, i64 0}
!720 = !{!"_ZTSN6dealii7Threads16DummyThreadMutexE"}
!721 = distinct !{!721, !345, !346}
!722 = distinct !{!722, !345}
!723 = distinct !{!723, !345, !346}
!724 = distinct !{!724, !345}
!725 = distinct !{!725, !345, !346}
!726 = distinct !{!726, !345}
!727 = !{!728, !19, i64 0}
!728 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPKN6dealii16ConstraintMatrix14ConstraintLineESt6vectorIS3_SaIS3_EEEE", !19, i64 0}
!729 = !{!730, !8, i64 72}
!730 = !{!"_ZTSN6dealii25CompressedSparsityPatternE", !7, i64 0, !8, i64 72, !8, i64 76, !731, i64 80}
!731 = !{!"_ZTSSt6vectorIN6dealii25CompressedSparsityPattern4LineESaIS2_EE", !732, i64 0}
!732 = !{!"_ZTSSt12_Vector_baseIN6dealii25CompressedSparsityPattern4LineESaIS2_EE", !733, i64 0}
!733 = !{!"_ZTSNSt12_Vector_baseIN6dealii25CompressedSparsityPattern4LineESaIS2_EE12_Vector_implE", !439, i64 0}
!734 = !{!735, !8, i64 72}
!735 = !{!"_ZTSN6dealii28CompressedSetSparsityPatternE", !7, i64 0, !8, i64 72, !8, i64 76, !736, i64 80}
!736 = !{!"_ZTSSt6vectorIN6dealii28CompressedSetSparsityPattern4LineESaIS2_EE", !737, i64 0}
!737 = !{!"_ZTSSt12_Vector_baseIN6dealii28CompressedSetSparsityPattern4LineESaIS2_EE", !738, i64 0}
!738 = !{!"_ZTSNSt12_Vector_baseIN6dealii28CompressedSetSparsityPattern4LineESaIS2_EE12_Vector_implE", !456, i64 0}
!739 = !{!740, !8, i64 72}
!740 = !{!"_ZTSN6dealii31CompressedSimpleSparsityPatternE", !7, i64 0, !8, i64 72, !8, i64 76, !741, i64 80}
!741 = !{!"_ZTSSt6vectorIN6dealii31CompressedSimpleSparsityPattern4LineESaIS2_EE", !742, i64 0}
!742 = !{!"_ZTSSt12_Vector_baseIN6dealii31CompressedSimpleSparsityPattern4LineESaIS2_EE", !743, i64 0}
!743 = !{!"_ZTSNSt12_Vector_baseIN6dealii31CompressedSimpleSparsityPattern4LineESaIS2_EE12_Vector_implE", !473, i64 0}
!744 = !{!745}
!745 = distinct !{!745, !746, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!746 = distinct !{!746, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!747 = !{!748}
!748 = distinct !{!748, !749, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!749 = distinct !{!749, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!750 = !{!751}
!751 = distinct !{!751, !752, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!752 = distinct !{!752, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!753 = !{!754}
!754 = distinct !{!754, !755, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!755 = distinct !{!755, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!756 = !{!757}
!757 = distinct !{!757, !758, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj: argument 0"}
!758 = distinct !{!758, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_15SparsityPatternEEEEixEj"}
!759 = !{!760}
!760 = distinct !{!760, !761, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!761 = distinct !{!761, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!762 = !{!763}
!763 = distinct !{!763, !764, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!764 = distinct !{!764, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!765 = !{!766}
!766 = distinct !{!766, !767, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!767 = distinct !{!767, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!768 = !{!769}
!769 = distinct !{!769, !770, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!770 = distinct !{!770, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!771 = !{!772}
!772 = distinct !{!772, !773, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj: argument 0"}
!773 = distinct !{!773, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_25CompressedSparsityPatternEEEEixEj"}
!774 = !{!775}
!775 = distinct !{!775, !776, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!776 = distinct !{!776, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!777 = !{!778}
!778 = distinct !{!778, !779, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!779 = distinct !{!779, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!780 = !{!781}
!781 = distinct !{!781, !782, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!782 = distinct !{!782, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!783 = !{!784}
!784 = distinct !{!784, !785, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!785 = distinct !{!785, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!786 = !{!787}
!787 = distinct !{!787, !788, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj: argument 0"}
!788 = distinct !{!788, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_28CompressedSetSparsityPatternEEEEixEj"}
!789 = !{!790}
!790 = distinct !{!790, !791, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj: argument 0"}
!791 = distinct !{!791, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj"}
!792 = !{!793}
!793 = distinct !{!793, !794, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj: argument 0"}
!794 = distinct !{!794, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj"}
!795 = !{!796}
!796 = distinct !{!796, !797, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj: argument 0"}
!797 = distinct !{!797, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj"}
!798 = !{!799}
!799 = distinct !{!799, !800, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj: argument 0"}
!800 = distinct !{!800, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj"}
!801 = !{!802}
!802 = distinct !{!802, !803, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj: argument 0"}
!803 = distinct !{!803, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj"}
!804 = !{!805}
!805 = distinct !{!805, !806, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj: argument 0"}
!806 = distinct !{!806, !"_ZN6dealii5TableILi2ENS_12SmartPointerINS_31CompressedSimpleSparsityPatternEEEEixEj"}
!807 = !{!808, !810, i64 32}
!808 = !{!"_ZTSSt8ios_base", !20, i64 8, !20, i64 16, !809, i64 24, !810, i64 28, !810, i64 32, !19, i64 40, !811, i64 48, !9, i64 64, !8, i64 192, !19, i64 200, !812, i64 208}
!809 = !{!"_ZTSSt13_Ios_Fmtflags", !9, i64 0}
!810 = !{!"_ZTSSt12_Ios_Iostate", !9, i64 0}
!811 = !{!"_ZTSNSt8ios_base6_WordsE", !19, i64 0, !20, i64 8}
!812 = !{!"_ZTSSt6locale", !19, i64 0}
!813 = !{!814, !19, i64 240}
!814 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !808, i64 0, !19, i64 216, !9, i64 224, !40, i64 225, !19, i64 232, !19, i64 240, !19, i64 248, !19, i64 256}
!815 = !{!816, !9, i64 56}
!816 = !{!"_ZTSSt5ctypeIcE", !817, i64 0, !19, i64 16, !40, i64 24, !19, i64 32, !19, i64 40, !19, i64 48, !9, i64 56, !9, i64 57, !9, i64 313, !9, i64 569}
!817 = !{!"_ZTSNSt6locale5facetE", !8, i64 8}
!818 = !{!9, !9, i64 0}
!819 = distinct !{!819, !345, !346}
!820 = distinct !{!820, !346, !345}
!821 = !{!71, !19, i64 16}
!822 = !{!718, !19, i64 32}
!823 = !{!"branch_weights", i32 1, i32 2000}
!824 = !{!6, !8, i64 76}
!825 = !{!54, !8, i64 76}
!826 = distinct !{!826, !420, !83}
!827 = distinct !{!827, !83}
!828 = !{!829, !19, i64 0}
!829 = !{!"_ZTSNSt12_Vector_baseIN6dealii14SparseMatrixEZIdE7RowInfoESaIS3_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!830 = !{!831, !8, i64 0}
!831 = !{!"_ZTSN6dealii14SparseMatrixEZIdE7RowInfoE", !8, i64 0, !832, i64 4, !832, i64 6}
!832 = !{!"short", !9, i64 0}
!833 = !{!831, !832, i64 4}
!834 = !{!831, !832, i64 6}
!835 = !{!836, !19, i64 0}
!836 = !{!"_ZTSNSt12_Vector_baseIN6dealii14SparseMatrixEZIdE5EntryESaIS3_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!837 = !{!410, !8, i64 0}
!838 = !{!829, !19, i64 8}
!839 = !{!840, !8, i64 128}
!840 = !{!"_ZTSN6dealii14SparseMatrixEZIdEE", !7, i64 0, !8, i64 72, !841, i64 80, !844, i64 104, !8, i64 128}
!841 = !{!"_ZTSSt6vectorIN6dealii14SparseMatrixEZIdE7RowInfoESaIS3_EE", !842, i64 0}
!842 = !{!"_ZTSSt12_Vector_baseIN6dealii14SparseMatrixEZIdE7RowInfoESaIS3_EE", !843, i64 0}
!843 = !{!"_ZTSNSt12_Vector_baseIN6dealii14SparseMatrixEZIdE7RowInfoESaIS3_EE12_Vector_implE", !829, i64 0}
!844 = !{!"_ZTSSt6vectorIN6dealii14SparseMatrixEZIdE5EntryESaIS3_EE", !845, i64 0}
!845 = !{!"_ZTSSt12_Vector_baseIN6dealii14SparseMatrixEZIdE5EntryESaIS3_EE", !846, i64 0}
!846 = !{!"_ZTSNSt12_Vector_baseIN6dealii14SparseMatrixEZIdE5EntryESaIS3_EE12_Vector_implE", !836, i64 0}
!847 = !{!836, !19, i64 16}
!848 = !{i64 0, i64 4, !22, i64 8, i64 8, !52}
!849 = !{i64 0, i64 8, !52}
!850 = !{!836, !19, i64 8}
!851 = distinct !{!851, !109}
!852 = distinct !{!852, !109}
!853 = !{!854, !19, i64 0}
!854 = !{!"_ZTSNSt12_Vector_baseIN6dealii14SparseMatrixEZIfE7RowInfoESaIS3_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!855 = !{!856, !8, i64 0}
!856 = !{!"_ZTSN6dealii14SparseMatrixEZIfE7RowInfoE", !8, i64 0, !832, i64 4, !832, i64 6}
!857 = !{!856, !832, i64 4}
!858 = !{!856, !832, i64 6}
!859 = !{!860, !19, i64 0}
!860 = !{!"_ZTSNSt12_Vector_baseIN6dealii14SparseMatrixEZIfE5EntryESaIS3_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!861 = !{!414, !8, i64 0}
!862 = !{!854, !19, i64 8}
!863 = !{!864, !8, i64 128}
!864 = !{!"_ZTSN6dealii14SparseMatrixEZIfEE", !7, i64 0, !8, i64 72, !865, i64 80, !868, i64 104, !8, i64 128}
!865 = !{!"_ZTSSt6vectorIN6dealii14SparseMatrixEZIfE7RowInfoESaIS3_EE", !866, i64 0}
!866 = !{!"_ZTSSt12_Vector_baseIN6dealii14SparseMatrixEZIfE7RowInfoESaIS3_EE", !867, i64 0}
!867 = !{!"_ZTSNSt12_Vector_baseIN6dealii14SparseMatrixEZIfE7RowInfoESaIS3_EE12_Vector_implE", !854, i64 0}
!868 = !{!"_ZTSSt6vectorIN6dealii14SparseMatrixEZIfE5EntryESaIS3_EE", !869, i64 0}
!869 = !{!"_ZTSSt12_Vector_baseIN6dealii14SparseMatrixEZIfE5EntryESaIS3_EE", !870, i64 0}
!870 = !{!"_ZTSNSt12_Vector_baseIN6dealii14SparseMatrixEZIfE5EntryESaIS3_EE12_Vector_implE", !860, i64 0}
!871 = !{!860, !19, i64 16}
!872 = !{!860, !19, i64 8}
!873 = distinct !{!873, !345, !346}
!874 = distinct !{!874, !345}
!875 = distinct !{!875, !109}
!876 = distinct !{!876, !345, !346}
!877 = distinct !{!877, !345}
!878 = distinct !{!878, !345, !346}
!879 = distinct !{!879, !346, !345}
!880 = distinct !{!880, !345, !346}
!881 = distinct !{!881, !346, !345}
!882 = distinct !{!882, !345, !346}
!883 = distinct !{!883, !345}
!884 = distinct !{!884, !345, !346}
!885 = distinct !{!885, !346, !345}
!886 = !{!887}
!887 = distinct !{!887, !888}
!888 = distinct !{!888, !"LVerDomain"}
!889 = !{!890}
!890 = distinct !{!890, !888}
!891 = distinct !{!891, !345, !346}
!892 = distinct !{!892, !109}
!893 = distinct !{!893, !345}
!894 = distinct !{!894, !345, !346}
!895 = distinct !{!895, !345}
!896 = distinct !{!896, !345, !346}
!897 = distinct !{!897, !345}
!898 = distinct !{!898, !345, !346}
!899 = distinct !{!899, !346, !345}
!900 = distinct !{!900, !345, !346}
!901 = distinct !{!901, !346, !345}
!902 = distinct !{!902, !345, !346}
!903 = distinct !{!903, !346, !345}
!904 = distinct !{!904, !345, !346}
!905 = distinct !{!905, !346, !345}
!906 = distinct !{!906, !345, !346}
!907 = distinct !{!907, !109}
!908 = distinct !{!908, !345}
!909 = distinct !{!909, !345, !346}
!910 = distinct !{!910, !345, !346}
!911 = distinct !{!911, !345}
!912 = distinct !{!912, !345}
