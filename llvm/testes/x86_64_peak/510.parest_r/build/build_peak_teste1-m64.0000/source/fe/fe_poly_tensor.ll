; ModuleID = 'source/fe/fe_poly_tensor.cc'
source_filename = "source/fe/fe_poly_tensor.cc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

module asm ".globl _ZSt21ios_base_library_initv"

%"class.dealii::FE_PolyTensor" = type { %"class.dealii::FiniteElement", i32, [4 x i8], %"class.dealii::PolynomialsRaviartThomas", %"class.dealii::FullMatrix", %"class.dealii::Point", %"class.std::vector.67", %"class.std::vector.72", %"class.std::vector.77" }
%"class.dealii::FiniteElement" = type { %"class.dealii::Subscriptor", %"class.dealii::FiniteElementData", i8, %"class.std::vector", %"class.std::vector", %"class.dealii::FullMatrix", %"class.std::vector.19", %"class.std::vector.24", %"class.std::vector.19", %"class.std::vector.24", %"class.dealii::Table.29", %"class.std::vector.33", %"class.std::vector.38", %"class.std::vector.38", %"class.std::vector.43", %"class.std::vector.43", %"class.std::vector.48", %"class.std::vector.43", %"class.std::vector.53", %"class.std::vector.57", %"class.std::vector.48" }
%"class.dealii::Subscriptor" = type { ptr, i32, %"class.std::map", ptr }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<const char *, std::pair<const char *const, unsigned int>, std::_Select1st<std::pair<const char *const, unsigned int> >, std::less<const char *> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<const char *, std::pair<const char *const, unsigned int>, std::_Select1st<std::pair<const char *const, unsigned int> >, std::less<const char *> >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.dealii::FiniteElementData" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<dealii::FullMatrix<double> >, std::allocator<std::vector<dealii::FullMatrix<double> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<dealii::FullMatrix<double> >, std::allocator<std::vector<dealii::FullMatrix<double> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<dealii::FullMatrix<double> >, std::allocator<std::vector<dealii::FullMatrix<double> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<dealii::FullMatrix<double> >, std::allocator<std::vector<dealii::FullMatrix<double> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.19" = type { %"struct.std::_Vector_base.20" }
%"struct.std::_Vector_base.20" = type { %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.24" = type { %"struct.std::_Vector_base.25" }
%"struct.std::_Vector_base.25" = type { %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Table.29" = type { %"class.dealii::TableBase.base.31", [4 x i8] }
%"class.dealii::TableBase.base.31" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices" }>
%"class.dealii::TableIndices" = type { %"class.dealii::TableIndicesBase" }
%"class.dealii::TableIndicesBase" = type { [2 x i32] }
%"class.std::vector.33" = type { %"struct.std::_Vector_base.34" }
%"struct.std::_Vector_base.34" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.38" = type { %"struct.std::_Vector_base.39" }
%"struct.std::_Vector_base.39" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.43" = type { %"struct.std::_Vector_base.44" }
%"struct.std::_Vector_base.44" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.53" = type { %"struct.std::_Bvector_base" }
%"struct.std::_Bvector_base" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", ptr }
%"struct.std::_Bit_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base.base" = type <{ ptr, i32 }>
%"class.std::vector.57" = type { %"struct.std::_Vector_base.58" }
%"struct.std::_Vector_base.58" = type { %"struct.std::_Vector_base<std::vector<bool>, std::allocator<std::vector<bool> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<bool>, std::allocator<std::vector<bool> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<bool>, std::allocator<std::vector<bool> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<bool>, std::allocator<std::vector<bool> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.48" = type { %"struct.std::_Vector_base.49" }
%"struct.std::_Vector_base.49" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::PolynomialsRaviartThomas" = type { i32, [4 x i8], %"class.dealii::AnisotropicPolynomials", i32, [4 x i8] }
%"class.dealii::AnisotropicPolynomials" = type <{ %"class.std::vector.62", i32, [4 x i8] }>
%"class.std::vector.62" = type { %"struct.std::_Vector_base.63" }
%"struct.std::_Vector_base.63" = type { %"struct.std::_Vector_base<std::vector<dealii::Polynomials::Polynomial<double> >, std::allocator<std::vector<dealii::Polynomials::Polynomial<double> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<dealii::Polynomials::Polynomial<double> >, std::allocator<std::vector<dealii::Polynomials::Polynomial<double> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<dealii::Polynomials::Polynomial<double> >, std::allocator<std::vector<dealii::Polynomials::Polynomial<double> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<dealii::Polynomials::Polynomial<double> >, std::allocator<std::vector<dealii::Polynomials::Polynomial<double> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::FullMatrix" = type { %"class.dealii::Table.base", [4 x i8] }
%"class.dealii::Table.base" = type { %"class.dealii::TableBase.base" }
%"class.dealii::TableBase.base" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices" }>
%"class.dealii::Point" = type { %"class.dealii::Tensor" }
%"class.dealii::Tensor" = type { [3 x double] }
%"class.std::vector.67" = type { %"struct.std::_Vector_base.68" }
%"struct.std::_Vector_base.68" = type { %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.72" = type { %"struct.std::_Vector_base.73" }
%"struct.std::_Vector_base.73" = type { %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.77" = type { %"struct.std::_Vector_base.78" }
%"struct.std::_Vector_base.78" = type { %"struct.std::_Vector_base<dealii::Tensor<3, 3>, std::allocator<dealii::Tensor<3, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Tensor<3, 3>, std::allocator<dealii::Tensor<3, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Tensor<3, 3>, std::allocator<dealii::Tensor<3, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Tensor<3, 3>, std::allocator<dealii::Tensor<3, 3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.std::pair" = type { %"struct.std::pair.82", i32 }
%"struct.std::pair.82" = type { i32, i32 }
%"class.dealii::Tensor.84" = type { [3 x %"class.dealii::Tensor"] }
%"class.dealii::Tensor.85" = type { [3 x %"class.dealii::Tensor.84"] }
%"class.dealii::FiniteElement<3, 3>::InternalDataBase" = type { %"class.dealii::Mapping<3, 3>::InternalDataBase.base", %"class.std::vector.91" }
%"class.dealii::Mapping<3, 3>::InternalDataBase.base" = type <{ %"class.dealii::Subscriptor", i32, i32, i32, [4 x i8], %"class.std::vector.86", %"class.std::vector.19", %"class.std::vector.72", %"class.std::vector.72", i8 }>
%"class.std::vector.86" = type { %"struct.std::_Vector_base.87" }
%"struct.std::_Vector_base.87" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.91" = type { %"struct.std::_Vector_base.92" }
%"struct.std::_Vector_base.92" = type { %"struct.std::_Vector_base<dealii::FEValues<3, 3> *, std::allocator<dealii::FEValues<3, 3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::FEValues<3, 3> *, std::allocator<dealii::FEValues<3, 3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::FEValues<3, 3> *, std::allocator<dealii::FEValues<3, 3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::FEValues<3, 3> *, std::allocator<dealii::FEValues<3, 3> *> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData" = type { %"class.dealii::FiniteElement<3, 3>::InternalDataBase", %"class.std::vector.96", %"class.std::vector.101" }
%"class.std::vector.96" = type { %"struct.std::_Vector_base.97" }
%"struct.std::_Vector_base.97" = type { %"struct.std::_Vector_base<std::vector<dealii::Tensor<1, 3> >, std::allocator<std::vector<dealii::Tensor<1, 3> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<dealii::Tensor<1, 3> >, std::allocator<std::vector<dealii::Tensor<1, 3> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<dealii::Tensor<1, 3> >, std::allocator<std::vector<dealii::Tensor<1, 3> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<dealii::Tensor<1, 3> >, std::allocator<std::vector<dealii::Tensor<1, 3> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.101" = type { %"struct.std::_Vector_base.102" }
%"struct.std::_Vector_base.102" = type { %"struct.std::_Vector_base<std::vector<dealii::Tensor<2, 3> >, std::allocator<std::vector<dealii::Tensor<2, 3> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<dealii::Tensor<2, 3> >, std::allocator<std::vector<dealii::Tensor<2, 3> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<dealii::Tensor<2, 3> >, std::allocator<std::vector<dealii::Tensor<2, 3> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<dealii::Tensor<2, 3> >, std::allocator<std::vector<dealii::Tensor<2, 3> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Mapping<3, 3>::InternalDataBase" = type <{ %"class.dealii::Subscriptor", i32, i32, i32, [4 x i8], %"class.std::vector.86", %"class.std::vector.19", %"class.std::vector.72", %"class.std::vector.72", i8, [7 x i8] }>
%"class.dealii::Quadrature" = type { %"class.dealii::Subscriptor", i32, %"class.std::vector.19", %"class.std::vector.86" }
%"class.dealii::QProjector<3>::DataSetDescriptor" = type { i32 }
%"class.dealii::FEValuesData" = type <{ %"class.dealii::Table", %"class.std::vector.96", %"class.std::vector.101", %"class.std::vector.86", %"class.std::vector.72", %"class.std::vector.77", %"class.std::vector.72", %"class.std::vector.19", %"class.std::vector.19", %"class.std::vector.19", %"class.std::vector.67", %"class.std::vector.19", %"class.std::vector.101", %"class.std::vector.101", %"class.std::vector.48", i32, [4 x i8] }>
%"class.dealii::Table" = type { %"class.dealii::TableBase.base", [4 x i8] }
%"class.dealii::TableBase" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices", [4 x i8] }>
%"class.dealii::Quadrature.110" = type { %"class.dealii::Subscriptor", i32, %"class.std::vector.24", %"class.std::vector.86" }
%"class.dealii::TriaAccessorBase" = type { i32, i32, ptr }
%"class.dealii::Triangulation" = type { %"class.dealii::Subscriptor", %"class.std::vector.150", ptr, %"class.std::vector.19", %"class.std::vector.53", [255 x %"class.dealii::SmartPointer"], [255 x %"class.dealii::SmartPointer"], i8, i32, %"struct.dealii::internal::Triangulation::NumberCache", %"class.std::__cxx11::list" }
%"class.std::vector.150" = type { %"struct.std::_Vector_base.151" }
%"struct.std::_Vector_base.151" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaLevel<3> *, std::allocator<dealii::internal::Triangulation::TriaLevel<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaLevel<3> *, std::allocator<dealii::internal::Triangulation::TriaLevel<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaLevel<3> *, std::allocator<dealii::internal::Triangulation::TriaLevel<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaLevel<3> *, std::allocator<dealii::internal::Triangulation::TriaLevel<3> *> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::SmartPointer" = type { ptr, ptr }
%"struct.dealii::internal::Triangulation::NumberCache" = type { %"struct.dealii::internal::Triangulation::NumberCache.155", i32, %"class.std::vector.48", i32, %"class.std::vector.48" }
%"struct.dealii::internal::Triangulation::NumberCache.155" = type { %"struct.dealii::internal::Triangulation::NumberCache.156", i32, %"class.std::vector.48", i32, %"class.std::vector.48" }
%"struct.dealii::internal::Triangulation::NumberCache.156" = type { i32, %"class.std::vector.48", i32, %"class.std::vector.48" }
%"class.std::__cxx11::list" = type { %"class.std::__cxx11::_List_base" }
%"class.std::__cxx11::_List_base" = type { %"struct.std::__cxx11::_List_base<dealii::Triangulation<3, 3>::RefinementListener *, std::allocator<dealii::Triangulation<3, 3>::RefinementListener *> >::_List_impl" }
%"struct.std::__cxx11::_List_base<dealii::Triangulation<3, 3>::RefinementListener *, std::allocator<dealii::Triangulation<3, 3>::RefinementListener *> >::_List_impl" = type { %"struct.std::__detail::_List_node_header" }
%"struct.std::__detail::_List_node_header" = type { %"struct.std::__detail::_List_node_base", i64 }
%"struct.std::__detail::_List_node_base" = type { ptr, ptr }
%"class.dealii::internal::Triangulation::TriaLevel" = type { %"class.std::vector.125", %"class.std::vector.53", %"class.std::vector.130", %"class.std::vector.48", %"class.dealii::internal::Triangulation::TriaObjectsHex" }
%"class.std::vector.125" = type { %"struct.std::_Vector_base.126" }
%"struct.std::_Vector_base.126" = type { %"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.130" = type { %"struct.std::_Vector_base.131" }
%"struct.std::_Vector_base.131" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::internal::Triangulation::TriaObjectsHex" = type { %"class.dealii::internal::Triangulation::TriaObjects.base", %"class.std::vector.53", %"class.std::vector.53", %"class.std::vector.53" }
%"class.dealii::internal::Triangulation::TriaObjects.base" = type <{ %"class.std::vector.135", %"class.std::vector.33", %"class.std::vector.140", %"class.std::vector.53", %"class.std::vector.53", %"class.std::vector.125", i32, i32, i8, [7 x i8], %"class.std::vector.145", i32 }>
%"class.std::vector.135" = type { %"struct.std::_Vector_base.136" }
%"struct.std::_Vector_base.136" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<3>, std::allocator<dealii::internal::Triangulation::TriaObject<3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<3>, std::allocator<dealii::internal::Triangulation::TriaObject<3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<3>, std::allocator<dealii::internal::Triangulation::TriaObject<3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<3>, std::allocator<dealii::internal::Triangulation::TriaObject<3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.140" = type { %"struct.std::_Vector_base.141" }
%"struct.std::_Vector_base.141" = type { %"struct.std::_Vector_base<dealii::RefinementCase<3>, std::allocator<dealii::RefinementCase<3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::RefinementCase<3>, std::allocator<dealii::RefinementCase<3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::RefinementCase<3>, std::allocator<dealii::RefinementCase<3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::RefinementCase<3>, std::allocator<dealii::RefinementCase<3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.145" = type { %"struct.std::_Vector_base.146" }
%"struct.std::_Vector_base.146" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::internal::Triangulation::TriaObject" = type { [6 x i32] }
%"class.dealii::internal::Triangulation::TriaObjects.160" = type <{ %"class.std::vector.161", %"class.std::vector.33", %"class.std::vector.166", %"class.std::vector.53", %"class.std::vector.53", %"class.std::vector.125", i32, i32, i8, [7 x i8], %"class.std::vector.171", i32, [4 x i8] }>
%"class.std::vector.161" = type { %"struct.std::_Vector_base.162" }
%"struct.std::_Vector_base.162" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<2>, std::allocator<dealii::internal::Triangulation::TriaObject<2> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<2>, std::allocator<dealii::internal::Triangulation::TriaObject<2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<2>, std::allocator<dealii::internal::Triangulation::TriaObject<2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<2>, std::allocator<dealii::internal::Triangulation::TriaObject<2> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.166" = type { %"struct.std::_Vector_base.167" }
%"struct.std::_Vector_base.167" = type { %"struct.std::_Vector_base<dealii::RefinementCase<2>, std::allocator<dealii::RefinementCase<2> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::RefinementCase<2>, std::allocator<dealii::RefinementCase<2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::RefinementCase<2>, std::allocator<dealii::RefinementCase<2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::RefinementCase<2>, std::allocator<dealii::RefinementCase<2> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.171" = type { %"struct.std::_Vector_base.172" }
%"struct.std::_Vector_base.172" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::RefinementCase" = type { i8 }
%"class.dealii::FE_PolyTensor.111" = type { %"class.dealii::FiniteElement", i32, %"class.dealii::PolynomialsABF", %"class.dealii::FullMatrix", %"class.dealii::Point", %"class.std::vector.67", %"class.std::vector.72", %"class.std::vector.77" }
%"class.dealii::PolynomialsABF" = type { i32, ptr, i32, %"class.std::vector.86", %"class.std::vector.67", %"class.std::vector.72" }
%"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData" = type { %"class.dealii::FiniteElement<3, 3>::InternalDataBase", %"class.std::vector.96", %"class.std::vector.101" }
%"class.dealii::FE_PolyTensor.112" = type { %"class.dealii::FiniteElement", i32, %"class.dealii::PolynomialsBDM", %"class.dealii::FullMatrix", %"class.dealii::Point", %"class.std::vector.67", %"class.std::vector.72", %"class.std::vector.77" }
%"class.dealii::PolynomialsBDM" = type { %"class.dealii::PolynomialSpace", %"class.std::vector.113", i32, %"class.std::vector.86", %"class.std::vector.67", %"class.std::vector.72" }
%"class.dealii::PolynomialSpace" = type { %"class.std::vector.113", i32, %"class.std::vector.48", %"class.std::vector.48" }
%"class.std::vector.113" = type { %"struct.std::_Vector_base.114" }
%"struct.std::_Vector_base.114" = type { %"struct.std::_Vector_base<dealii::Polynomials::Polynomial<double>, std::allocator<dealii::Polynomials::Polynomial<double> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Polynomials::Polynomial<double>, std::allocator<dealii::Polynomials::Polynomial<double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Polynomials::Polynomial<double>, std::allocator<dealii::Polynomials::Polynomial<double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Polynomials::Polynomial<double>, std::allocator<dealii::Polynomials::Polynomial<double> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Polynomials::Polynomial" = type { %"class.dealii::Subscriptor", %"class.std::vector.86" }
%"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData" = type { %"class.dealii::FiniteElement<3, 3>::InternalDataBase", %"class.std::vector.96", %"class.std::vector.101" }
%"class.dealii::Point.118" = type { %"class.dealii::Tensor.119" }
%"class.dealii::Tensor.119" = type { [2 x double] }

$_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEC5EjRKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS8_ISA_SaISA_EE = comdat any

$__clang_call_terminate = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE11shape_valueEjRKNS_5PointILi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE21shape_value_componentEjRKNS_5PointILi3EEEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE10shape_gradEjRKNS_5PointILi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE20shape_grad_componentEjRKNS_5PointILi3EEEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE15shape_grad_gradEjRKNS_5PointILi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE25shape_grad_grad_componentEjRKNS_5PointILi3EEEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE15n_base_elementsEv = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12base_elementEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE20element_multiplicityEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE11update_onceENS_11UpdateFlagsE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE11update_eachENS_11UpdateFlagsE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE8get_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE14fill_fe_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEERKNS_10QuadratureILi3EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEERNS_14CellSimilarity10SimilarityE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE19fill_fe_face_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE22fill_fe_subface_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE = comdat any

$_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEC5EjRKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS8_ISA_SaISA_EE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE11shape_valueEjRKNS_5PointILi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE21shape_value_componentEjRKNS_5PointILi3EEEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE10shape_gradEjRKNS_5PointILi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE20shape_grad_componentEjRKNS_5PointILi3EEEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE15shape_grad_gradEjRKNS_5PointILi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE25shape_grad_grad_componentEjRKNS_5PointILi3EEEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE15n_base_elementsEv = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12base_elementEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE20element_multiplicityEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE11update_onceENS_11UpdateFlagsE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE11update_eachENS_11UpdateFlagsE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE8get_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE14fill_fe_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEERKNS_10QuadratureILi3EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEERNS_14CellSimilarity10SimilarityE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE19fill_fe_face_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE22fill_fe_subface_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE = comdat any

$_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEC5EjRKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS8_ISA_SaISA_EE = comdat any

$_ZN6dealii14PolynomialsBDMILi3EED2Ev = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE11shape_valueEjRKNS_5PointILi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE21shape_value_componentEjRKNS_5PointILi3EEEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE10shape_gradEjRKNS_5PointILi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE20shape_grad_componentEjRKNS_5PointILi3EEEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE15shape_grad_gradEjRKNS_5PointILi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE25shape_grad_grad_componentEjRKNS_5PointILi3EEEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE15n_base_elementsEv = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12base_elementEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE20element_multiplicityEj = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE11update_onceENS_11UpdateFlagsE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE11update_eachENS_11UpdateFlagsE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE8get_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE14fill_fe_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEERKNS_10QuadratureILi3EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEERNS_14CellSimilarity10SimilarityE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE19fill_fe_face_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE = comdat any

$_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE22fill_fe_subface_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE = comdat any

$_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EED2Ev = comdat any

$_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EED0Ev = comdat any

$_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EED2Ev = comdat any

$_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EED0Ev = comdat any

$_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EED2Ev = comdat any

$_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EED0Ev = comdat any

$_ZN6dealii9TableBaseILi2EdED2Ev = comdat any

$_ZN6dealii9TableBaseILi2EdED0Ev = comdat any

$_ZNSt6vectorIS_IN6dealii11Polynomials10PolynomialIdEESaIS3_EESaIS5_EED2Ev = comdat any

$_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataD2Ev = comdat any

$_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataD0Ev = comdat any

$_ZN6dealii7MappingILi3ELi3EE16InternalDataBase16clear_first_cellEv = comdat any

$_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataD2Ev = comdat any

$_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataD0Ev = comdat any

$_ZN6dealii15PolynomialSpaceILi3EED2Ev = comdat any

$_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataD2Ev = comdat any

$_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataD0Ev = comdat any

$_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_ = comdat any

$_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_ = comdat any

$_ZNSt6vectorIN6dealii6TensorILi3ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN6dealii6TensorILi3ELi3EEES6_EET0_T_S8_S7_ = comdat any

$_ZSt18__do_uninit_fill_nIPN6dealii6TensorILi3ELi3EEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt6vectorIS_IN6dealii6TensorILi1ELi3EEESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_ = comdat any

$_ZSt16__do_uninit_copyIPSt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EES6_ET0_T_S8_S7_ = comdat any

$_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EEaSERKS4_ = comdat any

$_ZSt18__do_uninit_fill_nIPSt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EEmS5_ET_S7_T0_RKT1_ = comdat any

$_ZNSt6vectorIS_IN6dealii6TensorILi2ELi3EEESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_ = comdat any

$_ZSt16__do_uninit_copyIPSt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EES6_ET0_T_S8_S7_ = comdat any

$_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EEaSERKS4_ = comdat any

$_ZSt18__do_uninit_fill_nIPSt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EEmS5_ET_S7_T0_RKT1_ = comdat any

$_ZTVN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEE = comdat any

$_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEE = comdat any

$_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEE = comdat any

$_ZTSN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEE = comdat any

$_ZTSN6dealii13FiniteElementILi3ELi3EEE = comdat any

$_ZTSN6dealii17FiniteElementDataILi3EEE = comdat any

$_ZTIN6dealii17FiniteElementDataILi3EEE = comdat any

$_ZTIN6dealii13FiniteElementILi3ELi3EEE = comdat any

$_ZTIN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEE = comdat any

$_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEE = comdat any

$_ZTIN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEE = comdat any

$_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEE = comdat any

$_ZTIN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEE = comdat any

$_ZTVN6dealii9TableBaseILi2EdEE = comdat any

$_ZTSN6dealii9TableBaseILi2EdEE = comdat any

$_ZTIN6dealii9TableBaseILi2EdEE = comdat any

$_ZTVN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataE = comdat any

$_ZTSN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataE = comdat any

$_ZTSN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseE = comdat any

$_ZTSN6dealii7MappingILi3ELi3EE16InternalDataBaseE = comdat any

$_ZTIN6dealii7MappingILi3ELi3EE16InternalDataBaseE = comdat any

$_ZTIN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseE = comdat any

$_ZTIN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataE = comdat any

$_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataE = comdat any

$_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataE = comdat any

$_ZTIN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataE = comdat any

$_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataE = comdat any

$_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataE = comdat any

$_ZTIN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataE = comdat any

@_ZTVN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEE = weak_odr dso_local unnamed_addr constant { [38 x ptr] } { [38 x ptr] [ptr null, ptr @_ZTIN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEE, ptr @_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EED2Ev, ptr @_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EED0Ev, ptr @__cxa_pure_virtual, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE11shape_valueEjRKNS_5PointILi3EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE21shape_value_componentEjRKNS_5PointILi3EEEj, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE10shape_gradEjRKNS_5PointILi3EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE20shape_grad_componentEjRKNS_5PointILi3EEEj, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE15shape_grad_gradEjRKNS_5PointILi3EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE25shape_grad_grad_componentEjRKNS_5PointILi3EEEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE19has_support_on_faceEjj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE30hp_constraints_are_implementedEv, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE24get_interpolation_matrixERKS1_RNS_10FullMatrixIdEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE29get_face_interpolation_matrixERKS1_RNS_10FullMatrixIdEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE32get_subface_interpolation_matrixERKS1_jRNS_10FullMatrixIdEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE24hp_vertex_dof_identitiesERKS1_, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE22hp_line_dof_identitiesERKS1_, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE22hp_quad_dof_identitiesERKS1_, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE27compare_for_face_dominationERKS1_, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE15n_base_elementsEv, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12base_elementEj, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE20element_multiplicityEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE18unit_support_pointEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE23unit_face_support_pointEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE11interpolateERSt6vectorIdSaIdEERKS4_, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE11interpolateERSt6vectorIdSaIdEERKS2_INS_6VectorIdEESaIS7_EEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE11interpolateERSt6vectorIdSaIdEERKNS_11VectorSliceIKS2_IS4_SaIS4_EEEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE18memory_consumptionEv, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE11update_onceENS_11UpdateFlagsE, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE11update_eachENS_11UpdateFlagsE, ptr @__cxa_pure_virtual, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE8get_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE13get_face_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi2EEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE16get_subface_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi2EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE14fill_fe_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEERKNS_10QuadratureILi3EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEERNS_14CellSimilarity10SimilarityE, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE19fill_fe_face_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE22fill_fe_subface_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE] }, comdat, align 8
@_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEE = weak_odr dso_local unnamed_addr constant { [38 x ptr] } { [38 x ptr] [ptr null, ptr @_ZTIN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEE, ptr @_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EED2Ev, ptr @_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EED0Ev, ptr @__cxa_pure_virtual, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE11shape_valueEjRKNS_5PointILi3EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE21shape_value_componentEjRKNS_5PointILi3EEEj, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE10shape_gradEjRKNS_5PointILi3EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE20shape_grad_componentEjRKNS_5PointILi3EEEj, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE15shape_grad_gradEjRKNS_5PointILi3EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE25shape_grad_grad_componentEjRKNS_5PointILi3EEEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE19has_support_on_faceEjj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE30hp_constraints_are_implementedEv, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE24get_interpolation_matrixERKS1_RNS_10FullMatrixIdEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE29get_face_interpolation_matrixERKS1_RNS_10FullMatrixIdEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE32get_subface_interpolation_matrixERKS1_jRNS_10FullMatrixIdEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE24hp_vertex_dof_identitiesERKS1_, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE22hp_line_dof_identitiesERKS1_, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE22hp_quad_dof_identitiesERKS1_, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE27compare_for_face_dominationERKS1_, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE15n_base_elementsEv, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12base_elementEj, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE20element_multiplicityEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE18unit_support_pointEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE23unit_face_support_pointEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE11interpolateERSt6vectorIdSaIdEERKS4_, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE11interpolateERSt6vectorIdSaIdEERKS2_INS_6VectorIdEESaIS7_EEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE11interpolateERSt6vectorIdSaIdEERKNS_11VectorSliceIKS2_IS4_SaIS4_EEEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE18memory_consumptionEv, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE11update_onceENS_11UpdateFlagsE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE11update_eachENS_11UpdateFlagsE, ptr @__cxa_pure_virtual, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE8get_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE13get_face_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi2EEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE16get_subface_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi2EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE14fill_fe_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEERKNS_10QuadratureILi3EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEERNS_14CellSimilarity10SimilarityE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE19fill_fe_face_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE22fill_fe_subface_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE] }, comdat, align 8
@_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEE = weak_odr dso_local unnamed_addr constant { [38 x ptr] } { [38 x ptr] [ptr null, ptr @_ZTIN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEE, ptr @_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EED2Ev, ptr @_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EED0Ev, ptr @__cxa_pure_virtual, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE11shape_valueEjRKNS_5PointILi3EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE21shape_value_componentEjRKNS_5PointILi3EEEj, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE10shape_gradEjRKNS_5PointILi3EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE20shape_grad_componentEjRKNS_5PointILi3EEEj, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE15shape_grad_gradEjRKNS_5PointILi3EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE25shape_grad_grad_componentEjRKNS_5PointILi3EEEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE19has_support_on_faceEjj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE30hp_constraints_are_implementedEv, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE24get_interpolation_matrixERKS1_RNS_10FullMatrixIdEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE29get_face_interpolation_matrixERKS1_RNS_10FullMatrixIdEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE32get_subface_interpolation_matrixERKS1_jRNS_10FullMatrixIdEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE24hp_vertex_dof_identitiesERKS1_, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE22hp_line_dof_identitiesERKS1_, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE22hp_quad_dof_identitiesERKS1_, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE27compare_for_face_dominationERKS1_, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE15n_base_elementsEv, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12base_elementEj, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE20element_multiplicityEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE18unit_support_pointEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE23unit_face_support_pointEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE11interpolateERSt6vectorIdSaIdEERKS4_, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE11interpolateERSt6vectorIdSaIdEERKS2_INS_6VectorIdEESaIS7_EEj, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE11interpolateERSt6vectorIdSaIdEERKNS_11VectorSliceIKS2_IS4_SaIS4_EEEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE18memory_consumptionEv, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE11update_onceENS_11UpdateFlagsE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE11update_eachENS_11UpdateFlagsE, ptr @__cxa_pure_virtual, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE8get_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE13get_face_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi2EEE, ptr @_ZNK6dealii13FiniteElementILi3ELi3EE16get_subface_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi2EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE14fill_fe_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEERKNS_10QuadratureILi3EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEERNS_14CellSimilarity10SimilarityE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE19fill_fe_face_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE, ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE22fill_fe_subface_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE] }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global ptr
@_ZTSN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEE = weak_odr dso_local constant [71 x i8] c"N6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEE\00", comdat, align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external global ptr
@_ZTSN6dealii13FiniteElementILi3ELi3EEE = linkonce_odr dso_local constant [35 x i8] c"N6dealii13FiniteElementILi3ELi3EEE\00", comdat, align 1
@_ZTIN6dealii11SubscriptorE = external constant ptr
@_ZTVN10__cxxabiv117__class_type_infoE = external global ptr
@_ZTSN6dealii17FiniteElementDataILi3EEE = linkonce_odr dso_local constant [35 x i8] c"N6dealii17FiniteElementDataILi3EEE\00", comdat, align 1
@_ZTIN6dealii17FiniteElementDataILi3EEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN6dealii17FiniteElementDataILi3EEE }, comdat, align 8
@_ZTIN6dealii13FiniteElementILi3ELi3EEE = linkonce_odr dso_local constant { ptr, ptr, i32, i32, ptr, i64, ptr, i64 } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2), ptr @_ZTSN6dealii13FiniteElementILi3ELi3EEE, i32 0, i32 2, ptr @_ZTIN6dealii11SubscriptorE, i64 2, ptr @_ZTIN6dealii17FiniteElementDataILi3EEE, i64 18434 }, comdat, align 8
@_ZTIN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEE, ptr @_ZTIN6dealii13FiniteElementILi3ELi3EEE }, comdat, align 8
@_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEE = weak_odr dso_local constant [61 x i8] c"N6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEE\00", comdat, align 1
@_ZTIN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEE, ptr @_ZTIN6dealii13FiniteElementILi3ELi3EEE }, comdat, align 8
@_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEE = weak_odr dso_local constant [61 x i8] c"N6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEE\00", comdat, align 1
@_ZTIN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEE = weak_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEE, ptr @_ZTIN6dealii13FiniteElementILi3ELi3EEE }, comdat, align 8
@_ZTVN6dealii9TableBaseILi2EdEE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii9TableBaseILi2EdEE, ptr @_ZN6dealii9TableBaseILi2EdED2Ev, ptr @_ZN6dealii9TableBaseILi2EdED0Ev] }, comdat, align 8
@_ZTSN6dealii9TableBaseILi2EdEE = linkonce_odr dso_local constant [27 x i8] c"N6dealii9TableBaseILi2EdEE\00", comdat, align 1
@_ZTIN6dealii9TableBaseILi2EdEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii9TableBaseILi2EdEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTVN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataE, ptr @_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataD2Ev, ptr @_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataD0Ev, ptr @_ZN6dealii7MappingILi3ELi3EE16InternalDataBase16clear_first_cellEv, ptr @_ZNK6dealii7MappingILi3ELi3EE16InternalDataBase18memory_consumptionEv] }, comdat, align 8
@_ZTSN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataE = linkonce_odr dso_local constant [85 x i8] c"N6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataE\00", comdat, align 1
@_ZTSN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseE = linkonce_odr dso_local constant [53 x i8] c"N6dealii13FiniteElementILi3ELi3EE16InternalDataBaseE\00", comdat, align 1
@_ZTSN6dealii7MappingILi3ELi3EE16InternalDataBaseE = linkonce_odr dso_local constant [46 x i8] c"N6dealii7MappingILi3ELi3EE16InternalDataBaseE\00", comdat, align 1
@_ZTIN6dealii7MappingILi3ELi3EE16InternalDataBaseE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii7MappingILi3ELi3EE16InternalDataBaseE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTIN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseE, ptr @_ZTIN6dealii7MappingILi3ELi3EE16InternalDataBaseE }, comdat, align 8
@_ZTIN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataE, ptr @_ZTIN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseE }, comdat, align 8
@_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataE, ptr @_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataD2Ev, ptr @_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataD0Ev, ptr @_ZN6dealii7MappingILi3ELi3EE16InternalDataBase16clear_first_cellEv, ptr @_ZNK6dealii7MappingILi3ELi3EE16InternalDataBase18memory_consumptionEv] }, comdat, align 8
@_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataE = linkonce_odr dso_local constant [75 x i8] c"N6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataE\00", comdat, align 1
@_ZTIN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataE, ptr @_ZTIN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseE }, comdat, align 8
@_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataE, ptr @_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataD2Ev, ptr @_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataD0Ev, ptr @_ZN6dealii7MappingILi3ELi3EE16InternalDataBase16clear_first_cellEv, ptr @_ZNK6dealii7MappingILi3ELi3EE16InternalDataBase18memory_consumptionEv] }, comdat, align 8
@_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataE = linkonce_odr dso_local constant [75 x i8] c"N6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataE\00", comdat, align 1
@_ZTIN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataE, ptr @_ZTIN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseE }, comdat, align 8
@.str.9 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@llvm.global_ctors = appending global [0 x { i32, ptr, ptr }] zeroinitializer

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEC2EjRKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS8_ISA_SaISA_EE(ptr noundef nonnull align 8 dereferenceable(976) %0, i32 noundef %1, ptr noundef nonnull align 4 dereferenceable(60) %2, ptr noundef nonnull align 8 dereferenceable(40) %3, ptr noundef nonnull align 8 dereferenceable(24) %4) unnamed_addr #0 comdat($_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEC5EjRKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS8_ISA_SaISA_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii13FiniteElementILi3ELi3EEC2ERKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS6_IS8_SaIS8_EE(ptr noundef nonnull align 8 dereferenceable(728) %0, ptr noundef nonnull align 4 dereferenceable(60) %2, ptr noundef nonnull align 8 dereferenceable(40) %3, ptr noundef nonnull align 8 dereferenceable(24) %4)
  store ptr getelementptr inbounds ({ [38 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %6 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 3
  invoke void @_ZN6dealii24PolynomialsRaviartThomasILi3EEC1Ej(ptr noundef nonnull align 8 dereferenceable(44) %6, i32 noundef %1)
          to label %7 unwind label %35

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 4
  invoke void @_ZN6dealii10FullMatrixIdEC1Ej(ptr noundef nonnull align 8 dereferenceable(92) %8, i32 noundef 0)
          to label %9 unwind label %37

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 5
  %11 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 5, i32 0, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %11, i8 0, i64 88, i1 false)
  store double -1.000000e+00, ptr %10, align 8, !tbaa !8
  %12 = getelementptr inbounds i8, ptr %0, i64 116
  %13 = load i32, ptr %12, align 4, !tbaa !11
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %0, i64 0, i32 17
  %17 = load ptr, ptr %16, align 8, !tbaa !15
  %18 = zext i32 %13 to i64
  %19 = and i64 %18, 3
  %20 = icmp ult i32 %13, 4
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  %22 = and i64 %18, 4294967292
  br label %40

23:                                               ; preds = %40, %15
  %24 = phi i64 [ 0, %15 ], [ %54, %40 ]
  %25 = icmp eq i64 %19, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %23, %26
  %27 = phi i64 [ %31, %26 ], [ %24, %23 ]
  %28 = phi i64 [ %32, %26 ], [ 0, %23 ]
  %29 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %27, i32 0, i32 1
  %30 = trunc i64 %27 to i32
  store i32 %30, ptr %29, align 4, !tbaa !18
  %31 = add nuw nsw i64 %27, 1
  %32 = add i64 %28, 1
  %33 = icmp eq i64 %32, %19
  br i1 %33, label %34, label %26, !llvm.loop !21

34:                                               ; preds = %23, %26, %9
  ret void

35:                                               ; preds = %5
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %57

37:                                               ; preds = %7
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 3, i32 2
  invoke void @_ZNSt6vectorIS_IN6dealii11Polynomials10PolynomialIdEESaIS3_EESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %39)
          to label %57 unwind label %60

40:                                               ; preds = %40, %21
  %41 = phi i64 [ 0, %21 ], [ %54, %40 ]
  %42 = phi i64 [ 0, %21 ], [ %55, %40 ]
  %43 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %41, i32 0, i32 1
  %44 = trunc i64 %41 to i32
  store i32 %44, ptr %43, align 4, !tbaa !18
  %45 = or i64 %41, 1
  %46 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %45, i32 0, i32 1
  %47 = trunc i64 %45 to i32
  store i32 %47, ptr %46, align 4, !tbaa !18
  %48 = or i64 %41, 2
  %49 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %48, i32 0, i32 1
  %50 = trunc i64 %48 to i32
  store i32 %50, ptr %49, align 4, !tbaa !18
  %51 = or i64 %41, 3
  %52 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %51, i32 0, i32 1
  %53 = trunc i64 %51 to i32
  store i32 %53, ptr %52, align 4, !tbaa !18
  %54 = add nuw nsw i64 %41, 4
  %55 = add i64 %42, 4
  %56 = icmp eq i64 %55, %22
  br i1 %56, label %23, label %40

57:                                               ; preds = %37, %35
  %58 = phi { ptr, i32 } [ %36, %35 ], [ %38, %37 ]
  invoke void @_ZN6dealii13FiniteElementILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(728) %0)
          to label %59 unwind label %60

59:                                               ; preds = %57
  resume { ptr, i32 } %58

60:                                               ; preds = %37, %57
  %61 = landingpad { ptr, i32 }
          catch ptr null
  %62 = extractvalue { ptr, i32 } %61, 0
  tail call void @__clang_call_terminate(ptr %62) #14
  unreachable
}

declare void @_ZN6dealii13FiniteElementILi3ELi3EEC2ERKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS6_IS8_SaIS8_EE(ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 4 dereferenceable(60), ptr noundef nonnull align 8 dereferenceable(40), ptr noundef nonnull align 8 dereferenceable(24)) unnamed_addr #1

declare void @_ZN6dealii24PolynomialsRaviartThomasILi3EEC1Ej(ptr noundef nonnull align 8 dereferenceable(44), i32 noundef) unnamed_addr #1

declare i32 @__gxx_personality_v0(...)

declare void @_ZN6dealii10FullMatrixIdEC1Ej(ptr noundef nonnull align 8 dereferenceable(92), i32 noundef) unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: noinline noreturn nounwind sspstrong uwtable
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #3 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #15
  tail call void @_ZSt9terminatev() #14
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

declare void @_ZN6dealii13FiniteElementILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(728)) unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE11shape_valueEjRKNS_5PointILi3EEE(ptr noundef nonnull align 8 dereferenceable(976) %0, i32 noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) unnamed_addr #4 comdat align 2 {
  ret double 0.000000e+00
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE21shape_value_componentEjRKNS_5PointILi3EEEj(ptr noundef nonnull align 8 dereferenceable(976) %0, i32 noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2, i32 noundef %3) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.dealii::Tensor", align 8
  %6 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 5
  %7 = load double, ptr %6, align 8, !tbaa !8
  %8 = load double, ptr %2, align 8, !tbaa !8
  %9 = fcmp une double %7, %8
  br i1 %9, label %28, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 5, i32 0, i32 0, i64 1
  %12 = load double, ptr %11, align 8, !tbaa !8
  %13 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 1
  %14 = load double, ptr %13, align 8, !tbaa !8
  %15 = fcmp une double %12, %14
  br i1 %15, label %28, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 5, i32 0, i32 0, i64 2
  %18 = load double, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 2
  %20 = load double, ptr %19, align 8, !tbaa !8
  %21 = fcmp une double %18, %20
  br i1 %21, label %28, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 6
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !23
  %26 = load ptr, ptr %23, align 8, !tbaa !25
  %27 = icmp eq ptr %25, %26
  br i1 %27, label %28, label %59

28:                                               ; preds = %16, %10, %4, %22
  store double %8, ptr %6, align 8, !tbaa !8
  %29 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 1
  %30 = load double, ptr %29, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 5, i32 0, i32 0, i64 1
  store double %30, ptr %31, align 8, !tbaa !8
  %32 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 2
  %33 = load double, ptr %32, align 8, !tbaa !8
  %34 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 5, i32 0, i32 0, i64 2
  store double %33, ptr %34, align 8, !tbaa !8
  %35 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 6
  %36 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 3
  %37 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 3, i32 3
  %38 = load i32, ptr %37, align 8, !tbaa !26
  %39 = zext i32 %38 to i64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false), !tbaa !8
  %40 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !33
  %42 = load ptr, ptr %35, align 8, !tbaa !25
  %43 = ptrtoint ptr %41 to i64
  %44 = ptrtoint ptr %42 to i64
  %45 = sub i64 %43, %44
  %46 = sdiv exact i64 %45, 24
  %47 = icmp ult i64 %46, %39
  br i1 %47, label %48, label %50

48:                                               ; preds = %28
  %49 = sub nsw i64 %39, %46
  call void @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr %41, i64 noundef %49, ptr noundef nonnull align 8 dereferenceable(24) %5)
  br label %56

50:                                               ; preds = %28
  %51 = icmp ugt i64 %46, %39
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.dealii::Tensor", ptr %42, i64 %39
  %54 = icmp eq ptr %41, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %52
  store ptr %53, ptr %40, align 8, !tbaa !23
  br label %56

56:                                               ; preds = %48, %50, %52, %55
  %57 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 7
  %58 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 8
  call void @_ZNK6dealii24PolynomialsRaviartThomasILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(44) %36, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %57, ptr noundef nonnull align 8 dereferenceable(24) %58)
  br label %59

59:                                               ; preds = %56, %22
  %60 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 4, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %61 = load i32, ptr %60, align 8, !tbaa !34
  %62 = icmp eq i32 %61, 0
  %63 = zext i32 %3 to i64
  br i1 %62, label %75, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !35
  %67 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 6
  %68 = load ptr, ptr %67, align 8, !tbaa !25
  %69 = getelementptr inbounds [3 x double], ptr %68, i64 0, i64 %63
  %70 = zext i32 %61 to i64
  %71 = and i64 %70, 1
  %72 = icmp eq i32 %61, 1
  br i1 %72, label %108, label %73

73:                                               ; preds = %64
  %74 = and i64 %70, 4294967294
  br label %82

75:                                               ; preds = %59
  %76 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 6
  %77 = zext i32 %1 to i64
  %78 = load ptr, ptr %76, align 8, !tbaa !25
  %79 = getelementptr inbounds %"class.dealii::Tensor", ptr %78, i64 %77
  %80 = getelementptr inbounds [3 x double], ptr %79, i64 0, i64 %63
  %81 = load double, ptr %80, align 8, !tbaa !8
  br label %123

82:                                               ; preds = %82, %73
  %83 = phi i64 [ 0, %73 ], [ %105, %82 ]
  %84 = phi double [ 0.000000e+00, %73 ], [ %104, %82 ]
  %85 = phi i64 [ 0, %73 ], [ %106, %82 ]
  %86 = trunc i64 %83 to i32
  %87 = mul i32 %61, %86
  %88 = add i32 %87, %1
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds double, ptr %66, i64 %89
  %91 = load double, ptr %90, align 8, !tbaa !8
  %92 = getelementptr inbounds %"class.dealii::Tensor", ptr %69, i64 %83
  %93 = load double, ptr %92, align 8, !tbaa !8
  %94 = call double @llvm.fmuladd.f64(double %91, double %93, double %84)
  %95 = or i64 %83, 1
  %96 = trunc i64 %95 to i32
  %97 = mul i32 %61, %96
  %98 = add i32 %97, %1
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds double, ptr %66, i64 %99
  %101 = load double, ptr %100, align 8, !tbaa !8
  %102 = getelementptr inbounds %"class.dealii::Tensor", ptr %69, i64 %95
  %103 = load double, ptr %102, align 8, !tbaa !8
  %104 = call double @llvm.fmuladd.f64(double %101, double %103, double %94)
  %105 = add nuw nsw i64 %83, 2
  %106 = add i64 %85, 2
  %107 = icmp eq i64 %106, %74
  br i1 %107, label %108, label %82

108:                                              ; preds = %82, %64
  %109 = phi double [ undef, %64 ], [ %104, %82 ]
  %110 = phi i64 [ 0, %64 ], [ %105, %82 ]
  %111 = phi double [ 0.000000e+00, %64 ], [ %104, %82 ]
  %112 = icmp eq i64 %71, 0
  br i1 %112, label %123, label %113

113:                                              ; preds = %108
  %114 = trunc i64 %110 to i32
  %115 = mul i32 %61, %114
  %116 = add i32 %115, %1
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds double, ptr %66, i64 %117
  %119 = load double, ptr %118, align 8, !tbaa !8
  %120 = getelementptr inbounds %"class.dealii::Tensor", ptr %69, i64 %110
  %121 = load double, ptr %120, align 8, !tbaa !8
  %122 = call double @llvm.fmuladd.f64(double %119, double %121, double %111)
  br label %123

123:                                              ; preds = %113, %108, %75
  %124 = phi double [ %81, %75 ], [ %109, %108 ], [ %122, %113 ]
  ret double %124
}

declare void @_ZNK6dealii24PolynomialsRaviartThomasILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(44), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 8 dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #5

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE10shape_gradEjRKNS_5PointILi3EEE(ptr noalias sret(%"class.dealii::Tensor") align 8 %0, ptr noundef nonnull align 8 dereferenceable(976) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false), !tbaa !8
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE20shape_grad_componentEjRKNS_5PointILi3EEEj(ptr noalias sret(%"class.dealii::Tensor") align 8 %0, ptr noundef nonnull align 8 dereferenceable(976) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %4) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.dealii::Tensor.84", align 8
  %7 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 5
  %8 = load double, ptr %7, align 8, !tbaa !8
  %9 = load double, ptr %3, align 8, !tbaa !8
  %10 = fcmp une double %8, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 5, i32 0, i32 0, i64 1
  %13 = load double, ptr %12, align 8, !tbaa !8
  %14 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %15 = load double, ptr %14, align 8, !tbaa !8
  %16 = fcmp une double %13, %15
  br i1 %16, label %29, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 5, i32 0, i32 0, i64 2
  %19 = load double, ptr %18, align 8, !tbaa !8
  %20 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %21 = load double, ptr %20, align 8, !tbaa !8
  %22 = fcmp une double %19, %21
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 7
  %25 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !49
  %27 = load ptr, ptr %24, align 8, !tbaa !51
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %29, label %60

29:                                               ; preds = %17, %11, %5, %23
  store double %9, ptr %7, align 8, !tbaa !8
  %30 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %31 = load double, ptr %30, align 8, !tbaa !8
  %32 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 5, i32 0, i32 0, i64 1
  store double %31, ptr %32, align 8, !tbaa !8
  %33 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %34 = load double, ptr %33, align 8, !tbaa !8
  %35 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 5, i32 0, i32 0, i64 2
  store double %34, ptr %35, align 8, !tbaa !8
  %36 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 7
  %37 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 3
  %38 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 3, i32 3
  %39 = load i32, ptr %38, align 8, !tbaa !26
  %40 = zext i32 %39 to i64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %6, i8 0, i64 72, i1 false), !tbaa !8
  %41 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !33
  %43 = load ptr, ptr %36, align 8, !tbaa !51
  %44 = ptrtoint ptr %42 to i64
  %45 = ptrtoint ptr %43 to i64
  %46 = sub i64 %44, %45
  %47 = sdiv exact i64 %46, 72
  %48 = icmp ult i64 %47, %40
  br i1 %48, label %49, label %51

49:                                               ; preds = %29
  %50 = sub nsw i64 %40, %47
  call void @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %36, ptr %42, i64 noundef %50, ptr noundef nonnull align 8 dereferenceable(72) %6)
  br label %57

51:                                               ; preds = %29
  %52 = icmp ugt i64 %47, %40
  br i1 %52, label %53, label %57

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %43, i64 %40
  %55 = icmp eq ptr %42, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  store ptr %54, ptr %41, align 8, !tbaa !49
  br label %57

57:                                               ; preds = %49, %51, %53, %56
  %58 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 6
  %59 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 8
  call void @_ZNK6dealii24PolynomialsRaviartThomasILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(44) %37, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %36, ptr noundef nonnull align 8 dereferenceable(24) %59)
  br label %60

60:                                               ; preds = %57, %23
  %61 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 4, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %62 = load i32, ptr %61, align 8, !tbaa !34
  %63 = icmp eq i32 %62, 0
  %64 = zext i32 %4 to i64
  br i1 %63, label %76, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !35
  %68 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 7
  %69 = load ptr, ptr %68, align 8, !tbaa !51
  %70 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %69, i64 0, i64 %64
  %71 = zext i32 %62 to i64
  %72 = and i64 %71, 1
  %73 = icmp eq i32 %62, 1
  br i1 %73, label %85, label %74

74:                                               ; preds = %65
  %75 = and i64 %71, 4294967294
  br label %112

76:                                               ; preds = %60
  %77 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 7
  %78 = zext i32 %2 to i64
  %79 = load ptr, ptr %77, align 8, !tbaa !51
  %80 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %79, i64 %78
  %81 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %80, i64 0, i64 %64
  %82 = load <2 x double>, ptr %81, align 8, !tbaa !8
  store <2 x double> %82, ptr %0, align 8, !tbaa !8
  %83 = getelementptr inbounds [3 x double], ptr %81, i64 0, i64 2
  %84 = load double, ptr %83, align 8, !tbaa !8
  br label %153

85:                                               ; preds = %112, %65
  %86 = phi <2 x double> [ undef, %65 ], [ %148, %112 ]
  %87 = phi double [ undef, %65 ], [ %149, %112 ]
  %88 = phi i64 [ 0, %65 ], [ %150, %112 ]
  %89 = phi double [ 0.000000e+00, %65 ], [ %149, %112 ]
  %90 = phi <2 x double> [ zeroinitializer, %65 ], [ %148, %112 ]
  %91 = icmp eq i64 %72, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %85
  %93 = trunc i64 %88 to i32
  %94 = mul i32 %62, %93
  %95 = add i32 %94, %2
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds double, ptr %67, i64 %96
  %98 = load double, ptr %97, align 8, !tbaa !8
  %99 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %70, i64 %88
  %100 = load <2 x double>, ptr %99, align 8, !tbaa !8, !noalias !52
  %101 = insertelement <2 x double> poison, double %98, i64 0
  %102 = shufflevector <2 x double> %101, <2 x double> poison, <2 x i32> zeroinitializer
  %103 = fmul <2 x double> %102, %100
  %104 = getelementptr inbounds [3 x double], ptr %99, i64 0, i64 2
  %105 = load double, ptr %104, align 8, !tbaa !8, !noalias !52
  %106 = fmul double %98, %105
  %107 = fadd <2 x double> %90, %103
  %108 = fadd double %89, %106
  br label %109

109:                                              ; preds = %85, %92
  %110 = phi <2 x double> [ %86, %85 ], [ %107, %92 ]
  %111 = phi double [ %87, %85 ], [ %108, %92 ]
  store <2 x double> %110, ptr %0, align 8, !tbaa !8
  br label %153

112:                                              ; preds = %112, %74
  %113 = phi i64 [ 0, %74 ], [ %150, %112 ]
  %114 = phi double [ 0.000000e+00, %74 ], [ %149, %112 ]
  %115 = phi <2 x double> [ zeroinitializer, %74 ], [ %148, %112 ]
  %116 = phi i64 [ 0, %74 ], [ %151, %112 ]
  %117 = trunc i64 %113 to i32
  %118 = mul i32 %62, %117
  %119 = add i32 %118, %2
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds double, ptr %67, i64 %120
  %122 = load double, ptr %121, align 8, !tbaa !8
  %123 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %70, i64 %113
  %124 = load <2 x double>, ptr %123, align 8, !tbaa !8, !noalias !52
  %125 = insertelement <2 x double> poison, double %122, i64 0
  %126 = shufflevector <2 x double> %125, <2 x double> poison, <2 x i32> zeroinitializer
  %127 = fmul <2 x double> %126, %124
  %128 = getelementptr inbounds [3 x double], ptr %123, i64 0, i64 2
  %129 = load double, ptr %128, align 8, !tbaa !8, !noalias !52
  %130 = fmul double %122, %129
  %131 = fadd <2 x double> %115, %127
  %132 = fadd double %114, %130
  %133 = or i64 %113, 1
  %134 = trunc i64 %133 to i32
  %135 = mul i32 %62, %134
  %136 = add i32 %135, %2
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds double, ptr %67, i64 %137
  %139 = load double, ptr %138, align 8, !tbaa !8
  %140 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %70, i64 %133
  %141 = load <2 x double>, ptr %140, align 8, !tbaa !8, !noalias !52
  %142 = insertelement <2 x double> poison, double %139, i64 0
  %143 = shufflevector <2 x double> %142, <2 x double> poison, <2 x i32> zeroinitializer
  %144 = fmul <2 x double> %143, %141
  %145 = getelementptr inbounds [3 x double], ptr %140, i64 0, i64 2
  %146 = load double, ptr %145, align 8, !tbaa !8, !noalias !52
  %147 = fmul double %139, %146
  %148 = fadd <2 x double> %131, %144
  %149 = fadd double %132, %147
  %150 = add nuw nsw i64 %113, 2
  %151 = add i64 %116, 2
  %152 = icmp eq i64 %151, %75
  br i1 %152, label %85, label %112

153:                                              ; preds = %109, %76
  %154 = phi double [ %111, %109 ], [ %84, %76 ]
  %155 = getelementptr inbounds [3 x double], ptr %0, i64 0, i64 2
  store double %154, ptr %155, align 8, !tbaa !8
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE15shape_grad_gradEjRKNS_5PointILi3EEE(ptr noalias sret(%"class.dealii::Tensor.84") align 8 %0, ptr noundef nonnull align 8 dereferenceable(976) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, i8 0, i64 72, i1 false), !tbaa !8
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE25shape_grad_grad_componentEjRKNS_5PointILi3EEEj(ptr noalias sret(%"class.dealii::Tensor.84") align 8 %0, ptr noundef nonnull align 8 dereferenceable(976) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %4) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.dealii::Tensor.85", align 8
  %7 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 5
  %8 = load double, ptr %7, align 8, !tbaa !8
  %9 = load double, ptr %3, align 8, !tbaa !8
  %10 = fcmp une double %8, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 5, i32 0, i32 0, i64 1
  %13 = load double, ptr %12, align 8, !tbaa !8
  %14 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %15 = load double, ptr %14, align 8, !tbaa !8
  %16 = fcmp une double %13, %15
  br i1 %16, label %29, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 5, i32 0, i32 0, i64 2
  %19 = load double, ptr %18, align 8, !tbaa !8
  %20 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %21 = load double, ptr %20, align 8, !tbaa !8
  %22 = fcmp une double %19, %21
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 8
  %25 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !55
  %27 = load ptr, ptr %24, align 8, !tbaa !57
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %29, label %60

29:                                               ; preds = %17, %11, %5, %23
  store double %9, ptr %7, align 8, !tbaa !8
  %30 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %31 = load double, ptr %30, align 8, !tbaa !8
  %32 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 5, i32 0, i32 0, i64 1
  store double %31, ptr %32, align 8, !tbaa !8
  %33 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %34 = load double, ptr %33, align 8, !tbaa !8
  %35 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 5, i32 0, i32 0, i64 2
  store double %34, ptr %35, align 8, !tbaa !8
  %36 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 8
  %37 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 3
  %38 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 3, i32 3
  %39 = load i32, ptr %38, align 8, !tbaa !26
  %40 = zext i32 %39 to i64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(216) %6, i8 0, i64 216, i1 false), !tbaa !8
  %41 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !33
  %43 = load ptr, ptr %36, align 8, !tbaa !57
  %44 = ptrtoint ptr %42 to i64
  %45 = ptrtoint ptr %43 to i64
  %46 = sub i64 %44, %45
  %47 = sdiv exact i64 %46, 216
  %48 = icmp ult i64 %47, %40
  br i1 %48, label %49, label %51

49:                                               ; preds = %29
  %50 = sub nsw i64 %40, %47
  call void @_ZNSt6vectorIN6dealii6TensorILi3ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %36, ptr %42, i64 noundef %50, ptr noundef nonnull align 8 dereferenceable(216) %6)
  br label %57

51:                                               ; preds = %29
  %52 = icmp ugt i64 %47, %40
  br i1 %52, label %53, label %57

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %43, i64 %40
  %55 = icmp eq ptr %42, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  store ptr %54, ptr %41, align 8, !tbaa !55
  br label %57

57:                                               ; preds = %49, %51, %53, %56
  %58 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 6
  %59 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 7
  call void @_ZNK6dealii24PolynomialsRaviartThomasILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(44) %37, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %59, ptr noundef nonnull align 8 dereferenceable(24) %36)
  br label %60

60:                                               ; preds = %57, %23
  %61 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 4, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %62 = load i32, ptr %61, align 8, !tbaa !34
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %73, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !35
  %67 = mul i32 %62, %2
  %68 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 8
  %69 = load ptr, ptr %68, align 8, !tbaa !57
  %70 = zext i32 %4 to i64
  %71 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %69, i64 0, i64 %70
  %72 = zext i32 %62 to i64
  br label %88

73:                                               ; preds = %60
  %74 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %1, i64 0, i32 8
  %75 = zext i32 %2 to i64
  %76 = load ptr, ptr %74, align 8, !tbaa !57
  %77 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %76, i64 %75
  %78 = zext i32 %4 to i64
  %79 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %77, i64 0, i64 %78
  %80 = load <4 x double>, ptr %79, align 8, !tbaa !8
  store <4 x double> %80, ptr %0, align 8, !tbaa !8
  %81 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %79, i64 0, i64 1, i32 0, i64 1
  %82 = getelementptr inbounds %"class.dealii::Tensor", ptr %0, i64 1, i32 0, i64 1
  %83 = load <4 x double>, ptr %81, align 8, !tbaa !8
  store <4 x double> %83, ptr %82, align 8, !tbaa !8
  %84 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %79, i64 0, i64 2, i32 0, i64 2
  %85 = load double, ptr %84, align 8, !tbaa !8
  br label %114

86:                                               ; preds = %88
  store <4 x double> %109, ptr %0, align 8, !tbaa !8
  %87 = getelementptr inbounds %"class.dealii::Tensor", ptr %0, i64 1, i32 0, i64 1
  store <4 x double> %110, ptr %87, align 8, !tbaa !8
  br label %114

88:                                               ; preds = %64, %88
  %89 = phi i64 [ 0, %64 ], [ %112, %88 ]
  %90 = phi double [ 0.000000e+00, %64 ], [ %111, %88 ]
  %91 = phi <4 x double> [ zeroinitializer, %64 ], [ %109, %88 ]
  %92 = phi <4 x double> [ zeroinitializer, %64 ], [ %110, %88 ]
  %93 = trunc i64 %89 to i32
  %94 = add i32 %67, %93
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds double, ptr %66, i64 %95
  %97 = load double, ptr %96, align 8, !tbaa !8
  %98 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %71, i64 %89
  %99 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %98, i64 0, i64 1, i32 0, i64 1
  %100 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %98, i64 0, i64 2, i32 0, i64 2
  %101 = load double, ptr %100, align 8, !tbaa !8, !noalias !58
  %102 = load <4 x double>, ptr %98, align 8, !tbaa !8, !noalias !58
  %103 = insertelement <4 x double> poison, double %97, i64 0
  %104 = shufflevector <4 x double> %103, <4 x double> poison, <4 x i32> zeroinitializer
  %105 = fmul <4 x double> %104, %102
  %106 = load <4 x double>, ptr %99, align 8, !tbaa !8, !noalias !58
  %107 = fmul <4 x double> %104, %106
  %108 = fmul double %97, %101
  %109 = fadd <4 x double> %91, %105
  %110 = fadd <4 x double> %92, %107
  %111 = fadd double %90, %108
  %112 = add nuw nsw i64 %89, 1
  %113 = icmp eq i64 %112, %72
  br i1 %113, label %86, label %88

114:                                              ; preds = %86, %73
  %115 = phi double [ %111, %86 ], [ %85, %73 ]
  %116 = getelementptr inbounds %"class.dealii::Tensor", ptr %0, i64 2, i32 0, i64 2
  store double %115, ptr %116, align 8, !tbaa !8
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE15n_base_elementsEv(ptr noundef nonnull align 8 dereferenceable(976) %0) unnamed_addr #4 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(728) ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12base_elementEj(ptr noundef nonnull align 8 dereferenceable(976) %0, i32 noundef %1) unnamed_addr #4 comdat align 2 {
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE20element_multiplicityEj(ptr noundef nonnull align 8 dereferenceable(976) %0, i32 noundef %1) unnamed_addr #4 comdat align 2 {
  ret i32 1
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE11update_onceENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(976) %0, i32 noundef %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !61
  %5 = icmp eq i32 %4, 0
  %6 = and i32 %1, 1
  %7 = icmp ne i32 %6, 0
  %8 = and i1 %7, %5
  %9 = zext i1 %8 to i32
  ret i32 %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE11update_eachENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(976) %0, i32 noundef %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !61
  %5 = icmp eq i32 %4, 256
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = and i32 %1, 1
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 0, i32 18433
  %10 = and i32 %1, 2
  %11 = icmp eq i32 %10, 0
  %12 = or i32 %9, 19458
  %13 = select i1 %11, i32 %9, i32 %12
  %14 = and i32 %1, 4
  %15 = icmp eq i32 %14, 0
  %16 = or i32 %13, 19460
  %17 = select i1 %15, i32 %13, i32 %16
  br label %18

18:                                               ; preds = %6, %2
  %19 = phi i32 [ 0, %2 ], [ %17, %6 ]
  ret i32 %19
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE8get_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE(ptr noundef nonnull align 8 dereferenceable(976) %0, i32 noundef %1, ptr noundef nonnull align 8 dereferenceable(72) %2, ptr noundef nonnull align 8 dereferenceable(128) %3) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.std::vector.67", align 8
  %6 = alloca %"class.std::vector.72", align 8
  %7 = alloca %"class.std::vector.77", align 8
  %8 = alloca %"class.dealii::Tensor", align 8
  %9 = alloca %"class.std::vector.67", align 8
  %10 = alloca %"class.dealii::Tensor", align 8
  %11 = alloca %"class.dealii::Tensor.84", align 8
  %12 = alloca %"class.std::vector.72", align 8
  %13 = alloca %"class.dealii::Tensor.84", align 8
  %14 = tail call noalias noundef nonnull dereferenceable(264) ptr @_Znwm(i64 noundef 264) #16
  invoke void @_ZN6dealii7MappingILi3ELi3EE16InternalDataBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(185) %14)
          to label %15 unwind label %86

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.dealii::FiniteElement<3, 3>::InternalDataBase", ptr %14, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataE, i64 0, inrange i32 0, i64 2), ptr %14, align 8, !tbaa !5
  %17 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %14, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %17, i8 0, i64 48, i1 false)
  %18 = load ptr, ptr %0, align 8, !tbaa !5
  %19 = getelementptr inbounds ptr, ptr %18, i64 27
  %20 = load ptr, ptr %19, align 8
  %21 = tail call noundef i32 %20(ptr noundef nonnull align 8 dereferenceable(976) %0, i32 noundef %1)
  %22 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %14, i64 0, i32 2
  store i32 %21, ptr %22, align 4, !tbaa !118
  %23 = load ptr, ptr %0, align 8, !tbaa !5
  %24 = getelementptr inbounds ptr, ptr %23, i64 28
  %25 = load ptr, ptr %24, align 8
  %26 = tail call noundef i32 %25(ptr noundef nonnull align 8 dereferenceable(976) %0, i32 noundef %1)
  %27 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %14, i64 0, i32 3
  store i32 %26, ptr %27, align 8, !tbaa !125
  %28 = load i32, ptr %22, align 4, !tbaa !118
  %29 = or i32 %28, %26
  %30 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %14, i64 0, i32 1
  store i32 %29, ptr %30, align 8, !tbaa !126
  %31 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3
  %32 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !127
  %34 = load ptr, ptr %31, align 8, !tbaa !128
  %35 = ptrtoint ptr %33 to i64
  %36 = ptrtoint ptr %34 to i64
  %37 = sub i64 %35, %36
  %38 = lshr exact i64 %37, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #15
  %39 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %6, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #15
  %40 = and i32 %29, 1
  %41 = icmp eq i32 %40, 0
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br i1 %41, label %125, label %42

42:                                               ; preds = %15
  %43 = getelementptr inbounds i8, ptr %0, i64 112
  %44 = load i32, ptr %43, align 8, !tbaa !129
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false), !tbaa !8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = zext i32 %44 to i64
  invoke void @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr null, i64 noundef %47, ptr noundef nonnull align 8 dereferenceable(24) %8)
          to label %48 unwind label %88

48:                                               ; preds = %46
  %49 = load i32, ptr %43, align 8, !tbaa !129
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %42, %48
  %52 = phi i64 [ %50, %48 ], [ 0, %42 ]
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)
  %53 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !33
  %55 = load ptr, ptr %17, align 8, !tbaa !130
  %56 = ptrtoint ptr %54 to i64
  %57 = ptrtoint ptr %55 to i64
  %58 = sub i64 %56, %57
  %59 = sdiv exact i64 %58, 24
  %60 = icmp ult i64 %59, %52
  br i1 %60, label %61, label %63

61:                                               ; preds = %51
  %62 = sub nsw i64 %52, %59
  invoke void @_ZNSt6vectorIS_IN6dealii6TensorILi1ELi3EEESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_(ptr noundef nonnull align 8 dereferenceable(24) %17, ptr %54, i64 noundef %62, ptr noundef nonnull align 8 dereferenceable(24) %9)
          to label %77 unwind label %90

63:                                               ; preds = %51
  %64 = icmp ugt i64 %59, %52
  br i1 %64, label %65, label %77

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::vector.67", ptr %55, i64 %52
  %67 = icmp eq ptr %54, %66
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %73
  %69 = phi ptr [ %74, %73 ], [ %66, %65 ]
  %70 = load ptr, ptr %69, align 8, !tbaa !25
  %71 = icmp eq ptr %70, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %68
  call void @_ZdlPv(ptr noundef nonnull %70) #17
  br label %73

73:                                               ; preds = %72, %68
  %74 = getelementptr inbounds %"class.std::vector.67", ptr %69, i64 1
  %75 = icmp eq ptr %74, %54
  br i1 %75, label %76, label %68

76:                                               ; preds = %73
  store ptr %66, ptr %53, align 8, !tbaa !132
  br label %77

77:                                               ; preds = %76, %65, %63, %61
  %78 = load ptr, ptr %9, align 8, !tbaa !25
  %79 = icmp eq ptr %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %77
  call void @_ZdlPv(ptr noundef nonnull %78) #17
  br label %81

81:                                               ; preds = %77, %80
  %82 = load i32, ptr %43, align 8, !tbaa !129
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %125, label %84

84:                                               ; preds = %81
  %85 = and i64 %38, 4294967295
  br label %95

86:                                               ; preds = %4
  %87 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %14) #17
  br label %465

88:                                               ; preds = %139, %46, %224
  %89 = landingpad { ptr, i32 }
          cleanup
  br label %446

90:                                               ; preds = %61
  %91 = landingpad { ptr, i32 }
          cleanup
  %92 = load ptr, ptr %9, align 8, !tbaa !25
  %93 = icmp eq ptr %92, null
  br i1 %93, label %446, label %94

94:                                               ; preds = %90
  call void @_ZdlPv(ptr noundef nonnull %92) #17
  br label %446

95:                                               ; preds = %84, %118
  %96 = phi i32 [ %82, %84 ], [ %119, %118 ]
  %97 = phi i64 [ 0, %84 ], [ %120, %118 ]
  %98 = load ptr, ptr %17, align 8, !tbaa !130
  %99 = getelementptr inbounds %"class.std::vector.67", ptr %98, i64 %97
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false), !tbaa !8
  %100 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %99, i64 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !33
  %102 = load ptr, ptr %99, align 8, !tbaa !25
  %103 = ptrtoint ptr %101 to i64
  %104 = ptrtoint ptr %102 to i64
  %105 = sub i64 %103, %104
  %106 = sdiv exact i64 %105, 24
  %107 = icmp ult i64 %106, %85
  br i1 %107, label %108, label %112

108:                                              ; preds = %95
  %109 = sub nsw i64 %85, %106
  invoke void @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %99, ptr %101, i64 noundef %109, ptr noundef nonnull align 8 dereferenceable(24) %10)
          to label %110 unwind label %123

110:                                              ; preds = %108
  %111 = load i32, ptr %43, align 8, !tbaa !129
  br label %118

112:                                              ; preds = %95
  %113 = icmp ugt i64 %106, %85
  br i1 %113, label %114, label %118

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"class.dealii::Tensor", ptr %102, i64 %85
  %116 = icmp eq ptr %101, %115
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  store ptr %115, ptr %100, align 8, !tbaa !23
  br label %118

118:                                              ; preds = %110, %117, %114, %112
  %119 = phi i32 [ %111, %110 ], [ %96, %117 ], [ %96, %114 ], [ %96, %112 ]
  %120 = add nuw nsw i64 %97, 1
  %121 = zext i32 %119 to i64
  %122 = icmp ult i64 %120, %121
  br i1 %122, label %95, label %125

123:                                              ; preds = %108
  %124 = landingpad { ptr, i32 }
          cleanup
  br label %446

125:                                              ; preds = %118, %81, %15
  %126 = and i32 %29, 2
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %221, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds i8, ptr %0, i64 112
  %130 = load i32, ptr %129, align 8, !tbaa !129
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %11, i8 0, i64 72, i1 false), !tbaa !8
  %131 = zext i32 %130 to i64
  %132 = load ptr, ptr %39, align 8, !tbaa !33
  %133 = load ptr, ptr %6, align 8, !tbaa !51
  %134 = ptrtoint ptr %132 to i64
  %135 = ptrtoint ptr %133 to i64
  %136 = sub i64 %134, %135
  %137 = sdiv exact i64 %136, 72
  %138 = icmp ult i64 %137, %131
  br i1 %138, label %139, label %144

139:                                              ; preds = %128
  %140 = sub nsw i64 %131, %137
  invoke void @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr %132, i64 noundef %140, ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %141 unwind label %88

141:                                              ; preds = %139
  %142 = load i32, ptr %129, align 8, !tbaa !129
  %143 = zext i32 %142 to i64
  br label %150

144:                                              ; preds = %128
  %145 = icmp ugt i64 %137, %131
  br i1 %145, label %146, label %150

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %133, i64 %131
  %148 = icmp eq ptr %132, %147
  br i1 %148, label %150, label %149

149:                                              ; preds = %146
  store ptr %147, ptr %39, align 8, !tbaa !49
  br label %150

150:                                              ; preds = %141, %144, %146, %149
  %151 = phi i64 [ %143, %141 ], [ %131, %144 ], [ %131, %146 ], [ %131, %149 ]
  %152 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %14, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  %153 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %154 = load ptr, ptr %153, align 8, !tbaa !33
  %155 = load ptr, ptr %152, align 8, !tbaa !133
  %156 = ptrtoint ptr %154 to i64
  %157 = ptrtoint ptr %155 to i64
  %158 = sub i64 %156, %157
  %159 = sdiv exact i64 %158, 24
  %160 = icmp ult i64 %159, %151
  br i1 %160, label %161, label %163

161:                                              ; preds = %150
  %162 = sub nsw i64 %151, %159
  invoke void @_ZNSt6vectorIS_IN6dealii6TensorILi2ELi3EEESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_(ptr noundef nonnull align 8 dereferenceable(24) %152, ptr %154, i64 noundef %162, ptr noundef nonnull align 8 dereferenceable(24) %12)
          to label %177 unwind label %186

163:                                              ; preds = %150
  %164 = icmp ugt i64 %159, %151
  br i1 %164, label %165, label %177

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.std::vector.72", ptr %155, i64 %151
  %167 = icmp eq ptr %154, %166
  br i1 %167, label %177, label %168

168:                                              ; preds = %165, %173
  %169 = phi ptr [ %174, %173 ], [ %166, %165 ]
  %170 = load ptr, ptr %169, align 8, !tbaa !51
  %171 = icmp eq ptr %170, null
  br i1 %171, label %173, label %172

172:                                              ; preds = %168
  call void @_ZdlPv(ptr noundef nonnull %170) #17
  br label %173

173:                                              ; preds = %172, %168
  %174 = getelementptr inbounds %"class.std::vector.72", ptr %169, i64 1
  %175 = icmp eq ptr %174, %154
  br i1 %175, label %176, label %168

176:                                              ; preds = %173
  store ptr %166, ptr %153, align 8, !tbaa !135
  br label %177

177:                                              ; preds = %176, %165, %163, %161
  %178 = load ptr, ptr %12, align 8, !tbaa !51
  %179 = icmp eq ptr %178, null
  br i1 %179, label %181, label %180

180:                                              ; preds = %177
  call void @_ZdlPv(ptr noundef nonnull %178) #17
  br label %181

181:                                              ; preds = %177, %180
  %182 = load i32, ptr %129, align 8, !tbaa !129
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %221, label %184

184:                                              ; preds = %181
  %185 = and i64 %38, 4294967295
  br label %191

186:                                              ; preds = %161
  %187 = landingpad { ptr, i32 }
          cleanup
  %188 = load ptr, ptr %12, align 8, !tbaa !51
  %189 = icmp eq ptr %188, null
  br i1 %189, label %446, label %190

190:                                              ; preds = %186
  call void @_ZdlPv(ptr noundef nonnull %188) #17
  br label %446

191:                                              ; preds = %184, %214
  %192 = phi i32 [ %182, %184 ], [ %215, %214 ]
  %193 = phi i64 [ 0, %184 ], [ %216, %214 ]
  %194 = load ptr, ptr %152, align 8, !tbaa !133
  %195 = getelementptr inbounds %"class.std::vector.72", ptr %194, i64 %193
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %13, i8 0, i64 72, i1 false), !tbaa !8
  %196 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %195, i64 0, i32 1
  %197 = load ptr, ptr %196, align 8, !tbaa !33
  %198 = load ptr, ptr %195, align 8, !tbaa !51
  %199 = ptrtoint ptr %197 to i64
  %200 = ptrtoint ptr %198 to i64
  %201 = sub i64 %199, %200
  %202 = sdiv exact i64 %201, 72
  %203 = icmp ult i64 %202, %185
  br i1 %203, label %204, label %208

204:                                              ; preds = %191
  %205 = sub nsw i64 %185, %202
  invoke void @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %195, ptr %197, i64 noundef %205, ptr noundef nonnull align 8 dereferenceable(72) %13)
          to label %206 unwind label %219

206:                                              ; preds = %204
  %207 = load i32, ptr %129, align 8, !tbaa !129
  br label %214

208:                                              ; preds = %191
  %209 = icmp ugt i64 %202, %185
  br i1 %209, label %210, label %214

210:                                              ; preds = %208
  %211 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %198, i64 %185
  %212 = icmp eq ptr %197, %211
  br i1 %212, label %214, label %213

213:                                              ; preds = %210
  store ptr %211, ptr %196, align 8, !tbaa !49
  br label %214

214:                                              ; preds = %206, %213, %210, %208
  %215 = phi i32 [ %207, %206 ], [ %192, %213 ], [ %192, %210 ], [ %192, %208 ]
  %216 = add nuw nsw i64 %193, 1
  %217 = zext i32 %215 to i64
  %218 = icmp ult i64 %216, %217
  br i1 %218, label %191, label %221

219:                                              ; preds = %204
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %446

221:                                              ; preds = %214, %181, %125
  %222 = and i32 %29, 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %225, label %224

224:                                              ; preds = %221
  invoke void @_ZN6dealii13FiniteElementILi3ELi3EE16InternalDataBase14initialize_2ndEPKS1_RKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE(ptr noundef nonnull align 8 dereferenceable(216) %14, ptr noundef nonnull %0, ptr noundef nonnull align 8 dereferenceable(72) %2, ptr noundef nonnull align 8 dereferenceable(128) %3)
          to label %225 unwind label %88

225:                                              ; preds = %224, %221
  %226 = and i32 %29, 3
  %227 = icmp ne i32 %226, 0
  %228 = and i64 %37, 34359738360
  %229 = icmp ne i64 %228, 0
  %230 = select i1 %227, i1 %229, i1 false
  br i1 %230, label %231, label %438

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 2
  %233 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 3
  %234 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 4, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %235 = getelementptr inbounds i8, ptr %0, i64 112
  %236 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %237 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %14, i64 0, i32 2
  %238 = and i64 %38, 4294967295
  br label %239

239:                                              ; preds = %231, %435
  %240 = phi i64 [ 0, %231 ], [ %436, %435 ]
  %241 = load ptr, ptr %232, align 8, !tbaa !136
  %242 = getelementptr inbounds %"class.dealii::Point", ptr %241, i64 %240
  invoke void @_ZNK6dealii24PolynomialsRaviartThomasILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(44) %233, ptr noundef nonnull align 8 dereferenceable(24) %242, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %243 unwind label %264

243:                                              ; preds = %239
  br i1 %41, label %344, label %244

244:                                              ; preds = %243
  %245 = load i32, ptr %234, align 8, !tbaa !34
  %246 = icmp eq i32 %245, 0
  %247 = load i32, ptr %235, align 8, !tbaa !129
  %248 = icmp eq i32 %247, 0
  br i1 %246, label %255, label %249

249:                                              ; preds = %244
  br i1 %248, label %344, label %250

250:                                              ; preds = %249
  %251 = load ptr, ptr %236, align 8, !tbaa !35
  %252 = load ptr, ptr %5, align 8, !tbaa !25
  %253 = load ptr, ptr %17, align 8, !tbaa !130
  %254 = zext i32 %247 to i64
  br label %295

255:                                              ; preds = %244
  br i1 %248, label %344, label %256

256:                                              ; preds = %255
  %257 = load ptr, ptr %5, align 8, !tbaa !25
  %258 = load ptr, ptr %17, align 8, !tbaa !130
  %259 = zext i32 %247 to i64
  %260 = and i64 %259, 1
  %261 = icmp eq i32 %247, 1
  br i1 %261, label %329, label %262

262:                                              ; preds = %256
  %263 = and i64 %259, 4294967294
  br label %266

264:                                              ; preds = %239
  %265 = landingpad { ptr, i32 }
          cleanup
  br label %446

266:                                              ; preds = %266, %262
  %267 = phi i64 [ 0, %262 ], [ %292, %266 ]
  %268 = phi i64 [ 0, %262 ], [ %293, %266 ]
  %269 = getelementptr inbounds %"class.dealii::Tensor", ptr %257, i64 %267
  %270 = getelementptr inbounds %"class.std::vector.67", ptr %258, i64 %267
  %271 = load ptr, ptr %270, align 8, !tbaa !25
  %272 = getelementptr inbounds %"class.dealii::Tensor", ptr %271, i64 %240
  %273 = load double, ptr %269, align 8, !tbaa !8
  store double %273, ptr %272, align 8, !tbaa !8
  %274 = getelementptr inbounds [3 x double], ptr %269, i64 0, i64 1
  %275 = load double, ptr %274, align 8, !tbaa !8
  %276 = getelementptr inbounds [3 x double], ptr %272, i64 0, i64 1
  store double %275, ptr %276, align 8, !tbaa !8
  %277 = getelementptr inbounds [3 x double], ptr %269, i64 0, i64 2
  %278 = load double, ptr %277, align 8, !tbaa !8
  %279 = getelementptr inbounds [3 x double], ptr %272, i64 0, i64 2
  store double %278, ptr %279, align 8, !tbaa !8
  %280 = or i64 %267, 1
  %281 = getelementptr inbounds %"class.dealii::Tensor", ptr %257, i64 %280
  %282 = getelementptr inbounds %"class.std::vector.67", ptr %258, i64 %280
  %283 = load ptr, ptr %282, align 8, !tbaa !25
  %284 = getelementptr inbounds %"class.dealii::Tensor", ptr %283, i64 %240
  %285 = load double, ptr %281, align 8, !tbaa !8
  store double %285, ptr %284, align 8, !tbaa !8
  %286 = getelementptr inbounds [3 x double], ptr %281, i64 0, i64 1
  %287 = load double, ptr %286, align 8, !tbaa !8
  %288 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 1
  store double %287, ptr %288, align 8, !tbaa !8
  %289 = getelementptr inbounds [3 x double], ptr %281, i64 0, i64 2
  %290 = load double, ptr %289, align 8, !tbaa !8
  %291 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 2
  store double %290, ptr %291, align 8, !tbaa !8
  %292 = add nuw nsw i64 %267, 2
  %293 = add i64 %268, 2
  %294 = icmp eq i64 %293, %263
  br i1 %294, label %329, label %266

295:                                              ; preds = %250, %304
  %296 = phi i64 [ 0, %250 ], [ %305, %304 ]
  %297 = getelementptr inbounds %"class.std::vector.67", ptr %253, i64 %296
  %298 = load ptr, ptr %297, align 8, !tbaa !25
  %299 = getelementptr inbounds %"class.dealii::Tensor", ptr %298, i64 %240
  %300 = getelementptr inbounds [3 x double], ptr %299, i64 0, i64 2
  %301 = load <2 x double>, ptr %299, align 8, !tbaa !8
  %302 = load double, ptr %300, align 8, !tbaa !8
  %303 = trunc i64 %296 to i32
  br label %307

304:                                              ; preds = %307
  %305 = add nuw nsw i64 %296, 1
  %306 = icmp eq i64 %305, %254
  br i1 %306, label %344, label %295

307:                                              ; preds = %295, %307
  %308 = phi i64 [ 0, %295 ], [ %327, %307 ]
  %309 = phi double [ %302, %295 ], [ %326, %307 ]
  %310 = phi <2 x double> [ %301, %295 ], [ %325, %307 ]
  %311 = trunc i64 %308 to i32
  %312 = mul i32 %245, %311
  %313 = add i32 %312, %303
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds double, ptr %251, i64 %314
  %316 = load double, ptr %315, align 8, !tbaa !8
  %317 = getelementptr inbounds %"class.dealii::Tensor", ptr %252, i64 %308
  %318 = getelementptr inbounds [3 x double], ptr %317, i64 0, i64 2
  %319 = load double, ptr %318, align 8, !tbaa !8, !noalias !137
  %320 = fmul double %316, %319
  %321 = load <2 x double>, ptr %317, align 8, !tbaa !8, !noalias !137
  %322 = insertelement <2 x double> poison, double %316, i64 0
  %323 = shufflevector <2 x double> %322, <2 x double> poison, <2 x i32> zeroinitializer
  %324 = fmul <2 x double> %323, %321
  %325 = fadd <2 x double> %324, %310
  store <2 x double> %325, ptr %299, align 8, !tbaa !8
  %326 = fadd double %320, %309
  store double %326, ptr %300, align 8, !tbaa !8
  %327 = add nuw nsw i64 %308, 1
  %328 = icmp eq i64 %327, %254
  br i1 %328, label %304, label %307

329:                                              ; preds = %266, %256
  %330 = phi i64 [ 0, %256 ], [ %292, %266 ]
  %331 = icmp eq i64 %260, 0
  br i1 %331, label %344, label %332

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.dealii::Tensor", ptr %257, i64 %330
  %334 = getelementptr inbounds %"class.std::vector.67", ptr %258, i64 %330
  %335 = load ptr, ptr %334, align 8, !tbaa !25
  %336 = getelementptr inbounds %"class.dealii::Tensor", ptr %335, i64 %240
  %337 = load double, ptr %333, align 8, !tbaa !8
  store double %337, ptr %336, align 8, !tbaa !8
  %338 = getelementptr inbounds [3 x double], ptr %333, i64 0, i64 1
  %339 = load double, ptr %338, align 8, !tbaa !8
  %340 = getelementptr inbounds [3 x double], ptr %336, i64 0, i64 1
  store double %339, ptr %340, align 8, !tbaa !8
  %341 = getelementptr inbounds [3 x double], ptr %333, i64 0, i64 2
  %342 = load double, ptr %341, align 8, !tbaa !8
  %343 = getelementptr inbounds [3 x double], ptr %336, i64 0, i64 2
  store double %342, ptr %343, align 8, !tbaa !8
  br label %344

344:                                              ; preds = %304, %332, %329, %249, %255, %243
  br i1 %127, label %435, label %345

345:                                              ; preds = %344
  %346 = load i32, ptr %234, align 8, !tbaa !34
  %347 = icmp eq i32 %346, 0
  %348 = load i32, ptr %235, align 8, !tbaa !129
  %349 = icmp eq i32 %348, 0
  br i1 %347, label %356, label %350

350:                                              ; preds = %345
  br i1 %349, label %435, label %351

351:                                              ; preds = %350
  %352 = load ptr, ptr %236, align 8, !tbaa !35
  %353 = load ptr, ptr %6, align 8, !tbaa !51
  %354 = load ptr, ptr %237, align 8, !tbaa !133
  %355 = zext i32 %348 to i64
  br label %394

356:                                              ; preds = %345
  br i1 %349, label %435, label %357

357:                                              ; preds = %356
  %358 = load ptr, ptr %6, align 8, !tbaa !51
  %359 = load ptr, ptr %237, align 8, !tbaa !133
  %360 = zext i32 %348 to i64
  br label %361

361:                                              ; preds = %357, %361
  %362 = phi i64 [ 0, %357 ], [ %392, %361 ]
  %363 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %358, i64 %362
  %364 = getelementptr inbounds %"class.std::vector.72", ptr %359, i64 %362
  %365 = load ptr, ptr %364, align 8, !tbaa !51
  %366 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %365, i64 %240
  %367 = load double, ptr %363, align 8, !tbaa !8
  store double %367, ptr %366, align 8, !tbaa !8
  %368 = getelementptr inbounds [3 x double], ptr %363, i64 0, i64 1
  %369 = load double, ptr %368, align 8, !tbaa !8
  %370 = getelementptr inbounds [3 x double], ptr %366, i64 0, i64 1
  store double %369, ptr %370, align 8, !tbaa !8
  %371 = getelementptr inbounds [3 x double], ptr %363, i64 0, i64 2
  %372 = load double, ptr %371, align 8, !tbaa !8
  %373 = getelementptr inbounds [3 x double], ptr %366, i64 0, i64 2
  store double %372, ptr %373, align 8, !tbaa !8
  %374 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 1
  %375 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 1
  %376 = load double, ptr %374, align 8, !tbaa !8
  store double %376, ptr %375, align 8, !tbaa !8
  %377 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 1, i32 0, i64 1
  %378 = load double, ptr %377, align 8, !tbaa !8
  %379 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 1, i32 0, i64 1
  store double %378, ptr %379, align 8, !tbaa !8
  %380 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 1, i32 0, i64 2
  %381 = load double, ptr %380, align 8, !tbaa !8
  %382 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 1, i32 0, i64 2
  store double %381, ptr %382, align 8, !tbaa !8
  %383 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 2
  %384 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 2
  %385 = load double, ptr %383, align 8, !tbaa !8
  store double %385, ptr %384, align 8, !tbaa !8
  %386 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 2, i32 0, i64 1
  %387 = load double, ptr %386, align 8, !tbaa !8
  %388 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 2, i32 0, i64 1
  store double %387, ptr %388, align 8, !tbaa !8
  %389 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 2, i32 0, i64 2
  %390 = load double, ptr %389, align 8, !tbaa !8
  %391 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 2, i32 0, i64 2
  store double %390, ptr %391, align 8, !tbaa !8
  %392 = add nuw nsw i64 %362, 1
  %393 = icmp eq i64 %392, %360
  br i1 %393, label %435, label %361

394:                                              ; preds = %351, %405
  %395 = phi i64 [ 0, %351 ], [ %406, %405 ]
  %396 = getelementptr inbounds %"class.std::vector.72", ptr %354, i64 %395
  %397 = load ptr, ptr %396, align 8, !tbaa !51
  %398 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %397, i64 %240
  %399 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %398, i64 0, i64 1, i32 0, i64 1
  %400 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %398, i64 0, i64 2, i32 0, i64 2
  %401 = load <4 x double>, ptr %398, align 8, !tbaa !8
  %402 = load <4 x double>, ptr %399, align 8, !tbaa !8
  %403 = load double, ptr %400, align 8, !tbaa !8
  %404 = trunc i64 %395 to i32
  br label %408

405:                                              ; preds = %408
  %406 = add nuw nsw i64 %395, 1
  %407 = icmp eq i64 %406, %355
  br i1 %407, label %435, label %394

408:                                              ; preds = %394, %408
  %409 = phi i64 [ 0, %394 ], [ %433, %408 ]
  %410 = phi double [ %403, %394 ], [ %432, %408 ]
  %411 = phi <4 x double> [ %401, %394 ], [ %428, %408 ]
  %412 = phi <4 x double> [ %402, %394 ], [ %431, %408 ]
  %413 = trunc i64 %409 to i32
  %414 = mul i32 %346, %413
  %415 = add i32 %414, %404
  %416 = zext i32 %415 to i64
  %417 = getelementptr inbounds double, ptr %352, i64 %416
  %418 = load double, ptr %417, align 8, !tbaa !8
  %419 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %353, i64 %409
  %420 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %419, i64 0, i64 1, i32 0, i64 1
  %421 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %419, i64 0, i64 2, i32 0, i64 2
  %422 = load double, ptr %421, align 8, !tbaa !8, !noalias !140
  %423 = fmul double %418, %422
  %424 = load <4 x double>, ptr %419, align 8, !tbaa !8, !noalias !140
  %425 = insertelement <4 x double> poison, double %418, i64 0
  %426 = shufflevector <4 x double> %425, <4 x double> poison, <4 x i32> zeroinitializer
  %427 = fmul <4 x double> %426, %424
  %428 = fadd <4 x double> %427, %411
  %429 = load <4 x double>, ptr %420, align 8, !tbaa !8, !noalias !140
  %430 = fmul <4 x double> %426, %429
  store <4 x double> %428, ptr %398, align 8, !tbaa !8
  %431 = fadd <4 x double> %430, %412
  store <4 x double> %431, ptr %399, align 8, !tbaa !8
  %432 = fadd double %423, %410
  store double %432, ptr %400, align 8, !tbaa !8
  %433 = add nuw nsw i64 %409, 1
  %434 = icmp eq i64 %433, %355
  br i1 %434, label %405, label %408

435:                                              ; preds = %405, %361, %350, %356, %344
  %436 = add nuw nsw i64 %240, 1
  %437 = icmp eq i64 %436, %238
  br i1 %437, label %438, label %239

438:                                              ; preds = %435, %225
  %439 = load ptr, ptr %7, align 8, !tbaa !57
  %440 = icmp eq ptr %439, null
  br i1 %440, label %442, label %441

441:                                              ; preds = %438
  call void @_ZdlPv(ptr noundef nonnull %439) #17
  br label %442

442:                                              ; preds = %441, %438
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #15
  %443 = load ptr, ptr %6, align 8, !tbaa !51
  %444 = icmp eq ptr %443, null
  br i1 %444, label %455, label %445

445:                                              ; preds = %442
  call void @_ZdlPv(ptr noundef nonnull %443) #17
  br label %455

446:                                              ; preds = %190, %186, %94, %90, %264, %219, %123, %88
  %447 = phi { ptr, i32 } [ %124, %123 ], [ %220, %219 ], [ %89, %88 ], [ %265, %264 ], [ %91, %90 ], [ %91, %94 ], [ %187, %186 ], [ %187, %190 ]
  %448 = load ptr, ptr %7, align 8, !tbaa !57
  %449 = icmp eq ptr %448, null
  br i1 %449, label %451, label %450

450:                                              ; preds = %446
  call void @_ZdlPv(ptr noundef nonnull %448) #17
  br label %451

451:                                              ; preds = %450, %446
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #15
  %452 = load ptr, ptr %6, align 8, !tbaa !51
  %453 = icmp eq ptr %452, null
  br i1 %453, label %460, label %454

454:                                              ; preds = %451
  call void @_ZdlPv(ptr noundef nonnull %452) #17
  br label %460

455:                                              ; preds = %445, %442
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #15
  %456 = load ptr, ptr %5, align 8, !tbaa !25
  %457 = icmp eq ptr %456, null
  br i1 %457, label %459, label %458

458:                                              ; preds = %455
  call void @_ZdlPv(ptr noundef nonnull %456) #17
  br label %459

459:                                              ; preds = %455, %458
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret ptr %14

460:                                              ; preds = %454, %451
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #15
  %461 = load ptr, ptr %5, align 8, !tbaa !25
  %462 = icmp eq ptr %461, null
  br i1 %462, label %464, label %463

463:                                              ; preds = %460
  call void @_ZdlPv(ptr noundef nonnull %461) #17
  br label %464

464:                                              ; preds = %463, %460
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  br label %465

465:                                              ; preds = %464, %86
  %466 = phi { ptr, i32 } [ %447, %464 ], [ %87, %86 ]
  resume { ptr, i32 } %466
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #7

declare void @_ZN6dealii13FiniteElementILi3ELi3EE16InternalDataBase14initialize_2ndEPKS1_RKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE(ptr noundef nonnull align 8 dereferenceable(216), ptr noundef, ptr noundef nonnull align 8 dereferenceable(72), ptr noundef nonnull align 8 dereferenceable(128)) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE14fill_fe_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEERKNS_10QuadratureILi3EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEERNS_14CellSimilarity10SimilarityE(ptr noundef nonnull align 8 dereferenceable(976) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(185) %4, ptr noundef nonnull align 8 dereferenceable(185) %5, ptr noundef nonnull align 8 dereferenceable(436) %6, ptr noundef nonnull align 4 dereferenceable(4) %7) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %9 = alloca %"class.std::vector.67", align 8
  %10 = alloca %"class.std::vector.67", align 8
  %11 = alloca %"class.std::vector.72", align 8
  %12 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %13 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %14 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !127
  %17 = load ptr, ptr %14, align 8, !tbaa !128
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = lshr exact i64 %20, 3
  %22 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %5, i64 0, i32 9
  %23 = load i8, ptr %22, align 8, !tbaa !143, !range !144, !noundef !145
  %24 = icmp eq i8 %23, 0
  %25 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %5, i64 0, i32 1
  %26 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %5, i64 0, i32 3
  %27 = load i32, ptr %26, align 8
  %28 = load i32, ptr %25, align 8
  %29 = select i1 %24, i32 %27, i32 %28
  %30 = getelementptr inbounds i8, ptr %0, i64 112
  %31 = load i32, ptr %30, align 8, !tbaa !129
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %89, label %33

33:                                               ; preds = %8
  %34 = zext i32 %31 to i64
  %35 = shl nuw nsw i64 %34, 3
  %36 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %35) #16
  %37 = getelementptr inbounds double, ptr %36, i64 %34
  %38 = add nuw nsw i64 %34, 2305843009213693951
  %39 = and i64 %38, 2305843009213693951
  %40 = add nuw nsw i64 %39, 1
  %41 = icmp ult i64 %39, 15
  br i1 %41, label %57, label %42

42:                                               ; preds = %33
  %43 = and i64 %40, 4611686018427387888
  %44 = shl i64 %43, 3
  %45 = getelementptr i8, ptr %36, i64 %44
  br label %46

46:                                               ; preds = %46, %42
  %47 = phi i64 [ 0, %42 ], [ %53, %46 ]
  %48 = shl i64 %47, 3
  %49 = getelementptr i8, ptr %36, i64 %48
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %49, align 8, !tbaa !8
  %50 = getelementptr double, ptr %49, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %50, align 8, !tbaa !8
  %51 = getelementptr double, ptr %49, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %51, align 8, !tbaa !8
  %52 = getelementptr double, ptr %49, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %52, align 8, !tbaa !8
  %53 = add nuw i64 %47, 16
  %54 = icmp eq i64 %53, %43
  br i1 %54, label %55, label %46, !llvm.loop !146

55:                                               ; preds = %46
  %56 = icmp eq i64 %40, %43
  br i1 %56, label %63, label %57

57:                                               ; preds = %33, %55
  %58 = phi ptr [ %36, %33 ], [ %45, %55 ]
  br label %59

59:                                               ; preds = %57, %59
  %60 = phi ptr [ %61, %59 ], [ %58, %57 ]
  store double 1.000000e+00, ptr %60, align 8, !tbaa !8
  %61 = getelementptr inbounds double, ptr %60, i64 1
  %62 = icmp eq ptr %61, %37
  br i1 %62, label %63, label %59, !llvm.loop !149

63:                                               ; preds = %59, %55
  %64 = add nuw nsw i64 %34, 2305843009213693951
  %65 = and i64 %64, 2305843009213693951
  %66 = add nuw nsw i64 %65, 1
  %67 = icmp ult i64 %65, 15
  br i1 %67, label %83, label %68

68:                                               ; preds = %63
  %69 = and i64 %66, 4611686018427387888
  %70 = shl i64 %69, 3
  %71 = getelementptr i8, ptr %36, i64 %70
  br label %72

72:                                               ; preds = %72, %68
  %73 = phi i64 [ 0, %68 ], [ %79, %72 ]
  %74 = shl i64 %73, 3
  %75 = getelementptr i8, ptr %36, i64 %74
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %75, align 8, !tbaa !8
  %76 = getelementptr double, ptr %75, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %76, align 8, !tbaa !8
  %77 = getelementptr double, ptr %75, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %77, align 8, !tbaa !8
  %78 = getelementptr double, ptr %75, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %78, align 8, !tbaa !8
  %79 = add nuw i64 %73, 16
  %80 = icmp eq i64 %79, %69
  br i1 %80, label %81, label %72, !llvm.loop !150

81:                                               ; preds = %72
  %82 = icmp eq i64 %66, %69
  br i1 %82, label %89, label %83

83:                                               ; preds = %63, %81
  %84 = phi ptr [ %36, %63 ], [ %71, %81 ]
  br label %85

85:                                               ; preds = %83, %85
  %86 = phi ptr [ %87, %85 ], [ %84, %83 ]
  store double 1.000000e+00, ptr %86, align 8, !tbaa !8
  %87 = getelementptr inbounds double, ptr %86, i64 1
  %88 = icmp eq ptr %87, %37
  br i1 %88, label %89, label %85, !llvm.loop !151

89:                                               ; preds = %85, %81, %8
  %90 = phi ptr [ null, %8 ], [ %36, %81 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 1
  %92 = load i32, ptr %91, align 8, !tbaa !61
  %93 = icmp eq i32 %92, 256
  %94 = load i32, ptr %7, align 4
  %95 = icmp eq i32 %94, 1
  %96 = select i1 %93, i1 %95, i1 false
  br i1 %96, label %97, label %98

97:                                               ; preds = %89
  store i32 0, ptr %7, align 4, !tbaa !152
  br label %98

98:                                               ; preds = %97, %89
  %99 = phi i32 [ 0, %97 ], [ %94, %89 ]
  br i1 %32, label %168, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %6, i64 0, i32 14
  %102 = and i32 %29, 1
  %103 = icmp eq i32 %102, 0
  %104 = and i64 %21, 4294967295
  %105 = icmp eq i64 %104, 0
  %106 = mul nuw nsw i64 %104, 24
  %107 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %10, i64 0, i32 2
  %108 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %10, i64 0, i32 1
  %109 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %5, i64 0, i32 1
  %110 = and i64 %20, 34359738360
  %111 = icmp eq i64 %110, 0
  %112 = getelementptr inbounds %"class.dealii::TableBase", ptr %6, i64 0, i32 1
  %113 = getelementptr inbounds %"class.dealii::TableBase", ptr %6, i64 0, i32 3, i32 0, i32 0, i64 1
  %114 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %9, i64 0, i32 2
  %115 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %9, i64 0, i32 1
  %116 = and i32 %29, 2
  %117 = icmp eq i32 %116, 0
  %118 = mul nuw nsw i64 %104, 72
  %119 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %11, i64 0, i32 2
  %120 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %11, i64 0, i32 1
  %121 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %5, i64 0, i32 2
  %122 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %6, i64 0, i32 1
  %123 = and i64 %21, 4294967295
  %124 = and i64 %21, 4294967295
  %125 = and i64 %21, 4294967295
  %126 = and i64 %21, 4294967295
  %127 = and i64 %21, 4294967295
  %128 = and i64 %21, 4294967295
  %129 = and i64 %21, 4294967295
  %130 = add nsw i64 %123, -1
  %131 = mul nuw nsw i64 %123, 24
  %132 = add nsw i64 %131, -16
  %133 = add nsw i64 %131, -8
  %134 = add nsw i64 %123, -1
  %135 = mul nuw nsw i64 %123, 24
  %136 = add nsw i64 %135, -16
  %137 = add nsw i64 %135, -8
  %138 = add nsw i64 %123, -1
  %139 = mul nuw nsw i64 %123, 24
  %140 = add nsw i64 %139, -16
  %141 = add nsw i64 %139, -8
  %142 = icmp ult i64 %123, 40
  %143 = trunc i64 %138 to i32
  %144 = trunc i64 %138 to i32
  %145 = icmp ugt i64 %138, 4294967295
  %146 = trunc i64 %138 to i32
  %147 = and i64 %21, 3
  %148 = sub nsw i64 %123, %147
  %149 = icmp eq i64 %147, 0
  %150 = icmp ult i64 %123, 60
  %151 = trunc i64 %134 to i32
  %152 = trunc i64 %134 to i32
  %153 = icmp ugt i64 %134, 4294967295
  %154 = trunc i64 %134 to i32
  %155 = and i64 %21, 3
  %156 = sub nsw i64 %123, %155
  %157 = icmp eq i64 %155, 0
  %158 = icmp ult i64 %123, 60
  %159 = trunc i64 %130 to i32
  %160 = trunc i64 %130 to i32
  %161 = icmp ugt i64 %130, 4294967295
  %162 = trunc i64 %130 to i32
  %163 = and i64 %21, 3
  %164 = sub nsw i64 %123, %163
  %165 = icmp eq i64 %163, 0
  br label %174

166:                                              ; preds = %1100
  %167 = load i32, ptr %7, align 4
  br label %168

168:                                              ; preds = %166, %98
  %169 = phi i32 [ %167, %166 ], [ %99, %98 ]
  %170 = and i32 %29, 4
  %171 = icmp eq i32 %170, 0
  %172 = icmp eq i32 %169, 1
  %173 = select i1 %171, i1 true, i1 %172
  br i1 %173, label %1114, label %1105

174:                                              ; preds = %100, %1100
  %175 = phi i64 [ 0, %100 ], [ %1101, %1100 ]
  %176 = shl nuw nsw i64 %175, 3
  %177 = getelementptr i8, ptr %90, i64 %176
  %178 = add nuw i64 %176, 8
  %179 = getelementptr i8, ptr %90, i64 %178
  %180 = load ptr, ptr %101, align 8, !tbaa !154
  %181 = getelementptr inbounds i32, ptr %180, i64 %175
  %182 = load i32, ptr %181, align 4, !tbaa !34
  %183 = load i32, ptr %7, align 4
  %184 = icmp eq i32 %183, 1
  %185 = select i1 %103, i1 true, i1 %184
  br i1 %185, label %793, label %186

186:                                              ; preds = %174
  %187 = load i32, ptr %91, align 8, !tbaa !61
  switch i32 %187, label %793 [
    i32 0, label %188
    i32 1, label %353
    i32 2, label %353
    i32 256, label %557
  ]

188:                                              ; preds = %186
  br i1 %111, label %793, label %189

189:                                              ; preds = %188
  %190 = load ptr, ptr %109, align 8, !tbaa !130
  %191 = getelementptr inbounds %"class.std::vector.67", ptr %190, i64 %175
  %192 = load ptr, ptr %191, align 8, !tbaa !25
  %193 = load ptr, ptr %112, align 8, !tbaa !35
  %194 = load i32, ptr %113, align 8, !tbaa !34
  %195 = mul i32 %194, %182
  %196 = add i32 %182, 1
  %197 = mul i32 %194, %196
  %198 = add i32 %182, 2
  %199 = mul i32 %194, %198
  br i1 %158, label %331, label %200

200:                                              ; preds = %189
  %201 = xor i32 %195, -1
  %202 = icmp ult i32 %201, %159
  %203 = xor i32 %197, -1
  %204 = icmp ult i32 %203, %160
  %205 = or i1 %204, %161
  %206 = xor i32 %199, -1
  %207 = icmp ult i32 %206, %162
  %208 = or i1 %202, %205
  %209 = or i1 %207, %208
  br i1 %209, label %331, label %210

210:                                              ; preds = %200
  %211 = zext i32 %195 to i64
  %212 = shl nuw nsw i64 %211, 3
  %213 = getelementptr i8, ptr %193, i64 %212
  %214 = getelementptr i8, ptr %193, i64 %110
  %215 = getelementptr i8, ptr %214, i64 %212
  %216 = zext i32 %197 to i64
  %217 = shl nuw nsw i64 %216, 3
  %218 = getelementptr i8, ptr %193, i64 %217
  %219 = getelementptr i8, ptr %214, i64 %217
  %220 = zext i32 %199 to i64
  %221 = shl nuw nsw i64 %220, 3
  %222 = getelementptr i8, ptr %193, i64 %221
  %223 = getelementptr i8, ptr %193, i64 %110
  %224 = getelementptr i8, ptr %223, i64 %221
  %225 = getelementptr i8, ptr %192, i64 %132
  %226 = getelementptr i8, ptr %192, i64 8
  %227 = getelementptr i8, ptr %192, i64 %133
  %228 = getelementptr i8, ptr %192, i64 16
  %229 = getelementptr i8, ptr %192, i64 %131
  %230 = icmp ult ptr %213, %219
  %231 = icmp ult ptr %218, %215
  %232 = and i1 %230, %231
  %233 = icmp ult ptr %213, %224
  %234 = icmp ult ptr %222, %215
  %235 = and i1 %233, %234
  %236 = or i1 %232, %235
  %237 = icmp ult ptr %213, %225
  %238 = icmp ult ptr %192, %215
  %239 = and i1 %237, %238
  %240 = or i1 %236, %239
  %241 = icmp ult ptr %213, %227
  %242 = icmp ult ptr %226, %215
  %243 = and i1 %241, %242
  %244 = or i1 %240, %243
  %245 = icmp ult ptr %213, %229
  %246 = icmp ult ptr %228, %215
  %247 = and i1 %245, %246
  %248 = or i1 %244, %247
  %249 = icmp ult ptr %218, %224
  %250 = icmp ult ptr %222, %219
  %251 = and i1 %249, %250
  %252 = or i1 %248, %251
  %253 = icmp ult ptr %218, %225
  %254 = icmp ult ptr %192, %219
  %255 = and i1 %253, %254
  %256 = or i1 %252, %255
  %257 = icmp ult ptr %218, %227
  %258 = icmp ult ptr %226, %219
  %259 = and i1 %257, %258
  %260 = or i1 %256, %259
  %261 = icmp ult ptr %218, %229
  %262 = icmp ult ptr %228, %219
  %263 = and i1 %261, %262
  %264 = or i1 %260, %263
  %265 = icmp ult ptr %222, %225
  %266 = icmp ult ptr %192, %224
  %267 = and i1 %265, %266
  %268 = or i1 %264, %267
  %269 = icmp ult ptr %222, %227
  %270 = icmp ult ptr %226, %224
  %271 = and i1 %269, %270
  %272 = or i1 %268, %271
  %273 = icmp ult ptr %222, %229
  %274 = icmp ult ptr %228, %224
  %275 = and i1 %273, %274
  %276 = or i1 %272, %275
  br i1 %276, label %331, label %277

277:                                              ; preds = %210, %277
  %278 = phi i64 [ %328, %277 ], [ 0, %210 ]
  %279 = trunc i64 %278 to i32
  %280 = or i64 %278, 1
  %281 = or i64 %278, 2
  %282 = or i64 %278, 3
  %283 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %278
  %284 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %280
  %285 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %281
  %286 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %282
  %287 = load double, ptr %283, align 8, !tbaa !8, !alias.scope !155
  %288 = load double, ptr %284, align 8, !tbaa !8, !alias.scope !155
  %289 = load double, ptr %285, align 8, !tbaa !8, !alias.scope !155
  %290 = load double, ptr %286, align 8, !tbaa !8, !alias.scope !155
  %291 = insertelement <4 x double> poison, double %287, i64 0
  %292 = insertelement <4 x double> %291, double %288, i64 1
  %293 = insertelement <4 x double> %292, double %289, i64 2
  %294 = insertelement <4 x double> %293, double %290, i64 3
  %295 = add i32 %195, %279
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds double, ptr %193, i64 %296
  store <4 x double> %294, ptr %297, align 8, !tbaa !8, !alias.scope !158, !noalias !160
  %298 = getelementptr inbounds [3 x double], ptr %283, i64 0, i64 1
  %299 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 1
  %300 = getelementptr inbounds [3 x double], ptr %285, i64 0, i64 1
  %301 = getelementptr inbounds [3 x double], ptr %286, i64 0, i64 1
  %302 = load double, ptr %298, align 8, !tbaa !8, !alias.scope !165
  %303 = load double, ptr %299, align 8, !tbaa !8, !alias.scope !165
  %304 = load double, ptr %300, align 8, !tbaa !8, !alias.scope !165
  %305 = load double, ptr %301, align 8, !tbaa !8, !alias.scope !165
  %306 = insertelement <4 x double> poison, double %302, i64 0
  %307 = insertelement <4 x double> %306, double %303, i64 1
  %308 = insertelement <4 x double> %307, double %304, i64 2
  %309 = insertelement <4 x double> %308, double %305, i64 3
  %310 = add i32 %197, %279
  %311 = zext i32 %310 to i64
  %312 = getelementptr inbounds double, ptr %193, i64 %311
  store <4 x double> %309, ptr %312, align 8, !tbaa !8, !alias.scope !166, !noalias !167
  %313 = getelementptr inbounds [3 x double], ptr %283, i64 0, i64 2
  %314 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 2
  %315 = getelementptr inbounds [3 x double], ptr %285, i64 0, i64 2
  %316 = getelementptr inbounds [3 x double], ptr %286, i64 0, i64 2
  %317 = load double, ptr %313, align 8, !tbaa !8, !alias.scope !168
  %318 = load double, ptr %314, align 8, !tbaa !8, !alias.scope !168
  %319 = load double, ptr %315, align 8, !tbaa !8, !alias.scope !168
  %320 = load double, ptr %316, align 8, !tbaa !8, !alias.scope !168
  %321 = insertelement <4 x double> poison, double %317, i64 0
  %322 = insertelement <4 x double> %321, double %318, i64 1
  %323 = insertelement <4 x double> %322, double %319, i64 2
  %324 = insertelement <4 x double> %323, double %320, i64 3
  %325 = add i32 %199, %279
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds double, ptr %193, i64 %326
  store <4 x double> %324, ptr %327, align 8, !tbaa !8, !alias.scope !169, !noalias !170
  %328 = add nuw i64 %278, 4
  %329 = icmp eq i64 %328, %164
  br i1 %329, label %330, label %277, !llvm.loop !171

330:                                              ; preds = %277
  br i1 %165, label %793, label %331

331:                                              ; preds = %210, %200, %189, %330
  %332 = phi i64 [ 0, %210 ], [ 0, %200 ], [ 0, %189 ], [ %164, %330 ]
  br label %333

333:                                              ; preds = %331, %333
  %334 = phi i64 [ %351, %333 ], [ %332, %331 ]
  %335 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %334
  %336 = load double, ptr %335, align 8, !tbaa !8
  %337 = trunc i64 %334 to i32
  %338 = add i32 %195, %337
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds double, ptr %193, i64 %339
  store double %336, ptr %340, align 8, !tbaa !8
  %341 = getelementptr inbounds [3 x double], ptr %335, i64 0, i64 1
  %342 = load double, ptr %341, align 8, !tbaa !8
  %343 = add i32 %197, %337
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds double, ptr %193, i64 %344
  store double %342, ptr %345, align 8, !tbaa !8
  %346 = getelementptr inbounds [3 x double], ptr %335, i64 0, i64 2
  %347 = load double, ptr %346, align 8, !tbaa !8
  %348 = add i32 %199, %337
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds double, ptr %193, i64 %349
  store double %347, ptr %350, align 8, !tbaa !8
  %351 = add nuw nsw i64 %334, 1
  %352 = icmp eq i64 %351, %125
  br i1 %352, label %793, label %333, !llvm.loop !172

353:                                              ; preds = %186, %186
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #15
  br i1 %105, label %354, label %355

354:                                              ; preds = %353
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)
  br label %360

355:                                              ; preds = %353
  %356 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %106) #16
          to label %357 unwind label %547

357:                                              ; preds = %355
  store ptr %356, ptr %9, align 8, !tbaa !25
  %358 = getelementptr inbounds %"class.dealii::Tensor", ptr %356, i64 %104
  store ptr %358, ptr %114, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %356, i8 0, i64 %106, i1 false), !tbaa !8
  %359 = getelementptr i8, ptr %356, i64 %106
  br label %360

360:                                              ; preds = %357, %354
  %361 = phi ptr [ null, %354 ], [ %356, %357 ]
  %362 = phi ptr [ null, %354 ], [ %359, %357 ]
  store ptr %362, ptr %115, align 8, !tbaa !23
  %363 = load ptr, ptr %109, align 8, !tbaa !130
  %364 = getelementptr inbounds %"class.std::vector.67", ptr %363, i64 %175
  %365 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %364, i64 0, i32 1
  %366 = load ptr, ptr %365, align 8, !tbaa !23
  %367 = load ptr, ptr %364, align 8, !tbaa !25
  %368 = ptrtoint ptr %366 to i64
  %369 = ptrtoint ptr %367 to i64
  %370 = sub i64 %368, %369
  %371 = sdiv exact i64 %370, 24
  %372 = ptrtoint ptr %362 to i64
  %373 = ptrtoint ptr %361 to i64
  %374 = sub i64 %372, %373
  %375 = sdiv exact i64 %374, 24
  %376 = shl i64 %371, 32
  %377 = shl i64 %375, 32
  %378 = load ptr, ptr %1, align 8, !tbaa !5
  %379 = getelementptr inbounds ptr, ptr %378, i64 4
  %380 = load ptr, ptr %379, align 8
  invoke void %380(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %364, i64 %376, ptr nonnull %9, i64 %377, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef %187)
          to label %381 unwind label %549

381:                                              ; preds = %360
  %382 = load ptr, ptr %9, align 8, !tbaa !25
  br i1 %111, label %544, label %383

383:                                              ; preds = %381
  %384 = load ptr, ptr %112, align 8, !tbaa !35
  %385 = load i32, ptr %113, align 8, !tbaa !34
  %386 = mul i32 %385, %182
  %387 = add i32 %182, 1
  %388 = mul i32 %385, %387
  %389 = add i32 %182, 2
  %390 = mul i32 %385, %389
  br i1 %150, label %522, label %391

391:                                              ; preds = %383
  %392 = xor i32 %386, -1
  %393 = icmp ult i32 %392, %151
  %394 = xor i32 %388, -1
  %395 = icmp ult i32 %394, %152
  %396 = or i1 %395, %153
  %397 = xor i32 %390, -1
  %398 = icmp ult i32 %397, %154
  %399 = or i1 %393, %396
  %400 = or i1 %398, %399
  br i1 %400, label %522, label %401

401:                                              ; preds = %391
  %402 = zext i32 %386 to i64
  %403 = shl nuw nsw i64 %402, 3
  %404 = getelementptr i8, ptr %384, i64 %403
  %405 = getelementptr i8, ptr %384, i64 %110
  %406 = getelementptr i8, ptr %405, i64 %403
  %407 = zext i32 %388 to i64
  %408 = shl nuw nsw i64 %407, 3
  %409 = getelementptr i8, ptr %384, i64 %408
  %410 = getelementptr i8, ptr %405, i64 %408
  %411 = zext i32 %390 to i64
  %412 = shl nuw nsw i64 %411, 3
  %413 = getelementptr i8, ptr %384, i64 %412
  %414 = getelementptr i8, ptr %384, i64 %110
  %415 = getelementptr i8, ptr %414, i64 %412
  %416 = getelementptr i8, ptr %382, i64 %136
  %417 = getelementptr i8, ptr %382, i64 8
  %418 = getelementptr i8, ptr %382, i64 %137
  %419 = getelementptr i8, ptr %382, i64 16
  %420 = getelementptr i8, ptr %382, i64 %135
  %421 = icmp ult ptr %404, %410
  %422 = icmp ult ptr %409, %406
  %423 = and i1 %421, %422
  %424 = icmp ult ptr %404, %415
  %425 = icmp ult ptr %413, %406
  %426 = and i1 %424, %425
  %427 = or i1 %423, %426
  %428 = icmp ult ptr %404, %416
  %429 = icmp ult ptr %382, %406
  %430 = and i1 %428, %429
  %431 = or i1 %427, %430
  %432 = icmp ult ptr %404, %418
  %433 = icmp ult ptr %417, %406
  %434 = and i1 %432, %433
  %435 = or i1 %431, %434
  %436 = icmp ult ptr %404, %420
  %437 = icmp ult ptr %419, %406
  %438 = and i1 %436, %437
  %439 = or i1 %435, %438
  %440 = icmp ult ptr %409, %415
  %441 = icmp ult ptr %413, %410
  %442 = and i1 %440, %441
  %443 = or i1 %439, %442
  %444 = icmp ult ptr %409, %416
  %445 = icmp ult ptr %382, %410
  %446 = and i1 %444, %445
  %447 = or i1 %443, %446
  %448 = icmp ult ptr %409, %418
  %449 = icmp ult ptr %417, %410
  %450 = and i1 %448, %449
  %451 = or i1 %447, %450
  %452 = icmp ult ptr %409, %420
  %453 = icmp ult ptr %419, %410
  %454 = and i1 %452, %453
  %455 = or i1 %451, %454
  %456 = icmp ult ptr %413, %416
  %457 = icmp ult ptr %382, %415
  %458 = and i1 %456, %457
  %459 = or i1 %455, %458
  %460 = icmp ult ptr %413, %418
  %461 = icmp ult ptr %417, %415
  %462 = and i1 %460, %461
  %463 = or i1 %459, %462
  %464 = icmp ult ptr %413, %420
  %465 = icmp ult ptr %419, %415
  %466 = and i1 %464, %465
  %467 = or i1 %463, %466
  br i1 %467, label %522, label %468

468:                                              ; preds = %401, %468
  %469 = phi i64 [ %519, %468 ], [ 0, %401 ]
  %470 = trunc i64 %469 to i32
  %471 = or i64 %469, 1
  %472 = or i64 %469, 2
  %473 = or i64 %469, 3
  %474 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %469
  %475 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %471
  %476 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %472
  %477 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %473
  %478 = load double, ptr %474, align 8, !tbaa !8, !alias.scope !174
  %479 = load double, ptr %475, align 8, !tbaa !8, !alias.scope !174
  %480 = load double, ptr %476, align 8, !tbaa !8, !alias.scope !174
  %481 = load double, ptr %477, align 8, !tbaa !8, !alias.scope !174
  %482 = insertelement <4 x double> poison, double %478, i64 0
  %483 = insertelement <4 x double> %482, double %479, i64 1
  %484 = insertelement <4 x double> %483, double %480, i64 2
  %485 = insertelement <4 x double> %484, double %481, i64 3
  %486 = add i32 %386, %470
  %487 = zext i32 %486 to i64
  %488 = getelementptr inbounds double, ptr %384, i64 %487
  store <4 x double> %485, ptr %488, align 8, !tbaa !8, !alias.scope !177, !noalias !179
  %489 = getelementptr inbounds [3 x double], ptr %474, i64 0, i64 1
  %490 = getelementptr inbounds [3 x double], ptr %475, i64 0, i64 1
  %491 = getelementptr inbounds [3 x double], ptr %476, i64 0, i64 1
  %492 = getelementptr inbounds [3 x double], ptr %477, i64 0, i64 1
  %493 = load double, ptr %489, align 8, !tbaa !8, !alias.scope !184
  %494 = load double, ptr %490, align 8, !tbaa !8, !alias.scope !184
  %495 = load double, ptr %491, align 8, !tbaa !8, !alias.scope !184
  %496 = load double, ptr %492, align 8, !tbaa !8, !alias.scope !184
  %497 = insertelement <4 x double> poison, double %493, i64 0
  %498 = insertelement <4 x double> %497, double %494, i64 1
  %499 = insertelement <4 x double> %498, double %495, i64 2
  %500 = insertelement <4 x double> %499, double %496, i64 3
  %501 = add i32 %388, %470
  %502 = zext i32 %501 to i64
  %503 = getelementptr inbounds double, ptr %384, i64 %502
  store <4 x double> %500, ptr %503, align 8, !tbaa !8, !alias.scope !185, !noalias !186
  %504 = getelementptr inbounds [3 x double], ptr %474, i64 0, i64 2
  %505 = getelementptr inbounds [3 x double], ptr %475, i64 0, i64 2
  %506 = getelementptr inbounds [3 x double], ptr %476, i64 0, i64 2
  %507 = getelementptr inbounds [3 x double], ptr %477, i64 0, i64 2
  %508 = load double, ptr %504, align 8, !tbaa !8, !alias.scope !187
  %509 = load double, ptr %505, align 8, !tbaa !8, !alias.scope !187
  %510 = load double, ptr %506, align 8, !tbaa !8, !alias.scope !187
  %511 = load double, ptr %507, align 8, !tbaa !8, !alias.scope !187
  %512 = insertelement <4 x double> poison, double %508, i64 0
  %513 = insertelement <4 x double> %512, double %509, i64 1
  %514 = insertelement <4 x double> %513, double %510, i64 2
  %515 = insertelement <4 x double> %514, double %511, i64 3
  %516 = add i32 %390, %470
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds double, ptr %384, i64 %517
  store <4 x double> %515, ptr %518, align 8, !tbaa !8, !alias.scope !188, !noalias !189
  %519 = add nuw i64 %469, 4
  %520 = icmp eq i64 %519, %156
  br i1 %520, label %521, label %468, !llvm.loop !190

521:                                              ; preds = %468
  br i1 %157, label %546, label %522

522:                                              ; preds = %401, %391, %383, %521
  %523 = phi i64 [ 0, %401 ], [ 0, %391 ], [ 0, %383 ], [ %156, %521 ]
  br label %524

524:                                              ; preds = %522, %524
  %525 = phi i64 [ %542, %524 ], [ %523, %522 ]
  %526 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %525
  %527 = load double, ptr %526, align 8, !tbaa !8
  %528 = trunc i64 %525 to i32
  %529 = add i32 %386, %528
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds double, ptr %384, i64 %530
  store double %527, ptr %531, align 8, !tbaa !8
  %532 = getelementptr inbounds [3 x double], ptr %526, i64 0, i64 1
  %533 = load double, ptr %532, align 8, !tbaa !8
  %534 = add i32 %388, %528
  %535 = zext i32 %534 to i64
  %536 = getelementptr inbounds double, ptr %384, i64 %535
  store double %533, ptr %536, align 8, !tbaa !8
  %537 = getelementptr inbounds [3 x double], ptr %526, i64 0, i64 2
  %538 = load double, ptr %537, align 8, !tbaa !8
  %539 = add i32 %390, %528
  %540 = zext i32 %539 to i64
  %541 = getelementptr inbounds double, ptr %384, i64 %540
  store double %538, ptr %541, align 8, !tbaa !8
  %542 = add nuw nsw i64 %525, 1
  %543 = icmp eq i64 %542, %124
  br i1 %543, label %546, label %524, !llvm.loop !191

544:                                              ; preds = %381
  %545 = icmp eq ptr %382, null
  br i1 %545, label %554, label %546

546:                                              ; preds = %524, %521, %544
  call void @_ZdlPv(ptr noundef nonnull %382) #17
  br label %554

547:                                              ; preds = %355
  %548 = landingpad { ptr, i32 }
          cleanup
  br label %555

549:                                              ; preds = %360
  %550 = landingpad { ptr, i32 }
          cleanup
  %551 = load ptr, ptr %9, align 8, !tbaa !25
  %552 = icmp eq ptr %551, null
  br i1 %552, label %555, label %553

553:                                              ; preds = %549
  call void @_ZdlPv(ptr noundef nonnull %551) #17
  br label %555

554:                                              ; preds = %546, %544
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #15
  br label %793

555:                                              ; preds = %553, %549, %547
  %556 = phi { ptr, i32 } [ %548, %547 ], [ %550, %549 ], [ %550, %553 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #15
  br label %1118

557:                                              ; preds = %186
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #15
  br i1 %105, label %558, label %559

558:                                              ; preds = %557
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false)
  br label %564

559:                                              ; preds = %557
  %560 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %106) #16
          to label %561 unwind label %783

561:                                              ; preds = %559
  store ptr %560, ptr %10, align 8, !tbaa !25
  %562 = getelementptr inbounds %"class.dealii::Tensor", ptr %560, i64 %104
  store ptr %562, ptr %107, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %560, i8 0, i64 %106, i1 false), !tbaa !8
  %563 = getelementptr i8, ptr %560, i64 %106
  br label %564

564:                                              ; preds = %561, %558
  %565 = phi ptr [ null, %558 ], [ %560, %561 ]
  %566 = phi ptr [ null, %558 ], [ %563, %561 ]
  store ptr %566, ptr %108, align 8, !tbaa !23
  %567 = load ptr, ptr %109, align 8, !tbaa !130
  %568 = getelementptr inbounds %"class.std::vector.67", ptr %567, i64 %175
  %569 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %568, i64 0, i32 1
  %570 = load ptr, ptr %569, align 8, !tbaa !23
  %571 = load ptr, ptr %568, align 8, !tbaa !25
  %572 = ptrtoint ptr %570 to i64
  %573 = ptrtoint ptr %571 to i64
  %574 = sub i64 %572, %573
  %575 = sdiv exact i64 %574, 24
  %576 = ptrtoint ptr %566 to i64
  %577 = ptrtoint ptr %565 to i64
  %578 = sub i64 %576, %577
  %579 = sdiv exact i64 %578, 24
  %580 = shl i64 %575, 32
  %581 = shl i64 %579, 32
  %582 = load ptr, ptr %1, align 8, !tbaa !5
  %583 = getelementptr inbounds ptr, ptr %582, i64 4
  %584 = load ptr, ptr %583, align 8
  invoke void %584(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %568, i64 %580, ptr nonnull %10, i64 %581, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 256)
          to label %585 unwind label %785

585:                                              ; preds = %564
  %586 = load ptr, ptr %10, align 8, !tbaa !25
  br i1 %111, label %780, label %587

587:                                              ; preds = %585
  %588 = getelementptr inbounds double, ptr %90, i64 %175
  %589 = load ptr, ptr %112, align 8, !tbaa !35
  %590 = load i32, ptr %113, align 8, !tbaa !34
  %591 = mul i32 %590, %182
  %592 = add i32 %182, 1
  %593 = mul i32 %590, %592
  %594 = add i32 %182, 2
  %595 = mul i32 %590, %594
  br i1 %142, label %752, label %596

596:                                              ; preds = %587
  %597 = xor i32 %591, -1
  %598 = icmp ult i32 %597, %143
  %599 = xor i32 %593, -1
  %600 = icmp ult i32 %599, %144
  %601 = or i1 %600, %145
  %602 = xor i32 %595, -1
  %603 = icmp ult i32 %602, %146
  %604 = or i1 %598, %601
  %605 = or i1 %603, %604
  br i1 %605, label %752, label %606

606:                                              ; preds = %596
  %607 = zext i32 %591 to i64
  %608 = shl nuw nsw i64 %607, 3
  %609 = getelementptr i8, ptr %589, i64 %608
  %610 = getelementptr i8, ptr %589, i64 %110
  %611 = getelementptr i8, ptr %610, i64 %608
  %612 = zext i32 %593 to i64
  %613 = shl nuw nsw i64 %612, 3
  %614 = getelementptr i8, ptr %589, i64 %613
  %615 = getelementptr i8, ptr %610, i64 %613
  %616 = zext i32 %595 to i64
  %617 = shl nuw nsw i64 %616, 3
  %618 = getelementptr i8, ptr %589, i64 %617
  %619 = getelementptr i8, ptr %589, i64 %110
  %620 = getelementptr i8, ptr %619, i64 %617
  %621 = getelementptr i8, ptr %586, i64 %140
  %622 = getelementptr i8, ptr %586, i64 8
  %623 = getelementptr i8, ptr %586, i64 %141
  %624 = getelementptr i8, ptr %586, i64 16
  %625 = getelementptr i8, ptr %586, i64 %139
  %626 = icmp ult ptr %609, %615
  %627 = icmp ult ptr %614, %611
  %628 = and i1 %626, %627
  %629 = icmp ult ptr %609, %620
  %630 = icmp ult ptr %618, %611
  %631 = and i1 %629, %630
  %632 = or i1 %628, %631
  %633 = icmp ult ptr %609, %179
  %634 = icmp ult ptr %177, %611
  %635 = and i1 %633, %634
  %636 = or i1 %632, %635
  %637 = icmp ult ptr %609, %621
  %638 = icmp ult ptr %586, %611
  %639 = and i1 %637, %638
  %640 = or i1 %636, %639
  %641 = icmp ult ptr %609, %623
  %642 = icmp ult ptr %622, %611
  %643 = and i1 %641, %642
  %644 = or i1 %640, %643
  %645 = icmp ult ptr %609, %625
  %646 = icmp ult ptr %624, %611
  %647 = and i1 %645, %646
  %648 = or i1 %644, %647
  %649 = icmp ult ptr %614, %620
  %650 = icmp ult ptr %618, %615
  %651 = and i1 %649, %650
  %652 = or i1 %648, %651
  %653 = icmp ult ptr %614, %179
  %654 = icmp ult ptr %177, %615
  %655 = and i1 %653, %654
  %656 = or i1 %652, %655
  %657 = icmp ult ptr %614, %621
  %658 = icmp ult ptr %586, %615
  %659 = and i1 %657, %658
  %660 = or i1 %656, %659
  %661 = icmp ult ptr %614, %623
  %662 = icmp ult ptr %622, %615
  %663 = and i1 %661, %662
  %664 = or i1 %660, %663
  %665 = icmp ult ptr %614, %625
  %666 = icmp ult ptr %624, %615
  %667 = and i1 %665, %666
  %668 = or i1 %664, %667
  %669 = icmp ult ptr %618, %179
  %670 = icmp ult ptr %177, %620
  %671 = and i1 %669, %670
  %672 = or i1 %668, %671
  %673 = icmp ult ptr %618, %621
  %674 = icmp ult ptr %586, %620
  %675 = and i1 %673, %674
  %676 = or i1 %672, %675
  %677 = icmp ult ptr %618, %623
  %678 = icmp ult ptr %622, %620
  %679 = and i1 %677, %678
  %680 = or i1 %676, %679
  %681 = icmp ult ptr %618, %625
  %682 = icmp ult ptr %624, %620
  %683 = and i1 %681, %682
  %684 = or i1 %680, %683
  br i1 %684, label %752, label %685

685:                                              ; preds = %606
  %686 = load double, ptr %588, align 8, !tbaa !8, !alias.scope !192
  %687 = insertelement <4 x double> poison, double %686, i64 0
  %688 = shufflevector <4 x double> %687, <4 x double> poison, <4 x i32> zeroinitializer
  %689 = load double, ptr %588, align 8, !tbaa !8, !alias.scope !192
  %690 = insertelement <4 x double> poison, double %689, i64 0
  %691 = shufflevector <4 x double> %690, <4 x double> poison, <4 x i32> zeroinitializer
  %692 = load double, ptr %588, align 8, !tbaa !8, !alias.scope !192
  %693 = insertelement <4 x double> poison, double %692, i64 0
  %694 = shufflevector <4 x double> %693, <4 x double> poison, <4 x i32> zeroinitializer
  br label %695

695:                                              ; preds = %695, %685
  %696 = phi i64 [ 0, %685 ], [ %749, %695 ]
  %697 = trunc i64 %696 to i32
  %698 = or i64 %696, 1
  %699 = or i64 %696, 2
  %700 = or i64 %696, 3
  %701 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %696
  %702 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %698
  %703 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %699
  %704 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %700
  %705 = load double, ptr %701, align 8, !tbaa !8, !alias.scope !195
  %706 = load double, ptr %702, align 8, !tbaa !8, !alias.scope !195
  %707 = load double, ptr %703, align 8, !tbaa !8, !alias.scope !195
  %708 = load double, ptr %704, align 8, !tbaa !8, !alias.scope !195
  %709 = insertelement <4 x double> poison, double %705, i64 0
  %710 = insertelement <4 x double> %709, double %706, i64 1
  %711 = insertelement <4 x double> %710, double %707, i64 2
  %712 = insertelement <4 x double> %711, double %708, i64 3
  %713 = fmul <4 x double> %688, %712
  %714 = add i32 %591, %697
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds double, ptr %589, i64 %715
  store <4 x double> %713, ptr %716, align 8, !tbaa !8, !alias.scope !197, !noalias !199
  %717 = getelementptr inbounds [3 x double], ptr %701, i64 0, i64 1
  %718 = getelementptr inbounds [3 x double], ptr %702, i64 0, i64 1
  %719 = getelementptr inbounds [3 x double], ptr %703, i64 0, i64 1
  %720 = getelementptr inbounds [3 x double], ptr %704, i64 0, i64 1
  %721 = load double, ptr %717, align 8, !tbaa !8, !alias.scope !204
  %722 = load double, ptr %718, align 8, !tbaa !8, !alias.scope !204
  %723 = load double, ptr %719, align 8, !tbaa !8, !alias.scope !204
  %724 = load double, ptr %720, align 8, !tbaa !8, !alias.scope !204
  %725 = insertelement <4 x double> poison, double %721, i64 0
  %726 = insertelement <4 x double> %725, double %722, i64 1
  %727 = insertelement <4 x double> %726, double %723, i64 2
  %728 = insertelement <4 x double> %727, double %724, i64 3
  %729 = fmul <4 x double> %691, %728
  %730 = add i32 %593, %697
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds double, ptr %589, i64 %731
  store <4 x double> %729, ptr %732, align 8, !tbaa !8, !alias.scope !205, !noalias !206
  %733 = getelementptr inbounds [3 x double], ptr %701, i64 0, i64 2
  %734 = getelementptr inbounds [3 x double], ptr %702, i64 0, i64 2
  %735 = getelementptr inbounds [3 x double], ptr %703, i64 0, i64 2
  %736 = getelementptr inbounds [3 x double], ptr %704, i64 0, i64 2
  %737 = load double, ptr %733, align 8, !tbaa !8, !alias.scope !207
  %738 = load double, ptr %734, align 8, !tbaa !8, !alias.scope !207
  %739 = load double, ptr %735, align 8, !tbaa !8, !alias.scope !207
  %740 = load double, ptr %736, align 8, !tbaa !8, !alias.scope !207
  %741 = insertelement <4 x double> poison, double %737, i64 0
  %742 = insertelement <4 x double> %741, double %738, i64 1
  %743 = insertelement <4 x double> %742, double %739, i64 2
  %744 = insertelement <4 x double> %743, double %740, i64 3
  %745 = fmul <4 x double> %694, %744
  %746 = add i32 %595, %697
  %747 = zext i32 %746 to i64
  %748 = getelementptr inbounds double, ptr %589, i64 %747
  store <4 x double> %745, ptr %748, align 8, !tbaa !8, !alias.scope !208, !noalias !209
  %749 = add nuw i64 %696, 4
  %750 = icmp eq i64 %749, %148
  br i1 %750, label %751, label %695, !llvm.loop !210

751:                                              ; preds = %695
  br i1 %149, label %782, label %752

752:                                              ; preds = %606, %596, %587, %751
  %753 = phi i64 [ 0, %606 ], [ 0, %596 ], [ 0, %587 ], [ %148, %751 ]
  br label %754

754:                                              ; preds = %752, %754
  %755 = phi i64 [ %778, %754 ], [ %753, %752 ]
  %756 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %755
  %757 = load double, ptr %588, align 8, !tbaa !8
  %758 = load double, ptr %756, align 8, !tbaa !8
  %759 = fmul double %757, %758
  %760 = trunc i64 %755 to i32
  %761 = add i32 %591, %760
  %762 = zext i32 %761 to i64
  %763 = getelementptr inbounds double, ptr %589, i64 %762
  store double %759, ptr %763, align 8, !tbaa !8
  %764 = load double, ptr %588, align 8, !tbaa !8
  %765 = getelementptr inbounds [3 x double], ptr %756, i64 0, i64 1
  %766 = load double, ptr %765, align 8, !tbaa !8
  %767 = fmul double %764, %766
  %768 = add i32 %593, %760
  %769 = zext i32 %768 to i64
  %770 = getelementptr inbounds double, ptr %589, i64 %769
  store double %767, ptr %770, align 8, !tbaa !8
  %771 = load double, ptr %588, align 8, !tbaa !8
  %772 = getelementptr inbounds [3 x double], ptr %756, i64 0, i64 2
  %773 = load double, ptr %772, align 8, !tbaa !8
  %774 = fmul double %771, %773
  %775 = add i32 %595, %760
  %776 = zext i32 %775 to i64
  %777 = getelementptr inbounds double, ptr %589, i64 %776
  store double %774, ptr %777, align 8, !tbaa !8
  %778 = add nuw nsw i64 %755, 1
  %779 = icmp eq i64 %778, %123
  br i1 %779, label %782, label %754, !llvm.loop !211

780:                                              ; preds = %585
  %781 = icmp eq ptr %586, null
  br i1 %781, label %790, label %782

782:                                              ; preds = %754, %751, %780
  call void @_ZdlPv(ptr noundef nonnull %586) #17
  br label %790

783:                                              ; preds = %559
  %784 = landingpad { ptr, i32 }
          cleanup
  br label %791

785:                                              ; preds = %564
  %786 = landingpad { ptr, i32 }
          cleanup
  %787 = load ptr, ptr %10, align 8, !tbaa !25
  %788 = icmp eq ptr %787, null
  br i1 %788, label %791, label %789

789:                                              ; preds = %785
  call void @_ZdlPv(ptr noundef nonnull %787) #17
  br label %791

790:                                              ; preds = %782, %780
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #15
  br label %793

791:                                              ; preds = %789, %785, %783
  %792 = phi { ptr, i32 } [ %784, %783 ], [ %786, %785 ], [ %786, %789 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #15
  br label %1118

793:                                              ; preds = %333, %330, %188, %554, %790, %186, %174
  %794 = load i32, ptr %7, align 4
  %795 = icmp eq i32 %794, 1
  %796 = select i1 %117, i1 true, i1 %795
  br i1 %796, label %1100, label %797

797:                                              ; preds = %793
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #15
  br i1 %105, label %798, label %799

798:                                              ; preds = %797
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %11, i8 0, i64 24, i1 false)
  br label %806

799:                                              ; preds = %797
  %800 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %118) #16
          to label %801 unwind label %811

801:                                              ; preds = %799
  store ptr %800, ptr %11, align 8, !tbaa !51
  %802 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %800, i64 %104
  store ptr %802, ptr %119, align 8, !tbaa !212
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %800, i8 0, i64 %118, i1 false), !tbaa !8
  %803 = getelementptr i8, ptr %800, i64 %118
  store ptr %803, ptr %120, align 8, !tbaa !49
  %804 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %118) #16
          to label %805 unwind label %813

805:                                              ; preds = %801
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %804, i8 0, i64 %118, i1 false), !tbaa !8
  br label %806

806:                                              ; preds = %805, %798
  %807 = phi ptr [ null, %798 ], [ %800, %805 ]
  %808 = phi ptr [ null, %798 ], [ %803, %805 ]
  %809 = phi ptr [ null, %798 ], [ %804, %805 ]
  %810 = load i32, ptr %91, align 8, !tbaa !61
  switch i32 %810, label %1084 [
    i32 0, label %815
    i32 1, label %883
    i32 2, label %948
    i32 256, label %1012
  ]

811:                                              ; preds = %799
  %812 = landingpad { ptr, i32 }
          cleanup
  br label %1098

813:                                              ; preds = %801
  %814 = landingpad { ptr, i32 }
          cleanup
  br label %1093

815:                                              ; preds = %806
  %816 = load ptr, ptr %121, align 8, !tbaa !133
  %817 = getelementptr inbounds %"class.std::vector.72", ptr %816, i64 %175
  %818 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %817, i64 0, i32 1
  %819 = load ptr, ptr %818, align 8, !tbaa !49
  %820 = load ptr, ptr %817, align 8, !tbaa !51
  %821 = ptrtoint ptr %819 to i64
  %822 = ptrtoint ptr %820 to i64
  %823 = sub i64 %821, %822
  %824 = sdiv exact i64 %823, 72
  %825 = ptrtoint ptr %808 to i64
  %826 = ptrtoint ptr %807 to i64
  %827 = sub i64 %825, %826
  %828 = sdiv exact i64 %827, 72
  %829 = shl i64 %824, 32
  %830 = shl i64 %828, 32
  %831 = load ptr, ptr %1, align 8, !tbaa !5
  %832 = getelementptr inbounds ptr, ptr %831, i64 5
  %833 = load ptr, ptr %832, align 8
  invoke void %833(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %817, i64 %829, ptr nonnull %11, i64 %830, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 1)
          to label %834 unwind label %880

834:                                              ; preds = %815
  br i1 %111, label %1084, label %835

835:                                              ; preds = %834
  %836 = load ptr, ptr %11, align 8, !tbaa !51
  %837 = load ptr, ptr %122, align 8, !tbaa !130
  %838 = zext i32 %182 to i64
  %839 = getelementptr inbounds %"class.std::vector.67", ptr %837, i64 %838
  %840 = load ptr, ptr %839, align 8, !tbaa !25
  %841 = add i32 %182, 1
  %842 = zext i32 %841 to i64
  %843 = getelementptr inbounds %"class.std::vector.67", ptr %837, i64 %842
  %844 = load ptr, ptr %843, align 8, !tbaa !25
  %845 = add i32 %182, 2
  %846 = zext i32 %845 to i64
  %847 = getelementptr inbounds %"class.std::vector.67", ptr %837, i64 %846
  %848 = load ptr, ptr %847, align 8, !tbaa !25
  br label %849

849:                                              ; preds = %835, %849
  %850 = phi i64 [ 0, %835 ], [ %878, %849 ]
  %851 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %836, i64 %850
  %852 = getelementptr inbounds %"class.dealii::Tensor", ptr %840, i64 %850
  %853 = load double, ptr %851, align 8, !tbaa !8
  store double %853, ptr %852, align 8, !tbaa !8
  %854 = getelementptr inbounds [3 x double], ptr %851, i64 0, i64 1
  %855 = load double, ptr %854, align 8, !tbaa !8
  %856 = getelementptr inbounds [3 x double], ptr %852, i64 0, i64 1
  store double %855, ptr %856, align 8, !tbaa !8
  %857 = getelementptr inbounds [3 x double], ptr %851, i64 0, i64 2
  %858 = load double, ptr %857, align 8, !tbaa !8
  %859 = getelementptr inbounds [3 x double], ptr %852, i64 0, i64 2
  store double %858, ptr %859, align 8, !tbaa !8
  %860 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 1
  %861 = getelementptr inbounds %"class.dealii::Tensor", ptr %844, i64 %850
  %862 = load double, ptr %860, align 8, !tbaa !8
  store double %862, ptr %861, align 8, !tbaa !8
  %863 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 1, i32 0, i64 1
  %864 = load double, ptr %863, align 8, !tbaa !8
  %865 = getelementptr inbounds [3 x double], ptr %861, i64 0, i64 1
  store double %864, ptr %865, align 8, !tbaa !8
  %866 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 1, i32 0, i64 2
  %867 = load double, ptr %866, align 8, !tbaa !8
  %868 = getelementptr inbounds [3 x double], ptr %861, i64 0, i64 2
  store double %867, ptr %868, align 8, !tbaa !8
  %869 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 2
  %870 = getelementptr inbounds %"class.dealii::Tensor", ptr %848, i64 %850
  %871 = load double, ptr %869, align 8, !tbaa !8
  store double %871, ptr %870, align 8, !tbaa !8
  %872 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 2, i32 0, i64 1
  %873 = load double, ptr %872, align 8, !tbaa !8
  %874 = getelementptr inbounds [3 x double], ptr %870, i64 0, i64 1
  store double %873, ptr %874, align 8, !tbaa !8
  %875 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 2, i32 0, i64 2
  %876 = load double, ptr %875, align 8, !tbaa !8
  %877 = getelementptr inbounds [3 x double], ptr %870, i64 0, i64 2
  store double %876, ptr %877, align 8, !tbaa !8
  %878 = add nuw nsw i64 %850, 1
  %879 = icmp eq i64 %878, %129
  br i1 %879, label %1084, label %849

880:                                              ; preds = %1012, %948, %883, %815
  %881 = landingpad { ptr, i32 }
          cleanup
  %882 = icmp eq ptr %809, null
  br i1 %882, label %1093, label %1092

883:                                              ; preds = %806
  %884 = load ptr, ptr %121, align 8, !tbaa !133
  %885 = getelementptr inbounds %"class.std::vector.72", ptr %884, i64 %175
  %886 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %885, i64 0, i32 1
  %887 = load ptr, ptr %886, align 8, !tbaa !49
  %888 = load ptr, ptr %885, align 8, !tbaa !51
  %889 = ptrtoint ptr %887 to i64
  %890 = ptrtoint ptr %888 to i64
  %891 = sub i64 %889, %890
  %892 = sdiv exact i64 %891, 72
  %893 = ptrtoint ptr %808 to i64
  %894 = ptrtoint ptr %807 to i64
  %895 = sub i64 %893, %894
  %896 = sdiv exact i64 %895, 72
  %897 = shl i64 %892, 32
  %898 = shl i64 %896, 32
  %899 = load ptr, ptr %1, align 8, !tbaa !5
  %900 = getelementptr inbounds ptr, ptr %899, i64 5
  %901 = load ptr, ptr %900, align 8
  invoke void %901(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %885, i64 %897, ptr nonnull %11, i64 %898, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 3)
          to label %902 unwind label %880

902:                                              ; preds = %883
  br i1 %111, label %1084, label %903

903:                                              ; preds = %902
  %904 = load ptr, ptr %11, align 8, !tbaa !51
  %905 = load ptr, ptr %122, align 8, !tbaa !130
  %906 = zext i32 %182 to i64
  %907 = getelementptr inbounds %"class.std::vector.67", ptr %905, i64 %906
  %908 = load ptr, ptr %907, align 8, !tbaa !25
  %909 = add i32 %182, 1
  %910 = zext i32 %909 to i64
  %911 = getelementptr inbounds %"class.std::vector.67", ptr %905, i64 %910
  %912 = load ptr, ptr %911, align 8, !tbaa !25
  %913 = add i32 %182, 2
  %914 = zext i32 %913 to i64
  %915 = getelementptr inbounds %"class.std::vector.67", ptr %905, i64 %914
  %916 = load ptr, ptr %915, align 8, !tbaa !25
  br label %917

917:                                              ; preds = %903, %917
  %918 = phi i64 [ 0, %903 ], [ %946, %917 ]
  %919 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %904, i64 %918
  %920 = getelementptr inbounds %"class.dealii::Tensor", ptr %908, i64 %918
  %921 = load double, ptr %919, align 8, !tbaa !8
  store double %921, ptr %920, align 8, !tbaa !8
  %922 = getelementptr inbounds [3 x double], ptr %919, i64 0, i64 1
  %923 = load double, ptr %922, align 8, !tbaa !8
  %924 = getelementptr inbounds [3 x double], ptr %920, i64 0, i64 1
  store double %923, ptr %924, align 8, !tbaa !8
  %925 = getelementptr inbounds [3 x double], ptr %919, i64 0, i64 2
  %926 = load double, ptr %925, align 8, !tbaa !8
  %927 = getelementptr inbounds [3 x double], ptr %920, i64 0, i64 2
  store double %926, ptr %927, align 8, !tbaa !8
  %928 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 1
  %929 = getelementptr inbounds %"class.dealii::Tensor", ptr %912, i64 %918
  %930 = load double, ptr %928, align 8, !tbaa !8
  store double %930, ptr %929, align 8, !tbaa !8
  %931 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 1, i32 0, i64 1
  %932 = load double, ptr %931, align 8, !tbaa !8
  %933 = getelementptr inbounds [3 x double], ptr %929, i64 0, i64 1
  store double %932, ptr %933, align 8, !tbaa !8
  %934 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 1, i32 0, i64 2
  %935 = load double, ptr %934, align 8, !tbaa !8
  %936 = getelementptr inbounds [3 x double], ptr %929, i64 0, i64 2
  store double %935, ptr %936, align 8, !tbaa !8
  %937 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 2
  %938 = getelementptr inbounds %"class.dealii::Tensor", ptr %916, i64 %918
  %939 = load double, ptr %937, align 8, !tbaa !8
  store double %939, ptr %938, align 8, !tbaa !8
  %940 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 2, i32 0, i64 1
  %941 = load double, ptr %940, align 8, !tbaa !8
  %942 = getelementptr inbounds [3 x double], ptr %938, i64 0, i64 1
  store double %941, ptr %942, align 8, !tbaa !8
  %943 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 2, i32 0, i64 2
  %944 = load double, ptr %943, align 8, !tbaa !8
  %945 = getelementptr inbounds [3 x double], ptr %938, i64 0, i64 2
  store double %944, ptr %945, align 8, !tbaa !8
  %946 = add nuw nsw i64 %918, 1
  %947 = icmp eq i64 %946, %128
  br i1 %947, label %1084, label %917

948:                                              ; preds = %806
  %949 = load ptr, ptr %121, align 8, !tbaa !133
  %950 = getelementptr inbounds %"class.std::vector.72", ptr %949, i64 %175
  %951 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %950, i64 0, i32 1
  %952 = load ptr, ptr %951, align 8, !tbaa !49
  %953 = load ptr, ptr %950, align 8, !tbaa !51
  %954 = ptrtoint ptr %952 to i64
  %955 = ptrtoint ptr %953 to i64
  %956 = sub i64 %954, %955
  %957 = sdiv exact i64 %956, 72
  %958 = ptrtoint ptr %808 to i64
  %959 = ptrtoint ptr %807 to i64
  %960 = sub i64 %958, %959
  %961 = sdiv exact i64 %960, 72
  %962 = shl i64 %957, 32
  %963 = shl i64 %961, 32
  %964 = load ptr, ptr %1, align 8, !tbaa !5
  %965 = getelementptr inbounds ptr, ptr %964, i64 5
  %966 = load ptr, ptr %965, align 8
  invoke void %966(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %950, i64 %962, ptr nonnull %11, i64 %963, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 4)
          to label %967 unwind label %880

967:                                              ; preds = %948
  br i1 %111, label %1084, label %968

968:                                              ; preds = %967
  %969 = load ptr, ptr %122, align 8, !tbaa !130
  %970 = zext i32 %182 to i64
  %971 = getelementptr inbounds %"class.std::vector.67", ptr %969, i64 %970
  %972 = load ptr, ptr %971, align 8, !tbaa !25
  %973 = add i32 %182, 1
  %974 = zext i32 %973 to i64
  %975 = getelementptr inbounds %"class.std::vector.67", ptr %969, i64 %974
  %976 = load ptr, ptr %975, align 8, !tbaa !25
  %977 = add i32 %182, 2
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds %"class.std::vector.67", ptr %969, i64 %978
  %980 = load ptr, ptr %979, align 8, !tbaa !25
  br label %981

981:                                              ; preds = %968, %981
  %982 = phi i64 [ 0, %968 ], [ %1010, %981 ]
  %983 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %809, i64 %982
  %984 = getelementptr inbounds %"class.dealii::Tensor", ptr %972, i64 %982
  %985 = load double, ptr %983, align 8, !tbaa !8
  store double %985, ptr %984, align 8, !tbaa !8
  %986 = getelementptr inbounds [3 x double], ptr %983, i64 0, i64 1
  %987 = load double, ptr %986, align 8, !tbaa !8
  %988 = getelementptr inbounds [3 x double], ptr %984, i64 0, i64 1
  store double %987, ptr %988, align 8, !tbaa !8
  %989 = getelementptr inbounds [3 x double], ptr %983, i64 0, i64 2
  %990 = load double, ptr %989, align 8, !tbaa !8
  %991 = getelementptr inbounds [3 x double], ptr %984, i64 0, i64 2
  store double %990, ptr %991, align 8, !tbaa !8
  %992 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 1
  %993 = getelementptr inbounds %"class.dealii::Tensor", ptr %976, i64 %982
  %994 = load double, ptr %992, align 8, !tbaa !8
  store double %994, ptr %993, align 8, !tbaa !8
  %995 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 1, i32 0, i64 1
  %996 = load double, ptr %995, align 8, !tbaa !8
  %997 = getelementptr inbounds [3 x double], ptr %993, i64 0, i64 1
  store double %996, ptr %997, align 8, !tbaa !8
  %998 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 1, i32 0, i64 2
  %999 = load double, ptr %998, align 8, !tbaa !8
  %1000 = getelementptr inbounds [3 x double], ptr %993, i64 0, i64 2
  store double %999, ptr %1000, align 8, !tbaa !8
  %1001 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 2
  %1002 = getelementptr inbounds %"class.dealii::Tensor", ptr %980, i64 %982
  %1003 = load double, ptr %1001, align 8, !tbaa !8
  store double %1003, ptr %1002, align 8, !tbaa !8
  %1004 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 2, i32 0, i64 1
  %1005 = load double, ptr %1004, align 8, !tbaa !8
  %1006 = getelementptr inbounds [3 x double], ptr %1002, i64 0, i64 1
  store double %1005, ptr %1006, align 8, !tbaa !8
  %1007 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 2, i32 0, i64 2
  %1008 = load double, ptr %1007, align 8, !tbaa !8
  %1009 = getelementptr inbounds [3 x double], ptr %1002, i64 0, i64 2
  store double %1008, ptr %1009, align 8, !tbaa !8
  %1010 = add nuw nsw i64 %982, 1
  %1011 = icmp eq i64 %1010, %127
  br i1 %1011, label %1086, label %981

1012:                                             ; preds = %806
  %1013 = load ptr, ptr %121, align 8, !tbaa !133
  %1014 = getelementptr inbounds %"class.std::vector.72", ptr %1013, i64 %175
  %1015 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %1014, i64 0, i32 1
  %1016 = load ptr, ptr %1015, align 8, !tbaa !49
  %1017 = load ptr, ptr %1014, align 8, !tbaa !51
  %1018 = ptrtoint ptr %1016 to i64
  %1019 = ptrtoint ptr %1017 to i64
  %1020 = sub i64 %1018, %1019
  %1021 = sdiv exact i64 %1020, 72
  %1022 = ptrtoint ptr %808 to i64
  %1023 = ptrtoint ptr %807 to i64
  %1024 = sub i64 %1022, %1023
  %1025 = sdiv exact i64 %1024, 72
  %1026 = shl i64 %1021, 32
  %1027 = shl i64 %1025, 32
  %1028 = load ptr, ptr %1, align 8, !tbaa !5
  %1029 = getelementptr inbounds ptr, ptr %1028, i64 5
  %1030 = load ptr, ptr %1029, align 8
  invoke void %1030(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %1014, i64 %1026, ptr nonnull %11, i64 %1027, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 256)
          to label %1031 unwind label %880

1031:                                             ; preds = %1012
  br i1 %111, label %1084, label %1032

1032:                                             ; preds = %1031
  %1033 = getelementptr inbounds double, ptr %90, i64 %175
  %1034 = load ptr, ptr %11, align 8, !tbaa !51
  %1035 = load ptr, ptr %122, align 8, !tbaa !130
  %1036 = zext i32 %182 to i64
  %1037 = getelementptr inbounds %"class.std::vector.67", ptr %1035, i64 %1036
  %1038 = load ptr, ptr %1037, align 8, !tbaa !25
  %1039 = add i32 %182, 1
  %1040 = zext i32 %1039 to i64
  %1041 = getelementptr inbounds %"class.std::vector.67", ptr %1035, i64 %1040
  %1042 = load ptr, ptr %1041, align 8, !tbaa !25
  %1043 = add i32 %182, 2
  %1044 = zext i32 %1043 to i64
  %1045 = getelementptr inbounds %"class.std::vector.67", ptr %1035, i64 %1044
  %1046 = load ptr, ptr %1045, align 8, !tbaa !25
  br label %1047

1047:                                             ; preds = %1032, %1047
  %1048 = phi i64 [ 0, %1032 ], [ %1082, %1047 ]
  %1049 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %1034, i64 %1048
  %1050 = load double, ptr %1033, align 8, !tbaa !8
  %1051 = getelementptr inbounds [3 x double], ptr %1049, i64 0, i64 2
  %1052 = load double, ptr %1051, align 8, !tbaa !8, !noalias !213
  %1053 = fmul double %1050, %1052
  %1054 = getelementptr inbounds %"class.dealii::Tensor", ptr %1038, i64 %1048
  %1055 = load <2 x double>, ptr %1049, align 8, !tbaa !8, !noalias !213
  %1056 = insertelement <2 x double> poison, double %1050, i64 0
  %1057 = shufflevector <2 x double> %1056, <2 x double> poison, <2 x i32> zeroinitializer
  %1058 = fmul <2 x double> %1057, %1055
  store <2 x double> %1058, ptr %1054, align 8, !tbaa !8
  %1059 = getelementptr inbounds [3 x double], ptr %1054, i64 0, i64 2
  store double %1053, ptr %1059, align 8, !tbaa !8
  %1060 = load double, ptr %1033, align 8, !tbaa !8
  %1061 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %1049, i64 0, i64 1
  %1062 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %1049, i64 0, i64 1, i32 0, i64 2
  %1063 = load double, ptr %1062, align 8, !tbaa !8, !noalias !213
  %1064 = fmul double %1060, %1063
  %1065 = getelementptr inbounds %"class.dealii::Tensor", ptr %1042, i64 %1048
  %1066 = load <2 x double>, ptr %1061, align 8, !tbaa !8, !noalias !213
  %1067 = insertelement <2 x double> poison, double %1060, i64 0
  %1068 = shufflevector <2 x double> %1067, <2 x double> poison, <2 x i32> zeroinitializer
  %1069 = fmul <2 x double> %1068, %1066
  store <2 x double> %1069, ptr %1065, align 8, !tbaa !8
  %1070 = getelementptr inbounds [3 x double], ptr %1065, i64 0, i64 2
  store double %1064, ptr %1070, align 8, !tbaa !8
  %1071 = load double, ptr %1033, align 8, !tbaa !8
  %1072 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %1049, i64 0, i64 2
  %1073 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %1049, i64 0, i64 2, i32 0, i64 2
  %1074 = load double, ptr %1073, align 8, !tbaa !8, !noalias !213
  %1075 = fmul double %1071, %1074
  %1076 = getelementptr inbounds %"class.dealii::Tensor", ptr %1046, i64 %1048
  %1077 = load <2 x double>, ptr %1072, align 8, !tbaa !8, !noalias !213
  %1078 = insertelement <2 x double> poison, double %1071, i64 0
  %1079 = shufflevector <2 x double> %1078, <2 x double> poison, <2 x i32> zeroinitializer
  %1080 = fmul <2 x double> %1079, %1077
  store <2 x double> %1080, ptr %1076, align 8, !tbaa !8
  %1081 = getelementptr inbounds [3 x double], ptr %1076, i64 0, i64 2
  store double %1075, ptr %1081, align 8, !tbaa !8
  %1082 = add nuw nsw i64 %1048, 1
  %1083 = icmp eq i64 %1082, %126
  br i1 %1083, label %1084, label %1047

1084:                                             ; preds = %1047, %917, %849, %1031, %967, %902, %834, %806
  %1085 = icmp eq ptr %809, null
  br i1 %1085, label %1087, label %1086

1086:                                             ; preds = %981, %1084
  call void @_ZdlPv(ptr noundef nonnull %809) #17
  br label %1087

1087:                                             ; preds = %1086, %1084
  %1088 = load ptr, ptr %11, align 8, !tbaa !51
  %1089 = icmp eq ptr %1088, null
  br i1 %1089, label %1091, label %1090

1090:                                             ; preds = %1087
  call void @_ZdlPv(ptr noundef nonnull %1088) #17
  br label %1091

1091:                                             ; preds = %1090, %1087
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #15
  br label %1100

1092:                                             ; preds = %880
  call void @_ZdlPv(ptr noundef nonnull %809) #17
  br label %1093

1093:                                             ; preds = %1092, %880, %813
  %1094 = phi { ptr, i32 } [ %814, %813 ], [ %881, %880 ], [ %881, %1092 ]
  %1095 = load ptr, ptr %11, align 8, !tbaa !51
  %1096 = icmp eq ptr %1095, null
  br i1 %1096, label %1098, label %1097

1097:                                             ; preds = %1093
  call void @_ZdlPv(ptr noundef nonnull %1095) #17
  br label %1098

1098:                                             ; preds = %1097, %1093, %811
  %1099 = phi { ptr, i32 } [ %812, %811 ], [ %1094, %1093 ], [ %1094, %1097 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #15
  br label %1118

1100:                                             ; preds = %1091, %793
  %1101 = add nuw nsw i64 %175, 1
  %1102 = load i32, ptr %30, align 8, !tbaa !129
  %1103 = zext i32 %1102 to i64
  %1104 = icmp ult i64 %1101, %1103
  br i1 %1104, label %174, label %166

1105:                                             ; preds = %168
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #15
  invoke void @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC1Ev(ptr noundef nonnull align 4 dereferenceable(4) %13)
          to label %1106 unwind label %1112

1106:                                             ; preds = %1105
  %1107 = invoke i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor4cellEv()
          to label %1108 unwind label %1112

1108:                                             ; preds = %1106
  store i32 %1107, ptr %12, align 4
  %1109 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %12)
          to label %1110 unwind label %1112

1110:                                             ; preds = %1108
  invoke void @_ZNK6dealii13FiniteElementILi3ELi3EE11compute_2ndERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRNS3_16InternalDataBaseERNS1_16InternalDataBaseERNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(728) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %1109, ptr noundef nonnull align 8 dereferenceable(185) %4, ptr noundef nonnull align 8 dereferenceable(216) %5, ptr noundef nonnull align 8 dereferenceable(436) %6)
          to label %1111 unwind label %1112

1111:                                             ; preds = %1110
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #15
  br label %1114

1112:                                             ; preds = %1110, %1108, %1106, %1105
  %1113 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #15
  br label %1118

1114:                                             ; preds = %1111, %168
  %1115 = icmp eq ptr %90, null
  br i1 %1115, label %1117, label %1116

1116:                                             ; preds = %1114
  call void @_ZdlPv(ptr noundef nonnull %90) #17
  br label %1117

1117:                                             ; preds = %1114, %1116
  ret void

1118:                                             ; preds = %555, %791, %1098, %1112
  %1119 = phi { ptr, i32 } [ %1113, %1112 ], [ %1099, %1098 ], [ %792, %791 ], [ %556, %555 ]
  %1120 = icmp eq ptr %90, null
  br i1 %1120, label %1122, label %1121

1121:                                             ; preds = %1118
  call void @_ZdlPv(ptr noundef nonnull %90) #17
  br label %1122

1122:                                             ; preds = %1121, %1118
  resume { ptr, i32 } %1119
}

declare void @_ZNK6dealii13FiniteElementILi3ELi3EE11compute_2ndERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRNS3_16InternalDataBaseERNS1_16InternalDataBaseERNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(72), ptr noundef nonnull align 8 dereferenceable(16), i32 noundef, ptr noundef nonnull align 8 dereferenceable(185), ptr noundef nonnull align 8 dereferenceable(216), ptr noundef nonnull align 8 dereferenceable(436)) local_unnamed_addr #1

declare void @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC1Ev(ptr noundef nonnull align 4 dereferenceable(4)) unnamed_addr #1

declare i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor4cellEv() local_unnamed_addr #1

declare noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE19fill_fe_face_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(976) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %3, ptr noundef nonnull align 8 dereferenceable(128) %4, ptr noundef nonnull align 8 dereferenceable(185) %5, ptr noundef nonnull align 8 dereferenceable(185) %6, ptr noundef nonnull align 8 dereferenceable(436) %7) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %9 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %10 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %11 = alloca %"class.std::vector.67", align 8
  %12 = alloca %"class.std::vector.67", align 8
  %13 = alloca %"class.std::vector.72", align 8
  %14 = getelementptr inbounds %"class.dealii::Quadrature.110", ptr %4, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Quadrature.110", ptr %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !127
  %17 = load ptr, ptr %14, align 8, !tbaa !128
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = lshr exact i64 %20, 3
  %22 = trunc i64 %21 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #15
  call void @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC1Ev(ptr noundef nonnull align 4 dereferenceable(4) %9)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #15
  %23 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !216
  %25 = getelementptr inbounds %"class.dealii::Triangulation", ptr %24, i64 0, i32 1
  %26 = load i32, ptr %2, align 8, !tbaa !218
  %27 = sext i32 %26 to i64
  %28 = load ptr, ptr %25, align 8, !tbaa !219
  %29 = getelementptr inbounds ptr, ptr %28, i64 %27
  %30 = load ptr, ptr %29, align 8, !tbaa !33
  %31 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 1
  %32 = load i32, ptr %31, align 4, !tbaa !221
  %33 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %30, i64 0, i32 4, i32 1
  %34 = mul i32 %32, 6
  %35 = add i32 %34, %3
  %36 = load ptr, ptr %33, align 8, !tbaa !222
  %37 = lshr i32 %35, 6
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i64, ptr %36, i64 %38
  %40 = and i32 %35, 63
  %41 = zext i32 %40 to i64
  %42 = shl nuw i64 1, %41
  %43 = load i64, ptr %39, align 8, !tbaa !223
  %44 = and i64 %42, %43
  %45 = icmp ne i64 %44, 0
  %46 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %30, i64 0, i32 4, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !222
  %48 = getelementptr inbounds i64, ptr %47, i64 %38
  %49 = load i64, ptr %48, align 8, !tbaa !223
  %50 = and i64 %42, %49
  %51 = icmp ne i64 %50, 0
  %52 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %30, i64 0, i32 4, i32 3
  %53 = load ptr, ptr %52, align 8, !tbaa !222
  %54 = getelementptr inbounds i64, ptr %53, i64 %38
  %55 = load i64, ptr %54, align 8, !tbaa !223
  %56 = and i64 %55, %42
  %57 = icmp ne i64 %56, 0
  %58 = call i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor4faceEjbbbj(i32 noundef %3, i1 noundef zeroext %45, i1 noundef zeroext %51, i1 noundef zeroext %57, i32 noundef %22)
  store i32 %58, ptr %10, align 4
  %59 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %6, i64 0, i32 2
  %60 = load i32, ptr %59, align 4, !tbaa !118
  %61 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %6, i64 0, i32 3
  %62 = load i32, ptr %61, align 8, !tbaa !125
  %63 = or i32 %62, %60
  %64 = getelementptr inbounds i8, ptr %0, i64 112
  %65 = load i32, ptr %64, align 8, !tbaa !129
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %180, label %67

67:                                               ; preds = %8
  %68 = zext i32 %65 to i64
  %69 = shl nuw nsw i64 %68, 3
  %70 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %69) #16
  %71 = getelementptr inbounds double, ptr %70, i64 %68
  %72 = add nuw nsw i64 %68, 2305843009213693951
  %73 = and i64 %72, 2305843009213693951
  %74 = add nuw nsw i64 %73, 1
  %75 = icmp ult i64 %73, 15
  br i1 %75, label %91, label %76

76:                                               ; preds = %67
  %77 = and i64 %74, 4611686018427387888
  %78 = shl i64 %77, 3
  %79 = getelementptr i8, ptr %70, i64 %78
  br label %80

80:                                               ; preds = %80, %76
  %81 = phi i64 [ 0, %76 ], [ %87, %80 ]
  %82 = shl i64 %81, 3
  %83 = getelementptr i8, ptr %70, i64 %82
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %83, align 8, !tbaa !8
  %84 = getelementptr double, ptr %83, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %84, align 8, !tbaa !8
  %85 = getelementptr double, ptr %83, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %85, align 8, !tbaa !8
  %86 = getelementptr double, ptr %83, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %86, align 8, !tbaa !8
  %87 = add nuw i64 %81, 16
  %88 = icmp eq i64 %87, %77
  br i1 %88, label %89, label %80, !llvm.loop !224

89:                                               ; preds = %80
  %90 = icmp eq i64 %74, %77
  br i1 %90, label %97, label %91

91:                                               ; preds = %67, %89
  %92 = phi ptr [ %70, %67 ], [ %79, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi ptr [ %95, %93 ], [ %92, %91 ]
  store double 1.000000e+00, ptr %94, align 8, !tbaa !8
  %95 = getelementptr inbounds double, ptr %94, i64 1
  %96 = icmp eq ptr %95, %71
  br i1 %96, label %97, label %93, !llvm.loop !225

97:                                               ; preds = %93, %89
  %98 = add nuw nsw i64 %68, 2305843009213693951
  %99 = and i64 %98, 2305843009213693951
  %100 = add nuw nsw i64 %99, 1
  %101 = icmp ult i64 %99, 15
  br i1 %101, label %117, label %102

102:                                              ; preds = %97
  %103 = and i64 %100, 4611686018427387888
  %104 = shl i64 %103, 3
  %105 = getelementptr i8, ptr %70, i64 %104
  br label %106

106:                                              ; preds = %106, %102
  %107 = phi i64 [ 0, %102 ], [ %113, %106 ]
  %108 = shl i64 %107, 3
  %109 = getelementptr i8, ptr %70, i64 %108
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %109, align 8, !tbaa !8
  %110 = getelementptr double, ptr %109, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %110, align 8, !tbaa !8
  %111 = getelementptr double, ptr %109, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %111, align 8, !tbaa !8
  %112 = getelementptr double, ptr %109, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %112, align 8, !tbaa !8
  %113 = add nuw i64 %107, 16
  %114 = icmp eq i64 %113, %103
  br i1 %114, label %115, label %106, !llvm.loop !226

115:                                              ; preds = %106
  %116 = icmp eq i64 %100, %103
  br i1 %116, label %123, label %117

117:                                              ; preds = %97, %115
  %118 = phi ptr [ %70, %97 ], [ %105, %115 ]
  br label %119

119:                                              ; preds = %117, %119
  %120 = phi ptr [ %121, %119 ], [ %118, %117 ]
  store double 1.000000e+00, ptr %120, align 8, !tbaa !8
  %121 = getelementptr inbounds double, ptr %120, i64 1
  %122 = icmp eq ptr %121, %71
  br i1 %122, label %123, label %119, !llvm.loop !227

123:                                              ; preds = %119, %115
  br i1 %66, label %180, label %124

124:                                              ; preds = %123
  %125 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %7, i64 0, i32 14
  %126 = and i32 %63, 1
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 1
  %129 = and i64 %21, 4294967295
  %130 = icmp eq i64 %129, 0
  %131 = mul nuw nsw i64 %129, 24
  %132 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %12, i64 0, i32 2
  %133 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %12, i64 0, i32 1
  %134 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %6, i64 0, i32 1
  %135 = shl nuw i64 %129, 32
  %136 = icmp eq i32 %22, 0
  %137 = getelementptr inbounds %"class.dealii::TableBase", ptr %7, i64 0, i32 1
  %138 = getelementptr inbounds %"class.dealii::TableBase", ptr %7, i64 0, i32 3, i32 0, i32 0, i64 1
  %139 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %11, i64 0, i32 2
  %140 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %11, i64 0, i32 1
  %141 = and i32 %63, 2
  %142 = icmp eq i32 %141, 0
  %143 = mul nuw nsw i64 %129, 72
  %144 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %13, i64 0, i32 2
  %145 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %13, i64 0, i32 1
  %146 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %6, i64 0, i32 2
  %147 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %7, i64 0, i32 1
  %148 = and i64 %21, 4294967295
  %149 = and i64 %21, 4294967295
  %150 = and i64 %21, 4294967295
  %151 = and i64 %21, 4294967295
  %152 = and i64 %21, 4294967295
  %153 = and i64 %21, 4294967295
  %154 = add nsw i64 %148, -1
  %155 = shl nuw nsw i64 %148, 3
  %156 = mul nuw nsw i64 %148, 24
  %157 = add nsw i64 %156, -16
  %158 = add nsw i64 %156, -8
  %159 = add nsw i64 %148, -1
  %160 = shl nuw nsw i64 %148, 3
  %161 = mul nuw nsw i64 %148, 24
  %162 = add nsw i64 %161, -16
  %163 = add nsw i64 %161, -8
  %164 = icmp ult i64 %148, 40
  %165 = trunc i64 %159 to i32
  %166 = trunc i64 %159 to i32
  %167 = icmp ugt i64 %159, 4294967295
  %168 = trunc i64 %159 to i32
  %169 = and i64 %21, 3
  %170 = sub nsw i64 %148, %169
  %171 = icmp eq i64 %169, 0
  %172 = icmp ult i64 %148, 60
  %173 = trunc i64 %154 to i32
  %174 = trunc i64 %154 to i32
  %175 = icmp ugt i64 %154, 4294967295
  %176 = trunc i64 %154 to i32
  %177 = and i64 %21, 3
  %178 = sub nsw i64 %148, %177
  %179 = icmp eq i64 %177, 0
  br label %184

180:                                              ; preds = %980, %8, %123
  %181 = phi ptr [ %70, %123 ], [ null, %8 ], [ %70, %980 ]
  %182 = and i32 %63, 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %988, label %985

184:                                              ; preds = %124, %980
  %185 = phi i64 [ 0, %124 ], [ %981, %980 ]
  %186 = shl nuw nsw i64 %185, 3
  %187 = getelementptr i8, ptr %70, i64 %186
  %188 = add nuw i64 %186, 8
  %189 = getelementptr i8, ptr %70, i64 %188
  %190 = load ptr, ptr %125, align 8, !tbaa !154
  %191 = getelementptr inbounds i32, ptr %190, i64 %185
  %192 = load i32, ptr %191, align 4, !tbaa !34
  br i1 %127, label %685, label %193

193:                                              ; preds = %184
  %194 = load i32, ptr %128, align 8, !tbaa !61
  switch i32 %194, label %685 [
    i32 0, label %195
    i32 1, label %250
    i32 2, label %250
    i32 256, label %452
  ]

195:                                              ; preds = %193
  br i1 %136, label %685, label %196

196:                                              ; preds = %195
  %197 = add i32 %192, 1
  %198 = add i32 %192, 2
  br label %199

199:                                              ; preds = %196, %233
  %200 = phi i32 [ %246, %233 ], [ 0, %196 ]
  %201 = load ptr, ptr %134, align 8, !tbaa !130
  %202 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %203 unwind label %248

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.std::vector.67", ptr %201, i64 %185
  %205 = add i32 %202, %200
  %206 = zext i32 %205 to i64
  %207 = load ptr, ptr %204, align 8, !tbaa !25
  %208 = getelementptr inbounds %"class.dealii::Tensor", ptr %207, i64 %206
  %209 = load double, ptr %208, align 8, !tbaa !8
  %210 = load ptr, ptr %137, align 8, !tbaa !35
  %211 = load i32, ptr %138, align 8, !tbaa !34
  %212 = mul i32 %211, %192
  %213 = add i32 %212, %200
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds double, ptr %210, i64 %214
  store double %209, ptr %215, align 8, !tbaa !8
  %216 = load ptr, ptr %134, align 8, !tbaa !130
  %217 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %218 unwind label %248

218:                                              ; preds = %203
  %219 = getelementptr inbounds %"class.std::vector.67", ptr %216, i64 %185
  %220 = add i32 %217, %200
  %221 = zext i32 %220 to i64
  %222 = load ptr, ptr %219, align 8, !tbaa !25
  %223 = getelementptr inbounds %"class.dealii::Tensor", ptr %222, i64 %221, i32 0, i64 1
  %224 = load double, ptr %223, align 8, !tbaa !8
  %225 = load ptr, ptr %137, align 8, !tbaa !35
  %226 = load i32, ptr %138, align 8, !tbaa !34
  %227 = mul i32 %226, %197
  %228 = add i32 %227, %200
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds double, ptr %225, i64 %229
  store double %224, ptr %230, align 8, !tbaa !8
  %231 = load ptr, ptr %134, align 8, !tbaa !130
  %232 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %233 unwind label %248

233:                                              ; preds = %218
  %234 = getelementptr inbounds %"class.std::vector.67", ptr %231, i64 %185
  %235 = add i32 %232, %200
  %236 = zext i32 %235 to i64
  %237 = load ptr, ptr %234, align 8, !tbaa !25
  %238 = getelementptr inbounds %"class.dealii::Tensor", ptr %237, i64 %236, i32 0, i64 2
  %239 = load double, ptr %238, align 8, !tbaa !8
  %240 = load ptr, ptr %137, align 8, !tbaa !35
  %241 = load i32, ptr %138, align 8, !tbaa !34
  %242 = mul i32 %241, %198
  %243 = add i32 %242, %200
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds double, ptr %240, i64 %244
  store double %239, ptr %245, align 8, !tbaa !8
  %246 = add nuw i32 %200, 1
  %247 = icmp eq i32 %246, %22
  br i1 %247, label %685, label %199

248:                                              ; preds = %218, %203, %199
  %249 = landingpad { ptr, i32 }
          cleanup
  br label %995

250:                                              ; preds = %193, %193
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #15
  br i1 %130, label %251, label %252

251:                                              ; preds = %250
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %11, i8 0, i64 24, i1 false)
  br label %257

252:                                              ; preds = %250
  %253 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %131) #16
          to label %254 unwind label %442

254:                                              ; preds = %252
  store ptr %253, ptr %11, align 8, !tbaa !25
  %255 = getelementptr inbounds %"class.dealii::Tensor", ptr %253, i64 %129
  store ptr %255, ptr %139, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %253, i8 0, i64 %131, i1 false), !tbaa !8
  %256 = getelementptr i8, ptr %253, i64 %131
  br label %257

257:                                              ; preds = %254, %251
  %258 = phi ptr [ null, %251 ], [ %256, %254 ]
  store ptr %258, ptr %140, align 8, !tbaa !23
  %259 = load ptr, ptr %134, align 8, !tbaa !130
  %260 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %261 unwind label %444

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"class.std::vector.67", ptr %259, i64 %185
  %263 = zext i32 %260 to i64
  %264 = or i64 %135, %263
  %265 = load ptr, ptr %140, align 8, !tbaa !23
  %266 = load ptr, ptr %11, align 8, !tbaa !25
  %267 = ptrtoint ptr %265 to i64
  %268 = ptrtoint ptr %266 to i64
  %269 = sub i64 %267, %268
  %270 = sdiv exact i64 %269, 24
  %271 = load i32, ptr %128, align 8, !tbaa !61
  %272 = shl i64 %270, 32
  %273 = load ptr, ptr %1, align 8, !tbaa !5
  %274 = getelementptr inbounds ptr, ptr %273, i64 4
  %275 = load ptr, ptr %274, align 8
  invoke void %275(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %262, i64 %264, ptr nonnull %11, i64 %272, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef %271)
          to label %276 unwind label %444

276:                                              ; preds = %261
  %277 = load ptr, ptr %11, align 8, !tbaa !25
  br i1 %136, label %439, label %278

278:                                              ; preds = %276
  %279 = load ptr, ptr %137, align 8, !tbaa !35
  %280 = load i32, ptr %138, align 8, !tbaa !34
  %281 = mul i32 %280, %192
  %282 = add i32 %192, 1
  %283 = mul i32 %280, %282
  %284 = add i32 %192, 2
  %285 = mul i32 %280, %284
  br i1 %172, label %417, label %286

286:                                              ; preds = %278
  %287 = xor i32 %281, -1
  %288 = icmp ult i32 %287, %173
  %289 = xor i32 %283, -1
  %290 = icmp ult i32 %289, %174
  %291 = or i1 %290, %175
  %292 = xor i32 %285, -1
  %293 = icmp ult i32 %292, %176
  %294 = or i1 %288, %291
  %295 = or i1 %293, %294
  br i1 %295, label %417, label %296

296:                                              ; preds = %286
  %297 = zext i32 %281 to i64
  %298 = shl nuw nsw i64 %297, 3
  %299 = getelementptr i8, ptr %279, i64 %298
  %300 = getelementptr i8, ptr %279, i64 %155
  %301 = getelementptr i8, ptr %300, i64 %298
  %302 = zext i32 %283 to i64
  %303 = shl nuw nsw i64 %302, 3
  %304 = getelementptr i8, ptr %279, i64 %303
  %305 = getelementptr i8, ptr %300, i64 %303
  %306 = zext i32 %285 to i64
  %307 = shl nuw nsw i64 %306, 3
  %308 = getelementptr i8, ptr %279, i64 %307
  %309 = getelementptr i8, ptr %279, i64 %155
  %310 = getelementptr i8, ptr %309, i64 %307
  %311 = getelementptr i8, ptr %277, i64 %157
  %312 = getelementptr i8, ptr %277, i64 8
  %313 = getelementptr i8, ptr %277, i64 %158
  %314 = getelementptr i8, ptr %277, i64 16
  %315 = getelementptr i8, ptr %277, i64 %156
  %316 = icmp ult ptr %299, %305
  %317 = icmp ult ptr %304, %301
  %318 = and i1 %316, %317
  %319 = icmp ult ptr %299, %310
  %320 = icmp ult ptr %308, %301
  %321 = and i1 %319, %320
  %322 = or i1 %318, %321
  %323 = icmp ult ptr %299, %311
  %324 = icmp ult ptr %277, %301
  %325 = and i1 %323, %324
  %326 = or i1 %322, %325
  %327 = icmp ult ptr %299, %313
  %328 = icmp ult ptr %312, %301
  %329 = and i1 %327, %328
  %330 = or i1 %326, %329
  %331 = icmp ult ptr %299, %315
  %332 = icmp ult ptr %314, %301
  %333 = and i1 %331, %332
  %334 = or i1 %330, %333
  %335 = icmp ult ptr %304, %310
  %336 = icmp ult ptr %308, %305
  %337 = and i1 %335, %336
  %338 = or i1 %334, %337
  %339 = icmp ult ptr %304, %311
  %340 = icmp ult ptr %277, %305
  %341 = and i1 %339, %340
  %342 = or i1 %338, %341
  %343 = icmp ult ptr %304, %313
  %344 = icmp ult ptr %312, %305
  %345 = and i1 %343, %344
  %346 = or i1 %342, %345
  %347 = icmp ult ptr %304, %315
  %348 = icmp ult ptr %314, %305
  %349 = and i1 %347, %348
  %350 = or i1 %346, %349
  %351 = icmp ult ptr %308, %311
  %352 = icmp ult ptr %277, %310
  %353 = and i1 %351, %352
  %354 = or i1 %350, %353
  %355 = icmp ult ptr %308, %313
  %356 = icmp ult ptr %312, %310
  %357 = and i1 %355, %356
  %358 = or i1 %354, %357
  %359 = icmp ult ptr %308, %315
  %360 = icmp ult ptr %314, %310
  %361 = and i1 %359, %360
  %362 = or i1 %358, %361
  br i1 %362, label %417, label %363

363:                                              ; preds = %296, %363
  %364 = phi i64 [ %414, %363 ], [ 0, %296 ]
  %365 = trunc i64 %364 to i32
  %366 = or i64 %364, 1
  %367 = or i64 %364, 2
  %368 = or i64 %364, 3
  %369 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %364
  %370 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %366
  %371 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %367
  %372 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %368
  %373 = load double, ptr %369, align 8, !tbaa !8, !alias.scope !228
  %374 = load double, ptr %370, align 8, !tbaa !8, !alias.scope !228
  %375 = load double, ptr %371, align 8, !tbaa !8, !alias.scope !228
  %376 = load double, ptr %372, align 8, !tbaa !8, !alias.scope !228
  %377 = insertelement <4 x double> poison, double %373, i64 0
  %378 = insertelement <4 x double> %377, double %374, i64 1
  %379 = insertelement <4 x double> %378, double %375, i64 2
  %380 = insertelement <4 x double> %379, double %376, i64 3
  %381 = add i32 %281, %365
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds double, ptr %279, i64 %382
  store <4 x double> %380, ptr %383, align 8, !tbaa !8, !alias.scope !231, !noalias !233
  %384 = getelementptr inbounds [3 x double], ptr %369, i64 0, i64 1
  %385 = getelementptr inbounds [3 x double], ptr %370, i64 0, i64 1
  %386 = getelementptr inbounds [3 x double], ptr %371, i64 0, i64 1
  %387 = getelementptr inbounds [3 x double], ptr %372, i64 0, i64 1
  %388 = load double, ptr %384, align 8, !tbaa !8, !alias.scope !238
  %389 = load double, ptr %385, align 8, !tbaa !8, !alias.scope !238
  %390 = load double, ptr %386, align 8, !tbaa !8, !alias.scope !238
  %391 = load double, ptr %387, align 8, !tbaa !8, !alias.scope !238
  %392 = insertelement <4 x double> poison, double %388, i64 0
  %393 = insertelement <4 x double> %392, double %389, i64 1
  %394 = insertelement <4 x double> %393, double %390, i64 2
  %395 = insertelement <4 x double> %394, double %391, i64 3
  %396 = add i32 %283, %365
  %397 = zext i32 %396 to i64
  %398 = getelementptr inbounds double, ptr %279, i64 %397
  store <4 x double> %395, ptr %398, align 8, !tbaa !8, !alias.scope !239, !noalias !240
  %399 = getelementptr inbounds [3 x double], ptr %369, i64 0, i64 2
  %400 = getelementptr inbounds [3 x double], ptr %370, i64 0, i64 2
  %401 = getelementptr inbounds [3 x double], ptr %371, i64 0, i64 2
  %402 = getelementptr inbounds [3 x double], ptr %372, i64 0, i64 2
  %403 = load double, ptr %399, align 8, !tbaa !8, !alias.scope !241
  %404 = load double, ptr %400, align 8, !tbaa !8, !alias.scope !241
  %405 = load double, ptr %401, align 8, !tbaa !8, !alias.scope !241
  %406 = load double, ptr %402, align 8, !tbaa !8, !alias.scope !241
  %407 = insertelement <4 x double> poison, double %403, i64 0
  %408 = insertelement <4 x double> %407, double %404, i64 1
  %409 = insertelement <4 x double> %408, double %405, i64 2
  %410 = insertelement <4 x double> %409, double %406, i64 3
  %411 = add i32 %285, %365
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds double, ptr %279, i64 %412
  store <4 x double> %410, ptr %413, align 8, !tbaa !8, !alias.scope !242, !noalias !243
  %414 = add nuw i64 %364, 4
  %415 = icmp eq i64 %414, %178
  br i1 %415, label %416, label %363, !llvm.loop !244

416:                                              ; preds = %363
  br i1 %179, label %441, label %417

417:                                              ; preds = %296, %286, %278, %416
  %418 = phi i64 [ 0, %296 ], [ 0, %286 ], [ 0, %278 ], [ %178, %416 ]
  br label %419

419:                                              ; preds = %417, %419
  %420 = phi i64 [ %437, %419 ], [ %418, %417 ]
  %421 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %420
  %422 = load double, ptr %421, align 8, !tbaa !8
  %423 = trunc i64 %420 to i32
  %424 = add i32 %281, %423
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds double, ptr %279, i64 %425
  store double %422, ptr %426, align 8, !tbaa !8
  %427 = getelementptr inbounds [3 x double], ptr %421, i64 0, i64 1
  %428 = load double, ptr %427, align 8, !tbaa !8
  %429 = add i32 %283, %423
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds double, ptr %279, i64 %430
  store double %428, ptr %431, align 8, !tbaa !8
  %432 = getelementptr inbounds [3 x double], ptr %421, i64 0, i64 2
  %433 = load double, ptr %432, align 8, !tbaa !8
  %434 = add i32 %285, %423
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds double, ptr %279, i64 %435
  store double %433, ptr %436, align 8, !tbaa !8
  %437 = add nuw nsw i64 %420, 1
  %438 = icmp eq i64 %437, %149
  br i1 %438, label %441, label %419, !llvm.loop !245

439:                                              ; preds = %276
  %440 = icmp eq ptr %277, null
  br i1 %440, label %449, label %441

441:                                              ; preds = %419, %416, %439
  call void @_ZdlPv(ptr noundef nonnull %277) #17
  br label %449

442:                                              ; preds = %252
  %443 = landingpad { ptr, i32 }
          cleanup
  br label %450

444:                                              ; preds = %261, %257
  %445 = landingpad { ptr, i32 }
          cleanup
  %446 = load ptr, ptr %11, align 8, !tbaa !25
  %447 = icmp eq ptr %446, null
  br i1 %447, label %450, label %448

448:                                              ; preds = %444
  call void @_ZdlPv(ptr noundef nonnull %446) #17
  br label %450

449:                                              ; preds = %441, %439
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #15
  br label %685

450:                                              ; preds = %448, %444, %442
  %451 = phi { ptr, i32 } [ %443, %442 ], [ %445, %444 ], [ %445, %448 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #15
  br label %995

452:                                              ; preds = %193
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #15
  br i1 %130, label %453, label %454

453:                                              ; preds = %452
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  br label %459

454:                                              ; preds = %452
  %455 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %131) #16
          to label %456 unwind label %675

456:                                              ; preds = %454
  store ptr %455, ptr %12, align 8, !tbaa !25
  %457 = getelementptr inbounds %"class.dealii::Tensor", ptr %455, i64 %129
  store ptr %457, ptr %132, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %455, i8 0, i64 %131, i1 false), !tbaa !8
  %458 = getelementptr i8, ptr %455, i64 %131
  br label %459

459:                                              ; preds = %456, %453
  %460 = phi ptr [ null, %453 ], [ %458, %456 ]
  store ptr %460, ptr %133, align 8, !tbaa !23
  %461 = load ptr, ptr %134, align 8, !tbaa !130
  %462 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %463 unwind label %677

463:                                              ; preds = %459
  %464 = getelementptr inbounds %"class.std::vector.67", ptr %461, i64 %185
  %465 = zext i32 %462 to i64
  %466 = or i64 %135, %465
  %467 = load ptr, ptr %133, align 8, !tbaa !23
  %468 = load ptr, ptr %12, align 8, !tbaa !25
  %469 = ptrtoint ptr %467 to i64
  %470 = ptrtoint ptr %468 to i64
  %471 = sub i64 %469, %470
  %472 = sdiv exact i64 %471, 24
  %473 = shl i64 %472, 32
  %474 = load ptr, ptr %1, align 8, !tbaa !5
  %475 = getelementptr inbounds ptr, ptr %474, i64 4
  %476 = load ptr, ptr %475, align 8
  invoke void %476(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %464, i64 %466, ptr nonnull %12, i64 %473, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 256)
          to label %477 unwind label %677

477:                                              ; preds = %463
  %478 = load ptr, ptr %12, align 8, !tbaa !25
  br i1 %136, label %672, label %479

479:                                              ; preds = %477
  %480 = getelementptr inbounds double, ptr %70, i64 %185
  %481 = load ptr, ptr %137, align 8, !tbaa !35
  %482 = load i32, ptr %138, align 8, !tbaa !34
  %483 = mul i32 %482, %192
  %484 = add i32 %192, 1
  %485 = mul i32 %482, %484
  %486 = add i32 %192, 2
  %487 = mul i32 %482, %486
  br i1 %164, label %644, label %488

488:                                              ; preds = %479
  %489 = xor i32 %483, -1
  %490 = icmp ult i32 %489, %165
  %491 = xor i32 %485, -1
  %492 = icmp ult i32 %491, %166
  %493 = or i1 %492, %167
  %494 = xor i32 %487, -1
  %495 = icmp ult i32 %494, %168
  %496 = or i1 %490, %493
  %497 = or i1 %495, %496
  br i1 %497, label %644, label %498

498:                                              ; preds = %488
  %499 = zext i32 %483 to i64
  %500 = shl nuw nsw i64 %499, 3
  %501 = getelementptr i8, ptr %481, i64 %500
  %502 = getelementptr i8, ptr %481, i64 %160
  %503 = getelementptr i8, ptr %502, i64 %500
  %504 = zext i32 %485 to i64
  %505 = shl nuw nsw i64 %504, 3
  %506 = getelementptr i8, ptr %481, i64 %505
  %507 = getelementptr i8, ptr %502, i64 %505
  %508 = zext i32 %487 to i64
  %509 = shl nuw nsw i64 %508, 3
  %510 = getelementptr i8, ptr %481, i64 %509
  %511 = getelementptr i8, ptr %481, i64 %160
  %512 = getelementptr i8, ptr %511, i64 %509
  %513 = getelementptr i8, ptr %478, i64 %162
  %514 = getelementptr i8, ptr %478, i64 8
  %515 = getelementptr i8, ptr %478, i64 %163
  %516 = getelementptr i8, ptr %478, i64 16
  %517 = getelementptr i8, ptr %478, i64 %161
  %518 = icmp ult ptr %501, %507
  %519 = icmp ult ptr %506, %503
  %520 = and i1 %518, %519
  %521 = icmp ult ptr %501, %512
  %522 = icmp ult ptr %510, %503
  %523 = and i1 %521, %522
  %524 = or i1 %520, %523
  %525 = icmp ult ptr %501, %189
  %526 = icmp ult ptr %187, %503
  %527 = and i1 %525, %526
  %528 = or i1 %524, %527
  %529 = icmp ult ptr %501, %513
  %530 = icmp ult ptr %478, %503
  %531 = and i1 %529, %530
  %532 = or i1 %528, %531
  %533 = icmp ult ptr %501, %515
  %534 = icmp ult ptr %514, %503
  %535 = and i1 %533, %534
  %536 = or i1 %532, %535
  %537 = icmp ult ptr %501, %517
  %538 = icmp ult ptr %516, %503
  %539 = and i1 %537, %538
  %540 = or i1 %536, %539
  %541 = icmp ult ptr %506, %512
  %542 = icmp ult ptr %510, %507
  %543 = and i1 %541, %542
  %544 = or i1 %540, %543
  %545 = icmp ult ptr %506, %189
  %546 = icmp ult ptr %187, %507
  %547 = and i1 %545, %546
  %548 = or i1 %544, %547
  %549 = icmp ult ptr %506, %513
  %550 = icmp ult ptr %478, %507
  %551 = and i1 %549, %550
  %552 = or i1 %548, %551
  %553 = icmp ult ptr %506, %515
  %554 = icmp ult ptr %514, %507
  %555 = and i1 %553, %554
  %556 = or i1 %552, %555
  %557 = icmp ult ptr %506, %517
  %558 = icmp ult ptr %516, %507
  %559 = and i1 %557, %558
  %560 = or i1 %556, %559
  %561 = icmp ult ptr %510, %189
  %562 = icmp ult ptr %187, %512
  %563 = and i1 %561, %562
  %564 = or i1 %560, %563
  %565 = icmp ult ptr %510, %513
  %566 = icmp ult ptr %478, %512
  %567 = and i1 %565, %566
  %568 = or i1 %564, %567
  %569 = icmp ult ptr %510, %515
  %570 = icmp ult ptr %514, %512
  %571 = and i1 %569, %570
  %572 = or i1 %568, %571
  %573 = icmp ult ptr %510, %517
  %574 = icmp ult ptr %516, %512
  %575 = and i1 %573, %574
  %576 = or i1 %572, %575
  br i1 %576, label %644, label %577

577:                                              ; preds = %498
  %578 = load double, ptr %480, align 8, !tbaa !8, !alias.scope !246
  %579 = insertelement <4 x double> poison, double %578, i64 0
  %580 = shufflevector <4 x double> %579, <4 x double> poison, <4 x i32> zeroinitializer
  %581 = load double, ptr %480, align 8, !tbaa !8, !alias.scope !246
  %582 = insertelement <4 x double> poison, double %581, i64 0
  %583 = shufflevector <4 x double> %582, <4 x double> poison, <4 x i32> zeroinitializer
  %584 = load double, ptr %480, align 8, !tbaa !8, !alias.scope !246
  %585 = insertelement <4 x double> poison, double %584, i64 0
  %586 = shufflevector <4 x double> %585, <4 x double> poison, <4 x i32> zeroinitializer
  br label %587

587:                                              ; preds = %587, %577
  %588 = phi i64 [ 0, %577 ], [ %641, %587 ]
  %589 = trunc i64 %588 to i32
  %590 = or i64 %588, 1
  %591 = or i64 %588, 2
  %592 = or i64 %588, 3
  %593 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %588
  %594 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %590
  %595 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %591
  %596 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %592
  %597 = load double, ptr %593, align 8, !tbaa !8, !alias.scope !249
  %598 = load double, ptr %594, align 8, !tbaa !8, !alias.scope !249
  %599 = load double, ptr %595, align 8, !tbaa !8, !alias.scope !249
  %600 = load double, ptr %596, align 8, !tbaa !8, !alias.scope !249
  %601 = insertelement <4 x double> poison, double %597, i64 0
  %602 = insertelement <4 x double> %601, double %598, i64 1
  %603 = insertelement <4 x double> %602, double %599, i64 2
  %604 = insertelement <4 x double> %603, double %600, i64 3
  %605 = fmul <4 x double> %580, %604
  %606 = add i32 %483, %589
  %607 = zext i32 %606 to i64
  %608 = getelementptr inbounds double, ptr %481, i64 %607
  store <4 x double> %605, ptr %608, align 8, !tbaa !8, !alias.scope !251, !noalias !253
  %609 = getelementptr inbounds [3 x double], ptr %593, i64 0, i64 1
  %610 = getelementptr inbounds [3 x double], ptr %594, i64 0, i64 1
  %611 = getelementptr inbounds [3 x double], ptr %595, i64 0, i64 1
  %612 = getelementptr inbounds [3 x double], ptr %596, i64 0, i64 1
  %613 = load double, ptr %609, align 8, !tbaa !8, !alias.scope !258
  %614 = load double, ptr %610, align 8, !tbaa !8, !alias.scope !258
  %615 = load double, ptr %611, align 8, !tbaa !8, !alias.scope !258
  %616 = load double, ptr %612, align 8, !tbaa !8, !alias.scope !258
  %617 = insertelement <4 x double> poison, double %613, i64 0
  %618 = insertelement <4 x double> %617, double %614, i64 1
  %619 = insertelement <4 x double> %618, double %615, i64 2
  %620 = insertelement <4 x double> %619, double %616, i64 3
  %621 = fmul <4 x double> %583, %620
  %622 = add i32 %485, %589
  %623 = zext i32 %622 to i64
  %624 = getelementptr inbounds double, ptr %481, i64 %623
  store <4 x double> %621, ptr %624, align 8, !tbaa !8, !alias.scope !259, !noalias !260
  %625 = getelementptr inbounds [3 x double], ptr %593, i64 0, i64 2
  %626 = getelementptr inbounds [3 x double], ptr %594, i64 0, i64 2
  %627 = getelementptr inbounds [3 x double], ptr %595, i64 0, i64 2
  %628 = getelementptr inbounds [3 x double], ptr %596, i64 0, i64 2
  %629 = load double, ptr %625, align 8, !tbaa !8, !alias.scope !261
  %630 = load double, ptr %626, align 8, !tbaa !8, !alias.scope !261
  %631 = load double, ptr %627, align 8, !tbaa !8, !alias.scope !261
  %632 = load double, ptr %628, align 8, !tbaa !8, !alias.scope !261
  %633 = insertelement <4 x double> poison, double %629, i64 0
  %634 = insertelement <4 x double> %633, double %630, i64 1
  %635 = insertelement <4 x double> %634, double %631, i64 2
  %636 = insertelement <4 x double> %635, double %632, i64 3
  %637 = fmul <4 x double> %586, %636
  %638 = add i32 %487, %589
  %639 = zext i32 %638 to i64
  %640 = getelementptr inbounds double, ptr %481, i64 %639
  store <4 x double> %637, ptr %640, align 8, !tbaa !8, !alias.scope !262, !noalias !263
  %641 = add nuw i64 %588, 4
  %642 = icmp eq i64 %641, %170
  br i1 %642, label %643, label %587, !llvm.loop !264

643:                                              ; preds = %587
  br i1 %171, label %674, label %644

644:                                              ; preds = %498, %488, %479, %643
  %645 = phi i64 [ 0, %498 ], [ 0, %488 ], [ 0, %479 ], [ %170, %643 ]
  br label %646

646:                                              ; preds = %644, %646
  %647 = phi i64 [ %670, %646 ], [ %645, %644 ]
  %648 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %647
  %649 = load double, ptr %480, align 8, !tbaa !8
  %650 = load double, ptr %648, align 8, !tbaa !8
  %651 = fmul double %649, %650
  %652 = trunc i64 %647 to i32
  %653 = add i32 %483, %652
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds double, ptr %481, i64 %654
  store double %651, ptr %655, align 8, !tbaa !8
  %656 = load double, ptr %480, align 8, !tbaa !8
  %657 = getelementptr inbounds [3 x double], ptr %648, i64 0, i64 1
  %658 = load double, ptr %657, align 8, !tbaa !8
  %659 = fmul double %656, %658
  %660 = add i32 %485, %652
  %661 = zext i32 %660 to i64
  %662 = getelementptr inbounds double, ptr %481, i64 %661
  store double %659, ptr %662, align 8, !tbaa !8
  %663 = load double, ptr %480, align 8, !tbaa !8
  %664 = getelementptr inbounds [3 x double], ptr %648, i64 0, i64 2
  %665 = load double, ptr %664, align 8, !tbaa !8
  %666 = fmul double %663, %665
  %667 = add i32 %487, %652
  %668 = zext i32 %667 to i64
  %669 = getelementptr inbounds double, ptr %481, i64 %668
  store double %666, ptr %669, align 8, !tbaa !8
  %670 = add nuw nsw i64 %647, 1
  %671 = icmp eq i64 %670, %148
  br i1 %671, label %674, label %646, !llvm.loop !265

672:                                              ; preds = %477
  %673 = icmp eq ptr %478, null
  br i1 %673, label %682, label %674

674:                                              ; preds = %646, %643, %672
  call void @_ZdlPv(ptr noundef nonnull %478) #17
  br label %682

675:                                              ; preds = %454
  %676 = landingpad { ptr, i32 }
          cleanup
  br label %683

677:                                              ; preds = %463, %459
  %678 = landingpad { ptr, i32 }
          cleanup
  %679 = load ptr, ptr %12, align 8, !tbaa !25
  %680 = icmp eq ptr %679, null
  br i1 %680, label %683, label %681

681:                                              ; preds = %677
  call void @_ZdlPv(ptr noundef nonnull %679) #17
  br label %683

682:                                              ; preds = %674, %672
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #15
  br label %685

683:                                              ; preds = %681, %677, %675
  %684 = phi { ptr, i32 } [ %676, %675 ], [ %678, %677 ], [ %678, %681 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #15
  br label %995

685:                                              ; preds = %233, %195, %449, %682, %193, %184
  br i1 %142, label %980, label %686

686:                                              ; preds = %685
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #15
  br i1 %130, label %687, label %688

687:                                              ; preds = %686
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  br label %695

688:                                              ; preds = %686
  %689 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %143) #16
          to label %690 unwind label %698

690:                                              ; preds = %688
  store ptr %689, ptr %13, align 8, !tbaa !51
  %691 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %689, i64 %129
  store ptr %691, ptr %144, align 8, !tbaa !212
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %689, i8 0, i64 %143, i1 false), !tbaa !8
  %692 = getelementptr i8, ptr %689, i64 %143
  store ptr %692, ptr %145, align 8, !tbaa !49
  %693 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %143) #16
          to label %694 unwind label %700

694:                                              ; preds = %690
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %693, i8 0, i64 %143, i1 false), !tbaa !8
  br label %695

695:                                              ; preds = %694, %687
  %696 = phi ptr [ null, %687 ], [ %693, %694 ]
  %697 = load i32, ptr %128, align 8, !tbaa !61
  switch i32 %697, label %964 [
    i32 0, label %702
    i32 1, label %768
    i32 2, label %831
    i32 256, label %894
  ]

698:                                              ; preds = %688
  %699 = landingpad { ptr, i32 }
          cleanup
  br label %978

700:                                              ; preds = %690
  %701 = landingpad { ptr, i32 }
          cleanup
  br label %973

702:                                              ; preds = %695
  %703 = load ptr, ptr %146, align 8, !tbaa !133
  %704 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %705 unwind label %765

705:                                              ; preds = %702
  %706 = getelementptr inbounds %"class.std::vector.72", ptr %703, i64 %185
  %707 = zext i32 %704 to i64
  %708 = or i64 %135, %707
  %709 = load ptr, ptr %145, align 8, !tbaa !49
  %710 = load ptr, ptr %13, align 8, !tbaa !51
  %711 = ptrtoint ptr %709 to i64
  %712 = ptrtoint ptr %710 to i64
  %713 = sub i64 %711, %712
  %714 = sdiv exact i64 %713, 72
  %715 = shl i64 %714, 32
  %716 = load ptr, ptr %1, align 8, !tbaa !5
  %717 = getelementptr inbounds ptr, ptr %716, i64 5
  %718 = load ptr, ptr %717, align 8
  invoke void %718(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %706, i64 %708, ptr nonnull %13, i64 %715, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 1)
          to label %719 unwind label %765

719:                                              ; preds = %705
  br i1 %136, label %964, label %720

720:                                              ; preds = %719
  %721 = load ptr, ptr %13, align 8, !tbaa !51
  %722 = load ptr, ptr %147, align 8, !tbaa !130
  %723 = zext i32 %192 to i64
  %724 = getelementptr inbounds %"class.std::vector.67", ptr %722, i64 %723
  %725 = load ptr, ptr %724, align 8, !tbaa !25
  %726 = add i32 %192, 1
  %727 = zext i32 %726 to i64
  %728 = getelementptr inbounds %"class.std::vector.67", ptr %722, i64 %727
  %729 = load ptr, ptr %728, align 8, !tbaa !25
  %730 = add i32 %192, 2
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds %"class.std::vector.67", ptr %722, i64 %731
  %733 = load ptr, ptr %732, align 8, !tbaa !25
  br label %734

734:                                              ; preds = %720, %734
  %735 = phi i64 [ 0, %720 ], [ %763, %734 ]
  %736 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %721, i64 %735
  %737 = getelementptr inbounds %"class.dealii::Tensor", ptr %725, i64 %735
  %738 = load double, ptr %736, align 8, !tbaa !8
  store double %738, ptr %737, align 8, !tbaa !8
  %739 = getelementptr inbounds [3 x double], ptr %736, i64 0, i64 1
  %740 = load double, ptr %739, align 8, !tbaa !8
  %741 = getelementptr inbounds [3 x double], ptr %737, i64 0, i64 1
  store double %740, ptr %741, align 8, !tbaa !8
  %742 = getelementptr inbounds [3 x double], ptr %736, i64 0, i64 2
  %743 = load double, ptr %742, align 8, !tbaa !8
  %744 = getelementptr inbounds [3 x double], ptr %737, i64 0, i64 2
  store double %743, ptr %744, align 8, !tbaa !8
  %745 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 1
  %746 = getelementptr inbounds %"class.dealii::Tensor", ptr %729, i64 %735
  %747 = load double, ptr %745, align 8, !tbaa !8
  store double %747, ptr %746, align 8, !tbaa !8
  %748 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 1, i32 0, i64 1
  %749 = load double, ptr %748, align 8, !tbaa !8
  %750 = getelementptr inbounds [3 x double], ptr %746, i64 0, i64 1
  store double %749, ptr %750, align 8, !tbaa !8
  %751 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 1, i32 0, i64 2
  %752 = load double, ptr %751, align 8, !tbaa !8
  %753 = getelementptr inbounds [3 x double], ptr %746, i64 0, i64 2
  store double %752, ptr %753, align 8, !tbaa !8
  %754 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 2
  %755 = getelementptr inbounds %"class.dealii::Tensor", ptr %733, i64 %735
  %756 = load double, ptr %754, align 8, !tbaa !8
  store double %756, ptr %755, align 8, !tbaa !8
  %757 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 2, i32 0, i64 1
  %758 = load double, ptr %757, align 8, !tbaa !8
  %759 = getelementptr inbounds [3 x double], ptr %755, i64 0, i64 1
  store double %758, ptr %759, align 8, !tbaa !8
  %760 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 2, i32 0, i64 2
  %761 = load double, ptr %760, align 8, !tbaa !8
  %762 = getelementptr inbounds [3 x double], ptr %755, i64 0, i64 2
  store double %761, ptr %762, align 8, !tbaa !8
  %763 = add nuw nsw i64 %735, 1
  %764 = icmp eq i64 %763, %153
  br i1 %764, label %964, label %734

765:                                              ; preds = %897, %894, %834, %831, %771, %768, %705, %702
  %766 = landingpad { ptr, i32 }
          cleanup
  %767 = icmp eq ptr %696, null
  br i1 %767, label %973, label %972

768:                                              ; preds = %695
  %769 = load ptr, ptr %146, align 8, !tbaa !133
  %770 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %771 unwind label %765

771:                                              ; preds = %768
  %772 = getelementptr inbounds %"class.std::vector.72", ptr %769, i64 %185
  %773 = zext i32 %770 to i64
  %774 = or i64 %135, %773
  %775 = load ptr, ptr %145, align 8, !tbaa !49
  %776 = load ptr, ptr %13, align 8, !tbaa !51
  %777 = ptrtoint ptr %775 to i64
  %778 = ptrtoint ptr %776 to i64
  %779 = sub i64 %777, %778
  %780 = sdiv exact i64 %779, 72
  %781 = shl i64 %780, 32
  %782 = load ptr, ptr %1, align 8, !tbaa !5
  %783 = getelementptr inbounds ptr, ptr %782, i64 5
  %784 = load ptr, ptr %783, align 8
  invoke void %784(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %772, i64 %774, ptr nonnull %13, i64 %781, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 3)
          to label %785 unwind label %765

785:                                              ; preds = %771
  br i1 %136, label %964, label %786

786:                                              ; preds = %785
  %787 = load ptr, ptr %13, align 8, !tbaa !51
  %788 = load ptr, ptr %147, align 8, !tbaa !130
  %789 = zext i32 %192 to i64
  %790 = getelementptr inbounds %"class.std::vector.67", ptr %788, i64 %789
  %791 = load ptr, ptr %790, align 8, !tbaa !25
  %792 = add i32 %192, 1
  %793 = zext i32 %792 to i64
  %794 = getelementptr inbounds %"class.std::vector.67", ptr %788, i64 %793
  %795 = load ptr, ptr %794, align 8, !tbaa !25
  %796 = add i32 %192, 2
  %797 = zext i32 %796 to i64
  %798 = getelementptr inbounds %"class.std::vector.67", ptr %788, i64 %797
  %799 = load ptr, ptr %798, align 8, !tbaa !25
  br label %800

800:                                              ; preds = %786, %800
  %801 = phi i64 [ 0, %786 ], [ %829, %800 ]
  %802 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %787, i64 %801
  %803 = getelementptr inbounds %"class.dealii::Tensor", ptr %791, i64 %801
  %804 = load double, ptr %802, align 8, !tbaa !8
  store double %804, ptr %803, align 8, !tbaa !8
  %805 = getelementptr inbounds [3 x double], ptr %802, i64 0, i64 1
  %806 = load double, ptr %805, align 8, !tbaa !8
  %807 = getelementptr inbounds [3 x double], ptr %803, i64 0, i64 1
  store double %806, ptr %807, align 8, !tbaa !8
  %808 = getelementptr inbounds [3 x double], ptr %802, i64 0, i64 2
  %809 = load double, ptr %808, align 8, !tbaa !8
  %810 = getelementptr inbounds [3 x double], ptr %803, i64 0, i64 2
  store double %809, ptr %810, align 8, !tbaa !8
  %811 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 1
  %812 = getelementptr inbounds %"class.dealii::Tensor", ptr %795, i64 %801
  %813 = load double, ptr %811, align 8, !tbaa !8
  store double %813, ptr %812, align 8, !tbaa !8
  %814 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 1, i32 0, i64 1
  %815 = load double, ptr %814, align 8, !tbaa !8
  %816 = getelementptr inbounds [3 x double], ptr %812, i64 0, i64 1
  store double %815, ptr %816, align 8, !tbaa !8
  %817 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 1, i32 0, i64 2
  %818 = load double, ptr %817, align 8, !tbaa !8
  %819 = getelementptr inbounds [3 x double], ptr %812, i64 0, i64 2
  store double %818, ptr %819, align 8, !tbaa !8
  %820 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 2
  %821 = getelementptr inbounds %"class.dealii::Tensor", ptr %799, i64 %801
  %822 = load double, ptr %820, align 8, !tbaa !8
  store double %822, ptr %821, align 8, !tbaa !8
  %823 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 2, i32 0, i64 1
  %824 = load double, ptr %823, align 8, !tbaa !8
  %825 = getelementptr inbounds [3 x double], ptr %821, i64 0, i64 1
  store double %824, ptr %825, align 8, !tbaa !8
  %826 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 2, i32 0, i64 2
  %827 = load double, ptr %826, align 8, !tbaa !8
  %828 = getelementptr inbounds [3 x double], ptr %821, i64 0, i64 2
  store double %827, ptr %828, align 8, !tbaa !8
  %829 = add nuw nsw i64 %801, 1
  %830 = icmp eq i64 %829, %152
  br i1 %830, label %964, label %800

831:                                              ; preds = %695
  %832 = load ptr, ptr %146, align 8, !tbaa !133
  %833 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %834 unwind label %765

834:                                              ; preds = %831
  %835 = getelementptr inbounds %"class.std::vector.72", ptr %832, i64 %185
  %836 = zext i32 %833 to i64
  %837 = or i64 %135, %836
  %838 = load ptr, ptr %145, align 8, !tbaa !49
  %839 = load ptr, ptr %13, align 8, !tbaa !51
  %840 = ptrtoint ptr %838 to i64
  %841 = ptrtoint ptr %839 to i64
  %842 = sub i64 %840, %841
  %843 = sdiv exact i64 %842, 72
  %844 = shl i64 %843, 32
  %845 = load ptr, ptr %1, align 8, !tbaa !5
  %846 = getelementptr inbounds ptr, ptr %845, i64 5
  %847 = load ptr, ptr %846, align 8
  invoke void %847(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %835, i64 %837, ptr nonnull %13, i64 %844, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 4)
          to label %848 unwind label %765

848:                                              ; preds = %834
  br i1 %136, label %964, label %849

849:                                              ; preds = %848
  %850 = load ptr, ptr %13, align 8, !tbaa !51
  %851 = load ptr, ptr %147, align 8, !tbaa !130
  %852 = zext i32 %192 to i64
  %853 = getelementptr inbounds %"class.std::vector.67", ptr %851, i64 %852
  %854 = load ptr, ptr %853, align 8, !tbaa !25
  %855 = add i32 %192, 1
  %856 = zext i32 %855 to i64
  %857 = getelementptr inbounds %"class.std::vector.67", ptr %851, i64 %856
  %858 = load ptr, ptr %857, align 8, !tbaa !25
  %859 = add i32 %192, 2
  %860 = zext i32 %859 to i64
  %861 = getelementptr inbounds %"class.std::vector.67", ptr %851, i64 %860
  %862 = load ptr, ptr %861, align 8, !tbaa !25
  br label %863

863:                                              ; preds = %849, %863
  %864 = phi i64 [ 0, %849 ], [ %892, %863 ]
  %865 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %850, i64 %864
  %866 = getelementptr inbounds %"class.dealii::Tensor", ptr %854, i64 %864
  %867 = load double, ptr %865, align 8, !tbaa !8
  store double %867, ptr %866, align 8, !tbaa !8
  %868 = getelementptr inbounds [3 x double], ptr %865, i64 0, i64 1
  %869 = load double, ptr %868, align 8, !tbaa !8
  %870 = getelementptr inbounds [3 x double], ptr %866, i64 0, i64 1
  store double %869, ptr %870, align 8, !tbaa !8
  %871 = getelementptr inbounds [3 x double], ptr %865, i64 0, i64 2
  %872 = load double, ptr %871, align 8, !tbaa !8
  %873 = getelementptr inbounds [3 x double], ptr %866, i64 0, i64 2
  store double %872, ptr %873, align 8, !tbaa !8
  %874 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 1
  %875 = getelementptr inbounds %"class.dealii::Tensor", ptr %858, i64 %864
  %876 = load double, ptr %874, align 8, !tbaa !8
  store double %876, ptr %875, align 8, !tbaa !8
  %877 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 1, i32 0, i64 1
  %878 = load double, ptr %877, align 8, !tbaa !8
  %879 = getelementptr inbounds [3 x double], ptr %875, i64 0, i64 1
  store double %878, ptr %879, align 8, !tbaa !8
  %880 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 1, i32 0, i64 2
  %881 = load double, ptr %880, align 8, !tbaa !8
  %882 = getelementptr inbounds [3 x double], ptr %875, i64 0, i64 2
  store double %881, ptr %882, align 8, !tbaa !8
  %883 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 2
  %884 = getelementptr inbounds %"class.dealii::Tensor", ptr %862, i64 %864
  %885 = load double, ptr %883, align 8, !tbaa !8
  store double %885, ptr %884, align 8, !tbaa !8
  %886 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 2, i32 0, i64 1
  %887 = load double, ptr %886, align 8, !tbaa !8
  %888 = getelementptr inbounds [3 x double], ptr %884, i64 0, i64 1
  store double %887, ptr %888, align 8, !tbaa !8
  %889 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 2, i32 0, i64 2
  %890 = load double, ptr %889, align 8, !tbaa !8
  %891 = getelementptr inbounds [3 x double], ptr %884, i64 0, i64 2
  store double %890, ptr %891, align 8, !tbaa !8
  %892 = add nuw nsw i64 %864, 1
  %893 = icmp eq i64 %892, %151
  br i1 %893, label %964, label %863

894:                                              ; preds = %695
  %895 = load ptr, ptr %146, align 8, !tbaa !133
  %896 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %897 unwind label %765

897:                                              ; preds = %894
  %898 = getelementptr inbounds %"class.std::vector.72", ptr %895, i64 %185
  %899 = zext i32 %896 to i64
  %900 = or i64 %135, %899
  %901 = load ptr, ptr %145, align 8, !tbaa !49
  %902 = load ptr, ptr %13, align 8, !tbaa !51
  %903 = ptrtoint ptr %901 to i64
  %904 = ptrtoint ptr %902 to i64
  %905 = sub i64 %903, %904
  %906 = sdiv exact i64 %905, 72
  %907 = shl i64 %906, 32
  %908 = load ptr, ptr %1, align 8, !tbaa !5
  %909 = getelementptr inbounds ptr, ptr %908, i64 5
  %910 = load ptr, ptr %909, align 8
  invoke void %910(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %898, i64 %900, ptr nonnull %13, i64 %907, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 256)
          to label %911 unwind label %765

911:                                              ; preds = %897
  br i1 %136, label %964, label %912

912:                                              ; preds = %911
  %913 = getelementptr inbounds double, ptr %70, i64 %185
  %914 = load ptr, ptr %13, align 8, !tbaa !51
  %915 = load ptr, ptr %147, align 8, !tbaa !130
  %916 = zext i32 %192 to i64
  %917 = getelementptr inbounds %"class.std::vector.67", ptr %915, i64 %916
  %918 = load ptr, ptr %917, align 8, !tbaa !25
  %919 = add i32 %192, 1
  %920 = zext i32 %919 to i64
  %921 = getelementptr inbounds %"class.std::vector.67", ptr %915, i64 %920
  %922 = load ptr, ptr %921, align 8, !tbaa !25
  %923 = add i32 %192, 2
  %924 = zext i32 %923 to i64
  %925 = getelementptr inbounds %"class.std::vector.67", ptr %915, i64 %924
  %926 = load ptr, ptr %925, align 8, !tbaa !25
  br label %927

927:                                              ; preds = %912, %927
  %928 = phi i64 [ 0, %912 ], [ %962, %927 ]
  %929 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %914, i64 %928
  %930 = load double, ptr %913, align 8, !tbaa !8
  %931 = getelementptr inbounds [3 x double], ptr %929, i64 0, i64 2
  %932 = load double, ptr %931, align 8, !tbaa !8, !noalias !266
  %933 = fmul double %930, %932
  %934 = getelementptr inbounds %"class.dealii::Tensor", ptr %918, i64 %928
  %935 = load <2 x double>, ptr %929, align 8, !tbaa !8, !noalias !266
  %936 = insertelement <2 x double> poison, double %930, i64 0
  %937 = shufflevector <2 x double> %936, <2 x double> poison, <2 x i32> zeroinitializer
  %938 = fmul <2 x double> %937, %935
  store <2 x double> %938, ptr %934, align 8, !tbaa !8
  %939 = getelementptr inbounds [3 x double], ptr %934, i64 0, i64 2
  store double %933, ptr %939, align 8, !tbaa !8
  %940 = load double, ptr %913, align 8, !tbaa !8
  %941 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %929, i64 0, i64 1
  %942 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %929, i64 0, i64 1, i32 0, i64 2
  %943 = load double, ptr %942, align 8, !tbaa !8, !noalias !266
  %944 = fmul double %940, %943
  %945 = getelementptr inbounds %"class.dealii::Tensor", ptr %922, i64 %928
  %946 = load <2 x double>, ptr %941, align 8, !tbaa !8, !noalias !266
  %947 = insertelement <2 x double> poison, double %940, i64 0
  %948 = shufflevector <2 x double> %947, <2 x double> poison, <2 x i32> zeroinitializer
  %949 = fmul <2 x double> %948, %946
  store <2 x double> %949, ptr %945, align 8, !tbaa !8
  %950 = getelementptr inbounds [3 x double], ptr %945, i64 0, i64 2
  store double %944, ptr %950, align 8, !tbaa !8
  %951 = load double, ptr %913, align 8, !tbaa !8
  %952 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %929, i64 0, i64 2
  %953 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %929, i64 0, i64 2, i32 0, i64 2
  %954 = load double, ptr %953, align 8, !tbaa !8, !noalias !266
  %955 = fmul double %951, %954
  %956 = getelementptr inbounds %"class.dealii::Tensor", ptr %926, i64 %928
  %957 = load <2 x double>, ptr %952, align 8, !tbaa !8, !noalias !266
  %958 = insertelement <2 x double> poison, double %951, i64 0
  %959 = shufflevector <2 x double> %958, <2 x double> poison, <2 x i32> zeroinitializer
  %960 = fmul <2 x double> %959, %957
  store <2 x double> %960, ptr %956, align 8, !tbaa !8
  %961 = getelementptr inbounds [3 x double], ptr %956, i64 0, i64 2
  store double %955, ptr %961, align 8, !tbaa !8
  %962 = add nuw nsw i64 %928, 1
  %963 = icmp eq i64 %962, %150
  br i1 %963, label %964, label %927

964:                                              ; preds = %927, %863, %800, %734, %911, %848, %785, %719, %695
  %965 = icmp eq ptr %696, null
  br i1 %965, label %967, label %966

966:                                              ; preds = %964
  call void @_ZdlPv(ptr noundef nonnull %696) #17
  br label %967

967:                                              ; preds = %966, %964
  %968 = load ptr, ptr %13, align 8, !tbaa !51
  %969 = icmp eq ptr %968, null
  br i1 %969, label %971, label %970

970:                                              ; preds = %967
  call void @_ZdlPv(ptr noundef nonnull %968) #17
  br label %971

971:                                              ; preds = %970, %967
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #15
  br label %980

972:                                              ; preds = %765
  call void @_ZdlPv(ptr noundef nonnull %696) #17
  br label %973

973:                                              ; preds = %972, %765, %700
  %974 = phi { ptr, i32 } [ %701, %700 ], [ %766, %765 ], [ %766, %972 ]
  %975 = load ptr, ptr %13, align 8, !tbaa !51
  %976 = icmp eq ptr %975, null
  br i1 %976, label %978, label %977

977:                                              ; preds = %973
  call void @_ZdlPv(ptr noundef nonnull %975) #17
  br label %978

978:                                              ; preds = %977, %973, %698
  %979 = phi { ptr, i32 } [ %699, %698 ], [ %974, %973 ], [ %974, %977 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #15
  br label %995

980:                                              ; preds = %971, %685
  %981 = add nuw nsw i64 %185, 1
  %982 = load i32, ptr %64, align 8, !tbaa !129
  %983 = zext i32 %982 to i64
  %984 = icmp ult i64 %981, %983
  br i1 %984, label %184, label %180

985:                                              ; preds = %180
  %986 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %987 unwind label %992

987:                                              ; preds = %985
  invoke void @_ZNK6dealii13FiniteElementILi3ELi3EE11compute_2ndERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRNS3_16InternalDataBaseERNS1_16InternalDataBaseERNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(728) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %986, ptr noundef nonnull align 8 dereferenceable(185) %5, ptr noundef nonnull align 8 dereferenceable(216) %6, ptr noundef nonnull align 8 dereferenceable(436) %7)
          to label %988 unwind label %992

988:                                              ; preds = %987, %180
  %989 = icmp eq ptr %181, null
  br i1 %989, label %991, label %990

990:                                              ; preds = %988
  call void @_ZdlPv(ptr noundef nonnull %181) #17
  br label %991

991:                                              ; preds = %988, %990
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #15
  ret void

992:                                              ; preds = %985, %987
  %993 = landingpad { ptr, i32 }
          cleanup
  %994 = icmp eq ptr %181, null
  br i1 %994, label %998, label %995

995:                                              ; preds = %248, %450, %683, %978, %992
  %996 = phi { ptr, i32 } [ %993, %992 ], [ %249, %248 ], [ %451, %450 ], [ %684, %683 ], [ %979, %978 ]
  %997 = phi ptr [ %181, %992 ], [ %70, %248 ], [ %70, %450 ], [ %70, %683 ], [ %70, %978 ]
  call void @_ZdlPv(ptr noundef nonnull %997) #17
  br label %998

998:                                              ; preds = %995, %992
  %999 = phi { ptr, i32 } [ %996, %995 ], [ %993, %992 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #15
  resume { ptr, i32 } %999
}

declare i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor4faceEjbbbj(i32 noundef, i1 noundef zeroext, i1 noundef zeroext, i1 noundef zeroext, i32 noundef) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE22fill_fe_subface_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(976) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %3, i32 noundef %4, ptr noundef nonnull align 8 dereferenceable(128) %5, ptr noundef nonnull align 8 dereferenceable(185) %6, ptr noundef nonnull align 8 dereferenceable(185) %7, ptr noundef nonnull align 8 dereferenceable(436) %8) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %11 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %12 = alloca %"class.std::vector.67", align 8
  %13 = alloca %"class.std::vector.67", align 8
  %14 = alloca %"class.std::vector.72", align 8
  %15 = getelementptr inbounds %"class.dealii::Quadrature.110", ptr %5, i64 0, i32 3
  %16 = getelementptr inbounds %"class.dealii::Quadrature.110", ptr %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !127
  %18 = load ptr, ptr %15, align 8, !tbaa !128
  %19 = ptrtoint ptr %17 to i64
  %20 = ptrtoint ptr %18 to i64
  %21 = sub i64 %19, %20
  %22 = lshr exact i64 %21, 3
  %23 = trunc i64 %22 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #15
  call void @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC1Ev(ptr noundef nonnull align 4 dereferenceable(4) %10)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #15
  %24 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !216
  %26 = getelementptr inbounds %"class.dealii::Triangulation", ptr %25, i64 0, i32 1
  %27 = load i32, ptr %2, align 8, !tbaa !218
  %28 = sext i32 %27 to i64
  %29 = load ptr, ptr %26, align 8, !tbaa !219
  %30 = getelementptr inbounds ptr, ptr %29, i64 %28
  %31 = load ptr, ptr %30, align 8, !tbaa !33
  %32 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 1
  %33 = load i32, ptr %32, align 4, !tbaa !221
  %34 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %31, i64 0, i32 4, i32 1
  %35 = mul i32 %33, 6
  %36 = add i32 %35, %3
  %37 = load ptr, ptr %34, align 8, !tbaa !222
  %38 = lshr i32 %36, 6
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i64, ptr %37, i64 %39
  %41 = and i32 %36, 63
  %42 = zext i32 %41 to i64
  %43 = shl nuw i64 1, %42
  %44 = load i64, ptr %40, align 8, !tbaa !223
  %45 = and i64 %43, %44
  %46 = icmp ne i64 %45, 0
  %47 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %31, i64 0, i32 4, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !222
  %49 = getelementptr inbounds i64, ptr %48, i64 %39
  %50 = load i64, ptr %49, align 8, !tbaa !223
  %51 = and i64 %43, %50
  %52 = icmp ne i64 %51, 0
  %53 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %31, i64 0, i32 4, i32 3
  %54 = load ptr, ptr %53, align 8, !tbaa !222
  %55 = getelementptr inbounds i64, ptr %54, i64 %39
  %56 = load i64, ptr %55, align 8, !tbaa !223
  %57 = and i64 %56, %43
  %58 = icmp ne i64 %57, 0
  %59 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %31, i64 0, i32 4
  %60 = sext i32 %33 to i64
  %61 = load ptr, ptr %59, align 8, !tbaa !269, !noalias !145
  %62 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %61, i64 %60
  %63 = zext i32 %3 to i64
  %64 = getelementptr inbounds [6 x i32], ptr %62, i64 0, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !34, !noalias !145
  %66 = getelementptr inbounds %"class.dealii::Triangulation", ptr %25, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !271
  %68 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.160", ptr %67, i64 0, i32 2
  %69 = sext i32 %65 to i64
  %70 = load ptr, ptr %68, align 8, !tbaa !285
  %71 = getelementptr inbounds %"class.dealii::RefinementCase", ptr %70, i64 %69
  %72 = load i8, ptr %71, align 1
  %73 = and i8 %72, 3
  switch i8 %73, label %117 [
    i8 3, label %116
    i8 1, label %74
    i8 2, label %95
  ]

74:                                               ; preds = %9
  %75 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.160", ptr %67, i64 0, i32 1
  %76 = shl i32 %65, 1
  %77 = zext i32 %76 to i64
  %78 = load ptr, ptr %75, align 8, !tbaa !287
  %79 = getelementptr inbounds i32, ptr %78, i64 %77
  %80 = load i32, ptr %79, align 4, !tbaa !34, !noalias !145
  %81 = shl i32 %80, 1
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i32, ptr %78, i64 %82
  %84 = load i32, ptr %83, align 4, !tbaa !34
  %85 = icmp eq i32 %84, -1
  %86 = add i32 %81, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %78, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !34
  %90 = icmp eq i32 %89, -1
  br i1 %85, label %93, label %91

91:                                               ; preds = %74
  %92 = select i1 %90, i8 2, i8 4
  br label %117

93:                                               ; preds = %74
  %94 = select i1 %90, i8 1, i8 3
  br label %117

95:                                               ; preds = %9
  %96 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.160", ptr %67, i64 0, i32 1
  %97 = shl i32 %65, 1
  %98 = zext i32 %97 to i64
  %99 = load ptr, ptr %96, align 8, !tbaa !287
  %100 = getelementptr inbounds i32, ptr %99, i64 %98
  %101 = load i32, ptr %100, align 4, !tbaa !34, !noalias !145
  %102 = shl i32 %101, 1
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %99, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !34
  %106 = icmp eq i32 %105, -1
  %107 = add i32 %102, 2
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i32, ptr %99, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !34
  %111 = icmp eq i32 %110, -1
  br i1 %106, label %114, label %112

112:                                              ; preds = %95
  %113 = select i1 %111, i8 6, i8 8
  br label %117

114:                                              ; preds = %95
  %115 = select i1 %111, i8 5, i8 7
  br label %117

116:                                              ; preds = %9
  br label %117

117:                                              ; preds = %9, %91, %93, %112, %114, %116
  %118 = phi i8 [ 9, %116 ], [ 0, %9 ], [ %92, %91 ], [ %94, %93 ], [ %113, %112 ], [ %115, %114 ]
  %119 = call i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEE(i32 noundef %3, i32 noundef %4, i1 noundef zeroext %46, i1 noundef zeroext %52, i1 noundef zeroext %58, i32 noundef %23, i8 %118)
  store i32 %119, ptr %11, align 4
  %120 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %7, i64 0, i32 2
  %121 = load i32, ptr %120, align 4, !tbaa !118
  %122 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %7, i64 0, i32 3
  %123 = load i32, ptr %122, align 8, !tbaa !125
  %124 = or i32 %123, %121
  %125 = getelementptr inbounds i8, ptr %0, i64 112
  %126 = load i32, ptr %125, align 8, !tbaa !129
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %241, label %128

128:                                              ; preds = %117
  %129 = zext i32 %126 to i64
  %130 = shl nuw nsw i64 %129, 3
  %131 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %130) #16
  %132 = getelementptr inbounds double, ptr %131, i64 %129
  %133 = add nuw nsw i64 %129, 2305843009213693951
  %134 = and i64 %133, 2305843009213693951
  %135 = add nuw nsw i64 %134, 1
  %136 = icmp ult i64 %134, 15
  br i1 %136, label %152, label %137

137:                                              ; preds = %128
  %138 = and i64 %135, 4611686018427387888
  %139 = shl i64 %138, 3
  %140 = getelementptr i8, ptr %131, i64 %139
  br label %141

141:                                              ; preds = %141, %137
  %142 = phi i64 [ 0, %137 ], [ %148, %141 ]
  %143 = shl i64 %142, 3
  %144 = getelementptr i8, ptr %131, i64 %143
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %144, align 8, !tbaa !8
  %145 = getelementptr double, ptr %144, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %145, align 8, !tbaa !8
  %146 = getelementptr double, ptr %144, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %146, align 8, !tbaa !8
  %147 = getelementptr double, ptr %144, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %147, align 8, !tbaa !8
  %148 = add nuw i64 %142, 16
  %149 = icmp eq i64 %148, %138
  br i1 %149, label %150, label %141, !llvm.loop !288

150:                                              ; preds = %141
  %151 = icmp eq i64 %135, %138
  br i1 %151, label %158, label %152

152:                                              ; preds = %128, %150
  %153 = phi ptr [ %131, %128 ], [ %140, %150 ]
  br label %154

154:                                              ; preds = %152, %154
  %155 = phi ptr [ %156, %154 ], [ %153, %152 ]
  store double 1.000000e+00, ptr %155, align 8, !tbaa !8
  %156 = getelementptr inbounds double, ptr %155, i64 1
  %157 = icmp eq ptr %156, %132
  br i1 %157, label %158, label %154, !llvm.loop !289

158:                                              ; preds = %154, %150
  %159 = add nuw nsw i64 %129, 2305843009213693951
  %160 = and i64 %159, 2305843009213693951
  %161 = add nuw nsw i64 %160, 1
  %162 = icmp ult i64 %160, 15
  br i1 %162, label %178, label %163

163:                                              ; preds = %158
  %164 = and i64 %161, 4611686018427387888
  %165 = shl i64 %164, 3
  %166 = getelementptr i8, ptr %131, i64 %165
  br label %167

167:                                              ; preds = %167, %163
  %168 = phi i64 [ 0, %163 ], [ %174, %167 ]
  %169 = shl i64 %168, 3
  %170 = getelementptr i8, ptr %131, i64 %169
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %170, align 8, !tbaa !8
  %171 = getelementptr double, ptr %170, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %171, align 8, !tbaa !8
  %172 = getelementptr double, ptr %170, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %172, align 8, !tbaa !8
  %173 = getelementptr double, ptr %170, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %173, align 8, !tbaa !8
  %174 = add nuw i64 %168, 16
  %175 = icmp eq i64 %174, %164
  br i1 %175, label %176, label %167, !llvm.loop !290

176:                                              ; preds = %167
  %177 = icmp eq i64 %161, %164
  br i1 %177, label %184, label %178

178:                                              ; preds = %158, %176
  %179 = phi ptr [ %131, %158 ], [ %166, %176 ]
  br label %180

180:                                              ; preds = %178, %180
  %181 = phi ptr [ %182, %180 ], [ %179, %178 ]
  store double 1.000000e+00, ptr %181, align 8, !tbaa !8
  %182 = getelementptr inbounds double, ptr %181, i64 1
  %183 = icmp eq ptr %182, %132
  br i1 %183, label %184, label %180, !llvm.loop !291

184:                                              ; preds = %180, %176
  br i1 %127, label %241, label %185

185:                                              ; preds = %184
  %186 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %8, i64 0, i32 14
  %187 = and i32 %124, 1
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 1
  %190 = and i64 %22, 4294967295
  %191 = icmp eq i64 %190, 0
  %192 = mul nuw nsw i64 %190, 24
  %193 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %13, i64 0, i32 2
  %194 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %13, i64 0, i32 1
  %195 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %7, i64 0, i32 1
  %196 = shl nuw i64 %190, 32
  %197 = icmp eq i32 %23, 0
  %198 = getelementptr inbounds %"class.dealii::TableBase", ptr %8, i64 0, i32 1
  %199 = getelementptr inbounds %"class.dealii::TableBase", ptr %8, i64 0, i32 3, i32 0, i32 0, i64 1
  %200 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %12, i64 0, i32 2
  %201 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %12, i64 0, i32 1
  %202 = and i32 %124, 2
  %203 = icmp eq i32 %202, 0
  %204 = mul nuw nsw i64 %190, 72
  %205 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %14, i64 0, i32 2
  %206 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %14, i64 0, i32 1
  %207 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %7, i64 0, i32 2
  %208 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %8, i64 0, i32 1
  %209 = and i64 %22, 4294967295
  %210 = and i64 %22, 4294967295
  %211 = and i64 %22, 4294967295
  %212 = and i64 %22, 4294967295
  %213 = and i64 %22, 4294967295
  %214 = and i64 %22, 4294967295
  %215 = add nsw i64 %209, -1
  %216 = shl nuw nsw i64 %209, 3
  %217 = mul nuw nsw i64 %209, 24
  %218 = add nsw i64 %217, -16
  %219 = add nsw i64 %217, -8
  %220 = add nsw i64 %209, -1
  %221 = shl nuw nsw i64 %209, 3
  %222 = mul nuw nsw i64 %209, 24
  %223 = add nsw i64 %222, -16
  %224 = add nsw i64 %222, -8
  %225 = icmp ult i64 %209, 40
  %226 = trunc i64 %220 to i32
  %227 = trunc i64 %220 to i32
  %228 = icmp ugt i64 %220, 4294967295
  %229 = trunc i64 %220 to i32
  %230 = and i64 %22, 3
  %231 = sub nsw i64 %209, %230
  %232 = icmp eq i64 %230, 0
  %233 = icmp ult i64 %209, 60
  %234 = trunc i64 %215 to i32
  %235 = trunc i64 %215 to i32
  %236 = icmp ugt i64 %215, 4294967295
  %237 = trunc i64 %215 to i32
  %238 = and i64 %22, 3
  %239 = sub nsw i64 %209, %238
  %240 = icmp eq i64 %238, 0
  br label %245

241:                                              ; preds = %1041, %117, %184
  %242 = phi ptr [ %131, %184 ], [ null, %117 ], [ %131, %1041 ]
  %243 = and i32 %124, 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %1049, label %1046

245:                                              ; preds = %185, %1041
  %246 = phi i64 [ 0, %185 ], [ %1042, %1041 ]
  %247 = shl nuw nsw i64 %246, 3
  %248 = getelementptr i8, ptr %131, i64 %247
  %249 = add nuw i64 %247, 8
  %250 = getelementptr i8, ptr %131, i64 %249
  %251 = load ptr, ptr %186, align 8, !tbaa !154
  %252 = getelementptr inbounds i32, ptr %251, i64 %246
  %253 = load i32, ptr %252, align 4, !tbaa !34
  br i1 %188, label %746, label %254

254:                                              ; preds = %245
  %255 = load i32, ptr %189, align 8, !tbaa !61
  switch i32 %255, label %746 [
    i32 0, label %256
    i32 1, label %311
    i32 2, label %311
    i32 256, label %513
  ]

256:                                              ; preds = %254
  br i1 %197, label %746, label %257

257:                                              ; preds = %256
  %258 = add i32 %253, 1
  %259 = add i32 %253, 2
  br label %260

260:                                              ; preds = %257, %294
  %261 = phi i32 [ %307, %294 ], [ 0, %257 ]
  %262 = load ptr, ptr %195, align 8, !tbaa !130
  %263 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %264 unwind label %309

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.std::vector.67", ptr %262, i64 %246
  %266 = add i32 %263, %261
  %267 = zext i32 %266 to i64
  %268 = load ptr, ptr %265, align 8, !tbaa !25
  %269 = getelementptr inbounds %"class.dealii::Tensor", ptr %268, i64 %267
  %270 = load double, ptr %269, align 8, !tbaa !8
  %271 = load ptr, ptr %198, align 8, !tbaa !35
  %272 = load i32, ptr %199, align 8, !tbaa !34
  %273 = mul i32 %272, %253
  %274 = add i32 %273, %261
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds double, ptr %271, i64 %275
  store double %270, ptr %276, align 8, !tbaa !8
  %277 = load ptr, ptr %195, align 8, !tbaa !130
  %278 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %279 unwind label %309

279:                                              ; preds = %264
  %280 = getelementptr inbounds %"class.std::vector.67", ptr %277, i64 %246
  %281 = add i32 %278, %261
  %282 = zext i32 %281 to i64
  %283 = load ptr, ptr %280, align 8, !tbaa !25
  %284 = getelementptr inbounds %"class.dealii::Tensor", ptr %283, i64 %282, i32 0, i64 1
  %285 = load double, ptr %284, align 8, !tbaa !8
  %286 = load ptr, ptr %198, align 8, !tbaa !35
  %287 = load i32, ptr %199, align 8, !tbaa !34
  %288 = mul i32 %287, %258
  %289 = add i32 %288, %261
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds double, ptr %286, i64 %290
  store double %285, ptr %291, align 8, !tbaa !8
  %292 = load ptr, ptr %195, align 8, !tbaa !130
  %293 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %294 unwind label %309

294:                                              ; preds = %279
  %295 = getelementptr inbounds %"class.std::vector.67", ptr %292, i64 %246
  %296 = add i32 %293, %261
  %297 = zext i32 %296 to i64
  %298 = load ptr, ptr %295, align 8, !tbaa !25
  %299 = getelementptr inbounds %"class.dealii::Tensor", ptr %298, i64 %297, i32 0, i64 2
  %300 = load double, ptr %299, align 8, !tbaa !8
  %301 = load ptr, ptr %198, align 8, !tbaa !35
  %302 = load i32, ptr %199, align 8, !tbaa !34
  %303 = mul i32 %302, %259
  %304 = add i32 %303, %261
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds double, ptr %301, i64 %305
  store double %300, ptr %306, align 8, !tbaa !8
  %307 = add nuw i32 %261, 1
  %308 = icmp eq i32 %307, %23
  br i1 %308, label %746, label %260

309:                                              ; preds = %279, %264, %260
  %310 = landingpad { ptr, i32 }
          cleanup
  br label %1056

311:                                              ; preds = %254, %254
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #15
  br i1 %191, label %312, label %313

312:                                              ; preds = %311
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  br label %318

313:                                              ; preds = %311
  %314 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %192) #16
          to label %315 unwind label %503

315:                                              ; preds = %313
  store ptr %314, ptr %12, align 8, !tbaa !25
  %316 = getelementptr inbounds %"class.dealii::Tensor", ptr %314, i64 %190
  store ptr %316, ptr %200, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %314, i8 0, i64 %192, i1 false), !tbaa !8
  %317 = getelementptr i8, ptr %314, i64 %192
  br label %318

318:                                              ; preds = %315, %312
  %319 = phi ptr [ null, %312 ], [ %317, %315 ]
  store ptr %319, ptr %201, align 8, !tbaa !23
  %320 = load ptr, ptr %195, align 8, !tbaa !130
  %321 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %322 unwind label %505

322:                                              ; preds = %318
  %323 = getelementptr inbounds %"class.std::vector.67", ptr %320, i64 %246
  %324 = zext i32 %321 to i64
  %325 = or i64 %196, %324
  %326 = load ptr, ptr %201, align 8, !tbaa !23
  %327 = load ptr, ptr %12, align 8, !tbaa !25
  %328 = ptrtoint ptr %326 to i64
  %329 = ptrtoint ptr %327 to i64
  %330 = sub i64 %328, %329
  %331 = sdiv exact i64 %330, 24
  %332 = load i32, ptr %189, align 8, !tbaa !61
  %333 = shl i64 %331, 32
  %334 = load ptr, ptr %1, align 8, !tbaa !5
  %335 = getelementptr inbounds ptr, ptr %334, i64 4
  %336 = load ptr, ptr %335, align 8
  invoke void %336(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %323, i64 %325, ptr nonnull %12, i64 %333, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef %332)
          to label %337 unwind label %505

337:                                              ; preds = %322
  %338 = load ptr, ptr %12, align 8, !tbaa !25
  br i1 %197, label %500, label %339

339:                                              ; preds = %337
  %340 = load ptr, ptr %198, align 8, !tbaa !35
  %341 = load i32, ptr %199, align 8, !tbaa !34
  %342 = mul i32 %341, %253
  %343 = add i32 %253, 1
  %344 = mul i32 %341, %343
  %345 = add i32 %253, 2
  %346 = mul i32 %341, %345
  br i1 %233, label %478, label %347

347:                                              ; preds = %339
  %348 = xor i32 %342, -1
  %349 = icmp ult i32 %348, %234
  %350 = xor i32 %344, -1
  %351 = icmp ult i32 %350, %235
  %352 = or i1 %351, %236
  %353 = xor i32 %346, -1
  %354 = icmp ult i32 %353, %237
  %355 = or i1 %349, %352
  %356 = or i1 %354, %355
  br i1 %356, label %478, label %357

357:                                              ; preds = %347
  %358 = zext i32 %342 to i64
  %359 = shl nuw nsw i64 %358, 3
  %360 = getelementptr i8, ptr %340, i64 %359
  %361 = getelementptr i8, ptr %340, i64 %216
  %362 = getelementptr i8, ptr %361, i64 %359
  %363 = zext i32 %344 to i64
  %364 = shl nuw nsw i64 %363, 3
  %365 = getelementptr i8, ptr %340, i64 %364
  %366 = getelementptr i8, ptr %361, i64 %364
  %367 = zext i32 %346 to i64
  %368 = shl nuw nsw i64 %367, 3
  %369 = getelementptr i8, ptr %340, i64 %368
  %370 = getelementptr i8, ptr %340, i64 %216
  %371 = getelementptr i8, ptr %370, i64 %368
  %372 = getelementptr i8, ptr %338, i64 %218
  %373 = getelementptr i8, ptr %338, i64 8
  %374 = getelementptr i8, ptr %338, i64 %219
  %375 = getelementptr i8, ptr %338, i64 16
  %376 = getelementptr i8, ptr %338, i64 %217
  %377 = icmp ult ptr %360, %366
  %378 = icmp ult ptr %365, %362
  %379 = and i1 %377, %378
  %380 = icmp ult ptr %360, %371
  %381 = icmp ult ptr %369, %362
  %382 = and i1 %380, %381
  %383 = or i1 %379, %382
  %384 = icmp ult ptr %360, %372
  %385 = icmp ult ptr %338, %362
  %386 = and i1 %384, %385
  %387 = or i1 %383, %386
  %388 = icmp ult ptr %360, %374
  %389 = icmp ult ptr %373, %362
  %390 = and i1 %388, %389
  %391 = or i1 %387, %390
  %392 = icmp ult ptr %360, %376
  %393 = icmp ult ptr %375, %362
  %394 = and i1 %392, %393
  %395 = or i1 %391, %394
  %396 = icmp ult ptr %365, %371
  %397 = icmp ult ptr %369, %366
  %398 = and i1 %396, %397
  %399 = or i1 %395, %398
  %400 = icmp ult ptr %365, %372
  %401 = icmp ult ptr %338, %366
  %402 = and i1 %400, %401
  %403 = or i1 %399, %402
  %404 = icmp ult ptr %365, %374
  %405 = icmp ult ptr %373, %366
  %406 = and i1 %404, %405
  %407 = or i1 %403, %406
  %408 = icmp ult ptr %365, %376
  %409 = icmp ult ptr %375, %366
  %410 = and i1 %408, %409
  %411 = or i1 %407, %410
  %412 = icmp ult ptr %369, %372
  %413 = icmp ult ptr %338, %371
  %414 = and i1 %412, %413
  %415 = or i1 %411, %414
  %416 = icmp ult ptr %369, %374
  %417 = icmp ult ptr %373, %371
  %418 = and i1 %416, %417
  %419 = or i1 %415, %418
  %420 = icmp ult ptr %369, %376
  %421 = icmp ult ptr %375, %371
  %422 = and i1 %420, %421
  %423 = or i1 %419, %422
  br i1 %423, label %478, label %424

424:                                              ; preds = %357, %424
  %425 = phi i64 [ %475, %424 ], [ 0, %357 ]
  %426 = trunc i64 %425 to i32
  %427 = or i64 %425, 1
  %428 = or i64 %425, 2
  %429 = or i64 %425, 3
  %430 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %425
  %431 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %427
  %432 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %428
  %433 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %429
  %434 = load double, ptr %430, align 8, !tbaa !8, !alias.scope !292
  %435 = load double, ptr %431, align 8, !tbaa !8, !alias.scope !292
  %436 = load double, ptr %432, align 8, !tbaa !8, !alias.scope !292
  %437 = load double, ptr %433, align 8, !tbaa !8, !alias.scope !292
  %438 = insertelement <4 x double> poison, double %434, i64 0
  %439 = insertelement <4 x double> %438, double %435, i64 1
  %440 = insertelement <4 x double> %439, double %436, i64 2
  %441 = insertelement <4 x double> %440, double %437, i64 3
  %442 = add i32 %342, %426
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds double, ptr %340, i64 %443
  store <4 x double> %441, ptr %444, align 8, !tbaa !8, !alias.scope !295, !noalias !297
  %445 = getelementptr inbounds [3 x double], ptr %430, i64 0, i64 1
  %446 = getelementptr inbounds [3 x double], ptr %431, i64 0, i64 1
  %447 = getelementptr inbounds [3 x double], ptr %432, i64 0, i64 1
  %448 = getelementptr inbounds [3 x double], ptr %433, i64 0, i64 1
  %449 = load double, ptr %445, align 8, !tbaa !8, !alias.scope !302
  %450 = load double, ptr %446, align 8, !tbaa !8, !alias.scope !302
  %451 = load double, ptr %447, align 8, !tbaa !8, !alias.scope !302
  %452 = load double, ptr %448, align 8, !tbaa !8, !alias.scope !302
  %453 = insertelement <4 x double> poison, double %449, i64 0
  %454 = insertelement <4 x double> %453, double %450, i64 1
  %455 = insertelement <4 x double> %454, double %451, i64 2
  %456 = insertelement <4 x double> %455, double %452, i64 3
  %457 = add i32 %344, %426
  %458 = zext i32 %457 to i64
  %459 = getelementptr inbounds double, ptr %340, i64 %458
  store <4 x double> %456, ptr %459, align 8, !tbaa !8, !alias.scope !303, !noalias !304
  %460 = getelementptr inbounds [3 x double], ptr %430, i64 0, i64 2
  %461 = getelementptr inbounds [3 x double], ptr %431, i64 0, i64 2
  %462 = getelementptr inbounds [3 x double], ptr %432, i64 0, i64 2
  %463 = getelementptr inbounds [3 x double], ptr %433, i64 0, i64 2
  %464 = load double, ptr %460, align 8, !tbaa !8, !alias.scope !305
  %465 = load double, ptr %461, align 8, !tbaa !8, !alias.scope !305
  %466 = load double, ptr %462, align 8, !tbaa !8, !alias.scope !305
  %467 = load double, ptr %463, align 8, !tbaa !8, !alias.scope !305
  %468 = insertelement <4 x double> poison, double %464, i64 0
  %469 = insertelement <4 x double> %468, double %465, i64 1
  %470 = insertelement <4 x double> %469, double %466, i64 2
  %471 = insertelement <4 x double> %470, double %467, i64 3
  %472 = add i32 %346, %426
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds double, ptr %340, i64 %473
  store <4 x double> %471, ptr %474, align 8, !tbaa !8, !alias.scope !306, !noalias !307
  %475 = add nuw i64 %425, 4
  %476 = icmp eq i64 %475, %239
  br i1 %476, label %477, label %424, !llvm.loop !308

477:                                              ; preds = %424
  br i1 %240, label %502, label %478

478:                                              ; preds = %357, %347, %339, %477
  %479 = phi i64 [ 0, %357 ], [ 0, %347 ], [ 0, %339 ], [ %239, %477 ]
  br label %480

480:                                              ; preds = %478, %480
  %481 = phi i64 [ %498, %480 ], [ %479, %478 ]
  %482 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %481
  %483 = load double, ptr %482, align 8, !tbaa !8
  %484 = trunc i64 %481 to i32
  %485 = add i32 %342, %484
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds double, ptr %340, i64 %486
  store double %483, ptr %487, align 8, !tbaa !8
  %488 = getelementptr inbounds [3 x double], ptr %482, i64 0, i64 1
  %489 = load double, ptr %488, align 8, !tbaa !8
  %490 = add i32 %344, %484
  %491 = zext i32 %490 to i64
  %492 = getelementptr inbounds double, ptr %340, i64 %491
  store double %489, ptr %492, align 8, !tbaa !8
  %493 = getelementptr inbounds [3 x double], ptr %482, i64 0, i64 2
  %494 = load double, ptr %493, align 8, !tbaa !8
  %495 = add i32 %346, %484
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds double, ptr %340, i64 %496
  store double %494, ptr %497, align 8, !tbaa !8
  %498 = add nuw nsw i64 %481, 1
  %499 = icmp eq i64 %498, %210
  br i1 %499, label %502, label %480, !llvm.loop !309

500:                                              ; preds = %337
  %501 = icmp eq ptr %338, null
  br i1 %501, label %510, label %502

502:                                              ; preds = %480, %477, %500
  call void @_ZdlPv(ptr noundef nonnull %338) #17
  br label %510

503:                                              ; preds = %313
  %504 = landingpad { ptr, i32 }
          cleanup
  br label %511

505:                                              ; preds = %322, %318
  %506 = landingpad { ptr, i32 }
          cleanup
  %507 = load ptr, ptr %12, align 8, !tbaa !25
  %508 = icmp eq ptr %507, null
  br i1 %508, label %511, label %509

509:                                              ; preds = %505
  call void @_ZdlPv(ptr noundef nonnull %507) #17
  br label %511

510:                                              ; preds = %502, %500
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #15
  br label %746

511:                                              ; preds = %509, %505, %503
  %512 = phi { ptr, i32 } [ %504, %503 ], [ %506, %505 ], [ %506, %509 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #15
  br label %1056

513:                                              ; preds = %254
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #15
  br i1 %191, label %514, label %515

514:                                              ; preds = %513
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  br label %520

515:                                              ; preds = %513
  %516 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %192) #16
          to label %517 unwind label %736

517:                                              ; preds = %515
  store ptr %516, ptr %13, align 8, !tbaa !25
  %518 = getelementptr inbounds %"class.dealii::Tensor", ptr %516, i64 %190
  store ptr %518, ptr %193, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %516, i8 0, i64 %192, i1 false), !tbaa !8
  %519 = getelementptr i8, ptr %516, i64 %192
  br label %520

520:                                              ; preds = %517, %514
  %521 = phi ptr [ null, %514 ], [ %519, %517 ]
  store ptr %521, ptr %194, align 8, !tbaa !23
  %522 = load ptr, ptr %195, align 8, !tbaa !130
  %523 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %524 unwind label %738

524:                                              ; preds = %520
  %525 = getelementptr inbounds %"class.std::vector.67", ptr %522, i64 %246
  %526 = zext i32 %523 to i64
  %527 = or i64 %196, %526
  %528 = load ptr, ptr %194, align 8, !tbaa !23
  %529 = load ptr, ptr %13, align 8, !tbaa !25
  %530 = ptrtoint ptr %528 to i64
  %531 = ptrtoint ptr %529 to i64
  %532 = sub i64 %530, %531
  %533 = sdiv exact i64 %532, 24
  %534 = shl i64 %533, 32
  %535 = load ptr, ptr %1, align 8, !tbaa !5
  %536 = getelementptr inbounds ptr, ptr %535, i64 4
  %537 = load ptr, ptr %536, align 8
  invoke void %537(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %525, i64 %527, ptr nonnull %13, i64 %534, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 256)
          to label %538 unwind label %738

538:                                              ; preds = %524
  %539 = load ptr, ptr %13, align 8, !tbaa !25
  br i1 %197, label %733, label %540

540:                                              ; preds = %538
  %541 = getelementptr inbounds double, ptr %131, i64 %246
  %542 = load ptr, ptr %198, align 8, !tbaa !35
  %543 = load i32, ptr %199, align 8, !tbaa !34
  %544 = mul i32 %543, %253
  %545 = add i32 %253, 1
  %546 = mul i32 %543, %545
  %547 = add i32 %253, 2
  %548 = mul i32 %543, %547
  br i1 %225, label %705, label %549

549:                                              ; preds = %540
  %550 = xor i32 %544, -1
  %551 = icmp ult i32 %550, %226
  %552 = xor i32 %546, -1
  %553 = icmp ult i32 %552, %227
  %554 = or i1 %553, %228
  %555 = xor i32 %548, -1
  %556 = icmp ult i32 %555, %229
  %557 = or i1 %551, %554
  %558 = or i1 %556, %557
  br i1 %558, label %705, label %559

559:                                              ; preds = %549
  %560 = zext i32 %544 to i64
  %561 = shl nuw nsw i64 %560, 3
  %562 = getelementptr i8, ptr %542, i64 %561
  %563 = getelementptr i8, ptr %542, i64 %221
  %564 = getelementptr i8, ptr %563, i64 %561
  %565 = zext i32 %546 to i64
  %566 = shl nuw nsw i64 %565, 3
  %567 = getelementptr i8, ptr %542, i64 %566
  %568 = getelementptr i8, ptr %563, i64 %566
  %569 = zext i32 %548 to i64
  %570 = shl nuw nsw i64 %569, 3
  %571 = getelementptr i8, ptr %542, i64 %570
  %572 = getelementptr i8, ptr %542, i64 %221
  %573 = getelementptr i8, ptr %572, i64 %570
  %574 = getelementptr i8, ptr %539, i64 %223
  %575 = getelementptr i8, ptr %539, i64 8
  %576 = getelementptr i8, ptr %539, i64 %224
  %577 = getelementptr i8, ptr %539, i64 16
  %578 = getelementptr i8, ptr %539, i64 %222
  %579 = icmp ult ptr %562, %568
  %580 = icmp ult ptr %567, %564
  %581 = and i1 %579, %580
  %582 = icmp ult ptr %562, %573
  %583 = icmp ult ptr %571, %564
  %584 = and i1 %582, %583
  %585 = or i1 %581, %584
  %586 = icmp ult ptr %562, %250
  %587 = icmp ult ptr %248, %564
  %588 = and i1 %586, %587
  %589 = or i1 %585, %588
  %590 = icmp ult ptr %562, %574
  %591 = icmp ult ptr %539, %564
  %592 = and i1 %590, %591
  %593 = or i1 %589, %592
  %594 = icmp ult ptr %562, %576
  %595 = icmp ult ptr %575, %564
  %596 = and i1 %594, %595
  %597 = or i1 %593, %596
  %598 = icmp ult ptr %562, %578
  %599 = icmp ult ptr %577, %564
  %600 = and i1 %598, %599
  %601 = or i1 %597, %600
  %602 = icmp ult ptr %567, %573
  %603 = icmp ult ptr %571, %568
  %604 = and i1 %602, %603
  %605 = or i1 %601, %604
  %606 = icmp ult ptr %567, %250
  %607 = icmp ult ptr %248, %568
  %608 = and i1 %606, %607
  %609 = or i1 %605, %608
  %610 = icmp ult ptr %567, %574
  %611 = icmp ult ptr %539, %568
  %612 = and i1 %610, %611
  %613 = or i1 %609, %612
  %614 = icmp ult ptr %567, %576
  %615 = icmp ult ptr %575, %568
  %616 = and i1 %614, %615
  %617 = or i1 %613, %616
  %618 = icmp ult ptr %567, %578
  %619 = icmp ult ptr %577, %568
  %620 = and i1 %618, %619
  %621 = or i1 %617, %620
  %622 = icmp ult ptr %571, %250
  %623 = icmp ult ptr %248, %573
  %624 = and i1 %622, %623
  %625 = or i1 %621, %624
  %626 = icmp ult ptr %571, %574
  %627 = icmp ult ptr %539, %573
  %628 = and i1 %626, %627
  %629 = or i1 %625, %628
  %630 = icmp ult ptr %571, %576
  %631 = icmp ult ptr %575, %573
  %632 = and i1 %630, %631
  %633 = or i1 %629, %632
  %634 = icmp ult ptr %571, %578
  %635 = icmp ult ptr %577, %573
  %636 = and i1 %634, %635
  %637 = or i1 %633, %636
  br i1 %637, label %705, label %638

638:                                              ; preds = %559
  %639 = load double, ptr %541, align 8, !tbaa !8, !alias.scope !310
  %640 = insertelement <4 x double> poison, double %639, i64 0
  %641 = shufflevector <4 x double> %640, <4 x double> poison, <4 x i32> zeroinitializer
  %642 = load double, ptr %541, align 8, !tbaa !8, !alias.scope !310
  %643 = insertelement <4 x double> poison, double %642, i64 0
  %644 = shufflevector <4 x double> %643, <4 x double> poison, <4 x i32> zeroinitializer
  %645 = load double, ptr %541, align 8, !tbaa !8, !alias.scope !310
  %646 = insertelement <4 x double> poison, double %645, i64 0
  %647 = shufflevector <4 x double> %646, <4 x double> poison, <4 x i32> zeroinitializer
  br label %648

648:                                              ; preds = %648, %638
  %649 = phi i64 [ 0, %638 ], [ %702, %648 ]
  %650 = trunc i64 %649 to i32
  %651 = or i64 %649, 1
  %652 = or i64 %649, 2
  %653 = or i64 %649, 3
  %654 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %649
  %655 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %651
  %656 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %652
  %657 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %653
  %658 = load double, ptr %654, align 8, !tbaa !8, !alias.scope !313
  %659 = load double, ptr %655, align 8, !tbaa !8, !alias.scope !313
  %660 = load double, ptr %656, align 8, !tbaa !8, !alias.scope !313
  %661 = load double, ptr %657, align 8, !tbaa !8, !alias.scope !313
  %662 = insertelement <4 x double> poison, double %658, i64 0
  %663 = insertelement <4 x double> %662, double %659, i64 1
  %664 = insertelement <4 x double> %663, double %660, i64 2
  %665 = insertelement <4 x double> %664, double %661, i64 3
  %666 = fmul <4 x double> %641, %665
  %667 = add i32 %544, %650
  %668 = zext i32 %667 to i64
  %669 = getelementptr inbounds double, ptr %542, i64 %668
  store <4 x double> %666, ptr %669, align 8, !tbaa !8, !alias.scope !315, !noalias !317
  %670 = getelementptr inbounds [3 x double], ptr %654, i64 0, i64 1
  %671 = getelementptr inbounds [3 x double], ptr %655, i64 0, i64 1
  %672 = getelementptr inbounds [3 x double], ptr %656, i64 0, i64 1
  %673 = getelementptr inbounds [3 x double], ptr %657, i64 0, i64 1
  %674 = load double, ptr %670, align 8, !tbaa !8, !alias.scope !322
  %675 = load double, ptr %671, align 8, !tbaa !8, !alias.scope !322
  %676 = load double, ptr %672, align 8, !tbaa !8, !alias.scope !322
  %677 = load double, ptr %673, align 8, !tbaa !8, !alias.scope !322
  %678 = insertelement <4 x double> poison, double %674, i64 0
  %679 = insertelement <4 x double> %678, double %675, i64 1
  %680 = insertelement <4 x double> %679, double %676, i64 2
  %681 = insertelement <4 x double> %680, double %677, i64 3
  %682 = fmul <4 x double> %644, %681
  %683 = add i32 %546, %650
  %684 = zext i32 %683 to i64
  %685 = getelementptr inbounds double, ptr %542, i64 %684
  store <4 x double> %682, ptr %685, align 8, !tbaa !8, !alias.scope !323, !noalias !324
  %686 = getelementptr inbounds [3 x double], ptr %654, i64 0, i64 2
  %687 = getelementptr inbounds [3 x double], ptr %655, i64 0, i64 2
  %688 = getelementptr inbounds [3 x double], ptr %656, i64 0, i64 2
  %689 = getelementptr inbounds [3 x double], ptr %657, i64 0, i64 2
  %690 = load double, ptr %686, align 8, !tbaa !8, !alias.scope !325
  %691 = load double, ptr %687, align 8, !tbaa !8, !alias.scope !325
  %692 = load double, ptr %688, align 8, !tbaa !8, !alias.scope !325
  %693 = load double, ptr %689, align 8, !tbaa !8, !alias.scope !325
  %694 = insertelement <4 x double> poison, double %690, i64 0
  %695 = insertelement <4 x double> %694, double %691, i64 1
  %696 = insertelement <4 x double> %695, double %692, i64 2
  %697 = insertelement <4 x double> %696, double %693, i64 3
  %698 = fmul <4 x double> %647, %697
  %699 = add i32 %548, %650
  %700 = zext i32 %699 to i64
  %701 = getelementptr inbounds double, ptr %542, i64 %700
  store <4 x double> %698, ptr %701, align 8, !tbaa !8, !alias.scope !326, !noalias !327
  %702 = add nuw i64 %649, 4
  %703 = icmp eq i64 %702, %231
  br i1 %703, label %704, label %648, !llvm.loop !328

704:                                              ; preds = %648
  br i1 %232, label %735, label %705

705:                                              ; preds = %559, %549, %540, %704
  %706 = phi i64 [ 0, %559 ], [ 0, %549 ], [ 0, %540 ], [ %231, %704 ]
  br label %707

707:                                              ; preds = %705, %707
  %708 = phi i64 [ %731, %707 ], [ %706, %705 ]
  %709 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %708
  %710 = load double, ptr %541, align 8, !tbaa !8
  %711 = load double, ptr %709, align 8, !tbaa !8
  %712 = fmul double %710, %711
  %713 = trunc i64 %708 to i32
  %714 = add i32 %544, %713
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds double, ptr %542, i64 %715
  store double %712, ptr %716, align 8, !tbaa !8
  %717 = load double, ptr %541, align 8, !tbaa !8
  %718 = getelementptr inbounds [3 x double], ptr %709, i64 0, i64 1
  %719 = load double, ptr %718, align 8, !tbaa !8
  %720 = fmul double %717, %719
  %721 = add i32 %546, %713
  %722 = zext i32 %721 to i64
  %723 = getelementptr inbounds double, ptr %542, i64 %722
  store double %720, ptr %723, align 8, !tbaa !8
  %724 = load double, ptr %541, align 8, !tbaa !8
  %725 = getelementptr inbounds [3 x double], ptr %709, i64 0, i64 2
  %726 = load double, ptr %725, align 8, !tbaa !8
  %727 = fmul double %724, %726
  %728 = add i32 %548, %713
  %729 = zext i32 %728 to i64
  %730 = getelementptr inbounds double, ptr %542, i64 %729
  store double %727, ptr %730, align 8, !tbaa !8
  %731 = add nuw nsw i64 %708, 1
  %732 = icmp eq i64 %731, %209
  br i1 %732, label %735, label %707, !llvm.loop !329

733:                                              ; preds = %538
  %734 = icmp eq ptr %539, null
  br i1 %734, label %743, label %735

735:                                              ; preds = %707, %704, %733
  call void @_ZdlPv(ptr noundef nonnull %539) #17
  br label %743

736:                                              ; preds = %515
  %737 = landingpad { ptr, i32 }
          cleanup
  br label %744

738:                                              ; preds = %524, %520
  %739 = landingpad { ptr, i32 }
          cleanup
  %740 = load ptr, ptr %13, align 8, !tbaa !25
  %741 = icmp eq ptr %740, null
  br i1 %741, label %744, label %742

742:                                              ; preds = %738
  call void @_ZdlPv(ptr noundef nonnull %740) #17
  br label %744

743:                                              ; preds = %735, %733
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #15
  br label %746

744:                                              ; preds = %742, %738, %736
  %745 = phi { ptr, i32 } [ %737, %736 ], [ %739, %738 ], [ %739, %742 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #15
  br label %1056

746:                                              ; preds = %294, %256, %510, %743, %254, %245
  br i1 %203, label %1041, label %747

747:                                              ; preds = %746
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #15
  br i1 %191, label %748, label %749

748:                                              ; preds = %747
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  br label %756

749:                                              ; preds = %747
  %750 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %204) #16
          to label %751 unwind label %759

751:                                              ; preds = %749
  store ptr %750, ptr %14, align 8, !tbaa !51
  %752 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %750, i64 %190
  store ptr %752, ptr %205, align 8, !tbaa !212
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %750, i8 0, i64 %204, i1 false), !tbaa !8
  %753 = getelementptr i8, ptr %750, i64 %204
  store ptr %753, ptr %206, align 8, !tbaa !49
  %754 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %204) #16
          to label %755 unwind label %761

755:                                              ; preds = %751
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %754, i8 0, i64 %204, i1 false), !tbaa !8
  br label %756

756:                                              ; preds = %755, %748
  %757 = phi ptr [ null, %748 ], [ %754, %755 ]
  %758 = load i32, ptr %189, align 8, !tbaa !61
  switch i32 %758, label %1025 [
    i32 0, label %763
    i32 1, label %829
    i32 2, label %892
    i32 256, label %955
  ]

759:                                              ; preds = %749
  %760 = landingpad { ptr, i32 }
          cleanup
  br label %1039

761:                                              ; preds = %751
  %762 = landingpad { ptr, i32 }
          cleanup
  br label %1034

763:                                              ; preds = %756
  %764 = load ptr, ptr %207, align 8, !tbaa !133
  %765 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %766 unwind label %826

766:                                              ; preds = %763
  %767 = getelementptr inbounds %"class.std::vector.72", ptr %764, i64 %246
  %768 = zext i32 %765 to i64
  %769 = or i64 %196, %768
  %770 = load ptr, ptr %206, align 8, !tbaa !49
  %771 = load ptr, ptr %14, align 8, !tbaa !51
  %772 = ptrtoint ptr %770 to i64
  %773 = ptrtoint ptr %771 to i64
  %774 = sub i64 %772, %773
  %775 = sdiv exact i64 %774, 72
  %776 = shl i64 %775, 32
  %777 = load ptr, ptr %1, align 8, !tbaa !5
  %778 = getelementptr inbounds ptr, ptr %777, i64 5
  %779 = load ptr, ptr %778, align 8
  invoke void %779(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %767, i64 %769, ptr nonnull %14, i64 %776, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 1)
          to label %780 unwind label %826

780:                                              ; preds = %766
  br i1 %197, label %1025, label %781

781:                                              ; preds = %780
  %782 = load ptr, ptr %14, align 8, !tbaa !51
  %783 = load ptr, ptr %208, align 8, !tbaa !130
  %784 = zext i32 %253 to i64
  %785 = getelementptr inbounds %"class.std::vector.67", ptr %783, i64 %784
  %786 = load ptr, ptr %785, align 8, !tbaa !25
  %787 = add i32 %253, 1
  %788 = zext i32 %787 to i64
  %789 = getelementptr inbounds %"class.std::vector.67", ptr %783, i64 %788
  %790 = load ptr, ptr %789, align 8, !tbaa !25
  %791 = add i32 %253, 2
  %792 = zext i32 %791 to i64
  %793 = getelementptr inbounds %"class.std::vector.67", ptr %783, i64 %792
  %794 = load ptr, ptr %793, align 8, !tbaa !25
  br label %795

795:                                              ; preds = %781, %795
  %796 = phi i64 [ 0, %781 ], [ %824, %795 ]
  %797 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %782, i64 %796
  %798 = getelementptr inbounds %"class.dealii::Tensor", ptr %786, i64 %796
  %799 = load double, ptr %797, align 8, !tbaa !8
  store double %799, ptr %798, align 8, !tbaa !8
  %800 = getelementptr inbounds [3 x double], ptr %797, i64 0, i64 1
  %801 = load double, ptr %800, align 8, !tbaa !8
  %802 = getelementptr inbounds [3 x double], ptr %798, i64 0, i64 1
  store double %801, ptr %802, align 8, !tbaa !8
  %803 = getelementptr inbounds [3 x double], ptr %797, i64 0, i64 2
  %804 = load double, ptr %803, align 8, !tbaa !8
  %805 = getelementptr inbounds [3 x double], ptr %798, i64 0, i64 2
  store double %804, ptr %805, align 8, !tbaa !8
  %806 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 1
  %807 = getelementptr inbounds %"class.dealii::Tensor", ptr %790, i64 %796
  %808 = load double, ptr %806, align 8, !tbaa !8
  store double %808, ptr %807, align 8, !tbaa !8
  %809 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 1, i32 0, i64 1
  %810 = load double, ptr %809, align 8, !tbaa !8
  %811 = getelementptr inbounds [3 x double], ptr %807, i64 0, i64 1
  store double %810, ptr %811, align 8, !tbaa !8
  %812 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 1, i32 0, i64 2
  %813 = load double, ptr %812, align 8, !tbaa !8
  %814 = getelementptr inbounds [3 x double], ptr %807, i64 0, i64 2
  store double %813, ptr %814, align 8, !tbaa !8
  %815 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 2
  %816 = getelementptr inbounds %"class.dealii::Tensor", ptr %794, i64 %796
  %817 = load double, ptr %815, align 8, !tbaa !8
  store double %817, ptr %816, align 8, !tbaa !8
  %818 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 2, i32 0, i64 1
  %819 = load double, ptr %818, align 8, !tbaa !8
  %820 = getelementptr inbounds [3 x double], ptr %816, i64 0, i64 1
  store double %819, ptr %820, align 8, !tbaa !8
  %821 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 2, i32 0, i64 2
  %822 = load double, ptr %821, align 8, !tbaa !8
  %823 = getelementptr inbounds [3 x double], ptr %816, i64 0, i64 2
  store double %822, ptr %823, align 8, !tbaa !8
  %824 = add nuw nsw i64 %796, 1
  %825 = icmp eq i64 %824, %214
  br i1 %825, label %1025, label %795

826:                                              ; preds = %958, %955, %895, %892, %832, %829, %766, %763
  %827 = landingpad { ptr, i32 }
          cleanup
  %828 = icmp eq ptr %757, null
  br i1 %828, label %1034, label %1033

829:                                              ; preds = %756
  %830 = load ptr, ptr %207, align 8, !tbaa !133
  %831 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %832 unwind label %826

832:                                              ; preds = %829
  %833 = getelementptr inbounds %"class.std::vector.72", ptr %830, i64 %246
  %834 = zext i32 %831 to i64
  %835 = or i64 %196, %834
  %836 = load ptr, ptr %206, align 8, !tbaa !49
  %837 = load ptr, ptr %14, align 8, !tbaa !51
  %838 = ptrtoint ptr %836 to i64
  %839 = ptrtoint ptr %837 to i64
  %840 = sub i64 %838, %839
  %841 = sdiv exact i64 %840, 72
  %842 = shl i64 %841, 32
  %843 = load ptr, ptr %1, align 8, !tbaa !5
  %844 = getelementptr inbounds ptr, ptr %843, i64 5
  %845 = load ptr, ptr %844, align 8
  invoke void %845(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %833, i64 %835, ptr nonnull %14, i64 %842, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 3)
          to label %846 unwind label %826

846:                                              ; preds = %832
  br i1 %197, label %1025, label %847

847:                                              ; preds = %846
  %848 = load ptr, ptr %14, align 8, !tbaa !51
  %849 = load ptr, ptr %208, align 8, !tbaa !130
  %850 = zext i32 %253 to i64
  %851 = getelementptr inbounds %"class.std::vector.67", ptr %849, i64 %850
  %852 = load ptr, ptr %851, align 8, !tbaa !25
  %853 = add i32 %253, 1
  %854 = zext i32 %853 to i64
  %855 = getelementptr inbounds %"class.std::vector.67", ptr %849, i64 %854
  %856 = load ptr, ptr %855, align 8, !tbaa !25
  %857 = add i32 %253, 2
  %858 = zext i32 %857 to i64
  %859 = getelementptr inbounds %"class.std::vector.67", ptr %849, i64 %858
  %860 = load ptr, ptr %859, align 8, !tbaa !25
  br label %861

861:                                              ; preds = %847, %861
  %862 = phi i64 [ 0, %847 ], [ %890, %861 ]
  %863 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %848, i64 %862
  %864 = getelementptr inbounds %"class.dealii::Tensor", ptr %852, i64 %862
  %865 = load double, ptr %863, align 8, !tbaa !8
  store double %865, ptr %864, align 8, !tbaa !8
  %866 = getelementptr inbounds [3 x double], ptr %863, i64 0, i64 1
  %867 = load double, ptr %866, align 8, !tbaa !8
  %868 = getelementptr inbounds [3 x double], ptr %864, i64 0, i64 1
  store double %867, ptr %868, align 8, !tbaa !8
  %869 = getelementptr inbounds [3 x double], ptr %863, i64 0, i64 2
  %870 = load double, ptr %869, align 8, !tbaa !8
  %871 = getelementptr inbounds [3 x double], ptr %864, i64 0, i64 2
  store double %870, ptr %871, align 8, !tbaa !8
  %872 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 1
  %873 = getelementptr inbounds %"class.dealii::Tensor", ptr %856, i64 %862
  %874 = load double, ptr %872, align 8, !tbaa !8
  store double %874, ptr %873, align 8, !tbaa !8
  %875 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 1, i32 0, i64 1
  %876 = load double, ptr %875, align 8, !tbaa !8
  %877 = getelementptr inbounds [3 x double], ptr %873, i64 0, i64 1
  store double %876, ptr %877, align 8, !tbaa !8
  %878 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 1, i32 0, i64 2
  %879 = load double, ptr %878, align 8, !tbaa !8
  %880 = getelementptr inbounds [3 x double], ptr %873, i64 0, i64 2
  store double %879, ptr %880, align 8, !tbaa !8
  %881 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 2
  %882 = getelementptr inbounds %"class.dealii::Tensor", ptr %860, i64 %862
  %883 = load double, ptr %881, align 8, !tbaa !8
  store double %883, ptr %882, align 8, !tbaa !8
  %884 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 2, i32 0, i64 1
  %885 = load double, ptr %884, align 8, !tbaa !8
  %886 = getelementptr inbounds [3 x double], ptr %882, i64 0, i64 1
  store double %885, ptr %886, align 8, !tbaa !8
  %887 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 2, i32 0, i64 2
  %888 = load double, ptr %887, align 8, !tbaa !8
  %889 = getelementptr inbounds [3 x double], ptr %882, i64 0, i64 2
  store double %888, ptr %889, align 8, !tbaa !8
  %890 = add nuw nsw i64 %862, 1
  %891 = icmp eq i64 %890, %213
  br i1 %891, label %1025, label %861

892:                                              ; preds = %756
  %893 = load ptr, ptr %207, align 8, !tbaa !133
  %894 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %895 unwind label %826

895:                                              ; preds = %892
  %896 = getelementptr inbounds %"class.std::vector.72", ptr %893, i64 %246
  %897 = zext i32 %894 to i64
  %898 = or i64 %196, %897
  %899 = load ptr, ptr %206, align 8, !tbaa !49
  %900 = load ptr, ptr %14, align 8, !tbaa !51
  %901 = ptrtoint ptr %899 to i64
  %902 = ptrtoint ptr %900 to i64
  %903 = sub i64 %901, %902
  %904 = sdiv exact i64 %903, 72
  %905 = shl i64 %904, 32
  %906 = load ptr, ptr %1, align 8, !tbaa !5
  %907 = getelementptr inbounds ptr, ptr %906, i64 5
  %908 = load ptr, ptr %907, align 8
  invoke void %908(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %896, i64 %898, ptr nonnull %14, i64 %905, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 4)
          to label %909 unwind label %826

909:                                              ; preds = %895
  br i1 %197, label %1025, label %910

910:                                              ; preds = %909
  %911 = load ptr, ptr %14, align 8, !tbaa !51
  %912 = load ptr, ptr %208, align 8, !tbaa !130
  %913 = zext i32 %253 to i64
  %914 = getelementptr inbounds %"class.std::vector.67", ptr %912, i64 %913
  %915 = load ptr, ptr %914, align 8, !tbaa !25
  %916 = add i32 %253, 1
  %917 = zext i32 %916 to i64
  %918 = getelementptr inbounds %"class.std::vector.67", ptr %912, i64 %917
  %919 = load ptr, ptr %918, align 8, !tbaa !25
  %920 = add i32 %253, 2
  %921 = zext i32 %920 to i64
  %922 = getelementptr inbounds %"class.std::vector.67", ptr %912, i64 %921
  %923 = load ptr, ptr %922, align 8, !tbaa !25
  br label %924

924:                                              ; preds = %910, %924
  %925 = phi i64 [ 0, %910 ], [ %953, %924 ]
  %926 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %911, i64 %925
  %927 = getelementptr inbounds %"class.dealii::Tensor", ptr %915, i64 %925
  %928 = load double, ptr %926, align 8, !tbaa !8
  store double %928, ptr %927, align 8, !tbaa !8
  %929 = getelementptr inbounds [3 x double], ptr %926, i64 0, i64 1
  %930 = load double, ptr %929, align 8, !tbaa !8
  %931 = getelementptr inbounds [3 x double], ptr %927, i64 0, i64 1
  store double %930, ptr %931, align 8, !tbaa !8
  %932 = getelementptr inbounds [3 x double], ptr %926, i64 0, i64 2
  %933 = load double, ptr %932, align 8, !tbaa !8
  %934 = getelementptr inbounds [3 x double], ptr %927, i64 0, i64 2
  store double %933, ptr %934, align 8, !tbaa !8
  %935 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 1
  %936 = getelementptr inbounds %"class.dealii::Tensor", ptr %919, i64 %925
  %937 = load double, ptr %935, align 8, !tbaa !8
  store double %937, ptr %936, align 8, !tbaa !8
  %938 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 1, i32 0, i64 1
  %939 = load double, ptr %938, align 8, !tbaa !8
  %940 = getelementptr inbounds [3 x double], ptr %936, i64 0, i64 1
  store double %939, ptr %940, align 8, !tbaa !8
  %941 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 1, i32 0, i64 2
  %942 = load double, ptr %941, align 8, !tbaa !8
  %943 = getelementptr inbounds [3 x double], ptr %936, i64 0, i64 2
  store double %942, ptr %943, align 8, !tbaa !8
  %944 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 2
  %945 = getelementptr inbounds %"class.dealii::Tensor", ptr %923, i64 %925
  %946 = load double, ptr %944, align 8, !tbaa !8
  store double %946, ptr %945, align 8, !tbaa !8
  %947 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 2, i32 0, i64 1
  %948 = load double, ptr %947, align 8, !tbaa !8
  %949 = getelementptr inbounds [3 x double], ptr %945, i64 0, i64 1
  store double %948, ptr %949, align 8, !tbaa !8
  %950 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 2, i32 0, i64 2
  %951 = load double, ptr %950, align 8, !tbaa !8
  %952 = getelementptr inbounds [3 x double], ptr %945, i64 0, i64 2
  store double %951, ptr %952, align 8, !tbaa !8
  %953 = add nuw nsw i64 %925, 1
  %954 = icmp eq i64 %953, %212
  br i1 %954, label %1025, label %924

955:                                              ; preds = %756
  %956 = load ptr, ptr %207, align 8, !tbaa !133
  %957 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %958 unwind label %826

958:                                              ; preds = %955
  %959 = getelementptr inbounds %"class.std::vector.72", ptr %956, i64 %246
  %960 = zext i32 %957 to i64
  %961 = or i64 %196, %960
  %962 = load ptr, ptr %206, align 8, !tbaa !49
  %963 = load ptr, ptr %14, align 8, !tbaa !51
  %964 = ptrtoint ptr %962 to i64
  %965 = ptrtoint ptr %963 to i64
  %966 = sub i64 %964, %965
  %967 = sdiv exact i64 %966, 72
  %968 = shl i64 %967, 32
  %969 = load ptr, ptr %1, align 8, !tbaa !5
  %970 = getelementptr inbounds ptr, ptr %969, i64 5
  %971 = load ptr, ptr %970, align 8
  invoke void %971(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %959, i64 %961, ptr nonnull %14, i64 %968, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 256)
          to label %972 unwind label %826

972:                                              ; preds = %958
  br i1 %197, label %1025, label %973

973:                                              ; preds = %972
  %974 = getelementptr inbounds double, ptr %131, i64 %246
  %975 = load ptr, ptr %14, align 8, !tbaa !51
  %976 = load ptr, ptr %208, align 8, !tbaa !130
  %977 = zext i32 %253 to i64
  %978 = getelementptr inbounds %"class.std::vector.67", ptr %976, i64 %977
  %979 = load ptr, ptr %978, align 8, !tbaa !25
  %980 = add i32 %253, 1
  %981 = zext i32 %980 to i64
  %982 = getelementptr inbounds %"class.std::vector.67", ptr %976, i64 %981
  %983 = load ptr, ptr %982, align 8, !tbaa !25
  %984 = add i32 %253, 2
  %985 = zext i32 %984 to i64
  %986 = getelementptr inbounds %"class.std::vector.67", ptr %976, i64 %985
  %987 = load ptr, ptr %986, align 8, !tbaa !25
  br label %988

988:                                              ; preds = %973, %988
  %989 = phi i64 [ 0, %973 ], [ %1023, %988 ]
  %990 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %975, i64 %989
  %991 = load double, ptr %974, align 8, !tbaa !8
  %992 = getelementptr inbounds [3 x double], ptr %990, i64 0, i64 2
  %993 = load double, ptr %992, align 8, !tbaa !8, !noalias !330
  %994 = fmul double %991, %993
  %995 = getelementptr inbounds %"class.dealii::Tensor", ptr %979, i64 %989
  %996 = load <2 x double>, ptr %990, align 8, !tbaa !8, !noalias !330
  %997 = insertelement <2 x double> poison, double %991, i64 0
  %998 = shufflevector <2 x double> %997, <2 x double> poison, <2 x i32> zeroinitializer
  %999 = fmul <2 x double> %998, %996
  store <2 x double> %999, ptr %995, align 8, !tbaa !8
  %1000 = getelementptr inbounds [3 x double], ptr %995, i64 0, i64 2
  store double %994, ptr %1000, align 8, !tbaa !8
  %1001 = load double, ptr %974, align 8, !tbaa !8
  %1002 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %990, i64 0, i64 1
  %1003 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %990, i64 0, i64 1, i32 0, i64 2
  %1004 = load double, ptr %1003, align 8, !tbaa !8, !noalias !330
  %1005 = fmul double %1001, %1004
  %1006 = getelementptr inbounds %"class.dealii::Tensor", ptr %983, i64 %989
  %1007 = load <2 x double>, ptr %1002, align 8, !tbaa !8, !noalias !330
  %1008 = insertelement <2 x double> poison, double %1001, i64 0
  %1009 = shufflevector <2 x double> %1008, <2 x double> poison, <2 x i32> zeroinitializer
  %1010 = fmul <2 x double> %1009, %1007
  store <2 x double> %1010, ptr %1006, align 8, !tbaa !8
  %1011 = getelementptr inbounds [3 x double], ptr %1006, i64 0, i64 2
  store double %1005, ptr %1011, align 8, !tbaa !8
  %1012 = load double, ptr %974, align 8, !tbaa !8
  %1013 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %990, i64 0, i64 2
  %1014 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %990, i64 0, i64 2, i32 0, i64 2
  %1015 = load double, ptr %1014, align 8, !tbaa !8, !noalias !330
  %1016 = fmul double %1012, %1015
  %1017 = getelementptr inbounds %"class.dealii::Tensor", ptr %987, i64 %989
  %1018 = load <2 x double>, ptr %1013, align 8, !tbaa !8, !noalias !330
  %1019 = insertelement <2 x double> poison, double %1012, i64 0
  %1020 = shufflevector <2 x double> %1019, <2 x double> poison, <2 x i32> zeroinitializer
  %1021 = fmul <2 x double> %1020, %1018
  store <2 x double> %1021, ptr %1017, align 8, !tbaa !8
  %1022 = getelementptr inbounds [3 x double], ptr %1017, i64 0, i64 2
  store double %1016, ptr %1022, align 8, !tbaa !8
  %1023 = add nuw nsw i64 %989, 1
  %1024 = icmp eq i64 %1023, %211
  br i1 %1024, label %1025, label %988

1025:                                             ; preds = %988, %924, %861, %795, %972, %909, %846, %780, %756
  %1026 = icmp eq ptr %757, null
  br i1 %1026, label %1028, label %1027

1027:                                             ; preds = %1025
  call void @_ZdlPv(ptr noundef nonnull %757) #17
  br label %1028

1028:                                             ; preds = %1027, %1025
  %1029 = load ptr, ptr %14, align 8, !tbaa !51
  %1030 = icmp eq ptr %1029, null
  br i1 %1030, label %1032, label %1031

1031:                                             ; preds = %1028
  call void @_ZdlPv(ptr noundef nonnull %1029) #17
  br label %1032

1032:                                             ; preds = %1031, %1028
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #15
  br label %1041

1033:                                             ; preds = %826
  call void @_ZdlPv(ptr noundef nonnull %757) #17
  br label %1034

1034:                                             ; preds = %1033, %826, %761
  %1035 = phi { ptr, i32 } [ %762, %761 ], [ %827, %826 ], [ %827, %1033 ]
  %1036 = load ptr, ptr %14, align 8, !tbaa !51
  %1037 = icmp eq ptr %1036, null
  br i1 %1037, label %1039, label %1038

1038:                                             ; preds = %1034
  call void @_ZdlPv(ptr noundef nonnull %1036) #17
  br label %1039

1039:                                             ; preds = %1038, %1034, %759
  %1040 = phi { ptr, i32 } [ %760, %759 ], [ %1035, %1034 ], [ %1035, %1038 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #15
  br label %1056

1041:                                             ; preds = %1032, %746
  %1042 = add nuw nsw i64 %246, 1
  %1043 = load i32, ptr %125, align 8, !tbaa !129
  %1044 = zext i32 %1043 to i64
  %1045 = icmp ult i64 %1042, %1044
  br i1 %1045, label %245, label %241

1046:                                             ; preds = %241
  %1047 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %1048 unwind label %1053

1048:                                             ; preds = %1046
  invoke void @_ZNK6dealii13FiniteElementILi3ELi3EE11compute_2ndERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRNS3_16InternalDataBaseERNS1_16InternalDataBaseERNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(728) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %1047, ptr noundef nonnull align 8 dereferenceable(185) %6, ptr noundef nonnull align 8 dereferenceable(216) %7, ptr noundef nonnull align 8 dereferenceable(436) %8)
          to label %1049 unwind label %1053

1049:                                             ; preds = %1048, %241
  %1050 = icmp eq ptr %242, null
  br i1 %1050, label %1052, label %1051

1051:                                             ; preds = %1049
  call void @_ZdlPv(ptr noundef nonnull %242) #17
  br label %1052

1052:                                             ; preds = %1049, %1051
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #15
  ret void

1053:                                             ; preds = %1046, %1048
  %1054 = landingpad { ptr, i32 }
          cleanup
  %1055 = icmp eq ptr %242, null
  br i1 %1055, label %1059, label %1056

1056:                                             ; preds = %309, %511, %744, %1039, %1053
  %1057 = phi { ptr, i32 } [ %1054, %1053 ], [ %310, %309 ], [ %512, %511 ], [ %745, %744 ], [ %1040, %1039 ]
  %1058 = phi ptr [ %242, %1053 ], [ %131, %309 ], [ %131, %511 ], [ %131, %744 ], [ %131, %1039 ]
  call void @_ZdlPv(ptr noundef nonnull %1058) #17
  br label %1059

1059:                                             ; preds = %1056, %1053
  %1060 = phi { ptr, i32 } [ %1057, %1056 ], [ %1054, %1053 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #15
  resume { ptr, i32 } %1060
}

declare i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEE(i32 noundef, i32 noundef, i1 noundef zeroext, i1 noundef zeroext, i1 noundef zeroext, i32 noundef, i8) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEC2EjRKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS8_ISA_SaISA_EE(ptr noundef nonnull align 8 dereferenceable(1024) %0, i32 noundef %1, ptr noundef nonnull align 4 dereferenceable(60) %2, ptr noundef nonnull align 8 dereferenceable(40) %3, ptr noundef nonnull align 8 dereferenceable(24) %4) unnamed_addr #0 comdat($_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEC5EjRKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS8_ISA_SaISA_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii13FiniteElementILi3ELi3EEC2ERKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS6_IS8_SaIS8_EE(ptr noundef nonnull align 8 dereferenceable(728) %0, ptr noundef nonnull align 4 dereferenceable(60) %2, ptr noundef nonnull align 8 dereferenceable(40) %3, ptr noundef nonnull align 8 dereferenceable(24) %4)
  store ptr getelementptr inbounds ({ [38 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %6 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 2
  invoke void @_ZN6dealii14PolynomialsABFILi3EEC1Ej(ptr noundef nonnull align 8 dereferenceable(96) %6, i32 noundef %1)
          to label %7 unwind label %35

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 3
  invoke void @_ZN6dealii10FullMatrixIdEC1Ej(ptr noundef nonnull align 8 dereferenceable(92) %8, i32 noundef 0)
          to label %9 unwind label %37

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 4, i32 0, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %11, i8 0, i64 88, i1 false)
  store double -1.000000e+00, ptr %10, align 8, !tbaa !8
  %12 = getelementptr inbounds i8, ptr %0, i64 116
  %13 = load i32, ptr %12, align 4, !tbaa !11
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %0, i64 0, i32 17
  %17 = load ptr, ptr %16, align 8, !tbaa !15
  %18 = zext i32 %13 to i64
  %19 = and i64 %18, 3
  %20 = icmp ult i32 %13, 4
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  %22 = and i64 %18, 4294967292
  br label %39

23:                                               ; preds = %39, %15
  %24 = phi i64 [ 0, %15 ], [ %53, %39 ]
  %25 = icmp eq i64 %19, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %23, %26
  %27 = phi i64 [ %31, %26 ], [ %24, %23 ]
  %28 = phi i64 [ %32, %26 ], [ 0, %23 ]
  %29 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %27, i32 0, i32 1
  %30 = trunc i64 %27 to i32
  store i32 %30, ptr %29, align 4, !tbaa !18
  %31 = add nuw nsw i64 %27, 1
  %32 = add i64 %28, 1
  %33 = icmp eq i64 %32, %19
  br i1 %33, label %34, label %26, !llvm.loop !333

34:                                               ; preds = %23, %26, %9
  ret void

35:                                               ; preds = %5
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %56

37:                                               ; preds = %7
  %38 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii14PolynomialsABFILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(96) %6)
          to label %56 unwind label %59

39:                                               ; preds = %39, %21
  %40 = phi i64 [ 0, %21 ], [ %53, %39 ]
  %41 = phi i64 [ 0, %21 ], [ %54, %39 ]
  %42 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %40, i32 0, i32 1
  %43 = trunc i64 %40 to i32
  store i32 %43, ptr %42, align 4, !tbaa !18
  %44 = or i64 %40, 1
  %45 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %44, i32 0, i32 1
  %46 = trunc i64 %44 to i32
  store i32 %46, ptr %45, align 4, !tbaa !18
  %47 = or i64 %40, 2
  %48 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %47, i32 0, i32 1
  %49 = trunc i64 %47 to i32
  store i32 %49, ptr %48, align 4, !tbaa !18
  %50 = or i64 %40, 3
  %51 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %50, i32 0, i32 1
  %52 = trunc i64 %50 to i32
  store i32 %52, ptr %51, align 4, !tbaa !18
  %53 = add nuw nsw i64 %40, 4
  %54 = add i64 %41, 4
  %55 = icmp eq i64 %54, %22
  br i1 %55, label %23, label %39

56:                                               ; preds = %37, %35
  %57 = phi { ptr, i32 } [ %38, %37 ], [ %36, %35 ]
  invoke void @_ZN6dealii13FiniteElementILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(728) %0)
          to label %58 unwind label %59

58:                                               ; preds = %56
  resume { ptr, i32 } %57

59:                                               ; preds = %56, %37
  %60 = landingpad { ptr, i32 }
          catch ptr null
  %61 = extractvalue { ptr, i32 } %60, 0
  tail call void @__clang_call_terminate(ptr %61) #14
  unreachable
}

declare void @_ZN6dealii14PolynomialsABFILi3EEC1Ej(ptr noundef nonnull align 8 dereferenceable(96), i32 noundef) unnamed_addr #1

declare void @_ZN6dealii14PolynomialsABFILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(96)) unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE11shape_valueEjRKNS_5PointILi3EEE(ptr noundef nonnull align 8 dereferenceable(1024) %0, i32 noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) unnamed_addr #4 comdat align 2 {
  ret double 0.000000e+00
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE21shape_value_componentEjRKNS_5PointILi3EEEj(ptr noundef nonnull align 8 dereferenceable(1024) %0, i32 noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2, i32 noundef %3) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.dealii::Tensor", align 8
  %6 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 4
  %7 = load double, ptr %6, align 8, !tbaa !8
  %8 = load double, ptr %2, align 8, !tbaa !8
  %9 = fcmp une double %7, %8
  br i1 %9, label %28, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 4, i32 0, i32 0, i64 1
  %12 = load double, ptr %11, align 8, !tbaa !8
  %13 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 1
  %14 = load double, ptr %13, align 8, !tbaa !8
  %15 = fcmp une double %12, %14
  br i1 %15, label %28, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 4, i32 0, i32 0, i64 2
  %18 = load double, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 2
  %20 = load double, ptr %19, align 8, !tbaa !8
  %21 = fcmp une double %18, %20
  br i1 %21, label %28, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 5
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !23
  %26 = load ptr, ptr %23, align 8, !tbaa !25
  %27 = icmp eq ptr %25, %26
  br i1 %27, label %28, label %59

28:                                               ; preds = %16, %10, %4, %22
  store double %8, ptr %6, align 8, !tbaa !8
  %29 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 1
  %30 = load double, ptr %29, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 4, i32 0, i32 0, i64 1
  store double %30, ptr %31, align 8, !tbaa !8
  %32 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 2
  %33 = load double, ptr %32, align 8, !tbaa !8
  %34 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 4, i32 0, i32 0, i64 2
  store double %33, ptr %34, align 8, !tbaa !8
  %35 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 5
  %36 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 2
  %37 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 2, i32 2
  %38 = load i32, ptr %37, align 8, !tbaa !334
  %39 = zext i32 %38 to i64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false), !tbaa !8
  %40 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !33
  %42 = load ptr, ptr %35, align 8, !tbaa !25
  %43 = ptrtoint ptr %41 to i64
  %44 = ptrtoint ptr %42 to i64
  %45 = sub i64 %43, %44
  %46 = sdiv exact i64 %45, 24
  %47 = icmp ult i64 %46, %39
  br i1 %47, label %48, label %50

48:                                               ; preds = %28
  %49 = sub nsw i64 %39, %46
  call void @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr %41, i64 noundef %49, ptr noundef nonnull align 8 dereferenceable(24) %5)
  br label %56

50:                                               ; preds = %28
  %51 = icmp ugt i64 %46, %39
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.dealii::Tensor", ptr %42, i64 %39
  %54 = icmp eq ptr %41, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %52
  store ptr %53, ptr %40, align 8, !tbaa !23
  br label %56

56:                                               ; preds = %48, %50, %52, %55
  %57 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 6
  %58 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 7
  call void @_ZNK6dealii14PolynomialsABFILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(96) %36, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %57, ptr noundef nonnull align 8 dereferenceable(24) %58)
  br label %59

59:                                               ; preds = %56, %22
  %60 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %61 = load i32, ptr %60, align 8, !tbaa !34
  %62 = icmp eq i32 %61, 0
  %63 = zext i32 %3 to i64
  br i1 %62, label %75, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !35
  %67 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 5
  %68 = load ptr, ptr %67, align 8, !tbaa !25
  %69 = getelementptr inbounds [3 x double], ptr %68, i64 0, i64 %63
  %70 = zext i32 %61 to i64
  %71 = and i64 %70, 1
  %72 = icmp eq i32 %61, 1
  br i1 %72, label %108, label %73

73:                                               ; preds = %64
  %74 = and i64 %70, 4294967294
  br label %82

75:                                               ; preds = %59
  %76 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 5
  %77 = zext i32 %1 to i64
  %78 = load ptr, ptr %76, align 8, !tbaa !25
  %79 = getelementptr inbounds %"class.dealii::Tensor", ptr %78, i64 %77
  %80 = getelementptr inbounds [3 x double], ptr %79, i64 0, i64 %63
  %81 = load double, ptr %80, align 8, !tbaa !8
  br label %123

82:                                               ; preds = %82, %73
  %83 = phi i64 [ 0, %73 ], [ %105, %82 ]
  %84 = phi double [ 0.000000e+00, %73 ], [ %104, %82 ]
  %85 = phi i64 [ 0, %73 ], [ %106, %82 ]
  %86 = trunc i64 %83 to i32
  %87 = mul i32 %61, %86
  %88 = add i32 %87, %1
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds double, ptr %66, i64 %89
  %91 = load double, ptr %90, align 8, !tbaa !8
  %92 = getelementptr inbounds %"class.dealii::Tensor", ptr %69, i64 %83
  %93 = load double, ptr %92, align 8, !tbaa !8
  %94 = call double @llvm.fmuladd.f64(double %91, double %93, double %84)
  %95 = or i64 %83, 1
  %96 = trunc i64 %95 to i32
  %97 = mul i32 %61, %96
  %98 = add i32 %97, %1
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds double, ptr %66, i64 %99
  %101 = load double, ptr %100, align 8, !tbaa !8
  %102 = getelementptr inbounds %"class.dealii::Tensor", ptr %69, i64 %95
  %103 = load double, ptr %102, align 8, !tbaa !8
  %104 = call double @llvm.fmuladd.f64(double %101, double %103, double %94)
  %105 = add nuw nsw i64 %83, 2
  %106 = add i64 %85, 2
  %107 = icmp eq i64 %106, %74
  br i1 %107, label %108, label %82

108:                                              ; preds = %82, %64
  %109 = phi double [ undef, %64 ], [ %104, %82 ]
  %110 = phi i64 [ 0, %64 ], [ %105, %82 ]
  %111 = phi double [ 0.000000e+00, %64 ], [ %104, %82 ]
  %112 = icmp eq i64 %71, 0
  br i1 %112, label %123, label %113

113:                                              ; preds = %108
  %114 = trunc i64 %110 to i32
  %115 = mul i32 %61, %114
  %116 = add i32 %115, %1
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds double, ptr %66, i64 %117
  %119 = load double, ptr %118, align 8, !tbaa !8
  %120 = getelementptr inbounds %"class.dealii::Tensor", ptr %69, i64 %110
  %121 = load double, ptr %120, align 8, !tbaa !8
  %122 = call double @llvm.fmuladd.f64(double %119, double %121, double %111)
  br label %123

123:                                              ; preds = %113, %108, %75
  %124 = phi double [ %81, %75 ], [ %109, %108 ], [ %122, %113 ]
  ret double %124
}

declare void @_ZNK6dealii14PolynomialsABFILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(96), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 8 dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE10shape_gradEjRKNS_5PointILi3EEE(ptr noalias sret(%"class.dealii::Tensor") align 8 %0, ptr noundef nonnull align 8 dereferenceable(1024) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false), !tbaa !8
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE20shape_grad_componentEjRKNS_5PointILi3EEEj(ptr noalias sret(%"class.dealii::Tensor") align 8 %0, ptr noundef nonnull align 8 dereferenceable(1024) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %4) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.dealii::Tensor.84", align 8
  %7 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 4
  %8 = load double, ptr %7, align 8, !tbaa !8
  %9 = load double, ptr %3, align 8, !tbaa !8
  %10 = fcmp une double %8, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 1
  %13 = load double, ptr %12, align 8, !tbaa !8
  %14 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %15 = load double, ptr %14, align 8, !tbaa !8
  %16 = fcmp une double %13, %15
  br i1 %16, label %29, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 2
  %19 = load double, ptr %18, align 8, !tbaa !8
  %20 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %21 = load double, ptr %20, align 8, !tbaa !8
  %22 = fcmp une double %19, %21
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 6
  %25 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !49
  %27 = load ptr, ptr %24, align 8, !tbaa !51
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %29, label %60

29:                                               ; preds = %17, %11, %5, %23
  store double %9, ptr %7, align 8, !tbaa !8
  %30 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %31 = load double, ptr %30, align 8, !tbaa !8
  %32 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 1
  store double %31, ptr %32, align 8, !tbaa !8
  %33 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %34 = load double, ptr %33, align 8, !tbaa !8
  %35 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 2
  store double %34, ptr %35, align 8, !tbaa !8
  %36 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 6
  %37 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 2
  %38 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 2, i32 2
  %39 = load i32, ptr %38, align 8, !tbaa !334
  %40 = zext i32 %39 to i64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %6, i8 0, i64 72, i1 false), !tbaa !8
  %41 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !33
  %43 = load ptr, ptr %36, align 8, !tbaa !51
  %44 = ptrtoint ptr %42 to i64
  %45 = ptrtoint ptr %43 to i64
  %46 = sub i64 %44, %45
  %47 = sdiv exact i64 %46, 72
  %48 = icmp ult i64 %47, %40
  br i1 %48, label %49, label %51

49:                                               ; preds = %29
  %50 = sub nsw i64 %40, %47
  call void @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %36, ptr %42, i64 noundef %50, ptr noundef nonnull align 8 dereferenceable(72) %6)
  br label %57

51:                                               ; preds = %29
  %52 = icmp ugt i64 %47, %40
  br i1 %52, label %53, label %57

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %43, i64 %40
  %55 = icmp eq ptr %42, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  store ptr %54, ptr %41, align 8, !tbaa !49
  br label %57

57:                                               ; preds = %49, %51, %53, %56
  %58 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 5
  %59 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 7
  call void @_ZNK6dealii14PolynomialsABFILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(96) %37, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %36, ptr noundef nonnull align 8 dereferenceable(24) %59)
  br label %60

60:                                               ; preds = %57, %23
  %61 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %62 = load i32, ptr %61, align 8, !tbaa !34
  %63 = icmp eq i32 %62, 0
  %64 = zext i32 %4 to i64
  br i1 %63, label %76, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !35
  %68 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 6
  %69 = load ptr, ptr %68, align 8, !tbaa !51
  %70 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %69, i64 0, i64 %64
  %71 = zext i32 %62 to i64
  %72 = and i64 %71, 1
  %73 = icmp eq i32 %62, 1
  br i1 %73, label %85, label %74

74:                                               ; preds = %65
  %75 = and i64 %71, 4294967294
  br label %112

76:                                               ; preds = %60
  %77 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 6
  %78 = zext i32 %2 to i64
  %79 = load ptr, ptr %77, align 8, !tbaa !51
  %80 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %79, i64 %78
  %81 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %80, i64 0, i64 %64
  %82 = load <2 x double>, ptr %81, align 8, !tbaa !8
  store <2 x double> %82, ptr %0, align 8, !tbaa !8
  %83 = getelementptr inbounds [3 x double], ptr %81, i64 0, i64 2
  %84 = load double, ptr %83, align 8, !tbaa !8
  br label %153

85:                                               ; preds = %112, %65
  %86 = phi <2 x double> [ undef, %65 ], [ %148, %112 ]
  %87 = phi double [ undef, %65 ], [ %149, %112 ]
  %88 = phi i64 [ 0, %65 ], [ %150, %112 ]
  %89 = phi double [ 0.000000e+00, %65 ], [ %149, %112 ]
  %90 = phi <2 x double> [ zeroinitializer, %65 ], [ %148, %112 ]
  %91 = icmp eq i64 %72, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %85
  %93 = trunc i64 %88 to i32
  %94 = mul i32 %62, %93
  %95 = add i32 %94, %2
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds double, ptr %67, i64 %96
  %98 = load double, ptr %97, align 8, !tbaa !8
  %99 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %70, i64 %88
  %100 = load <2 x double>, ptr %99, align 8, !tbaa !8, !noalias !336
  %101 = insertelement <2 x double> poison, double %98, i64 0
  %102 = shufflevector <2 x double> %101, <2 x double> poison, <2 x i32> zeroinitializer
  %103 = fmul <2 x double> %102, %100
  %104 = getelementptr inbounds [3 x double], ptr %99, i64 0, i64 2
  %105 = load double, ptr %104, align 8, !tbaa !8, !noalias !336
  %106 = fmul double %98, %105
  %107 = fadd <2 x double> %90, %103
  %108 = fadd double %89, %106
  br label %109

109:                                              ; preds = %85, %92
  %110 = phi <2 x double> [ %86, %85 ], [ %107, %92 ]
  %111 = phi double [ %87, %85 ], [ %108, %92 ]
  store <2 x double> %110, ptr %0, align 8, !tbaa !8
  br label %153

112:                                              ; preds = %112, %74
  %113 = phi i64 [ 0, %74 ], [ %150, %112 ]
  %114 = phi double [ 0.000000e+00, %74 ], [ %149, %112 ]
  %115 = phi <2 x double> [ zeroinitializer, %74 ], [ %148, %112 ]
  %116 = phi i64 [ 0, %74 ], [ %151, %112 ]
  %117 = trunc i64 %113 to i32
  %118 = mul i32 %62, %117
  %119 = add i32 %118, %2
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds double, ptr %67, i64 %120
  %122 = load double, ptr %121, align 8, !tbaa !8
  %123 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %70, i64 %113
  %124 = load <2 x double>, ptr %123, align 8, !tbaa !8, !noalias !336
  %125 = insertelement <2 x double> poison, double %122, i64 0
  %126 = shufflevector <2 x double> %125, <2 x double> poison, <2 x i32> zeroinitializer
  %127 = fmul <2 x double> %126, %124
  %128 = getelementptr inbounds [3 x double], ptr %123, i64 0, i64 2
  %129 = load double, ptr %128, align 8, !tbaa !8, !noalias !336
  %130 = fmul double %122, %129
  %131 = fadd <2 x double> %115, %127
  %132 = fadd double %114, %130
  %133 = or i64 %113, 1
  %134 = trunc i64 %133 to i32
  %135 = mul i32 %62, %134
  %136 = add i32 %135, %2
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds double, ptr %67, i64 %137
  %139 = load double, ptr %138, align 8, !tbaa !8
  %140 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %70, i64 %133
  %141 = load <2 x double>, ptr %140, align 8, !tbaa !8, !noalias !336
  %142 = insertelement <2 x double> poison, double %139, i64 0
  %143 = shufflevector <2 x double> %142, <2 x double> poison, <2 x i32> zeroinitializer
  %144 = fmul <2 x double> %143, %141
  %145 = getelementptr inbounds [3 x double], ptr %140, i64 0, i64 2
  %146 = load double, ptr %145, align 8, !tbaa !8, !noalias !336
  %147 = fmul double %139, %146
  %148 = fadd <2 x double> %131, %144
  %149 = fadd double %132, %147
  %150 = add nuw nsw i64 %113, 2
  %151 = add i64 %116, 2
  %152 = icmp eq i64 %151, %75
  br i1 %152, label %85, label %112

153:                                              ; preds = %109, %76
  %154 = phi double [ %111, %109 ], [ %84, %76 ]
  %155 = getelementptr inbounds [3 x double], ptr %0, i64 0, i64 2
  store double %154, ptr %155, align 8, !tbaa !8
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE15shape_grad_gradEjRKNS_5PointILi3EEE(ptr noalias sret(%"class.dealii::Tensor.84") align 8 %0, ptr noundef nonnull align 8 dereferenceable(1024) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, i8 0, i64 72, i1 false), !tbaa !8
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE25shape_grad_grad_componentEjRKNS_5PointILi3EEEj(ptr noalias sret(%"class.dealii::Tensor.84") align 8 %0, ptr noundef nonnull align 8 dereferenceable(1024) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %4) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.dealii::Tensor.85", align 8
  %7 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 4
  %8 = load double, ptr %7, align 8, !tbaa !8
  %9 = load double, ptr %3, align 8, !tbaa !8
  %10 = fcmp une double %8, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 1
  %13 = load double, ptr %12, align 8, !tbaa !8
  %14 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %15 = load double, ptr %14, align 8, !tbaa !8
  %16 = fcmp une double %13, %15
  br i1 %16, label %29, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 2
  %19 = load double, ptr %18, align 8, !tbaa !8
  %20 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %21 = load double, ptr %20, align 8, !tbaa !8
  %22 = fcmp une double %19, %21
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 7
  %25 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !55
  %27 = load ptr, ptr %24, align 8, !tbaa !57
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %29, label %60

29:                                               ; preds = %17, %11, %5, %23
  store double %9, ptr %7, align 8, !tbaa !8
  %30 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %31 = load double, ptr %30, align 8, !tbaa !8
  %32 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 1
  store double %31, ptr %32, align 8, !tbaa !8
  %33 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %34 = load double, ptr %33, align 8, !tbaa !8
  %35 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 2
  store double %34, ptr %35, align 8, !tbaa !8
  %36 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 7
  %37 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 2
  %38 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 2, i32 2
  %39 = load i32, ptr %38, align 8, !tbaa !334
  %40 = zext i32 %39 to i64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(216) %6, i8 0, i64 216, i1 false), !tbaa !8
  %41 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !33
  %43 = load ptr, ptr %36, align 8, !tbaa !57
  %44 = ptrtoint ptr %42 to i64
  %45 = ptrtoint ptr %43 to i64
  %46 = sub i64 %44, %45
  %47 = sdiv exact i64 %46, 216
  %48 = icmp ult i64 %47, %40
  br i1 %48, label %49, label %51

49:                                               ; preds = %29
  %50 = sub nsw i64 %40, %47
  call void @_ZNSt6vectorIN6dealii6TensorILi3ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %36, ptr %42, i64 noundef %50, ptr noundef nonnull align 8 dereferenceable(216) %6)
  br label %57

51:                                               ; preds = %29
  %52 = icmp ugt i64 %47, %40
  br i1 %52, label %53, label %57

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %43, i64 %40
  %55 = icmp eq ptr %42, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  store ptr %54, ptr %41, align 8, !tbaa !55
  br label %57

57:                                               ; preds = %49, %51, %53, %56
  %58 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 5
  %59 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 6
  call void @_ZNK6dealii14PolynomialsABFILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(96) %37, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %59, ptr noundef nonnull align 8 dereferenceable(24) %36)
  br label %60

60:                                               ; preds = %57, %23
  %61 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %62 = load i32, ptr %61, align 8, !tbaa !34
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %73, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !35
  %67 = mul i32 %62, %2
  %68 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 7
  %69 = load ptr, ptr %68, align 8, !tbaa !57
  %70 = zext i32 %4 to i64
  %71 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %69, i64 0, i64 %70
  %72 = zext i32 %62 to i64
  br label %88

73:                                               ; preds = %60
  %74 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %1, i64 0, i32 7
  %75 = zext i32 %2 to i64
  %76 = load ptr, ptr %74, align 8, !tbaa !57
  %77 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %76, i64 %75
  %78 = zext i32 %4 to i64
  %79 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %77, i64 0, i64 %78
  %80 = load <4 x double>, ptr %79, align 8, !tbaa !8
  store <4 x double> %80, ptr %0, align 8, !tbaa !8
  %81 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %79, i64 0, i64 1, i32 0, i64 1
  %82 = getelementptr inbounds %"class.dealii::Tensor", ptr %0, i64 1, i32 0, i64 1
  %83 = load <4 x double>, ptr %81, align 8, !tbaa !8
  store <4 x double> %83, ptr %82, align 8, !tbaa !8
  %84 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %79, i64 0, i64 2, i32 0, i64 2
  %85 = load double, ptr %84, align 8, !tbaa !8
  br label %114

86:                                               ; preds = %88
  store <4 x double> %109, ptr %0, align 8, !tbaa !8
  %87 = getelementptr inbounds %"class.dealii::Tensor", ptr %0, i64 1, i32 0, i64 1
  store <4 x double> %110, ptr %87, align 8, !tbaa !8
  br label %114

88:                                               ; preds = %64, %88
  %89 = phi i64 [ 0, %64 ], [ %112, %88 ]
  %90 = phi double [ 0.000000e+00, %64 ], [ %111, %88 ]
  %91 = phi <4 x double> [ zeroinitializer, %64 ], [ %109, %88 ]
  %92 = phi <4 x double> [ zeroinitializer, %64 ], [ %110, %88 ]
  %93 = trunc i64 %89 to i32
  %94 = add i32 %67, %93
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds double, ptr %66, i64 %95
  %97 = load double, ptr %96, align 8, !tbaa !8
  %98 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %71, i64 %89
  %99 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %98, i64 0, i64 1, i32 0, i64 1
  %100 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %98, i64 0, i64 2, i32 0, i64 2
  %101 = load double, ptr %100, align 8, !tbaa !8, !noalias !339
  %102 = load <4 x double>, ptr %98, align 8, !tbaa !8, !noalias !339
  %103 = insertelement <4 x double> poison, double %97, i64 0
  %104 = shufflevector <4 x double> %103, <4 x double> poison, <4 x i32> zeroinitializer
  %105 = fmul <4 x double> %104, %102
  %106 = load <4 x double>, ptr %99, align 8, !tbaa !8, !noalias !339
  %107 = fmul <4 x double> %104, %106
  %108 = fmul double %97, %101
  %109 = fadd <4 x double> %91, %105
  %110 = fadd <4 x double> %92, %107
  %111 = fadd double %90, %108
  %112 = add nuw nsw i64 %89, 1
  %113 = icmp eq i64 %112, %72
  br i1 %113, label %86, label %88

114:                                              ; preds = %86, %73
  %115 = phi double [ %111, %86 ], [ %85, %73 ]
  %116 = getelementptr inbounds %"class.dealii::Tensor", ptr %0, i64 2, i32 0, i64 2
  store double %115, ptr %116, align 8, !tbaa !8
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE15n_base_elementsEv(ptr noundef nonnull align 8 dereferenceable(1024) %0) unnamed_addr #4 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(728) ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12base_elementEj(ptr noundef nonnull align 8 dereferenceable(1024) %0, i32 noundef %1) unnamed_addr #4 comdat align 2 {
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE20element_multiplicityEj(ptr noundef nonnull align 8 dereferenceable(1024) %0, i32 noundef %1) unnamed_addr #4 comdat align 2 {
  ret i32 1
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE11update_onceENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(1024) %0, i32 noundef %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !342
  %5 = icmp eq i32 %4, 0
  %6 = and i32 %1, 1
  %7 = icmp ne i32 %6, 0
  %8 = and i1 %7, %5
  %9 = zext i1 %8 to i32
  ret i32 %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE11update_eachENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(1024) %0, i32 noundef %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !342
  %5 = icmp eq i32 %4, 256
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = and i32 %1, 1
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 0, i32 18433
  %10 = and i32 %1, 2
  %11 = icmp eq i32 %10, 0
  %12 = or i32 %9, 19458
  %13 = select i1 %11, i32 %9, i32 %12
  %14 = and i32 %1, 4
  %15 = icmp eq i32 %14, 0
  %16 = or i32 %13, 19460
  %17 = select i1 %15, i32 %13, i32 %16
  br label %18

18:                                               ; preds = %6, %2
  %19 = phi i32 [ 0, %2 ], [ %17, %6 ]
  ret i32 %19
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE8get_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE(ptr noundef nonnull align 8 dereferenceable(1024) %0, i32 noundef %1, ptr noundef nonnull align 8 dereferenceable(72) %2, ptr noundef nonnull align 8 dereferenceable(128) %3) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.std::vector.67", align 8
  %6 = alloca %"class.std::vector.72", align 8
  %7 = alloca %"class.std::vector.77", align 8
  %8 = alloca %"class.dealii::Tensor", align 8
  %9 = alloca %"class.std::vector.67", align 8
  %10 = alloca %"class.dealii::Tensor", align 8
  %11 = alloca %"class.dealii::Tensor.84", align 8
  %12 = alloca %"class.std::vector.72", align 8
  %13 = alloca %"class.dealii::Tensor.84", align 8
  %14 = tail call noalias noundef nonnull dereferenceable(264) ptr @_Znwm(i64 noundef 264) #16
  invoke void @_ZN6dealii7MappingILi3ELi3EE16InternalDataBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(185) %14)
          to label %15 unwind label %86

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.dealii::FiniteElement<3, 3>::InternalDataBase", ptr %14, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataE, i64 0, inrange i32 0, i64 2), ptr %14, align 8, !tbaa !5
  %17 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %14, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %17, i8 0, i64 48, i1 false)
  %18 = load ptr, ptr %0, align 8, !tbaa !5
  %19 = getelementptr inbounds ptr, ptr %18, i64 27
  %20 = load ptr, ptr %19, align 8
  %21 = tail call noundef i32 %20(ptr noundef nonnull align 8 dereferenceable(1024) %0, i32 noundef %1)
  %22 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %14, i64 0, i32 2
  store i32 %21, ptr %22, align 4, !tbaa !118
  %23 = load ptr, ptr %0, align 8, !tbaa !5
  %24 = getelementptr inbounds ptr, ptr %23, i64 28
  %25 = load ptr, ptr %24, align 8
  %26 = tail call noundef i32 %25(ptr noundef nonnull align 8 dereferenceable(1024) %0, i32 noundef %1)
  %27 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %14, i64 0, i32 3
  store i32 %26, ptr %27, align 8, !tbaa !125
  %28 = load i32, ptr %22, align 4, !tbaa !118
  %29 = or i32 %28, %26
  %30 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %14, i64 0, i32 1
  store i32 %29, ptr %30, align 8, !tbaa !126
  %31 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3
  %32 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !127
  %34 = load ptr, ptr %31, align 8, !tbaa !128
  %35 = ptrtoint ptr %33 to i64
  %36 = ptrtoint ptr %34 to i64
  %37 = sub i64 %35, %36
  %38 = lshr exact i64 %37, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #15
  %39 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %6, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #15
  %40 = and i32 %29, 1
  %41 = icmp eq i32 %40, 0
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br i1 %41, label %125, label %42

42:                                               ; preds = %15
  %43 = getelementptr inbounds i8, ptr %0, i64 112
  %44 = load i32, ptr %43, align 8, !tbaa !129
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false), !tbaa !8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = zext i32 %44 to i64
  invoke void @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr null, i64 noundef %47, ptr noundef nonnull align 8 dereferenceable(24) %8)
          to label %48 unwind label %88

48:                                               ; preds = %46
  %49 = load i32, ptr %43, align 8, !tbaa !129
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %42, %48
  %52 = phi i64 [ %50, %48 ], [ 0, %42 ]
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)
  %53 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !33
  %55 = load ptr, ptr %17, align 8, !tbaa !130
  %56 = ptrtoint ptr %54 to i64
  %57 = ptrtoint ptr %55 to i64
  %58 = sub i64 %56, %57
  %59 = sdiv exact i64 %58, 24
  %60 = icmp ult i64 %59, %52
  br i1 %60, label %61, label %63

61:                                               ; preds = %51
  %62 = sub nsw i64 %52, %59
  invoke void @_ZNSt6vectorIS_IN6dealii6TensorILi1ELi3EEESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_(ptr noundef nonnull align 8 dereferenceable(24) %17, ptr %54, i64 noundef %62, ptr noundef nonnull align 8 dereferenceable(24) %9)
          to label %77 unwind label %90

63:                                               ; preds = %51
  %64 = icmp ugt i64 %59, %52
  br i1 %64, label %65, label %77

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::vector.67", ptr %55, i64 %52
  %67 = icmp eq ptr %54, %66
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %73
  %69 = phi ptr [ %74, %73 ], [ %66, %65 ]
  %70 = load ptr, ptr %69, align 8, !tbaa !25
  %71 = icmp eq ptr %70, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %68
  call void @_ZdlPv(ptr noundef nonnull %70) #17
  br label %73

73:                                               ; preds = %72, %68
  %74 = getelementptr inbounds %"class.std::vector.67", ptr %69, i64 1
  %75 = icmp eq ptr %74, %54
  br i1 %75, label %76, label %68

76:                                               ; preds = %73
  store ptr %66, ptr %53, align 8, !tbaa !132
  br label %77

77:                                               ; preds = %76, %65, %63, %61
  %78 = load ptr, ptr %9, align 8, !tbaa !25
  %79 = icmp eq ptr %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %77
  call void @_ZdlPv(ptr noundef nonnull %78) #17
  br label %81

81:                                               ; preds = %77, %80
  %82 = load i32, ptr %43, align 8, !tbaa !129
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %125, label %84

84:                                               ; preds = %81
  %85 = and i64 %38, 4294967295
  br label %95

86:                                               ; preds = %4
  %87 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %14) #17
  br label %465

88:                                               ; preds = %139, %46, %224
  %89 = landingpad { ptr, i32 }
          cleanup
  br label %446

90:                                               ; preds = %61
  %91 = landingpad { ptr, i32 }
          cleanup
  %92 = load ptr, ptr %9, align 8, !tbaa !25
  %93 = icmp eq ptr %92, null
  br i1 %93, label %446, label %94

94:                                               ; preds = %90
  call void @_ZdlPv(ptr noundef nonnull %92) #17
  br label %446

95:                                               ; preds = %84, %118
  %96 = phi i32 [ %82, %84 ], [ %119, %118 ]
  %97 = phi i64 [ 0, %84 ], [ %120, %118 ]
  %98 = load ptr, ptr %17, align 8, !tbaa !130
  %99 = getelementptr inbounds %"class.std::vector.67", ptr %98, i64 %97
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false), !tbaa !8
  %100 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %99, i64 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !33
  %102 = load ptr, ptr %99, align 8, !tbaa !25
  %103 = ptrtoint ptr %101 to i64
  %104 = ptrtoint ptr %102 to i64
  %105 = sub i64 %103, %104
  %106 = sdiv exact i64 %105, 24
  %107 = icmp ult i64 %106, %85
  br i1 %107, label %108, label %112

108:                                              ; preds = %95
  %109 = sub nsw i64 %85, %106
  invoke void @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %99, ptr %101, i64 noundef %109, ptr noundef nonnull align 8 dereferenceable(24) %10)
          to label %110 unwind label %123

110:                                              ; preds = %108
  %111 = load i32, ptr %43, align 8, !tbaa !129
  br label %118

112:                                              ; preds = %95
  %113 = icmp ugt i64 %106, %85
  br i1 %113, label %114, label %118

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"class.dealii::Tensor", ptr %102, i64 %85
  %116 = icmp eq ptr %101, %115
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  store ptr %115, ptr %100, align 8, !tbaa !23
  br label %118

118:                                              ; preds = %110, %117, %114, %112
  %119 = phi i32 [ %111, %110 ], [ %96, %117 ], [ %96, %114 ], [ %96, %112 ]
  %120 = add nuw nsw i64 %97, 1
  %121 = zext i32 %119 to i64
  %122 = icmp ult i64 %120, %121
  br i1 %122, label %95, label %125

123:                                              ; preds = %108
  %124 = landingpad { ptr, i32 }
          cleanup
  br label %446

125:                                              ; preds = %118, %81, %15
  %126 = and i32 %29, 2
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %221, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds i8, ptr %0, i64 112
  %130 = load i32, ptr %129, align 8, !tbaa !129
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %11, i8 0, i64 72, i1 false), !tbaa !8
  %131 = zext i32 %130 to i64
  %132 = load ptr, ptr %39, align 8, !tbaa !33
  %133 = load ptr, ptr %6, align 8, !tbaa !51
  %134 = ptrtoint ptr %132 to i64
  %135 = ptrtoint ptr %133 to i64
  %136 = sub i64 %134, %135
  %137 = sdiv exact i64 %136, 72
  %138 = icmp ult i64 %137, %131
  br i1 %138, label %139, label %144

139:                                              ; preds = %128
  %140 = sub nsw i64 %131, %137
  invoke void @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr %132, i64 noundef %140, ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %141 unwind label %88

141:                                              ; preds = %139
  %142 = load i32, ptr %129, align 8, !tbaa !129
  %143 = zext i32 %142 to i64
  br label %150

144:                                              ; preds = %128
  %145 = icmp ugt i64 %137, %131
  br i1 %145, label %146, label %150

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %133, i64 %131
  %148 = icmp eq ptr %132, %147
  br i1 %148, label %150, label %149

149:                                              ; preds = %146
  store ptr %147, ptr %39, align 8, !tbaa !49
  br label %150

150:                                              ; preds = %141, %144, %146, %149
  %151 = phi i64 [ %143, %141 ], [ %131, %144 ], [ %131, %146 ], [ %131, %149 ]
  %152 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %14, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  %153 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %154 = load ptr, ptr %153, align 8, !tbaa !33
  %155 = load ptr, ptr %152, align 8, !tbaa !133
  %156 = ptrtoint ptr %154 to i64
  %157 = ptrtoint ptr %155 to i64
  %158 = sub i64 %156, %157
  %159 = sdiv exact i64 %158, 24
  %160 = icmp ult i64 %159, %151
  br i1 %160, label %161, label %163

161:                                              ; preds = %150
  %162 = sub nsw i64 %151, %159
  invoke void @_ZNSt6vectorIS_IN6dealii6TensorILi2ELi3EEESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_(ptr noundef nonnull align 8 dereferenceable(24) %152, ptr %154, i64 noundef %162, ptr noundef nonnull align 8 dereferenceable(24) %12)
          to label %177 unwind label %186

163:                                              ; preds = %150
  %164 = icmp ugt i64 %159, %151
  br i1 %164, label %165, label %177

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.std::vector.72", ptr %155, i64 %151
  %167 = icmp eq ptr %154, %166
  br i1 %167, label %177, label %168

168:                                              ; preds = %165, %173
  %169 = phi ptr [ %174, %173 ], [ %166, %165 ]
  %170 = load ptr, ptr %169, align 8, !tbaa !51
  %171 = icmp eq ptr %170, null
  br i1 %171, label %173, label %172

172:                                              ; preds = %168
  call void @_ZdlPv(ptr noundef nonnull %170) #17
  br label %173

173:                                              ; preds = %172, %168
  %174 = getelementptr inbounds %"class.std::vector.72", ptr %169, i64 1
  %175 = icmp eq ptr %174, %154
  br i1 %175, label %176, label %168

176:                                              ; preds = %173
  store ptr %166, ptr %153, align 8, !tbaa !135
  br label %177

177:                                              ; preds = %176, %165, %163, %161
  %178 = load ptr, ptr %12, align 8, !tbaa !51
  %179 = icmp eq ptr %178, null
  br i1 %179, label %181, label %180

180:                                              ; preds = %177
  call void @_ZdlPv(ptr noundef nonnull %178) #17
  br label %181

181:                                              ; preds = %177, %180
  %182 = load i32, ptr %129, align 8, !tbaa !129
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %221, label %184

184:                                              ; preds = %181
  %185 = and i64 %38, 4294967295
  br label %191

186:                                              ; preds = %161
  %187 = landingpad { ptr, i32 }
          cleanup
  %188 = load ptr, ptr %12, align 8, !tbaa !51
  %189 = icmp eq ptr %188, null
  br i1 %189, label %446, label %190

190:                                              ; preds = %186
  call void @_ZdlPv(ptr noundef nonnull %188) #17
  br label %446

191:                                              ; preds = %184, %214
  %192 = phi i32 [ %182, %184 ], [ %215, %214 ]
  %193 = phi i64 [ 0, %184 ], [ %216, %214 ]
  %194 = load ptr, ptr %152, align 8, !tbaa !133
  %195 = getelementptr inbounds %"class.std::vector.72", ptr %194, i64 %193
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %13, i8 0, i64 72, i1 false), !tbaa !8
  %196 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %195, i64 0, i32 1
  %197 = load ptr, ptr %196, align 8, !tbaa !33
  %198 = load ptr, ptr %195, align 8, !tbaa !51
  %199 = ptrtoint ptr %197 to i64
  %200 = ptrtoint ptr %198 to i64
  %201 = sub i64 %199, %200
  %202 = sdiv exact i64 %201, 72
  %203 = icmp ult i64 %202, %185
  br i1 %203, label %204, label %208

204:                                              ; preds = %191
  %205 = sub nsw i64 %185, %202
  invoke void @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %195, ptr %197, i64 noundef %205, ptr noundef nonnull align 8 dereferenceable(72) %13)
          to label %206 unwind label %219

206:                                              ; preds = %204
  %207 = load i32, ptr %129, align 8, !tbaa !129
  br label %214

208:                                              ; preds = %191
  %209 = icmp ugt i64 %202, %185
  br i1 %209, label %210, label %214

210:                                              ; preds = %208
  %211 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %198, i64 %185
  %212 = icmp eq ptr %197, %211
  br i1 %212, label %214, label %213

213:                                              ; preds = %210
  store ptr %211, ptr %196, align 8, !tbaa !49
  br label %214

214:                                              ; preds = %206, %213, %210, %208
  %215 = phi i32 [ %207, %206 ], [ %192, %213 ], [ %192, %210 ], [ %192, %208 ]
  %216 = add nuw nsw i64 %193, 1
  %217 = zext i32 %215 to i64
  %218 = icmp ult i64 %216, %217
  br i1 %218, label %191, label %221

219:                                              ; preds = %204
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %446

221:                                              ; preds = %214, %181, %125
  %222 = and i32 %29, 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %225, label %224

224:                                              ; preds = %221
  invoke void @_ZN6dealii13FiniteElementILi3ELi3EE16InternalDataBase14initialize_2ndEPKS1_RKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE(ptr noundef nonnull align 8 dereferenceable(216) %14, ptr noundef nonnull %0, ptr noundef nonnull align 8 dereferenceable(72) %2, ptr noundef nonnull align 8 dereferenceable(128) %3)
          to label %225 unwind label %88

225:                                              ; preds = %224, %221
  %226 = and i32 %29, 3
  %227 = icmp ne i32 %226, 0
  %228 = and i64 %37, 34359738360
  %229 = icmp ne i64 %228, 0
  %230 = select i1 %227, i1 %229, i1 false
  br i1 %230, label %231, label %438

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 2
  %233 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 2
  %234 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %235 = getelementptr inbounds i8, ptr %0, i64 112
  %236 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %237 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %14, i64 0, i32 2
  %238 = and i64 %38, 4294967295
  br label %239

239:                                              ; preds = %231, %435
  %240 = phi i64 [ 0, %231 ], [ %436, %435 ]
  %241 = load ptr, ptr %232, align 8, !tbaa !136
  %242 = getelementptr inbounds %"class.dealii::Point", ptr %241, i64 %240
  invoke void @_ZNK6dealii14PolynomialsABFILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(96) %233, ptr noundef nonnull align 8 dereferenceable(24) %242, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %243 unwind label %264

243:                                              ; preds = %239
  br i1 %41, label %344, label %244

244:                                              ; preds = %243
  %245 = load i32, ptr %234, align 8, !tbaa !34
  %246 = icmp eq i32 %245, 0
  %247 = load i32, ptr %235, align 8, !tbaa !129
  %248 = icmp eq i32 %247, 0
  br i1 %246, label %255, label %249

249:                                              ; preds = %244
  br i1 %248, label %344, label %250

250:                                              ; preds = %249
  %251 = load ptr, ptr %236, align 8, !tbaa !35
  %252 = load ptr, ptr %5, align 8, !tbaa !25
  %253 = load ptr, ptr %17, align 8, !tbaa !130
  %254 = zext i32 %247 to i64
  br label %295

255:                                              ; preds = %244
  br i1 %248, label %344, label %256

256:                                              ; preds = %255
  %257 = load ptr, ptr %5, align 8, !tbaa !25
  %258 = load ptr, ptr %17, align 8, !tbaa !130
  %259 = zext i32 %247 to i64
  %260 = and i64 %259, 1
  %261 = icmp eq i32 %247, 1
  br i1 %261, label %329, label %262

262:                                              ; preds = %256
  %263 = and i64 %259, 4294967294
  br label %266

264:                                              ; preds = %239
  %265 = landingpad { ptr, i32 }
          cleanup
  br label %446

266:                                              ; preds = %266, %262
  %267 = phi i64 [ 0, %262 ], [ %292, %266 ]
  %268 = phi i64 [ 0, %262 ], [ %293, %266 ]
  %269 = getelementptr inbounds %"class.dealii::Tensor", ptr %257, i64 %267
  %270 = getelementptr inbounds %"class.std::vector.67", ptr %258, i64 %267
  %271 = load ptr, ptr %270, align 8, !tbaa !25
  %272 = getelementptr inbounds %"class.dealii::Tensor", ptr %271, i64 %240
  %273 = load double, ptr %269, align 8, !tbaa !8
  store double %273, ptr %272, align 8, !tbaa !8
  %274 = getelementptr inbounds [3 x double], ptr %269, i64 0, i64 1
  %275 = load double, ptr %274, align 8, !tbaa !8
  %276 = getelementptr inbounds [3 x double], ptr %272, i64 0, i64 1
  store double %275, ptr %276, align 8, !tbaa !8
  %277 = getelementptr inbounds [3 x double], ptr %269, i64 0, i64 2
  %278 = load double, ptr %277, align 8, !tbaa !8
  %279 = getelementptr inbounds [3 x double], ptr %272, i64 0, i64 2
  store double %278, ptr %279, align 8, !tbaa !8
  %280 = or i64 %267, 1
  %281 = getelementptr inbounds %"class.dealii::Tensor", ptr %257, i64 %280
  %282 = getelementptr inbounds %"class.std::vector.67", ptr %258, i64 %280
  %283 = load ptr, ptr %282, align 8, !tbaa !25
  %284 = getelementptr inbounds %"class.dealii::Tensor", ptr %283, i64 %240
  %285 = load double, ptr %281, align 8, !tbaa !8
  store double %285, ptr %284, align 8, !tbaa !8
  %286 = getelementptr inbounds [3 x double], ptr %281, i64 0, i64 1
  %287 = load double, ptr %286, align 8, !tbaa !8
  %288 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 1
  store double %287, ptr %288, align 8, !tbaa !8
  %289 = getelementptr inbounds [3 x double], ptr %281, i64 0, i64 2
  %290 = load double, ptr %289, align 8, !tbaa !8
  %291 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 2
  store double %290, ptr %291, align 8, !tbaa !8
  %292 = add nuw nsw i64 %267, 2
  %293 = add i64 %268, 2
  %294 = icmp eq i64 %293, %263
  br i1 %294, label %329, label %266

295:                                              ; preds = %250, %304
  %296 = phi i64 [ 0, %250 ], [ %305, %304 ]
  %297 = getelementptr inbounds %"class.std::vector.67", ptr %253, i64 %296
  %298 = load ptr, ptr %297, align 8, !tbaa !25
  %299 = getelementptr inbounds %"class.dealii::Tensor", ptr %298, i64 %240
  %300 = getelementptr inbounds [3 x double], ptr %299, i64 0, i64 2
  %301 = load <2 x double>, ptr %299, align 8, !tbaa !8
  %302 = load double, ptr %300, align 8, !tbaa !8
  %303 = trunc i64 %296 to i32
  br label %307

304:                                              ; preds = %307
  %305 = add nuw nsw i64 %296, 1
  %306 = icmp eq i64 %305, %254
  br i1 %306, label %344, label %295

307:                                              ; preds = %295, %307
  %308 = phi i64 [ 0, %295 ], [ %327, %307 ]
  %309 = phi double [ %302, %295 ], [ %326, %307 ]
  %310 = phi <2 x double> [ %301, %295 ], [ %325, %307 ]
  %311 = trunc i64 %308 to i32
  %312 = mul i32 %245, %311
  %313 = add i32 %312, %303
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds double, ptr %251, i64 %314
  %316 = load double, ptr %315, align 8, !tbaa !8
  %317 = getelementptr inbounds %"class.dealii::Tensor", ptr %252, i64 %308
  %318 = getelementptr inbounds [3 x double], ptr %317, i64 0, i64 2
  %319 = load double, ptr %318, align 8, !tbaa !8, !noalias !344
  %320 = fmul double %316, %319
  %321 = load <2 x double>, ptr %317, align 8, !tbaa !8, !noalias !344
  %322 = insertelement <2 x double> poison, double %316, i64 0
  %323 = shufflevector <2 x double> %322, <2 x double> poison, <2 x i32> zeroinitializer
  %324 = fmul <2 x double> %323, %321
  %325 = fadd <2 x double> %324, %310
  store <2 x double> %325, ptr %299, align 8, !tbaa !8
  %326 = fadd double %320, %309
  store double %326, ptr %300, align 8, !tbaa !8
  %327 = add nuw nsw i64 %308, 1
  %328 = icmp eq i64 %327, %254
  br i1 %328, label %304, label %307

329:                                              ; preds = %266, %256
  %330 = phi i64 [ 0, %256 ], [ %292, %266 ]
  %331 = icmp eq i64 %260, 0
  br i1 %331, label %344, label %332

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.dealii::Tensor", ptr %257, i64 %330
  %334 = getelementptr inbounds %"class.std::vector.67", ptr %258, i64 %330
  %335 = load ptr, ptr %334, align 8, !tbaa !25
  %336 = getelementptr inbounds %"class.dealii::Tensor", ptr %335, i64 %240
  %337 = load double, ptr %333, align 8, !tbaa !8
  store double %337, ptr %336, align 8, !tbaa !8
  %338 = getelementptr inbounds [3 x double], ptr %333, i64 0, i64 1
  %339 = load double, ptr %338, align 8, !tbaa !8
  %340 = getelementptr inbounds [3 x double], ptr %336, i64 0, i64 1
  store double %339, ptr %340, align 8, !tbaa !8
  %341 = getelementptr inbounds [3 x double], ptr %333, i64 0, i64 2
  %342 = load double, ptr %341, align 8, !tbaa !8
  %343 = getelementptr inbounds [3 x double], ptr %336, i64 0, i64 2
  store double %342, ptr %343, align 8, !tbaa !8
  br label %344

344:                                              ; preds = %304, %332, %329, %249, %255, %243
  br i1 %127, label %435, label %345

345:                                              ; preds = %344
  %346 = load i32, ptr %234, align 8, !tbaa !34
  %347 = icmp eq i32 %346, 0
  %348 = load i32, ptr %235, align 8, !tbaa !129
  %349 = icmp eq i32 %348, 0
  br i1 %347, label %356, label %350

350:                                              ; preds = %345
  br i1 %349, label %435, label %351

351:                                              ; preds = %350
  %352 = load ptr, ptr %236, align 8, !tbaa !35
  %353 = load ptr, ptr %6, align 8, !tbaa !51
  %354 = load ptr, ptr %237, align 8, !tbaa !133
  %355 = zext i32 %348 to i64
  br label %394

356:                                              ; preds = %345
  br i1 %349, label %435, label %357

357:                                              ; preds = %356
  %358 = load ptr, ptr %6, align 8, !tbaa !51
  %359 = load ptr, ptr %237, align 8, !tbaa !133
  %360 = zext i32 %348 to i64
  br label %361

361:                                              ; preds = %357, %361
  %362 = phi i64 [ 0, %357 ], [ %392, %361 ]
  %363 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %358, i64 %362
  %364 = getelementptr inbounds %"class.std::vector.72", ptr %359, i64 %362
  %365 = load ptr, ptr %364, align 8, !tbaa !51
  %366 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %365, i64 %240
  %367 = load double, ptr %363, align 8, !tbaa !8
  store double %367, ptr %366, align 8, !tbaa !8
  %368 = getelementptr inbounds [3 x double], ptr %363, i64 0, i64 1
  %369 = load double, ptr %368, align 8, !tbaa !8
  %370 = getelementptr inbounds [3 x double], ptr %366, i64 0, i64 1
  store double %369, ptr %370, align 8, !tbaa !8
  %371 = getelementptr inbounds [3 x double], ptr %363, i64 0, i64 2
  %372 = load double, ptr %371, align 8, !tbaa !8
  %373 = getelementptr inbounds [3 x double], ptr %366, i64 0, i64 2
  store double %372, ptr %373, align 8, !tbaa !8
  %374 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 1
  %375 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 1
  %376 = load double, ptr %374, align 8, !tbaa !8
  store double %376, ptr %375, align 8, !tbaa !8
  %377 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 1, i32 0, i64 1
  %378 = load double, ptr %377, align 8, !tbaa !8
  %379 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 1, i32 0, i64 1
  store double %378, ptr %379, align 8, !tbaa !8
  %380 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 1, i32 0, i64 2
  %381 = load double, ptr %380, align 8, !tbaa !8
  %382 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 1, i32 0, i64 2
  store double %381, ptr %382, align 8, !tbaa !8
  %383 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 2
  %384 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 2
  %385 = load double, ptr %383, align 8, !tbaa !8
  store double %385, ptr %384, align 8, !tbaa !8
  %386 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 2, i32 0, i64 1
  %387 = load double, ptr %386, align 8, !tbaa !8
  %388 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 2, i32 0, i64 1
  store double %387, ptr %388, align 8, !tbaa !8
  %389 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 2, i32 0, i64 2
  %390 = load double, ptr %389, align 8, !tbaa !8
  %391 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 2, i32 0, i64 2
  store double %390, ptr %391, align 8, !tbaa !8
  %392 = add nuw nsw i64 %362, 1
  %393 = icmp eq i64 %392, %360
  br i1 %393, label %435, label %361

394:                                              ; preds = %351, %405
  %395 = phi i64 [ 0, %351 ], [ %406, %405 ]
  %396 = getelementptr inbounds %"class.std::vector.72", ptr %354, i64 %395
  %397 = load ptr, ptr %396, align 8, !tbaa !51
  %398 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %397, i64 %240
  %399 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %398, i64 0, i64 1, i32 0, i64 1
  %400 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %398, i64 0, i64 2, i32 0, i64 2
  %401 = load <4 x double>, ptr %398, align 8, !tbaa !8
  %402 = load <4 x double>, ptr %399, align 8, !tbaa !8
  %403 = load double, ptr %400, align 8, !tbaa !8
  %404 = trunc i64 %395 to i32
  br label %408

405:                                              ; preds = %408
  %406 = add nuw nsw i64 %395, 1
  %407 = icmp eq i64 %406, %355
  br i1 %407, label %435, label %394

408:                                              ; preds = %394, %408
  %409 = phi i64 [ 0, %394 ], [ %433, %408 ]
  %410 = phi double [ %403, %394 ], [ %432, %408 ]
  %411 = phi <4 x double> [ %401, %394 ], [ %428, %408 ]
  %412 = phi <4 x double> [ %402, %394 ], [ %431, %408 ]
  %413 = trunc i64 %409 to i32
  %414 = mul i32 %346, %413
  %415 = add i32 %414, %404
  %416 = zext i32 %415 to i64
  %417 = getelementptr inbounds double, ptr %352, i64 %416
  %418 = load double, ptr %417, align 8, !tbaa !8
  %419 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %353, i64 %409
  %420 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %419, i64 0, i64 1, i32 0, i64 1
  %421 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %419, i64 0, i64 2, i32 0, i64 2
  %422 = load double, ptr %421, align 8, !tbaa !8, !noalias !347
  %423 = fmul double %418, %422
  %424 = load <4 x double>, ptr %419, align 8, !tbaa !8, !noalias !347
  %425 = insertelement <4 x double> poison, double %418, i64 0
  %426 = shufflevector <4 x double> %425, <4 x double> poison, <4 x i32> zeroinitializer
  %427 = fmul <4 x double> %426, %424
  %428 = fadd <4 x double> %427, %411
  %429 = load <4 x double>, ptr %420, align 8, !tbaa !8, !noalias !347
  %430 = fmul <4 x double> %426, %429
  store <4 x double> %428, ptr %398, align 8, !tbaa !8
  %431 = fadd <4 x double> %430, %412
  store <4 x double> %431, ptr %399, align 8, !tbaa !8
  %432 = fadd double %423, %410
  store double %432, ptr %400, align 8, !tbaa !8
  %433 = add nuw nsw i64 %409, 1
  %434 = icmp eq i64 %433, %355
  br i1 %434, label %405, label %408

435:                                              ; preds = %405, %361, %350, %356, %344
  %436 = add nuw nsw i64 %240, 1
  %437 = icmp eq i64 %436, %238
  br i1 %437, label %438, label %239

438:                                              ; preds = %435, %225
  %439 = load ptr, ptr %7, align 8, !tbaa !57
  %440 = icmp eq ptr %439, null
  br i1 %440, label %442, label %441

441:                                              ; preds = %438
  call void @_ZdlPv(ptr noundef nonnull %439) #17
  br label %442

442:                                              ; preds = %441, %438
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #15
  %443 = load ptr, ptr %6, align 8, !tbaa !51
  %444 = icmp eq ptr %443, null
  br i1 %444, label %455, label %445

445:                                              ; preds = %442
  call void @_ZdlPv(ptr noundef nonnull %443) #17
  br label %455

446:                                              ; preds = %190, %186, %94, %90, %264, %219, %123, %88
  %447 = phi { ptr, i32 } [ %124, %123 ], [ %220, %219 ], [ %89, %88 ], [ %265, %264 ], [ %91, %90 ], [ %91, %94 ], [ %187, %186 ], [ %187, %190 ]
  %448 = load ptr, ptr %7, align 8, !tbaa !57
  %449 = icmp eq ptr %448, null
  br i1 %449, label %451, label %450

450:                                              ; preds = %446
  call void @_ZdlPv(ptr noundef nonnull %448) #17
  br label %451

451:                                              ; preds = %450, %446
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #15
  %452 = load ptr, ptr %6, align 8, !tbaa !51
  %453 = icmp eq ptr %452, null
  br i1 %453, label %460, label %454

454:                                              ; preds = %451
  call void @_ZdlPv(ptr noundef nonnull %452) #17
  br label %460

455:                                              ; preds = %445, %442
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #15
  %456 = load ptr, ptr %5, align 8, !tbaa !25
  %457 = icmp eq ptr %456, null
  br i1 %457, label %459, label %458

458:                                              ; preds = %455
  call void @_ZdlPv(ptr noundef nonnull %456) #17
  br label %459

459:                                              ; preds = %455, %458
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret ptr %14

460:                                              ; preds = %454, %451
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #15
  %461 = load ptr, ptr %5, align 8, !tbaa !25
  %462 = icmp eq ptr %461, null
  br i1 %462, label %464, label %463

463:                                              ; preds = %460
  call void @_ZdlPv(ptr noundef nonnull %461) #17
  br label %464

464:                                              ; preds = %463, %460
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  br label %465

465:                                              ; preds = %464, %86
  %466 = phi { ptr, i32 } [ %447, %464 ], [ %87, %86 ]
  resume { ptr, i32 } %466
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE14fill_fe_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEERKNS_10QuadratureILi3EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEERNS_14CellSimilarity10SimilarityE(ptr noundef nonnull align 8 dereferenceable(1024) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(185) %4, ptr noundef nonnull align 8 dereferenceable(185) %5, ptr noundef nonnull align 8 dereferenceable(436) %6, ptr noundef nonnull align 4 dereferenceable(4) %7) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %9 = alloca %"class.std::vector.67", align 8
  %10 = alloca %"class.std::vector.67", align 8
  %11 = alloca %"class.std::vector.72", align 8
  %12 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %13 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %14 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !127
  %17 = load ptr, ptr %14, align 8, !tbaa !128
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = lshr exact i64 %20, 3
  %22 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %5, i64 0, i32 9
  %23 = load i8, ptr %22, align 8, !tbaa !143, !range !144, !noundef !145
  %24 = icmp eq i8 %23, 0
  %25 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %5, i64 0, i32 1
  %26 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %5, i64 0, i32 3
  %27 = load i32, ptr %26, align 8
  %28 = load i32, ptr %25, align 8
  %29 = select i1 %24, i32 %27, i32 %28
  %30 = getelementptr inbounds i8, ptr %0, i64 112
  %31 = load i32, ptr %30, align 8, !tbaa !129
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %89, label %33

33:                                               ; preds = %8
  %34 = zext i32 %31 to i64
  %35 = shl nuw nsw i64 %34, 3
  %36 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %35) #16
  %37 = getelementptr inbounds double, ptr %36, i64 %34
  %38 = add nuw nsw i64 %34, 2305843009213693951
  %39 = and i64 %38, 2305843009213693951
  %40 = add nuw nsw i64 %39, 1
  %41 = icmp ult i64 %39, 15
  br i1 %41, label %57, label %42

42:                                               ; preds = %33
  %43 = and i64 %40, 4611686018427387888
  %44 = shl i64 %43, 3
  %45 = getelementptr i8, ptr %36, i64 %44
  br label %46

46:                                               ; preds = %46, %42
  %47 = phi i64 [ 0, %42 ], [ %53, %46 ]
  %48 = shl i64 %47, 3
  %49 = getelementptr i8, ptr %36, i64 %48
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %49, align 8, !tbaa !8
  %50 = getelementptr double, ptr %49, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %50, align 8, !tbaa !8
  %51 = getelementptr double, ptr %49, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %51, align 8, !tbaa !8
  %52 = getelementptr double, ptr %49, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %52, align 8, !tbaa !8
  %53 = add nuw i64 %47, 16
  %54 = icmp eq i64 %53, %43
  br i1 %54, label %55, label %46, !llvm.loop !350

55:                                               ; preds = %46
  %56 = icmp eq i64 %40, %43
  br i1 %56, label %63, label %57

57:                                               ; preds = %33, %55
  %58 = phi ptr [ %36, %33 ], [ %45, %55 ]
  br label %59

59:                                               ; preds = %57, %59
  %60 = phi ptr [ %61, %59 ], [ %58, %57 ]
  store double 1.000000e+00, ptr %60, align 8, !tbaa !8
  %61 = getelementptr inbounds double, ptr %60, i64 1
  %62 = icmp eq ptr %61, %37
  br i1 %62, label %63, label %59, !llvm.loop !351

63:                                               ; preds = %59, %55
  %64 = add nuw nsw i64 %34, 2305843009213693951
  %65 = and i64 %64, 2305843009213693951
  %66 = add nuw nsw i64 %65, 1
  %67 = icmp ult i64 %65, 15
  br i1 %67, label %83, label %68

68:                                               ; preds = %63
  %69 = and i64 %66, 4611686018427387888
  %70 = shl i64 %69, 3
  %71 = getelementptr i8, ptr %36, i64 %70
  br label %72

72:                                               ; preds = %72, %68
  %73 = phi i64 [ 0, %68 ], [ %79, %72 ]
  %74 = shl i64 %73, 3
  %75 = getelementptr i8, ptr %36, i64 %74
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %75, align 8, !tbaa !8
  %76 = getelementptr double, ptr %75, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %76, align 8, !tbaa !8
  %77 = getelementptr double, ptr %75, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %77, align 8, !tbaa !8
  %78 = getelementptr double, ptr %75, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %78, align 8, !tbaa !8
  %79 = add nuw i64 %73, 16
  %80 = icmp eq i64 %79, %69
  br i1 %80, label %81, label %72, !llvm.loop !352

81:                                               ; preds = %72
  %82 = icmp eq i64 %66, %69
  br i1 %82, label %89, label %83

83:                                               ; preds = %63, %81
  %84 = phi ptr [ %36, %63 ], [ %71, %81 ]
  br label %85

85:                                               ; preds = %83, %85
  %86 = phi ptr [ %87, %85 ], [ %84, %83 ]
  store double 1.000000e+00, ptr %86, align 8, !tbaa !8
  %87 = getelementptr inbounds double, ptr %86, i64 1
  %88 = icmp eq ptr %87, %37
  br i1 %88, label %89, label %85, !llvm.loop !353

89:                                               ; preds = %85, %81, %8
  %90 = phi ptr [ null, %8 ], [ %36, %81 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 1
  %92 = load i32, ptr %91, align 8, !tbaa !342
  %93 = icmp eq i32 %92, 256
  %94 = load i32, ptr %7, align 4
  %95 = icmp eq i32 %94, 1
  %96 = select i1 %93, i1 %95, i1 false
  br i1 %96, label %97, label %98

97:                                               ; preds = %89
  store i32 0, ptr %7, align 4, !tbaa !152
  br label %98

98:                                               ; preds = %97, %89
  %99 = phi i32 [ 0, %97 ], [ %94, %89 ]
  br i1 %32, label %168, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %6, i64 0, i32 14
  %102 = and i32 %29, 1
  %103 = icmp eq i32 %102, 0
  %104 = and i64 %21, 4294967295
  %105 = icmp eq i64 %104, 0
  %106 = mul nuw nsw i64 %104, 24
  %107 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %10, i64 0, i32 2
  %108 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %10, i64 0, i32 1
  %109 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %5, i64 0, i32 1
  %110 = and i64 %20, 34359738360
  %111 = icmp eq i64 %110, 0
  %112 = getelementptr inbounds %"class.dealii::TableBase", ptr %6, i64 0, i32 1
  %113 = getelementptr inbounds %"class.dealii::TableBase", ptr %6, i64 0, i32 3, i32 0, i32 0, i64 1
  %114 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %9, i64 0, i32 2
  %115 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %9, i64 0, i32 1
  %116 = and i32 %29, 2
  %117 = icmp eq i32 %116, 0
  %118 = mul nuw nsw i64 %104, 72
  %119 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %11, i64 0, i32 2
  %120 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %11, i64 0, i32 1
  %121 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %5, i64 0, i32 2
  %122 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %6, i64 0, i32 1
  %123 = and i64 %21, 4294967295
  %124 = and i64 %21, 4294967295
  %125 = and i64 %21, 4294967295
  %126 = and i64 %21, 4294967295
  %127 = and i64 %21, 4294967295
  %128 = and i64 %21, 4294967295
  %129 = and i64 %21, 4294967295
  %130 = add nsw i64 %123, -1
  %131 = mul nuw nsw i64 %123, 24
  %132 = add nsw i64 %131, -16
  %133 = add nsw i64 %131, -8
  %134 = add nsw i64 %123, -1
  %135 = mul nuw nsw i64 %123, 24
  %136 = add nsw i64 %135, -16
  %137 = add nsw i64 %135, -8
  %138 = add nsw i64 %123, -1
  %139 = mul nuw nsw i64 %123, 24
  %140 = add nsw i64 %139, -16
  %141 = add nsw i64 %139, -8
  %142 = icmp ult i64 %123, 40
  %143 = trunc i64 %138 to i32
  %144 = trunc i64 %138 to i32
  %145 = icmp ugt i64 %138, 4294967295
  %146 = trunc i64 %138 to i32
  %147 = and i64 %21, 3
  %148 = sub nsw i64 %123, %147
  %149 = icmp eq i64 %147, 0
  %150 = icmp ult i64 %123, 60
  %151 = trunc i64 %134 to i32
  %152 = trunc i64 %134 to i32
  %153 = icmp ugt i64 %134, 4294967295
  %154 = trunc i64 %134 to i32
  %155 = and i64 %21, 3
  %156 = sub nsw i64 %123, %155
  %157 = icmp eq i64 %155, 0
  %158 = icmp ult i64 %123, 60
  %159 = trunc i64 %130 to i32
  %160 = trunc i64 %130 to i32
  %161 = icmp ugt i64 %130, 4294967295
  %162 = trunc i64 %130 to i32
  %163 = and i64 %21, 3
  %164 = sub nsw i64 %123, %163
  %165 = icmp eq i64 %163, 0
  br label %174

166:                                              ; preds = %1100
  %167 = load i32, ptr %7, align 4
  br label %168

168:                                              ; preds = %166, %98
  %169 = phi i32 [ %167, %166 ], [ %99, %98 ]
  %170 = and i32 %29, 4
  %171 = icmp eq i32 %170, 0
  %172 = icmp eq i32 %169, 1
  %173 = select i1 %171, i1 true, i1 %172
  br i1 %173, label %1114, label %1105

174:                                              ; preds = %100, %1100
  %175 = phi i64 [ 0, %100 ], [ %1101, %1100 ]
  %176 = shl nuw nsw i64 %175, 3
  %177 = getelementptr i8, ptr %90, i64 %176
  %178 = add nuw i64 %176, 8
  %179 = getelementptr i8, ptr %90, i64 %178
  %180 = load ptr, ptr %101, align 8, !tbaa !154
  %181 = getelementptr inbounds i32, ptr %180, i64 %175
  %182 = load i32, ptr %181, align 4, !tbaa !34
  %183 = load i32, ptr %7, align 4
  %184 = icmp eq i32 %183, 1
  %185 = select i1 %103, i1 true, i1 %184
  br i1 %185, label %793, label %186

186:                                              ; preds = %174
  %187 = load i32, ptr %91, align 8, !tbaa !342
  switch i32 %187, label %793 [
    i32 0, label %188
    i32 1, label %353
    i32 2, label %353
    i32 256, label %557
  ]

188:                                              ; preds = %186
  br i1 %111, label %793, label %189

189:                                              ; preds = %188
  %190 = load ptr, ptr %109, align 8, !tbaa !130
  %191 = getelementptr inbounds %"class.std::vector.67", ptr %190, i64 %175
  %192 = load ptr, ptr %191, align 8, !tbaa !25
  %193 = load ptr, ptr %112, align 8, !tbaa !35
  %194 = load i32, ptr %113, align 8, !tbaa !34
  %195 = mul i32 %194, %182
  %196 = add i32 %182, 1
  %197 = mul i32 %194, %196
  %198 = add i32 %182, 2
  %199 = mul i32 %194, %198
  br i1 %158, label %331, label %200

200:                                              ; preds = %189
  %201 = xor i32 %195, -1
  %202 = icmp ult i32 %201, %159
  %203 = xor i32 %197, -1
  %204 = icmp ult i32 %203, %160
  %205 = or i1 %204, %161
  %206 = xor i32 %199, -1
  %207 = icmp ult i32 %206, %162
  %208 = or i1 %202, %205
  %209 = or i1 %207, %208
  br i1 %209, label %331, label %210

210:                                              ; preds = %200
  %211 = zext i32 %195 to i64
  %212 = shl nuw nsw i64 %211, 3
  %213 = getelementptr i8, ptr %193, i64 %212
  %214 = getelementptr i8, ptr %193, i64 %110
  %215 = getelementptr i8, ptr %214, i64 %212
  %216 = zext i32 %197 to i64
  %217 = shl nuw nsw i64 %216, 3
  %218 = getelementptr i8, ptr %193, i64 %217
  %219 = getelementptr i8, ptr %214, i64 %217
  %220 = zext i32 %199 to i64
  %221 = shl nuw nsw i64 %220, 3
  %222 = getelementptr i8, ptr %193, i64 %221
  %223 = getelementptr i8, ptr %193, i64 %110
  %224 = getelementptr i8, ptr %223, i64 %221
  %225 = getelementptr i8, ptr %192, i64 %132
  %226 = getelementptr i8, ptr %192, i64 8
  %227 = getelementptr i8, ptr %192, i64 %133
  %228 = getelementptr i8, ptr %192, i64 16
  %229 = getelementptr i8, ptr %192, i64 %131
  %230 = icmp ult ptr %213, %219
  %231 = icmp ult ptr %218, %215
  %232 = and i1 %230, %231
  %233 = icmp ult ptr %213, %224
  %234 = icmp ult ptr %222, %215
  %235 = and i1 %233, %234
  %236 = or i1 %232, %235
  %237 = icmp ult ptr %213, %225
  %238 = icmp ult ptr %192, %215
  %239 = and i1 %237, %238
  %240 = or i1 %236, %239
  %241 = icmp ult ptr %213, %227
  %242 = icmp ult ptr %226, %215
  %243 = and i1 %241, %242
  %244 = or i1 %240, %243
  %245 = icmp ult ptr %213, %229
  %246 = icmp ult ptr %228, %215
  %247 = and i1 %245, %246
  %248 = or i1 %244, %247
  %249 = icmp ult ptr %218, %224
  %250 = icmp ult ptr %222, %219
  %251 = and i1 %249, %250
  %252 = or i1 %248, %251
  %253 = icmp ult ptr %218, %225
  %254 = icmp ult ptr %192, %219
  %255 = and i1 %253, %254
  %256 = or i1 %252, %255
  %257 = icmp ult ptr %218, %227
  %258 = icmp ult ptr %226, %219
  %259 = and i1 %257, %258
  %260 = or i1 %256, %259
  %261 = icmp ult ptr %218, %229
  %262 = icmp ult ptr %228, %219
  %263 = and i1 %261, %262
  %264 = or i1 %260, %263
  %265 = icmp ult ptr %222, %225
  %266 = icmp ult ptr %192, %224
  %267 = and i1 %265, %266
  %268 = or i1 %264, %267
  %269 = icmp ult ptr %222, %227
  %270 = icmp ult ptr %226, %224
  %271 = and i1 %269, %270
  %272 = or i1 %268, %271
  %273 = icmp ult ptr %222, %229
  %274 = icmp ult ptr %228, %224
  %275 = and i1 %273, %274
  %276 = or i1 %272, %275
  br i1 %276, label %331, label %277

277:                                              ; preds = %210, %277
  %278 = phi i64 [ %328, %277 ], [ 0, %210 ]
  %279 = trunc i64 %278 to i32
  %280 = or i64 %278, 1
  %281 = or i64 %278, 2
  %282 = or i64 %278, 3
  %283 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %278
  %284 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %280
  %285 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %281
  %286 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %282
  %287 = load double, ptr %283, align 8, !tbaa !8, !alias.scope !354
  %288 = load double, ptr %284, align 8, !tbaa !8, !alias.scope !354
  %289 = load double, ptr %285, align 8, !tbaa !8, !alias.scope !354
  %290 = load double, ptr %286, align 8, !tbaa !8, !alias.scope !354
  %291 = insertelement <4 x double> poison, double %287, i64 0
  %292 = insertelement <4 x double> %291, double %288, i64 1
  %293 = insertelement <4 x double> %292, double %289, i64 2
  %294 = insertelement <4 x double> %293, double %290, i64 3
  %295 = add i32 %195, %279
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds double, ptr %193, i64 %296
  store <4 x double> %294, ptr %297, align 8, !tbaa !8, !alias.scope !357, !noalias !359
  %298 = getelementptr inbounds [3 x double], ptr %283, i64 0, i64 1
  %299 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 1
  %300 = getelementptr inbounds [3 x double], ptr %285, i64 0, i64 1
  %301 = getelementptr inbounds [3 x double], ptr %286, i64 0, i64 1
  %302 = load double, ptr %298, align 8, !tbaa !8, !alias.scope !364
  %303 = load double, ptr %299, align 8, !tbaa !8, !alias.scope !364
  %304 = load double, ptr %300, align 8, !tbaa !8, !alias.scope !364
  %305 = load double, ptr %301, align 8, !tbaa !8, !alias.scope !364
  %306 = insertelement <4 x double> poison, double %302, i64 0
  %307 = insertelement <4 x double> %306, double %303, i64 1
  %308 = insertelement <4 x double> %307, double %304, i64 2
  %309 = insertelement <4 x double> %308, double %305, i64 3
  %310 = add i32 %197, %279
  %311 = zext i32 %310 to i64
  %312 = getelementptr inbounds double, ptr %193, i64 %311
  store <4 x double> %309, ptr %312, align 8, !tbaa !8, !alias.scope !365, !noalias !366
  %313 = getelementptr inbounds [3 x double], ptr %283, i64 0, i64 2
  %314 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 2
  %315 = getelementptr inbounds [3 x double], ptr %285, i64 0, i64 2
  %316 = getelementptr inbounds [3 x double], ptr %286, i64 0, i64 2
  %317 = load double, ptr %313, align 8, !tbaa !8, !alias.scope !367
  %318 = load double, ptr %314, align 8, !tbaa !8, !alias.scope !367
  %319 = load double, ptr %315, align 8, !tbaa !8, !alias.scope !367
  %320 = load double, ptr %316, align 8, !tbaa !8, !alias.scope !367
  %321 = insertelement <4 x double> poison, double %317, i64 0
  %322 = insertelement <4 x double> %321, double %318, i64 1
  %323 = insertelement <4 x double> %322, double %319, i64 2
  %324 = insertelement <4 x double> %323, double %320, i64 3
  %325 = add i32 %199, %279
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds double, ptr %193, i64 %326
  store <4 x double> %324, ptr %327, align 8, !tbaa !8, !alias.scope !368, !noalias !369
  %328 = add nuw i64 %278, 4
  %329 = icmp eq i64 %328, %164
  br i1 %329, label %330, label %277, !llvm.loop !370

330:                                              ; preds = %277
  br i1 %165, label %793, label %331

331:                                              ; preds = %210, %200, %189, %330
  %332 = phi i64 [ 0, %210 ], [ 0, %200 ], [ 0, %189 ], [ %164, %330 ]
  br label %333

333:                                              ; preds = %331, %333
  %334 = phi i64 [ %351, %333 ], [ %332, %331 ]
  %335 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %334
  %336 = load double, ptr %335, align 8, !tbaa !8
  %337 = trunc i64 %334 to i32
  %338 = add i32 %195, %337
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds double, ptr %193, i64 %339
  store double %336, ptr %340, align 8, !tbaa !8
  %341 = getelementptr inbounds [3 x double], ptr %335, i64 0, i64 1
  %342 = load double, ptr %341, align 8, !tbaa !8
  %343 = add i32 %197, %337
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds double, ptr %193, i64 %344
  store double %342, ptr %345, align 8, !tbaa !8
  %346 = getelementptr inbounds [3 x double], ptr %335, i64 0, i64 2
  %347 = load double, ptr %346, align 8, !tbaa !8
  %348 = add i32 %199, %337
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds double, ptr %193, i64 %349
  store double %347, ptr %350, align 8, !tbaa !8
  %351 = add nuw nsw i64 %334, 1
  %352 = icmp eq i64 %351, %125
  br i1 %352, label %793, label %333, !llvm.loop !371

353:                                              ; preds = %186, %186
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #15
  br i1 %105, label %354, label %355

354:                                              ; preds = %353
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)
  br label %360

355:                                              ; preds = %353
  %356 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %106) #16
          to label %357 unwind label %547

357:                                              ; preds = %355
  store ptr %356, ptr %9, align 8, !tbaa !25
  %358 = getelementptr inbounds %"class.dealii::Tensor", ptr %356, i64 %104
  store ptr %358, ptr %114, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %356, i8 0, i64 %106, i1 false), !tbaa !8
  %359 = getelementptr i8, ptr %356, i64 %106
  br label %360

360:                                              ; preds = %357, %354
  %361 = phi ptr [ null, %354 ], [ %356, %357 ]
  %362 = phi ptr [ null, %354 ], [ %359, %357 ]
  store ptr %362, ptr %115, align 8, !tbaa !23
  %363 = load ptr, ptr %109, align 8, !tbaa !130
  %364 = getelementptr inbounds %"class.std::vector.67", ptr %363, i64 %175
  %365 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %364, i64 0, i32 1
  %366 = load ptr, ptr %365, align 8, !tbaa !23
  %367 = load ptr, ptr %364, align 8, !tbaa !25
  %368 = ptrtoint ptr %366 to i64
  %369 = ptrtoint ptr %367 to i64
  %370 = sub i64 %368, %369
  %371 = sdiv exact i64 %370, 24
  %372 = ptrtoint ptr %362 to i64
  %373 = ptrtoint ptr %361 to i64
  %374 = sub i64 %372, %373
  %375 = sdiv exact i64 %374, 24
  %376 = shl i64 %371, 32
  %377 = shl i64 %375, 32
  %378 = load ptr, ptr %1, align 8, !tbaa !5
  %379 = getelementptr inbounds ptr, ptr %378, i64 4
  %380 = load ptr, ptr %379, align 8
  invoke void %380(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %364, i64 %376, ptr nonnull %9, i64 %377, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef %187)
          to label %381 unwind label %549

381:                                              ; preds = %360
  %382 = load ptr, ptr %9, align 8, !tbaa !25
  br i1 %111, label %544, label %383

383:                                              ; preds = %381
  %384 = load ptr, ptr %112, align 8, !tbaa !35
  %385 = load i32, ptr %113, align 8, !tbaa !34
  %386 = mul i32 %385, %182
  %387 = add i32 %182, 1
  %388 = mul i32 %385, %387
  %389 = add i32 %182, 2
  %390 = mul i32 %385, %389
  br i1 %150, label %522, label %391

391:                                              ; preds = %383
  %392 = xor i32 %386, -1
  %393 = icmp ult i32 %392, %151
  %394 = xor i32 %388, -1
  %395 = icmp ult i32 %394, %152
  %396 = or i1 %395, %153
  %397 = xor i32 %390, -1
  %398 = icmp ult i32 %397, %154
  %399 = or i1 %393, %396
  %400 = or i1 %398, %399
  br i1 %400, label %522, label %401

401:                                              ; preds = %391
  %402 = zext i32 %386 to i64
  %403 = shl nuw nsw i64 %402, 3
  %404 = getelementptr i8, ptr %384, i64 %403
  %405 = getelementptr i8, ptr %384, i64 %110
  %406 = getelementptr i8, ptr %405, i64 %403
  %407 = zext i32 %388 to i64
  %408 = shl nuw nsw i64 %407, 3
  %409 = getelementptr i8, ptr %384, i64 %408
  %410 = getelementptr i8, ptr %405, i64 %408
  %411 = zext i32 %390 to i64
  %412 = shl nuw nsw i64 %411, 3
  %413 = getelementptr i8, ptr %384, i64 %412
  %414 = getelementptr i8, ptr %384, i64 %110
  %415 = getelementptr i8, ptr %414, i64 %412
  %416 = getelementptr i8, ptr %382, i64 %136
  %417 = getelementptr i8, ptr %382, i64 8
  %418 = getelementptr i8, ptr %382, i64 %137
  %419 = getelementptr i8, ptr %382, i64 16
  %420 = getelementptr i8, ptr %382, i64 %135
  %421 = icmp ult ptr %404, %410
  %422 = icmp ult ptr %409, %406
  %423 = and i1 %421, %422
  %424 = icmp ult ptr %404, %415
  %425 = icmp ult ptr %413, %406
  %426 = and i1 %424, %425
  %427 = or i1 %423, %426
  %428 = icmp ult ptr %404, %416
  %429 = icmp ult ptr %382, %406
  %430 = and i1 %428, %429
  %431 = or i1 %427, %430
  %432 = icmp ult ptr %404, %418
  %433 = icmp ult ptr %417, %406
  %434 = and i1 %432, %433
  %435 = or i1 %431, %434
  %436 = icmp ult ptr %404, %420
  %437 = icmp ult ptr %419, %406
  %438 = and i1 %436, %437
  %439 = or i1 %435, %438
  %440 = icmp ult ptr %409, %415
  %441 = icmp ult ptr %413, %410
  %442 = and i1 %440, %441
  %443 = or i1 %439, %442
  %444 = icmp ult ptr %409, %416
  %445 = icmp ult ptr %382, %410
  %446 = and i1 %444, %445
  %447 = or i1 %443, %446
  %448 = icmp ult ptr %409, %418
  %449 = icmp ult ptr %417, %410
  %450 = and i1 %448, %449
  %451 = or i1 %447, %450
  %452 = icmp ult ptr %409, %420
  %453 = icmp ult ptr %419, %410
  %454 = and i1 %452, %453
  %455 = or i1 %451, %454
  %456 = icmp ult ptr %413, %416
  %457 = icmp ult ptr %382, %415
  %458 = and i1 %456, %457
  %459 = or i1 %455, %458
  %460 = icmp ult ptr %413, %418
  %461 = icmp ult ptr %417, %415
  %462 = and i1 %460, %461
  %463 = or i1 %459, %462
  %464 = icmp ult ptr %413, %420
  %465 = icmp ult ptr %419, %415
  %466 = and i1 %464, %465
  %467 = or i1 %463, %466
  br i1 %467, label %522, label %468

468:                                              ; preds = %401, %468
  %469 = phi i64 [ %519, %468 ], [ 0, %401 ]
  %470 = trunc i64 %469 to i32
  %471 = or i64 %469, 1
  %472 = or i64 %469, 2
  %473 = or i64 %469, 3
  %474 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %469
  %475 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %471
  %476 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %472
  %477 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %473
  %478 = load double, ptr %474, align 8, !tbaa !8, !alias.scope !372
  %479 = load double, ptr %475, align 8, !tbaa !8, !alias.scope !372
  %480 = load double, ptr %476, align 8, !tbaa !8, !alias.scope !372
  %481 = load double, ptr %477, align 8, !tbaa !8, !alias.scope !372
  %482 = insertelement <4 x double> poison, double %478, i64 0
  %483 = insertelement <4 x double> %482, double %479, i64 1
  %484 = insertelement <4 x double> %483, double %480, i64 2
  %485 = insertelement <4 x double> %484, double %481, i64 3
  %486 = add i32 %386, %470
  %487 = zext i32 %486 to i64
  %488 = getelementptr inbounds double, ptr %384, i64 %487
  store <4 x double> %485, ptr %488, align 8, !tbaa !8, !alias.scope !375, !noalias !377
  %489 = getelementptr inbounds [3 x double], ptr %474, i64 0, i64 1
  %490 = getelementptr inbounds [3 x double], ptr %475, i64 0, i64 1
  %491 = getelementptr inbounds [3 x double], ptr %476, i64 0, i64 1
  %492 = getelementptr inbounds [3 x double], ptr %477, i64 0, i64 1
  %493 = load double, ptr %489, align 8, !tbaa !8, !alias.scope !382
  %494 = load double, ptr %490, align 8, !tbaa !8, !alias.scope !382
  %495 = load double, ptr %491, align 8, !tbaa !8, !alias.scope !382
  %496 = load double, ptr %492, align 8, !tbaa !8, !alias.scope !382
  %497 = insertelement <4 x double> poison, double %493, i64 0
  %498 = insertelement <4 x double> %497, double %494, i64 1
  %499 = insertelement <4 x double> %498, double %495, i64 2
  %500 = insertelement <4 x double> %499, double %496, i64 3
  %501 = add i32 %388, %470
  %502 = zext i32 %501 to i64
  %503 = getelementptr inbounds double, ptr %384, i64 %502
  store <4 x double> %500, ptr %503, align 8, !tbaa !8, !alias.scope !383, !noalias !384
  %504 = getelementptr inbounds [3 x double], ptr %474, i64 0, i64 2
  %505 = getelementptr inbounds [3 x double], ptr %475, i64 0, i64 2
  %506 = getelementptr inbounds [3 x double], ptr %476, i64 0, i64 2
  %507 = getelementptr inbounds [3 x double], ptr %477, i64 0, i64 2
  %508 = load double, ptr %504, align 8, !tbaa !8, !alias.scope !385
  %509 = load double, ptr %505, align 8, !tbaa !8, !alias.scope !385
  %510 = load double, ptr %506, align 8, !tbaa !8, !alias.scope !385
  %511 = load double, ptr %507, align 8, !tbaa !8, !alias.scope !385
  %512 = insertelement <4 x double> poison, double %508, i64 0
  %513 = insertelement <4 x double> %512, double %509, i64 1
  %514 = insertelement <4 x double> %513, double %510, i64 2
  %515 = insertelement <4 x double> %514, double %511, i64 3
  %516 = add i32 %390, %470
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds double, ptr %384, i64 %517
  store <4 x double> %515, ptr %518, align 8, !tbaa !8, !alias.scope !386, !noalias !387
  %519 = add nuw i64 %469, 4
  %520 = icmp eq i64 %519, %156
  br i1 %520, label %521, label %468, !llvm.loop !388

521:                                              ; preds = %468
  br i1 %157, label %546, label %522

522:                                              ; preds = %401, %391, %383, %521
  %523 = phi i64 [ 0, %401 ], [ 0, %391 ], [ 0, %383 ], [ %156, %521 ]
  br label %524

524:                                              ; preds = %522, %524
  %525 = phi i64 [ %542, %524 ], [ %523, %522 ]
  %526 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %525
  %527 = load double, ptr %526, align 8, !tbaa !8
  %528 = trunc i64 %525 to i32
  %529 = add i32 %386, %528
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds double, ptr %384, i64 %530
  store double %527, ptr %531, align 8, !tbaa !8
  %532 = getelementptr inbounds [3 x double], ptr %526, i64 0, i64 1
  %533 = load double, ptr %532, align 8, !tbaa !8
  %534 = add i32 %388, %528
  %535 = zext i32 %534 to i64
  %536 = getelementptr inbounds double, ptr %384, i64 %535
  store double %533, ptr %536, align 8, !tbaa !8
  %537 = getelementptr inbounds [3 x double], ptr %526, i64 0, i64 2
  %538 = load double, ptr %537, align 8, !tbaa !8
  %539 = add i32 %390, %528
  %540 = zext i32 %539 to i64
  %541 = getelementptr inbounds double, ptr %384, i64 %540
  store double %538, ptr %541, align 8, !tbaa !8
  %542 = add nuw nsw i64 %525, 1
  %543 = icmp eq i64 %542, %124
  br i1 %543, label %546, label %524, !llvm.loop !389

544:                                              ; preds = %381
  %545 = icmp eq ptr %382, null
  br i1 %545, label %554, label %546

546:                                              ; preds = %524, %521, %544
  call void @_ZdlPv(ptr noundef nonnull %382) #17
  br label %554

547:                                              ; preds = %355
  %548 = landingpad { ptr, i32 }
          cleanup
  br label %555

549:                                              ; preds = %360
  %550 = landingpad { ptr, i32 }
          cleanup
  %551 = load ptr, ptr %9, align 8, !tbaa !25
  %552 = icmp eq ptr %551, null
  br i1 %552, label %555, label %553

553:                                              ; preds = %549
  call void @_ZdlPv(ptr noundef nonnull %551) #17
  br label %555

554:                                              ; preds = %546, %544
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #15
  br label %793

555:                                              ; preds = %553, %549, %547
  %556 = phi { ptr, i32 } [ %548, %547 ], [ %550, %549 ], [ %550, %553 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #15
  br label %1118

557:                                              ; preds = %186
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #15
  br i1 %105, label %558, label %559

558:                                              ; preds = %557
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false)
  br label %564

559:                                              ; preds = %557
  %560 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %106) #16
          to label %561 unwind label %783

561:                                              ; preds = %559
  store ptr %560, ptr %10, align 8, !tbaa !25
  %562 = getelementptr inbounds %"class.dealii::Tensor", ptr %560, i64 %104
  store ptr %562, ptr %107, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %560, i8 0, i64 %106, i1 false), !tbaa !8
  %563 = getelementptr i8, ptr %560, i64 %106
  br label %564

564:                                              ; preds = %561, %558
  %565 = phi ptr [ null, %558 ], [ %560, %561 ]
  %566 = phi ptr [ null, %558 ], [ %563, %561 ]
  store ptr %566, ptr %108, align 8, !tbaa !23
  %567 = load ptr, ptr %109, align 8, !tbaa !130
  %568 = getelementptr inbounds %"class.std::vector.67", ptr %567, i64 %175
  %569 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %568, i64 0, i32 1
  %570 = load ptr, ptr %569, align 8, !tbaa !23
  %571 = load ptr, ptr %568, align 8, !tbaa !25
  %572 = ptrtoint ptr %570 to i64
  %573 = ptrtoint ptr %571 to i64
  %574 = sub i64 %572, %573
  %575 = sdiv exact i64 %574, 24
  %576 = ptrtoint ptr %566 to i64
  %577 = ptrtoint ptr %565 to i64
  %578 = sub i64 %576, %577
  %579 = sdiv exact i64 %578, 24
  %580 = shl i64 %575, 32
  %581 = shl i64 %579, 32
  %582 = load ptr, ptr %1, align 8, !tbaa !5
  %583 = getelementptr inbounds ptr, ptr %582, i64 4
  %584 = load ptr, ptr %583, align 8
  invoke void %584(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %568, i64 %580, ptr nonnull %10, i64 %581, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 256)
          to label %585 unwind label %785

585:                                              ; preds = %564
  %586 = load ptr, ptr %10, align 8, !tbaa !25
  br i1 %111, label %780, label %587

587:                                              ; preds = %585
  %588 = getelementptr inbounds double, ptr %90, i64 %175
  %589 = load ptr, ptr %112, align 8, !tbaa !35
  %590 = load i32, ptr %113, align 8, !tbaa !34
  %591 = mul i32 %590, %182
  %592 = add i32 %182, 1
  %593 = mul i32 %590, %592
  %594 = add i32 %182, 2
  %595 = mul i32 %590, %594
  br i1 %142, label %752, label %596

596:                                              ; preds = %587
  %597 = xor i32 %591, -1
  %598 = icmp ult i32 %597, %143
  %599 = xor i32 %593, -1
  %600 = icmp ult i32 %599, %144
  %601 = or i1 %600, %145
  %602 = xor i32 %595, -1
  %603 = icmp ult i32 %602, %146
  %604 = or i1 %598, %601
  %605 = or i1 %603, %604
  br i1 %605, label %752, label %606

606:                                              ; preds = %596
  %607 = zext i32 %591 to i64
  %608 = shl nuw nsw i64 %607, 3
  %609 = getelementptr i8, ptr %589, i64 %608
  %610 = getelementptr i8, ptr %589, i64 %110
  %611 = getelementptr i8, ptr %610, i64 %608
  %612 = zext i32 %593 to i64
  %613 = shl nuw nsw i64 %612, 3
  %614 = getelementptr i8, ptr %589, i64 %613
  %615 = getelementptr i8, ptr %610, i64 %613
  %616 = zext i32 %595 to i64
  %617 = shl nuw nsw i64 %616, 3
  %618 = getelementptr i8, ptr %589, i64 %617
  %619 = getelementptr i8, ptr %589, i64 %110
  %620 = getelementptr i8, ptr %619, i64 %617
  %621 = getelementptr i8, ptr %586, i64 %140
  %622 = getelementptr i8, ptr %586, i64 8
  %623 = getelementptr i8, ptr %586, i64 %141
  %624 = getelementptr i8, ptr %586, i64 16
  %625 = getelementptr i8, ptr %586, i64 %139
  %626 = icmp ult ptr %609, %615
  %627 = icmp ult ptr %614, %611
  %628 = and i1 %626, %627
  %629 = icmp ult ptr %609, %620
  %630 = icmp ult ptr %618, %611
  %631 = and i1 %629, %630
  %632 = or i1 %628, %631
  %633 = icmp ult ptr %609, %179
  %634 = icmp ult ptr %177, %611
  %635 = and i1 %633, %634
  %636 = or i1 %632, %635
  %637 = icmp ult ptr %609, %621
  %638 = icmp ult ptr %586, %611
  %639 = and i1 %637, %638
  %640 = or i1 %636, %639
  %641 = icmp ult ptr %609, %623
  %642 = icmp ult ptr %622, %611
  %643 = and i1 %641, %642
  %644 = or i1 %640, %643
  %645 = icmp ult ptr %609, %625
  %646 = icmp ult ptr %624, %611
  %647 = and i1 %645, %646
  %648 = or i1 %644, %647
  %649 = icmp ult ptr %614, %620
  %650 = icmp ult ptr %618, %615
  %651 = and i1 %649, %650
  %652 = or i1 %648, %651
  %653 = icmp ult ptr %614, %179
  %654 = icmp ult ptr %177, %615
  %655 = and i1 %653, %654
  %656 = or i1 %652, %655
  %657 = icmp ult ptr %614, %621
  %658 = icmp ult ptr %586, %615
  %659 = and i1 %657, %658
  %660 = or i1 %656, %659
  %661 = icmp ult ptr %614, %623
  %662 = icmp ult ptr %622, %615
  %663 = and i1 %661, %662
  %664 = or i1 %660, %663
  %665 = icmp ult ptr %614, %625
  %666 = icmp ult ptr %624, %615
  %667 = and i1 %665, %666
  %668 = or i1 %664, %667
  %669 = icmp ult ptr %618, %179
  %670 = icmp ult ptr %177, %620
  %671 = and i1 %669, %670
  %672 = or i1 %668, %671
  %673 = icmp ult ptr %618, %621
  %674 = icmp ult ptr %586, %620
  %675 = and i1 %673, %674
  %676 = or i1 %672, %675
  %677 = icmp ult ptr %618, %623
  %678 = icmp ult ptr %622, %620
  %679 = and i1 %677, %678
  %680 = or i1 %676, %679
  %681 = icmp ult ptr %618, %625
  %682 = icmp ult ptr %624, %620
  %683 = and i1 %681, %682
  %684 = or i1 %680, %683
  br i1 %684, label %752, label %685

685:                                              ; preds = %606
  %686 = load double, ptr %588, align 8, !tbaa !8, !alias.scope !390
  %687 = insertelement <4 x double> poison, double %686, i64 0
  %688 = shufflevector <4 x double> %687, <4 x double> poison, <4 x i32> zeroinitializer
  %689 = load double, ptr %588, align 8, !tbaa !8, !alias.scope !390
  %690 = insertelement <4 x double> poison, double %689, i64 0
  %691 = shufflevector <4 x double> %690, <4 x double> poison, <4 x i32> zeroinitializer
  %692 = load double, ptr %588, align 8, !tbaa !8, !alias.scope !390
  %693 = insertelement <4 x double> poison, double %692, i64 0
  %694 = shufflevector <4 x double> %693, <4 x double> poison, <4 x i32> zeroinitializer
  br label %695

695:                                              ; preds = %695, %685
  %696 = phi i64 [ 0, %685 ], [ %749, %695 ]
  %697 = trunc i64 %696 to i32
  %698 = or i64 %696, 1
  %699 = or i64 %696, 2
  %700 = or i64 %696, 3
  %701 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %696
  %702 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %698
  %703 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %699
  %704 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %700
  %705 = load double, ptr %701, align 8, !tbaa !8, !alias.scope !393
  %706 = load double, ptr %702, align 8, !tbaa !8, !alias.scope !393
  %707 = load double, ptr %703, align 8, !tbaa !8, !alias.scope !393
  %708 = load double, ptr %704, align 8, !tbaa !8, !alias.scope !393
  %709 = insertelement <4 x double> poison, double %705, i64 0
  %710 = insertelement <4 x double> %709, double %706, i64 1
  %711 = insertelement <4 x double> %710, double %707, i64 2
  %712 = insertelement <4 x double> %711, double %708, i64 3
  %713 = fmul <4 x double> %688, %712
  %714 = add i32 %591, %697
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds double, ptr %589, i64 %715
  store <4 x double> %713, ptr %716, align 8, !tbaa !8, !alias.scope !395, !noalias !397
  %717 = getelementptr inbounds [3 x double], ptr %701, i64 0, i64 1
  %718 = getelementptr inbounds [3 x double], ptr %702, i64 0, i64 1
  %719 = getelementptr inbounds [3 x double], ptr %703, i64 0, i64 1
  %720 = getelementptr inbounds [3 x double], ptr %704, i64 0, i64 1
  %721 = load double, ptr %717, align 8, !tbaa !8, !alias.scope !402
  %722 = load double, ptr %718, align 8, !tbaa !8, !alias.scope !402
  %723 = load double, ptr %719, align 8, !tbaa !8, !alias.scope !402
  %724 = load double, ptr %720, align 8, !tbaa !8, !alias.scope !402
  %725 = insertelement <4 x double> poison, double %721, i64 0
  %726 = insertelement <4 x double> %725, double %722, i64 1
  %727 = insertelement <4 x double> %726, double %723, i64 2
  %728 = insertelement <4 x double> %727, double %724, i64 3
  %729 = fmul <4 x double> %691, %728
  %730 = add i32 %593, %697
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds double, ptr %589, i64 %731
  store <4 x double> %729, ptr %732, align 8, !tbaa !8, !alias.scope !403, !noalias !404
  %733 = getelementptr inbounds [3 x double], ptr %701, i64 0, i64 2
  %734 = getelementptr inbounds [3 x double], ptr %702, i64 0, i64 2
  %735 = getelementptr inbounds [3 x double], ptr %703, i64 0, i64 2
  %736 = getelementptr inbounds [3 x double], ptr %704, i64 0, i64 2
  %737 = load double, ptr %733, align 8, !tbaa !8, !alias.scope !405
  %738 = load double, ptr %734, align 8, !tbaa !8, !alias.scope !405
  %739 = load double, ptr %735, align 8, !tbaa !8, !alias.scope !405
  %740 = load double, ptr %736, align 8, !tbaa !8, !alias.scope !405
  %741 = insertelement <4 x double> poison, double %737, i64 0
  %742 = insertelement <4 x double> %741, double %738, i64 1
  %743 = insertelement <4 x double> %742, double %739, i64 2
  %744 = insertelement <4 x double> %743, double %740, i64 3
  %745 = fmul <4 x double> %694, %744
  %746 = add i32 %595, %697
  %747 = zext i32 %746 to i64
  %748 = getelementptr inbounds double, ptr %589, i64 %747
  store <4 x double> %745, ptr %748, align 8, !tbaa !8, !alias.scope !406, !noalias !407
  %749 = add nuw i64 %696, 4
  %750 = icmp eq i64 %749, %148
  br i1 %750, label %751, label %695, !llvm.loop !408

751:                                              ; preds = %695
  br i1 %149, label %782, label %752

752:                                              ; preds = %606, %596, %587, %751
  %753 = phi i64 [ 0, %606 ], [ 0, %596 ], [ 0, %587 ], [ %148, %751 ]
  br label %754

754:                                              ; preds = %752, %754
  %755 = phi i64 [ %778, %754 ], [ %753, %752 ]
  %756 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %755
  %757 = load double, ptr %588, align 8, !tbaa !8
  %758 = load double, ptr %756, align 8, !tbaa !8
  %759 = fmul double %757, %758
  %760 = trunc i64 %755 to i32
  %761 = add i32 %591, %760
  %762 = zext i32 %761 to i64
  %763 = getelementptr inbounds double, ptr %589, i64 %762
  store double %759, ptr %763, align 8, !tbaa !8
  %764 = load double, ptr %588, align 8, !tbaa !8
  %765 = getelementptr inbounds [3 x double], ptr %756, i64 0, i64 1
  %766 = load double, ptr %765, align 8, !tbaa !8
  %767 = fmul double %764, %766
  %768 = add i32 %593, %760
  %769 = zext i32 %768 to i64
  %770 = getelementptr inbounds double, ptr %589, i64 %769
  store double %767, ptr %770, align 8, !tbaa !8
  %771 = load double, ptr %588, align 8, !tbaa !8
  %772 = getelementptr inbounds [3 x double], ptr %756, i64 0, i64 2
  %773 = load double, ptr %772, align 8, !tbaa !8
  %774 = fmul double %771, %773
  %775 = add i32 %595, %760
  %776 = zext i32 %775 to i64
  %777 = getelementptr inbounds double, ptr %589, i64 %776
  store double %774, ptr %777, align 8, !tbaa !8
  %778 = add nuw nsw i64 %755, 1
  %779 = icmp eq i64 %778, %123
  br i1 %779, label %782, label %754, !llvm.loop !409

780:                                              ; preds = %585
  %781 = icmp eq ptr %586, null
  br i1 %781, label %790, label %782

782:                                              ; preds = %754, %751, %780
  call void @_ZdlPv(ptr noundef nonnull %586) #17
  br label %790

783:                                              ; preds = %559
  %784 = landingpad { ptr, i32 }
          cleanup
  br label %791

785:                                              ; preds = %564
  %786 = landingpad { ptr, i32 }
          cleanup
  %787 = load ptr, ptr %10, align 8, !tbaa !25
  %788 = icmp eq ptr %787, null
  br i1 %788, label %791, label %789

789:                                              ; preds = %785
  call void @_ZdlPv(ptr noundef nonnull %787) #17
  br label %791

790:                                              ; preds = %782, %780
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #15
  br label %793

791:                                              ; preds = %789, %785, %783
  %792 = phi { ptr, i32 } [ %784, %783 ], [ %786, %785 ], [ %786, %789 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #15
  br label %1118

793:                                              ; preds = %333, %330, %188, %554, %790, %186, %174
  %794 = load i32, ptr %7, align 4
  %795 = icmp eq i32 %794, 1
  %796 = select i1 %117, i1 true, i1 %795
  br i1 %796, label %1100, label %797

797:                                              ; preds = %793
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #15
  br i1 %105, label %798, label %799

798:                                              ; preds = %797
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %11, i8 0, i64 24, i1 false)
  br label %806

799:                                              ; preds = %797
  %800 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %118) #16
          to label %801 unwind label %811

801:                                              ; preds = %799
  store ptr %800, ptr %11, align 8, !tbaa !51
  %802 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %800, i64 %104
  store ptr %802, ptr %119, align 8, !tbaa !212
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %800, i8 0, i64 %118, i1 false), !tbaa !8
  %803 = getelementptr i8, ptr %800, i64 %118
  store ptr %803, ptr %120, align 8, !tbaa !49
  %804 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %118) #16
          to label %805 unwind label %813

805:                                              ; preds = %801
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %804, i8 0, i64 %118, i1 false), !tbaa !8
  br label %806

806:                                              ; preds = %805, %798
  %807 = phi ptr [ null, %798 ], [ %800, %805 ]
  %808 = phi ptr [ null, %798 ], [ %803, %805 ]
  %809 = phi ptr [ null, %798 ], [ %804, %805 ]
  %810 = load i32, ptr %91, align 8, !tbaa !342
  switch i32 %810, label %1084 [
    i32 0, label %815
    i32 1, label %883
    i32 2, label %948
    i32 256, label %1012
  ]

811:                                              ; preds = %799
  %812 = landingpad { ptr, i32 }
          cleanup
  br label %1098

813:                                              ; preds = %801
  %814 = landingpad { ptr, i32 }
          cleanup
  br label %1093

815:                                              ; preds = %806
  %816 = load ptr, ptr %121, align 8, !tbaa !133
  %817 = getelementptr inbounds %"class.std::vector.72", ptr %816, i64 %175
  %818 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %817, i64 0, i32 1
  %819 = load ptr, ptr %818, align 8, !tbaa !49
  %820 = load ptr, ptr %817, align 8, !tbaa !51
  %821 = ptrtoint ptr %819 to i64
  %822 = ptrtoint ptr %820 to i64
  %823 = sub i64 %821, %822
  %824 = sdiv exact i64 %823, 72
  %825 = ptrtoint ptr %808 to i64
  %826 = ptrtoint ptr %807 to i64
  %827 = sub i64 %825, %826
  %828 = sdiv exact i64 %827, 72
  %829 = shl i64 %824, 32
  %830 = shl i64 %828, 32
  %831 = load ptr, ptr %1, align 8, !tbaa !5
  %832 = getelementptr inbounds ptr, ptr %831, i64 5
  %833 = load ptr, ptr %832, align 8
  invoke void %833(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %817, i64 %829, ptr nonnull %11, i64 %830, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 1)
          to label %834 unwind label %880

834:                                              ; preds = %815
  br i1 %111, label %1084, label %835

835:                                              ; preds = %834
  %836 = load ptr, ptr %11, align 8, !tbaa !51
  %837 = load ptr, ptr %122, align 8, !tbaa !130
  %838 = zext i32 %182 to i64
  %839 = getelementptr inbounds %"class.std::vector.67", ptr %837, i64 %838
  %840 = load ptr, ptr %839, align 8, !tbaa !25
  %841 = add i32 %182, 1
  %842 = zext i32 %841 to i64
  %843 = getelementptr inbounds %"class.std::vector.67", ptr %837, i64 %842
  %844 = load ptr, ptr %843, align 8, !tbaa !25
  %845 = add i32 %182, 2
  %846 = zext i32 %845 to i64
  %847 = getelementptr inbounds %"class.std::vector.67", ptr %837, i64 %846
  %848 = load ptr, ptr %847, align 8, !tbaa !25
  br label %849

849:                                              ; preds = %835, %849
  %850 = phi i64 [ 0, %835 ], [ %878, %849 ]
  %851 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %836, i64 %850
  %852 = getelementptr inbounds %"class.dealii::Tensor", ptr %840, i64 %850
  %853 = load double, ptr %851, align 8, !tbaa !8
  store double %853, ptr %852, align 8, !tbaa !8
  %854 = getelementptr inbounds [3 x double], ptr %851, i64 0, i64 1
  %855 = load double, ptr %854, align 8, !tbaa !8
  %856 = getelementptr inbounds [3 x double], ptr %852, i64 0, i64 1
  store double %855, ptr %856, align 8, !tbaa !8
  %857 = getelementptr inbounds [3 x double], ptr %851, i64 0, i64 2
  %858 = load double, ptr %857, align 8, !tbaa !8
  %859 = getelementptr inbounds [3 x double], ptr %852, i64 0, i64 2
  store double %858, ptr %859, align 8, !tbaa !8
  %860 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 1
  %861 = getelementptr inbounds %"class.dealii::Tensor", ptr %844, i64 %850
  %862 = load double, ptr %860, align 8, !tbaa !8
  store double %862, ptr %861, align 8, !tbaa !8
  %863 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 1, i32 0, i64 1
  %864 = load double, ptr %863, align 8, !tbaa !8
  %865 = getelementptr inbounds [3 x double], ptr %861, i64 0, i64 1
  store double %864, ptr %865, align 8, !tbaa !8
  %866 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 1, i32 0, i64 2
  %867 = load double, ptr %866, align 8, !tbaa !8
  %868 = getelementptr inbounds [3 x double], ptr %861, i64 0, i64 2
  store double %867, ptr %868, align 8, !tbaa !8
  %869 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 2
  %870 = getelementptr inbounds %"class.dealii::Tensor", ptr %848, i64 %850
  %871 = load double, ptr %869, align 8, !tbaa !8
  store double %871, ptr %870, align 8, !tbaa !8
  %872 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 2, i32 0, i64 1
  %873 = load double, ptr %872, align 8, !tbaa !8
  %874 = getelementptr inbounds [3 x double], ptr %870, i64 0, i64 1
  store double %873, ptr %874, align 8, !tbaa !8
  %875 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 2, i32 0, i64 2
  %876 = load double, ptr %875, align 8, !tbaa !8
  %877 = getelementptr inbounds [3 x double], ptr %870, i64 0, i64 2
  store double %876, ptr %877, align 8, !tbaa !8
  %878 = add nuw nsw i64 %850, 1
  %879 = icmp eq i64 %878, %129
  br i1 %879, label %1084, label %849

880:                                              ; preds = %1012, %948, %883, %815
  %881 = landingpad { ptr, i32 }
          cleanup
  %882 = icmp eq ptr %809, null
  br i1 %882, label %1093, label %1092

883:                                              ; preds = %806
  %884 = load ptr, ptr %121, align 8, !tbaa !133
  %885 = getelementptr inbounds %"class.std::vector.72", ptr %884, i64 %175
  %886 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %885, i64 0, i32 1
  %887 = load ptr, ptr %886, align 8, !tbaa !49
  %888 = load ptr, ptr %885, align 8, !tbaa !51
  %889 = ptrtoint ptr %887 to i64
  %890 = ptrtoint ptr %888 to i64
  %891 = sub i64 %889, %890
  %892 = sdiv exact i64 %891, 72
  %893 = ptrtoint ptr %808 to i64
  %894 = ptrtoint ptr %807 to i64
  %895 = sub i64 %893, %894
  %896 = sdiv exact i64 %895, 72
  %897 = shl i64 %892, 32
  %898 = shl i64 %896, 32
  %899 = load ptr, ptr %1, align 8, !tbaa !5
  %900 = getelementptr inbounds ptr, ptr %899, i64 5
  %901 = load ptr, ptr %900, align 8
  invoke void %901(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %885, i64 %897, ptr nonnull %11, i64 %898, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 3)
          to label %902 unwind label %880

902:                                              ; preds = %883
  br i1 %111, label %1084, label %903

903:                                              ; preds = %902
  %904 = load ptr, ptr %11, align 8, !tbaa !51
  %905 = load ptr, ptr %122, align 8, !tbaa !130
  %906 = zext i32 %182 to i64
  %907 = getelementptr inbounds %"class.std::vector.67", ptr %905, i64 %906
  %908 = load ptr, ptr %907, align 8, !tbaa !25
  %909 = add i32 %182, 1
  %910 = zext i32 %909 to i64
  %911 = getelementptr inbounds %"class.std::vector.67", ptr %905, i64 %910
  %912 = load ptr, ptr %911, align 8, !tbaa !25
  %913 = add i32 %182, 2
  %914 = zext i32 %913 to i64
  %915 = getelementptr inbounds %"class.std::vector.67", ptr %905, i64 %914
  %916 = load ptr, ptr %915, align 8, !tbaa !25
  br label %917

917:                                              ; preds = %903, %917
  %918 = phi i64 [ 0, %903 ], [ %946, %917 ]
  %919 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %904, i64 %918
  %920 = getelementptr inbounds %"class.dealii::Tensor", ptr %908, i64 %918
  %921 = load double, ptr %919, align 8, !tbaa !8
  store double %921, ptr %920, align 8, !tbaa !8
  %922 = getelementptr inbounds [3 x double], ptr %919, i64 0, i64 1
  %923 = load double, ptr %922, align 8, !tbaa !8
  %924 = getelementptr inbounds [3 x double], ptr %920, i64 0, i64 1
  store double %923, ptr %924, align 8, !tbaa !8
  %925 = getelementptr inbounds [3 x double], ptr %919, i64 0, i64 2
  %926 = load double, ptr %925, align 8, !tbaa !8
  %927 = getelementptr inbounds [3 x double], ptr %920, i64 0, i64 2
  store double %926, ptr %927, align 8, !tbaa !8
  %928 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 1
  %929 = getelementptr inbounds %"class.dealii::Tensor", ptr %912, i64 %918
  %930 = load double, ptr %928, align 8, !tbaa !8
  store double %930, ptr %929, align 8, !tbaa !8
  %931 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 1, i32 0, i64 1
  %932 = load double, ptr %931, align 8, !tbaa !8
  %933 = getelementptr inbounds [3 x double], ptr %929, i64 0, i64 1
  store double %932, ptr %933, align 8, !tbaa !8
  %934 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 1, i32 0, i64 2
  %935 = load double, ptr %934, align 8, !tbaa !8
  %936 = getelementptr inbounds [3 x double], ptr %929, i64 0, i64 2
  store double %935, ptr %936, align 8, !tbaa !8
  %937 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 2
  %938 = getelementptr inbounds %"class.dealii::Tensor", ptr %916, i64 %918
  %939 = load double, ptr %937, align 8, !tbaa !8
  store double %939, ptr %938, align 8, !tbaa !8
  %940 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 2, i32 0, i64 1
  %941 = load double, ptr %940, align 8, !tbaa !8
  %942 = getelementptr inbounds [3 x double], ptr %938, i64 0, i64 1
  store double %941, ptr %942, align 8, !tbaa !8
  %943 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 2, i32 0, i64 2
  %944 = load double, ptr %943, align 8, !tbaa !8
  %945 = getelementptr inbounds [3 x double], ptr %938, i64 0, i64 2
  store double %944, ptr %945, align 8, !tbaa !8
  %946 = add nuw nsw i64 %918, 1
  %947 = icmp eq i64 %946, %128
  br i1 %947, label %1084, label %917

948:                                              ; preds = %806
  %949 = load ptr, ptr %121, align 8, !tbaa !133
  %950 = getelementptr inbounds %"class.std::vector.72", ptr %949, i64 %175
  %951 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %950, i64 0, i32 1
  %952 = load ptr, ptr %951, align 8, !tbaa !49
  %953 = load ptr, ptr %950, align 8, !tbaa !51
  %954 = ptrtoint ptr %952 to i64
  %955 = ptrtoint ptr %953 to i64
  %956 = sub i64 %954, %955
  %957 = sdiv exact i64 %956, 72
  %958 = ptrtoint ptr %808 to i64
  %959 = ptrtoint ptr %807 to i64
  %960 = sub i64 %958, %959
  %961 = sdiv exact i64 %960, 72
  %962 = shl i64 %957, 32
  %963 = shl i64 %961, 32
  %964 = load ptr, ptr %1, align 8, !tbaa !5
  %965 = getelementptr inbounds ptr, ptr %964, i64 5
  %966 = load ptr, ptr %965, align 8
  invoke void %966(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %950, i64 %962, ptr nonnull %11, i64 %963, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 4)
          to label %967 unwind label %880

967:                                              ; preds = %948
  br i1 %111, label %1084, label %968

968:                                              ; preds = %967
  %969 = load ptr, ptr %122, align 8, !tbaa !130
  %970 = zext i32 %182 to i64
  %971 = getelementptr inbounds %"class.std::vector.67", ptr %969, i64 %970
  %972 = load ptr, ptr %971, align 8, !tbaa !25
  %973 = add i32 %182, 1
  %974 = zext i32 %973 to i64
  %975 = getelementptr inbounds %"class.std::vector.67", ptr %969, i64 %974
  %976 = load ptr, ptr %975, align 8, !tbaa !25
  %977 = add i32 %182, 2
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds %"class.std::vector.67", ptr %969, i64 %978
  %980 = load ptr, ptr %979, align 8, !tbaa !25
  br label %981

981:                                              ; preds = %968, %981
  %982 = phi i64 [ 0, %968 ], [ %1010, %981 ]
  %983 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %809, i64 %982
  %984 = getelementptr inbounds %"class.dealii::Tensor", ptr %972, i64 %982
  %985 = load double, ptr %983, align 8, !tbaa !8
  store double %985, ptr %984, align 8, !tbaa !8
  %986 = getelementptr inbounds [3 x double], ptr %983, i64 0, i64 1
  %987 = load double, ptr %986, align 8, !tbaa !8
  %988 = getelementptr inbounds [3 x double], ptr %984, i64 0, i64 1
  store double %987, ptr %988, align 8, !tbaa !8
  %989 = getelementptr inbounds [3 x double], ptr %983, i64 0, i64 2
  %990 = load double, ptr %989, align 8, !tbaa !8
  %991 = getelementptr inbounds [3 x double], ptr %984, i64 0, i64 2
  store double %990, ptr %991, align 8, !tbaa !8
  %992 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 1
  %993 = getelementptr inbounds %"class.dealii::Tensor", ptr %976, i64 %982
  %994 = load double, ptr %992, align 8, !tbaa !8
  store double %994, ptr %993, align 8, !tbaa !8
  %995 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 1, i32 0, i64 1
  %996 = load double, ptr %995, align 8, !tbaa !8
  %997 = getelementptr inbounds [3 x double], ptr %993, i64 0, i64 1
  store double %996, ptr %997, align 8, !tbaa !8
  %998 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 1, i32 0, i64 2
  %999 = load double, ptr %998, align 8, !tbaa !8
  %1000 = getelementptr inbounds [3 x double], ptr %993, i64 0, i64 2
  store double %999, ptr %1000, align 8, !tbaa !8
  %1001 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 2
  %1002 = getelementptr inbounds %"class.dealii::Tensor", ptr %980, i64 %982
  %1003 = load double, ptr %1001, align 8, !tbaa !8
  store double %1003, ptr %1002, align 8, !tbaa !8
  %1004 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 2, i32 0, i64 1
  %1005 = load double, ptr %1004, align 8, !tbaa !8
  %1006 = getelementptr inbounds [3 x double], ptr %1002, i64 0, i64 1
  store double %1005, ptr %1006, align 8, !tbaa !8
  %1007 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 2, i32 0, i64 2
  %1008 = load double, ptr %1007, align 8, !tbaa !8
  %1009 = getelementptr inbounds [3 x double], ptr %1002, i64 0, i64 2
  store double %1008, ptr %1009, align 8, !tbaa !8
  %1010 = add nuw nsw i64 %982, 1
  %1011 = icmp eq i64 %1010, %127
  br i1 %1011, label %1086, label %981

1012:                                             ; preds = %806
  %1013 = load ptr, ptr %121, align 8, !tbaa !133
  %1014 = getelementptr inbounds %"class.std::vector.72", ptr %1013, i64 %175
  %1015 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %1014, i64 0, i32 1
  %1016 = load ptr, ptr %1015, align 8, !tbaa !49
  %1017 = load ptr, ptr %1014, align 8, !tbaa !51
  %1018 = ptrtoint ptr %1016 to i64
  %1019 = ptrtoint ptr %1017 to i64
  %1020 = sub i64 %1018, %1019
  %1021 = sdiv exact i64 %1020, 72
  %1022 = ptrtoint ptr %808 to i64
  %1023 = ptrtoint ptr %807 to i64
  %1024 = sub i64 %1022, %1023
  %1025 = sdiv exact i64 %1024, 72
  %1026 = shl i64 %1021, 32
  %1027 = shl i64 %1025, 32
  %1028 = load ptr, ptr %1, align 8, !tbaa !5
  %1029 = getelementptr inbounds ptr, ptr %1028, i64 5
  %1030 = load ptr, ptr %1029, align 8
  invoke void %1030(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %1014, i64 %1026, ptr nonnull %11, i64 %1027, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 256)
          to label %1031 unwind label %880

1031:                                             ; preds = %1012
  br i1 %111, label %1084, label %1032

1032:                                             ; preds = %1031
  %1033 = getelementptr inbounds double, ptr %90, i64 %175
  %1034 = load ptr, ptr %11, align 8, !tbaa !51
  %1035 = load ptr, ptr %122, align 8, !tbaa !130
  %1036 = zext i32 %182 to i64
  %1037 = getelementptr inbounds %"class.std::vector.67", ptr %1035, i64 %1036
  %1038 = load ptr, ptr %1037, align 8, !tbaa !25
  %1039 = add i32 %182, 1
  %1040 = zext i32 %1039 to i64
  %1041 = getelementptr inbounds %"class.std::vector.67", ptr %1035, i64 %1040
  %1042 = load ptr, ptr %1041, align 8, !tbaa !25
  %1043 = add i32 %182, 2
  %1044 = zext i32 %1043 to i64
  %1045 = getelementptr inbounds %"class.std::vector.67", ptr %1035, i64 %1044
  %1046 = load ptr, ptr %1045, align 8, !tbaa !25
  br label %1047

1047:                                             ; preds = %1032, %1047
  %1048 = phi i64 [ 0, %1032 ], [ %1082, %1047 ]
  %1049 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %1034, i64 %1048
  %1050 = load double, ptr %1033, align 8, !tbaa !8
  %1051 = getelementptr inbounds [3 x double], ptr %1049, i64 0, i64 2
  %1052 = load double, ptr %1051, align 8, !tbaa !8, !noalias !410
  %1053 = fmul double %1050, %1052
  %1054 = getelementptr inbounds %"class.dealii::Tensor", ptr %1038, i64 %1048
  %1055 = load <2 x double>, ptr %1049, align 8, !tbaa !8, !noalias !410
  %1056 = insertelement <2 x double> poison, double %1050, i64 0
  %1057 = shufflevector <2 x double> %1056, <2 x double> poison, <2 x i32> zeroinitializer
  %1058 = fmul <2 x double> %1057, %1055
  store <2 x double> %1058, ptr %1054, align 8, !tbaa !8
  %1059 = getelementptr inbounds [3 x double], ptr %1054, i64 0, i64 2
  store double %1053, ptr %1059, align 8, !tbaa !8
  %1060 = load double, ptr %1033, align 8, !tbaa !8
  %1061 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %1049, i64 0, i64 1
  %1062 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %1049, i64 0, i64 1, i32 0, i64 2
  %1063 = load double, ptr %1062, align 8, !tbaa !8, !noalias !410
  %1064 = fmul double %1060, %1063
  %1065 = getelementptr inbounds %"class.dealii::Tensor", ptr %1042, i64 %1048
  %1066 = load <2 x double>, ptr %1061, align 8, !tbaa !8, !noalias !410
  %1067 = insertelement <2 x double> poison, double %1060, i64 0
  %1068 = shufflevector <2 x double> %1067, <2 x double> poison, <2 x i32> zeroinitializer
  %1069 = fmul <2 x double> %1068, %1066
  store <2 x double> %1069, ptr %1065, align 8, !tbaa !8
  %1070 = getelementptr inbounds [3 x double], ptr %1065, i64 0, i64 2
  store double %1064, ptr %1070, align 8, !tbaa !8
  %1071 = load double, ptr %1033, align 8, !tbaa !8
  %1072 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %1049, i64 0, i64 2
  %1073 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %1049, i64 0, i64 2, i32 0, i64 2
  %1074 = load double, ptr %1073, align 8, !tbaa !8, !noalias !410
  %1075 = fmul double %1071, %1074
  %1076 = getelementptr inbounds %"class.dealii::Tensor", ptr %1046, i64 %1048
  %1077 = load <2 x double>, ptr %1072, align 8, !tbaa !8, !noalias !410
  %1078 = insertelement <2 x double> poison, double %1071, i64 0
  %1079 = shufflevector <2 x double> %1078, <2 x double> poison, <2 x i32> zeroinitializer
  %1080 = fmul <2 x double> %1079, %1077
  store <2 x double> %1080, ptr %1076, align 8, !tbaa !8
  %1081 = getelementptr inbounds [3 x double], ptr %1076, i64 0, i64 2
  store double %1075, ptr %1081, align 8, !tbaa !8
  %1082 = add nuw nsw i64 %1048, 1
  %1083 = icmp eq i64 %1082, %126
  br i1 %1083, label %1084, label %1047

1084:                                             ; preds = %1047, %917, %849, %1031, %967, %902, %834, %806
  %1085 = icmp eq ptr %809, null
  br i1 %1085, label %1087, label %1086

1086:                                             ; preds = %981, %1084
  call void @_ZdlPv(ptr noundef nonnull %809) #17
  br label %1087

1087:                                             ; preds = %1086, %1084
  %1088 = load ptr, ptr %11, align 8, !tbaa !51
  %1089 = icmp eq ptr %1088, null
  br i1 %1089, label %1091, label %1090

1090:                                             ; preds = %1087
  call void @_ZdlPv(ptr noundef nonnull %1088) #17
  br label %1091

1091:                                             ; preds = %1090, %1087
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #15
  br label %1100

1092:                                             ; preds = %880
  call void @_ZdlPv(ptr noundef nonnull %809) #17
  br label %1093

1093:                                             ; preds = %1092, %880, %813
  %1094 = phi { ptr, i32 } [ %814, %813 ], [ %881, %880 ], [ %881, %1092 ]
  %1095 = load ptr, ptr %11, align 8, !tbaa !51
  %1096 = icmp eq ptr %1095, null
  br i1 %1096, label %1098, label %1097

1097:                                             ; preds = %1093
  call void @_ZdlPv(ptr noundef nonnull %1095) #17
  br label %1098

1098:                                             ; preds = %1097, %1093, %811
  %1099 = phi { ptr, i32 } [ %812, %811 ], [ %1094, %1093 ], [ %1094, %1097 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #15
  br label %1118

1100:                                             ; preds = %1091, %793
  %1101 = add nuw nsw i64 %175, 1
  %1102 = load i32, ptr %30, align 8, !tbaa !129
  %1103 = zext i32 %1102 to i64
  %1104 = icmp ult i64 %1101, %1103
  br i1 %1104, label %174, label %166

1105:                                             ; preds = %168
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #15
  invoke void @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC1Ev(ptr noundef nonnull align 4 dereferenceable(4) %13)
          to label %1106 unwind label %1112

1106:                                             ; preds = %1105
  %1107 = invoke i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor4cellEv()
          to label %1108 unwind label %1112

1108:                                             ; preds = %1106
  store i32 %1107, ptr %12, align 4
  %1109 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %12)
          to label %1110 unwind label %1112

1110:                                             ; preds = %1108
  invoke void @_ZNK6dealii13FiniteElementILi3ELi3EE11compute_2ndERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRNS3_16InternalDataBaseERNS1_16InternalDataBaseERNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(728) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %1109, ptr noundef nonnull align 8 dereferenceable(185) %4, ptr noundef nonnull align 8 dereferenceable(216) %5, ptr noundef nonnull align 8 dereferenceable(436) %6)
          to label %1111 unwind label %1112

1111:                                             ; preds = %1110
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #15
  br label %1114

1112:                                             ; preds = %1110, %1108, %1106, %1105
  %1113 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #15
  br label %1118

1114:                                             ; preds = %1111, %168
  %1115 = icmp eq ptr %90, null
  br i1 %1115, label %1117, label %1116

1116:                                             ; preds = %1114
  call void @_ZdlPv(ptr noundef nonnull %90) #17
  br label %1117

1117:                                             ; preds = %1114, %1116
  ret void

1118:                                             ; preds = %555, %791, %1098, %1112
  %1119 = phi { ptr, i32 } [ %1113, %1112 ], [ %1099, %1098 ], [ %792, %791 ], [ %556, %555 ]
  %1120 = icmp eq ptr %90, null
  br i1 %1120, label %1122, label %1121

1121:                                             ; preds = %1118
  call void @_ZdlPv(ptr noundef nonnull %90) #17
  br label %1122

1122:                                             ; preds = %1121, %1118
  resume { ptr, i32 } %1119
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE19fill_fe_face_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(1024) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %3, ptr noundef nonnull align 8 dereferenceable(128) %4, ptr noundef nonnull align 8 dereferenceable(185) %5, ptr noundef nonnull align 8 dereferenceable(185) %6, ptr noundef nonnull align 8 dereferenceable(436) %7) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %9 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %10 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %11 = alloca %"class.std::vector.67", align 8
  %12 = alloca %"class.std::vector.67", align 8
  %13 = alloca %"class.std::vector.72", align 8
  %14 = getelementptr inbounds %"class.dealii::Quadrature.110", ptr %4, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Quadrature.110", ptr %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !127
  %17 = load ptr, ptr %14, align 8, !tbaa !128
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = lshr exact i64 %20, 3
  %22 = trunc i64 %21 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #15
  call void @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC1Ev(ptr noundef nonnull align 4 dereferenceable(4) %9)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #15
  %23 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !216
  %25 = getelementptr inbounds %"class.dealii::Triangulation", ptr %24, i64 0, i32 1
  %26 = load i32, ptr %2, align 8, !tbaa !218
  %27 = sext i32 %26 to i64
  %28 = load ptr, ptr %25, align 8, !tbaa !219
  %29 = getelementptr inbounds ptr, ptr %28, i64 %27
  %30 = load ptr, ptr %29, align 8, !tbaa !33
  %31 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 1
  %32 = load i32, ptr %31, align 4, !tbaa !221
  %33 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %30, i64 0, i32 4, i32 1
  %34 = mul i32 %32, 6
  %35 = add i32 %34, %3
  %36 = load ptr, ptr %33, align 8, !tbaa !222
  %37 = lshr i32 %35, 6
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i64, ptr %36, i64 %38
  %40 = and i32 %35, 63
  %41 = zext i32 %40 to i64
  %42 = shl nuw i64 1, %41
  %43 = load i64, ptr %39, align 8, !tbaa !223
  %44 = and i64 %42, %43
  %45 = icmp ne i64 %44, 0
  %46 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %30, i64 0, i32 4, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !222
  %48 = getelementptr inbounds i64, ptr %47, i64 %38
  %49 = load i64, ptr %48, align 8, !tbaa !223
  %50 = and i64 %42, %49
  %51 = icmp ne i64 %50, 0
  %52 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %30, i64 0, i32 4, i32 3
  %53 = load ptr, ptr %52, align 8, !tbaa !222
  %54 = getelementptr inbounds i64, ptr %53, i64 %38
  %55 = load i64, ptr %54, align 8, !tbaa !223
  %56 = and i64 %55, %42
  %57 = icmp ne i64 %56, 0
  %58 = call i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor4faceEjbbbj(i32 noundef %3, i1 noundef zeroext %45, i1 noundef zeroext %51, i1 noundef zeroext %57, i32 noundef %22)
  store i32 %58, ptr %10, align 4
  %59 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %6, i64 0, i32 2
  %60 = load i32, ptr %59, align 4, !tbaa !118
  %61 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %6, i64 0, i32 3
  %62 = load i32, ptr %61, align 8, !tbaa !125
  %63 = or i32 %62, %60
  %64 = getelementptr inbounds i8, ptr %0, i64 112
  %65 = load i32, ptr %64, align 8, !tbaa !129
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %180, label %67

67:                                               ; preds = %8
  %68 = zext i32 %65 to i64
  %69 = shl nuw nsw i64 %68, 3
  %70 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %69) #16
  %71 = getelementptr inbounds double, ptr %70, i64 %68
  %72 = add nuw nsw i64 %68, 2305843009213693951
  %73 = and i64 %72, 2305843009213693951
  %74 = add nuw nsw i64 %73, 1
  %75 = icmp ult i64 %73, 15
  br i1 %75, label %91, label %76

76:                                               ; preds = %67
  %77 = and i64 %74, 4611686018427387888
  %78 = shl i64 %77, 3
  %79 = getelementptr i8, ptr %70, i64 %78
  br label %80

80:                                               ; preds = %80, %76
  %81 = phi i64 [ 0, %76 ], [ %87, %80 ]
  %82 = shl i64 %81, 3
  %83 = getelementptr i8, ptr %70, i64 %82
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %83, align 8, !tbaa !8
  %84 = getelementptr double, ptr %83, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %84, align 8, !tbaa !8
  %85 = getelementptr double, ptr %83, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %85, align 8, !tbaa !8
  %86 = getelementptr double, ptr %83, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %86, align 8, !tbaa !8
  %87 = add nuw i64 %81, 16
  %88 = icmp eq i64 %87, %77
  br i1 %88, label %89, label %80, !llvm.loop !413

89:                                               ; preds = %80
  %90 = icmp eq i64 %74, %77
  br i1 %90, label %97, label %91

91:                                               ; preds = %67, %89
  %92 = phi ptr [ %70, %67 ], [ %79, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi ptr [ %95, %93 ], [ %92, %91 ]
  store double 1.000000e+00, ptr %94, align 8, !tbaa !8
  %95 = getelementptr inbounds double, ptr %94, i64 1
  %96 = icmp eq ptr %95, %71
  br i1 %96, label %97, label %93, !llvm.loop !414

97:                                               ; preds = %93, %89
  %98 = add nuw nsw i64 %68, 2305843009213693951
  %99 = and i64 %98, 2305843009213693951
  %100 = add nuw nsw i64 %99, 1
  %101 = icmp ult i64 %99, 15
  br i1 %101, label %117, label %102

102:                                              ; preds = %97
  %103 = and i64 %100, 4611686018427387888
  %104 = shl i64 %103, 3
  %105 = getelementptr i8, ptr %70, i64 %104
  br label %106

106:                                              ; preds = %106, %102
  %107 = phi i64 [ 0, %102 ], [ %113, %106 ]
  %108 = shl i64 %107, 3
  %109 = getelementptr i8, ptr %70, i64 %108
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %109, align 8, !tbaa !8
  %110 = getelementptr double, ptr %109, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %110, align 8, !tbaa !8
  %111 = getelementptr double, ptr %109, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %111, align 8, !tbaa !8
  %112 = getelementptr double, ptr %109, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %112, align 8, !tbaa !8
  %113 = add nuw i64 %107, 16
  %114 = icmp eq i64 %113, %103
  br i1 %114, label %115, label %106, !llvm.loop !415

115:                                              ; preds = %106
  %116 = icmp eq i64 %100, %103
  br i1 %116, label %123, label %117

117:                                              ; preds = %97, %115
  %118 = phi ptr [ %70, %97 ], [ %105, %115 ]
  br label %119

119:                                              ; preds = %117, %119
  %120 = phi ptr [ %121, %119 ], [ %118, %117 ]
  store double 1.000000e+00, ptr %120, align 8, !tbaa !8
  %121 = getelementptr inbounds double, ptr %120, i64 1
  %122 = icmp eq ptr %121, %71
  br i1 %122, label %123, label %119, !llvm.loop !416

123:                                              ; preds = %119, %115
  br i1 %66, label %180, label %124

124:                                              ; preds = %123
  %125 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %7, i64 0, i32 14
  %126 = and i32 %63, 1
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 1
  %129 = and i64 %21, 4294967295
  %130 = icmp eq i64 %129, 0
  %131 = mul nuw nsw i64 %129, 24
  %132 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %12, i64 0, i32 2
  %133 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %12, i64 0, i32 1
  %134 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %6, i64 0, i32 1
  %135 = shl nuw i64 %129, 32
  %136 = icmp eq i32 %22, 0
  %137 = getelementptr inbounds %"class.dealii::TableBase", ptr %7, i64 0, i32 1
  %138 = getelementptr inbounds %"class.dealii::TableBase", ptr %7, i64 0, i32 3, i32 0, i32 0, i64 1
  %139 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %11, i64 0, i32 2
  %140 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %11, i64 0, i32 1
  %141 = and i32 %63, 2
  %142 = icmp eq i32 %141, 0
  %143 = mul nuw nsw i64 %129, 72
  %144 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %13, i64 0, i32 2
  %145 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %13, i64 0, i32 1
  %146 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %6, i64 0, i32 2
  %147 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %7, i64 0, i32 1
  %148 = and i64 %21, 4294967295
  %149 = and i64 %21, 4294967295
  %150 = and i64 %21, 4294967295
  %151 = and i64 %21, 4294967295
  %152 = and i64 %21, 4294967295
  %153 = and i64 %21, 4294967295
  %154 = add nsw i64 %148, -1
  %155 = shl nuw nsw i64 %148, 3
  %156 = mul nuw nsw i64 %148, 24
  %157 = add nsw i64 %156, -16
  %158 = add nsw i64 %156, -8
  %159 = add nsw i64 %148, -1
  %160 = shl nuw nsw i64 %148, 3
  %161 = mul nuw nsw i64 %148, 24
  %162 = add nsw i64 %161, -16
  %163 = add nsw i64 %161, -8
  %164 = icmp ult i64 %148, 40
  %165 = trunc i64 %159 to i32
  %166 = trunc i64 %159 to i32
  %167 = icmp ugt i64 %159, 4294967295
  %168 = trunc i64 %159 to i32
  %169 = and i64 %21, 3
  %170 = sub nsw i64 %148, %169
  %171 = icmp eq i64 %169, 0
  %172 = icmp ult i64 %148, 60
  %173 = trunc i64 %154 to i32
  %174 = trunc i64 %154 to i32
  %175 = icmp ugt i64 %154, 4294967295
  %176 = trunc i64 %154 to i32
  %177 = and i64 %21, 3
  %178 = sub nsw i64 %148, %177
  %179 = icmp eq i64 %177, 0
  br label %184

180:                                              ; preds = %980, %8, %123
  %181 = phi ptr [ %70, %123 ], [ null, %8 ], [ %70, %980 ]
  %182 = and i32 %63, 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %988, label %985

184:                                              ; preds = %124, %980
  %185 = phi i64 [ 0, %124 ], [ %981, %980 ]
  %186 = shl nuw nsw i64 %185, 3
  %187 = getelementptr i8, ptr %70, i64 %186
  %188 = add nuw i64 %186, 8
  %189 = getelementptr i8, ptr %70, i64 %188
  %190 = load ptr, ptr %125, align 8, !tbaa !154
  %191 = getelementptr inbounds i32, ptr %190, i64 %185
  %192 = load i32, ptr %191, align 4, !tbaa !34
  br i1 %127, label %685, label %193

193:                                              ; preds = %184
  %194 = load i32, ptr %128, align 8, !tbaa !342
  switch i32 %194, label %685 [
    i32 0, label %195
    i32 1, label %250
    i32 2, label %250
    i32 256, label %452
  ]

195:                                              ; preds = %193
  br i1 %136, label %685, label %196

196:                                              ; preds = %195
  %197 = add i32 %192, 1
  %198 = add i32 %192, 2
  br label %199

199:                                              ; preds = %196, %233
  %200 = phi i32 [ %246, %233 ], [ 0, %196 ]
  %201 = load ptr, ptr %134, align 8, !tbaa !130
  %202 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %203 unwind label %248

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.std::vector.67", ptr %201, i64 %185
  %205 = add i32 %202, %200
  %206 = zext i32 %205 to i64
  %207 = load ptr, ptr %204, align 8, !tbaa !25
  %208 = getelementptr inbounds %"class.dealii::Tensor", ptr %207, i64 %206
  %209 = load double, ptr %208, align 8, !tbaa !8
  %210 = load ptr, ptr %137, align 8, !tbaa !35
  %211 = load i32, ptr %138, align 8, !tbaa !34
  %212 = mul i32 %211, %192
  %213 = add i32 %212, %200
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds double, ptr %210, i64 %214
  store double %209, ptr %215, align 8, !tbaa !8
  %216 = load ptr, ptr %134, align 8, !tbaa !130
  %217 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %218 unwind label %248

218:                                              ; preds = %203
  %219 = getelementptr inbounds %"class.std::vector.67", ptr %216, i64 %185
  %220 = add i32 %217, %200
  %221 = zext i32 %220 to i64
  %222 = load ptr, ptr %219, align 8, !tbaa !25
  %223 = getelementptr inbounds %"class.dealii::Tensor", ptr %222, i64 %221, i32 0, i64 1
  %224 = load double, ptr %223, align 8, !tbaa !8
  %225 = load ptr, ptr %137, align 8, !tbaa !35
  %226 = load i32, ptr %138, align 8, !tbaa !34
  %227 = mul i32 %226, %197
  %228 = add i32 %227, %200
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds double, ptr %225, i64 %229
  store double %224, ptr %230, align 8, !tbaa !8
  %231 = load ptr, ptr %134, align 8, !tbaa !130
  %232 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %233 unwind label %248

233:                                              ; preds = %218
  %234 = getelementptr inbounds %"class.std::vector.67", ptr %231, i64 %185
  %235 = add i32 %232, %200
  %236 = zext i32 %235 to i64
  %237 = load ptr, ptr %234, align 8, !tbaa !25
  %238 = getelementptr inbounds %"class.dealii::Tensor", ptr %237, i64 %236, i32 0, i64 2
  %239 = load double, ptr %238, align 8, !tbaa !8
  %240 = load ptr, ptr %137, align 8, !tbaa !35
  %241 = load i32, ptr %138, align 8, !tbaa !34
  %242 = mul i32 %241, %198
  %243 = add i32 %242, %200
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds double, ptr %240, i64 %244
  store double %239, ptr %245, align 8, !tbaa !8
  %246 = add nuw i32 %200, 1
  %247 = icmp eq i32 %246, %22
  br i1 %247, label %685, label %199

248:                                              ; preds = %218, %203, %199
  %249 = landingpad { ptr, i32 }
          cleanup
  br label %995

250:                                              ; preds = %193, %193
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #15
  br i1 %130, label %251, label %252

251:                                              ; preds = %250
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %11, i8 0, i64 24, i1 false)
  br label %257

252:                                              ; preds = %250
  %253 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %131) #16
          to label %254 unwind label %442

254:                                              ; preds = %252
  store ptr %253, ptr %11, align 8, !tbaa !25
  %255 = getelementptr inbounds %"class.dealii::Tensor", ptr %253, i64 %129
  store ptr %255, ptr %139, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %253, i8 0, i64 %131, i1 false), !tbaa !8
  %256 = getelementptr i8, ptr %253, i64 %131
  br label %257

257:                                              ; preds = %254, %251
  %258 = phi ptr [ null, %251 ], [ %256, %254 ]
  store ptr %258, ptr %140, align 8, !tbaa !23
  %259 = load ptr, ptr %134, align 8, !tbaa !130
  %260 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %261 unwind label %444

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"class.std::vector.67", ptr %259, i64 %185
  %263 = zext i32 %260 to i64
  %264 = or i64 %135, %263
  %265 = load ptr, ptr %140, align 8, !tbaa !23
  %266 = load ptr, ptr %11, align 8, !tbaa !25
  %267 = ptrtoint ptr %265 to i64
  %268 = ptrtoint ptr %266 to i64
  %269 = sub i64 %267, %268
  %270 = sdiv exact i64 %269, 24
  %271 = load i32, ptr %128, align 8, !tbaa !342
  %272 = shl i64 %270, 32
  %273 = load ptr, ptr %1, align 8, !tbaa !5
  %274 = getelementptr inbounds ptr, ptr %273, i64 4
  %275 = load ptr, ptr %274, align 8
  invoke void %275(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %262, i64 %264, ptr nonnull %11, i64 %272, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef %271)
          to label %276 unwind label %444

276:                                              ; preds = %261
  %277 = load ptr, ptr %11, align 8, !tbaa !25
  br i1 %136, label %439, label %278

278:                                              ; preds = %276
  %279 = load ptr, ptr %137, align 8, !tbaa !35
  %280 = load i32, ptr %138, align 8, !tbaa !34
  %281 = mul i32 %280, %192
  %282 = add i32 %192, 1
  %283 = mul i32 %280, %282
  %284 = add i32 %192, 2
  %285 = mul i32 %280, %284
  br i1 %172, label %417, label %286

286:                                              ; preds = %278
  %287 = xor i32 %281, -1
  %288 = icmp ult i32 %287, %173
  %289 = xor i32 %283, -1
  %290 = icmp ult i32 %289, %174
  %291 = or i1 %290, %175
  %292 = xor i32 %285, -1
  %293 = icmp ult i32 %292, %176
  %294 = or i1 %288, %291
  %295 = or i1 %293, %294
  br i1 %295, label %417, label %296

296:                                              ; preds = %286
  %297 = zext i32 %281 to i64
  %298 = shl nuw nsw i64 %297, 3
  %299 = getelementptr i8, ptr %279, i64 %298
  %300 = getelementptr i8, ptr %279, i64 %155
  %301 = getelementptr i8, ptr %300, i64 %298
  %302 = zext i32 %283 to i64
  %303 = shl nuw nsw i64 %302, 3
  %304 = getelementptr i8, ptr %279, i64 %303
  %305 = getelementptr i8, ptr %300, i64 %303
  %306 = zext i32 %285 to i64
  %307 = shl nuw nsw i64 %306, 3
  %308 = getelementptr i8, ptr %279, i64 %307
  %309 = getelementptr i8, ptr %279, i64 %155
  %310 = getelementptr i8, ptr %309, i64 %307
  %311 = getelementptr i8, ptr %277, i64 %157
  %312 = getelementptr i8, ptr %277, i64 8
  %313 = getelementptr i8, ptr %277, i64 %158
  %314 = getelementptr i8, ptr %277, i64 16
  %315 = getelementptr i8, ptr %277, i64 %156
  %316 = icmp ult ptr %299, %305
  %317 = icmp ult ptr %304, %301
  %318 = and i1 %316, %317
  %319 = icmp ult ptr %299, %310
  %320 = icmp ult ptr %308, %301
  %321 = and i1 %319, %320
  %322 = or i1 %318, %321
  %323 = icmp ult ptr %299, %311
  %324 = icmp ult ptr %277, %301
  %325 = and i1 %323, %324
  %326 = or i1 %322, %325
  %327 = icmp ult ptr %299, %313
  %328 = icmp ult ptr %312, %301
  %329 = and i1 %327, %328
  %330 = or i1 %326, %329
  %331 = icmp ult ptr %299, %315
  %332 = icmp ult ptr %314, %301
  %333 = and i1 %331, %332
  %334 = or i1 %330, %333
  %335 = icmp ult ptr %304, %310
  %336 = icmp ult ptr %308, %305
  %337 = and i1 %335, %336
  %338 = or i1 %334, %337
  %339 = icmp ult ptr %304, %311
  %340 = icmp ult ptr %277, %305
  %341 = and i1 %339, %340
  %342 = or i1 %338, %341
  %343 = icmp ult ptr %304, %313
  %344 = icmp ult ptr %312, %305
  %345 = and i1 %343, %344
  %346 = or i1 %342, %345
  %347 = icmp ult ptr %304, %315
  %348 = icmp ult ptr %314, %305
  %349 = and i1 %347, %348
  %350 = or i1 %346, %349
  %351 = icmp ult ptr %308, %311
  %352 = icmp ult ptr %277, %310
  %353 = and i1 %351, %352
  %354 = or i1 %350, %353
  %355 = icmp ult ptr %308, %313
  %356 = icmp ult ptr %312, %310
  %357 = and i1 %355, %356
  %358 = or i1 %354, %357
  %359 = icmp ult ptr %308, %315
  %360 = icmp ult ptr %314, %310
  %361 = and i1 %359, %360
  %362 = or i1 %358, %361
  br i1 %362, label %417, label %363

363:                                              ; preds = %296, %363
  %364 = phi i64 [ %414, %363 ], [ 0, %296 ]
  %365 = trunc i64 %364 to i32
  %366 = or i64 %364, 1
  %367 = or i64 %364, 2
  %368 = or i64 %364, 3
  %369 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %364
  %370 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %366
  %371 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %367
  %372 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %368
  %373 = load double, ptr %369, align 8, !tbaa !8, !alias.scope !417
  %374 = load double, ptr %370, align 8, !tbaa !8, !alias.scope !417
  %375 = load double, ptr %371, align 8, !tbaa !8, !alias.scope !417
  %376 = load double, ptr %372, align 8, !tbaa !8, !alias.scope !417
  %377 = insertelement <4 x double> poison, double %373, i64 0
  %378 = insertelement <4 x double> %377, double %374, i64 1
  %379 = insertelement <4 x double> %378, double %375, i64 2
  %380 = insertelement <4 x double> %379, double %376, i64 3
  %381 = add i32 %281, %365
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds double, ptr %279, i64 %382
  store <4 x double> %380, ptr %383, align 8, !tbaa !8, !alias.scope !420, !noalias !422
  %384 = getelementptr inbounds [3 x double], ptr %369, i64 0, i64 1
  %385 = getelementptr inbounds [3 x double], ptr %370, i64 0, i64 1
  %386 = getelementptr inbounds [3 x double], ptr %371, i64 0, i64 1
  %387 = getelementptr inbounds [3 x double], ptr %372, i64 0, i64 1
  %388 = load double, ptr %384, align 8, !tbaa !8, !alias.scope !427
  %389 = load double, ptr %385, align 8, !tbaa !8, !alias.scope !427
  %390 = load double, ptr %386, align 8, !tbaa !8, !alias.scope !427
  %391 = load double, ptr %387, align 8, !tbaa !8, !alias.scope !427
  %392 = insertelement <4 x double> poison, double %388, i64 0
  %393 = insertelement <4 x double> %392, double %389, i64 1
  %394 = insertelement <4 x double> %393, double %390, i64 2
  %395 = insertelement <4 x double> %394, double %391, i64 3
  %396 = add i32 %283, %365
  %397 = zext i32 %396 to i64
  %398 = getelementptr inbounds double, ptr %279, i64 %397
  store <4 x double> %395, ptr %398, align 8, !tbaa !8, !alias.scope !428, !noalias !429
  %399 = getelementptr inbounds [3 x double], ptr %369, i64 0, i64 2
  %400 = getelementptr inbounds [3 x double], ptr %370, i64 0, i64 2
  %401 = getelementptr inbounds [3 x double], ptr %371, i64 0, i64 2
  %402 = getelementptr inbounds [3 x double], ptr %372, i64 0, i64 2
  %403 = load double, ptr %399, align 8, !tbaa !8, !alias.scope !430
  %404 = load double, ptr %400, align 8, !tbaa !8, !alias.scope !430
  %405 = load double, ptr %401, align 8, !tbaa !8, !alias.scope !430
  %406 = load double, ptr %402, align 8, !tbaa !8, !alias.scope !430
  %407 = insertelement <4 x double> poison, double %403, i64 0
  %408 = insertelement <4 x double> %407, double %404, i64 1
  %409 = insertelement <4 x double> %408, double %405, i64 2
  %410 = insertelement <4 x double> %409, double %406, i64 3
  %411 = add i32 %285, %365
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds double, ptr %279, i64 %412
  store <4 x double> %410, ptr %413, align 8, !tbaa !8, !alias.scope !431, !noalias !432
  %414 = add nuw i64 %364, 4
  %415 = icmp eq i64 %414, %178
  br i1 %415, label %416, label %363, !llvm.loop !433

416:                                              ; preds = %363
  br i1 %179, label %441, label %417

417:                                              ; preds = %296, %286, %278, %416
  %418 = phi i64 [ 0, %296 ], [ 0, %286 ], [ 0, %278 ], [ %178, %416 ]
  br label %419

419:                                              ; preds = %417, %419
  %420 = phi i64 [ %437, %419 ], [ %418, %417 ]
  %421 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %420
  %422 = load double, ptr %421, align 8, !tbaa !8
  %423 = trunc i64 %420 to i32
  %424 = add i32 %281, %423
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds double, ptr %279, i64 %425
  store double %422, ptr %426, align 8, !tbaa !8
  %427 = getelementptr inbounds [3 x double], ptr %421, i64 0, i64 1
  %428 = load double, ptr %427, align 8, !tbaa !8
  %429 = add i32 %283, %423
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds double, ptr %279, i64 %430
  store double %428, ptr %431, align 8, !tbaa !8
  %432 = getelementptr inbounds [3 x double], ptr %421, i64 0, i64 2
  %433 = load double, ptr %432, align 8, !tbaa !8
  %434 = add i32 %285, %423
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds double, ptr %279, i64 %435
  store double %433, ptr %436, align 8, !tbaa !8
  %437 = add nuw nsw i64 %420, 1
  %438 = icmp eq i64 %437, %149
  br i1 %438, label %441, label %419, !llvm.loop !434

439:                                              ; preds = %276
  %440 = icmp eq ptr %277, null
  br i1 %440, label %449, label %441

441:                                              ; preds = %419, %416, %439
  call void @_ZdlPv(ptr noundef nonnull %277) #17
  br label %449

442:                                              ; preds = %252
  %443 = landingpad { ptr, i32 }
          cleanup
  br label %450

444:                                              ; preds = %261, %257
  %445 = landingpad { ptr, i32 }
          cleanup
  %446 = load ptr, ptr %11, align 8, !tbaa !25
  %447 = icmp eq ptr %446, null
  br i1 %447, label %450, label %448

448:                                              ; preds = %444
  call void @_ZdlPv(ptr noundef nonnull %446) #17
  br label %450

449:                                              ; preds = %441, %439
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #15
  br label %685

450:                                              ; preds = %448, %444, %442
  %451 = phi { ptr, i32 } [ %443, %442 ], [ %445, %444 ], [ %445, %448 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #15
  br label %995

452:                                              ; preds = %193
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #15
  br i1 %130, label %453, label %454

453:                                              ; preds = %452
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  br label %459

454:                                              ; preds = %452
  %455 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %131) #16
          to label %456 unwind label %675

456:                                              ; preds = %454
  store ptr %455, ptr %12, align 8, !tbaa !25
  %457 = getelementptr inbounds %"class.dealii::Tensor", ptr %455, i64 %129
  store ptr %457, ptr %132, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %455, i8 0, i64 %131, i1 false), !tbaa !8
  %458 = getelementptr i8, ptr %455, i64 %131
  br label %459

459:                                              ; preds = %456, %453
  %460 = phi ptr [ null, %453 ], [ %458, %456 ]
  store ptr %460, ptr %133, align 8, !tbaa !23
  %461 = load ptr, ptr %134, align 8, !tbaa !130
  %462 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %463 unwind label %677

463:                                              ; preds = %459
  %464 = getelementptr inbounds %"class.std::vector.67", ptr %461, i64 %185
  %465 = zext i32 %462 to i64
  %466 = or i64 %135, %465
  %467 = load ptr, ptr %133, align 8, !tbaa !23
  %468 = load ptr, ptr %12, align 8, !tbaa !25
  %469 = ptrtoint ptr %467 to i64
  %470 = ptrtoint ptr %468 to i64
  %471 = sub i64 %469, %470
  %472 = sdiv exact i64 %471, 24
  %473 = shl i64 %472, 32
  %474 = load ptr, ptr %1, align 8, !tbaa !5
  %475 = getelementptr inbounds ptr, ptr %474, i64 4
  %476 = load ptr, ptr %475, align 8
  invoke void %476(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %464, i64 %466, ptr nonnull %12, i64 %473, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 256)
          to label %477 unwind label %677

477:                                              ; preds = %463
  %478 = load ptr, ptr %12, align 8, !tbaa !25
  br i1 %136, label %672, label %479

479:                                              ; preds = %477
  %480 = getelementptr inbounds double, ptr %70, i64 %185
  %481 = load ptr, ptr %137, align 8, !tbaa !35
  %482 = load i32, ptr %138, align 8, !tbaa !34
  %483 = mul i32 %482, %192
  %484 = add i32 %192, 1
  %485 = mul i32 %482, %484
  %486 = add i32 %192, 2
  %487 = mul i32 %482, %486
  br i1 %164, label %644, label %488

488:                                              ; preds = %479
  %489 = xor i32 %483, -1
  %490 = icmp ult i32 %489, %165
  %491 = xor i32 %485, -1
  %492 = icmp ult i32 %491, %166
  %493 = or i1 %492, %167
  %494 = xor i32 %487, -1
  %495 = icmp ult i32 %494, %168
  %496 = or i1 %490, %493
  %497 = or i1 %495, %496
  br i1 %497, label %644, label %498

498:                                              ; preds = %488
  %499 = zext i32 %483 to i64
  %500 = shl nuw nsw i64 %499, 3
  %501 = getelementptr i8, ptr %481, i64 %500
  %502 = getelementptr i8, ptr %481, i64 %160
  %503 = getelementptr i8, ptr %502, i64 %500
  %504 = zext i32 %485 to i64
  %505 = shl nuw nsw i64 %504, 3
  %506 = getelementptr i8, ptr %481, i64 %505
  %507 = getelementptr i8, ptr %502, i64 %505
  %508 = zext i32 %487 to i64
  %509 = shl nuw nsw i64 %508, 3
  %510 = getelementptr i8, ptr %481, i64 %509
  %511 = getelementptr i8, ptr %481, i64 %160
  %512 = getelementptr i8, ptr %511, i64 %509
  %513 = getelementptr i8, ptr %478, i64 %162
  %514 = getelementptr i8, ptr %478, i64 8
  %515 = getelementptr i8, ptr %478, i64 %163
  %516 = getelementptr i8, ptr %478, i64 16
  %517 = getelementptr i8, ptr %478, i64 %161
  %518 = icmp ult ptr %501, %507
  %519 = icmp ult ptr %506, %503
  %520 = and i1 %518, %519
  %521 = icmp ult ptr %501, %512
  %522 = icmp ult ptr %510, %503
  %523 = and i1 %521, %522
  %524 = or i1 %520, %523
  %525 = icmp ult ptr %501, %189
  %526 = icmp ult ptr %187, %503
  %527 = and i1 %525, %526
  %528 = or i1 %524, %527
  %529 = icmp ult ptr %501, %513
  %530 = icmp ult ptr %478, %503
  %531 = and i1 %529, %530
  %532 = or i1 %528, %531
  %533 = icmp ult ptr %501, %515
  %534 = icmp ult ptr %514, %503
  %535 = and i1 %533, %534
  %536 = or i1 %532, %535
  %537 = icmp ult ptr %501, %517
  %538 = icmp ult ptr %516, %503
  %539 = and i1 %537, %538
  %540 = or i1 %536, %539
  %541 = icmp ult ptr %506, %512
  %542 = icmp ult ptr %510, %507
  %543 = and i1 %541, %542
  %544 = or i1 %540, %543
  %545 = icmp ult ptr %506, %189
  %546 = icmp ult ptr %187, %507
  %547 = and i1 %545, %546
  %548 = or i1 %544, %547
  %549 = icmp ult ptr %506, %513
  %550 = icmp ult ptr %478, %507
  %551 = and i1 %549, %550
  %552 = or i1 %548, %551
  %553 = icmp ult ptr %506, %515
  %554 = icmp ult ptr %514, %507
  %555 = and i1 %553, %554
  %556 = or i1 %552, %555
  %557 = icmp ult ptr %506, %517
  %558 = icmp ult ptr %516, %507
  %559 = and i1 %557, %558
  %560 = or i1 %556, %559
  %561 = icmp ult ptr %510, %189
  %562 = icmp ult ptr %187, %512
  %563 = and i1 %561, %562
  %564 = or i1 %560, %563
  %565 = icmp ult ptr %510, %513
  %566 = icmp ult ptr %478, %512
  %567 = and i1 %565, %566
  %568 = or i1 %564, %567
  %569 = icmp ult ptr %510, %515
  %570 = icmp ult ptr %514, %512
  %571 = and i1 %569, %570
  %572 = or i1 %568, %571
  %573 = icmp ult ptr %510, %517
  %574 = icmp ult ptr %516, %512
  %575 = and i1 %573, %574
  %576 = or i1 %572, %575
  br i1 %576, label %644, label %577

577:                                              ; preds = %498
  %578 = load double, ptr %480, align 8, !tbaa !8, !alias.scope !435
  %579 = insertelement <4 x double> poison, double %578, i64 0
  %580 = shufflevector <4 x double> %579, <4 x double> poison, <4 x i32> zeroinitializer
  %581 = load double, ptr %480, align 8, !tbaa !8, !alias.scope !435
  %582 = insertelement <4 x double> poison, double %581, i64 0
  %583 = shufflevector <4 x double> %582, <4 x double> poison, <4 x i32> zeroinitializer
  %584 = load double, ptr %480, align 8, !tbaa !8, !alias.scope !435
  %585 = insertelement <4 x double> poison, double %584, i64 0
  %586 = shufflevector <4 x double> %585, <4 x double> poison, <4 x i32> zeroinitializer
  br label %587

587:                                              ; preds = %587, %577
  %588 = phi i64 [ 0, %577 ], [ %641, %587 ]
  %589 = trunc i64 %588 to i32
  %590 = or i64 %588, 1
  %591 = or i64 %588, 2
  %592 = or i64 %588, 3
  %593 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %588
  %594 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %590
  %595 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %591
  %596 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %592
  %597 = load double, ptr %593, align 8, !tbaa !8, !alias.scope !438
  %598 = load double, ptr %594, align 8, !tbaa !8, !alias.scope !438
  %599 = load double, ptr %595, align 8, !tbaa !8, !alias.scope !438
  %600 = load double, ptr %596, align 8, !tbaa !8, !alias.scope !438
  %601 = insertelement <4 x double> poison, double %597, i64 0
  %602 = insertelement <4 x double> %601, double %598, i64 1
  %603 = insertelement <4 x double> %602, double %599, i64 2
  %604 = insertelement <4 x double> %603, double %600, i64 3
  %605 = fmul <4 x double> %580, %604
  %606 = add i32 %483, %589
  %607 = zext i32 %606 to i64
  %608 = getelementptr inbounds double, ptr %481, i64 %607
  store <4 x double> %605, ptr %608, align 8, !tbaa !8, !alias.scope !440, !noalias !442
  %609 = getelementptr inbounds [3 x double], ptr %593, i64 0, i64 1
  %610 = getelementptr inbounds [3 x double], ptr %594, i64 0, i64 1
  %611 = getelementptr inbounds [3 x double], ptr %595, i64 0, i64 1
  %612 = getelementptr inbounds [3 x double], ptr %596, i64 0, i64 1
  %613 = load double, ptr %609, align 8, !tbaa !8, !alias.scope !447
  %614 = load double, ptr %610, align 8, !tbaa !8, !alias.scope !447
  %615 = load double, ptr %611, align 8, !tbaa !8, !alias.scope !447
  %616 = load double, ptr %612, align 8, !tbaa !8, !alias.scope !447
  %617 = insertelement <4 x double> poison, double %613, i64 0
  %618 = insertelement <4 x double> %617, double %614, i64 1
  %619 = insertelement <4 x double> %618, double %615, i64 2
  %620 = insertelement <4 x double> %619, double %616, i64 3
  %621 = fmul <4 x double> %583, %620
  %622 = add i32 %485, %589
  %623 = zext i32 %622 to i64
  %624 = getelementptr inbounds double, ptr %481, i64 %623
  store <4 x double> %621, ptr %624, align 8, !tbaa !8, !alias.scope !448, !noalias !449
  %625 = getelementptr inbounds [3 x double], ptr %593, i64 0, i64 2
  %626 = getelementptr inbounds [3 x double], ptr %594, i64 0, i64 2
  %627 = getelementptr inbounds [3 x double], ptr %595, i64 0, i64 2
  %628 = getelementptr inbounds [3 x double], ptr %596, i64 0, i64 2
  %629 = load double, ptr %625, align 8, !tbaa !8, !alias.scope !450
  %630 = load double, ptr %626, align 8, !tbaa !8, !alias.scope !450
  %631 = load double, ptr %627, align 8, !tbaa !8, !alias.scope !450
  %632 = load double, ptr %628, align 8, !tbaa !8, !alias.scope !450
  %633 = insertelement <4 x double> poison, double %629, i64 0
  %634 = insertelement <4 x double> %633, double %630, i64 1
  %635 = insertelement <4 x double> %634, double %631, i64 2
  %636 = insertelement <4 x double> %635, double %632, i64 3
  %637 = fmul <4 x double> %586, %636
  %638 = add i32 %487, %589
  %639 = zext i32 %638 to i64
  %640 = getelementptr inbounds double, ptr %481, i64 %639
  store <4 x double> %637, ptr %640, align 8, !tbaa !8, !alias.scope !451, !noalias !452
  %641 = add nuw i64 %588, 4
  %642 = icmp eq i64 %641, %170
  br i1 %642, label %643, label %587, !llvm.loop !453

643:                                              ; preds = %587
  br i1 %171, label %674, label %644

644:                                              ; preds = %498, %488, %479, %643
  %645 = phi i64 [ 0, %498 ], [ 0, %488 ], [ 0, %479 ], [ %170, %643 ]
  br label %646

646:                                              ; preds = %644, %646
  %647 = phi i64 [ %670, %646 ], [ %645, %644 ]
  %648 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %647
  %649 = load double, ptr %480, align 8, !tbaa !8
  %650 = load double, ptr %648, align 8, !tbaa !8
  %651 = fmul double %649, %650
  %652 = trunc i64 %647 to i32
  %653 = add i32 %483, %652
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds double, ptr %481, i64 %654
  store double %651, ptr %655, align 8, !tbaa !8
  %656 = load double, ptr %480, align 8, !tbaa !8
  %657 = getelementptr inbounds [3 x double], ptr %648, i64 0, i64 1
  %658 = load double, ptr %657, align 8, !tbaa !8
  %659 = fmul double %656, %658
  %660 = add i32 %485, %652
  %661 = zext i32 %660 to i64
  %662 = getelementptr inbounds double, ptr %481, i64 %661
  store double %659, ptr %662, align 8, !tbaa !8
  %663 = load double, ptr %480, align 8, !tbaa !8
  %664 = getelementptr inbounds [3 x double], ptr %648, i64 0, i64 2
  %665 = load double, ptr %664, align 8, !tbaa !8
  %666 = fmul double %663, %665
  %667 = add i32 %487, %652
  %668 = zext i32 %667 to i64
  %669 = getelementptr inbounds double, ptr %481, i64 %668
  store double %666, ptr %669, align 8, !tbaa !8
  %670 = add nuw nsw i64 %647, 1
  %671 = icmp eq i64 %670, %148
  br i1 %671, label %674, label %646, !llvm.loop !454

672:                                              ; preds = %477
  %673 = icmp eq ptr %478, null
  br i1 %673, label %682, label %674

674:                                              ; preds = %646, %643, %672
  call void @_ZdlPv(ptr noundef nonnull %478) #17
  br label %682

675:                                              ; preds = %454
  %676 = landingpad { ptr, i32 }
          cleanup
  br label %683

677:                                              ; preds = %463, %459
  %678 = landingpad { ptr, i32 }
          cleanup
  %679 = load ptr, ptr %12, align 8, !tbaa !25
  %680 = icmp eq ptr %679, null
  br i1 %680, label %683, label %681

681:                                              ; preds = %677
  call void @_ZdlPv(ptr noundef nonnull %679) #17
  br label %683

682:                                              ; preds = %674, %672
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #15
  br label %685

683:                                              ; preds = %681, %677, %675
  %684 = phi { ptr, i32 } [ %676, %675 ], [ %678, %677 ], [ %678, %681 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #15
  br label %995

685:                                              ; preds = %233, %195, %449, %682, %193, %184
  br i1 %142, label %980, label %686

686:                                              ; preds = %685
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #15
  br i1 %130, label %687, label %688

687:                                              ; preds = %686
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  br label %695

688:                                              ; preds = %686
  %689 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %143) #16
          to label %690 unwind label %698

690:                                              ; preds = %688
  store ptr %689, ptr %13, align 8, !tbaa !51
  %691 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %689, i64 %129
  store ptr %691, ptr %144, align 8, !tbaa !212
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %689, i8 0, i64 %143, i1 false), !tbaa !8
  %692 = getelementptr i8, ptr %689, i64 %143
  store ptr %692, ptr %145, align 8, !tbaa !49
  %693 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %143) #16
          to label %694 unwind label %700

694:                                              ; preds = %690
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %693, i8 0, i64 %143, i1 false), !tbaa !8
  br label %695

695:                                              ; preds = %694, %687
  %696 = phi ptr [ null, %687 ], [ %693, %694 ]
  %697 = load i32, ptr %128, align 8, !tbaa !342
  switch i32 %697, label %964 [
    i32 0, label %702
    i32 1, label %768
    i32 2, label %831
    i32 256, label %894
  ]

698:                                              ; preds = %688
  %699 = landingpad { ptr, i32 }
          cleanup
  br label %978

700:                                              ; preds = %690
  %701 = landingpad { ptr, i32 }
          cleanup
  br label %973

702:                                              ; preds = %695
  %703 = load ptr, ptr %146, align 8, !tbaa !133
  %704 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %705 unwind label %765

705:                                              ; preds = %702
  %706 = getelementptr inbounds %"class.std::vector.72", ptr %703, i64 %185
  %707 = zext i32 %704 to i64
  %708 = or i64 %135, %707
  %709 = load ptr, ptr %145, align 8, !tbaa !49
  %710 = load ptr, ptr %13, align 8, !tbaa !51
  %711 = ptrtoint ptr %709 to i64
  %712 = ptrtoint ptr %710 to i64
  %713 = sub i64 %711, %712
  %714 = sdiv exact i64 %713, 72
  %715 = shl i64 %714, 32
  %716 = load ptr, ptr %1, align 8, !tbaa !5
  %717 = getelementptr inbounds ptr, ptr %716, i64 5
  %718 = load ptr, ptr %717, align 8
  invoke void %718(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %706, i64 %708, ptr nonnull %13, i64 %715, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 1)
          to label %719 unwind label %765

719:                                              ; preds = %705
  br i1 %136, label %964, label %720

720:                                              ; preds = %719
  %721 = load ptr, ptr %13, align 8, !tbaa !51
  %722 = load ptr, ptr %147, align 8, !tbaa !130
  %723 = zext i32 %192 to i64
  %724 = getelementptr inbounds %"class.std::vector.67", ptr %722, i64 %723
  %725 = load ptr, ptr %724, align 8, !tbaa !25
  %726 = add i32 %192, 1
  %727 = zext i32 %726 to i64
  %728 = getelementptr inbounds %"class.std::vector.67", ptr %722, i64 %727
  %729 = load ptr, ptr %728, align 8, !tbaa !25
  %730 = add i32 %192, 2
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds %"class.std::vector.67", ptr %722, i64 %731
  %733 = load ptr, ptr %732, align 8, !tbaa !25
  br label %734

734:                                              ; preds = %720, %734
  %735 = phi i64 [ 0, %720 ], [ %763, %734 ]
  %736 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %721, i64 %735
  %737 = getelementptr inbounds %"class.dealii::Tensor", ptr %725, i64 %735
  %738 = load double, ptr %736, align 8, !tbaa !8
  store double %738, ptr %737, align 8, !tbaa !8
  %739 = getelementptr inbounds [3 x double], ptr %736, i64 0, i64 1
  %740 = load double, ptr %739, align 8, !tbaa !8
  %741 = getelementptr inbounds [3 x double], ptr %737, i64 0, i64 1
  store double %740, ptr %741, align 8, !tbaa !8
  %742 = getelementptr inbounds [3 x double], ptr %736, i64 0, i64 2
  %743 = load double, ptr %742, align 8, !tbaa !8
  %744 = getelementptr inbounds [3 x double], ptr %737, i64 0, i64 2
  store double %743, ptr %744, align 8, !tbaa !8
  %745 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 1
  %746 = getelementptr inbounds %"class.dealii::Tensor", ptr %729, i64 %735
  %747 = load double, ptr %745, align 8, !tbaa !8
  store double %747, ptr %746, align 8, !tbaa !8
  %748 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 1, i32 0, i64 1
  %749 = load double, ptr %748, align 8, !tbaa !8
  %750 = getelementptr inbounds [3 x double], ptr %746, i64 0, i64 1
  store double %749, ptr %750, align 8, !tbaa !8
  %751 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 1, i32 0, i64 2
  %752 = load double, ptr %751, align 8, !tbaa !8
  %753 = getelementptr inbounds [3 x double], ptr %746, i64 0, i64 2
  store double %752, ptr %753, align 8, !tbaa !8
  %754 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 2
  %755 = getelementptr inbounds %"class.dealii::Tensor", ptr %733, i64 %735
  %756 = load double, ptr %754, align 8, !tbaa !8
  store double %756, ptr %755, align 8, !tbaa !8
  %757 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 2, i32 0, i64 1
  %758 = load double, ptr %757, align 8, !tbaa !8
  %759 = getelementptr inbounds [3 x double], ptr %755, i64 0, i64 1
  store double %758, ptr %759, align 8, !tbaa !8
  %760 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 2, i32 0, i64 2
  %761 = load double, ptr %760, align 8, !tbaa !8
  %762 = getelementptr inbounds [3 x double], ptr %755, i64 0, i64 2
  store double %761, ptr %762, align 8, !tbaa !8
  %763 = add nuw nsw i64 %735, 1
  %764 = icmp eq i64 %763, %153
  br i1 %764, label %964, label %734

765:                                              ; preds = %897, %894, %834, %831, %771, %768, %705, %702
  %766 = landingpad { ptr, i32 }
          cleanup
  %767 = icmp eq ptr %696, null
  br i1 %767, label %973, label %972

768:                                              ; preds = %695
  %769 = load ptr, ptr %146, align 8, !tbaa !133
  %770 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %771 unwind label %765

771:                                              ; preds = %768
  %772 = getelementptr inbounds %"class.std::vector.72", ptr %769, i64 %185
  %773 = zext i32 %770 to i64
  %774 = or i64 %135, %773
  %775 = load ptr, ptr %145, align 8, !tbaa !49
  %776 = load ptr, ptr %13, align 8, !tbaa !51
  %777 = ptrtoint ptr %775 to i64
  %778 = ptrtoint ptr %776 to i64
  %779 = sub i64 %777, %778
  %780 = sdiv exact i64 %779, 72
  %781 = shl i64 %780, 32
  %782 = load ptr, ptr %1, align 8, !tbaa !5
  %783 = getelementptr inbounds ptr, ptr %782, i64 5
  %784 = load ptr, ptr %783, align 8
  invoke void %784(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %772, i64 %774, ptr nonnull %13, i64 %781, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 3)
          to label %785 unwind label %765

785:                                              ; preds = %771
  br i1 %136, label %964, label %786

786:                                              ; preds = %785
  %787 = load ptr, ptr %13, align 8, !tbaa !51
  %788 = load ptr, ptr %147, align 8, !tbaa !130
  %789 = zext i32 %192 to i64
  %790 = getelementptr inbounds %"class.std::vector.67", ptr %788, i64 %789
  %791 = load ptr, ptr %790, align 8, !tbaa !25
  %792 = add i32 %192, 1
  %793 = zext i32 %792 to i64
  %794 = getelementptr inbounds %"class.std::vector.67", ptr %788, i64 %793
  %795 = load ptr, ptr %794, align 8, !tbaa !25
  %796 = add i32 %192, 2
  %797 = zext i32 %796 to i64
  %798 = getelementptr inbounds %"class.std::vector.67", ptr %788, i64 %797
  %799 = load ptr, ptr %798, align 8, !tbaa !25
  br label %800

800:                                              ; preds = %786, %800
  %801 = phi i64 [ 0, %786 ], [ %829, %800 ]
  %802 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %787, i64 %801
  %803 = getelementptr inbounds %"class.dealii::Tensor", ptr %791, i64 %801
  %804 = load double, ptr %802, align 8, !tbaa !8
  store double %804, ptr %803, align 8, !tbaa !8
  %805 = getelementptr inbounds [3 x double], ptr %802, i64 0, i64 1
  %806 = load double, ptr %805, align 8, !tbaa !8
  %807 = getelementptr inbounds [3 x double], ptr %803, i64 0, i64 1
  store double %806, ptr %807, align 8, !tbaa !8
  %808 = getelementptr inbounds [3 x double], ptr %802, i64 0, i64 2
  %809 = load double, ptr %808, align 8, !tbaa !8
  %810 = getelementptr inbounds [3 x double], ptr %803, i64 0, i64 2
  store double %809, ptr %810, align 8, !tbaa !8
  %811 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 1
  %812 = getelementptr inbounds %"class.dealii::Tensor", ptr %795, i64 %801
  %813 = load double, ptr %811, align 8, !tbaa !8
  store double %813, ptr %812, align 8, !tbaa !8
  %814 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 1, i32 0, i64 1
  %815 = load double, ptr %814, align 8, !tbaa !8
  %816 = getelementptr inbounds [3 x double], ptr %812, i64 0, i64 1
  store double %815, ptr %816, align 8, !tbaa !8
  %817 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 1, i32 0, i64 2
  %818 = load double, ptr %817, align 8, !tbaa !8
  %819 = getelementptr inbounds [3 x double], ptr %812, i64 0, i64 2
  store double %818, ptr %819, align 8, !tbaa !8
  %820 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 2
  %821 = getelementptr inbounds %"class.dealii::Tensor", ptr %799, i64 %801
  %822 = load double, ptr %820, align 8, !tbaa !8
  store double %822, ptr %821, align 8, !tbaa !8
  %823 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 2, i32 0, i64 1
  %824 = load double, ptr %823, align 8, !tbaa !8
  %825 = getelementptr inbounds [3 x double], ptr %821, i64 0, i64 1
  store double %824, ptr %825, align 8, !tbaa !8
  %826 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 2, i32 0, i64 2
  %827 = load double, ptr %826, align 8, !tbaa !8
  %828 = getelementptr inbounds [3 x double], ptr %821, i64 0, i64 2
  store double %827, ptr %828, align 8, !tbaa !8
  %829 = add nuw nsw i64 %801, 1
  %830 = icmp eq i64 %829, %152
  br i1 %830, label %964, label %800

831:                                              ; preds = %695
  %832 = load ptr, ptr %146, align 8, !tbaa !133
  %833 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %834 unwind label %765

834:                                              ; preds = %831
  %835 = getelementptr inbounds %"class.std::vector.72", ptr %832, i64 %185
  %836 = zext i32 %833 to i64
  %837 = or i64 %135, %836
  %838 = load ptr, ptr %145, align 8, !tbaa !49
  %839 = load ptr, ptr %13, align 8, !tbaa !51
  %840 = ptrtoint ptr %838 to i64
  %841 = ptrtoint ptr %839 to i64
  %842 = sub i64 %840, %841
  %843 = sdiv exact i64 %842, 72
  %844 = shl i64 %843, 32
  %845 = load ptr, ptr %1, align 8, !tbaa !5
  %846 = getelementptr inbounds ptr, ptr %845, i64 5
  %847 = load ptr, ptr %846, align 8
  invoke void %847(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %835, i64 %837, ptr nonnull %13, i64 %844, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 4)
          to label %848 unwind label %765

848:                                              ; preds = %834
  br i1 %136, label %964, label %849

849:                                              ; preds = %848
  %850 = load ptr, ptr %13, align 8, !tbaa !51
  %851 = load ptr, ptr %147, align 8, !tbaa !130
  %852 = zext i32 %192 to i64
  %853 = getelementptr inbounds %"class.std::vector.67", ptr %851, i64 %852
  %854 = load ptr, ptr %853, align 8, !tbaa !25
  %855 = add i32 %192, 1
  %856 = zext i32 %855 to i64
  %857 = getelementptr inbounds %"class.std::vector.67", ptr %851, i64 %856
  %858 = load ptr, ptr %857, align 8, !tbaa !25
  %859 = add i32 %192, 2
  %860 = zext i32 %859 to i64
  %861 = getelementptr inbounds %"class.std::vector.67", ptr %851, i64 %860
  %862 = load ptr, ptr %861, align 8, !tbaa !25
  br label %863

863:                                              ; preds = %849, %863
  %864 = phi i64 [ 0, %849 ], [ %892, %863 ]
  %865 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %850, i64 %864
  %866 = getelementptr inbounds %"class.dealii::Tensor", ptr %854, i64 %864
  %867 = load double, ptr %865, align 8, !tbaa !8
  store double %867, ptr %866, align 8, !tbaa !8
  %868 = getelementptr inbounds [3 x double], ptr %865, i64 0, i64 1
  %869 = load double, ptr %868, align 8, !tbaa !8
  %870 = getelementptr inbounds [3 x double], ptr %866, i64 0, i64 1
  store double %869, ptr %870, align 8, !tbaa !8
  %871 = getelementptr inbounds [3 x double], ptr %865, i64 0, i64 2
  %872 = load double, ptr %871, align 8, !tbaa !8
  %873 = getelementptr inbounds [3 x double], ptr %866, i64 0, i64 2
  store double %872, ptr %873, align 8, !tbaa !8
  %874 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 1
  %875 = getelementptr inbounds %"class.dealii::Tensor", ptr %858, i64 %864
  %876 = load double, ptr %874, align 8, !tbaa !8
  store double %876, ptr %875, align 8, !tbaa !8
  %877 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 1, i32 0, i64 1
  %878 = load double, ptr %877, align 8, !tbaa !8
  %879 = getelementptr inbounds [3 x double], ptr %875, i64 0, i64 1
  store double %878, ptr %879, align 8, !tbaa !8
  %880 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 1, i32 0, i64 2
  %881 = load double, ptr %880, align 8, !tbaa !8
  %882 = getelementptr inbounds [3 x double], ptr %875, i64 0, i64 2
  store double %881, ptr %882, align 8, !tbaa !8
  %883 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 2
  %884 = getelementptr inbounds %"class.dealii::Tensor", ptr %862, i64 %864
  %885 = load double, ptr %883, align 8, !tbaa !8
  store double %885, ptr %884, align 8, !tbaa !8
  %886 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 2, i32 0, i64 1
  %887 = load double, ptr %886, align 8, !tbaa !8
  %888 = getelementptr inbounds [3 x double], ptr %884, i64 0, i64 1
  store double %887, ptr %888, align 8, !tbaa !8
  %889 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 2, i32 0, i64 2
  %890 = load double, ptr %889, align 8, !tbaa !8
  %891 = getelementptr inbounds [3 x double], ptr %884, i64 0, i64 2
  store double %890, ptr %891, align 8, !tbaa !8
  %892 = add nuw nsw i64 %864, 1
  %893 = icmp eq i64 %892, %151
  br i1 %893, label %964, label %863

894:                                              ; preds = %695
  %895 = load ptr, ptr %146, align 8, !tbaa !133
  %896 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %897 unwind label %765

897:                                              ; preds = %894
  %898 = getelementptr inbounds %"class.std::vector.72", ptr %895, i64 %185
  %899 = zext i32 %896 to i64
  %900 = or i64 %135, %899
  %901 = load ptr, ptr %145, align 8, !tbaa !49
  %902 = load ptr, ptr %13, align 8, !tbaa !51
  %903 = ptrtoint ptr %901 to i64
  %904 = ptrtoint ptr %902 to i64
  %905 = sub i64 %903, %904
  %906 = sdiv exact i64 %905, 72
  %907 = shl i64 %906, 32
  %908 = load ptr, ptr %1, align 8, !tbaa !5
  %909 = getelementptr inbounds ptr, ptr %908, i64 5
  %910 = load ptr, ptr %909, align 8
  invoke void %910(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %898, i64 %900, ptr nonnull %13, i64 %907, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 256)
          to label %911 unwind label %765

911:                                              ; preds = %897
  br i1 %136, label %964, label %912

912:                                              ; preds = %911
  %913 = getelementptr inbounds double, ptr %70, i64 %185
  %914 = load ptr, ptr %13, align 8, !tbaa !51
  %915 = load ptr, ptr %147, align 8, !tbaa !130
  %916 = zext i32 %192 to i64
  %917 = getelementptr inbounds %"class.std::vector.67", ptr %915, i64 %916
  %918 = load ptr, ptr %917, align 8, !tbaa !25
  %919 = add i32 %192, 1
  %920 = zext i32 %919 to i64
  %921 = getelementptr inbounds %"class.std::vector.67", ptr %915, i64 %920
  %922 = load ptr, ptr %921, align 8, !tbaa !25
  %923 = add i32 %192, 2
  %924 = zext i32 %923 to i64
  %925 = getelementptr inbounds %"class.std::vector.67", ptr %915, i64 %924
  %926 = load ptr, ptr %925, align 8, !tbaa !25
  br label %927

927:                                              ; preds = %912, %927
  %928 = phi i64 [ 0, %912 ], [ %962, %927 ]
  %929 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %914, i64 %928
  %930 = load double, ptr %913, align 8, !tbaa !8
  %931 = getelementptr inbounds [3 x double], ptr %929, i64 0, i64 2
  %932 = load double, ptr %931, align 8, !tbaa !8, !noalias !455
  %933 = fmul double %930, %932
  %934 = getelementptr inbounds %"class.dealii::Tensor", ptr %918, i64 %928
  %935 = load <2 x double>, ptr %929, align 8, !tbaa !8, !noalias !455
  %936 = insertelement <2 x double> poison, double %930, i64 0
  %937 = shufflevector <2 x double> %936, <2 x double> poison, <2 x i32> zeroinitializer
  %938 = fmul <2 x double> %937, %935
  store <2 x double> %938, ptr %934, align 8, !tbaa !8
  %939 = getelementptr inbounds [3 x double], ptr %934, i64 0, i64 2
  store double %933, ptr %939, align 8, !tbaa !8
  %940 = load double, ptr %913, align 8, !tbaa !8
  %941 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %929, i64 0, i64 1
  %942 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %929, i64 0, i64 1, i32 0, i64 2
  %943 = load double, ptr %942, align 8, !tbaa !8, !noalias !455
  %944 = fmul double %940, %943
  %945 = getelementptr inbounds %"class.dealii::Tensor", ptr %922, i64 %928
  %946 = load <2 x double>, ptr %941, align 8, !tbaa !8, !noalias !455
  %947 = insertelement <2 x double> poison, double %940, i64 0
  %948 = shufflevector <2 x double> %947, <2 x double> poison, <2 x i32> zeroinitializer
  %949 = fmul <2 x double> %948, %946
  store <2 x double> %949, ptr %945, align 8, !tbaa !8
  %950 = getelementptr inbounds [3 x double], ptr %945, i64 0, i64 2
  store double %944, ptr %950, align 8, !tbaa !8
  %951 = load double, ptr %913, align 8, !tbaa !8
  %952 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %929, i64 0, i64 2
  %953 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %929, i64 0, i64 2, i32 0, i64 2
  %954 = load double, ptr %953, align 8, !tbaa !8, !noalias !455
  %955 = fmul double %951, %954
  %956 = getelementptr inbounds %"class.dealii::Tensor", ptr %926, i64 %928
  %957 = load <2 x double>, ptr %952, align 8, !tbaa !8, !noalias !455
  %958 = insertelement <2 x double> poison, double %951, i64 0
  %959 = shufflevector <2 x double> %958, <2 x double> poison, <2 x i32> zeroinitializer
  %960 = fmul <2 x double> %959, %957
  store <2 x double> %960, ptr %956, align 8, !tbaa !8
  %961 = getelementptr inbounds [3 x double], ptr %956, i64 0, i64 2
  store double %955, ptr %961, align 8, !tbaa !8
  %962 = add nuw nsw i64 %928, 1
  %963 = icmp eq i64 %962, %150
  br i1 %963, label %964, label %927

964:                                              ; preds = %927, %863, %800, %734, %911, %848, %785, %719, %695
  %965 = icmp eq ptr %696, null
  br i1 %965, label %967, label %966

966:                                              ; preds = %964
  call void @_ZdlPv(ptr noundef nonnull %696) #17
  br label %967

967:                                              ; preds = %966, %964
  %968 = load ptr, ptr %13, align 8, !tbaa !51
  %969 = icmp eq ptr %968, null
  br i1 %969, label %971, label %970

970:                                              ; preds = %967
  call void @_ZdlPv(ptr noundef nonnull %968) #17
  br label %971

971:                                              ; preds = %970, %967
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #15
  br label %980

972:                                              ; preds = %765
  call void @_ZdlPv(ptr noundef nonnull %696) #17
  br label %973

973:                                              ; preds = %972, %765, %700
  %974 = phi { ptr, i32 } [ %701, %700 ], [ %766, %765 ], [ %766, %972 ]
  %975 = load ptr, ptr %13, align 8, !tbaa !51
  %976 = icmp eq ptr %975, null
  br i1 %976, label %978, label %977

977:                                              ; preds = %973
  call void @_ZdlPv(ptr noundef nonnull %975) #17
  br label %978

978:                                              ; preds = %977, %973, %698
  %979 = phi { ptr, i32 } [ %699, %698 ], [ %974, %973 ], [ %974, %977 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #15
  br label %995

980:                                              ; preds = %971, %685
  %981 = add nuw nsw i64 %185, 1
  %982 = load i32, ptr %64, align 8, !tbaa !129
  %983 = zext i32 %982 to i64
  %984 = icmp ult i64 %981, %983
  br i1 %984, label %184, label %180

985:                                              ; preds = %180
  %986 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %987 unwind label %992

987:                                              ; preds = %985
  invoke void @_ZNK6dealii13FiniteElementILi3ELi3EE11compute_2ndERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRNS3_16InternalDataBaseERNS1_16InternalDataBaseERNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(728) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %986, ptr noundef nonnull align 8 dereferenceable(185) %5, ptr noundef nonnull align 8 dereferenceable(216) %6, ptr noundef nonnull align 8 dereferenceable(436) %7)
          to label %988 unwind label %992

988:                                              ; preds = %987, %180
  %989 = icmp eq ptr %181, null
  br i1 %989, label %991, label %990

990:                                              ; preds = %988
  call void @_ZdlPv(ptr noundef nonnull %181) #17
  br label %991

991:                                              ; preds = %988, %990
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #15
  ret void

992:                                              ; preds = %985, %987
  %993 = landingpad { ptr, i32 }
          cleanup
  %994 = icmp eq ptr %181, null
  br i1 %994, label %998, label %995

995:                                              ; preds = %248, %450, %683, %978, %992
  %996 = phi { ptr, i32 } [ %993, %992 ], [ %249, %248 ], [ %451, %450 ], [ %684, %683 ], [ %979, %978 ]
  %997 = phi ptr [ %181, %992 ], [ %70, %248 ], [ %70, %450 ], [ %70, %683 ], [ %70, %978 ]
  call void @_ZdlPv(ptr noundef nonnull %997) #17
  br label %998

998:                                              ; preds = %995, %992
  %999 = phi { ptr, i32 } [ %996, %995 ], [ %993, %992 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #15
  resume { ptr, i32 } %999
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE22fill_fe_subface_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(1024) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %3, i32 noundef %4, ptr noundef nonnull align 8 dereferenceable(128) %5, ptr noundef nonnull align 8 dereferenceable(185) %6, ptr noundef nonnull align 8 dereferenceable(185) %7, ptr noundef nonnull align 8 dereferenceable(436) %8) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %11 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %12 = alloca %"class.std::vector.67", align 8
  %13 = alloca %"class.std::vector.67", align 8
  %14 = alloca %"class.std::vector.72", align 8
  %15 = getelementptr inbounds %"class.dealii::Quadrature.110", ptr %5, i64 0, i32 3
  %16 = getelementptr inbounds %"class.dealii::Quadrature.110", ptr %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !127
  %18 = load ptr, ptr %15, align 8, !tbaa !128
  %19 = ptrtoint ptr %17 to i64
  %20 = ptrtoint ptr %18 to i64
  %21 = sub i64 %19, %20
  %22 = lshr exact i64 %21, 3
  %23 = trunc i64 %22 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #15
  call void @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC1Ev(ptr noundef nonnull align 4 dereferenceable(4) %10)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #15
  %24 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !216
  %26 = getelementptr inbounds %"class.dealii::Triangulation", ptr %25, i64 0, i32 1
  %27 = load i32, ptr %2, align 8, !tbaa !218
  %28 = sext i32 %27 to i64
  %29 = load ptr, ptr %26, align 8, !tbaa !219
  %30 = getelementptr inbounds ptr, ptr %29, i64 %28
  %31 = load ptr, ptr %30, align 8, !tbaa !33
  %32 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 1
  %33 = load i32, ptr %32, align 4, !tbaa !221
  %34 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %31, i64 0, i32 4, i32 1
  %35 = mul i32 %33, 6
  %36 = add i32 %35, %3
  %37 = load ptr, ptr %34, align 8, !tbaa !222
  %38 = lshr i32 %36, 6
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i64, ptr %37, i64 %39
  %41 = and i32 %36, 63
  %42 = zext i32 %41 to i64
  %43 = shl nuw i64 1, %42
  %44 = load i64, ptr %40, align 8, !tbaa !223
  %45 = and i64 %43, %44
  %46 = icmp ne i64 %45, 0
  %47 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %31, i64 0, i32 4, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !222
  %49 = getelementptr inbounds i64, ptr %48, i64 %39
  %50 = load i64, ptr %49, align 8, !tbaa !223
  %51 = and i64 %43, %50
  %52 = icmp ne i64 %51, 0
  %53 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %31, i64 0, i32 4, i32 3
  %54 = load ptr, ptr %53, align 8, !tbaa !222
  %55 = getelementptr inbounds i64, ptr %54, i64 %39
  %56 = load i64, ptr %55, align 8, !tbaa !223
  %57 = and i64 %56, %43
  %58 = icmp ne i64 %57, 0
  %59 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %31, i64 0, i32 4
  %60 = sext i32 %33 to i64
  %61 = load ptr, ptr %59, align 8, !tbaa !269, !noalias !145
  %62 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %61, i64 %60
  %63 = zext i32 %3 to i64
  %64 = getelementptr inbounds [6 x i32], ptr %62, i64 0, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !34, !noalias !145
  %66 = getelementptr inbounds %"class.dealii::Triangulation", ptr %25, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !271
  %68 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.160", ptr %67, i64 0, i32 2
  %69 = sext i32 %65 to i64
  %70 = load ptr, ptr %68, align 8, !tbaa !285
  %71 = getelementptr inbounds %"class.dealii::RefinementCase", ptr %70, i64 %69
  %72 = load i8, ptr %71, align 1
  %73 = and i8 %72, 3
  switch i8 %73, label %117 [
    i8 3, label %116
    i8 1, label %74
    i8 2, label %95
  ]

74:                                               ; preds = %9
  %75 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.160", ptr %67, i64 0, i32 1
  %76 = shl i32 %65, 1
  %77 = zext i32 %76 to i64
  %78 = load ptr, ptr %75, align 8, !tbaa !287
  %79 = getelementptr inbounds i32, ptr %78, i64 %77
  %80 = load i32, ptr %79, align 4, !tbaa !34, !noalias !145
  %81 = shl i32 %80, 1
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i32, ptr %78, i64 %82
  %84 = load i32, ptr %83, align 4, !tbaa !34
  %85 = icmp eq i32 %84, -1
  %86 = add i32 %81, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %78, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !34
  %90 = icmp eq i32 %89, -1
  br i1 %85, label %93, label %91

91:                                               ; preds = %74
  %92 = select i1 %90, i8 2, i8 4
  br label %117

93:                                               ; preds = %74
  %94 = select i1 %90, i8 1, i8 3
  br label %117

95:                                               ; preds = %9
  %96 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.160", ptr %67, i64 0, i32 1
  %97 = shl i32 %65, 1
  %98 = zext i32 %97 to i64
  %99 = load ptr, ptr %96, align 8, !tbaa !287
  %100 = getelementptr inbounds i32, ptr %99, i64 %98
  %101 = load i32, ptr %100, align 4, !tbaa !34, !noalias !145
  %102 = shl i32 %101, 1
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %99, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !34
  %106 = icmp eq i32 %105, -1
  %107 = add i32 %102, 2
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i32, ptr %99, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !34
  %111 = icmp eq i32 %110, -1
  br i1 %106, label %114, label %112

112:                                              ; preds = %95
  %113 = select i1 %111, i8 6, i8 8
  br label %117

114:                                              ; preds = %95
  %115 = select i1 %111, i8 5, i8 7
  br label %117

116:                                              ; preds = %9
  br label %117

117:                                              ; preds = %9, %91, %93, %112, %114, %116
  %118 = phi i8 [ 9, %116 ], [ 0, %9 ], [ %92, %91 ], [ %94, %93 ], [ %113, %112 ], [ %115, %114 ]
  %119 = call i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEE(i32 noundef %3, i32 noundef %4, i1 noundef zeroext %46, i1 noundef zeroext %52, i1 noundef zeroext %58, i32 noundef %23, i8 %118)
  store i32 %119, ptr %11, align 4
  %120 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %7, i64 0, i32 2
  %121 = load i32, ptr %120, align 4, !tbaa !118
  %122 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %7, i64 0, i32 3
  %123 = load i32, ptr %122, align 8, !tbaa !125
  %124 = or i32 %123, %121
  %125 = getelementptr inbounds i8, ptr %0, i64 112
  %126 = load i32, ptr %125, align 8, !tbaa !129
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %241, label %128

128:                                              ; preds = %117
  %129 = zext i32 %126 to i64
  %130 = shl nuw nsw i64 %129, 3
  %131 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %130) #16
  %132 = getelementptr inbounds double, ptr %131, i64 %129
  %133 = add nuw nsw i64 %129, 2305843009213693951
  %134 = and i64 %133, 2305843009213693951
  %135 = add nuw nsw i64 %134, 1
  %136 = icmp ult i64 %134, 15
  br i1 %136, label %152, label %137

137:                                              ; preds = %128
  %138 = and i64 %135, 4611686018427387888
  %139 = shl i64 %138, 3
  %140 = getelementptr i8, ptr %131, i64 %139
  br label %141

141:                                              ; preds = %141, %137
  %142 = phi i64 [ 0, %137 ], [ %148, %141 ]
  %143 = shl i64 %142, 3
  %144 = getelementptr i8, ptr %131, i64 %143
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %144, align 8, !tbaa !8
  %145 = getelementptr double, ptr %144, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %145, align 8, !tbaa !8
  %146 = getelementptr double, ptr %144, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %146, align 8, !tbaa !8
  %147 = getelementptr double, ptr %144, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %147, align 8, !tbaa !8
  %148 = add nuw i64 %142, 16
  %149 = icmp eq i64 %148, %138
  br i1 %149, label %150, label %141, !llvm.loop !458

150:                                              ; preds = %141
  %151 = icmp eq i64 %135, %138
  br i1 %151, label %158, label %152

152:                                              ; preds = %128, %150
  %153 = phi ptr [ %131, %128 ], [ %140, %150 ]
  br label %154

154:                                              ; preds = %152, %154
  %155 = phi ptr [ %156, %154 ], [ %153, %152 ]
  store double 1.000000e+00, ptr %155, align 8, !tbaa !8
  %156 = getelementptr inbounds double, ptr %155, i64 1
  %157 = icmp eq ptr %156, %132
  br i1 %157, label %158, label %154, !llvm.loop !459

158:                                              ; preds = %154, %150
  %159 = add nuw nsw i64 %129, 2305843009213693951
  %160 = and i64 %159, 2305843009213693951
  %161 = add nuw nsw i64 %160, 1
  %162 = icmp ult i64 %160, 15
  br i1 %162, label %178, label %163

163:                                              ; preds = %158
  %164 = and i64 %161, 4611686018427387888
  %165 = shl i64 %164, 3
  %166 = getelementptr i8, ptr %131, i64 %165
  br label %167

167:                                              ; preds = %167, %163
  %168 = phi i64 [ 0, %163 ], [ %174, %167 ]
  %169 = shl i64 %168, 3
  %170 = getelementptr i8, ptr %131, i64 %169
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %170, align 8, !tbaa !8
  %171 = getelementptr double, ptr %170, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %171, align 8, !tbaa !8
  %172 = getelementptr double, ptr %170, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %172, align 8, !tbaa !8
  %173 = getelementptr double, ptr %170, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %173, align 8, !tbaa !8
  %174 = add nuw i64 %168, 16
  %175 = icmp eq i64 %174, %164
  br i1 %175, label %176, label %167, !llvm.loop !460

176:                                              ; preds = %167
  %177 = icmp eq i64 %161, %164
  br i1 %177, label %184, label %178

178:                                              ; preds = %158, %176
  %179 = phi ptr [ %131, %158 ], [ %166, %176 ]
  br label %180

180:                                              ; preds = %178, %180
  %181 = phi ptr [ %182, %180 ], [ %179, %178 ]
  store double 1.000000e+00, ptr %181, align 8, !tbaa !8
  %182 = getelementptr inbounds double, ptr %181, i64 1
  %183 = icmp eq ptr %182, %132
  br i1 %183, label %184, label %180, !llvm.loop !461

184:                                              ; preds = %180, %176
  br i1 %127, label %241, label %185

185:                                              ; preds = %184
  %186 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %8, i64 0, i32 14
  %187 = and i32 %124, 1
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 1
  %190 = and i64 %22, 4294967295
  %191 = icmp eq i64 %190, 0
  %192 = mul nuw nsw i64 %190, 24
  %193 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %13, i64 0, i32 2
  %194 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %13, i64 0, i32 1
  %195 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %7, i64 0, i32 1
  %196 = shl nuw i64 %190, 32
  %197 = icmp eq i32 %23, 0
  %198 = getelementptr inbounds %"class.dealii::TableBase", ptr %8, i64 0, i32 1
  %199 = getelementptr inbounds %"class.dealii::TableBase", ptr %8, i64 0, i32 3, i32 0, i32 0, i64 1
  %200 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %12, i64 0, i32 2
  %201 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %12, i64 0, i32 1
  %202 = and i32 %124, 2
  %203 = icmp eq i32 %202, 0
  %204 = mul nuw nsw i64 %190, 72
  %205 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %14, i64 0, i32 2
  %206 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %14, i64 0, i32 1
  %207 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %7, i64 0, i32 2
  %208 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %8, i64 0, i32 1
  %209 = and i64 %22, 4294967295
  %210 = and i64 %22, 4294967295
  %211 = and i64 %22, 4294967295
  %212 = and i64 %22, 4294967295
  %213 = and i64 %22, 4294967295
  %214 = and i64 %22, 4294967295
  %215 = add nsw i64 %209, -1
  %216 = shl nuw nsw i64 %209, 3
  %217 = mul nuw nsw i64 %209, 24
  %218 = add nsw i64 %217, -16
  %219 = add nsw i64 %217, -8
  %220 = add nsw i64 %209, -1
  %221 = shl nuw nsw i64 %209, 3
  %222 = mul nuw nsw i64 %209, 24
  %223 = add nsw i64 %222, -16
  %224 = add nsw i64 %222, -8
  %225 = icmp ult i64 %209, 40
  %226 = trunc i64 %220 to i32
  %227 = trunc i64 %220 to i32
  %228 = icmp ugt i64 %220, 4294967295
  %229 = trunc i64 %220 to i32
  %230 = and i64 %22, 3
  %231 = sub nsw i64 %209, %230
  %232 = icmp eq i64 %230, 0
  %233 = icmp ult i64 %209, 60
  %234 = trunc i64 %215 to i32
  %235 = trunc i64 %215 to i32
  %236 = icmp ugt i64 %215, 4294967295
  %237 = trunc i64 %215 to i32
  %238 = and i64 %22, 3
  %239 = sub nsw i64 %209, %238
  %240 = icmp eq i64 %238, 0
  br label %245

241:                                              ; preds = %1041, %117, %184
  %242 = phi ptr [ %131, %184 ], [ null, %117 ], [ %131, %1041 ]
  %243 = and i32 %124, 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %1049, label %1046

245:                                              ; preds = %185, %1041
  %246 = phi i64 [ 0, %185 ], [ %1042, %1041 ]
  %247 = shl nuw nsw i64 %246, 3
  %248 = getelementptr i8, ptr %131, i64 %247
  %249 = add nuw i64 %247, 8
  %250 = getelementptr i8, ptr %131, i64 %249
  %251 = load ptr, ptr %186, align 8, !tbaa !154
  %252 = getelementptr inbounds i32, ptr %251, i64 %246
  %253 = load i32, ptr %252, align 4, !tbaa !34
  br i1 %188, label %746, label %254

254:                                              ; preds = %245
  %255 = load i32, ptr %189, align 8, !tbaa !342
  switch i32 %255, label %746 [
    i32 0, label %256
    i32 1, label %311
    i32 2, label %311
    i32 256, label %513
  ]

256:                                              ; preds = %254
  br i1 %197, label %746, label %257

257:                                              ; preds = %256
  %258 = add i32 %253, 1
  %259 = add i32 %253, 2
  br label %260

260:                                              ; preds = %257, %294
  %261 = phi i32 [ %307, %294 ], [ 0, %257 ]
  %262 = load ptr, ptr %195, align 8, !tbaa !130
  %263 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %264 unwind label %309

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.std::vector.67", ptr %262, i64 %246
  %266 = add i32 %263, %261
  %267 = zext i32 %266 to i64
  %268 = load ptr, ptr %265, align 8, !tbaa !25
  %269 = getelementptr inbounds %"class.dealii::Tensor", ptr %268, i64 %267
  %270 = load double, ptr %269, align 8, !tbaa !8
  %271 = load ptr, ptr %198, align 8, !tbaa !35
  %272 = load i32, ptr %199, align 8, !tbaa !34
  %273 = mul i32 %272, %253
  %274 = add i32 %273, %261
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds double, ptr %271, i64 %275
  store double %270, ptr %276, align 8, !tbaa !8
  %277 = load ptr, ptr %195, align 8, !tbaa !130
  %278 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %279 unwind label %309

279:                                              ; preds = %264
  %280 = getelementptr inbounds %"class.std::vector.67", ptr %277, i64 %246
  %281 = add i32 %278, %261
  %282 = zext i32 %281 to i64
  %283 = load ptr, ptr %280, align 8, !tbaa !25
  %284 = getelementptr inbounds %"class.dealii::Tensor", ptr %283, i64 %282, i32 0, i64 1
  %285 = load double, ptr %284, align 8, !tbaa !8
  %286 = load ptr, ptr %198, align 8, !tbaa !35
  %287 = load i32, ptr %199, align 8, !tbaa !34
  %288 = mul i32 %287, %258
  %289 = add i32 %288, %261
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds double, ptr %286, i64 %290
  store double %285, ptr %291, align 8, !tbaa !8
  %292 = load ptr, ptr %195, align 8, !tbaa !130
  %293 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %294 unwind label %309

294:                                              ; preds = %279
  %295 = getelementptr inbounds %"class.std::vector.67", ptr %292, i64 %246
  %296 = add i32 %293, %261
  %297 = zext i32 %296 to i64
  %298 = load ptr, ptr %295, align 8, !tbaa !25
  %299 = getelementptr inbounds %"class.dealii::Tensor", ptr %298, i64 %297, i32 0, i64 2
  %300 = load double, ptr %299, align 8, !tbaa !8
  %301 = load ptr, ptr %198, align 8, !tbaa !35
  %302 = load i32, ptr %199, align 8, !tbaa !34
  %303 = mul i32 %302, %259
  %304 = add i32 %303, %261
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds double, ptr %301, i64 %305
  store double %300, ptr %306, align 8, !tbaa !8
  %307 = add nuw i32 %261, 1
  %308 = icmp eq i32 %307, %23
  br i1 %308, label %746, label %260

309:                                              ; preds = %279, %264, %260
  %310 = landingpad { ptr, i32 }
          cleanup
  br label %1056

311:                                              ; preds = %254, %254
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #15
  br i1 %191, label %312, label %313

312:                                              ; preds = %311
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  br label %318

313:                                              ; preds = %311
  %314 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %192) #16
          to label %315 unwind label %503

315:                                              ; preds = %313
  store ptr %314, ptr %12, align 8, !tbaa !25
  %316 = getelementptr inbounds %"class.dealii::Tensor", ptr %314, i64 %190
  store ptr %316, ptr %200, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %314, i8 0, i64 %192, i1 false), !tbaa !8
  %317 = getelementptr i8, ptr %314, i64 %192
  br label %318

318:                                              ; preds = %315, %312
  %319 = phi ptr [ null, %312 ], [ %317, %315 ]
  store ptr %319, ptr %201, align 8, !tbaa !23
  %320 = load ptr, ptr %195, align 8, !tbaa !130
  %321 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %322 unwind label %505

322:                                              ; preds = %318
  %323 = getelementptr inbounds %"class.std::vector.67", ptr %320, i64 %246
  %324 = zext i32 %321 to i64
  %325 = or i64 %196, %324
  %326 = load ptr, ptr %201, align 8, !tbaa !23
  %327 = load ptr, ptr %12, align 8, !tbaa !25
  %328 = ptrtoint ptr %326 to i64
  %329 = ptrtoint ptr %327 to i64
  %330 = sub i64 %328, %329
  %331 = sdiv exact i64 %330, 24
  %332 = load i32, ptr %189, align 8, !tbaa !342
  %333 = shl i64 %331, 32
  %334 = load ptr, ptr %1, align 8, !tbaa !5
  %335 = getelementptr inbounds ptr, ptr %334, i64 4
  %336 = load ptr, ptr %335, align 8
  invoke void %336(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %323, i64 %325, ptr nonnull %12, i64 %333, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef %332)
          to label %337 unwind label %505

337:                                              ; preds = %322
  %338 = load ptr, ptr %12, align 8, !tbaa !25
  br i1 %197, label %500, label %339

339:                                              ; preds = %337
  %340 = load ptr, ptr %198, align 8, !tbaa !35
  %341 = load i32, ptr %199, align 8, !tbaa !34
  %342 = mul i32 %341, %253
  %343 = add i32 %253, 1
  %344 = mul i32 %341, %343
  %345 = add i32 %253, 2
  %346 = mul i32 %341, %345
  br i1 %233, label %478, label %347

347:                                              ; preds = %339
  %348 = xor i32 %342, -1
  %349 = icmp ult i32 %348, %234
  %350 = xor i32 %344, -1
  %351 = icmp ult i32 %350, %235
  %352 = or i1 %351, %236
  %353 = xor i32 %346, -1
  %354 = icmp ult i32 %353, %237
  %355 = or i1 %349, %352
  %356 = or i1 %354, %355
  br i1 %356, label %478, label %357

357:                                              ; preds = %347
  %358 = zext i32 %342 to i64
  %359 = shl nuw nsw i64 %358, 3
  %360 = getelementptr i8, ptr %340, i64 %359
  %361 = getelementptr i8, ptr %340, i64 %216
  %362 = getelementptr i8, ptr %361, i64 %359
  %363 = zext i32 %344 to i64
  %364 = shl nuw nsw i64 %363, 3
  %365 = getelementptr i8, ptr %340, i64 %364
  %366 = getelementptr i8, ptr %361, i64 %364
  %367 = zext i32 %346 to i64
  %368 = shl nuw nsw i64 %367, 3
  %369 = getelementptr i8, ptr %340, i64 %368
  %370 = getelementptr i8, ptr %340, i64 %216
  %371 = getelementptr i8, ptr %370, i64 %368
  %372 = getelementptr i8, ptr %338, i64 %218
  %373 = getelementptr i8, ptr %338, i64 8
  %374 = getelementptr i8, ptr %338, i64 %219
  %375 = getelementptr i8, ptr %338, i64 16
  %376 = getelementptr i8, ptr %338, i64 %217
  %377 = icmp ult ptr %360, %366
  %378 = icmp ult ptr %365, %362
  %379 = and i1 %377, %378
  %380 = icmp ult ptr %360, %371
  %381 = icmp ult ptr %369, %362
  %382 = and i1 %380, %381
  %383 = or i1 %379, %382
  %384 = icmp ult ptr %360, %372
  %385 = icmp ult ptr %338, %362
  %386 = and i1 %384, %385
  %387 = or i1 %383, %386
  %388 = icmp ult ptr %360, %374
  %389 = icmp ult ptr %373, %362
  %390 = and i1 %388, %389
  %391 = or i1 %387, %390
  %392 = icmp ult ptr %360, %376
  %393 = icmp ult ptr %375, %362
  %394 = and i1 %392, %393
  %395 = or i1 %391, %394
  %396 = icmp ult ptr %365, %371
  %397 = icmp ult ptr %369, %366
  %398 = and i1 %396, %397
  %399 = or i1 %395, %398
  %400 = icmp ult ptr %365, %372
  %401 = icmp ult ptr %338, %366
  %402 = and i1 %400, %401
  %403 = or i1 %399, %402
  %404 = icmp ult ptr %365, %374
  %405 = icmp ult ptr %373, %366
  %406 = and i1 %404, %405
  %407 = or i1 %403, %406
  %408 = icmp ult ptr %365, %376
  %409 = icmp ult ptr %375, %366
  %410 = and i1 %408, %409
  %411 = or i1 %407, %410
  %412 = icmp ult ptr %369, %372
  %413 = icmp ult ptr %338, %371
  %414 = and i1 %412, %413
  %415 = or i1 %411, %414
  %416 = icmp ult ptr %369, %374
  %417 = icmp ult ptr %373, %371
  %418 = and i1 %416, %417
  %419 = or i1 %415, %418
  %420 = icmp ult ptr %369, %376
  %421 = icmp ult ptr %375, %371
  %422 = and i1 %420, %421
  %423 = or i1 %419, %422
  br i1 %423, label %478, label %424

424:                                              ; preds = %357, %424
  %425 = phi i64 [ %475, %424 ], [ 0, %357 ]
  %426 = trunc i64 %425 to i32
  %427 = or i64 %425, 1
  %428 = or i64 %425, 2
  %429 = or i64 %425, 3
  %430 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %425
  %431 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %427
  %432 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %428
  %433 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %429
  %434 = load double, ptr %430, align 8, !tbaa !8, !alias.scope !462
  %435 = load double, ptr %431, align 8, !tbaa !8, !alias.scope !462
  %436 = load double, ptr %432, align 8, !tbaa !8, !alias.scope !462
  %437 = load double, ptr %433, align 8, !tbaa !8, !alias.scope !462
  %438 = insertelement <4 x double> poison, double %434, i64 0
  %439 = insertelement <4 x double> %438, double %435, i64 1
  %440 = insertelement <4 x double> %439, double %436, i64 2
  %441 = insertelement <4 x double> %440, double %437, i64 3
  %442 = add i32 %342, %426
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds double, ptr %340, i64 %443
  store <4 x double> %441, ptr %444, align 8, !tbaa !8, !alias.scope !465, !noalias !467
  %445 = getelementptr inbounds [3 x double], ptr %430, i64 0, i64 1
  %446 = getelementptr inbounds [3 x double], ptr %431, i64 0, i64 1
  %447 = getelementptr inbounds [3 x double], ptr %432, i64 0, i64 1
  %448 = getelementptr inbounds [3 x double], ptr %433, i64 0, i64 1
  %449 = load double, ptr %445, align 8, !tbaa !8, !alias.scope !472
  %450 = load double, ptr %446, align 8, !tbaa !8, !alias.scope !472
  %451 = load double, ptr %447, align 8, !tbaa !8, !alias.scope !472
  %452 = load double, ptr %448, align 8, !tbaa !8, !alias.scope !472
  %453 = insertelement <4 x double> poison, double %449, i64 0
  %454 = insertelement <4 x double> %453, double %450, i64 1
  %455 = insertelement <4 x double> %454, double %451, i64 2
  %456 = insertelement <4 x double> %455, double %452, i64 3
  %457 = add i32 %344, %426
  %458 = zext i32 %457 to i64
  %459 = getelementptr inbounds double, ptr %340, i64 %458
  store <4 x double> %456, ptr %459, align 8, !tbaa !8, !alias.scope !473, !noalias !474
  %460 = getelementptr inbounds [3 x double], ptr %430, i64 0, i64 2
  %461 = getelementptr inbounds [3 x double], ptr %431, i64 0, i64 2
  %462 = getelementptr inbounds [3 x double], ptr %432, i64 0, i64 2
  %463 = getelementptr inbounds [3 x double], ptr %433, i64 0, i64 2
  %464 = load double, ptr %460, align 8, !tbaa !8, !alias.scope !475
  %465 = load double, ptr %461, align 8, !tbaa !8, !alias.scope !475
  %466 = load double, ptr %462, align 8, !tbaa !8, !alias.scope !475
  %467 = load double, ptr %463, align 8, !tbaa !8, !alias.scope !475
  %468 = insertelement <4 x double> poison, double %464, i64 0
  %469 = insertelement <4 x double> %468, double %465, i64 1
  %470 = insertelement <4 x double> %469, double %466, i64 2
  %471 = insertelement <4 x double> %470, double %467, i64 3
  %472 = add i32 %346, %426
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds double, ptr %340, i64 %473
  store <4 x double> %471, ptr %474, align 8, !tbaa !8, !alias.scope !476, !noalias !477
  %475 = add nuw i64 %425, 4
  %476 = icmp eq i64 %475, %239
  br i1 %476, label %477, label %424, !llvm.loop !478

477:                                              ; preds = %424
  br i1 %240, label %502, label %478

478:                                              ; preds = %357, %347, %339, %477
  %479 = phi i64 [ 0, %357 ], [ 0, %347 ], [ 0, %339 ], [ %239, %477 ]
  br label %480

480:                                              ; preds = %478, %480
  %481 = phi i64 [ %498, %480 ], [ %479, %478 ]
  %482 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %481
  %483 = load double, ptr %482, align 8, !tbaa !8
  %484 = trunc i64 %481 to i32
  %485 = add i32 %342, %484
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds double, ptr %340, i64 %486
  store double %483, ptr %487, align 8, !tbaa !8
  %488 = getelementptr inbounds [3 x double], ptr %482, i64 0, i64 1
  %489 = load double, ptr %488, align 8, !tbaa !8
  %490 = add i32 %344, %484
  %491 = zext i32 %490 to i64
  %492 = getelementptr inbounds double, ptr %340, i64 %491
  store double %489, ptr %492, align 8, !tbaa !8
  %493 = getelementptr inbounds [3 x double], ptr %482, i64 0, i64 2
  %494 = load double, ptr %493, align 8, !tbaa !8
  %495 = add i32 %346, %484
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds double, ptr %340, i64 %496
  store double %494, ptr %497, align 8, !tbaa !8
  %498 = add nuw nsw i64 %481, 1
  %499 = icmp eq i64 %498, %210
  br i1 %499, label %502, label %480, !llvm.loop !479

500:                                              ; preds = %337
  %501 = icmp eq ptr %338, null
  br i1 %501, label %510, label %502

502:                                              ; preds = %480, %477, %500
  call void @_ZdlPv(ptr noundef nonnull %338) #17
  br label %510

503:                                              ; preds = %313
  %504 = landingpad { ptr, i32 }
          cleanup
  br label %511

505:                                              ; preds = %322, %318
  %506 = landingpad { ptr, i32 }
          cleanup
  %507 = load ptr, ptr %12, align 8, !tbaa !25
  %508 = icmp eq ptr %507, null
  br i1 %508, label %511, label %509

509:                                              ; preds = %505
  call void @_ZdlPv(ptr noundef nonnull %507) #17
  br label %511

510:                                              ; preds = %502, %500
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #15
  br label %746

511:                                              ; preds = %509, %505, %503
  %512 = phi { ptr, i32 } [ %504, %503 ], [ %506, %505 ], [ %506, %509 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #15
  br label %1056

513:                                              ; preds = %254
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #15
  br i1 %191, label %514, label %515

514:                                              ; preds = %513
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  br label %520

515:                                              ; preds = %513
  %516 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %192) #16
          to label %517 unwind label %736

517:                                              ; preds = %515
  store ptr %516, ptr %13, align 8, !tbaa !25
  %518 = getelementptr inbounds %"class.dealii::Tensor", ptr %516, i64 %190
  store ptr %518, ptr %193, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %516, i8 0, i64 %192, i1 false), !tbaa !8
  %519 = getelementptr i8, ptr %516, i64 %192
  br label %520

520:                                              ; preds = %517, %514
  %521 = phi ptr [ null, %514 ], [ %519, %517 ]
  store ptr %521, ptr %194, align 8, !tbaa !23
  %522 = load ptr, ptr %195, align 8, !tbaa !130
  %523 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %524 unwind label %738

524:                                              ; preds = %520
  %525 = getelementptr inbounds %"class.std::vector.67", ptr %522, i64 %246
  %526 = zext i32 %523 to i64
  %527 = or i64 %196, %526
  %528 = load ptr, ptr %194, align 8, !tbaa !23
  %529 = load ptr, ptr %13, align 8, !tbaa !25
  %530 = ptrtoint ptr %528 to i64
  %531 = ptrtoint ptr %529 to i64
  %532 = sub i64 %530, %531
  %533 = sdiv exact i64 %532, 24
  %534 = shl i64 %533, 32
  %535 = load ptr, ptr %1, align 8, !tbaa !5
  %536 = getelementptr inbounds ptr, ptr %535, i64 4
  %537 = load ptr, ptr %536, align 8
  invoke void %537(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %525, i64 %527, ptr nonnull %13, i64 %534, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 256)
          to label %538 unwind label %738

538:                                              ; preds = %524
  %539 = load ptr, ptr %13, align 8, !tbaa !25
  br i1 %197, label %733, label %540

540:                                              ; preds = %538
  %541 = getelementptr inbounds double, ptr %131, i64 %246
  %542 = load ptr, ptr %198, align 8, !tbaa !35
  %543 = load i32, ptr %199, align 8, !tbaa !34
  %544 = mul i32 %543, %253
  %545 = add i32 %253, 1
  %546 = mul i32 %543, %545
  %547 = add i32 %253, 2
  %548 = mul i32 %543, %547
  br i1 %225, label %705, label %549

549:                                              ; preds = %540
  %550 = xor i32 %544, -1
  %551 = icmp ult i32 %550, %226
  %552 = xor i32 %546, -1
  %553 = icmp ult i32 %552, %227
  %554 = or i1 %553, %228
  %555 = xor i32 %548, -1
  %556 = icmp ult i32 %555, %229
  %557 = or i1 %551, %554
  %558 = or i1 %556, %557
  br i1 %558, label %705, label %559

559:                                              ; preds = %549
  %560 = zext i32 %544 to i64
  %561 = shl nuw nsw i64 %560, 3
  %562 = getelementptr i8, ptr %542, i64 %561
  %563 = getelementptr i8, ptr %542, i64 %221
  %564 = getelementptr i8, ptr %563, i64 %561
  %565 = zext i32 %546 to i64
  %566 = shl nuw nsw i64 %565, 3
  %567 = getelementptr i8, ptr %542, i64 %566
  %568 = getelementptr i8, ptr %563, i64 %566
  %569 = zext i32 %548 to i64
  %570 = shl nuw nsw i64 %569, 3
  %571 = getelementptr i8, ptr %542, i64 %570
  %572 = getelementptr i8, ptr %542, i64 %221
  %573 = getelementptr i8, ptr %572, i64 %570
  %574 = getelementptr i8, ptr %539, i64 %223
  %575 = getelementptr i8, ptr %539, i64 8
  %576 = getelementptr i8, ptr %539, i64 %224
  %577 = getelementptr i8, ptr %539, i64 16
  %578 = getelementptr i8, ptr %539, i64 %222
  %579 = icmp ult ptr %562, %568
  %580 = icmp ult ptr %567, %564
  %581 = and i1 %579, %580
  %582 = icmp ult ptr %562, %573
  %583 = icmp ult ptr %571, %564
  %584 = and i1 %582, %583
  %585 = or i1 %581, %584
  %586 = icmp ult ptr %562, %250
  %587 = icmp ult ptr %248, %564
  %588 = and i1 %586, %587
  %589 = or i1 %585, %588
  %590 = icmp ult ptr %562, %574
  %591 = icmp ult ptr %539, %564
  %592 = and i1 %590, %591
  %593 = or i1 %589, %592
  %594 = icmp ult ptr %562, %576
  %595 = icmp ult ptr %575, %564
  %596 = and i1 %594, %595
  %597 = or i1 %593, %596
  %598 = icmp ult ptr %562, %578
  %599 = icmp ult ptr %577, %564
  %600 = and i1 %598, %599
  %601 = or i1 %597, %600
  %602 = icmp ult ptr %567, %573
  %603 = icmp ult ptr %571, %568
  %604 = and i1 %602, %603
  %605 = or i1 %601, %604
  %606 = icmp ult ptr %567, %250
  %607 = icmp ult ptr %248, %568
  %608 = and i1 %606, %607
  %609 = or i1 %605, %608
  %610 = icmp ult ptr %567, %574
  %611 = icmp ult ptr %539, %568
  %612 = and i1 %610, %611
  %613 = or i1 %609, %612
  %614 = icmp ult ptr %567, %576
  %615 = icmp ult ptr %575, %568
  %616 = and i1 %614, %615
  %617 = or i1 %613, %616
  %618 = icmp ult ptr %567, %578
  %619 = icmp ult ptr %577, %568
  %620 = and i1 %618, %619
  %621 = or i1 %617, %620
  %622 = icmp ult ptr %571, %250
  %623 = icmp ult ptr %248, %573
  %624 = and i1 %622, %623
  %625 = or i1 %621, %624
  %626 = icmp ult ptr %571, %574
  %627 = icmp ult ptr %539, %573
  %628 = and i1 %626, %627
  %629 = or i1 %625, %628
  %630 = icmp ult ptr %571, %576
  %631 = icmp ult ptr %575, %573
  %632 = and i1 %630, %631
  %633 = or i1 %629, %632
  %634 = icmp ult ptr %571, %578
  %635 = icmp ult ptr %577, %573
  %636 = and i1 %634, %635
  %637 = or i1 %633, %636
  br i1 %637, label %705, label %638

638:                                              ; preds = %559
  %639 = load double, ptr %541, align 8, !tbaa !8, !alias.scope !480
  %640 = insertelement <4 x double> poison, double %639, i64 0
  %641 = shufflevector <4 x double> %640, <4 x double> poison, <4 x i32> zeroinitializer
  %642 = load double, ptr %541, align 8, !tbaa !8, !alias.scope !480
  %643 = insertelement <4 x double> poison, double %642, i64 0
  %644 = shufflevector <4 x double> %643, <4 x double> poison, <4 x i32> zeroinitializer
  %645 = load double, ptr %541, align 8, !tbaa !8, !alias.scope !480
  %646 = insertelement <4 x double> poison, double %645, i64 0
  %647 = shufflevector <4 x double> %646, <4 x double> poison, <4 x i32> zeroinitializer
  br label %648

648:                                              ; preds = %648, %638
  %649 = phi i64 [ 0, %638 ], [ %702, %648 ]
  %650 = trunc i64 %649 to i32
  %651 = or i64 %649, 1
  %652 = or i64 %649, 2
  %653 = or i64 %649, 3
  %654 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %649
  %655 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %651
  %656 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %652
  %657 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %653
  %658 = load double, ptr %654, align 8, !tbaa !8, !alias.scope !483
  %659 = load double, ptr %655, align 8, !tbaa !8, !alias.scope !483
  %660 = load double, ptr %656, align 8, !tbaa !8, !alias.scope !483
  %661 = load double, ptr %657, align 8, !tbaa !8, !alias.scope !483
  %662 = insertelement <4 x double> poison, double %658, i64 0
  %663 = insertelement <4 x double> %662, double %659, i64 1
  %664 = insertelement <4 x double> %663, double %660, i64 2
  %665 = insertelement <4 x double> %664, double %661, i64 3
  %666 = fmul <4 x double> %641, %665
  %667 = add i32 %544, %650
  %668 = zext i32 %667 to i64
  %669 = getelementptr inbounds double, ptr %542, i64 %668
  store <4 x double> %666, ptr %669, align 8, !tbaa !8, !alias.scope !485, !noalias !487
  %670 = getelementptr inbounds [3 x double], ptr %654, i64 0, i64 1
  %671 = getelementptr inbounds [3 x double], ptr %655, i64 0, i64 1
  %672 = getelementptr inbounds [3 x double], ptr %656, i64 0, i64 1
  %673 = getelementptr inbounds [3 x double], ptr %657, i64 0, i64 1
  %674 = load double, ptr %670, align 8, !tbaa !8, !alias.scope !492
  %675 = load double, ptr %671, align 8, !tbaa !8, !alias.scope !492
  %676 = load double, ptr %672, align 8, !tbaa !8, !alias.scope !492
  %677 = load double, ptr %673, align 8, !tbaa !8, !alias.scope !492
  %678 = insertelement <4 x double> poison, double %674, i64 0
  %679 = insertelement <4 x double> %678, double %675, i64 1
  %680 = insertelement <4 x double> %679, double %676, i64 2
  %681 = insertelement <4 x double> %680, double %677, i64 3
  %682 = fmul <4 x double> %644, %681
  %683 = add i32 %546, %650
  %684 = zext i32 %683 to i64
  %685 = getelementptr inbounds double, ptr %542, i64 %684
  store <4 x double> %682, ptr %685, align 8, !tbaa !8, !alias.scope !493, !noalias !494
  %686 = getelementptr inbounds [3 x double], ptr %654, i64 0, i64 2
  %687 = getelementptr inbounds [3 x double], ptr %655, i64 0, i64 2
  %688 = getelementptr inbounds [3 x double], ptr %656, i64 0, i64 2
  %689 = getelementptr inbounds [3 x double], ptr %657, i64 0, i64 2
  %690 = load double, ptr %686, align 8, !tbaa !8, !alias.scope !495
  %691 = load double, ptr %687, align 8, !tbaa !8, !alias.scope !495
  %692 = load double, ptr %688, align 8, !tbaa !8, !alias.scope !495
  %693 = load double, ptr %689, align 8, !tbaa !8, !alias.scope !495
  %694 = insertelement <4 x double> poison, double %690, i64 0
  %695 = insertelement <4 x double> %694, double %691, i64 1
  %696 = insertelement <4 x double> %695, double %692, i64 2
  %697 = insertelement <4 x double> %696, double %693, i64 3
  %698 = fmul <4 x double> %647, %697
  %699 = add i32 %548, %650
  %700 = zext i32 %699 to i64
  %701 = getelementptr inbounds double, ptr %542, i64 %700
  store <4 x double> %698, ptr %701, align 8, !tbaa !8, !alias.scope !496, !noalias !497
  %702 = add nuw i64 %649, 4
  %703 = icmp eq i64 %702, %231
  br i1 %703, label %704, label %648, !llvm.loop !498

704:                                              ; preds = %648
  br i1 %232, label %735, label %705

705:                                              ; preds = %559, %549, %540, %704
  %706 = phi i64 [ 0, %559 ], [ 0, %549 ], [ 0, %540 ], [ %231, %704 ]
  br label %707

707:                                              ; preds = %705, %707
  %708 = phi i64 [ %731, %707 ], [ %706, %705 ]
  %709 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %708
  %710 = load double, ptr %541, align 8, !tbaa !8
  %711 = load double, ptr %709, align 8, !tbaa !8
  %712 = fmul double %710, %711
  %713 = trunc i64 %708 to i32
  %714 = add i32 %544, %713
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds double, ptr %542, i64 %715
  store double %712, ptr %716, align 8, !tbaa !8
  %717 = load double, ptr %541, align 8, !tbaa !8
  %718 = getelementptr inbounds [3 x double], ptr %709, i64 0, i64 1
  %719 = load double, ptr %718, align 8, !tbaa !8
  %720 = fmul double %717, %719
  %721 = add i32 %546, %713
  %722 = zext i32 %721 to i64
  %723 = getelementptr inbounds double, ptr %542, i64 %722
  store double %720, ptr %723, align 8, !tbaa !8
  %724 = load double, ptr %541, align 8, !tbaa !8
  %725 = getelementptr inbounds [3 x double], ptr %709, i64 0, i64 2
  %726 = load double, ptr %725, align 8, !tbaa !8
  %727 = fmul double %724, %726
  %728 = add i32 %548, %713
  %729 = zext i32 %728 to i64
  %730 = getelementptr inbounds double, ptr %542, i64 %729
  store double %727, ptr %730, align 8, !tbaa !8
  %731 = add nuw nsw i64 %708, 1
  %732 = icmp eq i64 %731, %209
  br i1 %732, label %735, label %707, !llvm.loop !499

733:                                              ; preds = %538
  %734 = icmp eq ptr %539, null
  br i1 %734, label %743, label %735

735:                                              ; preds = %707, %704, %733
  call void @_ZdlPv(ptr noundef nonnull %539) #17
  br label %743

736:                                              ; preds = %515
  %737 = landingpad { ptr, i32 }
          cleanup
  br label %744

738:                                              ; preds = %524, %520
  %739 = landingpad { ptr, i32 }
          cleanup
  %740 = load ptr, ptr %13, align 8, !tbaa !25
  %741 = icmp eq ptr %740, null
  br i1 %741, label %744, label %742

742:                                              ; preds = %738
  call void @_ZdlPv(ptr noundef nonnull %740) #17
  br label %744

743:                                              ; preds = %735, %733
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #15
  br label %746

744:                                              ; preds = %742, %738, %736
  %745 = phi { ptr, i32 } [ %737, %736 ], [ %739, %738 ], [ %739, %742 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #15
  br label %1056

746:                                              ; preds = %294, %256, %510, %743, %254, %245
  br i1 %203, label %1041, label %747

747:                                              ; preds = %746
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #15
  br i1 %191, label %748, label %749

748:                                              ; preds = %747
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  br label %756

749:                                              ; preds = %747
  %750 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %204) #16
          to label %751 unwind label %759

751:                                              ; preds = %749
  store ptr %750, ptr %14, align 8, !tbaa !51
  %752 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %750, i64 %190
  store ptr %752, ptr %205, align 8, !tbaa !212
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %750, i8 0, i64 %204, i1 false), !tbaa !8
  %753 = getelementptr i8, ptr %750, i64 %204
  store ptr %753, ptr %206, align 8, !tbaa !49
  %754 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %204) #16
          to label %755 unwind label %761

755:                                              ; preds = %751
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %754, i8 0, i64 %204, i1 false), !tbaa !8
  br label %756

756:                                              ; preds = %755, %748
  %757 = phi ptr [ null, %748 ], [ %754, %755 ]
  %758 = load i32, ptr %189, align 8, !tbaa !342
  switch i32 %758, label %1025 [
    i32 0, label %763
    i32 1, label %829
    i32 2, label %892
    i32 256, label %955
  ]

759:                                              ; preds = %749
  %760 = landingpad { ptr, i32 }
          cleanup
  br label %1039

761:                                              ; preds = %751
  %762 = landingpad { ptr, i32 }
          cleanup
  br label %1034

763:                                              ; preds = %756
  %764 = load ptr, ptr %207, align 8, !tbaa !133
  %765 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %766 unwind label %826

766:                                              ; preds = %763
  %767 = getelementptr inbounds %"class.std::vector.72", ptr %764, i64 %246
  %768 = zext i32 %765 to i64
  %769 = or i64 %196, %768
  %770 = load ptr, ptr %206, align 8, !tbaa !49
  %771 = load ptr, ptr %14, align 8, !tbaa !51
  %772 = ptrtoint ptr %770 to i64
  %773 = ptrtoint ptr %771 to i64
  %774 = sub i64 %772, %773
  %775 = sdiv exact i64 %774, 72
  %776 = shl i64 %775, 32
  %777 = load ptr, ptr %1, align 8, !tbaa !5
  %778 = getelementptr inbounds ptr, ptr %777, i64 5
  %779 = load ptr, ptr %778, align 8
  invoke void %779(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %767, i64 %769, ptr nonnull %14, i64 %776, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 1)
          to label %780 unwind label %826

780:                                              ; preds = %766
  br i1 %197, label %1025, label %781

781:                                              ; preds = %780
  %782 = load ptr, ptr %14, align 8, !tbaa !51
  %783 = load ptr, ptr %208, align 8, !tbaa !130
  %784 = zext i32 %253 to i64
  %785 = getelementptr inbounds %"class.std::vector.67", ptr %783, i64 %784
  %786 = load ptr, ptr %785, align 8, !tbaa !25
  %787 = add i32 %253, 1
  %788 = zext i32 %787 to i64
  %789 = getelementptr inbounds %"class.std::vector.67", ptr %783, i64 %788
  %790 = load ptr, ptr %789, align 8, !tbaa !25
  %791 = add i32 %253, 2
  %792 = zext i32 %791 to i64
  %793 = getelementptr inbounds %"class.std::vector.67", ptr %783, i64 %792
  %794 = load ptr, ptr %793, align 8, !tbaa !25
  br label %795

795:                                              ; preds = %781, %795
  %796 = phi i64 [ 0, %781 ], [ %824, %795 ]
  %797 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %782, i64 %796
  %798 = getelementptr inbounds %"class.dealii::Tensor", ptr %786, i64 %796
  %799 = load double, ptr %797, align 8, !tbaa !8
  store double %799, ptr %798, align 8, !tbaa !8
  %800 = getelementptr inbounds [3 x double], ptr %797, i64 0, i64 1
  %801 = load double, ptr %800, align 8, !tbaa !8
  %802 = getelementptr inbounds [3 x double], ptr %798, i64 0, i64 1
  store double %801, ptr %802, align 8, !tbaa !8
  %803 = getelementptr inbounds [3 x double], ptr %797, i64 0, i64 2
  %804 = load double, ptr %803, align 8, !tbaa !8
  %805 = getelementptr inbounds [3 x double], ptr %798, i64 0, i64 2
  store double %804, ptr %805, align 8, !tbaa !8
  %806 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 1
  %807 = getelementptr inbounds %"class.dealii::Tensor", ptr %790, i64 %796
  %808 = load double, ptr %806, align 8, !tbaa !8
  store double %808, ptr %807, align 8, !tbaa !8
  %809 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 1, i32 0, i64 1
  %810 = load double, ptr %809, align 8, !tbaa !8
  %811 = getelementptr inbounds [3 x double], ptr %807, i64 0, i64 1
  store double %810, ptr %811, align 8, !tbaa !8
  %812 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 1, i32 0, i64 2
  %813 = load double, ptr %812, align 8, !tbaa !8
  %814 = getelementptr inbounds [3 x double], ptr %807, i64 0, i64 2
  store double %813, ptr %814, align 8, !tbaa !8
  %815 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 2
  %816 = getelementptr inbounds %"class.dealii::Tensor", ptr %794, i64 %796
  %817 = load double, ptr %815, align 8, !tbaa !8
  store double %817, ptr %816, align 8, !tbaa !8
  %818 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 2, i32 0, i64 1
  %819 = load double, ptr %818, align 8, !tbaa !8
  %820 = getelementptr inbounds [3 x double], ptr %816, i64 0, i64 1
  store double %819, ptr %820, align 8, !tbaa !8
  %821 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 2, i32 0, i64 2
  %822 = load double, ptr %821, align 8, !tbaa !8
  %823 = getelementptr inbounds [3 x double], ptr %816, i64 0, i64 2
  store double %822, ptr %823, align 8, !tbaa !8
  %824 = add nuw nsw i64 %796, 1
  %825 = icmp eq i64 %824, %214
  br i1 %825, label %1025, label %795

826:                                              ; preds = %958, %955, %895, %892, %832, %829, %766, %763
  %827 = landingpad { ptr, i32 }
          cleanup
  %828 = icmp eq ptr %757, null
  br i1 %828, label %1034, label %1033

829:                                              ; preds = %756
  %830 = load ptr, ptr %207, align 8, !tbaa !133
  %831 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %832 unwind label %826

832:                                              ; preds = %829
  %833 = getelementptr inbounds %"class.std::vector.72", ptr %830, i64 %246
  %834 = zext i32 %831 to i64
  %835 = or i64 %196, %834
  %836 = load ptr, ptr %206, align 8, !tbaa !49
  %837 = load ptr, ptr %14, align 8, !tbaa !51
  %838 = ptrtoint ptr %836 to i64
  %839 = ptrtoint ptr %837 to i64
  %840 = sub i64 %838, %839
  %841 = sdiv exact i64 %840, 72
  %842 = shl i64 %841, 32
  %843 = load ptr, ptr %1, align 8, !tbaa !5
  %844 = getelementptr inbounds ptr, ptr %843, i64 5
  %845 = load ptr, ptr %844, align 8
  invoke void %845(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %833, i64 %835, ptr nonnull %14, i64 %842, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 3)
          to label %846 unwind label %826

846:                                              ; preds = %832
  br i1 %197, label %1025, label %847

847:                                              ; preds = %846
  %848 = load ptr, ptr %14, align 8, !tbaa !51
  %849 = load ptr, ptr %208, align 8, !tbaa !130
  %850 = zext i32 %253 to i64
  %851 = getelementptr inbounds %"class.std::vector.67", ptr %849, i64 %850
  %852 = load ptr, ptr %851, align 8, !tbaa !25
  %853 = add i32 %253, 1
  %854 = zext i32 %853 to i64
  %855 = getelementptr inbounds %"class.std::vector.67", ptr %849, i64 %854
  %856 = load ptr, ptr %855, align 8, !tbaa !25
  %857 = add i32 %253, 2
  %858 = zext i32 %857 to i64
  %859 = getelementptr inbounds %"class.std::vector.67", ptr %849, i64 %858
  %860 = load ptr, ptr %859, align 8, !tbaa !25
  br label %861

861:                                              ; preds = %847, %861
  %862 = phi i64 [ 0, %847 ], [ %890, %861 ]
  %863 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %848, i64 %862
  %864 = getelementptr inbounds %"class.dealii::Tensor", ptr %852, i64 %862
  %865 = load double, ptr %863, align 8, !tbaa !8
  store double %865, ptr %864, align 8, !tbaa !8
  %866 = getelementptr inbounds [3 x double], ptr %863, i64 0, i64 1
  %867 = load double, ptr %866, align 8, !tbaa !8
  %868 = getelementptr inbounds [3 x double], ptr %864, i64 0, i64 1
  store double %867, ptr %868, align 8, !tbaa !8
  %869 = getelementptr inbounds [3 x double], ptr %863, i64 0, i64 2
  %870 = load double, ptr %869, align 8, !tbaa !8
  %871 = getelementptr inbounds [3 x double], ptr %864, i64 0, i64 2
  store double %870, ptr %871, align 8, !tbaa !8
  %872 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 1
  %873 = getelementptr inbounds %"class.dealii::Tensor", ptr %856, i64 %862
  %874 = load double, ptr %872, align 8, !tbaa !8
  store double %874, ptr %873, align 8, !tbaa !8
  %875 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 1, i32 0, i64 1
  %876 = load double, ptr %875, align 8, !tbaa !8
  %877 = getelementptr inbounds [3 x double], ptr %873, i64 0, i64 1
  store double %876, ptr %877, align 8, !tbaa !8
  %878 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 1, i32 0, i64 2
  %879 = load double, ptr %878, align 8, !tbaa !8
  %880 = getelementptr inbounds [3 x double], ptr %873, i64 0, i64 2
  store double %879, ptr %880, align 8, !tbaa !8
  %881 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 2
  %882 = getelementptr inbounds %"class.dealii::Tensor", ptr %860, i64 %862
  %883 = load double, ptr %881, align 8, !tbaa !8
  store double %883, ptr %882, align 8, !tbaa !8
  %884 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 2, i32 0, i64 1
  %885 = load double, ptr %884, align 8, !tbaa !8
  %886 = getelementptr inbounds [3 x double], ptr %882, i64 0, i64 1
  store double %885, ptr %886, align 8, !tbaa !8
  %887 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 2, i32 0, i64 2
  %888 = load double, ptr %887, align 8, !tbaa !8
  %889 = getelementptr inbounds [3 x double], ptr %882, i64 0, i64 2
  store double %888, ptr %889, align 8, !tbaa !8
  %890 = add nuw nsw i64 %862, 1
  %891 = icmp eq i64 %890, %213
  br i1 %891, label %1025, label %861

892:                                              ; preds = %756
  %893 = load ptr, ptr %207, align 8, !tbaa !133
  %894 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %895 unwind label %826

895:                                              ; preds = %892
  %896 = getelementptr inbounds %"class.std::vector.72", ptr %893, i64 %246
  %897 = zext i32 %894 to i64
  %898 = or i64 %196, %897
  %899 = load ptr, ptr %206, align 8, !tbaa !49
  %900 = load ptr, ptr %14, align 8, !tbaa !51
  %901 = ptrtoint ptr %899 to i64
  %902 = ptrtoint ptr %900 to i64
  %903 = sub i64 %901, %902
  %904 = sdiv exact i64 %903, 72
  %905 = shl i64 %904, 32
  %906 = load ptr, ptr %1, align 8, !tbaa !5
  %907 = getelementptr inbounds ptr, ptr %906, i64 5
  %908 = load ptr, ptr %907, align 8
  invoke void %908(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %896, i64 %898, ptr nonnull %14, i64 %905, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 4)
          to label %909 unwind label %826

909:                                              ; preds = %895
  br i1 %197, label %1025, label %910

910:                                              ; preds = %909
  %911 = load ptr, ptr %14, align 8, !tbaa !51
  %912 = load ptr, ptr %208, align 8, !tbaa !130
  %913 = zext i32 %253 to i64
  %914 = getelementptr inbounds %"class.std::vector.67", ptr %912, i64 %913
  %915 = load ptr, ptr %914, align 8, !tbaa !25
  %916 = add i32 %253, 1
  %917 = zext i32 %916 to i64
  %918 = getelementptr inbounds %"class.std::vector.67", ptr %912, i64 %917
  %919 = load ptr, ptr %918, align 8, !tbaa !25
  %920 = add i32 %253, 2
  %921 = zext i32 %920 to i64
  %922 = getelementptr inbounds %"class.std::vector.67", ptr %912, i64 %921
  %923 = load ptr, ptr %922, align 8, !tbaa !25
  br label %924

924:                                              ; preds = %910, %924
  %925 = phi i64 [ 0, %910 ], [ %953, %924 ]
  %926 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %911, i64 %925
  %927 = getelementptr inbounds %"class.dealii::Tensor", ptr %915, i64 %925
  %928 = load double, ptr %926, align 8, !tbaa !8
  store double %928, ptr %927, align 8, !tbaa !8
  %929 = getelementptr inbounds [3 x double], ptr %926, i64 0, i64 1
  %930 = load double, ptr %929, align 8, !tbaa !8
  %931 = getelementptr inbounds [3 x double], ptr %927, i64 0, i64 1
  store double %930, ptr %931, align 8, !tbaa !8
  %932 = getelementptr inbounds [3 x double], ptr %926, i64 0, i64 2
  %933 = load double, ptr %932, align 8, !tbaa !8
  %934 = getelementptr inbounds [3 x double], ptr %927, i64 0, i64 2
  store double %933, ptr %934, align 8, !tbaa !8
  %935 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 1
  %936 = getelementptr inbounds %"class.dealii::Tensor", ptr %919, i64 %925
  %937 = load double, ptr %935, align 8, !tbaa !8
  store double %937, ptr %936, align 8, !tbaa !8
  %938 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 1, i32 0, i64 1
  %939 = load double, ptr %938, align 8, !tbaa !8
  %940 = getelementptr inbounds [3 x double], ptr %936, i64 0, i64 1
  store double %939, ptr %940, align 8, !tbaa !8
  %941 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 1, i32 0, i64 2
  %942 = load double, ptr %941, align 8, !tbaa !8
  %943 = getelementptr inbounds [3 x double], ptr %936, i64 0, i64 2
  store double %942, ptr %943, align 8, !tbaa !8
  %944 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 2
  %945 = getelementptr inbounds %"class.dealii::Tensor", ptr %923, i64 %925
  %946 = load double, ptr %944, align 8, !tbaa !8
  store double %946, ptr %945, align 8, !tbaa !8
  %947 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 2, i32 0, i64 1
  %948 = load double, ptr %947, align 8, !tbaa !8
  %949 = getelementptr inbounds [3 x double], ptr %945, i64 0, i64 1
  store double %948, ptr %949, align 8, !tbaa !8
  %950 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 2, i32 0, i64 2
  %951 = load double, ptr %950, align 8, !tbaa !8
  %952 = getelementptr inbounds [3 x double], ptr %945, i64 0, i64 2
  store double %951, ptr %952, align 8, !tbaa !8
  %953 = add nuw nsw i64 %925, 1
  %954 = icmp eq i64 %953, %212
  br i1 %954, label %1025, label %924

955:                                              ; preds = %756
  %956 = load ptr, ptr %207, align 8, !tbaa !133
  %957 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %958 unwind label %826

958:                                              ; preds = %955
  %959 = getelementptr inbounds %"class.std::vector.72", ptr %956, i64 %246
  %960 = zext i32 %957 to i64
  %961 = or i64 %196, %960
  %962 = load ptr, ptr %206, align 8, !tbaa !49
  %963 = load ptr, ptr %14, align 8, !tbaa !51
  %964 = ptrtoint ptr %962 to i64
  %965 = ptrtoint ptr %963 to i64
  %966 = sub i64 %964, %965
  %967 = sdiv exact i64 %966, 72
  %968 = shl i64 %967, 32
  %969 = load ptr, ptr %1, align 8, !tbaa !5
  %970 = getelementptr inbounds ptr, ptr %969, i64 5
  %971 = load ptr, ptr %970, align 8
  invoke void %971(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %959, i64 %961, ptr nonnull %14, i64 %968, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 256)
          to label %972 unwind label %826

972:                                              ; preds = %958
  br i1 %197, label %1025, label %973

973:                                              ; preds = %972
  %974 = getelementptr inbounds double, ptr %131, i64 %246
  %975 = load ptr, ptr %14, align 8, !tbaa !51
  %976 = load ptr, ptr %208, align 8, !tbaa !130
  %977 = zext i32 %253 to i64
  %978 = getelementptr inbounds %"class.std::vector.67", ptr %976, i64 %977
  %979 = load ptr, ptr %978, align 8, !tbaa !25
  %980 = add i32 %253, 1
  %981 = zext i32 %980 to i64
  %982 = getelementptr inbounds %"class.std::vector.67", ptr %976, i64 %981
  %983 = load ptr, ptr %982, align 8, !tbaa !25
  %984 = add i32 %253, 2
  %985 = zext i32 %984 to i64
  %986 = getelementptr inbounds %"class.std::vector.67", ptr %976, i64 %985
  %987 = load ptr, ptr %986, align 8, !tbaa !25
  br label %988

988:                                              ; preds = %973, %988
  %989 = phi i64 [ 0, %973 ], [ %1023, %988 ]
  %990 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %975, i64 %989
  %991 = load double, ptr %974, align 8, !tbaa !8
  %992 = getelementptr inbounds [3 x double], ptr %990, i64 0, i64 2
  %993 = load double, ptr %992, align 8, !tbaa !8, !noalias !500
  %994 = fmul double %991, %993
  %995 = getelementptr inbounds %"class.dealii::Tensor", ptr %979, i64 %989
  %996 = load <2 x double>, ptr %990, align 8, !tbaa !8, !noalias !500
  %997 = insertelement <2 x double> poison, double %991, i64 0
  %998 = shufflevector <2 x double> %997, <2 x double> poison, <2 x i32> zeroinitializer
  %999 = fmul <2 x double> %998, %996
  store <2 x double> %999, ptr %995, align 8, !tbaa !8
  %1000 = getelementptr inbounds [3 x double], ptr %995, i64 0, i64 2
  store double %994, ptr %1000, align 8, !tbaa !8
  %1001 = load double, ptr %974, align 8, !tbaa !8
  %1002 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %990, i64 0, i64 1
  %1003 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %990, i64 0, i64 1, i32 0, i64 2
  %1004 = load double, ptr %1003, align 8, !tbaa !8, !noalias !500
  %1005 = fmul double %1001, %1004
  %1006 = getelementptr inbounds %"class.dealii::Tensor", ptr %983, i64 %989
  %1007 = load <2 x double>, ptr %1002, align 8, !tbaa !8, !noalias !500
  %1008 = insertelement <2 x double> poison, double %1001, i64 0
  %1009 = shufflevector <2 x double> %1008, <2 x double> poison, <2 x i32> zeroinitializer
  %1010 = fmul <2 x double> %1009, %1007
  store <2 x double> %1010, ptr %1006, align 8, !tbaa !8
  %1011 = getelementptr inbounds [3 x double], ptr %1006, i64 0, i64 2
  store double %1005, ptr %1011, align 8, !tbaa !8
  %1012 = load double, ptr %974, align 8, !tbaa !8
  %1013 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %990, i64 0, i64 2
  %1014 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %990, i64 0, i64 2, i32 0, i64 2
  %1015 = load double, ptr %1014, align 8, !tbaa !8, !noalias !500
  %1016 = fmul double %1012, %1015
  %1017 = getelementptr inbounds %"class.dealii::Tensor", ptr %987, i64 %989
  %1018 = load <2 x double>, ptr %1013, align 8, !tbaa !8, !noalias !500
  %1019 = insertelement <2 x double> poison, double %1012, i64 0
  %1020 = shufflevector <2 x double> %1019, <2 x double> poison, <2 x i32> zeroinitializer
  %1021 = fmul <2 x double> %1020, %1018
  store <2 x double> %1021, ptr %1017, align 8, !tbaa !8
  %1022 = getelementptr inbounds [3 x double], ptr %1017, i64 0, i64 2
  store double %1016, ptr %1022, align 8, !tbaa !8
  %1023 = add nuw nsw i64 %989, 1
  %1024 = icmp eq i64 %1023, %211
  br i1 %1024, label %1025, label %988

1025:                                             ; preds = %988, %924, %861, %795, %972, %909, %846, %780, %756
  %1026 = icmp eq ptr %757, null
  br i1 %1026, label %1028, label %1027

1027:                                             ; preds = %1025
  call void @_ZdlPv(ptr noundef nonnull %757) #17
  br label %1028

1028:                                             ; preds = %1027, %1025
  %1029 = load ptr, ptr %14, align 8, !tbaa !51
  %1030 = icmp eq ptr %1029, null
  br i1 %1030, label %1032, label %1031

1031:                                             ; preds = %1028
  call void @_ZdlPv(ptr noundef nonnull %1029) #17
  br label %1032

1032:                                             ; preds = %1031, %1028
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #15
  br label %1041

1033:                                             ; preds = %826
  call void @_ZdlPv(ptr noundef nonnull %757) #17
  br label %1034

1034:                                             ; preds = %1033, %826, %761
  %1035 = phi { ptr, i32 } [ %762, %761 ], [ %827, %826 ], [ %827, %1033 ]
  %1036 = load ptr, ptr %14, align 8, !tbaa !51
  %1037 = icmp eq ptr %1036, null
  br i1 %1037, label %1039, label %1038

1038:                                             ; preds = %1034
  call void @_ZdlPv(ptr noundef nonnull %1036) #17
  br label %1039

1039:                                             ; preds = %1038, %1034, %759
  %1040 = phi { ptr, i32 } [ %760, %759 ], [ %1035, %1034 ], [ %1035, %1038 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #15
  br label %1056

1041:                                             ; preds = %1032, %746
  %1042 = add nuw nsw i64 %246, 1
  %1043 = load i32, ptr %125, align 8, !tbaa !129
  %1044 = zext i32 %1043 to i64
  %1045 = icmp ult i64 %1042, %1044
  br i1 %1045, label %245, label %241

1046:                                             ; preds = %241
  %1047 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %1048 unwind label %1053

1048:                                             ; preds = %1046
  invoke void @_ZNK6dealii13FiniteElementILi3ELi3EE11compute_2ndERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRNS3_16InternalDataBaseERNS1_16InternalDataBaseERNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(728) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %1047, ptr noundef nonnull align 8 dereferenceable(185) %6, ptr noundef nonnull align 8 dereferenceable(216) %7, ptr noundef nonnull align 8 dereferenceable(436) %8)
          to label %1049 unwind label %1053

1049:                                             ; preds = %1048, %241
  %1050 = icmp eq ptr %242, null
  br i1 %1050, label %1052, label %1051

1051:                                             ; preds = %1049
  call void @_ZdlPv(ptr noundef nonnull %242) #17
  br label %1052

1052:                                             ; preds = %1049, %1051
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #15
  ret void

1053:                                             ; preds = %1046, %1048
  %1054 = landingpad { ptr, i32 }
          cleanup
  %1055 = icmp eq ptr %242, null
  br i1 %1055, label %1059, label %1056

1056:                                             ; preds = %309, %511, %744, %1039, %1053
  %1057 = phi { ptr, i32 } [ %1054, %1053 ], [ %310, %309 ], [ %512, %511 ], [ %745, %744 ], [ %1040, %1039 ]
  %1058 = phi ptr [ %242, %1053 ], [ %131, %309 ], [ %131, %511 ], [ %131, %744 ], [ %131, %1039 ]
  call void @_ZdlPv(ptr noundef nonnull %1058) #17
  br label %1059

1059:                                             ; preds = %1056, %1053
  %1060 = phi { ptr, i32 } [ %1057, %1056 ], [ %1054, %1053 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #15
  resume { ptr, i32 } %1060
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEC2EjRKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS8_ISA_SaISA_EE(ptr noundef nonnull align 8 dereferenceable(1112) %0, i32 noundef %1, ptr noundef nonnull align 4 dereferenceable(60) %2, ptr noundef nonnull align 8 dereferenceable(40) %3, ptr noundef nonnull align 8 dereferenceable(24) %4) unnamed_addr #0 comdat($_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEC5EjRKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS8_ISA_SaISA_EE) align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN6dealii13FiniteElementILi3ELi3EEC2ERKNS_17FiniteElementDataILi3EEERKSt6vectorIbSaIbEERKS6_IS8_SaIS8_EE(ptr noundef nonnull align 8 dereferenceable(728) %0, ptr noundef nonnull align 4 dereferenceable(60) %2, ptr noundef nonnull align 8 dereferenceable(40) %3, ptr noundef nonnull align 8 dereferenceable(24) %4)
  store ptr getelementptr inbounds ({ [38 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %6 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 2
  invoke void @_ZN6dealii14PolynomialsBDMILi3EEC1Ej(ptr noundef nonnull align 8 dereferenceable(184) %6, i32 noundef %1)
          to label %7 unwind label %35

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 3
  invoke void @_ZN6dealii10FullMatrixIdEC1Ej(ptr noundef nonnull align 8 dereferenceable(92) %8, i32 noundef 0)
          to label %9 unwind label %37

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 4, i32 0, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %11, i8 0, i64 88, i1 false)
  store double -1.000000e+00, ptr %10, align 8, !tbaa !8
  %12 = getelementptr inbounds i8, ptr %0, i64 116
  %13 = load i32, ptr %12, align 4, !tbaa !11
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %0, i64 0, i32 17
  %17 = load ptr, ptr %16, align 8, !tbaa !15
  %18 = zext i32 %13 to i64
  %19 = and i64 %18, 3
  %20 = icmp ult i32 %13, 4
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  %22 = and i64 %18, 4294967292
  br label %39

23:                                               ; preds = %39, %15
  %24 = phi i64 [ 0, %15 ], [ %53, %39 ]
  %25 = icmp eq i64 %19, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %23, %26
  %27 = phi i64 [ %31, %26 ], [ %24, %23 ]
  %28 = phi i64 [ %32, %26 ], [ 0, %23 ]
  %29 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %27, i32 0, i32 1
  %30 = trunc i64 %27 to i32
  store i32 %30, ptr %29, align 4, !tbaa !18
  %31 = add nuw nsw i64 %27, 1
  %32 = add i64 %28, 1
  %33 = icmp eq i64 %32, %19
  br i1 %33, label %34, label %26, !llvm.loop !503

34:                                               ; preds = %23, %26, %9
  ret void

35:                                               ; preds = %5
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %56

37:                                               ; preds = %7
  %38 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii14PolynomialsBDMILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(184) %6)
          to label %56 unwind label %59

39:                                               ; preds = %39, %21
  %40 = phi i64 [ 0, %21 ], [ %53, %39 ]
  %41 = phi i64 [ 0, %21 ], [ %54, %39 ]
  %42 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %40, i32 0, i32 1
  %43 = trunc i64 %40 to i32
  store i32 %43, ptr %42, align 4, !tbaa !18
  %44 = or i64 %40, 1
  %45 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %44, i32 0, i32 1
  %46 = trunc i64 %44 to i32
  store i32 %46, ptr %45, align 4, !tbaa !18
  %47 = or i64 %40, 2
  %48 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %47, i32 0, i32 1
  %49 = trunc i64 %47 to i32
  store i32 %49, ptr %48, align 4, !tbaa !18
  %50 = or i64 %40, 3
  %51 = getelementptr inbounds %"struct.std::pair", ptr %17, i64 %50, i32 0, i32 1
  %52 = trunc i64 %50 to i32
  store i32 %52, ptr %51, align 4, !tbaa !18
  %53 = add nuw nsw i64 %40, 4
  %54 = add i64 %41, 4
  %55 = icmp eq i64 %54, %22
  br i1 %55, label %23, label %39

56:                                               ; preds = %37, %35
  %57 = phi { ptr, i32 } [ %38, %37 ], [ %36, %35 ]
  invoke void @_ZN6dealii13FiniteElementILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(728) %0)
          to label %58 unwind label %59

58:                                               ; preds = %56
  resume { ptr, i32 } %57

59:                                               ; preds = %56, %37
  %60 = landingpad { ptr, i32 }
          catch ptr null
  %61 = extractvalue { ptr, i32 } %60, 0
  tail call void @__clang_call_terminate(ptr %61) #14
  unreachable
}

declare void @_ZN6dealii14PolynomialsBDMILi3EEC1Ej(ptr noundef nonnull align 8 dereferenceable(184), i32 noundef) unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii14PolynomialsBDMILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(184) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.dealii::PolynomialsBDM", ptr %0, i64 0, i32 5
  %3 = load ptr, ptr %2, align 8, !tbaa !51
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #17
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::PolynomialsBDM", ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %7, align 8, !tbaa !25
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #17
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.dealii::PolynomialsBDM", ptr %0, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !128
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %13) #17
  br label %16

16:                                               ; preds = %15, %11
  %17 = getelementptr inbounds %"class.dealii::PolynomialsBDM", ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !504
  %19 = getelementptr inbounds %"class.dealii::PolynomialsBDM", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !506
  %21 = icmp eq ptr %18, %20
  br i1 %21, label %31, label %22

22:                                               ; preds = %16, %26
  %23 = phi ptr [ %27, %26 ], [ %18, %16 ]
  %24 = load ptr, ptr %23, align 8, !tbaa !5
  %25 = load ptr, ptr %24, align 8
  invoke void %25(ptr noundef nonnull align 8 dereferenceable(96) %23)
          to label %26 unwind label %35

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.dealii::Polynomials::Polynomial", ptr %23, i64 1
  %28 = icmp eq ptr %27, %20
  br i1 %28, label %29, label %22

29:                                               ; preds = %26
  %30 = load ptr, ptr %17, align 8, !tbaa !504
  br label %31

31:                                               ; preds = %29, %16
  %32 = phi ptr [ %30, %29 ], [ %18, %16 ]
  %33 = icmp eq ptr %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %31
  tail call void @_ZdlPv(ptr noundef nonnull %32) #17
  br label %40

35:                                               ; preds = %22
  %36 = landingpad { ptr, i32 }
          cleanup
  %37 = load ptr, ptr %17, align 8, !tbaa !504
  %38 = icmp eq ptr %37, null
  br i1 %38, label %76, label %39

39:                                               ; preds = %35
  tail call void @_ZdlPv(ptr noundef nonnull %37) #17
  br label %76

40:                                               ; preds = %34, %31
  %41 = getelementptr inbounds %"class.dealii::PolynomialSpace", ptr %0, i64 0, i32 3
  %42 = load ptr, ptr %41, align 8, !tbaa !154
  %43 = icmp eq ptr %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  tail call void @_ZdlPv(ptr noundef nonnull %42) #17
  br label %45

45:                                               ; preds = %44, %40
  %46 = getelementptr inbounds %"class.dealii::PolynomialSpace", ptr %0, i64 0, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !154
  %48 = icmp eq ptr %47, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %45
  tail call void @_ZdlPv(ptr noundef nonnull %47) #17
  br label %50

50:                                               ; preds = %49, %45
  %51 = load ptr, ptr %0, align 8, !tbaa !504
  %52 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Polynomials::Polynomial<double>, std::allocator<dealii::Polynomials::Polynomial<double> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !506
  %54 = icmp eq ptr %51, %53
  br i1 %54, label %64, label %55

55:                                               ; preds = %50, %59
  %56 = phi ptr [ %60, %59 ], [ %51, %50 ]
  %57 = load ptr, ptr %56, align 8, !tbaa !5
  %58 = load ptr, ptr %57, align 8
  invoke void %58(ptr noundef nonnull align 8 dereferenceable(96) %56)
          to label %59 unwind label %68

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.dealii::Polynomials::Polynomial", ptr %56, i64 1
  %61 = icmp eq ptr %60, %53
  br i1 %61, label %62, label %55

62:                                               ; preds = %59
  %63 = load ptr, ptr %0, align 8, !tbaa !504
  br label %64

64:                                               ; preds = %62, %50
  %65 = phi ptr [ %63, %62 ], [ %51, %50 ]
  %66 = icmp eq ptr %65, null
  br i1 %66, label %75, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(ptr noundef nonnull %65) #17
  br label %75

68:                                               ; preds = %55
  %69 = landingpad { ptr, i32 }
          cleanup
  %70 = load ptr, ptr %0, align 8, !tbaa !504
  %71 = icmp eq ptr %70, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %68
  tail call void @_ZdlPv(ptr noundef nonnull %70) #17
  br label %73

73:                                               ; preds = %76, %68, %72
  %74 = phi { ptr, i32 } [ %69, %72 ], [ %69, %68 ], [ %36, %76 ]
  resume { ptr, i32 } %74

75:                                               ; preds = %64, %67
  ret void

76:                                               ; preds = %39, %35
  invoke void @_ZN6dealii15PolynomialSpaceILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0)
          to label %73 unwind label %77

77:                                               ; preds = %76
  %78 = landingpad { ptr, i32 }
          catch ptr null
  %79 = extractvalue { ptr, i32 } %78, 0
  tail call void @__clang_call_terminate(ptr %79) #14
  unreachable
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE11shape_valueEjRKNS_5PointILi3EEE(ptr noundef nonnull align 8 dereferenceable(1112) %0, i32 noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) unnamed_addr #4 comdat align 2 {
  ret double 0.000000e+00
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef double @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE21shape_value_componentEjRKNS_5PointILi3EEEj(ptr noundef nonnull align 8 dereferenceable(1112) %0, i32 noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2, i32 noundef %3) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.dealii::Tensor", align 8
  %6 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 4
  %7 = load double, ptr %6, align 8, !tbaa !8
  %8 = load double, ptr %2, align 8, !tbaa !8
  %9 = fcmp une double %7, %8
  br i1 %9, label %28, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 4, i32 0, i32 0, i64 1
  %12 = load double, ptr %11, align 8, !tbaa !8
  %13 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 1
  %14 = load double, ptr %13, align 8, !tbaa !8
  %15 = fcmp une double %12, %14
  br i1 %15, label %28, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 4, i32 0, i32 0, i64 2
  %18 = load double, ptr %17, align 8, !tbaa !8
  %19 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 2
  %20 = load double, ptr %19, align 8, !tbaa !8
  %21 = fcmp une double %18, %20
  br i1 %21, label %28, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 5
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !23
  %26 = load ptr, ptr %23, align 8, !tbaa !25
  %27 = icmp eq ptr %25, %26
  br i1 %27, label %28, label %59

28:                                               ; preds = %16, %10, %4, %22
  store double %8, ptr %6, align 8, !tbaa !8
  %29 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 1
  %30 = load double, ptr %29, align 8, !tbaa !8
  %31 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 4, i32 0, i32 0, i64 1
  store double %30, ptr %31, align 8, !tbaa !8
  %32 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 2
  %33 = load double, ptr %32, align 8, !tbaa !8
  %34 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 4, i32 0, i32 0, i64 2
  store double %33, ptr %34, align 8, !tbaa !8
  %35 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 5
  %36 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 2
  %37 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 2, i32 2
  %38 = load i32, ptr %37, align 8, !tbaa !507
  %39 = zext i32 %38 to i64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false), !tbaa !8
  %40 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !33
  %42 = load ptr, ptr %35, align 8, !tbaa !25
  %43 = ptrtoint ptr %41 to i64
  %44 = ptrtoint ptr %42 to i64
  %45 = sub i64 %43, %44
  %46 = sdiv exact i64 %45, 24
  %47 = icmp ult i64 %46, %39
  br i1 %47, label %48, label %50

48:                                               ; preds = %28
  %49 = sub nsw i64 %39, %46
  call void @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr %41, i64 noundef %49, ptr noundef nonnull align 8 dereferenceable(24) %5)
  br label %56

50:                                               ; preds = %28
  %51 = icmp ugt i64 %46, %39
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.dealii::Tensor", ptr %42, i64 %39
  %54 = icmp eq ptr %41, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %52
  store ptr %53, ptr %40, align 8, !tbaa !23
  br label %56

56:                                               ; preds = %48, %50, %52, %55
  %57 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 6
  %58 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 7
  call void @_ZNK6dealii14PolynomialsBDMILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(184) %36, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %57, ptr noundef nonnull align 8 dereferenceable(24) %58)
  br label %59

59:                                               ; preds = %56, %22
  %60 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %61 = load i32, ptr %60, align 8, !tbaa !34
  %62 = icmp eq i32 %61, 0
  %63 = zext i32 %3 to i64
  br i1 %62, label %75, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !35
  %67 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 5
  %68 = load ptr, ptr %67, align 8, !tbaa !25
  %69 = getelementptr inbounds [3 x double], ptr %68, i64 0, i64 %63
  %70 = zext i32 %61 to i64
  %71 = and i64 %70, 1
  %72 = icmp eq i32 %61, 1
  br i1 %72, label %108, label %73

73:                                               ; preds = %64
  %74 = and i64 %70, 4294967294
  br label %82

75:                                               ; preds = %59
  %76 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 5
  %77 = zext i32 %1 to i64
  %78 = load ptr, ptr %76, align 8, !tbaa !25
  %79 = getelementptr inbounds %"class.dealii::Tensor", ptr %78, i64 %77
  %80 = getelementptr inbounds [3 x double], ptr %79, i64 0, i64 %63
  %81 = load double, ptr %80, align 8, !tbaa !8
  br label %123

82:                                               ; preds = %82, %73
  %83 = phi i64 [ 0, %73 ], [ %105, %82 ]
  %84 = phi double [ 0.000000e+00, %73 ], [ %104, %82 ]
  %85 = phi i64 [ 0, %73 ], [ %106, %82 ]
  %86 = trunc i64 %83 to i32
  %87 = mul i32 %61, %86
  %88 = add i32 %87, %1
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds double, ptr %66, i64 %89
  %91 = load double, ptr %90, align 8, !tbaa !8
  %92 = getelementptr inbounds %"class.dealii::Tensor", ptr %69, i64 %83
  %93 = load double, ptr %92, align 8, !tbaa !8
  %94 = call double @llvm.fmuladd.f64(double %91, double %93, double %84)
  %95 = or i64 %83, 1
  %96 = trunc i64 %95 to i32
  %97 = mul i32 %61, %96
  %98 = add i32 %97, %1
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds double, ptr %66, i64 %99
  %101 = load double, ptr %100, align 8, !tbaa !8
  %102 = getelementptr inbounds %"class.dealii::Tensor", ptr %69, i64 %95
  %103 = load double, ptr %102, align 8, !tbaa !8
  %104 = call double @llvm.fmuladd.f64(double %101, double %103, double %94)
  %105 = add nuw nsw i64 %83, 2
  %106 = add i64 %85, 2
  %107 = icmp eq i64 %106, %74
  br i1 %107, label %108, label %82

108:                                              ; preds = %82, %64
  %109 = phi double [ undef, %64 ], [ %104, %82 ]
  %110 = phi i64 [ 0, %64 ], [ %105, %82 ]
  %111 = phi double [ 0.000000e+00, %64 ], [ %104, %82 ]
  %112 = icmp eq i64 %71, 0
  br i1 %112, label %123, label %113

113:                                              ; preds = %108
  %114 = trunc i64 %110 to i32
  %115 = mul i32 %61, %114
  %116 = add i32 %115, %1
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds double, ptr %66, i64 %117
  %119 = load double, ptr %118, align 8, !tbaa !8
  %120 = getelementptr inbounds %"class.dealii::Tensor", ptr %69, i64 %110
  %121 = load double, ptr %120, align 8, !tbaa !8
  %122 = call double @llvm.fmuladd.f64(double %119, double %121, double %111)
  br label %123

123:                                              ; preds = %113, %108, %75
  %124 = phi double [ %81, %75 ], [ %109, %108 ], [ %122, %113 ]
  ret double %124
}

declare void @_ZNK6dealii14PolynomialsBDMILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(184), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 8 dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE10shape_gradEjRKNS_5PointILi3EEE(ptr noalias sret(%"class.dealii::Tensor") align 8 %0, ptr noundef nonnull align 8 dereferenceable(1112) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false), !tbaa !8
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE20shape_grad_componentEjRKNS_5PointILi3EEEj(ptr noalias sret(%"class.dealii::Tensor") align 8 %0, ptr noundef nonnull align 8 dereferenceable(1112) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %4) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.dealii::Tensor.84", align 8
  %7 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 4
  %8 = load double, ptr %7, align 8, !tbaa !8
  %9 = load double, ptr %3, align 8, !tbaa !8
  %10 = fcmp une double %8, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 1
  %13 = load double, ptr %12, align 8, !tbaa !8
  %14 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %15 = load double, ptr %14, align 8, !tbaa !8
  %16 = fcmp une double %13, %15
  br i1 %16, label %29, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 2
  %19 = load double, ptr %18, align 8, !tbaa !8
  %20 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %21 = load double, ptr %20, align 8, !tbaa !8
  %22 = fcmp une double %19, %21
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 6
  %25 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !49
  %27 = load ptr, ptr %24, align 8, !tbaa !51
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %29, label %60

29:                                               ; preds = %17, %11, %5, %23
  store double %9, ptr %7, align 8, !tbaa !8
  %30 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %31 = load double, ptr %30, align 8, !tbaa !8
  %32 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 1
  store double %31, ptr %32, align 8, !tbaa !8
  %33 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %34 = load double, ptr %33, align 8, !tbaa !8
  %35 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 2
  store double %34, ptr %35, align 8, !tbaa !8
  %36 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 6
  %37 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 2
  %38 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 2, i32 2
  %39 = load i32, ptr %38, align 8, !tbaa !507
  %40 = zext i32 %39 to i64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %6, i8 0, i64 72, i1 false), !tbaa !8
  %41 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !33
  %43 = load ptr, ptr %36, align 8, !tbaa !51
  %44 = ptrtoint ptr %42 to i64
  %45 = ptrtoint ptr %43 to i64
  %46 = sub i64 %44, %45
  %47 = sdiv exact i64 %46, 72
  %48 = icmp ult i64 %47, %40
  br i1 %48, label %49, label %51

49:                                               ; preds = %29
  %50 = sub nsw i64 %40, %47
  call void @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %36, ptr %42, i64 noundef %50, ptr noundef nonnull align 8 dereferenceable(72) %6)
  br label %57

51:                                               ; preds = %29
  %52 = icmp ugt i64 %47, %40
  br i1 %52, label %53, label %57

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %43, i64 %40
  %55 = icmp eq ptr %42, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  store ptr %54, ptr %41, align 8, !tbaa !49
  br label %57

57:                                               ; preds = %49, %51, %53, %56
  %58 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 5
  %59 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 7
  call void @_ZNK6dealii14PolynomialsBDMILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(184) %37, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %36, ptr noundef nonnull align 8 dereferenceable(24) %59)
  br label %60

60:                                               ; preds = %57, %23
  %61 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %62 = load i32, ptr %61, align 8, !tbaa !34
  %63 = icmp eq i32 %62, 0
  %64 = zext i32 %4 to i64
  br i1 %63, label %76, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !35
  %68 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 6
  %69 = load ptr, ptr %68, align 8, !tbaa !51
  %70 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %69, i64 0, i64 %64
  %71 = zext i32 %62 to i64
  %72 = and i64 %71, 1
  %73 = icmp eq i32 %62, 1
  br i1 %73, label %85, label %74

74:                                               ; preds = %65
  %75 = and i64 %71, 4294967294
  br label %112

76:                                               ; preds = %60
  %77 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 6
  %78 = zext i32 %2 to i64
  %79 = load ptr, ptr %77, align 8, !tbaa !51
  %80 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %79, i64 %78
  %81 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %80, i64 0, i64 %64
  %82 = load <2 x double>, ptr %81, align 8, !tbaa !8
  store <2 x double> %82, ptr %0, align 8, !tbaa !8
  %83 = getelementptr inbounds [3 x double], ptr %81, i64 0, i64 2
  %84 = load double, ptr %83, align 8, !tbaa !8
  br label %153

85:                                               ; preds = %112, %65
  %86 = phi <2 x double> [ undef, %65 ], [ %148, %112 ]
  %87 = phi double [ undef, %65 ], [ %149, %112 ]
  %88 = phi i64 [ 0, %65 ], [ %150, %112 ]
  %89 = phi double [ 0.000000e+00, %65 ], [ %149, %112 ]
  %90 = phi <2 x double> [ zeroinitializer, %65 ], [ %148, %112 ]
  %91 = icmp eq i64 %72, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %85
  %93 = trunc i64 %88 to i32
  %94 = mul i32 %62, %93
  %95 = add i32 %94, %2
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds double, ptr %67, i64 %96
  %98 = load double, ptr %97, align 8, !tbaa !8
  %99 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %70, i64 %88
  %100 = load <2 x double>, ptr %99, align 8, !tbaa !8, !noalias !513
  %101 = insertelement <2 x double> poison, double %98, i64 0
  %102 = shufflevector <2 x double> %101, <2 x double> poison, <2 x i32> zeroinitializer
  %103 = fmul <2 x double> %102, %100
  %104 = getelementptr inbounds [3 x double], ptr %99, i64 0, i64 2
  %105 = load double, ptr %104, align 8, !tbaa !8, !noalias !513
  %106 = fmul double %98, %105
  %107 = fadd <2 x double> %90, %103
  %108 = fadd double %89, %106
  br label %109

109:                                              ; preds = %85, %92
  %110 = phi <2 x double> [ %86, %85 ], [ %107, %92 ]
  %111 = phi double [ %87, %85 ], [ %108, %92 ]
  store <2 x double> %110, ptr %0, align 8, !tbaa !8
  br label %153

112:                                              ; preds = %112, %74
  %113 = phi i64 [ 0, %74 ], [ %150, %112 ]
  %114 = phi double [ 0.000000e+00, %74 ], [ %149, %112 ]
  %115 = phi <2 x double> [ zeroinitializer, %74 ], [ %148, %112 ]
  %116 = phi i64 [ 0, %74 ], [ %151, %112 ]
  %117 = trunc i64 %113 to i32
  %118 = mul i32 %62, %117
  %119 = add i32 %118, %2
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds double, ptr %67, i64 %120
  %122 = load double, ptr %121, align 8, !tbaa !8
  %123 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %70, i64 %113
  %124 = load <2 x double>, ptr %123, align 8, !tbaa !8, !noalias !513
  %125 = insertelement <2 x double> poison, double %122, i64 0
  %126 = shufflevector <2 x double> %125, <2 x double> poison, <2 x i32> zeroinitializer
  %127 = fmul <2 x double> %126, %124
  %128 = getelementptr inbounds [3 x double], ptr %123, i64 0, i64 2
  %129 = load double, ptr %128, align 8, !tbaa !8, !noalias !513
  %130 = fmul double %122, %129
  %131 = fadd <2 x double> %115, %127
  %132 = fadd double %114, %130
  %133 = or i64 %113, 1
  %134 = trunc i64 %133 to i32
  %135 = mul i32 %62, %134
  %136 = add i32 %135, %2
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds double, ptr %67, i64 %137
  %139 = load double, ptr %138, align 8, !tbaa !8
  %140 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %70, i64 %133
  %141 = load <2 x double>, ptr %140, align 8, !tbaa !8, !noalias !513
  %142 = insertelement <2 x double> poison, double %139, i64 0
  %143 = shufflevector <2 x double> %142, <2 x double> poison, <2 x i32> zeroinitializer
  %144 = fmul <2 x double> %143, %141
  %145 = getelementptr inbounds [3 x double], ptr %140, i64 0, i64 2
  %146 = load double, ptr %145, align 8, !tbaa !8, !noalias !513
  %147 = fmul double %139, %146
  %148 = fadd <2 x double> %131, %144
  %149 = fadd double %132, %147
  %150 = add nuw nsw i64 %113, 2
  %151 = add i64 %116, 2
  %152 = icmp eq i64 %151, %75
  br i1 %152, label %85, label %112

153:                                              ; preds = %109, %76
  %154 = phi double [ %111, %109 ], [ %84, %76 ]
  %155 = getelementptr inbounds [3 x double], ptr %0, i64 0, i64 2
  store double %154, ptr %155, align 8, !tbaa !8
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE15shape_grad_gradEjRKNS_5PointILi3EEE(ptr noalias sret(%"class.dealii::Tensor.84") align 8 %0, ptr noundef nonnull align 8 dereferenceable(1112) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, i8 0, i64 72, i1 false), !tbaa !8
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE25shape_grad_grad_componentEjRKNS_5PointILi3EEEj(ptr noalias sret(%"class.dealii::Tensor.84") align 8 %0, ptr noundef nonnull align 8 dereferenceable(1112) %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %4) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.dealii::Tensor.85", align 8
  %7 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 4
  %8 = load double, ptr %7, align 8, !tbaa !8
  %9 = load double, ptr %3, align 8, !tbaa !8
  %10 = fcmp une double %8, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 1
  %13 = load double, ptr %12, align 8, !tbaa !8
  %14 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %15 = load double, ptr %14, align 8, !tbaa !8
  %16 = fcmp une double %13, %15
  br i1 %16, label %29, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 2
  %19 = load double, ptr %18, align 8, !tbaa !8
  %20 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %21 = load double, ptr %20, align 8, !tbaa !8
  %22 = fcmp une double %19, %21
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 7
  %25 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !55
  %27 = load ptr, ptr %24, align 8, !tbaa !57
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %29, label %60

29:                                               ; preds = %17, %11, %5, %23
  store double %9, ptr %7, align 8, !tbaa !8
  %30 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %31 = load double, ptr %30, align 8, !tbaa !8
  %32 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 1
  store double %31, ptr %32, align 8, !tbaa !8
  %33 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %34 = load double, ptr %33, align 8, !tbaa !8
  %35 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 4, i32 0, i32 0, i64 2
  store double %34, ptr %35, align 8, !tbaa !8
  %36 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 7
  %37 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 2
  %38 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 2, i32 2
  %39 = load i32, ptr %38, align 8, !tbaa !507
  %40 = zext i32 %39 to i64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(216) %6, i8 0, i64 216, i1 false), !tbaa !8
  %41 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !33
  %43 = load ptr, ptr %36, align 8, !tbaa !57
  %44 = ptrtoint ptr %42 to i64
  %45 = ptrtoint ptr %43 to i64
  %46 = sub i64 %44, %45
  %47 = sdiv exact i64 %46, 216
  %48 = icmp ult i64 %47, %40
  br i1 %48, label %49, label %51

49:                                               ; preds = %29
  %50 = sub nsw i64 %40, %47
  call void @_ZNSt6vectorIN6dealii6TensorILi3ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %36, ptr %42, i64 noundef %50, ptr noundef nonnull align 8 dereferenceable(216) %6)
  br label %57

51:                                               ; preds = %29
  %52 = icmp ugt i64 %47, %40
  br i1 %52, label %53, label %57

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %43, i64 %40
  %55 = icmp eq ptr %42, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  store ptr %54, ptr %41, align 8, !tbaa !55
  br label %57

57:                                               ; preds = %49, %51, %53, %56
  %58 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 5
  %59 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 6
  call void @_ZNK6dealii14PolynomialsBDMILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(184) %37, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %59, ptr noundef nonnull align 8 dereferenceable(24) %36)
  br label %60

60:                                               ; preds = %57, %23
  %61 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %62 = load i32, ptr %61, align 8, !tbaa !34
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %73, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !35
  %67 = mul i32 %62, %2
  %68 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 7
  %69 = load ptr, ptr %68, align 8, !tbaa !57
  %70 = zext i32 %4 to i64
  %71 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %69, i64 0, i64 %70
  %72 = zext i32 %62 to i64
  br label %88

73:                                               ; preds = %60
  %74 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %1, i64 0, i32 7
  %75 = zext i32 %2 to i64
  %76 = load ptr, ptr %74, align 8, !tbaa !57
  %77 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %76, i64 %75
  %78 = zext i32 %4 to i64
  %79 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %77, i64 0, i64 %78
  %80 = load <4 x double>, ptr %79, align 8, !tbaa !8
  store <4 x double> %80, ptr %0, align 8, !tbaa !8
  %81 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %79, i64 0, i64 1, i32 0, i64 1
  %82 = getelementptr inbounds %"class.dealii::Tensor", ptr %0, i64 1, i32 0, i64 1
  %83 = load <4 x double>, ptr %81, align 8, !tbaa !8
  store <4 x double> %83, ptr %82, align 8, !tbaa !8
  %84 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %79, i64 0, i64 2, i32 0, i64 2
  %85 = load double, ptr %84, align 8, !tbaa !8
  br label %114

86:                                               ; preds = %88
  store <4 x double> %109, ptr %0, align 8, !tbaa !8
  %87 = getelementptr inbounds %"class.dealii::Tensor", ptr %0, i64 1, i32 0, i64 1
  store <4 x double> %110, ptr %87, align 8, !tbaa !8
  br label %114

88:                                               ; preds = %64, %88
  %89 = phi i64 [ 0, %64 ], [ %112, %88 ]
  %90 = phi double [ 0.000000e+00, %64 ], [ %111, %88 ]
  %91 = phi <4 x double> [ zeroinitializer, %64 ], [ %109, %88 ]
  %92 = phi <4 x double> [ zeroinitializer, %64 ], [ %110, %88 ]
  %93 = trunc i64 %89 to i32
  %94 = add i32 %67, %93
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds double, ptr %66, i64 %95
  %97 = load double, ptr %96, align 8, !tbaa !8
  %98 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %71, i64 %89
  %99 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %98, i64 0, i64 1, i32 0, i64 1
  %100 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %98, i64 0, i64 2, i32 0, i64 2
  %101 = load double, ptr %100, align 8, !tbaa !8, !noalias !516
  %102 = load <4 x double>, ptr %98, align 8, !tbaa !8, !noalias !516
  %103 = insertelement <4 x double> poison, double %97, i64 0
  %104 = shufflevector <4 x double> %103, <4 x double> poison, <4 x i32> zeroinitializer
  %105 = fmul <4 x double> %104, %102
  %106 = load <4 x double>, ptr %99, align 8, !tbaa !8, !noalias !516
  %107 = fmul <4 x double> %104, %106
  %108 = fmul double %97, %101
  %109 = fadd <4 x double> %91, %105
  %110 = fadd <4 x double> %92, %107
  %111 = fadd double %90, %108
  %112 = add nuw nsw i64 %89, 1
  %113 = icmp eq i64 %112, %72
  br i1 %113, label %86, label %88

114:                                              ; preds = %86, %73
  %115 = phi double [ %111, %86 ], [ %85, %73 ]
  %116 = getelementptr inbounds %"class.dealii::Tensor", ptr %0, i64 2, i32 0, i64 2
  store double %115, ptr %116, align 8, !tbaa !8
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE15n_base_elementsEv(ptr noundef nonnull align 8 dereferenceable(1112) %0) unnamed_addr #4 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(728) ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12base_elementEj(ptr noundef nonnull align 8 dereferenceable(1112) %0, i32 noundef %1) unnamed_addr #4 comdat align 2 {
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE20element_multiplicityEj(ptr noundef nonnull align 8 dereferenceable(1112) %0, i32 noundef %1) unnamed_addr #4 comdat align 2 {
  ret i32 1
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE11update_onceENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(1112) %0, i32 noundef %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !519
  %5 = icmp eq i32 %4, 0
  %6 = and i32 %1, 1
  %7 = icmp ne i32 %6, 0
  %8 = and i1 %7, %5
  %9 = zext i1 %8 to i32
  ret i32 %9
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef i32 @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE11update_eachENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(1112) %0, i32 noundef %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !519
  %5 = icmp eq i32 %4, 256
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = and i32 %1, 1
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 0, i32 18433
  %10 = and i32 %1, 2
  %11 = icmp eq i32 %10, 0
  %12 = or i32 %9, 19458
  %13 = select i1 %11, i32 %9, i32 %12
  %14 = and i32 %1, 4
  %15 = icmp eq i32 %14, 0
  %16 = or i32 %13, 19460
  %17 = select i1 %15, i32 %13, i32 %16
  br label %18

18:                                               ; preds = %6, %2
  %19 = phi i32 [ 0, %2 ], [ %17, %6 ]
  ret i32 %19
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local noundef ptr @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE8get_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE(ptr noundef nonnull align 8 dereferenceable(1112) %0, i32 noundef %1, ptr noundef nonnull align 8 dereferenceable(72) %2, ptr noundef nonnull align 8 dereferenceable(128) %3) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.std::vector.67", align 8
  %6 = alloca %"class.std::vector.72", align 8
  %7 = alloca %"class.std::vector.77", align 8
  %8 = alloca %"class.dealii::Tensor", align 8
  %9 = alloca %"class.std::vector.67", align 8
  %10 = alloca %"class.dealii::Tensor", align 8
  %11 = alloca %"class.dealii::Tensor.84", align 8
  %12 = alloca %"class.std::vector.72", align 8
  %13 = alloca %"class.dealii::Tensor.84", align 8
  %14 = tail call noalias noundef nonnull dereferenceable(264) ptr @_Znwm(i64 noundef 264) #16
  invoke void @_ZN6dealii7MappingILi3ELi3EE16InternalDataBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(185) %14)
          to label %15 unwind label %86

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.dealii::FiniteElement<3, 3>::InternalDataBase", ptr %14, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataE, i64 0, inrange i32 0, i64 2), ptr %14, align 8, !tbaa !5
  %17 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %14, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %17, i8 0, i64 48, i1 false)
  %18 = load ptr, ptr %0, align 8, !tbaa !5
  %19 = getelementptr inbounds ptr, ptr %18, i64 27
  %20 = load ptr, ptr %19, align 8
  %21 = tail call noundef i32 %20(ptr noundef nonnull align 8 dereferenceable(1112) %0, i32 noundef %1)
  %22 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %14, i64 0, i32 2
  store i32 %21, ptr %22, align 4, !tbaa !118
  %23 = load ptr, ptr %0, align 8, !tbaa !5
  %24 = getelementptr inbounds ptr, ptr %23, i64 28
  %25 = load ptr, ptr %24, align 8
  %26 = tail call noundef i32 %25(ptr noundef nonnull align 8 dereferenceable(1112) %0, i32 noundef %1)
  %27 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %14, i64 0, i32 3
  store i32 %26, ptr %27, align 8, !tbaa !125
  %28 = load i32, ptr %22, align 4, !tbaa !118
  %29 = or i32 %28, %26
  %30 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %14, i64 0, i32 1
  store i32 %29, ptr %30, align 8, !tbaa !126
  %31 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3
  %32 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !127
  %34 = load ptr, ptr %31, align 8, !tbaa !128
  %35 = ptrtoint ptr %33 to i64
  %36 = ptrtoint ptr %34 to i64
  %37 = sub i64 %35, %36
  %38 = lshr exact i64 %37, 3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #15
  %39 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %6, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #15
  %40 = and i32 %29, 1
  %41 = icmp eq i32 %40, 0
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  br i1 %41, label %125, label %42

42:                                               ; preds = %15
  %43 = getelementptr inbounds i8, ptr %0, i64 112
  %44 = load i32, ptr %43, align 8, !tbaa !129
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false), !tbaa !8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = zext i32 %44 to i64
  invoke void @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr null, i64 noundef %47, ptr noundef nonnull align 8 dereferenceable(24) %8)
          to label %48 unwind label %88

48:                                               ; preds = %46
  %49 = load i32, ptr %43, align 8, !tbaa !129
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %42, %48
  %52 = phi i64 [ %50, %48 ], [ 0, %42 ]
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)
  %53 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !33
  %55 = load ptr, ptr %17, align 8, !tbaa !130
  %56 = ptrtoint ptr %54 to i64
  %57 = ptrtoint ptr %55 to i64
  %58 = sub i64 %56, %57
  %59 = sdiv exact i64 %58, 24
  %60 = icmp ult i64 %59, %52
  br i1 %60, label %61, label %63

61:                                               ; preds = %51
  %62 = sub nsw i64 %52, %59
  invoke void @_ZNSt6vectorIS_IN6dealii6TensorILi1ELi3EEESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_(ptr noundef nonnull align 8 dereferenceable(24) %17, ptr %54, i64 noundef %62, ptr noundef nonnull align 8 dereferenceable(24) %9)
          to label %77 unwind label %90

63:                                               ; preds = %51
  %64 = icmp ugt i64 %59, %52
  br i1 %64, label %65, label %77

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::vector.67", ptr %55, i64 %52
  %67 = icmp eq ptr %54, %66
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %73
  %69 = phi ptr [ %74, %73 ], [ %66, %65 ]
  %70 = load ptr, ptr %69, align 8, !tbaa !25
  %71 = icmp eq ptr %70, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %68
  call void @_ZdlPv(ptr noundef nonnull %70) #17
  br label %73

73:                                               ; preds = %72, %68
  %74 = getelementptr inbounds %"class.std::vector.67", ptr %69, i64 1
  %75 = icmp eq ptr %74, %54
  br i1 %75, label %76, label %68

76:                                               ; preds = %73
  store ptr %66, ptr %53, align 8, !tbaa !132
  br label %77

77:                                               ; preds = %76, %65, %63, %61
  %78 = load ptr, ptr %9, align 8, !tbaa !25
  %79 = icmp eq ptr %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %77
  call void @_ZdlPv(ptr noundef nonnull %78) #17
  br label %81

81:                                               ; preds = %77, %80
  %82 = load i32, ptr %43, align 8, !tbaa !129
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %125, label %84

84:                                               ; preds = %81
  %85 = and i64 %38, 4294967295
  br label %95

86:                                               ; preds = %4
  %87 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %14) #17
  br label %465

88:                                               ; preds = %139, %46, %224
  %89 = landingpad { ptr, i32 }
          cleanup
  br label %446

90:                                               ; preds = %61
  %91 = landingpad { ptr, i32 }
          cleanup
  %92 = load ptr, ptr %9, align 8, !tbaa !25
  %93 = icmp eq ptr %92, null
  br i1 %93, label %446, label %94

94:                                               ; preds = %90
  call void @_ZdlPv(ptr noundef nonnull %92) #17
  br label %446

95:                                               ; preds = %84, %118
  %96 = phi i32 [ %82, %84 ], [ %119, %118 ]
  %97 = phi i64 [ 0, %84 ], [ %120, %118 ]
  %98 = load ptr, ptr %17, align 8, !tbaa !130
  %99 = getelementptr inbounds %"class.std::vector.67", ptr %98, i64 %97
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false), !tbaa !8
  %100 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %99, i64 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !33
  %102 = load ptr, ptr %99, align 8, !tbaa !25
  %103 = ptrtoint ptr %101 to i64
  %104 = ptrtoint ptr %102 to i64
  %105 = sub i64 %103, %104
  %106 = sdiv exact i64 %105, 24
  %107 = icmp ult i64 %106, %85
  br i1 %107, label %108, label %112

108:                                              ; preds = %95
  %109 = sub nsw i64 %85, %106
  invoke void @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %99, ptr %101, i64 noundef %109, ptr noundef nonnull align 8 dereferenceable(24) %10)
          to label %110 unwind label %123

110:                                              ; preds = %108
  %111 = load i32, ptr %43, align 8, !tbaa !129
  br label %118

112:                                              ; preds = %95
  %113 = icmp ugt i64 %106, %85
  br i1 %113, label %114, label %118

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"class.dealii::Tensor", ptr %102, i64 %85
  %116 = icmp eq ptr %101, %115
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  store ptr %115, ptr %100, align 8, !tbaa !23
  br label %118

118:                                              ; preds = %110, %117, %114, %112
  %119 = phi i32 [ %111, %110 ], [ %96, %117 ], [ %96, %114 ], [ %96, %112 ]
  %120 = add nuw nsw i64 %97, 1
  %121 = zext i32 %119 to i64
  %122 = icmp ult i64 %120, %121
  br i1 %122, label %95, label %125

123:                                              ; preds = %108
  %124 = landingpad { ptr, i32 }
          cleanup
  br label %446

125:                                              ; preds = %118, %81, %15
  %126 = and i32 %29, 2
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %221, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds i8, ptr %0, i64 112
  %130 = load i32, ptr %129, align 8, !tbaa !129
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %11, i8 0, i64 72, i1 false), !tbaa !8
  %131 = zext i32 %130 to i64
  %132 = load ptr, ptr %39, align 8, !tbaa !33
  %133 = load ptr, ptr %6, align 8, !tbaa !51
  %134 = ptrtoint ptr %132 to i64
  %135 = ptrtoint ptr %133 to i64
  %136 = sub i64 %134, %135
  %137 = sdiv exact i64 %136, 72
  %138 = icmp ult i64 %137, %131
  br i1 %138, label %139, label %144

139:                                              ; preds = %128
  %140 = sub nsw i64 %131, %137
  invoke void @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr %132, i64 noundef %140, ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %141 unwind label %88

141:                                              ; preds = %139
  %142 = load i32, ptr %129, align 8, !tbaa !129
  %143 = zext i32 %142 to i64
  br label %150

144:                                              ; preds = %128
  %145 = icmp ugt i64 %137, %131
  br i1 %145, label %146, label %150

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %133, i64 %131
  %148 = icmp eq ptr %132, %147
  br i1 %148, label %150, label %149

149:                                              ; preds = %146
  store ptr %147, ptr %39, align 8, !tbaa !49
  br label %150

150:                                              ; preds = %141, %144, %146, %149
  %151 = phi i64 [ %143, %141 ], [ %131, %144 ], [ %131, %146 ], [ %131, %149 ]
  %152 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %14, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  %153 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %154 = load ptr, ptr %153, align 8, !tbaa !33
  %155 = load ptr, ptr %152, align 8, !tbaa !133
  %156 = ptrtoint ptr %154 to i64
  %157 = ptrtoint ptr %155 to i64
  %158 = sub i64 %156, %157
  %159 = sdiv exact i64 %158, 24
  %160 = icmp ult i64 %159, %151
  br i1 %160, label %161, label %163

161:                                              ; preds = %150
  %162 = sub nsw i64 %151, %159
  invoke void @_ZNSt6vectorIS_IN6dealii6TensorILi2ELi3EEESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_(ptr noundef nonnull align 8 dereferenceable(24) %152, ptr %154, i64 noundef %162, ptr noundef nonnull align 8 dereferenceable(24) %12)
          to label %177 unwind label %186

163:                                              ; preds = %150
  %164 = icmp ugt i64 %159, %151
  br i1 %164, label %165, label %177

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.std::vector.72", ptr %155, i64 %151
  %167 = icmp eq ptr %154, %166
  br i1 %167, label %177, label %168

168:                                              ; preds = %165, %173
  %169 = phi ptr [ %174, %173 ], [ %166, %165 ]
  %170 = load ptr, ptr %169, align 8, !tbaa !51
  %171 = icmp eq ptr %170, null
  br i1 %171, label %173, label %172

172:                                              ; preds = %168
  call void @_ZdlPv(ptr noundef nonnull %170) #17
  br label %173

173:                                              ; preds = %172, %168
  %174 = getelementptr inbounds %"class.std::vector.72", ptr %169, i64 1
  %175 = icmp eq ptr %174, %154
  br i1 %175, label %176, label %168

176:                                              ; preds = %173
  store ptr %166, ptr %153, align 8, !tbaa !135
  br label %177

177:                                              ; preds = %176, %165, %163, %161
  %178 = load ptr, ptr %12, align 8, !tbaa !51
  %179 = icmp eq ptr %178, null
  br i1 %179, label %181, label %180

180:                                              ; preds = %177
  call void @_ZdlPv(ptr noundef nonnull %178) #17
  br label %181

181:                                              ; preds = %177, %180
  %182 = load i32, ptr %129, align 8, !tbaa !129
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %221, label %184

184:                                              ; preds = %181
  %185 = and i64 %38, 4294967295
  br label %191

186:                                              ; preds = %161
  %187 = landingpad { ptr, i32 }
          cleanup
  %188 = load ptr, ptr %12, align 8, !tbaa !51
  %189 = icmp eq ptr %188, null
  br i1 %189, label %446, label %190

190:                                              ; preds = %186
  call void @_ZdlPv(ptr noundef nonnull %188) #17
  br label %446

191:                                              ; preds = %184, %214
  %192 = phi i32 [ %182, %184 ], [ %215, %214 ]
  %193 = phi i64 [ 0, %184 ], [ %216, %214 ]
  %194 = load ptr, ptr %152, align 8, !tbaa !133
  %195 = getelementptr inbounds %"class.std::vector.72", ptr %194, i64 %193
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %13, i8 0, i64 72, i1 false), !tbaa !8
  %196 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %195, i64 0, i32 1
  %197 = load ptr, ptr %196, align 8, !tbaa !33
  %198 = load ptr, ptr %195, align 8, !tbaa !51
  %199 = ptrtoint ptr %197 to i64
  %200 = ptrtoint ptr %198 to i64
  %201 = sub i64 %199, %200
  %202 = sdiv exact i64 %201, 72
  %203 = icmp ult i64 %202, %185
  br i1 %203, label %204, label %208

204:                                              ; preds = %191
  %205 = sub nsw i64 %185, %202
  invoke void @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %195, ptr %197, i64 noundef %205, ptr noundef nonnull align 8 dereferenceable(72) %13)
          to label %206 unwind label %219

206:                                              ; preds = %204
  %207 = load i32, ptr %129, align 8, !tbaa !129
  br label %214

208:                                              ; preds = %191
  %209 = icmp ugt i64 %202, %185
  br i1 %209, label %210, label %214

210:                                              ; preds = %208
  %211 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %198, i64 %185
  %212 = icmp eq ptr %197, %211
  br i1 %212, label %214, label %213

213:                                              ; preds = %210
  store ptr %211, ptr %196, align 8, !tbaa !49
  br label %214

214:                                              ; preds = %206, %213, %210, %208
  %215 = phi i32 [ %207, %206 ], [ %192, %213 ], [ %192, %210 ], [ %192, %208 ]
  %216 = add nuw nsw i64 %193, 1
  %217 = zext i32 %215 to i64
  %218 = icmp ult i64 %216, %217
  br i1 %218, label %191, label %221

219:                                              ; preds = %204
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %446

221:                                              ; preds = %214, %181, %125
  %222 = and i32 %29, 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %225, label %224

224:                                              ; preds = %221
  invoke void @_ZN6dealii13FiniteElementILi3ELi3EE16InternalDataBase14initialize_2ndEPKS1_RKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi3EEE(ptr noundef nonnull align 8 dereferenceable(216) %14, ptr noundef nonnull %0, ptr noundef nonnull align 8 dereferenceable(72) %2, ptr noundef nonnull align 8 dereferenceable(128) %3)
          to label %225 unwind label %88

225:                                              ; preds = %224, %221
  %226 = and i32 %29, 3
  %227 = icmp ne i32 %226, 0
  %228 = and i64 %37, 34359738360
  %229 = icmp ne i64 %228, 0
  %230 = select i1 %227, i1 %229, i1 false
  br i1 %230, label %231, label %438

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 2
  %233 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 2
  %234 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %235 = getelementptr inbounds i8, ptr %0, i64 112
  %236 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %237 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %14, i64 0, i32 2
  %238 = and i64 %38, 4294967295
  br label %239

239:                                              ; preds = %231, %435
  %240 = phi i64 [ 0, %231 ], [ %436, %435 ]
  %241 = load ptr, ptr %232, align 8, !tbaa !136
  %242 = getelementptr inbounds %"class.dealii::Point", ptr %241, i64 %240
  invoke void @_ZNK6dealii14PolynomialsBDMILi3EE7computeERKNS_5PointILi3EEERSt6vectorINS_6TensorILi1ELi3EEESaIS8_EERS6_INS7_ILi2ELi3EEESaISC_EERS6_INS7_ILi3ELi3EEESaISG_EE(ptr noundef nonnull align 8 dereferenceable(184) %233, ptr noundef nonnull align 8 dereferenceable(24) %242, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %243 unwind label %264

243:                                              ; preds = %239
  br i1 %41, label %344, label %244

244:                                              ; preds = %243
  %245 = load i32, ptr %234, align 8, !tbaa !34
  %246 = icmp eq i32 %245, 0
  %247 = load i32, ptr %235, align 8, !tbaa !129
  %248 = icmp eq i32 %247, 0
  br i1 %246, label %255, label %249

249:                                              ; preds = %244
  br i1 %248, label %344, label %250

250:                                              ; preds = %249
  %251 = load ptr, ptr %236, align 8, !tbaa !35
  %252 = load ptr, ptr %5, align 8, !tbaa !25
  %253 = load ptr, ptr %17, align 8, !tbaa !130
  %254 = zext i32 %247 to i64
  br label %295

255:                                              ; preds = %244
  br i1 %248, label %344, label %256

256:                                              ; preds = %255
  %257 = load ptr, ptr %5, align 8, !tbaa !25
  %258 = load ptr, ptr %17, align 8, !tbaa !130
  %259 = zext i32 %247 to i64
  %260 = and i64 %259, 1
  %261 = icmp eq i32 %247, 1
  br i1 %261, label %329, label %262

262:                                              ; preds = %256
  %263 = and i64 %259, 4294967294
  br label %266

264:                                              ; preds = %239
  %265 = landingpad { ptr, i32 }
          cleanup
  br label %446

266:                                              ; preds = %266, %262
  %267 = phi i64 [ 0, %262 ], [ %292, %266 ]
  %268 = phi i64 [ 0, %262 ], [ %293, %266 ]
  %269 = getelementptr inbounds %"class.dealii::Tensor", ptr %257, i64 %267
  %270 = getelementptr inbounds %"class.std::vector.67", ptr %258, i64 %267
  %271 = load ptr, ptr %270, align 8, !tbaa !25
  %272 = getelementptr inbounds %"class.dealii::Tensor", ptr %271, i64 %240
  %273 = load double, ptr %269, align 8, !tbaa !8
  store double %273, ptr %272, align 8, !tbaa !8
  %274 = getelementptr inbounds [3 x double], ptr %269, i64 0, i64 1
  %275 = load double, ptr %274, align 8, !tbaa !8
  %276 = getelementptr inbounds [3 x double], ptr %272, i64 0, i64 1
  store double %275, ptr %276, align 8, !tbaa !8
  %277 = getelementptr inbounds [3 x double], ptr %269, i64 0, i64 2
  %278 = load double, ptr %277, align 8, !tbaa !8
  %279 = getelementptr inbounds [3 x double], ptr %272, i64 0, i64 2
  store double %278, ptr %279, align 8, !tbaa !8
  %280 = or i64 %267, 1
  %281 = getelementptr inbounds %"class.dealii::Tensor", ptr %257, i64 %280
  %282 = getelementptr inbounds %"class.std::vector.67", ptr %258, i64 %280
  %283 = load ptr, ptr %282, align 8, !tbaa !25
  %284 = getelementptr inbounds %"class.dealii::Tensor", ptr %283, i64 %240
  %285 = load double, ptr %281, align 8, !tbaa !8
  store double %285, ptr %284, align 8, !tbaa !8
  %286 = getelementptr inbounds [3 x double], ptr %281, i64 0, i64 1
  %287 = load double, ptr %286, align 8, !tbaa !8
  %288 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 1
  store double %287, ptr %288, align 8, !tbaa !8
  %289 = getelementptr inbounds [3 x double], ptr %281, i64 0, i64 2
  %290 = load double, ptr %289, align 8, !tbaa !8
  %291 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 2
  store double %290, ptr %291, align 8, !tbaa !8
  %292 = add nuw nsw i64 %267, 2
  %293 = add i64 %268, 2
  %294 = icmp eq i64 %293, %263
  br i1 %294, label %329, label %266

295:                                              ; preds = %250, %304
  %296 = phi i64 [ 0, %250 ], [ %305, %304 ]
  %297 = getelementptr inbounds %"class.std::vector.67", ptr %253, i64 %296
  %298 = load ptr, ptr %297, align 8, !tbaa !25
  %299 = getelementptr inbounds %"class.dealii::Tensor", ptr %298, i64 %240
  %300 = getelementptr inbounds [3 x double], ptr %299, i64 0, i64 2
  %301 = load <2 x double>, ptr %299, align 8, !tbaa !8
  %302 = load double, ptr %300, align 8, !tbaa !8
  %303 = trunc i64 %296 to i32
  br label %307

304:                                              ; preds = %307
  %305 = add nuw nsw i64 %296, 1
  %306 = icmp eq i64 %305, %254
  br i1 %306, label %344, label %295

307:                                              ; preds = %295, %307
  %308 = phi i64 [ 0, %295 ], [ %327, %307 ]
  %309 = phi double [ %302, %295 ], [ %326, %307 ]
  %310 = phi <2 x double> [ %301, %295 ], [ %325, %307 ]
  %311 = trunc i64 %308 to i32
  %312 = mul i32 %245, %311
  %313 = add i32 %312, %303
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds double, ptr %251, i64 %314
  %316 = load double, ptr %315, align 8, !tbaa !8
  %317 = getelementptr inbounds %"class.dealii::Tensor", ptr %252, i64 %308
  %318 = getelementptr inbounds [3 x double], ptr %317, i64 0, i64 2
  %319 = load double, ptr %318, align 8, !tbaa !8, !noalias !521
  %320 = fmul double %316, %319
  %321 = load <2 x double>, ptr %317, align 8, !tbaa !8, !noalias !521
  %322 = insertelement <2 x double> poison, double %316, i64 0
  %323 = shufflevector <2 x double> %322, <2 x double> poison, <2 x i32> zeroinitializer
  %324 = fmul <2 x double> %323, %321
  %325 = fadd <2 x double> %324, %310
  store <2 x double> %325, ptr %299, align 8, !tbaa !8
  %326 = fadd double %320, %309
  store double %326, ptr %300, align 8, !tbaa !8
  %327 = add nuw nsw i64 %308, 1
  %328 = icmp eq i64 %327, %254
  br i1 %328, label %304, label %307

329:                                              ; preds = %266, %256
  %330 = phi i64 [ 0, %256 ], [ %292, %266 ]
  %331 = icmp eq i64 %260, 0
  br i1 %331, label %344, label %332

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.dealii::Tensor", ptr %257, i64 %330
  %334 = getelementptr inbounds %"class.std::vector.67", ptr %258, i64 %330
  %335 = load ptr, ptr %334, align 8, !tbaa !25
  %336 = getelementptr inbounds %"class.dealii::Tensor", ptr %335, i64 %240
  %337 = load double, ptr %333, align 8, !tbaa !8
  store double %337, ptr %336, align 8, !tbaa !8
  %338 = getelementptr inbounds [3 x double], ptr %333, i64 0, i64 1
  %339 = load double, ptr %338, align 8, !tbaa !8
  %340 = getelementptr inbounds [3 x double], ptr %336, i64 0, i64 1
  store double %339, ptr %340, align 8, !tbaa !8
  %341 = getelementptr inbounds [3 x double], ptr %333, i64 0, i64 2
  %342 = load double, ptr %341, align 8, !tbaa !8
  %343 = getelementptr inbounds [3 x double], ptr %336, i64 0, i64 2
  store double %342, ptr %343, align 8, !tbaa !8
  br label %344

344:                                              ; preds = %304, %332, %329, %249, %255, %243
  br i1 %127, label %435, label %345

345:                                              ; preds = %344
  %346 = load i32, ptr %234, align 8, !tbaa !34
  %347 = icmp eq i32 %346, 0
  %348 = load i32, ptr %235, align 8, !tbaa !129
  %349 = icmp eq i32 %348, 0
  br i1 %347, label %356, label %350

350:                                              ; preds = %345
  br i1 %349, label %435, label %351

351:                                              ; preds = %350
  %352 = load ptr, ptr %236, align 8, !tbaa !35
  %353 = load ptr, ptr %6, align 8, !tbaa !51
  %354 = load ptr, ptr %237, align 8, !tbaa !133
  %355 = zext i32 %348 to i64
  br label %394

356:                                              ; preds = %345
  br i1 %349, label %435, label %357

357:                                              ; preds = %356
  %358 = load ptr, ptr %6, align 8, !tbaa !51
  %359 = load ptr, ptr %237, align 8, !tbaa !133
  %360 = zext i32 %348 to i64
  br label %361

361:                                              ; preds = %357, %361
  %362 = phi i64 [ 0, %357 ], [ %392, %361 ]
  %363 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %358, i64 %362
  %364 = getelementptr inbounds %"class.std::vector.72", ptr %359, i64 %362
  %365 = load ptr, ptr %364, align 8, !tbaa !51
  %366 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %365, i64 %240
  %367 = load double, ptr %363, align 8, !tbaa !8
  store double %367, ptr %366, align 8, !tbaa !8
  %368 = getelementptr inbounds [3 x double], ptr %363, i64 0, i64 1
  %369 = load double, ptr %368, align 8, !tbaa !8
  %370 = getelementptr inbounds [3 x double], ptr %366, i64 0, i64 1
  store double %369, ptr %370, align 8, !tbaa !8
  %371 = getelementptr inbounds [3 x double], ptr %363, i64 0, i64 2
  %372 = load double, ptr %371, align 8, !tbaa !8
  %373 = getelementptr inbounds [3 x double], ptr %366, i64 0, i64 2
  store double %372, ptr %373, align 8, !tbaa !8
  %374 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 1
  %375 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 1
  %376 = load double, ptr %374, align 8, !tbaa !8
  store double %376, ptr %375, align 8, !tbaa !8
  %377 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 1, i32 0, i64 1
  %378 = load double, ptr %377, align 8, !tbaa !8
  %379 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 1, i32 0, i64 1
  store double %378, ptr %379, align 8, !tbaa !8
  %380 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 1, i32 0, i64 2
  %381 = load double, ptr %380, align 8, !tbaa !8
  %382 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 1, i32 0, i64 2
  store double %381, ptr %382, align 8, !tbaa !8
  %383 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 2
  %384 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 2
  %385 = load double, ptr %383, align 8, !tbaa !8
  store double %385, ptr %384, align 8, !tbaa !8
  %386 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 2, i32 0, i64 1
  %387 = load double, ptr %386, align 8, !tbaa !8
  %388 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 2, i32 0, i64 1
  store double %387, ptr %388, align 8, !tbaa !8
  %389 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %363, i64 0, i64 2, i32 0, i64 2
  %390 = load double, ptr %389, align 8, !tbaa !8
  %391 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %366, i64 0, i64 2, i32 0, i64 2
  store double %390, ptr %391, align 8, !tbaa !8
  %392 = add nuw nsw i64 %362, 1
  %393 = icmp eq i64 %392, %360
  br i1 %393, label %435, label %361

394:                                              ; preds = %351, %405
  %395 = phi i64 [ 0, %351 ], [ %406, %405 ]
  %396 = getelementptr inbounds %"class.std::vector.72", ptr %354, i64 %395
  %397 = load ptr, ptr %396, align 8, !tbaa !51
  %398 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %397, i64 %240
  %399 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %398, i64 0, i64 1, i32 0, i64 1
  %400 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %398, i64 0, i64 2, i32 0, i64 2
  %401 = load <4 x double>, ptr %398, align 8, !tbaa !8
  %402 = load <4 x double>, ptr %399, align 8, !tbaa !8
  %403 = load double, ptr %400, align 8, !tbaa !8
  %404 = trunc i64 %395 to i32
  br label %408

405:                                              ; preds = %408
  %406 = add nuw nsw i64 %395, 1
  %407 = icmp eq i64 %406, %355
  br i1 %407, label %435, label %394

408:                                              ; preds = %394, %408
  %409 = phi i64 [ 0, %394 ], [ %433, %408 ]
  %410 = phi double [ %403, %394 ], [ %432, %408 ]
  %411 = phi <4 x double> [ %401, %394 ], [ %428, %408 ]
  %412 = phi <4 x double> [ %402, %394 ], [ %431, %408 ]
  %413 = trunc i64 %409 to i32
  %414 = mul i32 %346, %413
  %415 = add i32 %414, %404
  %416 = zext i32 %415 to i64
  %417 = getelementptr inbounds double, ptr %352, i64 %416
  %418 = load double, ptr %417, align 8, !tbaa !8
  %419 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %353, i64 %409
  %420 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %419, i64 0, i64 1, i32 0, i64 1
  %421 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %419, i64 0, i64 2, i32 0, i64 2
  %422 = load double, ptr %421, align 8, !tbaa !8, !noalias !524
  %423 = fmul double %418, %422
  %424 = load <4 x double>, ptr %419, align 8, !tbaa !8, !noalias !524
  %425 = insertelement <4 x double> poison, double %418, i64 0
  %426 = shufflevector <4 x double> %425, <4 x double> poison, <4 x i32> zeroinitializer
  %427 = fmul <4 x double> %426, %424
  %428 = fadd <4 x double> %427, %411
  %429 = load <4 x double>, ptr %420, align 8, !tbaa !8, !noalias !524
  %430 = fmul <4 x double> %426, %429
  store <4 x double> %428, ptr %398, align 8, !tbaa !8
  %431 = fadd <4 x double> %430, %412
  store <4 x double> %431, ptr %399, align 8, !tbaa !8
  %432 = fadd double %423, %410
  store double %432, ptr %400, align 8, !tbaa !8
  %433 = add nuw nsw i64 %409, 1
  %434 = icmp eq i64 %433, %355
  br i1 %434, label %405, label %408

435:                                              ; preds = %405, %361, %350, %356, %344
  %436 = add nuw nsw i64 %240, 1
  %437 = icmp eq i64 %436, %238
  br i1 %437, label %438, label %239

438:                                              ; preds = %435, %225
  %439 = load ptr, ptr %7, align 8, !tbaa !57
  %440 = icmp eq ptr %439, null
  br i1 %440, label %442, label %441

441:                                              ; preds = %438
  call void @_ZdlPv(ptr noundef nonnull %439) #17
  br label %442

442:                                              ; preds = %441, %438
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #15
  %443 = load ptr, ptr %6, align 8, !tbaa !51
  %444 = icmp eq ptr %443, null
  br i1 %444, label %455, label %445

445:                                              ; preds = %442
  call void @_ZdlPv(ptr noundef nonnull %443) #17
  br label %455

446:                                              ; preds = %190, %186, %94, %90, %264, %219, %123, %88
  %447 = phi { ptr, i32 } [ %124, %123 ], [ %220, %219 ], [ %89, %88 ], [ %265, %264 ], [ %91, %90 ], [ %91, %94 ], [ %187, %186 ], [ %187, %190 ]
  %448 = load ptr, ptr %7, align 8, !tbaa !57
  %449 = icmp eq ptr %448, null
  br i1 %449, label %451, label %450

450:                                              ; preds = %446
  call void @_ZdlPv(ptr noundef nonnull %448) #17
  br label %451

451:                                              ; preds = %450, %446
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #15
  %452 = load ptr, ptr %6, align 8, !tbaa !51
  %453 = icmp eq ptr %452, null
  br i1 %453, label %460, label %454

454:                                              ; preds = %451
  call void @_ZdlPv(ptr noundef nonnull %452) #17
  br label %460

455:                                              ; preds = %445, %442
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #15
  %456 = load ptr, ptr %5, align 8, !tbaa !25
  %457 = icmp eq ptr %456, null
  br i1 %457, label %459, label %458

458:                                              ; preds = %455
  call void @_ZdlPv(ptr noundef nonnull %456) #17
  br label %459

459:                                              ; preds = %455, %458
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  ret ptr %14

460:                                              ; preds = %454, %451
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #15
  %461 = load ptr, ptr %5, align 8, !tbaa !25
  %462 = icmp eq ptr %461, null
  br i1 %462, label %464, label %463

463:                                              ; preds = %460
  call void @_ZdlPv(ptr noundef nonnull %461) #17
  br label %464

464:                                              ; preds = %463, %460
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  br label %465

465:                                              ; preds = %464, %86
  %466 = phi { ptr, i32 } [ %447, %464 ], [ %87, %86 ]
  resume { ptr, i32 } %466
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE14fill_fe_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEERKNS_10QuadratureILi3EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEERNS_14CellSimilarity10SimilarityE(ptr noundef nonnull align 8 dereferenceable(1112) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(185) %4, ptr noundef nonnull align 8 dereferenceable(185) %5, ptr noundef nonnull align 8 dereferenceable(436) %6, ptr noundef nonnull align 4 dereferenceable(4) %7) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %9 = alloca %"class.std::vector.67", align 8
  %10 = alloca %"class.std::vector.67", align 8
  %11 = alloca %"class.std::vector.72", align 8
  %12 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %13 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %14 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Quadrature", ptr %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !127
  %17 = load ptr, ptr %14, align 8, !tbaa !128
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = lshr exact i64 %20, 3
  %22 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %5, i64 0, i32 9
  %23 = load i8, ptr %22, align 8, !tbaa !143, !range !144, !noundef !145
  %24 = icmp eq i8 %23, 0
  %25 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %5, i64 0, i32 1
  %26 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %5, i64 0, i32 3
  %27 = load i32, ptr %26, align 8
  %28 = load i32, ptr %25, align 8
  %29 = select i1 %24, i32 %27, i32 %28
  %30 = getelementptr inbounds i8, ptr %0, i64 112
  %31 = load i32, ptr %30, align 8, !tbaa !129
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %89, label %33

33:                                               ; preds = %8
  %34 = zext i32 %31 to i64
  %35 = shl nuw nsw i64 %34, 3
  %36 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %35) #16
  %37 = getelementptr inbounds double, ptr %36, i64 %34
  %38 = add nuw nsw i64 %34, 2305843009213693951
  %39 = and i64 %38, 2305843009213693951
  %40 = add nuw nsw i64 %39, 1
  %41 = icmp ult i64 %39, 15
  br i1 %41, label %57, label %42

42:                                               ; preds = %33
  %43 = and i64 %40, 4611686018427387888
  %44 = shl i64 %43, 3
  %45 = getelementptr i8, ptr %36, i64 %44
  br label %46

46:                                               ; preds = %46, %42
  %47 = phi i64 [ 0, %42 ], [ %53, %46 ]
  %48 = shl i64 %47, 3
  %49 = getelementptr i8, ptr %36, i64 %48
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %49, align 8, !tbaa !8
  %50 = getelementptr double, ptr %49, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %50, align 8, !tbaa !8
  %51 = getelementptr double, ptr %49, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %51, align 8, !tbaa !8
  %52 = getelementptr double, ptr %49, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %52, align 8, !tbaa !8
  %53 = add nuw i64 %47, 16
  %54 = icmp eq i64 %53, %43
  br i1 %54, label %55, label %46, !llvm.loop !527

55:                                               ; preds = %46
  %56 = icmp eq i64 %40, %43
  br i1 %56, label %63, label %57

57:                                               ; preds = %33, %55
  %58 = phi ptr [ %36, %33 ], [ %45, %55 ]
  br label %59

59:                                               ; preds = %57, %59
  %60 = phi ptr [ %61, %59 ], [ %58, %57 ]
  store double 1.000000e+00, ptr %60, align 8, !tbaa !8
  %61 = getelementptr inbounds double, ptr %60, i64 1
  %62 = icmp eq ptr %61, %37
  br i1 %62, label %63, label %59, !llvm.loop !528

63:                                               ; preds = %59, %55
  %64 = add nuw nsw i64 %34, 2305843009213693951
  %65 = and i64 %64, 2305843009213693951
  %66 = add nuw nsw i64 %65, 1
  %67 = icmp ult i64 %65, 15
  br i1 %67, label %83, label %68

68:                                               ; preds = %63
  %69 = and i64 %66, 4611686018427387888
  %70 = shl i64 %69, 3
  %71 = getelementptr i8, ptr %36, i64 %70
  br label %72

72:                                               ; preds = %72, %68
  %73 = phi i64 [ 0, %68 ], [ %79, %72 ]
  %74 = shl i64 %73, 3
  %75 = getelementptr i8, ptr %36, i64 %74
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %75, align 8, !tbaa !8
  %76 = getelementptr double, ptr %75, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %76, align 8, !tbaa !8
  %77 = getelementptr double, ptr %75, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %77, align 8, !tbaa !8
  %78 = getelementptr double, ptr %75, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %78, align 8, !tbaa !8
  %79 = add nuw i64 %73, 16
  %80 = icmp eq i64 %79, %69
  br i1 %80, label %81, label %72, !llvm.loop !529

81:                                               ; preds = %72
  %82 = icmp eq i64 %66, %69
  br i1 %82, label %89, label %83

83:                                               ; preds = %63, %81
  %84 = phi ptr [ %36, %63 ], [ %71, %81 ]
  br label %85

85:                                               ; preds = %83, %85
  %86 = phi ptr [ %87, %85 ], [ %84, %83 ]
  store double 1.000000e+00, ptr %86, align 8, !tbaa !8
  %87 = getelementptr inbounds double, ptr %86, i64 1
  %88 = icmp eq ptr %87, %37
  br i1 %88, label %89, label %85, !llvm.loop !530

89:                                               ; preds = %85, %81, %8
  %90 = phi ptr [ null, %8 ], [ %36, %81 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 1
  %92 = load i32, ptr %91, align 8, !tbaa !519
  %93 = icmp eq i32 %92, 256
  %94 = load i32, ptr %7, align 4
  %95 = icmp eq i32 %94, 1
  %96 = select i1 %93, i1 %95, i1 false
  br i1 %96, label %97, label %98

97:                                               ; preds = %89
  store i32 0, ptr %7, align 4, !tbaa !152
  br label %98

98:                                               ; preds = %97, %89
  %99 = phi i32 [ 0, %97 ], [ %94, %89 ]
  br i1 %32, label %168, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %6, i64 0, i32 14
  %102 = and i32 %29, 1
  %103 = icmp eq i32 %102, 0
  %104 = and i64 %21, 4294967295
  %105 = icmp eq i64 %104, 0
  %106 = mul nuw nsw i64 %104, 24
  %107 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %10, i64 0, i32 2
  %108 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %10, i64 0, i32 1
  %109 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %5, i64 0, i32 1
  %110 = and i64 %20, 34359738360
  %111 = icmp eq i64 %110, 0
  %112 = getelementptr inbounds %"class.dealii::TableBase", ptr %6, i64 0, i32 1
  %113 = getelementptr inbounds %"class.dealii::TableBase", ptr %6, i64 0, i32 3, i32 0, i32 0, i64 1
  %114 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %9, i64 0, i32 2
  %115 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %9, i64 0, i32 1
  %116 = and i32 %29, 2
  %117 = icmp eq i32 %116, 0
  %118 = mul nuw nsw i64 %104, 72
  %119 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %11, i64 0, i32 2
  %120 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %11, i64 0, i32 1
  %121 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %5, i64 0, i32 2
  %122 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %6, i64 0, i32 1
  %123 = and i64 %21, 4294967295
  %124 = and i64 %21, 4294967295
  %125 = and i64 %21, 4294967295
  %126 = and i64 %21, 4294967295
  %127 = and i64 %21, 4294967295
  %128 = and i64 %21, 4294967295
  %129 = and i64 %21, 4294967295
  %130 = add nsw i64 %123, -1
  %131 = mul nuw nsw i64 %123, 24
  %132 = add nsw i64 %131, -16
  %133 = add nsw i64 %131, -8
  %134 = add nsw i64 %123, -1
  %135 = mul nuw nsw i64 %123, 24
  %136 = add nsw i64 %135, -16
  %137 = add nsw i64 %135, -8
  %138 = add nsw i64 %123, -1
  %139 = mul nuw nsw i64 %123, 24
  %140 = add nsw i64 %139, -16
  %141 = add nsw i64 %139, -8
  %142 = icmp ult i64 %123, 40
  %143 = trunc i64 %138 to i32
  %144 = trunc i64 %138 to i32
  %145 = icmp ugt i64 %138, 4294967295
  %146 = trunc i64 %138 to i32
  %147 = and i64 %21, 3
  %148 = sub nsw i64 %123, %147
  %149 = icmp eq i64 %147, 0
  %150 = icmp ult i64 %123, 60
  %151 = trunc i64 %134 to i32
  %152 = trunc i64 %134 to i32
  %153 = icmp ugt i64 %134, 4294967295
  %154 = trunc i64 %134 to i32
  %155 = and i64 %21, 3
  %156 = sub nsw i64 %123, %155
  %157 = icmp eq i64 %155, 0
  %158 = icmp ult i64 %123, 60
  %159 = trunc i64 %130 to i32
  %160 = trunc i64 %130 to i32
  %161 = icmp ugt i64 %130, 4294967295
  %162 = trunc i64 %130 to i32
  %163 = and i64 %21, 3
  %164 = sub nsw i64 %123, %163
  %165 = icmp eq i64 %163, 0
  br label %174

166:                                              ; preds = %1100
  %167 = load i32, ptr %7, align 4
  br label %168

168:                                              ; preds = %166, %98
  %169 = phi i32 [ %167, %166 ], [ %99, %98 ]
  %170 = and i32 %29, 4
  %171 = icmp eq i32 %170, 0
  %172 = icmp eq i32 %169, 1
  %173 = select i1 %171, i1 true, i1 %172
  br i1 %173, label %1114, label %1105

174:                                              ; preds = %100, %1100
  %175 = phi i64 [ 0, %100 ], [ %1101, %1100 ]
  %176 = shl nuw nsw i64 %175, 3
  %177 = getelementptr i8, ptr %90, i64 %176
  %178 = add nuw i64 %176, 8
  %179 = getelementptr i8, ptr %90, i64 %178
  %180 = load ptr, ptr %101, align 8, !tbaa !154
  %181 = getelementptr inbounds i32, ptr %180, i64 %175
  %182 = load i32, ptr %181, align 4, !tbaa !34
  %183 = load i32, ptr %7, align 4
  %184 = icmp eq i32 %183, 1
  %185 = select i1 %103, i1 true, i1 %184
  br i1 %185, label %793, label %186

186:                                              ; preds = %174
  %187 = load i32, ptr %91, align 8, !tbaa !519
  switch i32 %187, label %793 [
    i32 0, label %188
    i32 1, label %353
    i32 2, label %353
    i32 256, label %557
  ]

188:                                              ; preds = %186
  br i1 %111, label %793, label %189

189:                                              ; preds = %188
  %190 = load ptr, ptr %109, align 8, !tbaa !130
  %191 = getelementptr inbounds %"class.std::vector.67", ptr %190, i64 %175
  %192 = load ptr, ptr %191, align 8, !tbaa !25
  %193 = load ptr, ptr %112, align 8, !tbaa !35
  %194 = load i32, ptr %113, align 8, !tbaa !34
  %195 = mul i32 %194, %182
  %196 = add i32 %182, 1
  %197 = mul i32 %194, %196
  %198 = add i32 %182, 2
  %199 = mul i32 %194, %198
  br i1 %158, label %331, label %200

200:                                              ; preds = %189
  %201 = xor i32 %195, -1
  %202 = icmp ult i32 %201, %159
  %203 = xor i32 %197, -1
  %204 = icmp ult i32 %203, %160
  %205 = or i1 %204, %161
  %206 = xor i32 %199, -1
  %207 = icmp ult i32 %206, %162
  %208 = or i1 %202, %205
  %209 = or i1 %207, %208
  br i1 %209, label %331, label %210

210:                                              ; preds = %200
  %211 = zext i32 %195 to i64
  %212 = shl nuw nsw i64 %211, 3
  %213 = getelementptr i8, ptr %193, i64 %212
  %214 = getelementptr i8, ptr %193, i64 %110
  %215 = getelementptr i8, ptr %214, i64 %212
  %216 = zext i32 %197 to i64
  %217 = shl nuw nsw i64 %216, 3
  %218 = getelementptr i8, ptr %193, i64 %217
  %219 = getelementptr i8, ptr %214, i64 %217
  %220 = zext i32 %199 to i64
  %221 = shl nuw nsw i64 %220, 3
  %222 = getelementptr i8, ptr %193, i64 %221
  %223 = getelementptr i8, ptr %193, i64 %110
  %224 = getelementptr i8, ptr %223, i64 %221
  %225 = getelementptr i8, ptr %192, i64 %132
  %226 = getelementptr i8, ptr %192, i64 8
  %227 = getelementptr i8, ptr %192, i64 %133
  %228 = getelementptr i8, ptr %192, i64 16
  %229 = getelementptr i8, ptr %192, i64 %131
  %230 = icmp ult ptr %213, %219
  %231 = icmp ult ptr %218, %215
  %232 = and i1 %230, %231
  %233 = icmp ult ptr %213, %224
  %234 = icmp ult ptr %222, %215
  %235 = and i1 %233, %234
  %236 = or i1 %232, %235
  %237 = icmp ult ptr %213, %225
  %238 = icmp ult ptr %192, %215
  %239 = and i1 %237, %238
  %240 = or i1 %236, %239
  %241 = icmp ult ptr %213, %227
  %242 = icmp ult ptr %226, %215
  %243 = and i1 %241, %242
  %244 = or i1 %240, %243
  %245 = icmp ult ptr %213, %229
  %246 = icmp ult ptr %228, %215
  %247 = and i1 %245, %246
  %248 = or i1 %244, %247
  %249 = icmp ult ptr %218, %224
  %250 = icmp ult ptr %222, %219
  %251 = and i1 %249, %250
  %252 = or i1 %248, %251
  %253 = icmp ult ptr %218, %225
  %254 = icmp ult ptr %192, %219
  %255 = and i1 %253, %254
  %256 = or i1 %252, %255
  %257 = icmp ult ptr %218, %227
  %258 = icmp ult ptr %226, %219
  %259 = and i1 %257, %258
  %260 = or i1 %256, %259
  %261 = icmp ult ptr %218, %229
  %262 = icmp ult ptr %228, %219
  %263 = and i1 %261, %262
  %264 = or i1 %260, %263
  %265 = icmp ult ptr %222, %225
  %266 = icmp ult ptr %192, %224
  %267 = and i1 %265, %266
  %268 = or i1 %264, %267
  %269 = icmp ult ptr %222, %227
  %270 = icmp ult ptr %226, %224
  %271 = and i1 %269, %270
  %272 = or i1 %268, %271
  %273 = icmp ult ptr %222, %229
  %274 = icmp ult ptr %228, %224
  %275 = and i1 %273, %274
  %276 = or i1 %272, %275
  br i1 %276, label %331, label %277

277:                                              ; preds = %210, %277
  %278 = phi i64 [ %328, %277 ], [ 0, %210 ]
  %279 = trunc i64 %278 to i32
  %280 = or i64 %278, 1
  %281 = or i64 %278, 2
  %282 = or i64 %278, 3
  %283 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %278
  %284 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %280
  %285 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %281
  %286 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %282
  %287 = load double, ptr %283, align 8, !tbaa !8, !alias.scope !531
  %288 = load double, ptr %284, align 8, !tbaa !8, !alias.scope !531
  %289 = load double, ptr %285, align 8, !tbaa !8, !alias.scope !531
  %290 = load double, ptr %286, align 8, !tbaa !8, !alias.scope !531
  %291 = insertelement <4 x double> poison, double %287, i64 0
  %292 = insertelement <4 x double> %291, double %288, i64 1
  %293 = insertelement <4 x double> %292, double %289, i64 2
  %294 = insertelement <4 x double> %293, double %290, i64 3
  %295 = add i32 %195, %279
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds double, ptr %193, i64 %296
  store <4 x double> %294, ptr %297, align 8, !tbaa !8, !alias.scope !534, !noalias !536
  %298 = getelementptr inbounds [3 x double], ptr %283, i64 0, i64 1
  %299 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 1
  %300 = getelementptr inbounds [3 x double], ptr %285, i64 0, i64 1
  %301 = getelementptr inbounds [3 x double], ptr %286, i64 0, i64 1
  %302 = load double, ptr %298, align 8, !tbaa !8, !alias.scope !541
  %303 = load double, ptr %299, align 8, !tbaa !8, !alias.scope !541
  %304 = load double, ptr %300, align 8, !tbaa !8, !alias.scope !541
  %305 = load double, ptr %301, align 8, !tbaa !8, !alias.scope !541
  %306 = insertelement <4 x double> poison, double %302, i64 0
  %307 = insertelement <4 x double> %306, double %303, i64 1
  %308 = insertelement <4 x double> %307, double %304, i64 2
  %309 = insertelement <4 x double> %308, double %305, i64 3
  %310 = add i32 %197, %279
  %311 = zext i32 %310 to i64
  %312 = getelementptr inbounds double, ptr %193, i64 %311
  store <4 x double> %309, ptr %312, align 8, !tbaa !8, !alias.scope !542, !noalias !543
  %313 = getelementptr inbounds [3 x double], ptr %283, i64 0, i64 2
  %314 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 2
  %315 = getelementptr inbounds [3 x double], ptr %285, i64 0, i64 2
  %316 = getelementptr inbounds [3 x double], ptr %286, i64 0, i64 2
  %317 = load double, ptr %313, align 8, !tbaa !8, !alias.scope !544
  %318 = load double, ptr %314, align 8, !tbaa !8, !alias.scope !544
  %319 = load double, ptr %315, align 8, !tbaa !8, !alias.scope !544
  %320 = load double, ptr %316, align 8, !tbaa !8, !alias.scope !544
  %321 = insertelement <4 x double> poison, double %317, i64 0
  %322 = insertelement <4 x double> %321, double %318, i64 1
  %323 = insertelement <4 x double> %322, double %319, i64 2
  %324 = insertelement <4 x double> %323, double %320, i64 3
  %325 = add i32 %199, %279
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds double, ptr %193, i64 %326
  store <4 x double> %324, ptr %327, align 8, !tbaa !8, !alias.scope !545, !noalias !546
  %328 = add nuw i64 %278, 4
  %329 = icmp eq i64 %328, %164
  br i1 %329, label %330, label %277, !llvm.loop !547

330:                                              ; preds = %277
  br i1 %165, label %793, label %331

331:                                              ; preds = %210, %200, %189, %330
  %332 = phi i64 [ 0, %210 ], [ 0, %200 ], [ 0, %189 ], [ %164, %330 ]
  br label %333

333:                                              ; preds = %331, %333
  %334 = phi i64 [ %351, %333 ], [ %332, %331 ]
  %335 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %334
  %336 = load double, ptr %335, align 8, !tbaa !8
  %337 = trunc i64 %334 to i32
  %338 = add i32 %195, %337
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds double, ptr %193, i64 %339
  store double %336, ptr %340, align 8, !tbaa !8
  %341 = getelementptr inbounds [3 x double], ptr %335, i64 0, i64 1
  %342 = load double, ptr %341, align 8, !tbaa !8
  %343 = add i32 %197, %337
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds double, ptr %193, i64 %344
  store double %342, ptr %345, align 8, !tbaa !8
  %346 = getelementptr inbounds [3 x double], ptr %335, i64 0, i64 2
  %347 = load double, ptr %346, align 8, !tbaa !8
  %348 = add i32 %199, %337
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds double, ptr %193, i64 %349
  store double %347, ptr %350, align 8, !tbaa !8
  %351 = add nuw nsw i64 %334, 1
  %352 = icmp eq i64 %351, %125
  br i1 %352, label %793, label %333, !llvm.loop !548

353:                                              ; preds = %186, %186
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #15
  br i1 %105, label %354, label %355

354:                                              ; preds = %353
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)
  br label %360

355:                                              ; preds = %353
  %356 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %106) #16
          to label %357 unwind label %547

357:                                              ; preds = %355
  store ptr %356, ptr %9, align 8, !tbaa !25
  %358 = getelementptr inbounds %"class.dealii::Tensor", ptr %356, i64 %104
  store ptr %358, ptr %114, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %356, i8 0, i64 %106, i1 false), !tbaa !8
  %359 = getelementptr i8, ptr %356, i64 %106
  br label %360

360:                                              ; preds = %357, %354
  %361 = phi ptr [ null, %354 ], [ %356, %357 ]
  %362 = phi ptr [ null, %354 ], [ %359, %357 ]
  store ptr %362, ptr %115, align 8, !tbaa !23
  %363 = load ptr, ptr %109, align 8, !tbaa !130
  %364 = getelementptr inbounds %"class.std::vector.67", ptr %363, i64 %175
  %365 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %364, i64 0, i32 1
  %366 = load ptr, ptr %365, align 8, !tbaa !23
  %367 = load ptr, ptr %364, align 8, !tbaa !25
  %368 = ptrtoint ptr %366 to i64
  %369 = ptrtoint ptr %367 to i64
  %370 = sub i64 %368, %369
  %371 = sdiv exact i64 %370, 24
  %372 = ptrtoint ptr %362 to i64
  %373 = ptrtoint ptr %361 to i64
  %374 = sub i64 %372, %373
  %375 = sdiv exact i64 %374, 24
  %376 = shl i64 %371, 32
  %377 = shl i64 %375, 32
  %378 = load ptr, ptr %1, align 8, !tbaa !5
  %379 = getelementptr inbounds ptr, ptr %378, i64 4
  %380 = load ptr, ptr %379, align 8
  invoke void %380(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %364, i64 %376, ptr nonnull %9, i64 %377, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef %187)
          to label %381 unwind label %549

381:                                              ; preds = %360
  %382 = load ptr, ptr %9, align 8, !tbaa !25
  br i1 %111, label %544, label %383

383:                                              ; preds = %381
  %384 = load ptr, ptr %112, align 8, !tbaa !35
  %385 = load i32, ptr %113, align 8, !tbaa !34
  %386 = mul i32 %385, %182
  %387 = add i32 %182, 1
  %388 = mul i32 %385, %387
  %389 = add i32 %182, 2
  %390 = mul i32 %385, %389
  br i1 %150, label %522, label %391

391:                                              ; preds = %383
  %392 = xor i32 %386, -1
  %393 = icmp ult i32 %392, %151
  %394 = xor i32 %388, -1
  %395 = icmp ult i32 %394, %152
  %396 = or i1 %395, %153
  %397 = xor i32 %390, -1
  %398 = icmp ult i32 %397, %154
  %399 = or i1 %393, %396
  %400 = or i1 %398, %399
  br i1 %400, label %522, label %401

401:                                              ; preds = %391
  %402 = zext i32 %386 to i64
  %403 = shl nuw nsw i64 %402, 3
  %404 = getelementptr i8, ptr %384, i64 %403
  %405 = getelementptr i8, ptr %384, i64 %110
  %406 = getelementptr i8, ptr %405, i64 %403
  %407 = zext i32 %388 to i64
  %408 = shl nuw nsw i64 %407, 3
  %409 = getelementptr i8, ptr %384, i64 %408
  %410 = getelementptr i8, ptr %405, i64 %408
  %411 = zext i32 %390 to i64
  %412 = shl nuw nsw i64 %411, 3
  %413 = getelementptr i8, ptr %384, i64 %412
  %414 = getelementptr i8, ptr %384, i64 %110
  %415 = getelementptr i8, ptr %414, i64 %412
  %416 = getelementptr i8, ptr %382, i64 %136
  %417 = getelementptr i8, ptr %382, i64 8
  %418 = getelementptr i8, ptr %382, i64 %137
  %419 = getelementptr i8, ptr %382, i64 16
  %420 = getelementptr i8, ptr %382, i64 %135
  %421 = icmp ult ptr %404, %410
  %422 = icmp ult ptr %409, %406
  %423 = and i1 %421, %422
  %424 = icmp ult ptr %404, %415
  %425 = icmp ult ptr %413, %406
  %426 = and i1 %424, %425
  %427 = or i1 %423, %426
  %428 = icmp ult ptr %404, %416
  %429 = icmp ult ptr %382, %406
  %430 = and i1 %428, %429
  %431 = or i1 %427, %430
  %432 = icmp ult ptr %404, %418
  %433 = icmp ult ptr %417, %406
  %434 = and i1 %432, %433
  %435 = or i1 %431, %434
  %436 = icmp ult ptr %404, %420
  %437 = icmp ult ptr %419, %406
  %438 = and i1 %436, %437
  %439 = or i1 %435, %438
  %440 = icmp ult ptr %409, %415
  %441 = icmp ult ptr %413, %410
  %442 = and i1 %440, %441
  %443 = or i1 %439, %442
  %444 = icmp ult ptr %409, %416
  %445 = icmp ult ptr %382, %410
  %446 = and i1 %444, %445
  %447 = or i1 %443, %446
  %448 = icmp ult ptr %409, %418
  %449 = icmp ult ptr %417, %410
  %450 = and i1 %448, %449
  %451 = or i1 %447, %450
  %452 = icmp ult ptr %409, %420
  %453 = icmp ult ptr %419, %410
  %454 = and i1 %452, %453
  %455 = or i1 %451, %454
  %456 = icmp ult ptr %413, %416
  %457 = icmp ult ptr %382, %415
  %458 = and i1 %456, %457
  %459 = or i1 %455, %458
  %460 = icmp ult ptr %413, %418
  %461 = icmp ult ptr %417, %415
  %462 = and i1 %460, %461
  %463 = or i1 %459, %462
  %464 = icmp ult ptr %413, %420
  %465 = icmp ult ptr %419, %415
  %466 = and i1 %464, %465
  %467 = or i1 %463, %466
  br i1 %467, label %522, label %468

468:                                              ; preds = %401, %468
  %469 = phi i64 [ %519, %468 ], [ 0, %401 ]
  %470 = trunc i64 %469 to i32
  %471 = or i64 %469, 1
  %472 = or i64 %469, 2
  %473 = or i64 %469, 3
  %474 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %469
  %475 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %471
  %476 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %472
  %477 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %473
  %478 = load double, ptr %474, align 8, !tbaa !8, !alias.scope !549
  %479 = load double, ptr %475, align 8, !tbaa !8, !alias.scope !549
  %480 = load double, ptr %476, align 8, !tbaa !8, !alias.scope !549
  %481 = load double, ptr %477, align 8, !tbaa !8, !alias.scope !549
  %482 = insertelement <4 x double> poison, double %478, i64 0
  %483 = insertelement <4 x double> %482, double %479, i64 1
  %484 = insertelement <4 x double> %483, double %480, i64 2
  %485 = insertelement <4 x double> %484, double %481, i64 3
  %486 = add i32 %386, %470
  %487 = zext i32 %486 to i64
  %488 = getelementptr inbounds double, ptr %384, i64 %487
  store <4 x double> %485, ptr %488, align 8, !tbaa !8, !alias.scope !552, !noalias !554
  %489 = getelementptr inbounds [3 x double], ptr %474, i64 0, i64 1
  %490 = getelementptr inbounds [3 x double], ptr %475, i64 0, i64 1
  %491 = getelementptr inbounds [3 x double], ptr %476, i64 0, i64 1
  %492 = getelementptr inbounds [3 x double], ptr %477, i64 0, i64 1
  %493 = load double, ptr %489, align 8, !tbaa !8, !alias.scope !559
  %494 = load double, ptr %490, align 8, !tbaa !8, !alias.scope !559
  %495 = load double, ptr %491, align 8, !tbaa !8, !alias.scope !559
  %496 = load double, ptr %492, align 8, !tbaa !8, !alias.scope !559
  %497 = insertelement <4 x double> poison, double %493, i64 0
  %498 = insertelement <4 x double> %497, double %494, i64 1
  %499 = insertelement <4 x double> %498, double %495, i64 2
  %500 = insertelement <4 x double> %499, double %496, i64 3
  %501 = add i32 %388, %470
  %502 = zext i32 %501 to i64
  %503 = getelementptr inbounds double, ptr %384, i64 %502
  store <4 x double> %500, ptr %503, align 8, !tbaa !8, !alias.scope !560, !noalias !561
  %504 = getelementptr inbounds [3 x double], ptr %474, i64 0, i64 2
  %505 = getelementptr inbounds [3 x double], ptr %475, i64 0, i64 2
  %506 = getelementptr inbounds [3 x double], ptr %476, i64 0, i64 2
  %507 = getelementptr inbounds [3 x double], ptr %477, i64 0, i64 2
  %508 = load double, ptr %504, align 8, !tbaa !8, !alias.scope !562
  %509 = load double, ptr %505, align 8, !tbaa !8, !alias.scope !562
  %510 = load double, ptr %506, align 8, !tbaa !8, !alias.scope !562
  %511 = load double, ptr %507, align 8, !tbaa !8, !alias.scope !562
  %512 = insertelement <4 x double> poison, double %508, i64 0
  %513 = insertelement <4 x double> %512, double %509, i64 1
  %514 = insertelement <4 x double> %513, double %510, i64 2
  %515 = insertelement <4 x double> %514, double %511, i64 3
  %516 = add i32 %390, %470
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds double, ptr %384, i64 %517
  store <4 x double> %515, ptr %518, align 8, !tbaa !8, !alias.scope !563, !noalias !564
  %519 = add nuw i64 %469, 4
  %520 = icmp eq i64 %519, %156
  br i1 %520, label %521, label %468, !llvm.loop !565

521:                                              ; preds = %468
  br i1 %157, label %546, label %522

522:                                              ; preds = %401, %391, %383, %521
  %523 = phi i64 [ 0, %401 ], [ 0, %391 ], [ 0, %383 ], [ %156, %521 ]
  br label %524

524:                                              ; preds = %522, %524
  %525 = phi i64 [ %542, %524 ], [ %523, %522 ]
  %526 = getelementptr inbounds %"class.dealii::Tensor", ptr %382, i64 %525
  %527 = load double, ptr %526, align 8, !tbaa !8
  %528 = trunc i64 %525 to i32
  %529 = add i32 %386, %528
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds double, ptr %384, i64 %530
  store double %527, ptr %531, align 8, !tbaa !8
  %532 = getelementptr inbounds [3 x double], ptr %526, i64 0, i64 1
  %533 = load double, ptr %532, align 8, !tbaa !8
  %534 = add i32 %388, %528
  %535 = zext i32 %534 to i64
  %536 = getelementptr inbounds double, ptr %384, i64 %535
  store double %533, ptr %536, align 8, !tbaa !8
  %537 = getelementptr inbounds [3 x double], ptr %526, i64 0, i64 2
  %538 = load double, ptr %537, align 8, !tbaa !8
  %539 = add i32 %390, %528
  %540 = zext i32 %539 to i64
  %541 = getelementptr inbounds double, ptr %384, i64 %540
  store double %538, ptr %541, align 8, !tbaa !8
  %542 = add nuw nsw i64 %525, 1
  %543 = icmp eq i64 %542, %124
  br i1 %543, label %546, label %524, !llvm.loop !566

544:                                              ; preds = %381
  %545 = icmp eq ptr %382, null
  br i1 %545, label %554, label %546

546:                                              ; preds = %524, %521, %544
  call void @_ZdlPv(ptr noundef nonnull %382) #17
  br label %554

547:                                              ; preds = %355
  %548 = landingpad { ptr, i32 }
          cleanup
  br label %555

549:                                              ; preds = %360
  %550 = landingpad { ptr, i32 }
          cleanup
  %551 = load ptr, ptr %9, align 8, !tbaa !25
  %552 = icmp eq ptr %551, null
  br i1 %552, label %555, label %553

553:                                              ; preds = %549
  call void @_ZdlPv(ptr noundef nonnull %551) #17
  br label %555

554:                                              ; preds = %546, %544
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #15
  br label %793

555:                                              ; preds = %553, %549, %547
  %556 = phi { ptr, i32 } [ %548, %547 ], [ %550, %549 ], [ %550, %553 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #15
  br label %1118

557:                                              ; preds = %186
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #15
  br i1 %105, label %558, label %559

558:                                              ; preds = %557
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false)
  br label %564

559:                                              ; preds = %557
  %560 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %106) #16
          to label %561 unwind label %783

561:                                              ; preds = %559
  store ptr %560, ptr %10, align 8, !tbaa !25
  %562 = getelementptr inbounds %"class.dealii::Tensor", ptr %560, i64 %104
  store ptr %562, ptr %107, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %560, i8 0, i64 %106, i1 false), !tbaa !8
  %563 = getelementptr i8, ptr %560, i64 %106
  br label %564

564:                                              ; preds = %561, %558
  %565 = phi ptr [ null, %558 ], [ %560, %561 ]
  %566 = phi ptr [ null, %558 ], [ %563, %561 ]
  store ptr %566, ptr %108, align 8, !tbaa !23
  %567 = load ptr, ptr %109, align 8, !tbaa !130
  %568 = getelementptr inbounds %"class.std::vector.67", ptr %567, i64 %175
  %569 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %568, i64 0, i32 1
  %570 = load ptr, ptr %569, align 8, !tbaa !23
  %571 = load ptr, ptr %568, align 8, !tbaa !25
  %572 = ptrtoint ptr %570 to i64
  %573 = ptrtoint ptr %571 to i64
  %574 = sub i64 %572, %573
  %575 = sdiv exact i64 %574, 24
  %576 = ptrtoint ptr %566 to i64
  %577 = ptrtoint ptr %565 to i64
  %578 = sub i64 %576, %577
  %579 = sdiv exact i64 %578, 24
  %580 = shl i64 %575, 32
  %581 = shl i64 %579, 32
  %582 = load ptr, ptr %1, align 8, !tbaa !5
  %583 = getelementptr inbounds ptr, ptr %582, i64 4
  %584 = load ptr, ptr %583, align 8
  invoke void %584(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %568, i64 %580, ptr nonnull %10, i64 %581, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 256)
          to label %585 unwind label %785

585:                                              ; preds = %564
  %586 = load ptr, ptr %10, align 8, !tbaa !25
  br i1 %111, label %780, label %587

587:                                              ; preds = %585
  %588 = getelementptr inbounds double, ptr %90, i64 %175
  %589 = load ptr, ptr %112, align 8, !tbaa !35
  %590 = load i32, ptr %113, align 8, !tbaa !34
  %591 = mul i32 %590, %182
  %592 = add i32 %182, 1
  %593 = mul i32 %590, %592
  %594 = add i32 %182, 2
  %595 = mul i32 %590, %594
  br i1 %142, label %752, label %596

596:                                              ; preds = %587
  %597 = xor i32 %591, -1
  %598 = icmp ult i32 %597, %143
  %599 = xor i32 %593, -1
  %600 = icmp ult i32 %599, %144
  %601 = or i1 %600, %145
  %602 = xor i32 %595, -1
  %603 = icmp ult i32 %602, %146
  %604 = or i1 %598, %601
  %605 = or i1 %603, %604
  br i1 %605, label %752, label %606

606:                                              ; preds = %596
  %607 = zext i32 %591 to i64
  %608 = shl nuw nsw i64 %607, 3
  %609 = getelementptr i8, ptr %589, i64 %608
  %610 = getelementptr i8, ptr %589, i64 %110
  %611 = getelementptr i8, ptr %610, i64 %608
  %612 = zext i32 %593 to i64
  %613 = shl nuw nsw i64 %612, 3
  %614 = getelementptr i8, ptr %589, i64 %613
  %615 = getelementptr i8, ptr %610, i64 %613
  %616 = zext i32 %595 to i64
  %617 = shl nuw nsw i64 %616, 3
  %618 = getelementptr i8, ptr %589, i64 %617
  %619 = getelementptr i8, ptr %589, i64 %110
  %620 = getelementptr i8, ptr %619, i64 %617
  %621 = getelementptr i8, ptr %586, i64 %140
  %622 = getelementptr i8, ptr %586, i64 8
  %623 = getelementptr i8, ptr %586, i64 %141
  %624 = getelementptr i8, ptr %586, i64 16
  %625 = getelementptr i8, ptr %586, i64 %139
  %626 = icmp ult ptr %609, %615
  %627 = icmp ult ptr %614, %611
  %628 = and i1 %626, %627
  %629 = icmp ult ptr %609, %620
  %630 = icmp ult ptr %618, %611
  %631 = and i1 %629, %630
  %632 = or i1 %628, %631
  %633 = icmp ult ptr %609, %179
  %634 = icmp ult ptr %177, %611
  %635 = and i1 %633, %634
  %636 = or i1 %632, %635
  %637 = icmp ult ptr %609, %621
  %638 = icmp ult ptr %586, %611
  %639 = and i1 %637, %638
  %640 = or i1 %636, %639
  %641 = icmp ult ptr %609, %623
  %642 = icmp ult ptr %622, %611
  %643 = and i1 %641, %642
  %644 = or i1 %640, %643
  %645 = icmp ult ptr %609, %625
  %646 = icmp ult ptr %624, %611
  %647 = and i1 %645, %646
  %648 = or i1 %644, %647
  %649 = icmp ult ptr %614, %620
  %650 = icmp ult ptr %618, %615
  %651 = and i1 %649, %650
  %652 = or i1 %648, %651
  %653 = icmp ult ptr %614, %179
  %654 = icmp ult ptr %177, %615
  %655 = and i1 %653, %654
  %656 = or i1 %652, %655
  %657 = icmp ult ptr %614, %621
  %658 = icmp ult ptr %586, %615
  %659 = and i1 %657, %658
  %660 = or i1 %656, %659
  %661 = icmp ult ptr %614, %623
  %662 = icmp ult ptr %622, %615
  %663 = and i1 %661, %662
  %664 = or i1 %660, %663
  %665 = icmp ult ptr %614, %625
  %666 = icmp ult ptr %624, %615
  %667 = and i1 %665, %666
  %668 = or i1 %664, %667
  %669 = icmp ult ptr %618, %179
  %670 = icmp ult ptr %177, %620
  %671 = and i1 %669, %670
  %672 = or i1 %668, %671
  %673 = icmp ult ptr %618, %621
  %674 = icmp ult ptr %586, %620
  %675 = and i1 %673, %674
  %676 = or i1 %672, %675
  %677 = icmp ult ptr %618, %623
  %678 = icmp ult ptr %622, %620
  %679 = and i1 %677, %678
  %680 = or i1 %676, %679
  %681 = icmp ult ptr %618, %625
  %682 = icmp ult ptr %624, %620
  %683 = and i1 %681, %682
  %684 = or i1 %680, %683
  br i1 %684, label %752, label %685

685:                                              ; preds = %606
  %686 = load double, ptr %588, align 8, !tbaa !8, !alias.scope !567
  %687 = insertelement <4 x double> poison, double %686, i64 0
  %688 = shufflevector <4 x double> %687, <4 x double> poison, <4 x i32> zeroinitializer
  %689 = load double, ptr %588, align 8, !tbaa !8, !alias.scope !567
  %690 = insertelement <4 x double> poison, double %689, i64 0
  %691 = shufflevector <4 x double> %690, <4 x double> poison, <4 x i32> zeroinitializer
  %692 = load double, ptr %588, align 8, !tbaa !8, !alias.scope !567
  %693 = insertelement <4 x double> poison, double %692, i64 0
  %694 = shufflevector <4 x double> %693, <4 x double> poison, <4 x i32> zeroinitializer
  br label %695

695:                                              ; preds = %695, %685
  %696 = phi i64 [ 0, %685 ], [ %749, %695 ]
  %697 = trunc i64 %696 to i32
  %698 = or i64 %696, 1
  %699 = or i64 %696, 2
  %700 = or i64 %696, 3
  %701 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %696
  %702 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %698
  %703 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %699
  %704 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %700
  %705 = load double, ptr %701, align 8, !tbaa !8, !alias.scope !570
  %706 = load double, ptr %702, align 8, !tbaa !8, !alias.scope !570
  %707 = load double, ptr %703, align 8, !tbaa !8, !alias.scope !570
  %708 = load double, ptr %704, align 8, !tbaa !8, !alias.scope !570
  %709 = insertelement <4 x double> poison, double %705, i64 0
  %710 = insertelement <4 x double> %709, double %706, i64 1
  %711 = insertelement <4 x double> %710, double %707, i64 2
  %712 = insertelement <4 x double> %711, double %708, i64 3
  %713 = fmul <4 x double> %688, %712
  %714 = add i32 %591, %697
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds double, ptr %589, i64 %715
  store <4 x double> %713, ptr %716, align 8, !tbaa !8, !alias.scope !572, !noalias !574
  %717 = getelementptr inbounds [3 x double], ptr %701, i64 0, i64 1
  %718 = getelementptr inbounds [3 x double], ptr %702, i64 0, i64 1
  %719 = getelementptr inbounds [3 x double], ptr %703, i64 0, i64 1
  %720 = getelementptr inbounds [3 x double], ptr %704, i64 0, i64 1
  %721 = load double, ptr %717, align 8, !tbaa !8, !alias.scope !579
  %722 = load double, ptr %718, align 8, !tbaa !8, !alias.scope !579
  %723 = load double, ptr %719, align 8, !tbaa !8, !alias.scope !579
  %724 = load double, ptr %720, align 8, !tbaa !8, !alias.scope !579
  %725 = insertelement <4 x double> poison, double %721, i64 0
  %726 = insertelement <4 x double> %725, double %722, i64 1
  %727 = insertelement <4 x double> %726, double %723, i64 2
  %728 = insertelement <4 x double> %727, double %724, i64 3
  %729 = fmul <4 x double> %691, %728
  %730 = add i32 %593, %697
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds double, ptr %589, i64 %731
  store <4 x double> %729, ptr %732, align 8, !tbaa !8, !alias.scope !580, !noalias !581
  %733 = getelementptr inbounds [3 x double], ptr %701, i64 0, i64 2
  %734 = getelementptr inbounds [3 x double], ptr %702, i64 0, i64 2
  %735 = getelementptr inbounds [3 x double], ptr %703, i64 0, i64 2
  %736 = getelementptr inbounds [3 x double], ptr %704, i64 0, i64 2
  %737 = load double, ptr %733, align 8, !tbaa !8, !alias.scope !582
  %738 = load double, ptr %734, align 8, !tbaa !8, !alias.scope !582
  %739 = load double, ptr %735, align 8, !tbaa !8, !alias.scope !582
  %740 = load double, ptr %736, align 8, !tbaa !8, !alias.scope !582
  %741 = insertelement <4 x double> poison, double %737, i64 0
  %742 = insertelement <4 x double> %741, double %738, i64 1
  %743 = insertelement <4 x double> %742, double %739, i64 2
  %744 = insertelement <4 x double> %743, double %740, i64 3
  %745 = fmul <4 x double> %694, %744
  %746 = add i32 %595, %697
  %747 = zext i32 %746 to i64
  %748 = getelementptr inbounds double, ptr %589, i64 %747
  store <4 x double> %745, ptr %748, align 8, !tbaa !8, !alias.scope !583, !noalias !584
  %749 = add nuw i64 %696, 4
  %750 = icmp eq i64 %749, %148
  br i1 %750, label %751, label %695, !llvm.loop !585

751:                                              ; preds = %695
  br i1 %149, label %782, label %752

752:                                              ; preds = %606, %596, %587, %751
  %753 = phi i64 [ 0, %606 ], [ 0, %596 ], [ 0, %587 ], [ %148, %751 ]
  br label %754

754:                                              ; preds = %752, %754
  %755 = phi i64 [ %778, %754 ], [ %753, %752 ]
  %756 = getelementptr inbounds %"class.dealii::Tensor", ptr %586, i64 %755
  %757 = load double, ptr %588, align 8, !tbaa !8
  %758 = load double, ptr %756, align 8, !tbaa !8
  %759 = fmul double %757, %758
  %760 = trunc i64 %755 to i32
  %761 = add i32 %591, %760
  %762 = zext i32 %761 to i64
  %763 = getelementptr inbounds double, ptr %589, i64 %762
  store double %759, ptr %763, align 8, !tbaa !8
  %764 = load double, ptr %588, align 8, !tbaa !8
  %765 = getelementptr inbounds [3 x double], ptr %756, i64 0, i64 1
  %766 = load double, ptr %765, align 8, !tbaa !8
  %767 = fmul double %764, %766
  %768 = add i32 %593, %760
  %769 = zext i32 %768 to i64
  %770 = getelementptr inbounds double, ptr %589, i64 %769
  store double %767, ptr %770, align 8, !tbaa !8
  %771 = load double, ptr %588, align 8, !tbaa !8
  %772 = getelementptr inbounds [3 x double], ptr %756, i64 0, i64 2
  %773 = load double, ptr %772, align 8, !tbaa !8
  %774 = fmul double %771, %773
  %775 = add i32 %595, %760
  %776 = zext i32 %775 to i64
  %777 = getelementptr inbounds double, ptr %589, i64 %776
  store double %774, ptr %777, align 8, !tbaa !8
  %778 = add nuw nsw i64 %755, 1
  %779 = icmp eq i64 %778, %123
  br i1 %779, label %782, label %754, !llvm.loop !586

780:                                              ; preds = %585
  %781 = icmp eq ptr %586, null
  br i1 %781, label %790, label %782

782:                                              ; preds = %754, %751, %780
  call void @_ZdlPv(ptr noundef nonnull %586) #17
  br label %790

783:                                              ; preds = %559
  %784 = landingpad { ptr, i32 }
          cleanup
  br label %791

785:                                              ; preds = %564
  %786 = landingpad { ptr, i32 }
          cleanup
  %787 = load ptr, ptr %10, align 8, !tbaa !25
  %788 = icmp eq ptr %787, null
  br i1 %788, label %791, label %789

789:                                              ; preds = %785
  call void @_ZdlPv(ptr noundef nonnull %787) #17
  br label %791

790:                                              ; preds = %782, %780
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #15
  br label %793

791:                                              ; preds = %789, %785, %783
  %792 = phi { ptr, i32 } [ %784, %783 ], [ %786, %785 ], [ %786, %789 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #15
  br label %1118

793:                                              ; preds = %333, %330, %188, %554, %790, %186, %174
  %794 = load i32, ptr %7, align 4
  %795 = icmp eq i32 %794, 1
  %796 = select i1 %117, i1 true, i1 %795
  br i1 %796, label %1100, label %797

797:                                              ; preds = %793
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #15
  br i1 %105, label %798, label %799

798:                                              ; preds = %797
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %11, i8 0, i64 24, i1 false)
  br label %806

799:                                              ; preds = %797
  %800 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %118) #16
          to label %801 unwind label %811

801:                                              ; preds = %799
  store ptr %800, ptr %11, align 8, !tbaa !51
  %802 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %800, i64 %104
  store ptr %802, ptr %119, align 8, !tbaa !212
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %800, i8 0, i64 %118, i1 false), !tbaa !8
  %803 = getelementptr i8, ptr %800, i64 %118
  store ptr %803, ptr %120, align 8, !tbaa !49
  %804 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %118) #16
          to label %805 unwind label %813

805:                                              ; preds = %801
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %804, i8 0, i64 %118, i1 false), !tbaa !8
  br label %806

806:                                              ; preds = %805, %798
  %807 = phi ptr [ null, %798 ], [ %800, %805 ]
  %808 = phi ptr [ null, %798 ], [ %803, %805 ]
  %809 = phi ptr [ null, %798 ], [ %804, %805 ]
  %810 = load i32, ptr %91, align 8, !tbaa !519
  switch i32 %810, label %1084 [
    i32 0, label %815
    i32 1, label %883
    i32 2, label %948
    i32 256, label %1012
  ]

811:                                              ; preds = %799
  %812 = landingpad { ptr, i32 }
          cleanup
  br label %1098

813:                                              ; preds = %801
  %814 = landingpad { ptr, i32 }
          cleanup
  br label %1093

815:                                              ; preds = %806
  %816 = load ptr, ptr %121, align 8, !tbaa !133
  %817 = getelementptr inbounds %"class.std::vector.72", ptr %816, i64 %175
  %818 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %817, i64 0, i32 1
  %819 = load ptr, ptr %818, align 8, !tbaa !49
  %820 = load ptr, ptr %817, align 8, !tbaa !51
  %821 = ptrtoint ptr %819 to i64
  %822 = ptrtoint ptr %820 to i64
  %823 = sub i64 %821, %822
  %824 = sdiv exact i64 %823, 72
  %825 = ptrtoint ptr %808 to i64
  %826 = ptrtoint ptr %807 to i64
  %827 = sub i64 %825, %826
  %828 = sdiv exact i64 %827, 72
  %829 = shl i64 %824, 32
  %830 = shl i64 %828, 32
  %831 = load ptr, ptr %1, align 8, !tbaa !5
  %832 = getelementptr inbounds ptr, ptr %831, i64 5
  %833 = load ptr, ptr %832, align 8
  invoke void %833(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %817, i64 %829, ptr nonnull %11, i64 %830, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 1)
          to label %834 unwind label %880

834:                                              ; preds = %815
  br i1 %111, label %1084, label %835

835:                                              ; preds = %834
  %836 = load ptr, ptr %11, align 8, !tbaa !51
  %837 = load ptr, ptr %122, align 8, !tbaa !130
  %838 = zext i32 %182 to i64
  %839 = getelementptr inbounds %"class.std::vector.67", ptr %837, i64 %838
  %840 = load ptr, ptr %839, align 8, !tbaa !25
  %841 = add i32 %182, 1
  %842 = zext i32 %841 to i64
  %843 = getelementptr inbounds %"class.std::vector.67", ptr %837, i64 %842
  %844 = load ptr, ptr %843, align 8, !tbaa !25
  %845 = add i32 %182, 2
  %846 = zext i32 %845 to i64
  %847 = getelementptr inbounds %"class.std::vector.67", ptr %837, i64 %846
  %848 = load ptr, ptr %847, align 8, !tbaa !25
  br label %849

849:                                              ; preds = %835, %849
  %850 = phi i64 [ 0, %835 ], [ %878, %849 ]
  %851 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %836, i64 %850
  %852 = getelementptr inbounds %"class.dealii::Tensor", ptr %840, i64 %850
  %853 = load double, ptr %851, align 8, !tbaa !8
  store double %853, ptr %852, align 8, !tbaa !8
  %854 = getelementptr inbounds [3 x double], ptr %851, i64 0, i64 1
  %855 = load double, ptr %854, align 8, !tbaa !8
  %856 = getelementptr inbounds [3 x double], ptr %852, i64 0, i64 1
  store double %855, ptr %856, align 8, !tbaa !8
  %857 = getelementptr inbounds [3 x double], ptr %851, i64 0, i64 2
  %858 = load double, ptr %857, align 8, !tbaa !8
  %859 = getelementptr inbounds [3 x double], ptr %852, i64 0, i64 2
  store double %858, ptr %859, align 8, !tbaa !8
  %860 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 1
  %861 = getelementptr inbounds %"class.dealii::Tensor", ptr %844, i64 %850
  %862 = load double, ptr %860, align 8, !tbaa !8
  store double %862, ptr %861, align 8, !tbaa !8
  %863 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 1, i32 0, i64 1
  %864 = load double, ptr %863, align 8, !tbaa !8
  %865 = getelementptr inbounds [3 x double], ptr %861, i64 0, i64 1
  store double %864, ptr %865, align 8, !tbaa !8
  %866 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 1, i32 0, i64 2
  %867 = load double, ptr %866, align 8, !tbaa !8
  %868 = getelementptr inbounds [3 x double], ptr %861, i64 0, i64 2
  store double %867, ptr %868, align 8, !tbaa !8
  %869 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 2
  %870 = getelementptr inbounds %"class.dealii::Tensor", ptr %848, i64 %850
  %871 = load double, ptr %869, align 8, !tbaa !8
  store double %871, ptr %870, align 8, !tbaa !8
  %872 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 2, i32 0, i64 1
  %873 = load double, ptr %872, align 8, !tbaa !8
  %874 = getelementptr inbounds [3 x double], ptr %870, i64 0, i64 1
  store double %873, ptr %874, align 8, !tbaa !8
  %875 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %851, i64 0, i64 2, i32 0, i64 2
  %876 = load double, ptr %875, align 8, !tbaa !8
  %877 = getelementptr inbounds [3 x double], ptr %870, i64 0, i64 2
  store double %876, ptr %877, align 8, !tbaa !8
  %878 = add nuw nsw i64 %850, 1
  %879 = icmp eq i64 %878, %129
  br i1 %879, label %1084, label %849

880:                                              ; preds = %1012, %948, %883, %815
  %881 = landingpad { ptr, i32 }
          cleanup
  %882 = icmp eq ptr %809, null
  br i1 %882, label %1093, label %1092

883:                                              ; preds = %806
  %884 = load ptr, ptr %121, align 8, !tbaa !133
  %885 = getelementptr inbounds %"class.std::vector.72", ptr %884, i64 %175
  %886 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %885, i64 0, i32 1
  %887 = load ptr, ptr %886, align 8, !tbaa !49
  %888 = load ptr, ptr %885, align 8, !tbaa !51
  %889 = ptrtoint ptr %887 to i64
  %890 = ptrtoint ptr %888 to i64
  %891 = sub i64 %889, %890
  %892 = sdiv exact i64 %891, 72
  %893 = ptrtoint ptr %808 to i64
  %894 = ptrtoint ptr %807 to i64
  %895 = sub i64 %893, %894
  %896 = sdiv exact i64 %895, 72
  %897 = shl i64 %892, 32
  %898 = shl i64 %896, 32
  %899 = load ptr, ptr %1, align 8, !tbaa !5
  %900 = getelementptr inbounds ptr, ptr %899, i64 5
  %901 = load ptr, ptr %900, align 8
  invoke void %901(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %885, i64 %897, ptr nonnull %11, i64 %898, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 3)
          to label %902 unwind label %880

902:                                              ; preds = %883
  br i1 %111, label %1084, label %903

903:                                              ; preds = %902
  %904 = load ptr, ptr %11, align 8, !tbaa !51
  %905 = load ptr, ptr %122, align 8, !tbaa !130
  %906 = zext i32 %182 to i64
  %907 = getelementptr inbounds %"class.std::vector.67", ptr %905, i64 %906
  %908 = load ptr, ptr %907, align 8, !tbaa !25
  %909 = add i32 %182, 1
  %910 = zext i32 %909 to i64
  %911 = getelementptr inbounds %"class.std::vector.67", ptr %905, i64 %910
  %912 = load ptr, ptr %911, align 8, !tbaa !25
  %913 = add i32 %182, 2
  %914 = zext i32 %913 to i64
  %915 = getelementptr inbounds %"class.std::vector.67", ptr %905, i64 %914
  %916 = load ptr, ptr %915, align 8, !tbaa !25
  br label %917

917:                                              ; preds = %903, %917
  %918 = phi i64 [ 0, %903 ], [ %946, %917 ]
  %919 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %904, i64 %918
  %920 = getelementptr inbounds %"class.dealii::Tensor", ptr %908, i64 %918
  %921 = load double, ptr %919, align 8, !tbaa !8
  store double %921, ptr %920, align 8, !tbaa !8
  %922 = getelementptr inbounds [3 x double], ptr %919, i64 0, i64 1
  %923 = load double, ptr %922, align 8, !tbaa !8
  %924 = getelementptr inbounds [3 x double], ptr %920, i64 0, i64 1
  store double %923, ptr %924, align 8, !tbaa !8
  %925 = getelementptr inbounds [3 x double], ptr %919, i64 0, i64 2
  %926 = load double, ptr %925, align 8, !tbaa !8
  %927 = getelementptr inbounds [3 x double], ptr %920, i64 0, i64 2
  store double %926, ptr %927, align 8, !tbaa !8
  %928 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 1
  %929 = getelementptr inbounds %"class.dealii::Tensor", ptr %912, i64 %918
  %930 = load double, ptr %928, align 8, !tbaa !8
  store double %930, ptr %929, align 8, !tbaa !8
  %931 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 1, i32 0, i64 1
  %932 = load double, ptr %931, align 8, !tbaa !8
  %933 = getelementptr inbounds [3 x double], ptr %929, i64 0, i64 1
  store double %932, ptr %933, align 8, !tbaa !8
  %934 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 1, i32 0, i64 2
  %935 = load double, ptr %934, align 8, !tbaa !8
  %936 = getelementptr inbounds [3 x double], ptr %929, i64 0, i64 2
  store double %935, ptr %936, align 8, !tbaa !8
  %937 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 2
  %938 = getelementptr inbounds %"class.dealii::Tensor", ptr %916, i64 %918
  %939 = load double, ptr %937, align 8, !tbaa !8
  store double %939, ptr %938, align 8, !tbaa !8
  %940 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 2, i32 0, i64 1
  %941 = load double, ptr %940, align 8, !tbaa !8
  %942 = getelementptr inbounds [3 x double], ptr %938, i64 0, i64 1
  store double %941, ptr %942, align 8, !tbaa !8
  %943 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %919, i64 0, i64 2, i32 0, i64 2
  %944 = load double, ptr %943, align 8, !tbaa !8
  %945 = getelementptr inbounds [3 x double], ptr %938, i64 0, i64 2
  store double %944, ptr %945, align 8, !tbaa !8
  %946 = add nuw nsw i64 %918, 1
  %947 = icmp eq i64 %946, %128
  br i1 %947, label %1084, label %917

948:                                              ; preds = %806
  %949 = load ptr, ptr %121, align 8, !tbaa !133
  %950 = getelementptr inbounds %"class.std::vector.72", ptr %949, i64 %175
  %951 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %950, i64 0, i32 1
  %952 = load ptr, ptr %951, align 8, !tbaa !49
  %953 = load ptr, ptr %950, align 8, !tbaa !51
  %954 = ptrtoint ptr %952 to i64
  %955 = ptrtoint ptr %953 to i64
  %956 = sub i64 %954, %955
  %957 = sdiv exact i64 %956, 72
  %958 = ptrtoint ptr %808 to i64
  %959 = ptrtoint ptr %807 to i64
  %960 = sub i64 %958, %959
  %961 = sdiv exact i64 %960, 72
  %962 = shl i64 %957, 32
  %963 = shl i64 %961, 32
  %964 = load ptr, ptr %1, align 8, !tbaa !5
  %965 = getelementptr inbounds ptr, ptr %964, i64 5
  %966 = load ptr, ptr %965, align 8
  invoke void %966(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %950, i64 %962, ptr nonnull %11, i64 %963, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 4)
          to label %967 unwind label %880

967:                                              ; preds = %948
  br i1 %111, label %1084, label %968

968:                                              ; preds = %967
  %969 = load ptr, ptr %122, align 8, !tbaa !130
  %970 = zext i32 %182 to i64
  %971 = getelementptr inbounds %"class.std::vector.67", ptr %969, i64 %970
  %972 = load ptr, ptr %971, align 8, !tbaa !25
  %973 = add i32 %182, 1
  %974 = zext i32 %973 to i64
  %975 = getelementptr inbounds %"class.std::vector.67", ptr %969, i64 %974
  %976 = load ptr, ptr %975, align 8, !tbaa !25
  %977 = add i32 %182, 2
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds %"class.std::vector.67", ptr %969, i64 %978
  %980 = load ptr, ptr %979, align 8, !tbaa !25
  br label %981

981:                                              ; preds = %968, %981
  %982 = phi i64 [ 0, %968 ], [ %1010, %981 ]
  %983 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %809, i64 %982
  %984 = getelementptr inbounds %"class.dealii::Tensor", ptr %972, i64 %982
  %985 = load double, ptr %983, align 8, !tbaa !8
  store double %985, ptr %984, align 8, !tbaa !8
  %986 = getelementptr inbounds [3 x double], ptr %983, i64 0, i64 1
  %987 = load double, ptr %986, align 8, !tbaa !8
  %988 = getelementptr inbounds [3 x double], ptr %984, i64 0, i64 1
  store double %987, ptr %988, align 8, !tbaa !8
  %989 = getelementptr inbounds [3 x double], ptr %983, i64 0, i64 2
  %990 = load double, ptr %989, align 8, !tbaa !8
  %991 = getelementptr inbounds [3 x double], ptr %984, i64 0, i64 2
  store double %990, ptr %991, align 8, !tbaa !8
  %992 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 1
  %993 = getelementptr inbounds %"class.dealii::Tensor", ptr %976, i64 %982
  %994 = load double, ptr %992, align 8, !tbaa !8
  store double %994, ptr %993, align 8, !tbaa !8
  %995 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 1, i32 0, i64 1
  %996 = load double, ptr %995, align 8, !tbaa !8
  %997 = getelementptr inbounds [3 x double], ptr %993, i64 0, i64 1
  store double %996, ptr %997, align 8, !tbaa !8
  %998 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 1, i32 0, i64 2
  %999 = load double, ptr %998, align 8, !tbaa !8
  %1000 = getelementptr inbounds [3 x double], ptr %993, i64 0, i64 2
  store double %999, ptr %1000, align 8, !tbaa !8
  %1001 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 2
  %1002 = getelementptr inbounds %"class.dealii::Tensor", ptr %980, i64 %982
  %1003 = load double, ptr %1001, align 8, !tbaa !8
  store double %1003, ptr %1002, align 8, !tbaa !8
  %1004 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 2, i32 0, i64 1
  %1005 = load double, ptr %1004, align 8, !tbaa !8
  %1006 = getelementptr inbounds [3 x double], ptr %1002, i64 0, i64 1
  store double %1005, ptr %1006, align 8, !tbaa !8
  %1007 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %983, i64 0, i64 2, i32 0, i64 2
  %1008 = load double, ptr %1007, align 8, !tbaa !8
  %1009 = getelementptr inbounds [3 x double], ptr %1002, i64 0, i64 2
  store double %1008, ptr %1009, align 8, !tbaa !8
  %1010 = add nuw nsw i64 %982, 1
  %1011 = icmp eq i64 %1010, %127
  br i1 %1011, label %1086, label %981

1012:                                             ; preds = %806
  %1013 = load ptr, ptr %121, align 8, !tbaa !133
  %1014 = getelementptr inbounds %"class.std::vector.72", ptr %1013, i64 %175
  %1015 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %1014, i64 0, i32 1
  %1016 = load ptr, ptr %1015, align 8, !tbaa !49
  %1017 = load ptr, ptr %1014, align 8, !tbaa !51
  %1018 = ptrtoint ptr %1016 to i64
  %1019 = ptrtoint ptr %1017 to i64
  %1020 = sub i64 %1018, %1019
  %1021 = sdiv exact i64 %1020, 72
  %1022 = ptrtoint ptr %808 to i64
  %1023 = ptrtoint ptr %807 to i64
  %1024 = sub i64 %1022, %1023
  %1025 = sdiv exact i64 %1024, 72
  %1026 = shl i64 %1021, 32
  %1027 = shl i64 %1025, 32
  %1028 = load ptr, ptr %1, align 8, !tbaa !5
  %1029 = getelementptr inbounds ptr, ptr %1028, i64 5
  %1030 = load ptr, ptr %1029, align 8
  invoke void %1030(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr nonnull %1014, i64 %1026, ptr nonnull %11, i64 %1027, ptr noundef nonnull align 8 dereferenceable(185) %4, i32 noundef 256)
          to label %1031 unwind label %880

1031:                                             ; preds = %1012
  br i1 %111, label %1084, label %1032

1032:                                             ; preds = %1031
  %1033 = getelementptr inbounds double, ptr %90, i64 %175
  %1034 = load ptr, ptr %11, align 8, !tbaa !51
  %1035 = load ptr, ptr %122, align 8, !tbaa !130
  %1036 = zext i32 %182 to i64
  %1037 = getelementptr inbounds %"class.std::vector.67", ptr %1035, i64 %1036
  %1038 = load ptr, ptr %1037, align 8, !tbaa !25
  %1039 = add i32 %182, 1
  %1040 = zext i32 %1039 to i64
  %1041 = getelementptr inbounds %"class.std::vector.67", ptr %1035, i64 %1040
  %1042 = load ptr, ptr %1041, align 8, !tbaa !25
  %1043 = add i32 %182, 2
  %1044 = zext i32 %1043 to i64
  %1045 = getelementptr inbounds %"class.std::vector.67", ptr %1035, i64 %1044
  %1046 = load ptr, ptr %1045, align 8, !tbaa !25
  br label %1047

1047:                                             ; preds = %1032, %1047
  %1048 = phi i64 [ 0, %1032 ], [ %1082, %1047 ]
  %1049 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %1034, i64 %1048
  %1050 = load double, ptr %1033, align 8, !tbaa !8
  %1051 = getelementptr inbounds [3 x double], ptr %1049, i64 0, i64 2
  %1052 = load double, ptr %1051, align 8, !tbaa !8, !noalias !587
  %1053 = fmul double %1050, %1052
  %1054 = getelementptr inbounds %"class.dealii::Tensor", ptr %1038, i64 %1048
  %1055 = load <2 x double>, ptr %1049, align 8, !tbaa !8, !noalias !587
  %1056 = insertelement <2 x double> poison, double %1050, i64 0
  %1057 = shufflevector <2 x double> %1056, <2 x double> poison, <2 x i32> zeroinitializer
  %1058 = fmul <2 x double> %1057, %1055
  store <2 x double> %1058, ptr %1054, align 8, !tbaa !8
  %1059 = getelementptr inbounds [3 x double], ptr %1054, i64 0, i64 2
  store double %1053, ptr %1059, align 8, !tbaa !8
  %1060 = load double, ptr %1033, align 8, !tbaa !8
  %1061 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %1049, i64 0, i64 1
  %1062 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %1049, i64 0, i64 1, i32 0, i64 2
  %1063 = load double, ptr %1062, align 8, !tbaa !8, !noalias !587
  %1064 = fmul double %1060, %1063
  %1065 = getelementptr inbounds %"class.dealii::Tensor", ptr %1042, i64 %1048
  %1066 = load <2 x double>, ptr %1061, align 8, !tbaa !8, !noalias !587
  %1067 = insertelement <2 x double> poison, double %1060, i64 0
  %1068 = shufflevector <2 x double> %1067, <2 x double> poison, <2 x i32> zeroinitializer
  %1069 = fmul <2 x double> %1068, %1066
  store <2 x double> %1069, ptr %1065, align 8, !tbaa !8
  %1070 = getelementptr inbounds [3 x double], ptr %1065, i64 0, i64 2
  store double %1064, ptr %1070, align 8, !tbaa !8
  %1071 = load double, ptr %1033, align 8, !tbaa !8
  %1072 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %1049, i64 0, i64 2
  %1073 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %1049, i64 0, i64 2, i32 0, i64 2
  %1074 = load double, ptr %1073, align 8, !tbaa !8, !noalias !587
  %1075 = fmul double %1071, %1074
  %1076 = getelementptr inbounds %"class.dealii::Tensor", ptr %1046, i64 %1048
  %1077 = load <2 x double>, ptr %1072, align 8, !tbaa !8, !noalias !587
  %1078 = insertelement <2 x double> poison, double %1071, i64 0
  %1079 = shufflevector <2 x double> %1078, <2 x double> poison, <2 x i32> zeroinitializer
  %1080 = fmul <2 x double> %1079, %1077
  store <2 x double> %1080, ptr %1076, align 8, !tbaa !8
  %1081 = getelementptr inbounds [3 x double], ptr %1076, i64 0, i64 2
  store double %1075, ptr %1081, align 8, !tbaa !8
  %1082 = add nuw nsw i64 %1048, 1
  %1083 = icmp eq i64 %1082, %126
  br i1 %1083, label %1084, label %1047

1084:                                             ; preds = %1047, %917, %849, %1031, %967, %902, %834, %806
  %1085 = icmp eq ptr %809, null
  br i1 %1085, label %1087, label %1086

1086:                                             ; preds = %981, %1084
  call void @_ZdlPv(ptr noundef nonnull %809) #17
  br label %1087

1087:                                             ; preds = %1086, %1084
  %1088 = load ptr, ptr %11, align 8, !tbaa !51
  %1089 = icmp eq ptr %1088, null
  br i1 %1089, label %1091, label %1090

1090:                                             ; preds = %1087
  call void @_ZdlPv(ptr noundef nonnull %1088) #17
  br label %1091

1091:                                             ; preds = %1090, %1087
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #15
  br label %1100

1092:                                             ; preds = %880
  call void @_ZdlPv(ptr noundef nonnull %809) #17
  br label %1093

1093:                                             ; preds = %1092, %880, %813
  %1094 = phi { ptr, i32 } [ %814, %813 ], [ %881, %880 ], [ %881, %1092 ]
  %1095 = load ptr, ptr %11, align 8, !tbaa !51
  %1096 = icmp eq ptr %1095, null
  br i1 %1096, label %1098, label %1097

1097:                                             ; preds = %1093
  call void @_ZdlPv(ptr noundef nonnull %1095) #17
  br label %1098

1098:                                             ; preds = %1097, %1093, %811
  %1099 = phi { ptr, i32 } [ %812, %811 ], [ %1094, %1093 ], [ %1094, %1097 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #15
  br label %1118

1100:                                             ; preds = %1091, %793
  %1101 = add nuw nsw i64 %175, 1
  %1102 = load i32, ptr %30, align 8, !tbaa !129
  %1103 = zext i32 %1102 to i64
  %1104 = icmp ult i64 %1101, %1103
  br i1 %1104, label %174, label %166

1105:                                             ; preds = %168
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #15
  invoke void @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC1Ev(ptr noundef nonnull align 4 dereferenceable(4) %13)
          to label %1106 unwind label %1112

1106:                                             ; preds = %1105
  %1107 = invoke i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor4cellEv()
          to label %1108 unwind label %1112

1108:                                             ; preds = %1106
  store i32 %1107, ptr %12, align 4
  %1109 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %12)
          to label %1110 unwind label %1112

1110:                                             ; preds = %1108
  invoke void @_ZNK6dealii13FiniteElementILi3ELi3EE11compute_2ndERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRNS3_16InternalDataBaseERNS1_16InternalDataBaseERNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(728) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %1109, ptr noundef nonnull align 8 dereferenceable(185) %4, ptr noundef nonnull align 8 dereferenceable(216) %5, ptr noundef nonnull align 8 dereferenceable(436) %6)
          to label %1111 unwind label %1112

1111:                                             ; preds = %1110
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #15
  br label %1114

1112:                                             ; preds = %1110, %1108, %1106, %1105
  %1113 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #15
  br label %1118

1114:                                             ; preds = %1111, %168
  %1115 = icmp eq ptr %90, null
  br i1 %1115, label %1117, label %1116

1116:                                             ; preds = %1114
  call void @_ZdlPv(ptr noundef nonnull %90) #17
  br label %1117

1117:                                             ; preds = %1114, %1116
  ret void

1118:                                             ; preds = %555, %791, %1098, %1112
  %1119 = phi { ptr, i32 } [ %1113, %1112 ], [ %1099, %1098 ], [ %792, %791 ], [ %556, %555 ]
  %1120 = icmp eq ptr %90, null
  br i1 %1120, label %1122, label %1121

1121:                                             ; preds = %1118
  call void @_ZdlPv(ptr noundef nonnull %90) #17
  br label %1122

1122:                                             ; preds = %1121, %1118
  resume { ptr, i32 } %1119
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE19fill_fe_face_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(1112) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %3, ptr noundef nonnull align 8 dereferenceable(128) %4, ptr noundef nonnull align 8 dereferenceable(185) %5, ptr noundef nonnull align 8 dereferenceable(185) %6, ptr noundef nonnull align 8 dereferenceable(436) %7) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %9 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %10 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %11 = alloca %"class.std::vector.67", align 8
  %12 = alloca %"class.std::vector.67", align 8
  %13 = alloca %"class.std::vector.72", align 8
  %14 = getelementptr inbounds %"class.dealii::Quadrature.110", ptr %4, i64 0, i32 3
  %15 = getelementptr inbounds %"class.dealii::Quadrature.110", ptr %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !127
  %17 = load ptr, ptr %14, align 8, !tbaa !128
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  %21 = lshr exact i64 %20, 3
  %22 = trunc i64 %21 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #15
  call void @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC1Ev(ptr noundef nonnull align 4 dereferenceable(4) %9)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #15
  %23 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !216
  %25 = getelementptr inbounds %"class.dealii::Triangulation", ptr %24, i64 0, i32 1
  %26 = load i32, ptr %2, align 8, !tbaa !218
  %27 = sext i32 %26 to i64
  %28 = load ptr, ptr %25, align 8, !tbaa !219
  %29 = getelementptr inbounds ptr, ptr %28, i64 %27
  %30 = load ptr, ptr %29, align 8, !tbaa !33
  %31 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 1
  %32 = load i32, ptr %31, align 4, !tbaa !221
  %33 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %30, i64 0, i32 4, i32 1
  %34 = mul i32 %32, 6
  %35 = add i32 %34, %3
  %36 = load ptr, ptr %33, align 8, !tbaa !222
  %37 = lshr i32 %35, 6
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i64, ptr %36, i64 %38
  %40 = and i32 %35, 63
  %41 = zext i32 %40 to i64
  %42 = shl nuw i64 1, %41
  %43 = load i64, ptr %39, align 8, !tbaa !223
  %44 = and i64 %42, %43
  %45 = icmp ne i64 %44, 0
  %46 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %30, i64 0, i32 4, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !222
  %48 = getelementptr inbounds i64, ptr %47, i64 %38
  %49 = load i64, ptr %48, align 8, !tbaa !223
  %50 = and i64 %42, %49
  %51 = icmp ne i64 %50, 0
  %52 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %30, i64 0, i32 4, i32 3
  %53 = load ptr, ptr %52, align 8, !tbaa !222
  %54 = getelementptr inbounds i64, ptr %53, i64 %38
  %55 = load i64, ptr %54, align 8, !tbaa !223
  %56 = and i64 %55, %42
  %57 = icmp ne i64 %56, 0
  %58 = call i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor4faceEjbbbj(i32 noundef %3, i1 noundef zeroext %45, i1 noundef zeroext %51, i1 noundef zeroext %57, i32 noundef %22)
  store i32 %58, ptr %10, align 4
  %59 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %6, i64 0, i32 2
  %60 = load i32, ptr %59, align 4, !tbaa !118
  %61 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %6, i64 0, i32 3
  %62 = load i32, ptr %61, align 8, !tbaa !125
  %63 = or i32 %62, %60
  %64 = getelementptr inbounds i8, ptr %0, i64 112
  %65 = load i32, ptr %64, align 8, !tbaa !129
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %180, label %67

67:                                               ; preds = %8
  %68 = zext i32 %65 to i64
  %69 = shl nuw nsw i64 %68, 3
  %70 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %69) #16
  %71 = getelementptr inbounds double, ptr %70, i64 %68
  %72 = add nuw nsw i64 %68, 2305843009213693951
  %73 = and i64 %72, 2305843009213693951
  %74 = add nuw nsw i64 %73, 1
  %75 = icmp ult i64 %73, 15
  br i1 %75, label %91, label %76

76:                                               ; preds = %67
  %77 = and i64 %74, 4611686018427387888
  %78 = shl i64 %77, 3
  %79 = getelementptr i8, ptr %70, i64 %78
  br label %80

80:                                               ; preds = %80, %76
  %81 = phi i64 [ 0, %76 ], [ %87, %80 ]
  %82 = shl i64 %81, 3
  %83 = getelementptr i8, ptr %70, i64 %82
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %83, align 8, !tbaa !8
  %84 = getelementptr double, ptr %83, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %84, align 8, !tbaa !8
  %85 = getelementptr double, ptr %83, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %85, align 8, !tbaa !8
  %86 = getelementptr double, ptr %83, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %86, align 8, !tbaa !8
  %87 = add nuw i64 %81, 16
  %88 = icmp eq i64 %87, %77
  br i1 %88, label %89, label %80, !llvm.loop !590

89:                                               ; preds = %80
  %90 = icmp eq i64 %74, %77
  br i1 %90, label %97, label %91

91:                                               ; preds = %67, %89
  %92 = phi ptr [ %70, %67 ], [ %79, %89 ]
  br label %93

93:                                               ; preds = %91, %93
  %94 = phi ptr [ %95, %93 ], [ %92, %91 ]
  store double 1.000000e+00, ptr %94, align 8, !tbaa !8
  %95 = getelementptr inbounds double, ptr %94, i64 1
  %96 = icmp eq ptr %95, %71
  br i1 %96, label %97, label %93, !llvm.loop !591

97:                                               ; preds = %93, %89
  %98 = add nuw nsw i64 %68, 2305843009213693951
  %99 = and i64 %98, 2305843009213693951
  %100 = add nuw nsw i64 %99, 1
  %101 = icmp ult i64 %99, 15
  br i1 %101, label %117, label %102

102:                                              ; preds = %97
  %103 = and i64 %100, 4611686018427387888
  %104 = shl i64 %103, 3
  %105 = getelementptr i8, ptr %70, i64 %104
  br label %106

106:                                              ; preds = %106, %102
  %107 = phi i64 [ 0, %102 ], [ %113, %106 ]
  %108 = shl i64 %107, 3
  %109 = getelementptr i8, ptr %70, i64 %108
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %109, align 8, !tbaa !8
  %110 = getelementptr double, ptr %109, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %110, align 8, !tbaa !8
  %111 = getelementptr double, ptr %109, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %111, align 8, !tbaa !8
  %112 = getelementptr double, ptr %109, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %112, align 8, !tbaa !8
  %113 = add nuw i64 %107, 16
  %114 = icmp eq i64 %113, %103
  br i1 %114, label %115, label %106, !llvm.loop !592

115:                                              ; preds = %106
  %116 = icmp eq i64 %100, %103
  br i1 %116, label %123, label %117

117:                                              ; preds = %97, %115
  %118 = phi ptr [ %70, %97 ], [ %105, %115 ]
  br label %119

119:                                              ; preds = %117, %119
  %120 = phi ptr [ %121, %119 ], [ %118, %117 ]
  store double 1.000000e+00, ptr %120, align 8, !tbaa !8
  %121 = getelementptr inbounds double, ptr %120, i64 1
  %122 = icmp eq ptr %121, %71
  br i1 %122, label %123, label %119, !llvm.loop !593

123:                                              ; preds = %119, %115
  br i1 %66, label %180, label %124

124:                                              ; preds = %123
  %125 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %7, i64 0, i32 14
  %126 = and i32 %63, 1
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 1
  %129 = and i64 %21, 4294967295
  %130 = icmp eq i64 %129, 0
  %131 = mul nuw nsw i64 %129, 24
  %132 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %12, i64 0, i32 2
  %133 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %12, i64 0, i32 1
  %134 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %6, i64 0, i32 1
  %135 = shl nuw i64 %129, 32
  %136 = icmp eq i32 %22, 0
  %137 = getelementptr inbounds %"class.dealii::TableBase", ptr %7, i64 0, i32 1
  %138 = getelementptr inbounds %"class.dealii::TableBase", ptr %7, i64 0, i32 3, i32 0, i32 0, i64 1
  %139 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %11, i64 0, i32 2
  %140 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %11, i64 0, i32 1
  %141 = and i32 %63, 2
  %142 = icmp eq i32 %141, 0
  %143 = mul nuw nsw i64 %129, 72
  %144 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %13, i64 0, i32 2
  %145 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %13, i64 0, i32 1
  %146 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %6, i64 0, i32 2
  %147 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %7, i64 0, i32 1
  %148 = and i64 %21, 4294967295
  %149 = and i64 %21, 4294967295
  %150 = and i64 %21, 4294967295
  %151 = and i64 %21, 4294967295
  %152 = and i64 %21, 4294967295
  %153 = and i64 %21, 4294967295
  %154 = add nsw i64 %148, -1
  %155 = shl nuw nsw i64 %148, 3
  %156 = mul nuw nsw i64 %148, 24
  %157 = add nsw i64 %156, -16
  %158 = add nsw i64 %156, -8
  %159 = add nsw i64 %148, -1
  %160 = shl nuw nsw i64 %148, 3
  %161 = mul nuw nsw i64 %148, 24
  %162 = add nsw i64 %161, -16
  %163 = add nsw i64 %161, -8
  %164 = icmp ult i64 %148, 40
  %165 = trunc i64 %159 to i32
  %166 = trunc i64 %159 to i32
  %167 = icmp ugt i64 %159, 4294967295
  %168 = trunc i64 %159 to i32
  %169 = and i64 %21, 3
  %170 = sub nsw i64 %148, %169
  %171 = icmp eq i64 %169, 0
  %172 = icmp ult i64 %148, 60
  %173 = trunc i64 %154 to i32
  %174 = trunc i64 %154 to i32
  %175 = icmp ugt i64 %154, 4294967295
  %176 = trunc i64 %154 to i32
  %177 = and i64 %21, 3
  %178 = sub nsw i64 %148, %177
  %179 = icmp eq i64 %177, 0
  br label %184

180:                                              ; preds = %980, %8, %123
  %181 = phi ptr [ %70, %123 ], [ null, %8 ], [ %70, %980 ]
  %182 = and i32 %63, 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %988, label %985

184:                                              ; preds = %124, %980
  %185 = phi i64 [ 0, %124 ], [ %981, %980 ]
  %186 = shl nuw nsw i64 %185, 3
  %187 = getelementptr i8, ptr %70, i64 %186
  %188 = add nuw i64 %186, 8
  %189 = getelementptr i8, ptr %70, i64 %188
  %190 = load ptr, ptr %125, align 8, !tbaa !154
  %191 = getelementptr inbounds i32, ptr %190, i64 %185
  %192 = load i32, ptr %191, align 4, !tbaa !34
  br i1 %127, label %685, label %193

193:                                              ; preds = %184
  %194 = load i32, ptr %128, align 8, !tbaa !519
  switch i32 %194, label %685 [
    i32 0, label %195
    i32 1, label %250
    i32 2, label %250
    i32 256, label %452
  ]

195:                                              ; preds = %193
  br i1 %136, label %685, label %196

196:                                              ; preds = %195
  %197 = add i32 %192, 1
  %198 = add i32 %192, 2
  br label %199

199:                                              ; preds = %196, %233
  %200 = phi i32 [ %246, %233 ], [ 0, %196 ]
  %201 = load ptr, ptr %134, align 8, !tbaa !130
  %202 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %203 unwind label %248

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.std::vector.67", ptr %201, i64 %185
  %205 = add i32 %202, %200
  %206 = zext i32 %205 to i64
  %207 = load ptr, ptr %204, align 8, !tbaa !25
  %208 = getelementptr inbounds %"class.dealii::Tensor", ptr %207, i64 %206
  %209 = load double, ptr %208, align 8, !tbaa !8
  %210 = load ptr, ptr %137, align 8, !tbaa !35
  %211 = load i32, ptr %138, align 8, !tbaa !34
  %212 = mul i32 %211, %192
  %213 = add i32 %212, %200
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds double, ptr %210, i64 %214
  store double %209, ptr %215, align 8, !tbaa !8
  %216 = load ptr, ptr %134, align 8, !tbaa !130
  %217 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %218 unwind label %248

218:                                              ; preds = %203
  %219 = getelementptr inbounds %"class.std::vector.67", ptr %216, i64 %185
  %220 = add i32 %217, %200
  %221 = zext i32 %220 to i64
  %222 = load ptr, ptr %219, align 8, !tbaa !25
  %223 = getelementptr inbounds %"class.dealii::Tensor", ptr %222, i64 %221, i32 0, i64 1
  %224 = load double, ptr %223, align 8, !tbaa !8
  %225 = load ptr, ptr %137, align 8, !tbaa !35
  %226 = load i32, ptr %138, align 8, !tbaa !34
  %227 = mul i32 %226, %197
  %228 = add i32 %227, %200
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds double, ptr %225, i64 %229
  store double %224, ptr %230, align 8, !tbaa !8
  %231 = load ptr, ptr %134, align 8, !tbaa !130
  %232 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %233 unwind label %248

233:                                              ; preds = %218
  %234 = getelementptr inbounds %"class.std::vector.67", ptr %231, i64 %185
  %235 = add i32 %232, %200
  %236 = zext i32 %235 to i64
  %237 = load ptr, ptr %234, align 8, !tbaa !25
  %238 = getelementptr inbounds %"class.dealii::Tensor", ptr %237, i64 %236, i32 0, i64 2
  %239 = load double, ptr %238, align 8, !tbaa !8
  %240 = load ptr, ptr %137, align 8, !tbaa !35
  %241 = load i32, ptr %138, align 8, !tbaa !34
  %242 = mul i32 %241, %198
  %243 = add i32 %242, %200
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds double, ptr %240, i64 %244
  store double %239, ptr %245, align 8, !tbaa !8
  %246 = add nuw i32 %200, 1
  %247 = icmp eq i32 %246, %22
  br i1 %247, label %685, label %199

248:                                              ; preds = %218, %203, %199
  %249 = landingpad { ptr, i32 }
          cleanup
  br label %995

250:                                              ; preds = %193, %193
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #15
  br i1 %130, label %251, label %252

251:                                              ; preds = %250
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %11, i8 0, i64 24, i1 false)
  br label %257

252:                                              ; preds = %250
  %253 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %131) #16
          to label %254 unwind label %442

254:                                              ; preds = %252
  store ptr %253, ptr %11, align 8, !tbaa !25
  %255 = getelementptr inbounds %"class.dealii::Tensor", ptr %253, i64 %129
  store ptr %255, ptr %139, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %253, i8 0, i64 %131, i1 false), !tbaa !8
  %256 = getelementptr i8, ptr %253, i64 %131
  br label %257

257:                                              ; preds = %254, %251
  %258 = phi ptr [ null, %251 ], [ %256, %254 ]
  store ptr %258, ptr %140, align 8, !tbaa !23
  %259 = load ptr, ptr %134, align 8, !tbaa !130
  %260 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %261 unwind label %444

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"class.std::vector.67", ptr %259, i64 %185
  %263 = zext i32 %260 to i64
  %264 = or i64 %135, %263
  %265 = load ptr, ptr %140, align 8, !tbaa !23
  %266 = load ptr, ptr %11, align 8, !tbaa !25
  %267 = ptrtoint ptr %265 to i64
  %268 = ptrtoint ptr %266 to i64
  %269 = sub i64 %267, %268
  %270 = sdiv exact i64 %269, 24
  %271 = load i32, ptr %128, align 8, !tbaa !519
  %272 = shl i64 %270, 32
  %273 = load ptr, ptr %1, align 8, !tbaa !5
  %274 = getelementptr inbounds ptr, ptr %273, i64 4
  %275 = load ptr, ptr %274, align 8
  invoke void %275(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %262, i64 %264, ptr nonnull %11, i64 %272, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef %271)
          to label %276 unwind label %444

276:                                              ; preds = %261
  %277 = load ptr, ptr %11, align 8, !tbaa !25
  br i1 %136, label %439, label %278

278:                                              ; preds = %276
  %279 = load ptr, ptr %137, align 8, !tbaa !35
  %280 = load i32, ptr %138, align 8, !tbaa !34
  %281 = mul i32 %280, %192
  %282 = add i32 %192, 1
  %283 = mul i32 %280, %282
  %284 = add i32 %192, 2
  %285 = mul i32 %280, %284
  br i1 %172, label %417, label %286

286:                                              ; preds = %278
  %287 = xor i32 %281, -1
  %288 = icmp ult i32 %287, %173
  %289 = xor i32 %283, -1
  %290 = icmp ult i32 %289, %174
  %291 = or i1 %290, %175
  %292 = xor i32 %285, -1
  %293 = icmp ult i32 %292, %176
  %294 = or i1 %288, %291
  %295 = or i1 %293, %294
  br i1 %295, label %417, label %296

296:                                              ; preds = %286
  %297 = zext i32 %281 to i64
  %298 = shl nuw nsw i64 %297, 3
  %299 = getelementptr i8, ptr %279, i64 %298
  %300 = getelementptr i8, ptr %279, i64 %155
  %301 = getelementptr i8, ptr %300, i64 %298
  %302 = zext i32 %283 to i64
  %303 = shl nuw nsw i64 %302, 3
  %304 = getelementptr i8, ptr %279, i64 %303
  %305 = getelementptr i8, ptr %300, i64 %303
  %306 = zext i32 %285 to i64
  %307 = shl nuw nsw i64 %306, 3
  %308 = getelementptr i8, ptr %279, i64 %307
  %309 = getelementptr i8, ptr %279, i64 %155
  %310 = getelementptr i8, ptr %309, i64 %307
  %311 = getelementptr i8, ptr %277, i64 %157
  %312 = getelementptr i8, ptr %277, i64 8
  %313 = getelementptr i8, ptr %277, i64 %158
  %314 = getelementptr i8, ptr %277, i64 16
  %315 = getelementptr i8, ptr %277, i64 %156
  %316 = icmp ult ptr %299, %305
  %317 = icmp ult ptr %304, %301
  %318 = and i1 %316, %317
  %319 = icmp ult ptr %299, %310
  %320 = icmp ult ptr %308, %301
  %321 = and i1 %319, %320
  %322 = or i1 %318, %321
  %323 = icmp ult ptr %299, %311
  %324 = icmp ult ptr %277, %301
  %325 = and i1 %323, %324
  %326 = or i1 %322, %325
  %327 = icmp ult ptr %299, %313
  %328 = icmp ult ptr %312, %301
  %329 = and i1 %327, %328
  %330 = or i1 %326, %329
  %331 = icmp ult ptr %299, %315
  %332 = icmp ult ptr %314, %301
  %333 = and i1 %331, %332
  %334 = or i1 %330, %333
  %335 = icmp ult ptr %304, %310
  %336 = icmp ult ptr %308, %305
  %337 = and i1 %335, %336
  %338 = or i1 %334, %337
  %339 = icmp ult ptr %304, %311
  %340 = icmp ult ptr %277, %305
  %341 = and i1 %339, %340
  %342 = or i1 %338, %341
  %343 = icmp ult ptr %304, %313
  %344 = icmp ult ptr %312, %305
  %345 = and i1 %343, %344
  %346 = or i1 %342, %345
  %347 = icmp ult ptr %304, %315
  %348 = icmp ult ptr %314, %305
  %349 = and i1 %347, %348
  %350 = or i1 %346, %349
  %351 = icmp ult ptr %308, %311
  %352 = icmp ult ptr %277, %310
  %353 = and i1 %351, %352
  %354 = or i1 %350, %353
  %355 = icmp ult ptr %308, %313
  %356 = icmp ult ptr %312, %310
  %357 = and i1 %355, %356
  %358 = or i1 %354, %357
  %359 = icmp ult ptr %308, %315
  %360 = icmp ult ptr %314, %310
  %361 = and i1 %359, %360
  %362 = or i1 %358, %361
  br i1 %362, label %417, label %363

363:                                              ; preds = %296, %363
  %364 = phi i64 [ %414, %363 ], [ 0, %296 ]
  %365 = trunc i64 %364 to i32
  %366 = or i64 %364, 1
  %367 = or i64 %364, 2
  %368 = or i64 %364, 3
  %369 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %364
  %370 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %366
  %371 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %367
  %372 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %368
  %373 = load double, ptr %369, align 8, !tbaa !8, !alias.scope !594
  %374 = load double, ptr %370, align 8, !tbaa !8, !alias.scope !594
  %375 = load double, ptr %371, align 8, !tbaa !8, !alias.scope !594
  %376 = load double, ptr %372, align 8, !tbaa !8, !alias.scope !594
  %377 = insertelement <4 x double> poison, double %373, i64 0
  %378 = insertelement <4 x double> %377, double %374, i64 1
  %379 = insertelement <4 x double> %378, double %375, i64 2
  %380 = insertelement <4 x double> %379, double %376, i64 3
  %381 = add i32 %281, %365
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds double, ptr %279, i64 %382
  store <4 x double> %380, ptr %383, align 8, !tbaa !8, !alias.scope !597, !noalias !599
  %384 = getelementptr inbounds [3 x double], ptr %369, i64 0, i64 1
  %385 = getelementptr inbounds [3 x double], ptr %370, i64 0, i64 1
  %386 = getelementptr inbounds [3 x double], ptr %371, i64 0, i64 1
  %387 = getelementptr inbounds [3 x double], ptr %372, i64 0, i64 1
  %388 = load double, ptr %384, align 8, !tbaa !8, !alias.scope !604
  %389 = load double, ptr %385, align 8, !tbaa !8, !alias.scope !604
  %390 = load double, ptr %386, align 8, !tbaa !8, !alias.scope !604
  %391 = load double, ptr %387, align 8, !tbaa !8, !alias.scope !604
  %392 = insertelement <4 x double> poison, double %388, i64 0
  %393 = insertelement <4 x double> %392, double %389, i64 1
  %394 = insertelement <4 x double> %393, double %390, i64 2
  %395 = insertelement <4 x double> %394, double %391, i64 3
  %396 = add i32 %283, %365
  %397 = zext i32 %396 to i64
  %398 = getelementptr inbounds double, ptr %279, i64 %397
  store <4 x double> %395, ptr %398, align 8, !tbaa !8, !alias.scope !605, !noalias !606
  %399 = getelementptr inbounds [3 x double], ptr %369, i64 0, i64 2
  %400 = getelementptr inbounds [3 x double], ptr %370, i64 0, i64 2
  %401 = getelementptr inbounds [3 x double], ptr %371, i64 0, i64 2
  %402 = getelementptr inbounds [3 x double], ptr %372, i64 0, i64 2
  %403 = load double, ptr %399, align 8, !tbaa !8, !alias.scope !607
  %404 = load double, ptr %400, align 8, !tbaa !8, !alias.scope !607
  %405 = load double, ptr %401, align 8, !tbaa !8, !alias.scope !607
  %406 = load double, ptr %402, align 8, !tbaa !8, !alias.scope !607
  %407 = insertelement <4 x double> poison, double %403, i64 0
  %408 = insertelement <4 x double> %407, double %404, i64 1
  %409 = insertelement <4 x double> %408, double %405, i64 2
  %410 = insertelement <4 x double> %409, double %406, i64 3
  %411 = add i32 %285, %365
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds double, ptr %279, i64 %412
  store <4 x double> %410, ptr %413, align 8, !tbaa !8, !alias.scope !608, !noalias !609
  %414 = add nuw i64 %364, 4
  %415 = icmp eq i64 %414, %178
  br i1 %415, label %416, label %363, !llvm.loop !610

416:                                              ; preds = %363
  br i1 %179, label %441, label %417

417:                                              ; preds = %296, %286, %278, %416
  %418 = phi i64 [ 0, %296 ], [ 0, %286 ], [ 0, %278 ], [ %178, %416 ]
  br label %419

419:                                              ; preds = %417, %419
  %420 = phi i64 [ %437, %419 ], [ %418, %417 ]
  %421 = getelementptr inbounds %"class.dealii::Tensor", ptr %277, i64 %420
  %422 = load double, ptr %421, align 8, !tbaa !8
  %423 = trunc i64 %420 to i32
  %424 = add i32 %281, %423
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds double, ptr %279, i64 %425
  store double %422, ptr %426, align 8, !tbaa !8
  %427 = getelementptr inbounds [3 x double], ptr %421, i64 0, i64 1
  %428 = load double, ptr %427, align 8, !tbaa !8
  %429 = add i32 %283, %423
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds double, ptr %279, i64 %430
  store double %428, ptr %431, align 8, !tbaa !8
  %432 = getelementptr inbounds [3 x double], ptr %421, i64 0, i64 2
  %433 = load double, ptr %432, align 8, !tbaa !8
  %434 = add i32 %285, %423
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds double, ptr %279, i64 %435
  store double %433, ptr %436, align 8, !tbaa !8
  %437 = add nuw nsw i64 %420, 1
  %438 = icmp eq i64 %437, %149
  br i1 %438, label %441, label %419, !llvm.loop !611

439:                                              ; preds = %276
  %440 = icmp eq ptr %277, null
  br i1 %440, label %449, label %441

441:                                              ; preds = %419, %416, %439
  call void @_ZdlPv(ptr noundef nonnull %277) #17
  br label %449

442:                                              ; preds = %252
  %443 = landingpad { ptr, i32 }
          cleanup
  br label %450

444:                                              ; preds = %261, %257
  %445 = landingpad { ptr, i32 }
          cleanup
  %446 = load ptr, ptr %11, align 8, !tbaa !25
  %447 = icmp eq ptr %446, null
  br i1 %447, label %450, label %448

448:                                              ; preds = %444
  call void @_ZdlPv(ptr noundef nonnull %446) #17
  br label %450

449:                                              ; preds = %441, %439
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #15
  br label %685

450:                                              ; preds = %448, %444, %442
  %451 = phi { ptr, i32 } [ %443, %442 ], [ %445, %444 ], [ %445, %448 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #15
  br label %995

452:                                              ; preds = %193
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #15
  br i1 %130, label %453, label %454

453:                                              ; preds = %452
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  br label %459

454:                                              ; preds = %452
  %455 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %131) #16
          to label %456 unwind label %675

456:                                              ; preds = %454
  store ptr %455, ptr %12, align 8, !tbaa !25
  %457 = getelementptr inbounds %"class.dealii::Tensor", ptr %455, i64 %129
  store ptr %457, ptr %132, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %455, i8 0, i64 %131, i1 false), !tbaa !8
  %458 = getelementptr i8, ptr %455, i64 %131
  br label %459

459:                                              ; preds = %456, %453
  %460 = phi ptr [ null, %453 ], [ %458, %456 ]
  store ptr %460, ptr %133, align 8, !tbaa !23
  %461 = load ptr, ptr %134, align 8, !tbaa !130
  %462 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %463 unwind label %677

463:                                              ; preds = %459
  %464 = getelementptr inbounds %"class.std::vector.67", ptr %461, i64 %185
  %465 = zext i32 %462 to i64
  %466 = or i64 %135, %465
  %467 = load ptr, ptr %133, align 8, !tbaa !23
  %468 = load ptr, ptr %12, align 8, !tbaa !25
  %469 = ptrtoint ptr %467 to i64
  %470 = ptrtoint ptr %468 to i64
  %471 = sub i64 %469, %470
  %472 = sdiv exact i64 %471, 24
  %473 = shl i64 %472, 32
  %474 = load ptr, ptr %1, align 8, !tbaa !5
  %475 = getelementptr inbounds ptr, ptr %474, i64 4
  %476 = load ptr, ptr %475, align 8
  invoke void %476(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %464, i64 %466, ptr nonnull %12, i64 %473, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 256)
          to label %477 unwind label %677

477:                                              ; preds = %463
  %478 = load ptr, ptr %12, align 8, !tbaa !25
  br i1 %136, label %672, label %479

479:                                              ; preds = %477
  %480 = getelementptr inbounds double, ptr %70, i64 %185
  %481 = load ptr, ptr %137, align 8, !tbaa !35
  %482 = load i32, ptr %138, align 8, !tbaa !34
  %483 = mul i32 %482, %192
  %484 = add i32 %192, 1
  %485 = mul i32 %482, %484
  %486 = add i32 %192, 2
  %487 = mul i32 %482, %486
  br i1 %164, label %644, label %488

488:                                              ; preds = %479
  %489 = xor i32 %483, -1
  %490 = icmp ult i32 %489, %165
  %491 = xor i32 %485, -1
  %492 = icmp ult i32 %491, %166
  %493 = or i1 %492, %167
  %494 = xor i32 %487, -1
  %495 = icmp ult i32 %494, %168
  %496 = or i1 %490, %493
  %497 = or i1 %495, %496
  br i1 %497, label %644, label %498

498:                                              ; preds = %488
  %499 = zext i32 %483 to i64
  %500 = shl nuw nsw i64 %499, 3
  %501 = getelementptr i8, ptr %481, i64 %500
  %502 = getelementptr i8, ptr %481, i64 %160
  %503 = getelementptr i8, ptr %502, i64 %500
  %504 = zext i32 %485 to i64
  %505 = shl nuw nsw i64 %504, 3
  %506 = getelementptr i8, ptr %481, i64 %505
  %507 = getelementptr i8, ptr %502, i64 %505
  %508 = zext i32 %487 to i64
  %509 = shl nuw nsw i64 %508, 3
  %510 = getelementptr i8, ptr %481, i64 %509
  %511 = getelementptr i8, ptr %481, i64 %160
  %512 = getelementptr i8, ptr %511, i64 %509
  %513 = getelementptr i8, ptr %478, i64 %162
  %514 = getelementptr i8, ptr %478, i64 8
  %515 = getelementptr i8, ptr %478, i64 %163
  %516 = getelementptr i8, ptr %478, i64 16
  %517 = getelementptr i8, ptr %478, i64 %161
  %518 = icmp ult ptr %501, %507
  %519 = icmp ult ptr %506, %503
  %520 = and i1 %518, %519
  %521 = icmp ult ptr %501, %512
  %522 = icmp ult ptr %510, %503
  %523 = and i1 %521, %522
  %524 = or i1 %520, %523
  %525 = icmp ult ptr %501, %189
  %526 = icmp ult ptr %187, %503
  %527 = and i1 %525, %526
  %528 = or i1 %524, %527
  %529 = icmp ult ptr %501, %513
  %530 = icmp ult ptr %478, %503
  %531 = and i1 %529, %530
  %532 = or i1 %528, %531
  %533 = icmp ult ptr %501, %515
  %534 = icmp ult ptr %514, %503
  %535 = and i1 %533, %534
  %536 = or i1 %532, %535
  %537 = icmp ult ptr %501, %517
  %538 = icmp ult ptr %516, %503
  %539 = and i1 %537, %538
  %540 = or i1 %536, %539
  %541 = icmp ult ptr %506, %512
  %542 = icmp ult ptr %510, %507
  %543 = and i1 %541, %542
  %544 = or i1 %540, %543
  %545 = icmp ult ptr %506, %189
  %546 = icmp ult ptr %187, %507
  %547 = and i1 %545, %546
  %548 = or i1 %544, %547
  %549 = icmp ult ptr %506, %513
  %550 = icmp ult ptr %478, %507
  %551 = and i1 %549, %550
  %552 = or i1 %548, %551
  %553 = icmp ult ptr %506, %515
  %554 = icmp ult ptr %514, %507
  %555 = and i1 %553, %554
  %556 = or i1 %552, %555
  %557 = icmp ult ptr %506, %517
  %558 = icmp ult ptr %516, %507
  %559 = and i1 %557, %558
  %560 = or i1 %556, %559
  %561 = icmp ult ptr %510, %189
  %562 = icmp ult ptr %187, %512
  %563 = and i1 %561, %562
  %564 = or i1 %560, %563
  %565 = icmp ult ptr %510, %513
  %566 = icmp ult ptr %478, %512
  %567 = and i1 %565, %566
  %568 = or i1 %564, %567
  %569 = icmp ult ptr %510, %515
  %570 = icmp ult ptr %514, %512
  %571 = and i1 %569, %570
  %572 = or i1 %568, %571
  %573 = icmp ult ptr %510, %517
  %574 = icmp ult ptr %516, %512
  %575 = and i1 %573, %574
  %576 = or i1 %572, %575
  br i1 %576, label %644, label %577

577:                                              ; preds = %498
  %578 = load double, ptr %480, align 8, !tbaa !8, !alias.scope !612
  %579 = insertelement <4 x double> poison, double %578, i64 0
  %580 = shufflevector <4 x double> %579, <4 x double> poison, <4 x i32> zeroinitializer
  %581 = load double, ptr %480, align 8, !tbaa !8, !alias.scope !612
  %582 = insertelement <4 x double> poison, double %581, i64 0
  %583 = shufflevector <4 x double> %582, <4 x double> poison, <4 x i32> zeroinitializer
  %584 = load double, ptr %480, align 8, !tbaa !8, !alias.scope !612
  %585 = insertelement <4 x double> poison, double %584, i64 0
  %586 = shufflevector <4 x double> %585, <4 x double> poison, <4 x i32> zeroinitializer
  br label %587

587:                                              ; preds = %587, %577
  %588 = phi i64 [ 0, %577 ], [ %641, %587 ]
  %589 = trunc i64 %588 to i32
  %590 = or i64 %588, 1
  %591 = or i64 %588, 2
  %592 = or i64 %588, 3
  %593 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %588
  %594 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %590
  %595 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %591
  %596 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %592
  %597 = load double, ptr %593, align 8, !tbaa !8, !alias.scope !615
  %598 = load double, ptr %594, align 8, !tbaa !8, !alias.scope !615
  %599 = load double, ptr %595, align 8, !tbaa !8, !alias.scope !615
  %600 = load double, ptr %596, align 8, !tbaa !8, !alias.scope !615
  %601 = insertelement <4 x double> poison, double %597, i64 0
  %602 = insertelement <4 x double> %601, double %598, i64 1
  %603 = insertelement <4 x double> %602, double %599, i64 2
  %604 = insertelement <4 x double> %603, double %600, i64 3
  %605 = fmul <4 x double> %580, %604
  %606 = add i32 %483, %589
  %607 = zext i32 %606 to i64
  %608 = getelementptr inbounds double, ptr %481, i64 %607
  store <4 x double> %605, ptr %608, align 8, !tbaa !8, !alias.scope !617, !noalias !619
  %609 = getelementptr inbounds [3 x double], ptr %593, i64 0, i64 1
  %610 = getelementptr inbounds [3 x double], ptr %594, i64 0, i64 1
  %611 = getelementptr inbounds [3 x double], ptr %595, i64 0, i64 1
  %612 = getelementptr inbounds [3 x double], ptr %596, i64 0, i64 1
  %613 = load double, ptr %609, align 8, !tbaa !8, !alias.scope !624
  %614 = load double, ptr %610, align 8, !tbaa !8, !alias.scope !624
  %615 = load double, ptr %611, align 8, !tbaa !8, !alias.scope !624
  %616 = load double, ptr %612, align 8, !tbaa !8, !alias.scope !624
  %617 = insertelement <4 x double> poison, double %613, i64 0
  %618 = insertelement <4 x double> %617, double %614, i64 1
  %619 = insertelement <4 x double> %618, double %615, i64 2
  %620 = insertelement <4 x double> %619, double %616, i64 3
  %621 = fmul <4 x double> %583, %620
  %622 = add i32 %485, %589
  %623 = zext i32 %622 to i64
  %624 = getelementptr inbounds double, ptr %481, i64 %623
  store <4 x double> %621, ptr %624, align 8, !tbaa !8, !alias.scope !625, !noalias !626
  %625 = getelementptr inbounds [3 x double], ptr %593, i64 0, i64 2
  %626 = getelementptr inbounds [3 x double], ptr %594, i64 0, i64 2
  %627 = getelementptr inbounds [3 x double], ptr %595, i64 0, i64 2
  %628 = getelementptr inbounds [3 x double], ptr %596, i64 0, i64 2
  %629 = load double, ptr %625, align 8, !tbaa !8, !alias.scope !627
  %630 = load double, ptr %626, align 8, !tbaa !8, !alias.scope !627
  %631 = load double, ptr %627, align 8, !tbaa !8, !alias.scope !627
  %632 = load double, ptr %628, align 8, !tbaa !8, !alias.scope !627
  %633 = insertelement <4 x double> poison, double %629, i64 0
  %634 = insertelement <4 x double> %633, double %630, i64 1
  %635 = insertelement <4 x double> %634, double %631, i64 2
  %636 = insertelement <4 x double> %635, double %632, i64 3
  %637 = fmul <4 x double> %586, %636
  %638 = add i32 %487, %589
  %639 = zext i32 %638 to i64
  %640 = getelementptr inbounds double, ptr %481, i64 %639
  store <4 x double> %637, ptr %640, align 8, !tbaa !8, !alias.scope !628, !noalias !629
  %641 = add nuw i64 %588, 4
  %642 = icmp eq i64 %641, %170
  br i1 %642, label %643, label %587, !llvm.loop !630

643:                                              ; preds = %587
  br i1 %171, label %674, label %644

644:                                              ; preds = %498, %488, %479, %643
  %645 = phi i64 [ 0, %498 ], [ 0, %488 ], [ 0, %479 ], [ %170, %643 ]
  br label %646

646:                                              ; preds = %644, %646
  %647 = phi i64 [ %670, %646 ], [ %645, %644 ]
  %648 = getelementptr inbounds %"class.dealii::Tensor", ptr %478, i64 %647
  %649 = load double, ptr %480, align 8, !tbaa !8
  %650 = load double, ptr %648, align 8, !tbaa !8
  %651 = fmul double %649, %650
  %652 = trunc i64 %647 to i32
  %653 = add i32 %483, %652
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds double, ptr %481, i64 %654
  store double %651, ptr %655, align 8, !tbaa !8
  %656 = load double, ptr %480, align 8, !tbaa !8
  %657 = getelementptr inbounds [3 x double], ptr %648, i64 0, i64 1
  %658 = load double, ptr %657, align 8, !tbaa !8
  %659 = fmul double %656, %658
  %660 = add i32 %485, %652
  %661 = zext i32 %660 to i64
  %662 = getelementptr inbounds double, ptr %481, i64 %661
  store double %659, ptr %662, align 8, !tbaa !8
  %663 = load double, ptr %480, align 8, !tbaa !8
  %664 = getelementptr inbounds [3 x double], ptr %648, i64 0, i64 2
  %665 = load double, ptr %664, align 8, !tbaa !8
  %666 = fmul double %663, %665
  %667 = add i32 %487, %652
  %668 = zext i32 %667 to i64
  %669 = getelementptr inbounds double, ptr %481, i64 %668
  store double %666, ptr %669, align 8, !tbaa !8
  %670 = add nuw nsw i64 %647, 1
  %671 = icmp eq i64 %670, %148
  br i1 %671, label %674, label %646, !llvm.loop !631

672:                                              ; preds = %477
  %673 = icmp eq ptr %478, null
  br i1 %673, label %682, label %674

674:                                              ; preds = %646, %643, %672
  call void @_ZdlPv(ptr noundef nonnull %478) #17
  br label %682

675:                                              ; preds = %454
  %676 = landingpad { ptr, i32 }
          cleanup
  br label %683

677:                                              ; preds = %463, %459
  %678 = landingpad { ptr, i32 }
          cleanup
  %679 = load ptr, ptr %12, align 8, !tbaa !25
  %680 = icmp eq ptr %679, null
  br i1 %680, label %683, label %681

681:                                              ; preds = %677
  call void @_ZdlPv(ptr noundef nonnull %679) #17
  br label %683

682:                                              ; preds = %674, %672
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #15
  br label %685

683:                                              ; preds = %681, %677, %675
  %684 = phi { ptr, i32 } [ %676, %675 ], [ %678, %677 ], [ %678, %681 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #15
  br label %995

685:                                              ; preds = %233, %195, %449, %682, %193, %184
  br i1 %142, label %980, label %686

686:                                              ; preds = %685
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #15
  br i1 %130, label %687, label %688

687:                                              ; preds = %686
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  br label %695

688:                                              ; preds = %686
  %689 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %143) #16
          to label %690 unwind label %698

690:                                              ; preds = %688
  store ptr %689, ptr %13, align 8, !tbaa !51
  %691 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %689, i64 %129
  store ptr %691, ptr %144, align 8, !tbaa !212
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %689, i8 0, i64 %143, i1 false), !tbaa !8
  %692 = getelementptr i8, ptr %689, i64 %143
  store ptr %692, ptr %145, align 8, !tbaa !49
  %693 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %143) #16
          to label %694 unwind label %700

694:                                              ; preds = %690
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %693, i8 0, i64 %143, i1 false), !tbaa !8
  br label %695

695:                                              ; preds = %694, %687
  %696 = phi ptr [ null, %687 ], [ %693, %694 ]
  %697 = load i32, ptr %128, align 8, !tbaa !519
  switch i32 %697, label %964 [
    i32 0, label %702
    i32 1, label %768
    i32 2, label %831
    i32 256, label %894
  ]

698:                                              ; preds = %688
  %699 = landingpad { ptr, i32 }
          cleanup
  br label %978

700:                                              ; preds = %690
  %701 = landingpad { ptr, i32 }
          cleanup
  br label %973

702:                                              ; preds = %695
  %703 = load ptr, ptr %146, align 8, !tbaa !133
  %704 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %705 unwind label %765

705:                                              ; preds = %702
  %706 = getelementptr inbounds %"class.std::vector.72", ptr %703, i64 %185
  %707 = zext i32 %704 to i64
  %708 = or i64 %135, %707
  %709 = load ptr, ptr %145, align 8, !tbaa !49
  %710 = load ptr, ptr %13, align 8, !tbaa !51
  %711 = ptrtoint ptr %709 to i64
  %712 = ptrtoint ptr %710 to i64
  %713 = sub i64 %711, %712
  %714 = sdiv exact i64 %713, 72
  %715 = shl i64 %714, 32
  %716 = load ptr, ptr %1, align 8, !tbaa !5
  %717 = getelementptr inbounds ptr, ptr %716, i64 5
  %718 = load ptr, ptr %717, align 8
  invoke void %718(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %706, i64 %708, ptr nonnull %13, i64 %715, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 1)
          to label %719 unwind label %765

719:                                              ; preds = %705
  br i1 %136, label %964, label %720

720:                                              ; preds = %719
  %721 = load ptr, ptr %13, align 8, !tbaa !51
  %722 = load ptr, ptr %147, align 8, !tbaa !130
  %723 = zext i32 %192 to i64
  %724 = getelementptr inbounds %"class.std::vector.67", ptr %722, i64 %723
  %725 = load ptr, ptr %724, align 8, !tbaa !25
  %726 = add i32 %192, 1
  %727 = zext i32 %726 to i64
  %728 = getelementptr inbounds %"class.std::vector.67", ptr %722, i64 %727
  %729 = load ptr, ptr %728, align 8, !tbaa !25
  %730 = add i32 %192, 2
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds %"class.std::vector.67", ptr %722, i64 %731
  %733 = load ptr, ptr %732, align 8, !tbaa !25
  br label %734

734:                                              ; preds = %720, %734
  %735 = phi i64 [ 0, %720 ], [ %763, %734 ]
  %736 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %721, i64 %735
  %737 = getelementptr inbounds %"class.dealii::Tensor", ptr %725, i64 %735
  %738 = load double, ptr %736, align 8, !tbaa !8
  store double %738, ptr %737, align 8, !tbaa !8
  %739 = getelementptr inbounds [3 x double], ptr %736, i64 0, i64 1
  %740 = load double, ptr %739, align 8, !tbaa !8
  %741 = getelementptr inbounds [3 x double], ptr %737, i64 0, i64 1
  store double %740, ptr %741, align 8, !tbaa !8
  %742 = getelementptr inbounds [3 x double], ptr %736, i64 0, i64 2
  %743 = load double, ptr %742, align 8, !tbaa !8
  %744 = getelementptr inbounds [3 x double], ptr %737, i64 0, i64 2
  store double %743, ptr %744, align 8, !tbaa !8
  %745 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 1
  %746 = getelementptr inbounds %"class.dealii::Tensor", ptr %729, i64 %735
  %747 = load double, ptr %745, align 8, !tbaa !8
  store double %747, ptr %746, align 8, !tbaa !8
  %748 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 1, i32 0, i64 1
  %749 = load double, ptr %748, align 8, !tbaa !8
  %750 = getelementptr inbounds [3 x double], ptr %746, i64 0, i64 1
  store double %749, ptr %750, align 8, !tbaa !8
  %751 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 1, i32 0, i64 2
  %752 = load double, ptr %751, align 8, !tbaa !8
  %753 = getelementptr inbounds [3 x double], ptr %746, i64 0, i64 2
  store double %752, ptr %753, align 8, !tbaa !8
  %754 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 2
  %755 = getelementptr inbounds %"class.dealii::Tensor", ptr %733, i64 %735
  %756 = load double, ptr %754, align 8, !tbaa !8
  store double %756, ptr %755, align 8, !tbaa !8
  %757 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 2, i32 0, i64 1
  %758 = load double, ptr %757, align 8, !tbaa !8
  %759 = getelementptr inbounds [3 x double], ptr %755, i64 0, i64 1
  store double %758, ptr %759, align 8, !tbaa !8
  %760 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %736, i64 0, i64 2, i32 0, i64 2
  %761 = load double, ptr %760, align 8, !tbaa !8
  %762 = getelementptr inbounds [3 x double], ptr %755, i64 0, i64 2
  store double %761, ptr %762, align 8, !tbaa !8
  %763 = add nuw nsw i64 %735, 1
  %764 = icmp eq i64 %763, %153
  br i1 %764, label %964, label %734

765:                                              ; preds = %897, %894, %834, %831, %771, %768, %705, %702
  %766 = landingpad { ptr, i32 }
          cleanup
  %767 = icmp eq ptr %696, null
  br i1 %767, label %973, label %972

768:                                              ; preds = %695
  %769 = load ptr, ptr %146, align 8, !tbaa !133
  %770 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %771 unwind label %765

771:                                              ; preds = %768
  %772 = getelementptr inbounds %"class.std::vector.72", ptr %769, i64 %185
  %773 = zext i32 %770 to i64
  %774 = or i64 %135, %773
  %775 = load ptr, ptr %145, align 8, !tbaa !49
  %776 = load ptr, ptr %13, align 8, !tbaa !51
  %777 = ptrtoint ptr %775 to i64
  %778 = ptrtoint ptr %776 to i64
  %779 = sub i64 %777, %778
  %780 = sdiv exact i64 %779, 72
  %781 = shl i64 %780, 32
  %782 = load ptr, ptr %1, align 8, !tbaa !5
  %783 = getelementptr inbounds ptr, ptr %782, i64 5
  %784 = load ptr, ptr %783, align 8
  invoke void %784(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %772, i64 %774, ptr nonnull %13, i64 %781, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 3)
          to label %785 unwind label %765

785:                                              ; preds = %771
  br i1 %136, label %964, label %786

786:                                              ; preds = %785
  %787 = load ptr, ptr %13, align 8, !tbaa !51
  %788 = load ptr, ptr %147, align 8, !tbaa !130
  %789 = zext i32 %192 to i64
  %790 = getelementptr inbounds %"class.std::vector.67", ptr %788, i64 %789
  %791 = load ptr, ptr %790, align 8, !tbaa !25
  %792 = add i32 %192, 1
  %793 = zext i32 %792 to i64
  %794 = getelementptr inbounds %"class.std::vector.67", ptr %788, i64 %793
  %795 = load ptr, ptr %794, align 8, !tbaa !25
  %796 = add i32 %192, 2
  %797 = zext i32 %796 to i64
  %798 = getelementptr inbounds %"class.std::vector.67", ptr %788, i64 %797
  %799 = load ptr, ptr %798, align 8, !tbaa !25
  br label %800

800:                                              ; preds = %786, %800
  %801 = phi i64 [ 0, %786 ], [ %829, %800 ]
  %802 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %787, i64 %801
  %803 = getelementptr inbounds %"class.dealii::Tensor", ptr %791, i64 %801
  %804 = load double, ptr %802, align 8, !tbaa !8
  store double %804, ptr %803, align 8, !tbaa !8
  %805 = getelementptr inbounds [3 x double], ptr %802, i64 0, i64 1
  %806 = load double, ptr %805, align 8, !tbaa !8
  %807 = getelementptr inbounds [3 x double], ptr %803, i64 0, i64 1
  store double %806, ptr %807, align 8, !tbaa !8
  %808 = getelementptr inbounds [3 x double], ptr %802, i64 0, i64 2
  %809 = load double, ptr %808, align 8, !tbaa !8
  %810 = getelementptr inbounds [3 x double], ptr %803, i64 0, i64 2
  store double %809, ptr %810, align 8, !tbaa !8
  %811 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 1
  %812 = getelementptr inbounds %"class.dealii::Tensor", ptr %795, i64 %801
  %813 = load double, ptr %811, align 8, !tbaa !8
  store double %813, ptr %812, align 8, !tbaa !8
  %814 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 1, i32 0, i64 1
  %815 = load double, ptr %814, align 8, !tbaa !8
  %816 = getelementptr inbounds [3 x double], ptr %812, i64 0, i64 1
  store double %815, ptr %816, align 8, !tbaa !8
  %817 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 1, i32 0, i64 2
  %818 = load double, ptr %817, align 8, !tbaa !8
  %819 = getelementptr inbounds [3 x double], ptr %812, i64 0, i64 2
  store double %818, ptr %819, align 8, !tbaa !8
  %820 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 2
  %821 = getelementptr inbounds %"class.dealii::Tensor", ptr %799, i64 %801
  %822 = load double, ptr %820, align 8, !tbaa !8
  store double %822, ptr %821, align 8, !tbaa !8
  %823 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 2, i32 0, i64 1
  %824 = load double, ptr %823, align 8, !tbaa !8
  %825 = getelementptr inbounds [3 x double], ptr %821, i64 0, i64 1
  store double %824, ptr %825, align 8, !tbaa !8
  %826 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %802, i64 0, i64 2, i32 0, i64 2
  %827 = load double, ptr %826, align 8, !tbaa !8
  %828 = getelementptr inbounds [3 x double], ptr %821, i64 0, i64 2
  store double %827, ptr %828, align 8, !tbaa !8
  %829 = add nuw nsw i64 %801, 1
  %830 = icmp eq i64 %829, %152
  br i1 %830, label %964, label %800

831:                                              ; preds = %695
  %832 = load ptr, ptr %146, align 8, !tbaa !133
  %833 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %834 unwind label %765

834:                                              ; preds = %831
  %835 = getelementptr inbounds %"class.std::vector.72", ptr %832, i64 %185
  %836 = zext i32 %833 to i64
  %837 = or i64 %135, %836
  %838 = load ptr, ptr %145, align 8, !tbaa !49
  %839 = load ptr, ptr %13, align 8, !tbaa !51
  %840 = ptrtoint ptr %838 to i64
  %841 = ptrtoint ptr %839 to i64
  %842 = sub i64 %840, %841
  %843 = sdiv exact i64 %842, 72
  %844 = shl i64 %843, 32
  %845 = load ptr, ptr %1, align 8, !tbaa !5
  %846 = getelementptr inbounds ptr, ptr %845, i64 5
  %847 = load ptr, ptr %846, align 8
  invoke void %847(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %835, i64 %837, ptr nonnull %13, i64 %844, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 4)
          to label %848 unwind label %765

848:                                              ; preds = %834
  br i1 %136, label %964, label %849

849:                                              ; preds = %848
  %850 = load ptr, ptr %13, align 8, !tbaa !51
  %851 = load ptr, ptr %147, align 8, !tbaa !130
  %852 = zext i32 %192 to i64
  %853 = getelementptr inbounds %"class.std::vector.67", ptr %851, i64 %852
  %854 = load ptr, ptr %853, align 8, !tbaa !25
  %855 = add i32 %192, 1
  %856 = zext i32 %855 to i64
  %857 = getelementptr inbounds %"class.std::vector.67", ptr %851, i64 %856
  %858 = load ptr, ptr %857, align 8, !tbaa !25
  %859 = add i32 %192, 2
  %860 = zext i32 %859 to i64
  %861 = getelementptr inbounds %"class.std::vector.67", ptr %851, i64 %860
  %862 = load ptr, ptr %861, align 8, !tbaa !25
  br label %863

863:                                              ; preds = %849, %863
  %864 = phi i64 [ 0, %849 ], [ %892, %863 ]
  %865 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %850, i64 %864
  %866 = getelementptr inbounds %"class.dealii::Tensor", ptr %854, i64 %864
  %867 = load double, ptr %865, align 8, !tbaa !8
  store double %867, ptr %866, align 8, !tbaa !8
  %868 = getelementptr inbounds [3 x double], ptr %865, i64 0, i64 1
  %869 = load double, ptr %868, align 8, !tbaa !8
  %870 = getelementptr inbounds [3 x double], ptr %866, i64 0, i64 1
  store double %869, ptr %870, align 8, !tbaa !8
  %871 = getelementptr inbounds [3 x double], ptr %865, i64 0, i64 2
  %872 = load double, ptr %871, align 8, !tbaa !8
  %873 = getelementptr inbounds [3 x double], ptr %866, i64 0, i64 2
  store double %872, ptr %873, align 8, !tbaa !8
  %874 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 1
  %875 = getelementptr inbounds %"class.dealii::Tensor", ptr %858, i64 %864
  %876 = load double, ptr %874, align 8, !tbaa !8
  store double %876, ptr %875, align 8, !tbaa !8
  %877 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 1, i32 0, i64 1
  %878 = load double, ptr %877, align 8, !tbaa !8
  %879 = getelementptr inbounds [3 x double], ptr %875, i64 0, i64 1
  store double %878, ptr %879, align 8, !tbaa !8
  %880 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 1, i32 0, i64 2
  %881 = load double, ptr %880, align 8, !tbaa !8
  %882 = getelementptr inbounds [3 x double], ptr %875, i64 0, i64 2
  store double %881, ptr %882, align 8, !tbaa !8
  %883 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 2
  %884 = getelementptr inbounds %"class.dealii::Tensor", ptr %862, i64 %864
  %885 = load double, ptr %883, align 8, !tbaa !8
  store double %885, ptr %884, align 8, !tbaa !8
  %886 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 2, i32 0, i64 1
  %887 = load double, ptr %886, align 8, !tbaa !8
  %888 = getelementptr inbounds [3 x double], ptr %884, i64 0, i64 1
  store double %887, ptr %888, align 8, !tbaa !8
  %889 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %865, i64 0, i64 2, i32 0, i64 2
  %890 = load double, ptr %889, align 8, !tbaa !8
  %891 = getelementptr inbounds [3 x double], ptr %884, i64 0, i64 2
  store double %890, ptr %891, align 8, !tbaa !8
  %892 = add nuw nsw i64 %864, 1
  %893 = icmp eq i64 %892, %151
  br i1 %893, label %964, label %863

894:                                              ; preds = %695
  %895 = load ptr, ptr %146, align 8, !tbaa !133
  %896 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %897 unwind label %765

897:                                              ; preds = %894
  %898 = getelementptr inbounds %"class.std::vector.72", ptr %895, i64 %185
  %899 = zext i32 %896 to i64
  %900 = or i64 %135, %899
  %901 = load ptr, ptr %145, align 8, !tbaa !49
  %902 = load ptr, ptr %13, align 8, !tbaa !51
  %903 = ptrtoint ptr %901 to i64
  %904 = ptrtoint ptr %902 to i64
  %905 = sub i64 %903, %904
  %906 = sdiv exact i64 %905, 72
  %907 = shl i64 %906, 32
  %908 = load ptr, ptr %1, align 8, !tbaa !5
  %909 = getelementptr inbounds ptr, ptr %908, i64 5
  %910 = load ptr, ptr %909, align 8
  invoke void %910(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %898, i64 %900, ptr nonnull %13, i64 %907, ptr noundef nonnull align 8 dereferenceable(185) %5, i32 noundef 256)
          to label %911 unwind label %765

911:                                              ; preds = %897
  br i1 %136, label %964, label %912

912:                                              ; preds = %911
  %913 = getelementptr inbounds double, ptr %70, i64 %185
  %914 = load ptr, ptr %13, align 8, !tbaa !51
  %915 = load ptr, ptr %147, align 8, !tbaa !130
  %916 = zext i32 %192 to i64
  %917 = getelementptr inbounds %"class.std::vector.67", ptr %915, i64 %916
  %918 = load ptr, ptr %917, align 8, !tbaa !25
  %919 = add i32 %192, 1
  %920 = zext i32 %919 to i64
  %921 = getelementptr inbounds %"class.std::vector.67", ptr %915, i64 %920
  %922 = load ptr, ptr %921, align 8, !tbaa !25
  %923 = add i32 %192, 2
  %924 = zext i32 %923 to i64
  %925 = getelementptr inbounds %"class.std::vector.67", ptr %915, i64 %924
  %926 = load ptr, ptr %925, align 8, !tbaa !25
  br label %927

927:                                              ; preds = %912, %927
  %928 = phi i64 [ 0, %912 ], [ %962, %927 ]
  %929 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %914, i64 %928
  %930 = load double, ptr %913, align 8, !tbaa !8
  %931 = getelementptr inbounds [3 x double], ptr %929, i64 0, i64 2
  %932 = load double, ptr %931, align 8, !tbaa !8, !noalias !632
  %933 = fmul double %930, %932
  %934 = getelementptr inbounds %"class.dealii::Tensor", ptr %918, i64 %928
  %935 = load <2 x double>, ptr %929, align 8, !tbaa !8, !noalias !632
  %936 = insertelement <2 x double> poison, double %930, i64 0
  %937 = shufflevector <2 x double> %936, <2 x double> poison, <2 x i32> zeroinitializer
  %938 = fmul <2 x double> %937, %935
  store <2 x double> %938, ptr %934, align 8, !tbaa !8
  %939 = getelementptr inbounds [3 x double], ptr %934, i64 0, i64 2
  store double %933, ptr %939, align 8, !tbaa !8
  %940 = load double, ptr %913, align 8, !tbaa !8
  %941 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %929, i64 0, i64 1
  %942 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %929, i64 0, i64 1, i32 0, i64 2
  %943 = load double, ptr %942, align 8, !tbaa !8, !noalias !632
  %944 = fmul double %940, %943
  %945 = getelementptr inbounds %"class.dealii::Tensor", ptr %922, i64 %928
  %946 = load <2 x double>, ptr %941, align 8, !tbaa !8, !noalias !632
  %947 = insertelement <2 x double> poison, double %940, i64 0
  %948 = shufflevector <2 x double> %947, <2 x double> poison, <2 x i32> zeroinitializer
  %949 = fmul <2 x double> %948, %946
  store <2 x double> %949, ptr %945, align 8, !tbaa !8
  %950 = getelementptr inbounds [3 x double], ptr %945, i64 0, i64 2
  store double %944, ptr %950, align 8, !tbaa !8
  %951 = load double, ptr %913, align 8, !tbaa !8
  %952 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %929, i64 0, i64 2
  %953 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %929, i64 0, i64 2, i32 0, i64 2
  %954 = load double, ptr %953, align 8, !tbaa !8, !noalias !632
  %955 = fmul double %951, %954
  %956 = getelementptr inbounds %"class.dealii::Tensor", ptr %926, i64 %928
  %957 = load <2 x double>, ptr %952, align 8, !tbaa !8, !noalias !632
  %958 = insertelement <2 x double> poison, double %951, i64 0
  %959 = shufflevector <2 x double> %958, <2 x double> poison, <2 x i32> zeroinitializer
  %960 = fmul <2 x double> %959, %957
  store <2 x double> %960, ptr %956, align 8, !tbaa !8
  %961 = getelementptr inbounds [3 x double], ptr %956, i64 0, i64 2
  store double %955, ptr %961, align 8, !tbaa !8
  %962 = add nuw nsw i64 %928, 1
  %963 = icmp eq i64 %962, %150
  br i1 %963, label %964, label %927

964:                                              ; preds = %927, %863, %800, %734, %911, %848, %785, %719, %695
  %965 = icmp eq ptr %696, null
  br i1 %965, label %967, label %966

966:                                              ; preds = %964
  call void @_ZdlPv(ptr noundef nonnull %696) #17
  br label %967

967:                                              ; preds = %966, %964
  %968 = load ptr, ptr %13, align 8, !tbaa !51
  %969 = icmp eq ptr %968, null
  br i1 %969, label %971, label %970

970:                                              ; preds = %967
  call void @_ZdlPv(ptr noundef nonnull %968) #17
  br label %971

971:                                              ; preds = %970, %967
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #15
  br label %980

972:                                              ; preds = %765
  call void @_ZdlPv(ptr noundef nonnull %696) #17
  br label %973

973:                                              ; preds = %972, %765, %700
  %974 = phi { ptr, i32 } [ %701, %700 ], [ %766, %765 ], [ %766, %972 ]
  %975 = load ptr, ptr %13, align 8, !tbaa !51
  %976 = icmp eq ptr %975, null
  br i1 %976, label %978, label %977

977:                                              ; preds = %973
  call void @_ZdlPv(ptr noundef nonnull %975) #17
  br label %978

978:                                              ; preds = %977, %973, %698
  %979 = phi { ptr, i32 } [ %699, %698 ], [ %974, %973 ], [ %974, %977 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #15
  br label %995

980:                                              ; preds = %971, %685
  %981 = add nuw nsw i64 %185, 1
  %982 = load i32, ptr %64, align 8, !tbaa !129
  %983 = zext i32 %982 to i64
  %984 = icmp ult i64 %981, %983
  br i1 %984, label %184, label %180

985:                                              ; preds = %180
  %986 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %987 unwind label %992

987:                                              ; preds = %985
  invoke void @_ZNK6dealii13FiniteElementILi3ELi3EE11compute_2ndERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRNS3_16InternalDataBaseERNS1_16InternalDataBaseERNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(728) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %986, ptr noundef nonnull align 8 dereferenceable(185) %5, ptr noundef nonnull align 8 dereferenceable(216) %6, ptr noundef nonnull align 8 dereferenceable(436) %7)
          to label %988 unwind label %992

988:                                              ; preds = %987, %180
  %989 = icmp eq ptr %181, null
  br i1 %989, label %991, label %990

990:                                              ; preds = %988
  call void @_ZdlPv(ptr noundef nonnull %181) #17
  br label %991

991:                                              ; preds = %988, %990
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #15
  ret void

992:                                              ; preds = %985, %987
  %993 = landingpad { ptr, i32 }
          cleanup
  %994 = icmp eq ptr %181, null
  br i1 %994, label %998, label %995

995:                                              ; preds = %248, %450, %683, %978, %992
  %996 = phi { ptr, i32 } [ %993, %992 ], [ %249, %248 ], [ %451, %450 ], [ %684, %683 ], [ %979, %978 ]
  %997 = phi ptr [ %181, %992 ], [ %70, %248 ], [ %70, %450 ], [ %70, %683 ], [ %70, %978 ]
  call void @_ZdlPv(ptr noundef nonnull %997) #17
  br label %998

998:                                              ; preds = %995, %992
  %999 = phi { ptr, i32 } [ %996, %995 ], [ %993, %992 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #15
  resume { ptr, i32 } %999
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZNK6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE22fill_fe_subface_valuesERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjjRKNS_10QuadratureILi2EEERNS5_16InternalDataBaseESJ_RNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(1112) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %3, i32 noundef %4, ptr noundef nonnull align 8 dereferenceable(128) %5, ptr noundef nonnull align 8 dereferenceable(185) %6, ptr noundef nonnull align 8 dereferenceable(185) %7, ptr noundef nonnull align 8 dereferenceable(436) %8) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %11 = alloca %"class.dealii::QProjector<3>::DataSetDescriptor", align 4
  %12 = alloca %"class.std::vector.67", align 8
  %13 = alloca %"class.std::vector.67", align 8
  %14 = alloca %"class.std::vector.72", align 8
  %15 = getelementptr inbounds %"class.dealii::Quadrature.110", ptr %5, i64 0, i32 3
  %16 = getelementptr inbounds %"class.dealii::Quadrature.110", ptr %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !127
  %18 = load ptr, ptr %15, align 8, !tbaa !128
  %19 = ptrtoint ptr %17 to i64
  %20 = ptrtoint ptr %18 to i64
  %21 = sub i64 %19, %20
  %22 = lshr exact i64 %21, 3
  %23 = trunc i64 %22 to i32
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #15
  call void @_ZN6dealii10QProjectorILi3EE17DataSetDescriptorC1Ev(ptr noundef nonnull align 4 dereferenceable(4) %10)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #15
  %24 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !216
  %26 = getelementptr inbounds %"class.dealii::Triangulation", ptr %25, i64 0, i32 1
  %27 = load i32, ptr %2, align 8, !tbaa !218
  %28 = sext i32 %27 to i64
  %29 = load ptr, ptr %26, align 8, !tbaa !219
  %30 = getelementptr inbounds ptr, ptr %29, i64 %28
  %31 = load ptr, ptr %30, align 8, !tbaa !33
  %32 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 1
  %33 = load i32, ptr %32, align 4, !tbaa !221
  %34 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %31, i64 0, i32 4, i32 1
  %35 = mul i32 %33, 6
  %36 = add i32 %35, %3
  %37 = load ptr, ptr %34, align 8, !tbaa !222
  %38 = lshr i32 %36, 6
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i64, ptr %37, i64 %39
  %41 = and i32 %36, 63
  %42 = zext i32 %41 to i64
  %43 = shl nuw i64 1, %42
  %44 = load i64, ptr %40, align 8, !tbaa !223
  %45 = and i64 %43, %44
  %46 = icmp ne i64 %45, 0
  %47 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %31, i64 0, i32 4, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !222
  %49 = getelementptr inbounds i64, ptr %48, i64 %39
  %50 = load i64, ptr %49, align 8, !tbaa !223
  %51 = and i64 %43, %50
  %52 = icmp ne i64 %51, 0
  %53 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %31, i64 0, i32 4, i32 3
  %54 = load ptr, ptr %53, align 8, !tbaa !222
  %55 = getelementptr inbounds i64, ptr %54, i64 %39
  %56 = load i64, ptr %55, align 8, !tbaa !223
  %57 = and i64 %56, %43
  %58 = icmp ne i64 %57, 0
  %59 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %31, i64 0, i32 4
  %60 = sext i32 %33 to i64
  %61 = load ptr, ptr %59, align 8, !tbaa !269, !noalias !145
  %62 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %61, i64 %60
  %63 = zext i32 %3 to i64
  %64 = getelementptr inbounds [6 x i32], ptr %62, i64 0, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !34, !noalias !145
  %66 = getelementptr inbounds %"class.dealii::Triangulation", ptr %25, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !271
  %68 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.160", ptr %67, i64 0, i32 2
  %69 = sext i32 %65 to i64
  %70 = load ptr, ptr %68, align 8, !tbaa !285
  %71 = getelementptr inbounds %"class.dealii::RefinementCase", ptr %70, i64 %69
  %72 = load i8, ptr %71, align 1
  %73 = and i8 %72, 3
  switch i8 %73, label %117 [
    i8 3, label %116
    i8 1, label %74
    i8 2, label %95
  ]

74:                                               ; preds = %9
  %75 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.160", ptr %67, i64 0, i32 1
  %76 = shl i32 %65, 1
  %77 = zext i32 %76 to i64
  %78 = load ptr, ptr %75, align 8, !tbaa !287
  %79 = getelementptr inbounds i32, ptr %78, i64 %77
  %80 = load i32, ptr %79, align 4, !tbaa !34, !noalias !145
  %81 = shl i32 %80, 1
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i32, ptr %78, i64 %82
  %84 = load i32, ptr %83, align 4, !tbaa !34
  %85 = icmp eq i32 %84, -1
  %86 = add i32 %81, 2
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, ptr %78, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !34
  %90 = icmp eq i32 %89, -1
  br i1 %85, label %93, label %91

91:                                               ; preds = %74
  %92 = select i1 %90, i8 2, i8 4
  br label %117

93:                                               ; preds = %74
  %94 = select i1 %90, i8 1, i8 3
  br label %117

95:                                               ; preds = %9
  %96 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.160", ptr %67, i64 0, i32 1
  %97 = shl i32 %65, 1
  %98 = zext i32 %97 to i64
  %99 = load ptr, ptr %96, align 8, !tbaa !287
  %100 = getelementptr inbounds i32, ptr %99, i64 %98
  %101 = load i32, ptr %100, align 4, !tbaa !34, !noalias !145
  %102 = shl i32 %101, 1
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %99, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !34
  %106 = icmp eq i32 %105, -1
  %107 = add i32 %102, 2
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i32, ptr %99, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !34
  %111 = icmp eq i32 %110, -1
  br i1 %106, label %114, label %112

112:                                              ; preds = %95
  %113 = select i1 %111, i8 6, i8 8
  br label %117

114:                                              ; preds = %95
  %115 = select i1 %111, i8 5, i8 7
  br label %117

116:                                              ; preds = %9
  br label %117

117:                                              ; preds = %9, %91, %93, %112, %114, %116
  %118 = phi i8 [ 9, %116 ], [ 0, %9 ], [ %92, %91 ], [ %94, %93 ], [ %113, %112 ], [ %115, %114 ]
  %119 = call i32 @_ZN6dealii10QProjectorILi3EE17DataSetDescriptor7subfaceEjjbbbjNS_8internal11SubfaceCaseILi3EEE(i32 noundef %3, i32 noundef %4, i1 noundef zeroext %46, i1 noundef zeroext %52, i1 noundef zeroext %58, i32 noundef %23, i8 %118)
  store i32 %119, ptr %11, align 4
  %120 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %7, i64 0, i32 2
  %121 = load i32, ptr %120, align 4, !tbaa !118
  %122 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %7, i64 0, i32 3
  %123 = load i32, ptr %122, align 8, !tbaa !125
  %124 = or i32 %123, %121
  %125 = getelementptr inbounds i8, ptr %0, i64 112
  %126 = load i32, ptr %125, align 8, !tbaa !129
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %241, label %128

128:                                              ; preds = %117
  %129 = zext i32 %126 to i64
  %130 = shl nuw nsw i64 %129, 3
  %131 = call noalias noundef nonnull ptr @_Znwm(i64 noundef %130) #16
  %132 = getelementptr inbounds double, ptr %131, i64 %129
  %133 = add nuw nsw i64 %129, 2305843009213693951
  %134 = and i64 %133, 2305843009213693951
  %135 = add nuw nsw i64 %134, 1
  %136 = icmp ult i64 %134, 15
  br i1 %136, label %152, label %137

137:                                              ; preds = %128
  %138 = and i64 %135, 4611686018427387888
  %139 = shl i64 %138, 3
  %140 = getelementptr i8, ptr %131, i64 %139
  br label %141

141:                                              ; preds = %141, %137
  %142 = phi i64 [ 0, %137 ], [ %148, %141 ]
  %143 = shl i64 %142, 3
  %144 = getelementptr i8, ptr %131, i64 %143
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %144, align 8, !tbaa !8
  %145 = getelementptr double, ptr %144, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %145, align 8, !tbaa !8
  %146 = getelementptr double, ptr %144, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %146, align 8, !tbaa !8
  %147 = getelementptr double, ptr %144, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %147, align 8, !tbaa !8
  %148 = add nuw i64 %142, 16
  %149 = icmp eq i64 %148, %138
  br i1 %149, label %150, label %141, !llvm.loop !635

150:                                              ; preds = %141
  %151 = icmp eq i64 %135, %138
  br i1 %151, label %158, label %152

152:                                              ; preds = %128, %150
  %153 = phi ptr [ %131, %128 ], [ %140, %150 ]
  br label %154

154:                                              ; preds = %152, %154
  %155 = phi ptr [ %156, %154 ], [ %153, %152 ]
  store double 1.000000e+00, ptr %155, align 8, !tbaa !8
  %156 = getelementptr inbounds double, ptr %155, i64 1
  %157 = icmp eq ptr %156, %132
  br i1 %157, label %158, label %154, !llvm.loop !636

158:                                              ; preds = %154, %150
  %159 = add nuw nsw i64 %129, 2305843009213693951
  %160 = and i64 %159, 2305843009213693951
  %161 = add nuw nsw i64 %160, 1
  %162 = icmp ult i64 %160, 15
  br i1 %162, label %178, label %163

163:                                              ; preds = %158
  %164 = and i64 %161, 4611686018427387888
  %165 = shl i64 %164, 3
  %166 = getelementptr i8, ptr %131, i64 %165
  br label %167

167:                                              ; preds = %167, %163
  %168 = phi i64 [ 0, %163 ], [ %174, %167 ]
  %169 = shl i64 %168, 3
  %170 = getelementptr i8, ptr %131, i64 %169
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %170, align 8, !tbaa !8
  %171 = getelementptr double, ptr %170, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %171, align 8, !tbaa !8
  %172 = getelementptr double, ptr %170, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %172, align 8, !tbaa !8
  %173 = getelementptr double, ptr %170, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %173, align 8, !tbaa !8
  %174 = add nuw i64 %168, 16
  %175 = icmp eq i64 %174, %164
  br i1 %175, label %176, label %167, !llvm.loop !637

176:                                              ; preds = %167
  %177 = icmp eq i64 %161, %164
  br i1 %177, label %184, label %178

178:                                              ; preds = %158, %176
  %179 = phi ptr [ %131, %158 ], [ %166, %176 ]
  br label %180

180:                                              ; preds = %178, %180
  %181 = phi ptr [ %182, %180 ], [ %179, %178 ]
  store double 1.000000e+00, ptr %181, align 8, !tbaa !8
  %182 = getelementptr inbounds double, ptr %181, i64 1
  %183 = icmp eq ptr %182, %132
  br i1 %183, label %184, label %180, !llvm.loop !638

184:                                              ; preds = %180, %176
  br i1 %127, label %241, label %185

185:                                              ; preds = %184
  %186 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %8, i64 0, i32 14
  %187 = and i32 %124, 1
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 1
  %190 = and i64 %22, 4294967295
  %191 = icmp eq i64 %190, 0
  %192 = mul nuw nsw i64 %190, 24
  %193 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %13, i64 0, i32 2
  %194 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %13, i64 0, i32 1
  %195 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %7, i64 0, i32 1
  %196 = shl nuw i64 %190, 32
  %197 = icmp eq i32 %23, 0
  %198 = getelementptr inbounds %"class.dealii::TableBase", ptr %8, i64 0, i32 1
  %199 = getelementptr inbounds %"class.dealii::TableBase", ptr %8, i64 0, i32 3, i32 0, i32 0, i64 1
  %200 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %12, i64 0, i32 2
  %201 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %12, i64 0, i32 1
  %202 = and i32 %124, 2
  %203 = icmp eq i32 %202, 0
  %204 = mul nuw nsw i64 %190, 72
  %205 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %14, i64 0, i32 2
  %206 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %14, i64 0, i32 1
  %207 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %7, i64 0, i32 2
  %208 = getelementptr inbounds %"class.dealii::FEValuesData", ptr %8, i64 0, i32 1
  %209 = and i64 %22, 4294967295
  %210 = and i64 %22, 4294967295
  %211 = and i64 %22, 4294967295
  %212 = and i64 %22, 4294967295
  %213 = and i64 %22, 4294967295
  %214 = and i64 %22, 4294967295
  %215 = add nsw i64 %209, -1
  %216 = shl nuw nsw i64 %209, 3
  %217 = mul nuw nsw i64 %209, 24
  %218 = add nsw i64 %217, -16
  %219 = add nsw i64 %217, -8
  %220 = add nsw i64 %209, -1
  %221 = shl nuw nsw i64 %209, 3
  %222 = mul nuw nsw i64 %209, 24
  %223 = add nsw i64 %222, -16
  %224 = add nsw i64 %222, -8
  %225 = icmp ult i64 %209, 40
  %226 = trunc i64 %220 to i32
  %227 = trunc i64 %220 to i32
  %228 = icmp ugt i64 %220, 4294967295
  %229 = trunc i64 %220 to i32
  %230 = and i64 %22, 3
  %231 = sub nsw i64 %209, %230
  %232 = icmp eq i64 %230, 0
  %233 = icmp ult i64 %209, 60
  %234 = trunc i64 %215 to i32
  %235 = trunc i64 %215 to i32
  %236 = icmp ugt i64 %215, 4294967295
  %237 = trunc i64 %215 to i32
  %238 = and i64 %22, 3
  %239 = sub nsw i64 %209, %238
  %240 = icmp eq i64 %238, 0
  br label %245

241:                                              ; preds = %1041, %117, %184
  %242 = phi ptr [ %131, %184 ], [ null, %117 ], [ %131, %1041 ]
  %243 = and i32 %124, 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %1049, label %1046

245:                                              ; preds = %185, %1041
  %246 = phi i64 [ 0, %185 ], [ %1042, %1041 ]
  %247 = shl nuw nsw i64 %246, 3
  %248 = getelementptr i8, ptr %131, i64 %247
  %249 = add nuw i64 %247, 8
  %250 = getelementptr i8, ptr %131, i64 %249
  %251 = load ptr, ptr %186, align 8, !tbaa !154
  %252 = getelementptr inbounds i32, ptr %251, i64 %246
  %253 = load i32, ptr %252, align 4, !tbaa !34
  br i1 %188, label %746, label %254

254:                                              ; preds = %245
  %255 = load i32, ptr %189, align 8, !tbaa !519
  switch i32 %255, label %746 [
    i32 0, label %256
    i32 1, label %311
    i32 2, label %311
    i32 256, label %513
  ]

256:                                              ; preds = %254
  br i1 %197, label %746, label %257

257:                                              ; preds = %256
  %258 = add i32 %253, 1
  %259 = add i32 %253, 2
  br label %260

260:                                              ; preds = %257, %294
  %261 = phi i32 [ %307, %294 ], [ 0, %257 ]
  %262 = load ptr, ptr %195, align 8, !tbaa !130
  %263 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %264 unwind label %309

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.std::vector.67", ptr %262, i64 %246
  %266 = add i32 %263, %261
  %267 = zext i32 %266 to i64
  %268 = load ptr, ptr %265, align 8, !tbaa !25
  %269 = getelementptr inbounds %"class.dealii::Tensor", ptr %268, i64 %267
  %270 = load double, ptr %269, align 8, !tbaa !8
  %271 = load ptr, ptr %198, align 8, !tbaa !35
  %272 = load i32, ptr %199, align 8, !tbaa !34
  %273 = mul i32 %272, %253
  %274 = add i32 %273, %261
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds double, ptr %271, i64 %275
  store double %270, ptr %276, align 8, !tbaa !8
  %277 = load ptr, ptr %195, align 8, !tbaa !130
  %278 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %279 unwind label %309

279:                                              ; preds = %264
  %280 = getelementptr inbounds %"class.std::vector.67", ptr %277, i64 %246
  %281 = add i32 %278, %261
  %282 = zext i32 %281 to i64
  %283 = load ptr, ptr %280, align 8, !tbaa !25
  %284 = getelementptr inbounds %"class.dealii::Tensor", ptr %283, i64 %282, i32 0, i64 1
  %285 = load double, ptr %284, align 8, !tbaa !8
  %286 = load ptr, ptr %198, align 8, !tbaa !35
  %287 = load i32, ptr %199, align 8, !tbaa !34
  %288 = mul i32 %287, %258
  %289 = add i32 %288, %261
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds double, ptr %286, i64 %290
  store double %285, ptr %291, align 8, !tbaa !8
  %292 = load ptr, ptr %195, align 8, !tbaa !130
  %293 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %294 unwind label %309

294:                                              ; preds = %279
  %295 = getelementptr inbounds %"class.std::vector.67", ptr %292, i64 %246
  %296 = add i32 %293, %261
  %297 = zext i32 %296 to i64
  %298 = load ptr, ptr %295, align 8, !tbaa !25
  %299 = getelementptr inbounds %"class.dealii::Tensor", ptr %298, i64 %297, i32 0, i64 2
  %300 = load double, ptr %299, align 8, !tbaa !8
  %301 = load ptr, ptr %198, align 8, !tbaa !35
  %302 = load i32, ptr %199, align 8, !tbaa !34
  %303 = mul i32 %302, %259
  %304 = add i32 %303, %261
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds double, ptr %301, i64 %305
  store double %300, ptr %306, align 8, !tbaa !8
  %307 = add nuw i32 %261, 1
  %308 = icmp eq i32 %307, %23
  br i1 %308, label %746, label %260

309:                                              ; preds = %279, %264, %260
  %310 = landingpad { ptr, i32 }
          cleanup
  br label %1056

311:                                              ; preds = %254, %254
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #15
  br i1 %191, label %312, label %313

312:                                              ; preds = %311
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  br label %318

313:                                              ; preds = %311
  %314 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %192) #16
          to label %315 unwind label %503

315:                                              ; preds = %313
  store ptr %314, ptr %12, align 8, !tbaa !25
  %316 = getelementptr inbounds %"class.dealii::Tensor", ptr %314, i64 %190
  store ptr %316, ptr %200, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %314, i8 0, i64 %192, i1 false), !tbaa !8
  %317 = getelementptr i8, ptr %314, i64 %192
  br label %318

318:                                              ; preds = %315, %312
  %319 = phi ptr [ null, %312 ], [ %317, %315 ]
  store ptr %319, ptr %201, align 8, !tbaa !23
  %320 = load ptr, ptr %195, align 8, !tbaa !130
  %321 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %322 unwind label %505

322:                                              ; preds = %318
  %323 = getelementptr inbounds %"class.std::vector.67", ptr %320, i64 %246
  %324 = zext i32 %321 to i64
  %325 = or i64 %196, %324
  %326 = load ptr, ptr %201, align 8, !tbaa !23
  %327 = load ptr, ptr %12, align 8, !tbaa !25
  %328 = ptrtoint ptr %326 to i64
  %329 = ptrtoint ptr %327 to i64
  %330 = sub i64 %328, %329
  %331 = sdiv exact i64 %330, 24
  %332 = load i32, ptr %189, align 8, !tbaa !519
  %333 = shl i64 %331, 32
  %334 = load ptr, ptr %1, align 8, !tbaa !5
  %335 = getelementptr inbounds ptr, ptr %334, i64 4
  %336 = load ptr, ptr %335, align 8
  invoke void %336(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %323, i64 %325, ptr nonnull %12, i64 %333, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef %332)
          to label %337 unwind label %505

337:                                              ; preds = %322
  %338 = load ptr, ptr %12, align 8, !tbaa !25
  br i1 %197, label %500, label %339

339:                                              ; preds = %337
  %340 = load ptr, ptr %198, align 8, !tbaa !35
  %341 = load i32, ptr %199, align 8, !tbaa !34
  %342 = mul i32 %341, %253
  %343 = add i32 %253, 1
  %344 = mul i32 %341, %343
  %345 = add i32 %253, 2
  %346 = mul i32 %341, %345
  br i1 %233, label %478, label %347

347:                                              ; preds = %339
  %348 = xor i32 %342, -1
  %349 = icmp ult i32 %348, %234
  %350 = xor i32 %344, -1
  %351 = icmp ult i32 %350, %235
  %352 = or i1 %351, %236
  %353 = xor i32 %346, -1
  %354 = icmp ult i32 %353, %237
  %355 = or i1 %349, %352
  %356 = or i1 %354, %355
  br i1 %356, label %478, label %357

357:                                              ; preds = %347
  %358 = zext i32 %342 to i64
  %359 = shl nuw nsw i64 %358, 3
  %360 = getelementptr i8, ptr %340, i64 %359
  %361 = getelementptr i8, ptr %340, i64 %216
  %362 = getelementptr i8, ptr %361, i64 %359
  %363 = zext i32 %344 to i64
  %364 = shl nuw nsw i64 %363, 3
  %365 = getelementptr i8, ptr %340, i64 %364
  %366 = getelementptr i8, ptr %361, i64 %364
  %367 = zext i32 %346 to i64
  %368 = shl nuw nsw i64 %367, 3
  %369 = getelementptr i8, ptr %340, i64 %368
  %370 = getelementptr i8, ptr %340, i64 %216
  %371 = getelementptr i8, ptr %370, i64 %368
  %372 = getelementptr i8, ptr %338, i64 %218
  %373 = getelementptr i8, ptr %338, i64 8
  %374 = getelementptr i8, ptr %338, i64 %219
  %375 = getelementptr i8, ptr %338, i64 16
  %376 = getelementptr i8, ptr %338, i64 %217
  %377 = icmp ult ptr %360, %366
  %378 = icmp ult ptr %365, %362
  %379 = and i1 %377, %378
  %380 = icmp ult ptr %360, %371
  %381 = icmp ult ptr %369, %362
  %382 = and i1 %380, %381
  %383 = or i1 %379, %382
  %384 = icmp ult ptr %360, %372
  %385 = icmp ult ptr %338, %362
  %386 = and i1 %384, %385
  %387 = or i1 %383, %386
  %388 = icmp ult ptr %360, %374
  %389 = icmp ult ptr %373, %362
  %390 = and i1 %388, %389
  %391 = or i1 %387, %390
  %392 = icmp ult ptr %360, %376
  %393 = icmp ult ptr %375, %362
  %394 = and i1 %392, %393
  %395 = or i1 %391, %394
  %396 = icmp ult ptr %365, %371
  %397 = icmp ult ptr %369, %366
  %398 = and i1 %396, %397
  %399 = or i1 %395, %398
  %400 = icmp ult ptr %365, %372
  %401 = icmp ult ptr %338, %366
  %402 = and i1 %400, %401
  %403 = or i1 %399, %402
  %404 = icmp ult ptr %365, %374
  %405 = icmp ult ptr %373, %366
  %406 = and i1 %404, %405
  %407 = or i1 %403, %406
  %408 = icmp ult ptr %365, %376
  %409 = icmp ult ptr %375, %366
  %410 = and i1 %408, %409
  %411 = or i1 %407, %410
  %412 = icmp ult ptr %369, %372
  %413 = icmp ult ptr %338, %371
  %414 = and i1 %412, %413
  %415 = or i1 %411, %414
  %416 = icmp ult ptr %369, %374
  %417 = icmp ult ptr %373, %371
  %418 = and i1 %416, %417
  %419 = or i1 %415, %418
  %420 = icmp ult ptr %369, %376
  %421 = icmp ult ptr %375, %371
  %422 = and i1 %420, %421
  %423 = or i1 %419, %422
  br i1 %423, label %478, label %424

424:                                              ; preds = %357, %424
  %425 = phi i64 [ %475, %424 ], [ 0, %357 ]
  %426 = trunc i64 %425 to i32
  %427 = or i64 %425, 1
  %428 = or i64 %425, 2
  %429 = or i64 %425, 3
  %430 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %425
  %431 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %427
  %432 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %428
  %433 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %429
  %434 = load double, ptr %430, align 8, !tbaa !8, !alias.scope !639
  %435 = load double, ptr %431, align 8, !tbaa !8, !alias.scope !639
  %436 = load double, ptr %432, align 8, !tbaa !8, !alias.scope !639
  %437 = load double, ptr %433, align 8, !tbaa !8, !alias.scope !639
  %438 = insertelement <4 x double> poison, double %434, i64 0
  %439 = insertelement <4 x double> %438, double %435, i64 1
  %440 = insertelement <4 x double> %439, double %436, i64 2
  %441 = insertelement <4 x double> %440, double %437, i64 3
  %442 = add i32 %342, %426
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds double, ptr %340, i64 %443
  store <4 x double> %441, ptr %444, align 8, !tbaa !8, !alias.scope !642, !noalias !644
  %445 = getelementptr inbounds [3 x double], ptr %430, i64 0, i64 1
  %446 = getelementptr inbounds [3 x double], ptr %431, i64 0, i64 1
  %447 = getelementptr inbounds [3 x double], ptr %432, i64 0, i64 1
  %448 = getelementptr inbounds [3 x double], ptr %433, i64 0, i64 1
  %449 = load double, ptr %445, align 8, !tbaa !8, !alias.scope !649
  %450 = load double, ptr %446, align 8, !tbaa !8, !alias.scope !649
  %451 = load double, ptr %447, align 8, !tbaa !8, !alias.scope !649
  %452 = load double, ptr %448, align 8, !tbaa !8, !alias.scope !649
  %453 = insertelement <4 x double> poison, double %449, i64 0
  %454 = insertelement <4 x double> %453, double %450, i64 1
  %455 = insertelement <4 x double> %454, double %451, i64 2
  %456 = insertelement <4 x double> %455, double %452, i64 3
  %457 = add i32 %344, %426
  %458 = zext i32 %457 to i64
  %459 = getelementptr inbounds double, ptr %340, i64 %458
  store <4 x double> %456, ptr %459, align 8, !tbaa !8, !alias.scope !650, !noalias !651
  %460 = getelementptr inbounds [3 x double], ptr %430, i64 0, i64 2
  %461 = getelementptr inbounds [3 x double], ptr %431, i64 0, i64 2
  %462 = getelementptr inbounds [3 x double], ptr %432, i64 0, i64 2
  %463 = getelementptr inbounds [3 x double], ptr %433, i64 0, i64 2
  %464 = load double, ptr %460, align 8, !tbaa !8, !alias.scope !652
  %465 = load double, ptr %461, align 8, !tbaa !8, !alias.scope !652
  %466 = load double, ptr %462, align 8, !tbaa !8, !alias.scope !652
  %467 = load double, ptr %463, align 8, !tbaa !8, !alias.scope !652
  %468 = insertelement <4 x double> poison, double %464, i64 0
  %469 = insertelement <4 x double> %468, double %465, i64 1
  %470 = insertelement <4 x double> %469, double %466, i64 2
  %471 = insertelement <4 x double> %470, double %467, i64 3
  %472 = add i32 %346, %426
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds double, ptr %340, i64 %473
  store <4 x double> %471, ptr %474, align 8, !tbaa !8, !alias.scope !653, !noalias !654
  %475 = add nuw i64 %425, 4
  %476 = icmp eq i64 %475, %239
  br i1 %476, label %477, label %424, !llvm.loop !655

477:                                              ; preds = %424
  br i1 %240, label %502, label %478

478:                                              ; preds = %357, %347, %339, %477
  %479 = phi i64 [ 0, %357 ], [ 0, %347 ], [ 0, %339 ], [ %239, %477 ]
  br label %480

480:                                              ; preds = %478, %480
  %481 = phi i64 [ %498, %480 ], [ %479, %478 ]
  %482 = getelementptr inbounds %"class.dealii::Tensor", ptr %338, i64 %481
  %483 = load double, ptr %482, align 8, !tbaa !8
  %484 = trunc i64 %481 to i32
  %485 = add i32 %342, %484
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds double, ptr %340, i64 %486
  store double %483, ptr %487, align 8, !tbaa !8
  %488 = getelementptr inbounds [3 x double], ptr %482, i64 0, i64 1
  %489 = load double, ptr %488, align 8, !tbaa !8
  %490 = add i32 %344, %484
  %491 = zext i32 %490 to i64
  %492 = getelementptr inbounds double, ptr %340, i64 %491
  store double %489, ptr %492, align 8, !tbaa !8
  %493 = getelementptr inbounds [3 x double], ptr %482, i64 0, i64 2
  %494 = load double, ptr %493, align 8, !tbaa !8
  %495 = add i32 %346, %484
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds double, ptr %340, i64 %496
  store double %494, ptr %497, align 8, !tbaa !8
  %498 = add nuw nsw i64 %481, 1
  %499 = icmp eq i64 %498, %210
  br i1 %499, label %502, label %480, !llvm.loop !656

500:                                              ; preds = %337
  %501 = icmp eq ptr %338, null
  br i1 %501, label %510, label %502

502:                                              ; preds = %480, %477, %500
  call void @_ZdlPv(ptr noundef nonnull %338) #17
  br label %510

503:                                              ; preds = %313
  %504 = landingpad { ptr, i32 }
          cleanup
  br label %511

505:                                              ; preds = %322, %318
  %506 = landingpad { ptr, i32 }
          cleanup
  %507 = load ptr, ptr %12, align 8, !tbaa !25
  %508 = icmp eq ptr %507, null
  br i1 %508, label %511, label %509

509:                                              ; preds = %505
  call void @_ZdlPv(ptr noundef nonnull %507) #17
  br label %511

510:                                              ; preds = %502, %500
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #15
  br label %746

511:                                              ; preds = %509, %505, %503
  %512 = phi { ptr, i32 } [ %504, %503 ], [ %506, %505 ], [ %506, %509 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #15
  br label %1056

513:                                              ; preds = %254
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #15
  br i1 %191, label %514, label %515

514:                                              ; preds = %513
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  br label %520

515:                                              ; preds = %513
  %516 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %192) #16
          to label %517 unwind label %736

517:                                              ; preds = %515
  store ptr %516, ptr %13, align 8, !tbaa !25
  %518 = getelementptr inbounds %"class.dealii::Tensor", ptr %516, i64 %190
  store ptr %518, ptr %193, align 8, !tbaa !173
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %516, i8 0, i64 %192, i1 false), !tbaa !8
  %519 = getelementptr i8, ptr %516, i64 %192
  br label %520

520:                                              ; preds = %517, %514
  %521 = phi ptr [ null, %514 ], [ %519, %517 ]
  store ptr %521, ptr %194, align 8, !tbaa !23
  %522 = load ptr, ptr %195, align 8, !tbaa !130
  %523 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %524 unwind label %738

524:                                              ; preds = %520
  %525 = getelementptr inbounds %"class.std::vector.67", ptr %522, i64 %246
  %526 = zext i32 %523 to i64
  %527 = or i64 %196, %526
  %528 = load ptr, ptr %194, align 8, !tbaa !23
  %529 = load ptr, ptr %13, align 8, !tbaa !25
  %530 = ptrtoint ptr %528 to i64
  %531 = ptrtoint ptr %529 to i64
  %532 = sub i64 %530, %531
  %533 = sdiv exact i64 %532, 24
  %534 = shl i64 %533, 32
  %535 = load ptr, ptr %1, align 8, !tbaa !5
  %536 = getelementptr inbounds ptr, ptr %535, i64 4
  %537 = load ptr, ptr %536, align 8
  invoke void %537(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %525, i64 %527, ptr nonnull %13, i64 %534, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 256)
          to label %538 unwind label %738

538:                                              ; preds = %524
  %539 = load ptr, ptr %13, align 8, !tbaa !25
  br i1 %197, label %733, label %540

540:                                              ; preds = %538
  %541 = getelementptr inbounds double, ptr %131, i64 %246
  %542 = load ptr, ptr %198, align 8, !tbaa !35
  %543 = load i32, ptr %199, align 8, !tbaa !34
  %544 = mul i32 %543, %253
  %545 = add i32 %253, 1
  %546 = mul i32 %543, %545
  %547 = add i32 %253, 2
  %548 = mul i32 %543, %547
  br i1 %225, label %705, label %549

549:                                              ; preds = %540
  %550 = xor i32 %544, -1
  %551 = icmp ult i32 %550, %226
  %552 = xor i32 %546, -1
  %553 = icmp ult i32 %552, %227
  %554 = or i1 %553, %228
  %555 = xor i32 %548, -1
  %556 = icmp ult i32 %555, %229
  %557 = or i1 %551, %554
  %558 = or i1 %556, %557
  br i1 %558, label %705, label %559

559:                                              ; preds = %549
  %560 = zext i32 %544 to i64
  %561 = shl nuw nsw i64 %560, 3
  %562 = getelementptr i8, ptr %542, i64 %561
  %563 = getelementptr i8, ptr %542, i64 %221
  %564 = getelementptr i8, ptr %563, i64 %561
  %565 = zext i32 %546 to i64
  %566 = shl nuw nsw i64 %565, 3
  %567 = getelementptr i8, ptr %542, i64 %566
  %568 = getelementptr i8, ptr %563, i64 %566
  %569 = zext i32 %548 to i64
  %570 = shl nuw nsw i64 %569, 3
  %571 = getelementptr i8, ptr %542, i64 %570
  %572 = getelementptr i8, ptr %542, i64 %221
  %573 = getelementptr i8, ptr %572, i64 %570
  %574 = getelementptr i8, ptr %539, i64 %223
  %575 = getelementptr i8, ptr %539, i64 8
  %576 = getelementptr i8, ptr %539, i64 %224
  %577 = getelementptr i8, ptr %539, i64 16
  %578 = getelementptr i8, ptr %539, i64 %222
  %579 = icmp ult ptr %562, %568
  %580 = icmp ult ptr %567, %564
  %581 = and i1 %579, %580
  %582 = icmp ult ptr %562, %573
  %583 = icmp ult ptr %571, %564
  %584 = and i1 %582, %583
  %585 = or i1 %581, %584
  %586 = icmp ult ptr %562, %250
  %587 = icmp ult ptr %248, %564
  %588 = and i1 %586, %587
  %589 = or i1 %585, %588
  %590 = icmp ult ptr %562, %574
  %591 = icmp ult ptr %539, %564
  %592 = and i1 %590, %591
  %593 = or i1 %589, %592
  %594 = icmp ult ptr %562, %576
  %595 = icmp ult ptr %575, %564
  %596 = and i1 %594, %595
  %597 = or i1 %593, %596
  %598 = icmp ult ptr %562, %578
  %599 = icmp ult ptr %577, %564
  %600 = and i1 %598, %599
  %601 = or i1 %597, %600
  %602 = icmp ult ptr %567, %573
  %603 = icmp ult ptr %571, %568
  %604 = and i1 %602, %603
  %605 = or i1 %601, %604
  %606 = icmp ult ptr %567, %250
  %607 = icmp ult ptr %248, %568
  %608 = and i1 %606, %607
  %609 = or i1 %605, %608
  %610 = icmp ult ptr %567, %574
  %611 = icmp ult ptr %539, %568
  %612 = and i1 %610, %611
  %613 = or i1 %609, %612
  %614 = icmp ult ptr %567, %576
  %615 = icmp ult ptr %575, %568
  %616 = and i1 %614, %615
  %617 = or i1 %613, %616
  %618 = icmp ult ptr %567, %578
  %619 = icmp ult ptr %577, %568
  %620 = and i1 %618, %619
  %621 = or i1 %617, %620
  %622 = icmp ult ptr %571, %250
  %623 = icmp ult ptr %248, %573
  %624 = and i1 %622, %623
  %625 = or i1 %621, %624
  %626 = icmp ult ptr %571, %574
  %627 = icmp ult ptr %539, %573
  %628 = and i1 %626, %627
  %629 = or i1 %625, %628
  %630 = icmp ult ptr %571, %576
  %631 = icmp ult ptr %575, %573
  %632 = and i1 %630, %631
  %633 = or i1 %629, %632
  %634 = icmp ult ptr %571, %578
  %635 = icmp ult ptr %577, %573
  %636 = and i1 %634, %635
  %637 = or i1 %633, %636
  br i1 %637, label %705, label %638

638:                                              ; preds = %559
  %639 = load double, ptr %541, align 8, !tbaa !8, !alias.scope !657
  %640 = insertelement <4 x double> poison, double %639, i64 0
  %641 = shufflevector <4 x double> %640, <4 x double> poison, <4 x i32> zeroinitializer
  %642 = load double, ptr %541, align 8, !tbaa !8, !alias.scope !657
  %643 = insertelement <4 x double> poison, double %642, i64 0
  %644 = shufflevector <4 x double> %643, <4 x double> poison, <4 x i32> zeroinitializer
  %645 = load double, ptr %541, align 8, !tbaa !8, !alias.scope !657
  %646 = insertelement <4 x double> poison, double %645, i64 0
  %647 = shufflevector <4 x double> %646, <4 x double> poison, <4 x i32> zeroinitializer
  br label %648

648:                                              ; preds = %648, %638
  %649 = phi i64 [ 0, %638 ], [ %702, %648 ]
  %650 = trunc i64 %649 to i32
  %651 = or i64 %649, 1
  %652 = or i64 %649, 2
  %653 = or i64 %649, 3
  %654 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %649
  %655 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %651
  %656 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %652
  %657 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %653
  %658 = load double, ptr %654, align 8, !tbaa !8, !alias.scope !660
  %659 = load double, ptr %655, align 8, !tbaa !8, !alias.scope !660
  %660 = load double, ptr %656, align 8, !tbaa !8, !alias.scope !660
  %661 = load double, ptr %657, align 8, !tbaa !8, !alias.scope !660
  %662 = insertelement <4 x double> poison, double %658, i64 0
  %663 = insertelement <4 x double> %662, double %659, i64 1
  %664 = insertelement <4 x double> %663, double %660, i64 2
  %665 = insertelement <4 x double> %664, double %661, i64 3
  %666 = fmul <4 x double> %641, %665
  %667 = add i32 %544, %650
  %668 = zext i32 %667 to i64
  %669 = getelementptr inbounds double, ptr %542, i64 %668
  store <4 x double> %666, ptr %669, align 8, !tbaa !8, !alias.scope !662, !noalias !664
  %670 = getelementptr inbounds [3 x double], ptr %654, i64 0, i64 1
  %671 = getelementptr inbounds [3 x double], ptr %655, i64 0, i64 1
  %672 = getelementptr inbounds [3 x double], ptr %656, i64 0, i64 1
  %673 = getelementptr inbounds [3 x double], ptr %657, i64 0, i64 1
  %674 = load double, ptr %670, align 8, !tbaa !8, !alias.scope !669
  %675 = load double, ptr %671, align 8, !tbaa !8, !alias.scope !669
  %676 = load double, ptr %672, align 8, !tbaa !8, !alias.scope !669
  %677 = load double, ptr %673, align 8, !tbaa !8, !alias.scope !669
  %678 = insertelement <4 x double> poison, double %674, i64 0
  %679 = insertelement <4 x double> %678, double %675, i64 1
  %680 = insertelement <4 x double> %679, double %676, i64 2
  %681 = insertelement <4 x double> %680, double %677, i64 3
  %682 = fmul <4 x double> %644, %681
  %683 = add i32 %546, %650
  %684 = zext i32 %683 to i64
  %685 = getelementptr inbounds double, ptr %542, i64 %684
  store <4 x double> %682, ptr %685, align 8, !tbaa !8, !alias.scope !670, !noalias !671
  %686 = getelementptr inbounds [3 x double], ptr %654, i64 0, i64 2
  %687 = getelementptr inbounds [3 x double], ptr %655, i64 0, i64 2
  %688 = getelementptr inbounds [3 x double], ptr %656, i64 0, i64 2
  %689 = getelementptr inbounds [3 x double], ptr %657, i64 0, i64 2
  %690 = load double, ptr %686, align 8, !tbaa !8, !alias.scope !672
  %691 = load double, ptr %687, align 8, !tbaa !8, !alias.scope !672
  %692 = load double, ptr %688, align 8, !tbaa !8, !alias.scope !672
  %693 = load double, ptr %689, align 8, !tbaa !8, !alias.scope !672
  %694 = insertelement <4 x double> poison, double %690, i64 0
  %695 = insertelement <4 x double> %694, double %691, i64 1
  %696 = insertelement <4 x double> %695, double %692, i64 2
  %697 = insertelement <4 x double> %696, double %693, i64 3
  %698 = fmul <4 x double> %647, %697
  %699 = add i32 %548, %650
  %700 = zext i32 %699 to i64
  %701 = getelementptr inbounds double, ptr %542, i64 %700
  store <4 x double> %698, ptr %701, align 8, !tbaa !8, !alias.scope !673, !noalias !674
  %702 = add nuw i64 %649, 4
  %703 = icmp eq i64 %702, %231
  br i1 %703, label %704, label %648, !llvm.loop !675

704:                                              ; preds = %648
  br i1 %232, label %735, label %705

705:                                              ; preds = %559, %549, %540, %704
  %706 = phi i64 [ 0, %559 ], [ 0, %549 ], [ 0, %540 ], [ %231, %704 ]
  br label %707

707:                                              ; preds = %705, %707
  %708 = phi i64 [ %731, %707 ], [ %706, %705 ]
  %709 = getelementptr inbounds %"class.dealii::Tensor", ptr %539, i64 %708
  %710 = load double, ptr %541, align 8, !tbaa !8
  %711 = load double, ptr %709, align 8, !tbaa !8
  %712 = fmul double %710, %711
  %713 = trunc i64 %708 to i32
  %714 = add i32 %544, %713
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds double, ptr %542, i64 %715
  store double %712, ptr %716, align 8, !tbaa !8
  %717 = load double, ptr %541, align 8, !tbaa !8
  %718 = getelementptr inbounds [3 x double], ptr %709, i64 0, i64 1
  %719 = load double, ptr %718, align 8, !tbaa !8
  %720 = fmul double %717, %719
  %721 = add i32 %546, %713
  %722 = zext i32 %721 to i64
  %723 = getelementptr inbounds double, ptr %542, i64 %722
  store double %720, ptr %723, align 8, !tbaa !8
  %724 = load double, ptr %541, align 8, !tbaa !8
  %725 = getelementptr inbounds [3 x double], ptr %709, i64 0, i64 2
  %726 = load double, ptr %725, align 8, !tbaa !8
  %727 = fmul double %724, %726
  %728 = add i32 %548, %713
  %729 = zext i32 %728 to i64
  %730 = getelementptr inbounds double, ptr %542, i64 %729
  store double %727, ptr %730, align 8, !tbaa !8
  %731 = add nuw nsw i64 %708, 1
  %732 = icmp eq i64 %731, %209
  br i1 %732, label %735, label %707, !llvm.loop !676

733:                                              ; preds = %538
  %734 = icmp eq ptr %539, null
  br i1 %734, label %743, label %735

735:                                              ; preds = %707, %704, %733
  call void @_ZdlPv(ptr noundef nonnull %539) #17
  br label %743

736:                                              ; preds = %515
  %737 = landingpad { ptr, i32 }
          cleanup
  br label %744

738:                                              ; preds = %524, %520
  %739 = landingpad { ptr, i32 }
          cleanup
  %740 = load ptr, ptr %13, align 8, !tbaa !25
  %741 = icmp eq ptr %740, null
  br i1 %741, label %744, label %742

742:                                              ; preds = %738
  call void @_ZdlPv(ptr noundef nonnull %740) #17
  br label %744

743:                                              ; preds = %735, %733
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #15
  br label %746

744:                                              ; preds = %742, %738, %736
  %745 = phi { ptr, i32 } [ %737, %736 ], [ %739, %738 ], [ %739, %742 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #15
  br label %1056

746:                                              ; preds = %294, %256, %510, %743, %254, %245
  br i1 %203, label %1041, label %747

747:                                              ; preds = %746
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #15
  br i1 %191, label %748, label %749

748:                                              ; preds = %747
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  br label %756

749:                                              ; preds = %747
  %750 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %204) #16
          to label %751 unwind label %759

751:                                              ; preds = %749
  store ptr %750, ptr %14, align 8, !tbaa !51
  %752 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %750, i64 %190
  store ptr %752, ptr %205, align 8, !tbaa !212
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %750, i8 0, i64 %204, i1 false), !tbaa !8
  %753 = getelementptr i8, ptr %750, i64 %204
  store ptr %753, ptr %206, align 8, !tbaa !49
  %754 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %204) #16
          to label %755 unwind label %761

755:                                              ; preds = %751
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %754, i8 0, i64 %204, i1 false), !tbaa !8
  br label %756

756:                                              ; preds = %755, %748
  %757 = phi ptr [ null, %748 ], [ %754, %755 ]
  %758 = load i32, ptr %189, align 8, !tbaa !519
  switch i32 %758, label %1025 [
    i32 0, label %763
    i32 1, label %829
    i32 2, label %892
    i32 256, label %955
  ]

759:                                              ; preds = %749
  %760 = landingpad { ptr, i32 }
          cleanup
  br label %1039

761:                                              ; preds = %751
  %762 = landingpad { ptr, i32 }
          cleanup
  br label %1034

763:                                              ; preds = %756
  %764 = load ptr, ptr %207, align 8, !tbaa !133
  %765 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %766 unwind label %826

766:                                              ; preds = %763
  %767 = getelementptr inbounds %"class.std::vector.72", ptr %764, i64 %246
  %768 = zext i32 %765 to i64
  %769 = or i64 %196, %768
  %770 = load ptr, ptr %206, align 8, !tbaa !49
  %771 = load ptr, ptr %14, align 8, !tbaa !51
  %772 = ptrtoint ptr %770 to i64
  %773 = ptrtoint ptr %771 to i64
  %774 = sub i64 %772, %773
  %775 = sdiv exact i64 %774, 72
  %776 = shl i64 %775, 32
  %777 = load ptr, ptr %1, align 8, !tbaa !5
  %778 = getelementptr inbounds ptr, ptr %777, i64 5
  %779 = load ptr, ptr %778, align 8
  invoke void %779(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %767, i64 %769, ptr nonnull %14, i64 %776, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 1)
          to label %780 unwind label %826

780:                                              ; preds = %766
  br i1 %197, label %1025, label %781

781:                                              ; preds = %780
  %782 = load ptr, ptr %14, align 8, !tbaa !51
  %783 = load ptr, ptr %208, align 8, !tbaa !130
  %784 = zext i32 %253 to i64
  %785 = getelementptr inbounds %"class.std::vector.67", ptr %783, i64 %784
  %786 = load ptr, ptr %785, align 8, !tbaa !25
  %787 = add i32 %253, 1
  %788 = zext i32 %787 to i64
  %789 = getelementptr inbounds %"class.std::vector.67", ptr %783, i64 %788
  %790 = load ptr, ptr %789, align 8, !tbaa !25
  %791 = add i32 %253, 2
  %792 = zext i32 %791 to i64
  %793 = getelementptr inbounds %"class.std::vector.67", ptr %783, i64 %792
  %794 = load ptr, ptr %793, align 8, !tbaa !25
  br label %795

795:                                              ; preds = %781, %795
  %796 = phi i64 [ 0, %781 ], [ %824, %795 ]
  %797 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %782, i64 %796
  %798 = getelementptr inbounds %"class.dealii::Tensor", ptr %786, i64 %796
  %799 = load double, ptr %797, align 8, !tbaa !8
  store double %799, ptr %798, align 8, !tbaa !8
  %800 = getelementptr inbounds [3 x double], ptr %797, i64 0, i64 1
  %801 = load double, ptr %800, align 8, !tbaa !8
  %802 = getelementptr inbounds [3 x double], ptr %798, i64 0, i64 1
  store double %801, ptr %802, align 8, !tbaa !8
  %803 = getelementptr inbounds [3 x double], ptr %797, i64 0, i64 2
  %804 = load double, ptr %803, align 8, !tbaa !8
  %805 = getelementptr inbounds [3 x double], ptr %798, i64 0, i64 2
  store double %804, ptr %805, align 8, !tbaa !8
  %806 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 1
  %807 = getelementptr inbounds %"class.dealii::Tensor", ptr %790, i64 %796
  %808 = load double, ptr %806, align 8, !tbaa !8
  store double %808, ptr %807, align 8, !tbaa !8
  %809 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 1, i32 0, i64 1
  %810 = load double, ptr %809, align 8, !tbaa !8
  %811 = getelementptr inbounds [3 x double], ptr %807, i64 0, i64 1
  store double %810, ptr %811, align 8, !tbaa !8
  %812 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 1, i32 0, i64 2
  %813 = load double, ptr %812, align 8, !tbaa !8
  %814 = getelementptr inbounds [3 x double], ptr %807, i64 0, i64 2
  store double %813, ptr %814, align 8, !tbaa !8
  %815 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 2
  %816 = getelementptr inbounds %"class.dealii::Tensor", ptr %794, i64 %796
  %817 = load double, ptr %815, align 8, !tbaa !8
  store double %817, ptr %816, align 8, !tbaa !8
  %818 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 2, i32 0, i64 1
  %819 = load double, ptr %818, align 8, !tbaa !8
  %820 = getelementptr inbounds [3 x double], ptr %816, i64 0, i64 1
  store double %819, ptr %820, align 8, !tbaa !8
  %821 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %797, i64 0, i64 2, i32 0, i64 2
  %822 = load double, ptr %821, align 8, !tbaa !8
  %823 = getelementptr inbounds [3 x double], ptr %816, i64 0, i64 2
  store double %822, ptr %823, align 8, !tbaa !8
  %824 = add nuw nsw i64 %796, 1
  %825 = icmp eq i64 %824, %214
  br i1 %825, label %1025, label %795

826:                                              ; preds = %958, %955, %895, %892, %832, %829, %766, %763
  %827 = landingpad { ptr, i32 }
          cleanup
  %828 = icmp eq ptr %757, null
  br i1 %828, label %1034, label %1033

829:                                              ; preds = %756
  %830 = load ptr, ptr %207, align 8, !tbaa !133
  %831 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %832 unwind label %826

832:                                              ; preds = %829
  %833 = getelementptr inbounds %"class.std::vector.72", ptr %830, i64 %246
  %834 = zext i32 %831 to i64
  %835 = or i64 %196, %834
  %836 = load ptr, ptr %206, align 8, !tbaa !49
  %837 = load ptr, ptr %14, align 8, !tbaa !51
  %838 = ptrtoint ptr %836 to i64
  %839 = ptrtoint ptr %837 to i64
  %840 = sub i64 %838, %839
  %841 = sdiv exact i64 %840, 72
  %842 = shl i64 %841, 32
  %843 = load ptr, ptr %1, align 8, !tbaa !5
  %844 = getelementptr inbounds ptr, ptr %843, i64 5
  %845 = load ptr, ptr %844, align 8
  invoke void %845(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %833, i64 %835, ptr nonnull %14, i64 %842, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 3)
          to label %846 unwind label %826

846:                                              ; preds = %832
  br i1 %197, label %1025, label %847

847:                                              ; preds = %846
  %848 = load ptr, ptr %14, align 8, !tbaa !51
  %849 = load ptr, ptr %208, align 8, !tbaa !130
  %850 = zext i32 %253 to i64
  %851 = getelementptr inbounds %"class.std::vector.67", ptr %849, i64 %850
  %852 = load ptr, ptr %851, align 8, !tbaa !25
  %853 = add i32 %253, 1
  %854 = zext i32 %853 to i64
  %855 = getelementptr inbounds %"class.std::vector.67", ptr %849, i64 %854
  %856 = load ptr, ptr %855, align 8, !tbaa !25
  %857 = add i32 %253, 2
  %858 = zext i32 %857 to i64
  %859 = getelementptr inbounds %"class.std::vector.67", ptr %849, i64 %858
  %860 = load ptr, ptr %859, align 8, !tbaa !25
  br label %861

861:                                              ; preds = %847, %861
  %862 = phi i64 [ 0, %847 ], [ %890, %861 ]
  %863 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %848, i64 %862
  %864 = getelementptr inbounds %"class.dealii::Tensor", ptr %852, i64 %862
  %865 = load double, ptr %863, align 8, !tbaa !8
  store double %865, ptr %864, align 8, !tbaa !8
  %866 = getelementptr inbounds [3 x double], ptr %863, i64 0, i64 1
  %867 = load double, ptr %866, align 8, !tbaa !8
  %868 = getelementptr inbounds [3 x double], ptr %864, i64 0, i64 1
  store double %867, ptr %868, align 8, !tbaa !8
  %869 = getelementptr inbounds [3 x double], ptr %863, i64 0, i64 2
  %870 = load double, ptr %869, align 8, !tbaa !8
  %871 = getelementptr inbounds [3 x double], ptr %864, i64 0, i64 2
  store double %870, ptr %871, align 8, !tbaa !8
  %872 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 1
  %873 = getelementptr inbounds %"class.dealii::Tensor", ptr %856, i64 %862
  %874 = load double, ptr %872, align 8, !tbaa !8
  store double %874, ptr %873, align 8, !tbaa !8
  %875 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 1, i32 0, i64 1
  %876 = load double, ptr %875, align 8, !tbaa !8
  %877 = getelementptr inbounds [3 x double], ptr %873, i64 0, i64 1
  store double %876, ptr %877, align 8, !tbaa !8
  %878 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 1, i32 0, i64 2
  %879 = load double, ptr %878, align 8, !tbaa !8
  %880 = getelementptr inbounds [3 x double], ptr %873, i64 0, i64 2
  store double %879, ptr %880, align 8, !tbaa !8
  %881 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 2
  %882 = getelementptr inbounds %"class.dealii::Tensor", ptr %860, i64 %862
  %883 = load double, ptr %881, align 8, !tbaa !8
  store double %883, ptr %882, align 8, !tbaa !8
  %884 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 2, i32 0, i64 1
  %885 = load double, ptr %884, align 8, !tbaa !8
  %886 = getelementptr inbounds [3 x double], ptr %882, i64 0, i64 1
  store double %885, ptr %886, align 8, !tbaa !8
  %887 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %863, i64 0, i64 2, i32 0, i64 2
  %888 = load double, ptr %887, align 8, !tbaa !8
  %889 = getelementptr inbounds [3 x double], ptr %882, i64 0, i64 2
  store double %888, ptr %889, align 8, !tbaa !8
  %890 = add nuw nsw i64 %862, 1
  %891 = icmp eq i64 %890, %213
  br i1 %891, label %1025, label %861

892:                                              ; preds = %756
  %893 = load ptr, ptr %207, align 8, !tbaa !133
  %894 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %895 unwind label %826

895:                                              ; preds = %892
  %896 = getelementptr inbounds %"class.std::vector.72", ptr %893, i64 %246
  %897 = zext i32 %894 to i64
  %898 = or i64 %196, %897
  %899 = load ptr, ptr %206, align 8, !tbaa !49
  %900 = load ptr, ptr %14, align 8, !tbaa !51
  %901 = ptrtoint ptr %899 to i64
  %902 = ptrtoint ptr %900 to i64
  %903 = sub i64 %901, %902
  %904 = sdiv exact i64 %903, 72
  %905 = shl i64 %904, 32
  %906 = load ptr, ptr %1, align 8, !tbaa !5
  %907 = getelementptr inbounds ptr, ptr %906, i64 5
  %908 = load ptr, ptr %907, align 8
  invoke void %908(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %896, i64 %898, ptr nonnull %14, i64 %905, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 4)
          to label %909 unwind label %826

909:                                              ; preds = %895
  br i1 %197, label %1025, label %910

910:                                              ; preds = %909
  %911 = load ptr, ptr %14, align 8, !tbaa !51
  %912 = load ptr, ptr %208, align 8, !tbaa !130
  %913 = zext i32 %253 to i64
  %914 = getelementptr inbounds %"class.std::vector.67", ptr %912, i64 %913
  %915 = load ptr, ptr %914, align 8, !tbaa !25
  %916 = add i32 %253, 1
  %917 = zext i32 %916 to i64
  %918 = getelementptr inbounds %"class.std::vector.67", ptr %912, i64 %917
  %919 = load ptr, ptr %918, align 8, !tbaa !25
  %920 = add i32 %253, 2
  %921 = zext i32 %920 to i64
  %922 = getelementptr inbounds %"class.std::vector.67", ptr %912, i64 %921
  %923 = load ptr, ptr %922, align 8, !tbaa !25
  br label %924

924:                                              ; preds = %910, %924
  %925 = phi i64 [ 0, %910 ], [ %953, %924 ]
  %926 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %911, i64 %925
  %927 = getelementptr inbounds %"class.dealii::Tensor", ptr %915, i64 %925
  %928 = load double, ptr %926, align 8, !tbaa !8
  store double %928, ptr %927, align 8, !tbaa !8
  %929 = getelementptr inbounds [3 x double], ptr %926, i64 0, i64 1
  %930 = load double, ptr %929, align 8, !tbaa !8
  %931 = getelementptr inbounds [3 x double], ptr %927, i64 0, i64 1
  store double %930, ptr %931, align 8, !tbaa !8
  %932 = getelementptr inbounds [3 x double], ptr %926, i64 0, i64 2
  %933 = load double, ptr %932, align 8, !tbaa !8
  %934 = getelementptr inbounds [3 x double], ptr %927, i64 0, i64 2
  store double %933, ptr %934, align 8, !tbaa !8
  %935 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 1
  %936 = getelementptr inbounds %"class.dealii::Tensor", ptr %919, i64 %925
  %937 = load double, ptr %935, align 8, !tbaa !8
  store double %937, ptr %936, align 8, !tbaa !8
  %938 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 1, i32 0, i64 1
  %939 = load double, ptr %938, align 8, !tbaa !8
  %940 = getelementptr inbounds [3 x double], ptr %936, i64 0, i64 1
  store double %939, ptr %940, align 8, !tbaa !8
  %941 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 1, i32 0, i64 2
  %942 = load double, ptr %941, align 8, !tbaa !8
  %943 = getelementptr inbounds [3 x double], ptr %936, i64 0, i64 2
  store double %942, ptr %943, align 8, !tbaa !8
  %944 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 2
  %945 = getelementptr inbounds %"class.dealii::Tensor", ptr %923, i64 %925
  %946 = load double, ptr %944, align 8, !tbaa !8
  store double %946, ptr %945, align 8, !tbaa !8
  %947 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 2, i32 0, i64 1
  %948 = load double, ptr %947, align 8, !tbaa !8
  %949 = getelementptr inbounds [3 x double], ptr %945, i64 0, i64 1
  store double %948, ptr %949, align 8, !tbaa !8
  %950 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %926, i64 0, i64 2, i32 0, i64 2
  %951 = load double, ptr %950, align 8, !tbaa !8
  %952 = getelementptr inbounds [3 x double], ptr %945, i64 0, i64 2
  store double %951, ptr %952, align 8, !tbaa !8
  %953 = add nuw nsw i64 %925, 1
  %954 = icmp eq i64 %953, %212
  br i1 %954, label %1025, label %924

955:                                              ; preds = %756
  %956 = load ptr, ptr %207, align 8, !tbaa !133
  %957 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %958 unwind label %826

958:                                              ; preds = %955
  %959 = getelementptr inbounds %"class.std::vector.72", ptr %956, i64 %246
  %960 = zext i32 %957 to i64
  %961 = or i64 %196, %960
  %962 = load ptr, ptr %206, align 8, !tbaa !49
  %963 = load ptr, ptr %14, align 8, !tbaa !51
  %964 = ptrtoint ptr %962 to i64
  %965 = ptrtoint ptr %963 to i64
  %966 = sub i64 %964, %965
  %967 = sdiv exact i64 %966, 72
  %968 = shl i64 %967, 32
  %969 = load ptr, ptr %1, align 8, !tbaa !5
  %970 = getelementptr inbounds ptr, ptr %969, i64 5
  %971 = load ptr, ptr %970, align 8
  invoke void %971(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr %959, i64 %961, ptr nonnull %14, i64 %968, ptr noundef nonnull align 8 dereferenceable(185) %6, i32 noundef 256)
          to label %972 unwind label %826

972:                                              ; preds = %958
  br i1 %197, label %1025, label %973

973:                                              ; preds = %972
  %974 = getelementptr inbounds double, ptr %131, i64 %246
  %975 = load ptr, ptr %14, align 8, !tbaa !51
  %976 = load ptr, ptr %208, align 8, !tbaa !130
  %977 = zext i32 %253 to i64
  %978 = getelementptr inbounds %"class.std::vector.67", ptr %976, i64 %977
  %979 = load ptr, ptr %978, align 8, !tbaa !25
  %980 = add i32 %253, 1
  %981 = zext i32 %980 to i64
  %982 = getelementptr inbounds %"class.std::vector.67", ptr %976, i64 %981
  %983 = load ptr, ptr %982, align 8, !tbaa !25
  %984 = add i32 %253, 2
  %985 = zext i32 %984 to i64
  %986 = getelementptr inbounds %"class.std::vector.67", ptr %976, i64 %985
  %987 = load ptr, ptr %986, align 8, !tbaa !25
  br label %988

988:                                              ; preds = %973, %988
  %989 = phi i64 [ 0, %973 ], [ %1023, %988 ]
  %990 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %975, i64 %989
  %991 = load double, ptr %974, align 8, !tbaa !8
  %992 = getelementptr inbounds [3 x double], ptr %990, i64 0, i64 2
  %993 = load double, ptr %992, align 8, !tbaa !8, !noalias !677
  %994 = fmul double %991, %993
  %995 = getelementptr inbounds %"class.dealii::Tensor", ptr %979, i64 %989
  %996 = load <2 x double>, ptr %990, align 8, !tbaa !8, !noalias !677
  %997 = insertelement <2 x double> poison, double %991, i64 0
  %998 = shufflevector <2 x double> %997, <2 x double> poison, <2 x i32> zeroinitializer
  %999 = fmul <2 x double> %998, %996
  store <2 x double> %999, ptr %995, align 8, !tbaa !8
  %1000 = getelementptr inbounds [3 x double], ptr %995, i64 0, i64 2
  store double %994, ptr %1000, align 8, !tbaa !8
  %1001 = load double, ptr %974, align 8, !tbaa !8
  %1002 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %990, i64 0, i64 1
  %1003 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %990, i64 0, i64 1, i32 0, i64 2
  %1004 = load double, ptr %1003, align 8, !tbaa !8, !noalias !677
  %1005 = fmul double %1001, %1004
  %1006 = getelementptr inbounds %"class.dealii::Tensor", ptr %983, i64 %989
  %1007 = load <2 x double>, ptr %1002, align 8, !tbaa !8, !noalias !677
  %1008 = insertelement <2 x double> poison, double %1001, i64 0
  %1009 = shufflevector <2 x double> %1008, <2 x double> poison, <2 x i32> zeroinitializer
  %1010 = fmul <2 x double> %1009, %1007
  store <2 x double> %1010, ptr %1006, align 8, !tbaa !8
  %1011 = getelementptr inbounds [3 x double], ptr %1006, i64 0, i64 2
  store double %1005, ptr %1011, align 8, !tbaa !8
  %1012 = load double, ptr %974, align 8, !tbaa !8
  %1013 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %990, i64 0, i64 2
  %1014 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %990, i64 0, i64 2, i32 0, i64 2
  %1015 = load double, ptr %1014, align 8, !tbaa !8, !noalias !677
  %1016 = fmul double %1012, %1015
  %1017 = getelementptr inbounds %"class.dealii::Tensor", ptr %987, i64 %989
  %1018 = load <2 x double>, ptr %1013, align 8, !tbaa !8, !noalias !677
  %1019 = insertelement <2 x double> poison, double %1012, i64 0
  %1020 = shufflevector <2 x double> %1019, <2 x double> poison, <2 x i32> zeroinitializer
  %1021 = fmul <2 x double> %1020, %1018
  store <2 x double> %1021, ptr %1017, align 8, !tbaa !8
  %1022 = getelementptr inbounds [3 x double], ptr %1017, i64 0, i64 2
  store double %1016, ptr %1022, align 8, !tbaa !8
  %1023 = add nuw nsw i64 %989, 1
  %1024 = icmp eq i64 %1023, %211
  br i1 %1024, label %1025, label %988

1025:                                             ; preds = %988, %924, %861, %795, %972, %909, %846, %780, %756
  %1026 = icmp eq ptr %757, null
  br i1 %1026, label %1028, label %1027

1027:                                             ; preds = %1025
  call void @_ZdlPv(ptr noundef nonnull %757) #17
  br label %1028

1028:                                             ; preds = %1027, %1025
  %1029 = load ptr, ptr %14, align 8, !tbaa !51
  %1030 = icmp eq ptr %1029, null
  br i1 %1030, label %1032, label %1031

1031:                                             ; preds = %1028
  call void @_ZdlPv(ptr noundef nonnull %1029) #17
  br label %1032

1032:                                             ; preds = %1031, %1028
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #15
  br label %1041

1033:                                             ; preds = %826
  call void @_ZdlPv(ptr noundef nonnull %757) #17
  br label %1034

1034:                                             ; preds = %1033, %826, %761
  %1035 = phi { ptr, i32 } [ %762, %761 ], [ %827, %826 ], [ %827, %1033 ]
  %1036 = load ptr, ptr %14, align 8, !tbaa !51
  %1037 = icmp eq ptr %1036, null
  br i1 %1037, label %1039, label %1038

1038:                                             ; preds = %1034
  call void @_ZdlPv(ptr noundef nonnull %1036) #17
  br label %1039

1039:                                             ; preds = %1038, %1034, %759
  %1040 = phi { ptr, i32 } [ %760, %759 ], [ %1035, %1034 ], [ %1035, %1038 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #15
  br label %1056

1041:                                             ; preds = %1032, %746
  %1042 = add nuw nsw i64 %246, 1
  %1043 = load i32, ptr %125, align 8, !tbaa !129
  %1044 = zext i32 %1043 to i64
  %1045 = icmp ult i64 %1042, %1044
  br i1 %1045, label %245, label %241

1046:                                             ; preds = %241
  %1047 = invoke noundef i32 @_ZNK6dealii10QProjectorILi3EE17DataSetDescriptorcvjEv(ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %1048 unwind label %1053

1048:                                             ; preds = %1046
  invoke void @_ZNK6dealii13FiniteElementILi3ELi3EE11compute_2ndERKNS_7MappingILi3ELi3EEERKNS_12TriaIteratorINS_12CellAccessorILi3ELi3EEEEEjRNS3_16InternalDataBaseERNS1_16InternalDataBaseERNS_12FEValuesDataILi3ELi3EEE(ptr noundef nonnull align 8 dereferenceable(728) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(16) %2, i32 noundef %1047, ptr noundef nonnull align 8 dereferenceable(185) %6, ptr noundef nonnull align 8 dereferenceable(216) %7, ptr noundef nonnull align 8 dereferenceable(436) %8)
          to label %1049 unwind label %1053

1049:                                             ; preds = %1048, %241
  %1050 = icmp eq ptr %242, null
  br i1 %1050, label %1052, label %1051

1051:                                             ; preds = %1049
  call void @_ZdlPv(ptr noundef nonnull %242) #17
  br label %1052

1052:                                             ; preds = %1049, %1051
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #15
  ret void

1053:                                             ; preds = %1046, %1048
  %1054 = landingpad { ptr, i32 }
          cleanup
  %1055 = icmp eq ptr %242, null
  br i1 %1055, label %1059, label %1056

1056:                                             ; preds = %309, %511, %744, %1039, %1053
  %1057 = phi { ptr, i32 } [ %1054, %1053 ], [ %310, %309 ], [ %512, %511 ], [ %745, %744 ], [ %1040, %1039 ]
  %1058 = phi ptr [ %242, %1053 ], [ %131, %309 ], [ %131, %511 ], [ %131, %744 ], [ %131, %1039 ]
  call void @_ZdlPv(ptr noundef nonnull %1058) #17
  br label %1059

1059:                                             ; preds = %1056, %1053
  %1060 = phi { ptr, i32 } [ %1057, %1056 ], [ %1054, %1053 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #15
  resume { ptr, i32 } %1060
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(976) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [38 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 8
  %3 = load ptr, ptr %2, align 8, !tbaa !57
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #17
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !51
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #17
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 6
  %13 = load ptr, ptr %12, align 8, !tbaa !25
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %13) #17
  br label %16

16:                                               ; preds = %15, %11
  %17 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 4
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !5
  %18 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !35
  %20 = icmp eq ptr %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %19) #17
  br label %22

22:                                               ; preds = %21, %16
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %17)
          to label %23 unwind label %26

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 3, i32 2
  invoke void @_ZNSt6vectorIS_IN6dealii11Polynomials10PolynomialIdEESaIS3_EESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %24)
          to label %25 unwind label %29

25:                                               ; preds = %23
  tail call void @_ZN6dealii13FiniteElementILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(728) %0)
  ret void

26:                                               ; preds = %22
  %27 = landingpad { ptr, i32 }
          cleanup
  %28 = getelementptr inbounds %"class.dealii::FE_PolyTensor", ptr %0, i64 0, i32 3, i32 2
  invoke void @_ZNSt6vectorIS_IN6dealii11Polynomials10PolynomialIdEESaIS3_EESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %28)
          to label %31 unwind label %34

29:                                               ; preds = %23
  %30 = landingpad { ptr, i32 }
          cleanup
  br label %31

31:                                               ; preds = %26, %29
  %32 = phi { ptr, i32 } [ %30, %29 ], [ %27, %26 ]
  invoke void @_ZN6dealii13FiniteElementILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(728) %0)
          to label %33 unwind label %34

33:                                               ; preds = %31
  resume { ptr, i32 } %32

34:                                               ; preds = %26, %31
  %35 = landingpad { ptr, i32 }
          catch ptr null
  %36 = extractvalue { ptr, i32 } %35, 0
  tail call void @__clang_call_terminate(ptr %36) #14
  unreachable
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EED0Ev(ptr noundef nonnull align 8 dereferenceable(976) %0) unnamed_addr #9 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare noundef zeroext i1 @_ZNK6dealii13FiniteElementILi3ELi3EE19has_support_on_faceEjj(ptr noundef nonnull align 8 dereferenceable(728), i32 noundef, i32 noundef) unnamed_addr #1

declare noundef zeroext i1 @_ZNK6dealii13FiniteElementILi3ELi3EE30hp_constraints_are_implementedEv(ptr noundef nonnull align 8 dereferenceable(728)) unnamed_addr #1

declare void @_ZNK6dealii13FiniteElementILi3ELi3EE24get_interpolation_matrixERKS1_RNS_10FullMatrixIdEE(ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(92)) unnamed_addr #1

declare void @_ZNK6dealii13FiniteElementILi3ELi3EE29get_face_interpolation_matrixERKS1_RNS_10FullMatrixIdEE(ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(92)) unnamed_addr #1

declare void @_ZNK6dealii13FiniteElementILi3ELi3EE32get_subface_interpolation_matrixERKS1_jRNS_10FullMatrixIdEE(ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(728), i32 noundef, ptr noundef nonnull align 8 dereferenceable(92)) unnamed_addr #1

declare void @_ZNK6dealii13FiniteElementILi3ELi3EE24hp_vertex_dof_identitiesERKS1_(ptr sret(%"class.std::vector.38") align 8, ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(728)) unnamed_addr #1

declare void @_ZNK6dealii13FiniteElementILi3ELi3EE22hp_line_dof_identitiesERKS1_(ptr sret(%"class.std::vector.38") align 8, ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(728)) unnamed_addr #1

declare void @_ZNK6dealii13FiniteElementILi3ELi3EE22hp_quad_dof_identitiesERKS1_(ptr sret(%"class.std::vector.38") align 8, ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(728)) unnamed_addr #1

declare noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE27compare_for_face_dominationERKS1_(ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(728)) unnamed_addr #1

declare void @_ZNK6dealii13FiniteElementILi3ELi3EE18unit_support_pointEj(ptr sret(%"class.dealii::Point") align 8, ptr noundef nonnull align 8 dereferenceable(728), i32 noundef) unnamed_addr #1

declare void @_ZNK6dealii13FiniteElementILi3ELi3EE23unit_face_support_pointEj(ptr sret(%"class.dealii::Point.118") align 8, ptr noundef nonnull align 8 dereferenceable(728), i32 noundef) unnamed_addr #1

declare void @_ZNK6dealii13FiniteElementILi3ELi3EE11interpolateERSt6vectorIdSaIdEERKS4_(ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 8 dereferenceable(24)) unnamed_addr #1

declare void @_ZNK6dealii13FiniteElementILi3ELi3EE11interpolateERSt6vectorIdSaIdEERKS2_INS_6VectorIdEESaIS7_EEj(ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 1, i32 noundef) unnamed_addr #1

declare void @_ZNK6dealii13FiniteElementILi3ELi3EE11interpolateERSt6vectorIdSaIdEERKNS_11VectorSliceIKS2_IS4_SaIS4_EEEE(ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 1) unnamed_addr #1

declare noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(728)) unnamed_addr #1

declare noundef ptr @_ZNK6dealii13FiniteElementILi3ELi3EE13get_face_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi2EEE(ptr noundef nonnull align 8 dereferenceable(728), i32 noundef, ptr noundef nonnull align 8 dereferenceable(72), ptr noundef nonnull align 8 dereferenceable(128)) unnamed_addr #1

declare noundef ptr @_ZNK6dealii13FiniteElementILi3ELi3EE16get_subface_dataENS_11UpdateFlagsERKNS_7MappingILi3ELi3EEERKNS_10QuadratureILi2EEE(ptr noundef nonnull align 8 dereferenceable(728), i32 noundef, ptr noundef nonnull align 8 dereferenceable(72), ptr noundef nonnull align 8 dereferenceable(128)) unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(1024) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [38 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !57
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #17
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 6
  %8 = load ptr, ptr %7, align 8, !tbaa !51
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #17
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 5
  %13 = load ptr, ptr %12, align 8, !tbaa !25
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %13) #17
  br label %16

16:                                               ; preds = %15, %11
  %17 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 3
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !5
  %18 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !35
  %20 = icmp eq ptr %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %19) #17
  br label %22

22:                                               ; preds = %21, %16
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %17)
          to label %23 unwind label %26

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 2
  invoke void @_ZN6dealii14PolynomialsABFILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(96) %24)
          to label %25 unwind label %29

25:                                               ; preds = %23
  tail call void @_ZN6dealii13FiniteElementILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(728) %0)
  ret void

26:                                               ; preds = %22
  %27 = landingpad { ptr, i32 }
          cleanup
  %28 = getelementptr inbounds %"class.dealii::FE_PolyTensor.111", ptr %0, i64 0, i32 2
  invoke void @_ZN6dealii14PolynomialsABFILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(96) %28)
          to label %31 unwind label %34

29:                                               ; preds = %23
  %30 = landingpad { ptr, i32 }
          cleanup
  br label %31

31:                                               ; preds = %26, %29
  %32 = phi { ptr, i32 } [ %30, %29 ], [ %27, %26 ]
  invoke void @_ZN6dealii13FiniteElementILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(728) %0)
          to label %33 unwind label %34

33:                                               ; preds = %31
  resume { ptr, i32 } %32

34:                                               ; preds = %31, %26
  %35 = landingpad { ptr, i32 }
          catch ptr null
  %36 = extractvalue { ptr, i32 } %35, 0
  tail call void @__clang_call_terminate(ptr %36) #14
  unreachable
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EED0Ev(ptr noundef nonnull align 8 dereferenceable(1024) %0) unnamed_addr #9 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(1112) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [38 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !57
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #17
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 6
  %8 = load ptr, ptr %7, align 8, !tbaa !51
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #17
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 5
  %13 = load ptr, ptr %12, align 8, !tbaa !25
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %13) #17
  br label %16

16:                                               ; preds = %15, %11
  %17 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 3
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !5
  %18 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !35
  %20 = icmp eq ptr %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %19) #17
  br label %22

22:                                               ; preds = %21, %16
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %17)
          to label %23 unwind label %26

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 2
  invoke void @_ZN6dealii14PolynomialsBDMILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(184) %24)
          to label %25 unwind label %29

25:                                               ; preds = %23
  tail call void @_ZN6dealii13FiniteElementILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(728) %0)
  ret void

26:                                               ; preds = %22
  %27 = landingpad { ptr, i32 }
          cleanup
  %28 = getelementptr inbounds %"class.dealii::FE_PolyTensor.112", ptr %0, i64 0, i32 2
  invoke void @_ZN6dealii14PolynomialsBDMILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(184) %28)
          to label %31 unwind label %34

29:                                               ; preds = %23
  %30 = landingpad { ptr, i32 }
          cleanup
  br label %31

31:                                               ; preds = %26, %29
  %32 = phi { ptr, i32 } [ %30, %29 ], [ %27, %26 ]
  invoke void @_ZN6dealii13FiniteElementILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(728) %0)
          to label %33 unwind label %34

33:                                               ; preds = %31
  resume { ptr, i32 } %32

34:                                               ; preds = %31, %26
  %35 = landingpad { ptr, i32 }
          catch ptr null
  %36 = extractvalue { ptr, i32 } %35, 0
  tail call void @__clang_call_terminate(ptr %36) #14
  unreachable
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EED0Ev(ptr noundef nonnull align 8 dereferenceable(1112) %0) unnamed_addr #9 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #7

declare void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72)) unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9TableBaseILi2EdED2Ev(ptr noundef nonnull align 8 dereferenceable(92) %0) unnamed_addr #8 comdat align 2 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::TableBase", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !35
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #17
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9TableBaseILi2EdED0Ev(ptr noundef nonnull align 8 dereferenceable(92) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::TableBase", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !35
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #17
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #17
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #17
  resume { ptr, i32 } %9
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IN6dealii11Polynomials10PolynomialIdEESaIS3_EESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !680
  %3 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<dealii::Polynomials::Polynomial<double> >, std::allocator<std::vector<dealii::Polynomials::Polynomial<double> > > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !681
  %5 = icmp eq ptr %2, %4
  br i1 %5, label %35, label %6

6:                                                ; preds = %1, %30
  %7 = phi ptr [ %31, %30 ], [ %2, %1 ]
  %8 = load ptr, ptr %7, align 8, !tbaa !504
  %9 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Polynomials::Polynomial<double>, std::allocator<dealii::Polynomials::Polynomial<double> > >::_Vector_impl_data", ptr %7, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !506
  %11 = icmp eq ptr %8, %10
  br i1 %11, label %21, label %12

12:                                               ; preds = %6, %16
  %13 = phi ptr [ %17, %16 ], [ %8, %6 ]
  %14 = load ptr, ptr %13, align 8, !tbaa !5
  %15 = load ptr, ptr %14, align 8
  invoke void %15(ptr noundef nonnull align 8 dereferenceable(96) %13)
          to label %16 unwind label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Polynomials::Polynomial", ptr %13, i64 1
  %18 = icmp eq ptr %17, %10
  br i1 %18, label %19, label %12

19:                                               ; preds = %16
  %20 = load ptr, ptr %7, align 8, !tbaa !504
  br label %21

21:                                               ; preds = %19, %6
  %22 = phi ptr [ %20, %19 ], [ %8, %6 ]
  %23 = icmp eq ptr %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  tail call void @_ZdlPv(ptr noundef nonnull %22) #17
  br label %30

25:                                               ; preds = %12
  %26 = landingpad { ptr, i32 }
          cleanup
  %27 = load ptr, ptr %7, align 8, !tbaa !504
  %28 = icmp eq ptr %27, null
  br i1 %28, label %40, label %29

29:                                               ; preds = %25
  tail call void @_ZdlPv(ptr noundef nonnull %27) #17
  br label %40

30:                                               ; preds = %24, %21
  %31 = getelementptr inbounds %"class.std::vector.113", ptr %7, i64 1
  %32 = icmp eq ptr %31, %4
  br i1 %32, label %33, label %6

33:                                               ; preds = %30
  %34 = load ptr, ptr %0, align 8, !tbaa !680
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi ptr [ %34, %33 ], [ %2, %1 ]
  %37 = icmp eq ptr %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  tail call void @_ZdlPv(ptr noundef nonnull %36) #17
  br label %39

39:                                               ; preds = %35, %38
  ret void

40:                                               ; preds = %25, %29
  %41 = load ptr, ptr %0, align 8, !tbaa !680
  %42 = icmp eq ptr %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  tail call void @_ZdlPv(ptr noundef nonnull %41) #17
  br label %44

44:                                               ; preds = %43, %40
  resume { ptr, i32 } %26
}

declare void @_ZN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(216)) unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !133
  %4 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !135
  %6 = icmp eq ptr %3, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %1, %12
  %8 = phi ptr [ %13, %12 ], [ %3, %1 ]
  %9 = load ptr, ptr %8, align 8, !tbaa !51
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdlPv(ptr noundef nonnull %9) #17
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"class.std::vector.72", ptr %8, i64 1
  %14 = icmp eq ptr %13, %5
  br i1 %14, label %15, label %7

15:                                               ; preds = %12
  %16 = load ptr, ptr %2, align 8, !tbaa !133
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi ptr [ %16, %15 ], [ %3, %1 ]
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @_ZdlPv(ptr noundef nonnull %18) #17
  br label %21

21:                                               ; preds = %20, %17
  %22 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %0, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !130
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !132
  %26 = icmp eq ptr %23, %25
  br i1 %26, label %37, label %27

27:                                               ; preds = %21, %32
  %28 = phi ptr [ %33, %32 ], [ %23, %21 ]
  %29 = load ptr, ptr %28, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @_ZdlPv(ptr noundef nonnull %29) #17
  br label %32

32:                                               ; preds = %31, %27
  %33 = getelementptr inbounds %"class.std::vector.67", ptr %28, i64 1
  %34 = icmp eq ptr %33, %25
  br i1 %34, label %35, label %27

35:                                               ; preds = %32
  %36 = load ptr, ptr %22, align 8, !tbaa !130
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi ptr [ %36, %35 ], [ %23, %21 ]
  %39 = icmp eq ptr %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @_ZdlPv(ptr noundef nonnull %38) #17
  br label %41

41:                                               ; preds = %40, %37
  tail call void @_ZN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(216) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataD0Ev(ptr noundef nonnull align 8 dereferenceable(264) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EE12InternalDataE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !133
  %4 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !135
  %6 = icmp eq ptr %3, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %1, %12
  %8 = phi ptr [ %13, %12 ], [ %3, %1 ]
  %9 = load ptr, ptr %8, align 8, !tbaa !51
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdlPv(ptr noundef nonnull %9) #17
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"class.std::vector.72", ptr %8, i64 1
  %14 = icmp eq ptr %13, %5
  br i1 %14, label %15, label %7

15:                                               ; preds = %12
  %16 = load ptr, ptr %2, align 8, !tbaa !133
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi ptr [ %16, %15 ], [ %3, %1 ]
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @_ZdlPv(ptr noundef nonnull %18) #17
  br label %21

21:                                               ; preds = %20, %17
  %22 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %0, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !130
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsRaviartThomas<3>, 3>::InternalData", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !132
  %26 = icmp eq ptr %23, %25
  br i1 %26, label %37, label %27

27:                                               ; preds = %21, %32
  %28 = phi ptr [ %33, %32 ], [ %23, %21 ]
  %29 = load ptr, ptr %28, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @_ZdlPv(ptr noundef nonnull %29) #17
  br label %32

32:                                               ; preds = %31, %27
  %33 = getelementptr inbounds %"class.std::vector.67", ptr %28, i64 1
  %34 = icmp eq ptr %33, %25
  br i1 %34, label %35, label %27

35:                                               ; preds = %32
  %36 = load ptr, ptr %22, align 8, !tbaa !130
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi ptr [ %36, %35 ], [ %23, %21 ]
  %39 = icmp eq ptr %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @_ZdlPv(ptr noundef nonnull %38) #17
  br label %41

41:                                               ; preds = %40, %37
  invoke void @_ZN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(216) %0)
          to label %42 unwind label %43

42:                                               ; preds = %41
  tail call void @_ZdlPv(ptr noundef nonnull %0) #17
  ret void

43:                                               ; preds = %41
  %44 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #17
  resume { ptr, i32 } %44
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7MappingILi3ELi3EE16InternalDataBase16clear_first_cellEv(ptr noundef nonnull align 8 dereferenceable(185) %0) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.dealii::Mapping<3, 3>::InternalDataBase", ptr %0, i64 0, i32 9
  store i8 0, ptr %2, align 8, !tbaa !143
  ret void
}

declare noundef i32 @_ZNK6dealii7MappingILi3ELi3EE16InternalDataBase18memory_consumptionEv(ptr noundef nonnull align 8 dereferenceable(185)) unnamed_addr #1

declare void @_ZN6dealii7MappingILi3ELi3EE16InternalDataBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(185)) unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !133
  %4 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !135
  %6 = icmp eq ptr %3, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %1, %12
  %8 = phi ptr [ %13, %12 ], [ %3, %1 ]
  %9 = load ptr, ptr %8, align 8, !tbaa !51
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdlPv(ptr noundef nonnull %9) #17
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"class.std::vector.72", ptr %8, i64 1
  %14 = icmp eq ptr %13, %5
  br i1 %14, label %15, label %7

15:                                               ; preds = %12
  %16 = load ptr, ptr %2, align 8, !tbaa !133
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi ptr [ %16, %15 ], [ %3, %1 ]
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @_ZdlPv(ptr noundef nonnull %18) #17
  br label %21

21:                                               ; preds = %20, %17
  %22 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %0, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !130
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !132
  %26 = icmp eq ptr %23, %25
  br i1 %26, label %37, label %27

27:                                               ; preds = %21, %32
  %28 = phi ptr [ %33, %32 ], [ %23, %21 ]
  %29 = load ptr, ptr %28, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @_ZdlPv(ptr noundef nonnull %29) #17
  br label %32

32:                                               ; preds = %31, %27
  %33 = getelementptr inbounds %"class.std::vector.67", ptr %28, i64 1
  %34 = icmp eq ptr %33, %25
  br i1 %34, label %35, label %27

35:                                               ; preds = %32
  %36 = load ptr, ptr %22, align 8, !tbaa !130
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi ptr [ %36, %35 ], [ %23, %21 ]
  %39 = icmp eq ptr %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @_ZdlPv(ptr noundef nonnull %38) #17
  br label %41

41:                                               ; preds = %40, %37
  tail call void @_ZN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(216) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataD0Ev(ptr noundef nonnull align 8 dereferenceable(264) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EE12InternalDataE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !133
  %4 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !135
  %6 = icmp eq ptr %3, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %1, %12
  %8 = phi ptr [ %13, %12 ], [ %3, %1 ]
  %9 = load ptr, ptr %8, align 8, !tbaa !51
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdlPv(ptr noundef nonnull %9) #17
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"class.std::vector.72", ptr %8, i64 1
  %14 = icmp eq ptr %13, %5
  br i1 %14, label %15, label %7

15:                                               ; preds = %12
  %16 = load ptr, ptr %2, align 8, !tbaa !133
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi ptr [ %16, %15 ], [ %3, %1 ]
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @_ZdlPv(ptr noundef nonnull %18) #17
  br label %21

21:                                               ; preds = %20, %17
  %22 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %0, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !130
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsABF<3>, 3>::InternalData", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !132
  %26 = icmp eq ptr %23, %25
  br i1 %26, label %37, label %27

27:                                               ; preds = %21, %32
  %28 = phi ptr [ %33, %32 ], [ %23, %21 ]
  %29 = load ptr, ptr %28, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @_ZdlPv(ptr noundef nonnull %29) #17
  br label %32

32:                                               ; preds = %31, %27
  %33 = getelementptr inbounds %"class.std::vector.67", ptr %28, i64 1
  %34 = icmp eq ptr %33, %25
  br i1 %34, label %35, label %27

35:                                               ; preds = %32
  %36 = load ptr, ptr %22, align 8, !tbaa !130
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi ptr [ %36, %35 ], [ %23, %21 ]
  %39 = icmp eq ptr %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @_ZdlPv(ptr noundef nonnull %38) #17
  br label %41

41:                                               ; preds = %40, %37
  invoke void @_ZN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(216) %0)
          to label %42 unwind label %43

42:                                               ; preds = %41
  tail call void @_ZdlPv(ptr noundef nonnull %0) #17
  ret void

43:                                               ; preds = %41
  %44 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #17
  resume { ptr, i32 } %44
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii15PolynomialSpaceILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.dealii::PolynomialSpace", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !154
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #17
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.dealii::PolynomialSpace", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !154
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #17
  br label %11

11:                                               ; preds = %10, %6
  %12 = load ptr, ptr %0, align 8, !tbaa !504
  %13 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Polynomials::Polynomial<double>, std::allocator<dealii::Polynomials::Polynomial<double> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !506
  %15 = icmp eq ptr %12, %14
  br i1 %15, label %25, label %16

16:                                               ; preds = %11, %20
  %17 = phi ptr [ %21, %20 ], [ %12, %11 ]
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = load ptr, ptr %18, align 8
  invoke void %19(ptr noundef nonnull align 8 dereferenceable(96) %17)
          to label %20 unwind label %29

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.dealii::Polynomials::Polynomial", ptr %17, i64 1
  %22 = icmp eq ptr %21, %14
  br i1 %22, label %23, label %16

23:                                               ; preds = %20
  %24 = load ptr, ptr %0, align 8, !tbaa !504
  br label %25

25:                                               ; preds = %23, %11
  %26 = phi ptr [ %24, %23 ], [ %12, %11 ]
  %27 = icmp eq ptr %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %25
  tail call void @_ZdlPv(ptr noundef nonnull %26) #17
  br label %35

29:                                               ; preds = %16
  %30 = landingpad { ptr, i32 }
          cleanup
  %31 = load ptr, ptr %0, align 8, !tbaa !504
  %32 = icmp eq ptr %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @_ZdlPv(ptr noundef nonnull %31) #17
  br label %34

34:                                               ; preds = %33, %29
  resume { ptr, i32 } %30

35:                                               ; preds = %25, %28
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !133
  %4 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !135
  %6 = icmp eq ptr %3, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %1, %12
  %8 = phi ptr [ %13, %12 ], [ %3, %1 ]
  %9 = load ptr, ptr %8, align 8, !tbaa !51
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdlPv(ptr noundef nonnull %9) #17
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"class.std::vector.72", ptr %8, i64 1
  %14 = icmp eq ptr %13, %5
  br i1 %14, label %15, label %7

15:                                               ; preds = %12
  %16 = load ptr, ptr %2, align 8, !tbaa !133
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi ptr [ %16, %15 ], [ %3, %1 ]
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @_ZdlPv(ptr noundef nonnull %18) #17
  br label %21

21:                                               ; preds = %20, %17
  %22 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %0, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !130
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !132
  %26 = icmp eq ptr %23, %25
  br i1 %26, label %37, label %27

27:                                               ; preds = %21, %32
  %28 = phi ptr [ %33, %32 ], [ %23, %21 ]
  %29 = load ptr, ptr %28, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @_ZdlPv(ptr noundef nonnull %29) #17
  br label %32

32:                                               ; preds = %31, %27
  %33 = getelementptr inbounds %"class.std::vector.67", ptr %28, i64 1
  %34 = icmp eq ptr %33, %25
  br i1 %34, label %35, label %27

35:                                               ; preds = %32
  %36 = load ptr, ptr %22, align 8, !tbaa !130
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi ptr [ %36, %35 ], [ %23, %21 ]
  %39 = icmp eq ptr %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @_ZdlPv(ptr noundef nonnull %38) #17
  br label %41

41:                                               ; preds = %40, %37
  tail call void @_ZN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(216) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataD0Ev(ptr noundef nonnull align 8 dereferenceable(264) %0) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EE12InternalDataE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !5
  %2 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !133
  %4 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !135
  %6 = icmp eq ptr %3, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %1, %12
  %8 = phi ptr [ %13, %12 ], [ %3, %1 ]
  %9 = load ptr, ptr %8, align 8, !tbaa !51
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdlPv(ptr noundef nonnull %9) #17
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"class.std::vector.72", ptr %8, i64 1
  %14 = icmp eq ptr %13, %5
  br i1 %14, label %15, label %7

15:                                               ; preds = %12
  %16 = load ptr, ptr %2, align 8, !tbaa !133
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi ptr [ %16, %15 ], [ %3, %1 ]
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @_ZdlPv(ptr noundef nonnull %18) #17
  br label %21

21:                                               ; preds = %20, %17
  %22 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %0, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !130
  %24 = getelementptr inbounds %"class.dealii::FE_PolyTensor<dealii::PolynomialsBDM<3>, 3>::InternalData", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !132
  %26 = icmp eq ptr %23, %25
  br i1 %26, label %37, label %27

27:                                               ; preds = %21, %32
  %28 = phi ptr [ %33, %32 ], [ %23, %21 ]
  %29 = load ptr, ptr %28, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @_ZdlPv(ptr noundef nonnull %29) #17
  br label %32

32:                                               ; preds = %31, %27
  %33 = getelementptr inbounds %"class.std::vector.67", ptr %28, i64 1
  %34 = icmp eq ptr %33, %25
  br i1 %34, label %35, label %27

35:                                               ; preds = %32
  %36 = load ptr, ptr %22, align 8, !tbaa !130
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi ptr [ %36, %35 ], [ %23, %21 ]
  %39 = icmp eq ptr %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @_ZdlPv(ptr noundef nonnull %38) #17
  br label %41

41:                                               ; preds = %40, %37
  invoke void @_ZN6dealii13FiniteElementILi3ELi3EE16InternalDataBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(216) %0)
          to label %42 unwind label %43

42:                                               ; preds = %41
  tail call void @_ZdlPv(ptr noundef nonnull %0) #17
  ret void

43:                                               ; preds = %41
  %44 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #17
  resume { ptr, i32 } %44
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %277, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !173
  %9 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !33
  %11 = ptrtoint ptr %8 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %139, label %16

16:                                               ; preds = %6
  %17 = load <2 x double>, ptr %3, align 8, !tbaa !8
  %18 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %19 = load double, ptr %18, align 8, !tbaa !8
  %20 = ptrtoint ptr %1 to i64
  %21 = sub i64 %12, %20
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %22, %2
  br i1 %23, label %24, label %71

24:                                               ; preds = %16
  %25 = sub i64 0, %2
  %26 = getelementptr inbounds %"class.dealii::Tensor", ptr %10, i64 %25
  %27 = mul i64 %2, -24
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %24, %29
  %30 = phi ptr [ %40, %29 ], [ %10, %24 ]
  %31 = phi ptr [ %39, %29 ], [ %26, %24 ]
  %32 = load double, ptr %31, align 8, !tbaa !8
  store double %32, ptr %30, align 8, !tbaa !8
  %33 = getelementptr inbounds [3 x double], ptr %31, i64 0, i64 1
  %34 = load double, ptr %33, align 8, !tbaa !8
  %35 = getelementptr inbounds [3 x double], ptr %30, i64 0, i64 1
  store double %34, ptr %35, align 8, !tbaa !8
  %36 = getelementptr inbounds [3 x double], ptr %31, i64 0, i64 2
  %37 = load double, ptr %36, align 8, !tbaa !8
  %38 = getelementptr inbounds [3 x double], ptr %30, i64 0, i64 2
  store double %37, ptr %38, align 8, !tbaa !8
  %39 = getelementptr inbounds %"class.dealii::Tensor", ptr %31, i64 1
  %40 = getelementptr inbounds %"class.dealii::Tensor", ptr %30, i64 1
  %41 = icmp eq ptr %39, %10
  br i1 %41, label %42, label %29

42:                                               ; preds = %29, %24
  %43 = getelementptr inbounds %"class.dealii::Tensor", ptr %10, i64 %2
  store ptr %43, ptr %9, align 8, !tbaa !23
  %44 = ptrtoint ptr %26 to i64
  %45 = sub i64 %44, %20
  %46 = icmp sgt i64 %45, 0
  br i1 %46, label %47, label %64

47:                                               ; preds = %42
  %48 = udiv exact i64 %45, 24
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ %62, %49 ], [ %48, %47 ]
  %51 = phi ptr [ %54, %49 ], [ %10, %47 ]
  %52 = phi ptr [ %53, %49 ], [ %26, %47 ]
  %53 = getelementptr inbounds %"class.dealii::Tensor", ptr %52, i64 -1
  %54 = getelementptr inbounds %"class.dealii::Tensor", ptr %51, i64 -1
  %55 = load double, ptr %53, align 8, !tbaa !8
  store double %55, ptr %54, align 8, !tbaa !8
  %56 = getelementptr %"class.dealii::Tensor", ptr %52, i64 -1, i32 0, i64 1
  %57 = load double, ptr %56, align 8, !tbaa !8
  %58 = getelementptr %"class.dealii::Tensor", ptr %51, i64 -1, i32 0, i64 1
  store double %57, ptr %58, align 8, !tbaa !8
  %59 = getelementptr %"class.dealii::Tensor", ptr %52, i64 -1, i32 0, i64 2
  %60 = load double, ptr %59, align 8, !tbaa !8
  %61 = getelementptr %"class.dealii::Tensor", ptr %51, i64 -1, i32 0, i64 2
  store double %60, ptr %61, align 8, !tbaa !8
  %62 = add nsw i64 %50, -1
  %63 = icmp ugt i64 %50, 1
  br i1 %63, label %49, label %64

64:                                               ; preds = %49, %42
  %65 = getelementptr inbounds %"class.dealii::Tensor", ptr %1, i64 %2
  br label %66

66:                                               ; preds = %64, %66
  %67 = phi ptr [ %69, %66 ], [ %1, %64 ]
  store <2 x double> %17, ptr %67, align 8, !tbaa !8
  %68 = getelementptr inbounds [3 x double], ptr %67, i64 0, i64 2
  store double %19, ptr %68, align 8, !tbaa !8
  %69 = getelementptr inbounds %"class.dealii::Tensor", ptr %67, i64 1
  %70 = icmp eq ptr %69, %65
  br i1 %70, label %277, label %66

71:                                               ; preds = %16
  %72 = sub i64 %2, %22
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %114, label %74

74:                                               ; preds = %71
  %75 = xor i64 %22, -1
  %76 = add i64 %75, %2
  %77 = and i64 %72, 7
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %88, label %79

79:                                               ; preds = %74, %79
  %80 = phi ptr [ %85, %79 ], [ %10, %74 ]
  %81 = phi i64 [ %84, %79 ], [ %72, %74 ]
  %82 = phi i64 [ %86, %79 ], [ 0, %74 ]
  store <2 x double> %17, ptr %80, align 8, !tbaa !8
  %83 = getelementptr inbounds [3 x double], ptr %80, i64 0, i64 2
  store double %19, ptr %83, align 8, !tbaa !8
  %84 = add i64 %81, -1
  %85 = getelementptr inbounds %"class.dealii::Tensor", ptr %80, i64 1
  %86 = add i64 %82, 1
  %87 = icmp eq i64 %86, %77
  br i1 %87, label %88, label %79, !llvm.loop !682

88:                                               ; preds = %79, %74
  %89 = phi ptr [ undef, %74 ], [ %85, %79 ]
  %90 = phi ptr [ %10, %74 ], [ %85, %79 ]
  %91 = phi i64 [ %72, %74 ], [ %84, %79 ]
  %92 = icmp ult i64 %76, 7
  br i1 %92, label %114, label %93

93:                                               ; preds = %88, %93
  %94 = phi ptr [ %112, %93 ], [ %90, %88 ]
  %95 = phi i64 [ %111, %93 ], [ %91, %88 ]
  store <2 x double> %17, ptr %94, align 8, !tbaa !8
  %96 = getelementptr inbounds [3 x double], ptr %94, i64 0, i64 2
  store double %19, ptr %96, align 8, !tbaa !8
  %97 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 1
  store <2 x double> %17, ptr %97, align 8, !tbaa !8
  %98 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 1, i32 0, i64 2
  store double %19, ptr %98, align 8, !tbaa !8
  %99 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 2
  store <2 x double> %17, ptr %99, align 8, !tbaa !8
  %100 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 2, i32 0, i64 2
  store double %19, ptr %100, align 8, !tbaa !8
  %101 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 3
  store <2 x double> %17, ptr %101, align 8, !tbaa !8
  %102 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 3, i32 0, i64 2
  store double %19, ptr %102, align 8, !tbaa !8
  %103 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 4
  store <2 x double> %17, ptr %103, align 8, !tbaa !8
  %104 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 4, i32 0, i64 2
  store double %19, ptr %104, align 8, !tbaa !8
  %105 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 5
  store <2 x double> %17, ptr %105, align 8, !tbaa !8
  %106 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 5, i32 0, i64 2
  store double %19, ptr %106, align 8, !tbaa !8
  %107 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 6
  store <2 x double> %17, ptr %107, align 8, !tbaa !8
  %108 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 6, i32 0, i64 2
  store double %19, ptr %108, align 8, !tbaa !8
  %109 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 7
  store <2 x double> %17, ptr %109, align 8, !tbaa !8
  %110 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 7, i32 0, i64 2
  store double %19, ptr %110, align 8, !tbaa !8
  %111 = add i64 %95, -8
  %112 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 8
  %113 = icmp eq i64 %111, 0
  br i1 %113, label %114, label %93

114:                                              ; preds = %88, %93, %71
  %115 = phi ptr [ %10, %71 ], [ %89, %88 ], [ %112, %93 ]
  %116 = icmp eq ptr %10, %1
  br i1 %116, label %117, label %119

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.dealii::Tensor", ptr %115, i64 %22
  store ptr %118, ptr %9, align 8, !tbaa !23
  br label %277

119:                                              ; preds = %114, %119
  %120 = phi ptr [ %130, %119 ], [ %115, %114 ]
  %121 = phi ptr [ %129, %119 ], [ %1, %114 ]
  %122 = load double, ptr %121, align 8, !tbaa !8
  store double %122, ptr %120, align 8, !tbaa !8
  %123 = getelementptr inbounds [3 x double], ptr %121, i64 0, i64 1
  %124 = load double, ptr %123, align 8, !tbaa !8
  %125 = getelementptr inbounds [3 x double], ptr %120, i64 0, i64 1
  store double %124, ptr %125, align 8, !tbaa !8
  %126 = getelementptr inbounds [3 x double], ptr %121, i64 0, i64 2
  %127 = load double, ptr %126, align 8, !tbaa !8
  %128 = getelementptr inbounds [3 x double], ptr %120, i64 0, i64 2
  store double %127, ptr %128, align 8, !tbaa !8
  %129 = getelementptr inbounds %"class.dealii::Tensor", ptr %121, i64 1
  %130 = getelementptr inbounds %"class.dealii::Tensor", ptr %120, i64 1
  %131 = icmp eq ptr %129, %10
  br i1 %131, label %132, label %119

132:                                              ; preds = %119
  %133 = getelementptr inbounds %"class.dealii::Tensor", ptr %115, i64 %22
  store ptr %133, ptr %9, align 8, !tbaa !23
  br label %134

134:                                              ; preds = %132, %134
  %135 = phi ptr [ %137, %134 ], [ %1, %132 ]
  store <2 x double> %17, ptr %135, align 8, !tbaa !8
  %136 = getelementptr inbounds [3 x double], ptr %135, i64 0, i64 2
  store double %19, ptr %136, align 8, !tbaa !8
  %137 = getelementptr inbounds %"class.dealii::Tensor", ptr %135, i64 1
  %138 = icmp eq ptr %137, %10
  br i1 %138, label %277, label %134

139:                                              ; preds = %6
  %140 = load ptr, ptr %0, align 8, !tbaa !25
  %141 = ptrtoint ptr %140 to i64
  %142 = sub i64 %12, %141
  %143 = sdiv exact i64 %142, 24
  %144 = sub nsw i64 384307168202282325, %143
  %145 = icmp ult i64 %144, %2
  br i1 %145, label %146, label %147

146:                                              ; preds = %139
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.9) #18
  unreachable

147:                                              ; preds = %139
  %148 = tail call i64 @llvm.umax.i64(i64 %143, i64 %2)
  %149 = add i64 %148, %143
  %150 = icmp ult i64 %149, %143
  %151 = icmp ugt i64 %149, 384307168202282325
  %152 = or i1 %150, %151
  %153 = select i1 %152, i64 384307168202282325, i64 %149
  %154 = ptrtoint ptr %1 to i64
  %155 = sub i64 %154, %141
  %156 = sdiv i64 %155, 24
  %157 = icmp eq i64 %153, 0
  br i1 %157, label %161, label %158

158:                                              ; preds = %147
  %159 = mul nuw nsw i64 %153, 24
  %160 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %159) #16
  br label %161

161:                                              ; preds = %158, %147
  %162 = phi ptr [ %160, %158 ], [ null, %147 ]
  %163 = getelementptr %"class.dealii::Tensor", ptr %162, i64 %156
  %164 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 1
  %165 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %166 = icmp ult i64 %2, 12
  br i1 %166, label %197, label %167

167:                                              ; preds = %161
  %168 = add i64 %156, %2
  %169 = mul i64 %168, 24
  %170 = getelementptr i8, ptr %162, i64 %169
  %171 = getelementptr inbounds i8, ptr %3, i64 24
  %172 = icmp ult ptr %163, %171
  %173 = icmp ugt ptr %170, %3
  %174 = and i1 %172, %173
  br i1 %174, label %197, label %175

175:                                              ; preds = %167
  %176 = and i64 %2, -4
  %177 = mul i64 %176, 24
  %178 = getelementptr i8, ptr %163, i64 %177
  %179 = and i64 %2, 3
  %180 = load <2 x double>, ptr %3, align 8
  %181 = shufflevector <2 x double> %180, <2 x double> poison, <4 x i32> zeroinitializer
  %182 = load <2 x double>, ptr %164, align 8
  %183 = shufflevector <2 x double> %182, <2 x double> poison, <4 x i32> zeroinitializer
  %184 = load double, ptr %165, align 8, !tbaa !8, !alias.scope !683
  %185 = insertelement <4 x double> poison, double %184, i64 0
  %186 = shufflevector <4 x double> %181, <4 x double> %183, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %187 = shufflevector <4 x double> %185, <4 x double> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 poison, i32 poison, i32 poison, i32 poison>
  %188 = shufflevector <8 x double> %186, <8 x double> %187, <12 x i32> <i32 0, i32 4, i32 8, i32 1, i32 5, i32 9, i32 2, i32 6, i32 10, i32 3, i32 7, i32 11>
  br label %189

189:                                              ; preds = %189, %175
  %190 = phi i64 [ 0, %175 ], [ %193, %189 ]
  %191 = mul i64 %190, 24
  %192 = getelementptr i8, ptr %163, i64 %191
  store <12 x double> %188, ptr %192, align 8, !tbaa !8
  %193 = add nuw i64 %190, 4
  %194 = icmp eq i64 %193, %176
  br i1 %194, label %195, label %189, !llvm.loop !686

195:                                              ; preds = %189
  %196 = icmp eq i64 %176, %2
  br i1 %196, label %239, label %197

197:                                              ; preds = %167, %161, %195
  %198 = phi ptr [ %163, %167 ], [ %163, %161 ], [ %178, %195 ]
  %199 = phi i64 [ %2, %167 ], [ %2, %161 ], [ %179, %195 ]
  %200 = add i64 %199, -1
  %201 = and i64 %199, 3
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %214, label %203

203:                                              ; preds = %197, %203
  %204 = phi ptr [ %211, %203 ], [ %198, %197 ]
  %205 = phi i64 [ %210, %203 ], [ %199, %197 ]
  %206 = phi i64 [ %212, %203 ], [ 0, %197 ]
  %207 = load <2 x double>, ptr %3, align 8, !tbaa !8
  store <2 x double> %207, ptr %204, align 8, !tbaa !8
  %208 = load double, ptr %165, align 8, !tbaa !8
  %209 = getelementptr inbounds [3 x double], ptr %204, i64 0, i64 2
  store double %208, ptr %209, align 8, !tbaa !8
  %210 = add i64 %205, -1
  %211 = getelementptr inbounds %"class.dealii::Tensor", ptr %204, i64 1
  %212 = add i64 %206, 1
  %213 = icmp eq i64 %212, %201
  br i1 %213, label %214, label %203, !llvm.loop !687

214:                                              ; preds = %203, %197
  %215 = phi ptr [ %198, %197 ], [ %211, %203 ]
  %216 = phi i64 [ %199, %197 ], [ %210, %203 ]
  %217 = icmp ult i64 %200, 3
  br i1 %217, label %239, label %218

218:                                              ; preds = %214, %218
  %219 = phi ptr [ %237, %218 ], [ %215, %214 ]
  %220 = phi i64 [ %236, %218 ], [ %216, %214 ]
  %221 = load <2 x double>, ptr %3, align 8, !tbaa !8
  store <2 x double> %221, ptr %219, align 8, !tbaa !8
  %222 = load double, ptr %165, align 8, !tbaa !8
  %223 = getelementptr inbounds [3 x double], ptr %219, i64 0, i64 2
  store double %222, ptr %223, align 8, !tbaa !8
  %224 = getelementptr inbounds %"class.dealii::Tensor", ptr %219, i64 1
  %225 = load <2 x double>, ptr %3, align 8, !tbaa !8
  store <2 x double> %225, ptr %224, align 8, !tbaa !8
  %226 = load double, ptr %165, align 8, !tbaa !8
  %227 = getelementptr inbounds %"class.dealii::Tensor", ptr %219, i64 1, i32 0, i64 2
  store double %226, ptr %227, align 8, !tbaa !8
  %228 = getelementptr inbounds %"class.dealii::Tensor", ptr %219, i64 2
  %229 = load <2 x double>, ptr %3, align 8, !tbaa !8
  store <2 x double> %229, ptr %228, align 8, !tbaa !8
  %230 = load double, ptr %165, align 8, !tbaa !8
  %231 = getelementptr inbounds %"class.dealii::Tensor", ptr %219, i64 2, i32 0, i64 2
  store double %230, ptr %231, align 8, !tbaa !8
  %232 = getelementptr inbounds %"class.dealii::Tensor", ptr %219, i64 3
  %233 = load <2 x double>, ptr %3, align 8, !tbaa !8
  store <2 x double> %233, ptr %232, align 8, !tbaa !8
  %234 = load double, ptr %165, align 8, !tbaa !8
  %235 = getelementptr inbounds %"class.dealii::Tensor", ptr %219, i64 3, i32 0, i64 2
  store double %234, ptr %235, align 8, !tbaa !8
  %236 = add i64 %220, -4
  %237 = getelementptr inbounds %"class.dealii::Tensor", ptr %219, i64 4
  %238 = icmp eq i64 %236, 0
  br i1 %238, label %239, label %218, !llvm.loop !688

239:                                              ; preds = %214, %218, %195
  %240 = icmp eq ptr %140, %1
  br i1 %240, label %254, label %241

241:                                              ; preds = %239, %241
  %242 = phi ptr [ %252, %241 ], [ %162, %239 ]
  %243 = phi ptr [ %251, %241 ], [ %140, %239 ]
  %244 = load double, ptr %243, align 8, !tbaa !8
  store double %244, ptr %242, align 8, !tbaa !8
  %245 = getelementptr inbounds [3 x double], ptr %243, i64 0, i64 1
  %246 = load double, ptr %245, align 8, !tbaa !8
  %247 = getelementptr inbounds [3 x double], ptr %242, i64 0, i64 1
  store double %246, ptr %247, align 8, !tbaa !8
  %248 = getelementptr inbounds [3 x double], ptr %243, i64 0, i64 2
  %249 = load double, ptr %248, align 8, !tbaa !8
  %250 = getelementptr inbounds [3 x double], ptr %242, i64 0, i64 2
  store double %249, ptr %250, align 8, !tbaa !8
  %251 = getelementptr inbounds %"class.dealii::Tensor", ptr %243, i64 1
  %252 = getelementptr inbounds %"class.dealii::Tensor", ptr %242, i64 1
  %253 = icmp eq ptr %251, %1
  br i1 %253, label %254, label %241

254:                                              ; preds = %241, %239
  %255 = phi ptr [ %162, %239 ], [ %252, %241 ]
  %256 = getelementptr inbounds %"class.dealii::Tensor", ptr %255, i64 %2
  %257 = icmp eq ptr %10, %1
  br i1 %257, label %271, label %258

258:                                              ; preds = %254, %258
  %259 = phi ptr [ %269, %258 ], [ %256, %254 ]
  %260 = phi ptr [ %268, %258 ], [ %1, %254 ]
  %261 = load double, ptr %260, align 8, !tbaa !8
  store double %261, ptr %259, align 8, !tbaa !8
  %262 = getelementptr inbounds [3 x double], ptr %260, i64 0, i64 1
  %263 = load double, ptr %262, align 8, !tbaa !8
  %264 = getelementptr inbounds [3 x double], ptr %259, i64 0, i64 1
  store double %263, ptr %264, align 8, !tbaa !8
  %265 = getelementptr inbounds [3 x double], ptr %260, i64 0, i64 2
  %266 = load double, ptr %265, align 8, !tbaa !8
  %267 = getelementptr inbounds [3 x double], ptr %259, i64 0, i64 2
  store double %266, ptr %267, align 8, !tbaa !8
  %268 = getelementptr inbounds %"class.dealii::Tensor", ptr %260, i64 1
  %269 = getelementptr inbounds %"class.dealii::Tensor", ptr %259, i64 1
  %270 = icmp eq ptr %268, %10
  br i1 %270, label %271, label %258

271:                                              ; preds = %258, %254
  %272 = phi ptr [ %256, %254 ], [ %269, %258 ]
  %273 = icmp eq ptr %140, null
  br i1 %273, label %275, label %274

274:                                              ; preds = %271
  tail call void @_ZdlPv(ptr noundef nonnull %140) #17
  br label %275

275:                                              ; preds = %271, %274
  store ptr %162, ptr %0, align 8, !tbaa !25
  store ptr %272, ptr %9, align 8, !tbaa !23
  %276 = getelementptr inbounds %"class.dealii::Tensor", ptr %162, i64 %153
  store ptr %276, ptr %7, align 8, !tbaa !173
  br label %277

277:                                              ; preds = %134, %66, %117, %275, %4
  ret void
}

declare void @__cxa_rethrow() local_unnamed_addr

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(ptr noundef) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZSt28__throw_bad_array_new_lengthv() local_unnamed_addr #11

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 8 dereferenceable(72) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %321, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !212
  %9 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !33
  %11 = ptrtoint ptr %8 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 72
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %194, label %16

16:                                               ; preds = %6
  %17 = load <4 x double>, ptr %3, align 8, !tbaa !8
  %18 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %3, i64 0, i64 1, i32 0, i64 1
  %19 = load <4 x double>, ptr %18, align 8, !tbaa !8
  %20 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %3, i64 0, i64 2, i32 0, i64 2
  %21 = load double, ptr %20, align 8, !tbaa !8
  %22 = ptrtoint ptr %1 to i64
  %23 = sub i64 %12, %22
  %24 = sdiv exact i64 %23, 72
  %25 = icmp ugt i64 %24, %2
  br i1 %25, label %26, label %110

26:                                               ; preds = %16
  %27 = sub i64 0, %2
  %28 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %10, i64 %27
  %29 = mul i64 %2, -72
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %62, label %31

31:                                               ; preds = %26, %31
  %32 = phi ptr [ %60, %31 ], [ %10, %26 ]
  %33 = phi ptr [ %59, %31 ], [ %28, %26 ]
  %34 = load double, ptr %33, align 8, !tbaa !8
  store double %34, ptr %32, align 8, !tbaa !8
  %35 = getelementptr inbounds [3 x double], ptr %33, i64 0, i64 1
  %36 = load double, ptr %35, align 8, !tbaa !8
  %37 = getelementptr inbounds [3 x double], ptr %32, i64 0, i64 1
  store double %36, ptr %37, align 8, !tbaa !8
  %38 = getelementptr inbounds [3 x double], ptr %33, i64 0, i64 2
  %39 = load double, ptr %38, align 8, !tbaa !8
  %40 = getelementptr inbounds [3 x double], ptr %32, i64 0, i64 2
  store double %39, ptr %40, align 8, !tbaa !8
  %41 = getelementptr inbounds %"class.dealii::Tensor", ptr %32, i64 1
  %42 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %33, i64 0, i64 1
  %43 = load double, ptr %42, align 8, !tbaa !8
  store double %43, ptr %41, align 8, !tbaa !8
  %44 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %33, i64 0, i64 1, i32 0, i64 1
  %45 = load double, ptr %44, align 8, !tbaa !8
  %46 = getelementptr inbounds %"class.dealii::Tensor", ptr %32, i64 1, i32 0, i64 1
  store double %45, ptr %46, align 8, !tbaa !8
  %47 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %33, i64 0, i64 1, i32 0, i64 2
  %48 = load double, ptr %47, align 8, !tbaa !8
  %49 = getelementptr inbounds %"class.dealii::Tensor", ptr %32, i64 1, i32 0, i64 2
  store double %48, ptr %49, align 8, !tbaa !8
  %50 = getelementptr inbounds %"class.dealii::Tensor", ptr %32, i64 2
  %51 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %33, i64 0, i64 2
  %52 = load double, ptr %51, align 8, !tbaa !8
  store double %52, ptr %50, align 8, !tbaa !8
  %53 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %33, i64 0, i64 2, i32 0, i64 1
  %54 = load double, ptr %53, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::Tensor", ptr %32, i64 2, i32 0, i64 1
  store double %54, ptr %55, align 8, !tbaa !8
  %56 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %33, i64 0, i64 2, i32 0, i64 2
  %57 = load double, ptr %56, align 8, !tbaa !8
  %58 = getelementptr inbounds %"class.dealii::Tensor", ptr %32, i64 2, i32 0, i64 2
  store double %57, ptr %58, align 8, !tbaa !8
  %59 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 1
  %60 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %32, i64 1
  %61 = icmp eq ptr %59, %10
  br i1 %61, label %62, label %31

62:                                               ; preds = %31, %26
  %63 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %10, i64 %2
  store ptr %63, ptr %9, align 8, !tbaa !49
  %64 = ptrtoint ptr %28 to i64
  %65 = sub i64 %64, %22
  %66 = icmp sgt i64 %65, 0
  br i1 %66, label %67, label %102

67:                                               ; preds = %62
  %68 = udiv exact i64 %65, 72
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ %100, %69 ], [ %68, %67 ]
  %71 = phi ptr [ %74, %69 ], [ %10, %67 ]
  %72 = phi ptr [ %73, %69 ], [ %28, %67 ]
  %73 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %72, i64 -1
  %74 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %71, i64 -1
  %75 = load double, ptr %73, align 8, !tbaa !8
  store double %75, ptr %74, align 8, !tbaa !8
  %76 = getelementptr %"class.dealii::Tensor.84", ptr %72, i64 -1, i32 0, i64 0, i32 0, i64 1
  %77 = load double, ptr %76, align 8, !tbaa !8
  %78 = getelementptr %"class.dealii::Tensor.84", ptr %71, i64 -1, i32 0, i64 0, i32 0, i64 1
  store double %77, ptr %78, align 8, !tbaa !8
  %79 = getelementptr %"class.dealii::Tensor.84", ptr %72, i64 -1, i32 0, i64 0, i32 0, i64 2
  %80 = load double, ptr %79, align 8, !tbaa !8
  %81 = getelementptr %"class.dealii::Tensor.84", ptr %71, i64 -1, i32 0, i64 0, i32 0, i64 2
  store double %80, ptr %81, align 8, !tbaa !8
  %82 = getelementptr %"class.dealii::Tensor.84", ptr %72, i64 -1, i32 0, i64 1
  %83 = getelementptr %"class.dealii::Tensor.84", ptr %71, i64 -1, i32 0, i64 1
  %84 = load double, ptr %82, align 8, !tbaa !8
  store double %84, ptr %83, align 8, !tbaa !8
  %85 = getelementptr %"class.dealii::Tensor.84", ptr %72, i64 -1, i32 0, i64 1, i32 0, i64 1
  %86 = load double, ptr %85, align 8, !tbaa !8
  %87 = getelementptr %"class.dealii::Tensor.84", ptr %71, i64 -1, i32 0, i64 1, i32 0, i64 1
  store double %86, ptr %87, align 8, !tbaa !8
  %88 = getelementptr %"class.dealii::Tensor.84", ptr %72, i64 -1, i32 0, i64 1, i32 0, i64 2
  %89 = load double, ptr %88, align 8, !tbaa !8
  %90 = getelementptr %"class.dealii::Tensor.84", ptr %71, i64 -1, i32 0, i64 1, i32 0, i64 2
  store double %89, ptr %90, align 8, !tbaa !8
  %91 = getelementptr %"class.dealii::Tensor.84", ptr %72, i64 -1, i32 0, i64 2
  %92 = getelementptr %"class.dealii::Tensor.84", ptr %71, i64 -1, i32 0, i64 2
  %93 = load double, ptr %91, align 8, !tbaa !8
  store double %93, ptr %92, align 8, !tbaa !8
  %94 = getelementptr %"class.dealii::Tensor.84", ptr %72, i64 -1, i32 0, i64 2, i32 0, i64 1
  %95 = load double, ptr %94, align 8, !tbaa !8
  %96 = getelementptr %"class.dealii::Tensor.84", ptr %71, i64 -1, i32 0, i64 2, i32 0, i64 1
  store double %95, ptr %96, align 8, !tbaa !8
  %97 = getelementptr %"class.dealii::Tensor.84", ptr %72, i64 -1, i32 0, i64 2, i32 0, i64 2
  %98 = load double, ptr %97, align 8, !tbaa !8
  %99 = getelementptr %"class.dealii::Tensor.84", ptr %71, i64 -1, i32 0, i64 2, i32 0, i64 2
  store double %98, ptr %99, align 8, !tbaa !8
  %100 = add nsw i64 %70, -1
  %101 = icmp ugt i64 %70, 1
  br i1 %101, label %69, label %102

102:                                              ; preds = %69, %62
  %103 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %1, i64 %2
  br label %104

104:                                              ; preds = %102, %104
  %105 = phi ptr [ %108, %104 ], [ %1, %102 ]
  store <4 x double> %17, ptr %105, align 8, !tbaa !8
  %106 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %105, i64 0, i64 1, i32 0, i64 1
  store <4 x double> %19, ptr %106, align 8, !tbaa !8
  %107 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %105, i64 0, i64 2, i32 0, i64 2
  store double %21, ptr %107, align 8, !tbaa !8
  %108 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %105, i64 1
  %109 = icmp eq ptr %108, %103
  br i1 %109, label %321, label %104

110:                                              ; preds = %16
  %111 = sub i64 %2, %24
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %150, label %113

113:                                              ; preds = %110
  %114 = xor i64 %24, -1
  %115 = add i64 %114, %2
  %116 = and i64 %111, 3
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %128, label %118

118:                                              ; preds = %113, %118
  %119 = phi ptr [ %125, %118 ], [ %10, %113 ]
  %120 = phi i64 [ %124, %118 ], [ %111, %113 ]
  %121 = phi i64 [ %126, %118 ], [ 0, %113 ]
  store <4 x double> %17, ptr %119, align 8, !tbaa !8
  %122 = getelementptr inbounds %"class.dealii::Tensor", ptr %119, i64 1, i32 0, i64 1
  store <4 x double> %19, ptr %122, align 8, !tbaa !8
  %123 = getelementptr inbounds %"class.dealii::Tensor", ptr %119, i64 2, i32 0, i64 2
  store double %21, ptr %123, align 8, !tbaa !8
  %124 = add i64 %120, -1
  %125 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %119, i64 1
  %126 = add i64 %121, 1
  %127 = icmp eq i64 %126, %116
  br i1 %127, label %128, label %118, !llvm.loop !689

128:                                              ; preds = %118, %113
  %129 = phi ptr [ undef, %113 ], [ %125, %118 ]
  %130 = phi ptr [ %10, %113 ], [ %125, %118 ]
  %131 = phi i64 [ %111, %113 ], [ %124, %118 ]
  %132 = icmp ult i64 %115, 3
  br i1 %132, label %150, label %133

133:                                              ; preds = %128, %133
  %134 = phi ptr [ %148, %133 ], [ %130, %128 ]
  %135 = phi i64 [ %147, %133 ], [ %131, %128 ]
  store <4 x double> %17, ptr %134, align 8, !tbaa !8
  %136 = getelementptr inbounds %"class.dealii::Tensor", ptr %134, i64 1, i32 0, i64 1
  store <4 x double> %19, ptr %136, align 8, !tbaa !8
  %137 = getelementptr inbounds %"class.dealii::Tensor", ptr %134, i64 2, i32 0, i64 2
  store double %21, ptr %137, align 8, !tbaa !8
  %138 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %134, i64 1
  store <4 x double> %17, ptr %138, align 8, !tbaa !8
  %139 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %134, i64 1, i32 0, i64 1, i32 0, i64 1
  store <4 x double> %19, ptr %139, align 8, !tbaa !8
  %140 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %134, i64 1, i32 0, i64 2, i32 0, i64 2
  store double %21, ptr %140, align 8, !tbaa !8
  %141 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %134, i64 2
  store <4 x double> %17, ptr %141, align 8, !tbaa !8
  %142 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %134, i64 2, i32 0, i64 1, i32 0, i64 1
  store <4 x double> %19, ptr %142, align 8, !tbaa !8
  %143 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %134, i64 2, i32 0, i64 2, i32 0, i64 2
  store double %21, ptr %143, align 8, !tbaa !8
  %144 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %134, i64 3
  store <4 x double> %17, ptr %144, align 8, !tbaa !8
  %145 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %134, i64 3, i32 0, i64 1, i32 0, i64 1
  store <4 x double> %19, ptr %145, align 8, !tbaa !8
  %146 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %134, i64 3, i32 0, i64 2, i32 0, i64 2
  store double %21, ptr %146, align 8, !tbaa !8
  %147 = add i64 %135, -4
  %148 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %134, i64 4
  %149 = icmp eq i64 %147, 0
  br i1 %149, label %150, label %133

150:                                              ; preds = %128, %133, %110
  %151 = phi ptr [ %10, %110 ], [ %129, %128 ], [ %148, %133 ]
  %152 = icmp eq ptr %10, %1
  br i1 %152, label %153, label %155

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %151, i64 %24
  store ptr %154, ptr %9, align 8, !tbaa !49
  br label %321

155:                                              ; preds = %150, %155
  %156 = phi ptr [ %184, %155 ], [ %151, %150 ]
  %157 = phi ptr [ %183, %155 ], [ %1, %150 ]
  %158 = load double, ptr %157, align 8, !tbaa !8
  store double %158, ptr %156, align 8, !tbaa !8
  %159 = getelementptr inbounds [3 x double], ptr %157, i64 0, i64 1
  %160 = load double, ptr %159, align 8, !tbaa !8
  %161 = getelementptr inbounds [3 x double], ptr %156, i64 0, i64 1
  store double %160, ptr %161, align 8, !tbaa !8
  %162 = getelementptr inbounds [3 x double], ptr %157, i64 0, i64 2
  %163 = load double, ptr %162, align 8, !tbaa !8
  %164 = getelementptr inbounds [3 x double], ptr %156, i64 0, i64 2
  store double %163, ptr %164, align 8, !tbaa !8
  %165 = getelementptr inbounds %"class.dealii::Tensor", ptr %156, i64 1
  %166 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %157, i64 0, i64 1
  %167 = load double, ptr %166, align 8, !tbaa !8
  store double %167, ptr %165, align 8, !tbaa !8
  %168 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %157, i64 0, i64 1, i32 0, i64 1
  %169 = load double, ptr %168, align 8, !tbaa !8
  %170 = getelementptr inbounds %"class.dealii::Tensor", ptr %156, i64 1, i32 0, i64 1
  store double %169, ptr %170, align 8, !tbaa !8
  %171 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %157, i64 0, i64 1, i32 0, i64 2
  %172 = load double, ptr %171, align 8, !tbaa !8
  %173 = getelementptr inbounds %"class.dealii::Tensor", ptr %156, i64 1, i32 0, i64 2
  store double %172, ptr %173, align 8, !tbaa !8
  %174 = getelementptr inbounds %"class.dealii::Tensor", ptr %156, i64 2
  %175 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %157, i64 0, i64 2
  %176 = load double, ptr %175, align 8, !tbaa !8
  store double %176, ptr %174, align 8, !tbaa !8
  %177 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %157, i64 0, i64 2, i32 0, i64 1
  %178 = load double, ptr %177, align 8, !tbaa !8
  %179 = getelementptr inbounds %"class.dealii::Tensor", ptr %156, i64 2, i32 0, i64 1
  store double %178, ptr %179, align 8, !tbaa !8
  %180 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %157, i64 0, i64 2, i32 0, i64 2
  %181 = load double, ptr %180, align 8, !tbaa !8
  %182 = getelementptr inbounds %"class.dealii::Tensor", ptr %156, i64 2, i32 0, i64 2
  store double %181, ptr %182, align 8, !tbaa !8
  %183 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %157, i64 1
  %184 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %156, i64 1
  %185 = icmp eq ptr %183, %10
  br i1 %185, label %186, label %155

186:                                              ; preds = %155
  %187 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %151, i64 %24
  store ptr %187, ptr %9, align 8, !tbaa !49
  br label %188

188:                                              ; preds = %186, %188
  %189 = phi ptr [ %192, %188 ], [ %1, %186 ]
  store <4 x double> %17, ptr %189, align 8, !tbaa !8
  %190 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %189, i64 0, i64 1, i32 0, i64 1
  store <4 x double> %19, ptr %190, align 8, !tbaa !8
  %191 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %189, i64 0, i64 2, i32 0, i64 2
  store double %21, ptr %191, align 8, !tbaa !8
  %192 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %189, i64 1
  %193 = icmp eq ptr %192, %10
  br i1 %193, label %321, label %188

194:                                              ; preds = %6
  %195 = load ptr, ptr %0, align 8, !tbaa !51
  %196 = ptrtoint ptr %195 to i64
  %197 = sub i64 %12, %196
  %198 = sdiv exact i64 %197, 72
  %199 = sub nsw i64 128102389400760775, %198
  %200 = icmp ult i64 %199, %2
  br i1 %200, label %201, label %202

201:                                              ; preds = %194
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.9) #18
  unreachable

202:                                              ; preds = %194
  %203 = tail call i64 @llvm.umax.i64(i64 %198, i64 %2)
  %204 = add i64 %203, %198
  %205 = icmp ult i64 %204, %198
  %206 = icmp ugt i64 %204, 128102389400760775
  %207 = or i1 %205, %206
  %208 = select i1 %207, i64 128102389400760775, i64 %204
  %209 = ptrtoint ptr %1 to i64
  %210 = sub i64 %209, %196
  %211 = sdiv exact i64 %210, 72
  %212 = icmp eq i64 %208, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %202
  %214 = mul nuw nsw i64 %208, 72
  %215 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %214) #16
  br label %216

216:                                              ; preds = %213, %202
  %217 = phi ptr [ %215, %213 ], [ null, %202 ]
  %218 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %217, i64 %211
  %219 = getelementptr inbounds [3 x double], ptr %3, i64 0, i64 2
  %220 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %3, i64 0, i64 1
  %221 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %3, i64 0, i64 1, i32 0, i64 1
  %222 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %3, i64 0, i64 1, i32 0, i64 2
  %223 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %3, i64 0, i64 2
  %224 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %3, i64 0, i64 2, i32 0, i64 1
  %225 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %3, i64 0, i64 2, i32 0, i64 2
  br label %226

226:                                              ; preds = %226, %216
  %227 = phi ptr [ %218, %216 ], [ %245, %226 ]
  %228 = phi i64 [ %2, %216 ], [ %244, %226 ]
  %229 = load <2 x double>, ptr %3, align 8, !tbaa !8
  store <2 x double> %229, ptr %227, align 8, !tbaa !8
  %230 = load double, ptr %219, align 8, !tbaa !8
  %231 = getelementptr inbounds [3 x double], ptr %227, i64 0, i64 2
  store double %230, ptr %231, align 8, !tbaa !8
  %232 = getelementptr inbounds %"class.dealii::Tensor", ptr %227, i64 1
  %233 = load double, ptr %220, align 8, !tbaa !8
  store double %233, ptr %232, align 8, !tbaa !8
  %234 = load double, ptr %221, align 8, !tbaa !8
  %235 = getelementptr inbounds %"class.dealii::Tensor", ptr %227, i64 1, i32 0, i64 1
  store double %234, ptr %235, align 8, !tbaa !8
  %236 = load double, ptr %222, align 8, !tbaa !8
  %237 = getelementptr inbounds %"class.dealii::Tensor", ptr %227, i64 1, i32 0, i64 2
  store double %236, ptr %237, align 8, !tbaa !8
  %238 = getelementptr inbounds %"class.dealii::Tensor", ptr %227, i64 2
  %239 = load double, ptr %223, align 8, !tbaa !8
  store double %239, ptr %238, align 8, !tbaa !8
  %240 = load double, ptr %224, align 8, !tbaa !8
  %241 = getelementptr inbounds %"class.dealii::Tensor", ptr %227, i64 2, i32 0, i64 1
  store double %240, ptr %241, align 8, !tbaa !8
  %242 = load double, ptr %225, align 8, !tbaa !8
  %243 = getelementptr inbounds %"class.dealii::Tensor", ptr %227, i64 2, i32 0, i64 2
  store double %242, ptr %243, align 8, !tbaa !8
  %244 = add i64 %228, -1
  %245 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %227, i64 1
  %246 = icmp eq i64 %244, 0
  br i1 %246, label %247, label %226

247:                                              ; preds = %226
  %248 = icmp eq ptr %195, %1
  br i1 %248, label %280, label %249

249:                                              ; preds = %247, %249
  %250 = phi ptr [ %278, %249 ], [ %217, %247 ]
  %251 = phi ptr [ %277, %249 ], [ %195, %247 ]
  %252 = load double, ptr %251, align 8, !tbaa !8
  store double %252, ptr %250, align 8, !tbaa !8
  %253 = getelementptr inbounds [3 x double], ptr %251, i64 0, i64 1
  %254 = load double, ptr %253, align 8, !tbaa !8
  %255 = getelementptr inbounds [3 x double], ptr %250, i64 0, i64 1
  store double %254, ptr %255, align 8, !tbaa !8
  %256 = getelementptr inbounds [3 x double], ptr %251, i64 0, i64 2
  %257 = load double, ptr %256, align 8, !tbaa !8
  %258 = getelementptr inbounds [3 x double], ptr %250, i64 0, i64 2
  store double %257, ptr %258, align 8, !tbaa !8
  %259 = getelementptr inbounds %"class.dealii::Tensor", ptr %250, i64 1
  %260 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %251, i64 0, i64 1
  %261 = load double, ptr %260, align 8, !tbaa !8
  store double %261, ptr %259, align 8, !tbaa !8
  %262 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %251, i64 0, i64 1, i32 0, i64 1
  %263 = load double, ptr %262, align 8, !tbaa !8
  %264 = getelementptr inbounds %"class.dealii::Tensor", ptr %250, i64 1, i32 0, i64 1
  store double %263, ptr %264, align 8, !tbaa !8
  %265 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %251, i64 0, i64 1, i32 0, i64 2
  %266 = load double, ptr %265, align 8, !tbaa !8
  %267 = getelementptr inbounds %"class.dealii::Tensor", ptr %250, i64 1, i32 0, i64 2
  store double %266, ptr %267, align 8, !tbaa !8
  %268 = getelementptr inbounds %"class.dealii::Tensor", ptr %250, i64 2
  %269 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %251, i64 0, i64 2
  %270 = load double, ptr %269, align 8, !tbaa !8
  store double %270, ptr %268, align 8, !tbaa !8
  %271 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %251, i64 0, i64 2, i32 0, i64 1
  %272 = load double, ptr %271, align 8, !tbaa !8
  %273 = getelementptr inbounds %"class.dealii::Tensor", ptr %250, i64 2, i32 0, i64 1
  store double %272, ptr %273, align 8, !tbaa !8
  %274 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %251, i64 0, i64 2, i32 0, i64 2
  %275 = load double, ptr %274, align 8, !tbaa !8
  %276 = getelementptr inbounds %"class.dealii::Tensor", ptr %250, i64 2, i32 0, i64 2
  store double %275, ptr %276, align 8, !tbaa !8
  %277 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %251, i64 1
  %278 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %250, i64 1
  %279 = icmp eq ptr %277, %1
  br i1 %279, label %280, label %249

280:                                              ; preds = %249, %247
  %281 = phi ptr [ %217, %247 ], [ %278, %249 ]
  %282 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %281, i64 %2
  %283 = icmp eq ptr %10, %1
  br i1 %283, label %315, label %284

284:                                              ; preds = %280, %284
  %285 = phi ptr [ %313, %284 ], [ %282, %280 ]
  %286 = phi ptr [ %312, %284 ], [ %1, %280 ]
  %287 = load double, ptr %286, align 8, !tbaa !8
  store double %287, ptr %285, align 8, !tbaa !8
  %288 = getelementptr inbounds [3 x double], ptr %286, i64 0, i64 1
  %289 = load double, ptr %288, align 8, !tbaa !8
  %290 = getelementptr inbounds [3 x double], ptr %285, i64 0, i64 1
  store double %289, ptr %290, align 8, !tbaa !8
  %291 = getelementptr inbounds [3 x double], ptr %286, i64 0, i64 2
  %292 = load double, ptr %291, align 8, !tbaa !8
  %293 = getelementptr inbounds [3 x double], ptr %285, i64 0, i64 2
  store double %292, ptr %293, align 8, !tbaa !8
  %294 = getelementptr inbounds %"class.dealii::Tensor", ptr %285, i64 1
  %295 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %286, i64 0, i64 1
  %296 = load double, ptr %295, align 8, !tbaa !8
  store double %296, ptr %294, align 8, !tbaa !8
  %297 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %286, i64 0, i64 1, i32 0, i64 1
  %298 = load double, ptr %297, align 8, !tbaa !8
  %299 = getelementptr inbounds %"class.dealii::Tensor", ptr %285, i64 1, i32 0, i64 1
  store double %298, ptr %299, align 8, !tbaa !8
  %300 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %286, i64 0, i64 1, i32 0, i64 2
  %301 = load double, ptr %300, align 8, !tbaa !8
  %302 = getelementptr inbounds %"class.dealii::Tensor", ptr %285, i64 1, i32 0, i64 2
  store double %301, ptr %302, align 8, !tbaa !8
  %303 = getelementptr inbounds %"class.dealii::Tensor", ptr %285, i64 2
  %304 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %286, i64 0, i64 2
  %305 = load double, ptr %304, align 8, !tbaa !8
  store double %305, ptr %303, align 8, !tbaa !8
  %306 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %286, i64 0, i64 2, i32 0, i64 1
  %307 = load double, ptr %306, align 8, !tbaa !8
  %308 = getelementptr inbounds %"class.dealii::Tensor", ptr %285, i64 2, i32 0, i64 1
  store double %307, ptr %308, align 8, !tbaa !8
  %309 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %286, i64 0, i64 2, i32 0, i64 2
  %310 = load double, ptr %309, align 8, !tbaa !8
  %311 = getelementptr inbounds %"class.dealii::Tensor", ptr %285, i64 2, i32 0, i64 2
  store double %310, ptr %311, align 8, !tbaa !8
  %312 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %286, i64 1
  %313 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %285, i64 1
  %314 = icmp eq ptr %312, %10
  br i1 %314, label %315, label %284

315:                                              ; preds = %284, %280
  %316 = phi ptr [ %282, %280 ], [ %313, %284 ]
  %317 = icmp eq ptr %195, null
  br i1 %317, label %319, label %318

318:                                              ; preds = %315
  tail call void @_ZdlPv(ptr noundef nonnull %195) #17
  br label %319

319:                                              ; preds = %315, %318
  store ptr %217, ptr %0, align 8, !tbaa !51
  store ptr %316, ptr %9, align 8, !tbaa !49
  %320 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %217, i64 %208
  store ptr %320, ptr %7, align 8, !tbaa !212
  br label %321

321:                                              ; preds = %188, %104, %153, %319, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN6dealii6TensorILi3ELi3EEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 8 dereferenceable(216) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %506, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<3, 3>, std::allocator<dealii::Tensor<3, 3> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !690
  %9 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<3, 3>, std::allocator<dealii::Tensor<3, 3> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !33
  %11 = ptrtoint ptr %8 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 216
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %288, label %16

16:                                               ; preds = %6
  %17 = load <4 x double>, ptr %3, align 8, !tbaa !8
  %18 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %3, i64 0, i64 1, i32 0, i64 1
  %19 = load <4 x double>, ptr %18, align 8, !tbaa !8
  %20 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %3, i64 0, i64 2, i32 0, i64 2
  %21 = load <4 x double>, ptr %20, align 8, !tbaa !8
  %22 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %3, i64 0, i64 1, i32 0, i64 1
  %23 = load <4 x double>, ptr %22, align 8, !tbaa !8
  %24 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %3, i64 0, i64 1, i32 0, i64 2, i32 0, i64 1
  %25 = load <4 x double>, ptr %24, align 8, !tbaa !8
  %26 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %3, i64 0, i64 2, i32 0, i64 0, i32 0, i64 2
  %27 = load <4 x double>, ptr %26, align 8, !tbaa !8
  %28 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %3, i64 0, i64 2, i32 0, i64 2
  %29 = load <2 x double>, ptr %28, align 8, !tbaa !8
  %30 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %3, i64 0, i64 2, i32 0, i64 2, i32 0, i64 2
  %31 = load double, ptr %30, align 8, !tbaa !8
  %32 = ptrtoint ptr %1 to i64
  %33 = sub i64 %12, %32
  %34 = sdiv exact i64 %33, 216
  %35 = icmp ugt i64 %34, %2
  br i1 %35, label %36, label %141

36:                                               ; preds = %16
  %37 = sub i64 0, %2
  %38 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %10, i64 %37
  %39 = mul i64 %2, -216
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %126, label %41

41:                                               ; preds = %36, %41
  %42 = phi ptr [ %124, %41 ], [ %10, %36 ]
  %43 = phi ptr [ %123, %41 ], [ %38, %36 ]
  %44 = load double, ptr %43, align 8, !tbaa !8
  store double %44, ptr %42, align 8, !tbaa !8
  %45 = getelementptr inbounds [3 x double], ptr %43, i64 0, i64 1
  %46 = load double, ptr %45, align 8, !tbaa !8
  %47 = getelementptr inbounds [3 x double], ptr %42, i64 0, i64 1
  store double %46, ptr %47, align 8, !tbaa !8
  %48 = getelementptr inbounds [3 x double], ptr %43, i64 0, i64 2
  %49 = load double, ptr %48, align 8, !tbaa !8
  %50 = getelementptr inbounds [3 x double], ptr %42, i64 0, i64 2
  store double %49, ptr %50, align 8, !tbaa !8
  %51 = getelementptr inbounds %"class.dealii::Tensor", ptr %42, i64 1
  %52 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %43, i64 0, i64 1
  %53 = load double, ptr %52, align 8, !tbaa !8
  store double %53, ptr %51, align 8, !tbaa !8
  %54 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %43, i64 0, i64 1, i32 0, i64 1
  %55 = load double, ptr %54, align 8, !tbaa !8
  %56 = getelementptr inbounds %"class.dealii::Tensor", ptr %42, i64 1, i32 0, i64 1
  store double %55, ptr %56, align 8, !tbaa !8
  %57 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %43, i64 0, i64 1, i32 0, i64 2
  %58 = load double, ptr %57, align 8, !tbaa !8
  %59 = getelementptr inbounds %"class.dealii::Tensor", ptr %42, i64 1, i32 0, i64 2
  store double %58, ptr %59, align 8, !tbaa !8
  %60 = getelementptr inbounds %"class.dealii::Tensor", ptr %42, i64 2
  %61 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %43, i64 0, i64 2
  %62 = load double, ptr %61, align 8, !tbaa !8
  store double %62, ptr %60, align 8, !tbaa !8
  %63 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %43, i64 0, i64 2, i32 0, i64 1
  %64 = load double, ptr %63, align 8, !tbaa !8
  %65 = getelementptr inbounds %"class.dealii::Tensor", ptr %42, i64 2, i32 0, i64 1
  store double %64, ptr %65, align 8, !tbaa !8
  %66 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %43, i64 0, i64 2, i32 0, i64 2
  %67 = load double, ptr %66, align 8, !tbaa !8
  %68 = getelementptr inbounds %"class.dealii::Tensor", ptr %42, i64 2, i32 0, i64 2
  store double %67, ptr %68, align 8, !tbaa !8
  %69 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 1
  %70 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 1
  %71 = load double, ptr %70, align 8, !tbaa !8
  store double %71, ptr %69, align 8, !tbaa !8
  %72 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 1, i32 0, i64 0, i32 0, i64 1
  %73 = load double, ptr %72, align 8, !tbaa !8
  %74 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 1, i32 0, i64 0, i32 0, i64 1
  store double %73, ptr %74, align 8, !tbaa !8
  %75 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 1, i32 0, i64 0, i32 0, i64 2
  %76 = load double, ptr %75, align 8, !tbaa !8
  %77 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 1, i32 0, i64 0, i32 0, i64 2
  store double %76, ptr %77, align 8, !tbaa !8
  %78 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 1, i32 0, i64 1
  %79 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 1, i32 0, i64 1
  %80 = load double, ptr %79, align 8, !tbaa !8
  store double %80, ptr %78, align 8, !tbaa !8
  %81 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 1, i32 0, i64 1, i32 0, i64 1
  %82 = load double, ptr %81, align 8, !tbaa !8
  %83 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 1, i32 0, i64 1, i32 0, i64 1
  store double %82, ptr %83, align 8, !tbaa !8
  %84 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 1, i32 0, i64 1, i32 0, i64 2
  %85 = load double, ptr %84, align 8, !tbaa !8
  %86 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 1, i32 0, i64 1, i32 0, i64 2
  store double %85, ptr %86, align 8, !tbaa !8
  %87 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 1, i32 0, i64 2
  %88 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 1, i32 0, i64 2
  %89 = load double, ptr %88, align 8, !tbaa !8
  store double %89, ptr %87, align 8, !tbaa !8
  %90 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 1, i32 0, i64 2, i32 0, i64 1
  %91 = load double, ptr %90, align 8, !tbaa !8
  %92 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 1, i32 0, i64 2, i32 0, i64 1
  store double %91, ptr %92, align 8, !tbaa !8
  %93 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 1, i32 0, i64 2, i32 0, i64 2
  %94 = load double, ptr %93, align 8, !tbaa !8
  %95 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 1, i32 0, i64 2, i32 0, i64 2
  store double %94, ptr %95, align 8, !tbaa !8
  %96 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 2
  %97 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 2
  %98 = load double, ptr %97, align 8, !tbaa !8
  store double %98, ptr %96, align 8, !tbaa !8
  %99 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 2, i32 0, i64 0, i32 0, i64 1
  %100 = load double, ptr %99, align 8, !tbaa !8
  %101 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 2, i32 0, i64 0, i32 0, i64 1
  store double %100, ptr %101, align 8, !tbaa !8
  %102 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 2, i32 0, i64 0, i32 0, i64 2
  %103 = load double, ptr %102, align 8, !tbaa !8
  %104 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 2, i32 0, i64 0, i32 0, i64 2
  store double %103, ptr %104, align 8, !tbaa !8
  %105 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 2, i32 0, i64 1
  %106 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 2, i32 0, i64 1
  %107 = load double, ptr %106, align 8, !tbaa !8
  store double %107, ptr %105, align 8, !tbaa !8
  %108 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 2, i32 0, i64 1, i32 0, i64 1
  %109 = load double, ptr %108, align 8, !tbaa !8
  %110 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 2, i32 0, i64 1, i32 0, i64 1
  store double %109, ptr %110, align 8, !tbaa !8
  %111 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 2, i32 0, i64 1, i32 0, i64 2
  %112 = load double, ptr %111, align 8, !tbaa !8
  %113 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 2, i32 0, i64 1, i32 0, i64 2
  store double %112, ptr %113, align 8, !tbaa !8
  %114 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 2, i32 0, i64 2
  %115 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 2, i32 0, i64 2
  %116 = load double, ptr %115, align 8, !tbaa !8
  store double %116, ptr %114, align 8, !tbaa !8
  %117 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 2, i32 0, i64 2, i32 0, i64 1
  %118 = load double, ptr %117, align 8, !tbaa !8
  %119 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 2, i32 0, i64 2, i32 0, i64 1
  store double %118, ptr %119, align 8, !tbaa !8
  %120 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %43, i64 0, i64 2, i32 0, i64 2, i32 0, i64 2
  %121 = load double, ptr %120, align 8, !tbaa !8
  %122 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %42, i64 2, i32 0, i64 2, i32 0, i64 2
  store double %121, ptr %122, align 8, !tbaa !8
  %123 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %43, i64 1
  %124 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %42, i64 1
  %125 = icmp eq ptr %123, %10
  br i1 %125, label %126, label %41

126:                                              ; preds = %41, %36
  %127 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %10, i64 %2
  store ptr %127, ptr %9, align 8, !tbaa !55
  %128 = tail call noundef ptr @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN6dealii6TensorILi3ELi3EEES6_EET0_T_S8_S7_(ptr noundef %1, ptr noundef nonnull %38, ptr noundef %10)
  %129 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %1, i64 %2
  br label %130

130:                                              ; preds = %126, %130
  %131 = phi ptr [ %139, %130 ], [ %1, %126 ]
  store <4 x double> %17, ptr %131, align 8, !tbaa !8
  %132 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %131, i64 0, i64 1, i32 0, i64 1
  store <4 x double> %19, ptr %132, align 8, !tbaa !8
  %133 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %131, i64 0, i64 2, i32 0, i64 2
  store <4 x double> %21, ptr %133, align 8, !tbaa !8
  %134 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %131, i64 0, i64 1, i32 0, i64 1
  store <4 x double> %23, ptr %134, align 8, !tbaa !8
  %135 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %131, i64 0, i64 1, i32 0, i64 2, i32 0, i64 1
  store <4 x double> %25, ptr %135, align 8, !tbaa !8
  %136 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %131, i64 0, i64 2, i32 0, i64 0, i32 0, i64 2
  store <4 x double> %27, ptr %136, align 8, !tbaa !8
  %137 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %131, i64 0, i64 2, i32 0, i64 2
  store <2 x double> %29, ptr %137, align 8, !tbaa !8
  %138 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %131, i64 0, i64 2, i32 0, i64 2, i32 0, i64 2
  store double %31, ptr %138, align 8, !tbaa !8
  %139 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %131, i64 1
  %140 = icmp eq ptr %139, %129
  br i1 %140, label %506, label %130

141:                                              ; preds = %16
  %142 = sub i64 %2, %34
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %185, label %144

144:                                              ; preds = %141
  %145 = xor i64 %34, -1
  %146 = and i64 %142, 1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  store <4 x double> %17, ptr %10, align 8, !tbaa !8
  %149 = getelementptr inbounds %"class.dealii::Tensor", ptr %10, i64 1, i32 0, i64 1
  store <4 x double> %19, ptr %149, align 8, !tbaa !8
  %150 = getelementptr inbounds %"class.dealii::Tensor", ptr %10, i64 2, i32 0, i64 2
  store <4 x double> %21, ptr %150, align 8, !tbaa !8
  %151 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %10, i64 1, i32 0, i64 1
  store <4 x double> %23, ptr %151, align 8, !tbaa !8
  %152 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %10, i64 1, i32 0, i64 2, i32 0, i64 1
  store <4 x double> %25, ptr %152, align 8, !tbaa !8
  %153 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %10, i64 2, i32 0, i64 0, i32 0, i64 2
  store <4 x double> %27, ptr %153, align 8, !tbaa !8
  %154 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %10, i64 2, i32 0, i64 2
  store <2 x double> %29, ptr %154, align 8, !tbaa !8
  %155 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %10, i64 2, i32 0, i64 2, i32 0, i64 2
  store double %31, ptr %155, align 8, !tbaa !8
  %156 = add i64 %142, -1
  %157 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %10, i64 1
  br label %158

158:                                              ; preds = %148, %144
  %159 = phi ptr [ undef, %144 ], [ %157, %148 ]
  %160 = phi ptr [ %10, %144 ], [ %157, %148 ]
  %161 = phi i64 [ %142, %144 ], [ %156, %148 ]
  %162 = sub i64 0, %2
  %163 = icmp eq i64 %145, %162
  br i1 %163, label %185, label %164

164:                                              ; preds = %158, %164
  %165 = phi ptr [ %183, %164 ], [ %160, %158 ]
  %166 = phi i64 [ %182, %164 ], [ %161, %158 ]
  store <4 x double> %17, ptr %165, align 8, !tbaa !8
  %167 = getelementptr inbounds %"class.dealii::Tensor", ptr %165, i64 1, i32 0, i64 1
  store <4 x double> %19, ptr %167, align 8, !tbaa !8
  %168 = getelementptr inbounds %"class.dealii::Tensor", ptr %165, i64 2, i32 0, i64 2
  store <4 x double> %21, ptr %168, align 8, !tbaa !8
  %169 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %165, i64 1, i32 0, i64 1
  store <4 x double> %23, ptr %169, align 8, !tbaa !8
  %170 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %165, i64 1, i32 0, i64 2, i32 0, i64 1
  store <4 x double> %25, ptr %170, align 8, !tbaa !8
  %171 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %165, i64 2, i32 0, i64 0, i32 0, i64 2
  store <4 x double> %27, ptr %171, align 8, !tbaa !8
  %172 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %165, i64 2, i32 0, i64 2
  store <2 x double> %29, ptr %172, align 8, !tbaa !8
  %173 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %165, i64 2, i32 0, i64 2, i32 0, i64 2
  store double %31, ptr %173, align 8, !tbaa !8
  %174 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %165, i64 1
  store <4 x double> %17, ptr %174, align 8, !tbaa !8
  %175 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %165, i64 1, i32 0, i64 0, i32 0, i64 1, i32 0, i64 1
  store <4 x double> %19, ptr %175, align 8, !tbaa !8
  %176 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %165, i64 1, i32 0, i64 0, i32 0, i64 2, i32 0, i64 2
  store <4 x double> %21, ptr %176, align 8, !tbaa !8
  %177 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %165, i64 1, i32 0, i64 1, i32 0, i64 1
  store <4 x double> %23, ptr %177, align 8, !tbaa !8
  %178 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %165, i64 1, i32 0, i64 1, i32 0, i64 2, i32 0, i64 1
  store <4 x double> %25, ptr %178, align 8, !tbaa !8
  %179 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %165, i64 1, i32 0, i64 2, i32 0, i64 0, i32 0, i64 2
  store <4 x double> %27, ptr %179, align 8, !tbaa !8
  %180 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %165, i64 1, i32 0, i64 2, i32 0, i64 2
  store <2 x double> %29, ptr %180, align 8, !tbaa !8
  %181 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %165, i64 1, i32 0, i64 2, i32 0, i64 2, i32 0, i64 2
  store double %31, ptr %181, align 8, !tbaa !8
  %182 = add i64 %166, -2
  %183 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %165, i64 2
  %184 = icmp eq i64 %182, 0
  br i1 %184, label %185, label %164

185:                                              ; preds = %158, %164, %141
  %186 = phi ptr [ %10, %141 ], [ %159, %158 ], [ %183, %164 ]
  store ptr %186, ptr %9, align 8, !tbaa !55
  %187 = icmp eq ptr %10, %1
  br i1 %187, label %188, label %190

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %186, i64 %34
  store ptr %189, ptr %9, align 8, !tbaa !55
  br label %506

190:                                              ; preds = %185, %190
  %191 = phi ptr [ %273, %190 ], [ %186, %185 ]
  %192 = phi ptr [ %272, %190 ], [ %1, %185 ]
  %193 = load double, ptr %192, align 8, !tbaa !8
  store double %193, ptr %191, align 8, !tbaa !8
  %194 = getelementptr inbounds [3 x double], ptr %192, i64 0, i64 1
  %195 = load double, ptr %194, align 8, !tbaa !8
  %196 = getelementptr inbounds [3 x double], ptr %191, i64 0, i64 1
  store double %195, ptr %196, align 8, !tbaa !8
  %197 = getelementptr inbounds [3 x double], ptr %192, i64 0, i64 2
  %198 = load double, ptr %197, align 8, !tbaa !8
  %199 = getelementptr inbounds [3 x double], ptr %191, i64 0, i64 2
  store double %198, ptr %199, align 8, !tbaa !8
  %200 = getelementptr inbounds %"class.dealii::Tensor", ptr %191, i64 1
  %201 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %192, i64 0, i64 1
  %202 = load double, ptr %201, align 8, !tbaa !8
  store double %202, ptr %200, align 8, !tbaa !8
  %203 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %192, i64 0, i64 1, i32 0, i64 1
  %204 = load double, ptr %203, align 8, !tbaa !8
  %205 = getelementptr inbounds %"class.dealii::Tensor", ptr %191, i64 1, i32 0, i64 1
  store double %204, ptr %205, align 8, !tbaa !8
  %206 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %192, i64 0, i64 1, i32 0, i64 2
  %207 = load double, ptr %206, align 8, !tbaa !8
  %208 = getelementptr inbounds %"class.dealii::Tensor", ptr %191, i64 1, i32 0, i64 2
  store double %207, ptr %208, align 8, !tbaa !8
  %209 = getelementptr inbounds %"class.dealii::Tensor", ptr %191, i64 2
  %210 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %192, i64 0, i64 2
  %211 = load double, ptr %210, align 8, !tbaa !8
  store double %211, ptr %209, align 8, !tbaa !8
  %212 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %192, i64 0, i64 2, i32 0, i64 1
  %213 = load double, ptr %212, align 8, !tbaa !8
  %214 = getelementptr inbounds %"class.dealii::Tensor", ptr %191, i64 2, i32 0, i64 1
  store double %213, ptr %214, align 8, !tbaa !8
  %215 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %192, i64 0, i64 2, i32 0, i64 2
  %216 = load double, ptr %215, align 8, !tbaa !8
  %217 = getelementptr inbounds %"class.dealii::Tensor", ptr %191, i64 2, i32 0, i64 2
  store double %216, ptr %217, align 8, !tbaa !8
  %218 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 1
  %219 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 1
  %220 = load double, ptr %219, align 8, !tbaa !8
  store double %220, ptr %218, align 8, !tbaa !8
  %221 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 1, i32 0, i64 0, i32 0, i64 1
  %222 = load double, ptr %221, align 8, !tbaa !8
  %223 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 1, i32 0, i64 0, i32 0, i64 1
  store double %222, ptr %223, align 8, !tbaa !8
  %224 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 1, i32 0, i64 0, i32 0, i64 2
  %225 = load double, ptr %224, align 8, !tbaa !8
  %226 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 1, i32 0, i64 0, i32 0, i64 2
  store double %225, ptr %226, align 8, !tbaa !8
  %227 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 1, i32 0, i64 1
  %228 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 1, i32 0, i64 1
  %229 = load double, ptr %228, align 8, !tbaa !8
  store double %229, ptr %227, align 8, !tbaa !8
  %230 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 1, i32 0, i64 1, i32 0, i64 1
  %231 = load double, ptr %230, align 8, !tbaa !8
  %232 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 1, i32 0, i64 1, i32 0, i64 1
  store double %231, ptr %232, align 8, !tbaa !8
  %233 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 1, i32 0, i64 1, i32 0, i64 2
  %234 = load double, ptr %233, align 8, !tbaa !8
  %235 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 1, i32 0, i64 1, i32 0, i64 2
  store double %234, ptr %235, align 8, !tbaa !8
  %236 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 1, i32 0, i64 2
  %237 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 1, i32 0, i64 2
  %238 = load double, ptr %237, align 8, !tbaa !8
  store double %238, ptr %236, align 8, !tbaa !8
  %239 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 1, i32 0, i64 2, i32 0, i64 1
  %240 = load double, ptr %239, align 8, !tbaa !8
  %241 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 1, i32 0, i64 2, i32 0, i64 1
  store double %240, ptr %241, align 8, !tbaa !8
  %242 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 1, i32 0, i64 2, i32 0, i64 2
  %243 = load double, ptr %242, align 8, !tbaa !8
  %244 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 1, i32 0, i64 2, i32 0, i64 2
  store double %243, ptr %244, align 8, !tbaa !8
  %245 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 2
  %246 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 2
  %247 = load double, ptr %246, align 8, !tbaa !8
  store double %247, ptr %245, align 8, !tbaa !8
  %248 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 2, i32 0, i64 0, i32 0, i64 1
  %249 = load double, ptr %248, align 8, !tbaa !8
  %250 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 2, i32 0, i64 0, i32 0, i64 1
  store double %249, ptr %250, align 8, !tbaa !8
  %251 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 2, i32 0, i64 0, i32 0, i64 2
  %252 = load double, ptr %251, align 8, !tbaa !8
  %253 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 2, i32 0, i64 0, i32 0, i64 2
  store double %252, ptr %253, align 8, !tbaa !8
  %254 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 2, i32 0, i64 1
  %255 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 2, i32 0, i64 1
  %256 = load double, ptr %255, align 8, !tbaa !8
  store double %256, ptr %254, align 8, !tbaa !8
  %257 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 2, i32 0, i64 1, i32 0, i64 1
  %258 = load double, ptr %257, align 8, !tbaa !8
  %259 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 2, i32 0, i64 1, i32 0, i64 1
  store double %258, ptr %259, align 8, !tbaa !8
  %260 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 2, i32 0, i64 1, i32 0, i64 2
  %261 = load double, ptr %260, align 8, !tbaa !8
  %262 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 2, i32 0, i64 1, i32 0, i64 2
  store double %261, ptr %262, align 8, !tbaa !8
  %263 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 2, i32 0, i64 2
  %264 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 2, i32 0, i64 2
  %265 = load double, ptr %264, align 8, !tbaa !8
  store double %265, ptr %263, align 8, !tbaa !8
  %266 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 2, i32 0, i64 2, i32 0, i64 1
  %267 = load double, ptr %266, align 8, !tbaa !8
  %268 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 2, i32 0, i64 2, i32 0, i64 1
  store double %267, ptr %268, align 8, !tbaa !8
  %269 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %192, i64 0, i64 2, i32 0, i64 2, i32 0, i64 2
  %270 = load double, ptr %269, align 8, !tbaa !8
  %271 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %191, i64 2, i32 0, i64 2, i32 0, i64 2
  store double %270, ptr %271, align 8, !tbaa !8
  %272 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %192, i64 1
  %273 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %191, i64 1
  %274 = icmp eq ptr %272, %10
  br i1 %274, label %275, label %190

275:                                              ; preds = %190
  %276 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %186, i64 %34
  store ptr %276, ptr %9, align 8, !tbaa !55
  br label %277

277:                                              ; preds = %275, %277
  %278 = phi ptr [ %286, %277 ], [ %1, %275 ]
  store <4 x double> %17, ptr %278, align 8, !tbaa !8
  %279 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %278, i64 0, i64 1, i32 0, i64 1
  store <4 x double> %19, ptr %279, align 8, !tbaa !8
  %280 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %278, i64 0, i64 2, i32 0, i64 2
  store <4 x double> %21, ptr %280, align 8, !tbaa !8
  %281 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %278, i64 0, i64 1, i32 0, i64 1
  store <4 x double> %23, ptr %281, align 8, !tbaa !8
  %282 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %278, i64 0, i64 1, i32 0, i64 2, i32 0, i64 1
  store <4 x double> %25, ptr %282, align 8, !tbaa !8
  %283 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %278, i64 0, i64 2, i32 0, i64 0, i32 0, i64 2
  store <4 x double> %27, ptr %283, align 8, !tbaa !8
  %284 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %278, i64 0, i64 2, i32 0, i64 2
  store <2 x double> %29, ptr %284, align 8, !tbaa !8
  %285 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %278, i64 0, i64 2, i32 0, i64 2, i32 0, i64 2
  store double %31, ptr %285, align 8, !tbaa !8
  %286 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %278, i64 1
  %287 = icmp eq ptr %286, %10
  br i1 %287, label %506, label %277

288:                                              ; preds = %6
  %289 = load ptr, ptr %0, align 8, !tbaa !57
  %290 = ptrtoint ptr %289 to i64
  %291 = sub i64 %12, %290
  %292 = sdiv exact i64 %291, 216
  %293 = sub nsw i64 42700796466920258, %292
  %294 = icmp ult i64 %293, %2
  br i1 %294, label %295, label %296

295:                                              ; preds = %288
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.9) #18
  unreachable

296:                                              ; preds = %288
  %297 = tail call i64 @llvm.umax.i64(i64 %292, i64 %2)
  %298 = add i64 %297, %292
  %299 = icmp ult i64 %298, %292
  %300 = icmp ugt i64 %298, 42700796466920258
  %301 = or i1 %299, %300
  %302 = select i1 %301, i64 42700796466920258, i64 %298
  %303 = ptrtoint ptr %1 to i64
  %304 = sub i64 %303, %290
  %305 = sdiv exact i64 %304, 216
  %306 = icmp eq i64 %302, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %296
  %308 = mul nuw nsw i64 %302, 216
  %309 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %308) #16
  br label %310

310:                                              ; preds = %296, %307
  %311 = phi ptr [ %309, %307 ], [ null, %296 ]
  %312 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %311, i64 %305
  %313 = invoke noundef ptr @_ZSt18__do_uninit_fill_nIPN6dealii6TensorILi3ELi3EEEmS2_ET_S4_T0_RKT1_(ptr noundef %312, i64 noundef %2, ptr noundef nonnull align 8 dereferenceable(216) %3)
          to label %314 unwind label %496

314:                                              ; preds = %310
  %315 = icmp eq ptr %289, %1
  br i1 %315, label %401, label %316

316:                                              ; preds = %314, %316
  %317 = phi ptr [ %399, %316 ], [ %311, %314 ]
  %318 = phi ptr [ %398, %316 ], [ %289, %314 ]
  %319 = load double, ptr %318, align 8, !tbaa !8
  store double %319, ptr %317, align 8, !tbaa !8
  %320 = getelementptr inbounds [3 x double], ptr %318, i64 0, i64 1
  %321 = load double, ptr %320, align 8, !tbaa !8
  %322 = getelementptr inbounds [3 x double], ptr %317, i64 0, i64 1
  store double %321, ptr %322, align 8, !tbaa !8
  %323 = getelementptr inbounds [3 x double], ptr %318, i64 0, i64 2
  %324 = load double, ptr %323, align 8, !tbaa !8
  %325 = getelementptr inbounds [3 x double], ptr %317, i64 0, i64 2
  store double %324, ptr %325, align 8, !tbaa !8
  %326 = getelementptr inbounds %"class.dealii::Tensor", ptr %317, i64 1
  %327 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %318, i64 0, i64 1
  %328 = load double, ptr %327, align 8, !tbaa !8
  store double %328, ptr %326, align 8, !tbaa !8
  %329 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %318, i64 0, i64 1, i32 0, i64 1
  %330 = load double, ptr %329, align 8, !tbaa !8
  %331 = getelementptr inbounds %"class.dealii::Tensor", ptr %317, i64 1, i32 0, i64 1
  store double %330, ptr %331, align 8, !tbaa !8
  %332 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %318, i64 0, i64 1, i32 0, i64 2
  %333 = load double, ptr %332, align 8, !tbaa !8
  %334 = getelementptr inbounds %"class.dealii::Tensor", ptr %317, i64 1, i32 0, i64 2
  store double %333, ptr %334, align 8, !tbaa !8
  %335 = getelementptr inbounds %"class.dealii::Tensor", ptr %317, i64 2
  %336 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %318, i64 0, i64 2
  %337 = load double, ptr %336, align 8, !tbaa !8
  store double %337, ptr %335, align 8, !tbaa !8
  %338 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %318, i64 0, i64 2, i32 0, i64 1
  %339 = load double, ptr %338, align 8, !tbaa !8
  %340 = getelementptr inbounds %"class.dealii::Tensor", ptr %317, i64 2, i32 0, i64 1
  store double %339, ptr %340, align 8, !tbaa !8
  %341 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %318, i64 0, i64 2, i32 0, i64 2
  %342 = load double, ptr %341, align 8, !tbaa !8
  %343 = getelementptr inbounds %"class.dealii::Tensor", ptr %317, i64 2, i32 0, i64 2
  store double %342, ptr %343, align 8, !tbaa !8
  %344 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 1
  %345 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 1
  %346 = load double, ptr %345, align 8, !tbaa !8
  store double %346, ptr %344, align 8, !tbaa !8
  %347 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 1, i32 0, i64 0, i32 0, i64 1
  %348 = load double, ptr %347, align 8, !tbaa !8
  %349 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 1, i32 0, i64 0, i32 0, i64 1
  store double %348, ptr %349, align 8, !tbaa !8
  %350 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 1, i32 0, i64 0, i32 0, i64 2
  %351 = load double, ptr %350, align 8, !tbaa !8
  %352 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 1, i32 0, i64 0, i32 0, i64 2
  store double %351, ptr %352, align 8, !tbaa !8
  %353 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 1, i32 0, i64 1
  %354 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 1, i32 0, i64 1
  %355 = load double, ptr %354, align 8, !tbaa !8
  store double %355, ptr %353, align 8, !tbaa !8
  %356 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 1, i32 0, i64 1, i32 0, i64 1
  %357 = load double, ptr %356, align 8, !tbaa !8
  %358 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 1, i32 0, i64 1, i32 0, i64 1
  store double %357, ptr %358, align 8, !tbaa !8
  %359 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 1, i32 0, i64 1, i32 0, i64 2
  %360 = load double, ptr %359, align 8, !tbaa !8
  %361 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 1, i32 0, i64 1, i32 0, i64 2
  store double %360, ptr %361, align 8, !tbaa !8
  %362 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 1, i32 0, i64 2
  %363 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 1, i32 0, i64 2
  %364 = load double, ptr %363, align 8, !tbaa !8
  store double %364, ptr %362, align 8, !tbaa !8
  %365 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 1, i32 0, i64 2, i32 0, i64 1
  %366 = load double, ptr %365, align 8, !tbaa !8
  %367 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 1, i32 0, i64 2, i32 0, i64 1
  store double %366, ptr %367, align 8, !tbaa !8
  %368 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 1, i32 0, i64 2, i32 0, i64 2
  %369 = load double, ptr %368, align 8, !tbaa !8
  %370 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 1, i32 0, i64 2, i32 0, i64 2
  store double %369, ptr %370, align 8, !tbaa !8
  %371 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 2
  %372 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 2
  %373 = load double, ptr %372, align 8, !tbaa !8
  store double %373, ptr %371, align 8, !tbaa !8
  %374 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 2, i32 0, i64 0, i32 0, i64 1
  %375 = load double, ptr %374, align 8, !tbaa !8
  %376 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 2, i32 0, i64 0, i32 0, i64 1
  store double %375, ptr %376, align 8, !tbaa !8
  %377 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 2, i32 0, i64 0, i32 0, i64 2
  %378 = load double, ptr %377, align 8, !tbaa !8
  %379 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 2, i32 0, i64 0, i32 0, i64 2
  store double %378, ptr %379, align 8, !tbaa !8
  %380 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 2, i32 0, i64 1
  %381 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 2, i32 0, i64 1
  %382 = load double, ptr %381, align 8, !tbaa !8
  store double %382, ptr %380, align 8, !tbaa !8
  %383 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 2, i32 0, i64 1, i32 0, i64 1
  %384 = load double, ptr %383, align 8, !tbaa !8
  %385 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 2, i32 0, i64 1, i32 0, i64 1
  store double %384, ptr %385, align 8, !tbaa !8
  %386 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 2, i32 0, i64 1, i32 0, i64 2
  %387 = load double, ptr %386, align 8, !tbaa !8
  %388 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 2, i32 0, i64 1, i32 0, i64 2
  store double %387, ptr %388, align 8, !tbaa !8
  %389 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 2, i32 0, i64 2
  %390 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 2, i32 0, i64 2
  %391 = load double, ptr %390, align 8, !tbaa !8
  store double %391, ptr %389, align 8, !tbaa !8
  %392 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 2, i32 0, i64 2, i32 0, i64 1
  %393 = load double, ptr %392, align 8, !tbaa !8
  %394 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 2, i32 0, i64 2, i32 0, i64 1
  store double %393, ptr %394, align 8, !tbaa !8
  %395 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %318, i64 0, i64 2, i32 0, i64 2, i32 0, i64 2
  %396 = load double, ptr %395, align 8, !tbaa !8
  %397 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %317, i64 2, i32 0, i64 2, i32 0, i64 2
  store double %396, ptr %397, align 8, !tbaa !8
  %398 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %318, i64 1
  %399 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %317, i64 1
  %400 = icmp eq ptr %398, %1
  br i1 %400, label %401, label %316

401:                                              ; preds = %316, %314
  %402 = phi ptr [ %311, %314 ], [ %399, %316 ]
  %403 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %402, i64 %2
  %404 = icmp eq ptr %10, %1
  br i1 %404, label %490, label %405

405:                                              ; preds = %401, %405
  %406 = phi ptr [ %488, %405 ], [ %403, %401 ]
  %407 = phi ptr [ %487, %405 ], [ %1, %401 ]
  %408 = load double, ptr %407, align 8, !tbaa !8
  store double %408, ptr %406, align 8, !tbaa !8
  %409 = getelementptr inbounds [3 x double], ptr %407, i64 0, i64 1
  %410 = load double, ptr %409, align 8, !tbaa !8
  %411 = getelementptr inbounds [3 x double], ptr %406, i64 0, i64 1
  store double %410, ptr %411, align 8, !tbaa !8
  %412 = getelementptr inbounds [3 x double], ptr %407, i64 0, i64 2
  %413 = load double, ptr %412, align 8, !tbaa !8
  %414 = getelementptr inbounds [3 x double], ptr %406, i64 0, i64 2
  store double %413, ptr %414, align 8, !tbaa !8
  %415 = getelementptr inbounds %"class.dealii::Tensor", ptr %406, i64 1
  %416 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %407, i64 0, i64 1
  %417 = load double, ptr %416, align 8, !tbaa !8
  store double %417, ptr %415, align 8, !tbaa !8
  %418 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %407, i64 0, i64 1, i32 0, i64 1
  %419 = load double, ptr %418, align 8, !tbaa !8
  %420 = getelementptr inbounds %"class.dealii::Tensor", ptr %406, i64 1, i32 0, i64 1
  store double %419, ptr %420, align 8, !tbaa !8
  %421 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %407, i64 0, i64 1, i32 0, i64 2
  %422 = load double, ptr %421, align 8, !tbaa !8
  %423 = getelementptr inbounds %"class.dealii::Tensor", ptr %406, i64 1, i32 0, i64 2
  store double %422, ptr %423, align 8, !tbaa !8
  %424 = getelementptr inbounds %"class.dealii::Tensor", ptr %406, i64 2
  %425 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %407, i64 0, i64 2
  %426 = load double, ptr %425, align 8, !tbaa !8
  store double %426, ptr %424, align 8, !tbaa !8
  %427 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %407, i64 0, i64 2, i32 0, i64 1
  %428 = load double, ptr %427, align 8, !tbaa !8
  %429 = getelementptr inbounds %"class.dealii::Tensor", ptr %406, i64 2, i32 0, i64 1
  store double %428, ptr %429, align 8, !tbaa !8
  %430 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %407, i64 0, i64 2, i32 0, i64 2
  %431 = load double, ptr %430, align 8, !tbaa !8
  %432 = getelementptr inbounds %"class.dealii::Tensor", ptr %406, i64 2, i32 0, i64 2
  store double %431, ptr %432, align 8, !tbaa !8
  %433 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 1
  %434 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 1
  %435 = load double, ptr %434, align 8, !tbaa !8
  store double %435, ptr %433, align 8, !tbaa !8
  %436 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 1, i32 0, i64 0, i32 0, i64 1
  %437 = load double, ptr %436, align 8, !tbaa !8
  %438 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 1, i32 0, i64 0, i32 0, i64 1
  store double %437, ptr %438, align 8, !tbaa !8
  %439 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 1, i32 0, i64 0, i32 0, i64 2
  %440 = load double, ptr %439, align 8, !tbaa !8
  %441 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 1, i32 0, i64 0, i32 0, i64 2
  store double %440, ptr %441, align 8, !tbaa !8
  %442 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 1, i32 0, i64 1
  %443 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 1, i32 0, i64 1
  %444 = load double, ptr %443, align 8, !tbaa !8
  store double %444, ptr %442, align 8, !tbaa !8
  %445 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 1, i32 0, i64 1, i32 0, i64 1
  %446 = load double, ptr %445, align 8, !tbaa !8
  %447 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 1, i32 0, i64 1, i32 0, i64 1
  store double %446, ptr %447, align 8, !tbaa !8
  %448 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 1, i32 0, i64 1, i32 0, i64 2
  %449 = load double, ptr %448, align 8, !tbaa !8
  %450 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 1, i32 0, i64 1, i32 0, i64 2
  store double %449, ptr %450, align 8, !tbaa !8
  %451 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 1, i32 0, i64 2
  %452 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 1, i32 0, i64 2
  %453 = load double, ptr %452, align 8, !tbaa !8
  store double %453, ptr %451, align 8, !tbaa !8
  %454 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 1, i32 0, i64 2, i32 0, i64 1
  %455 = load double, ptr %454, align 8, !tbaa !8
  %456 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 1, i32 0, i64 2, i32 0, i64 1
  store double %455, ptr %456, align 8, !tbaa !8
  %457 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 1, i32 0, i64 2, i32 0, i64 2
  %458 = load double, ptr %457, align 8, !tbaa !8
  %459 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 1, i32 0, i64 2, i32 0, i64 2
  store double %458, ptr %459, align 8, !tbaa !8
  %460 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 2
  %461 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 2
  %462 = load double, ptr %461, align 8, !tbaa !8
  store double %462, ptr %460, align 8, !tbaa !8
  %463 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 2, i32 0, i64 0, i32 0, i64 1
  %464 = load double, ptr %463, align 8, !tbaa !8
  %465 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 2, i32 0, i64 0, i32 0, i64 1
  store double %464, ptr %465, align 8, !tbaa !8
  %466 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 2, i32 0, i64 0, i32 0, i64 2
  %467 = load double, ptr %466, align 8, !tbaa !8
  %468 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 2, i32 0, i64 0, i32 0, i64 2
  store double %467, ptr %468, align 8, !tbaa !8
  %469 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 2, i32 0, i64 1
  %470 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 2, i32 0, i64 1
  %471 = load double, ptr %470, align 8, !tbaa !8
  store double %471, ptr %469, align 8, !tbaa !8
  %472 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 2, i32 0, i64 1, i32 0, i64 1
  %473 = load double, ptr %472, align 8, !tbaa !8
  %474 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 2, i32 0, i64 1, i32 0, i64 1
  store double %473, ptr %474, align 8, !tbaa !8
  %475 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 2, i32 0, i64 1, i32 0, i64 2
  %476 = load double, ptr %475, align 8, !tbaa !8
  %477 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 2, i32 0, i64 1, i32 0, i64 2
  store double %476, ptr %477, align 8, !tbaa !8
  %478 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 2, i32 0, i64 2
  %479 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 2, i32 0, i64 2
  %480 = load double, ptr %479, align 8, !tbaa !8
  store double %480, ptr %478, align 8, !tbaa !8
  %481 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 2, i32 0, i64 2, i32 0, i64 1
  %482 = load double, ptr %481, align 8, !tbaa !8
  %483 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 2, i32 0, i64 2, i32 0, i64 1
  store double %482, ptr %483, align 8, !tbaa !8
  %484 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %407, i64 0, i64 2, i32 0, i64 2, i32 0, i64 2
  %485 = load double, ptr %484, align 8, !tbaa !8
  %486 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %406, i64 2, i32 0, i64 2, i32 0, i64 2
  store double %485, ptr %486, align 8, !tbaa !8
  %487 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %407, i64 1
  %488 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %406, i64 1
  %489 = icmp eq ptr %487, %10
  br i1 %489, label %490, label %405

490:                                              ; preds = %405, %401
  %491 = phi ptr [ %403, %401 ], [ %488, %405 ]
  %492 = icmp eq ptr %289, null
  br i1 %492, label %494, label %493

493:                                              ; preds = %490
  tail call void @_ZdlPv(ptr noundef nonnull %289) #17
  br label %494

494:                                              ; preds = %490, %493
  store ptr %311, ptr %0, align 8, !tbaa !57
  store ptr %491, ptr %9, align 8, !tbaa !55
  %495 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %311, i64 %302
  store ptr %495, ptr %7, align 8, !tbaa !690
  br label %506

496:                                              ; preds = %310
  %497 = landingpad { ptr, i32 }
          catch ptr null
  %498 = extractvalue { ptr, i32 } %497, 0
  %499 = tail call ptr @__cxa_begin_catch(ptr %498) #15
  %500 = icmp eq ptr %311, null
  br i1 %500, label %504, label %503

501:                                              ; preds = %504
  %502 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %505 unwind label %507

503:                                              ; preds = %496
  tail call void @_ZdlPv(ptr noundef nonnull %311) #17
  br label %504

504:                                              ; preds = %503, %496
  invoke void @__cxa_rethrow() #18
          to label %510 unwind label %501

505:                                              ; preds = %501
  resume { ptr, i32 } %502

506:                                              ; preds = %277, %130, %188, %494, %4
  ret void

507:                                              ; preds = %501
  %508 = landingpad { ptr, i32 }
          catch ptr null
  %509 = extractvalue { ptr, i32 } %508, 0
  tail call void @__clang_call_terminate(ptr %509) #14
  unreachable

510:                                              ; preds = %504
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN6dealii6TensorILi3ELi3EEES6_EET0_T_S8_S7_(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint ptr %1 to i64
  %5 = ptrtoint ptr %0 to i64
  %6 = sub i64 %4, %5
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %8, label %97

8:                                                ; preds = %3
  %9 = udiv exact i64 %6, 216
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i64 [ %95, %10 ], [ %9, %8 ]
  %12 = phi ptr [ %15, %10 ], [ %2, %8 ]
  %13 = phi ptr [ %14, %10 ], [ %1, %8 ]
  %14 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %13, i64 -1
  %15 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %12, i64 -1
  %16 = load double, ptr %14, align 8, !tbaa !8
  store double %16, ptr %15, align 8, !tbaa !8
  %17 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 0, i32 0, i64 0, i32 0, i64 1
  %18 = load double, ptr %17, align 8, !tbaa !8
  %19 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 0, i32 0, i64 0, i32 0, i64 1
  store double %18, ptr %19, align 8, !tbaa !8
  %20 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 0, i32 0, i64 0, i32 0, i64 2
  %21 = load double, ptr %20, align 8, !tbaa !8
  %22 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 0, i32 0, i64 0, i32 0, i64 2
  store double %21, ptr %22, align 8, !tbaa !8
  %23 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 0, i32 0, i64 1
  %24 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 0, i32 0, i64 1
  %25 = load double, ptr %23, align 8, !tbaa !8
  store double %25, ptr %24, align 8, !tbaa !8
  %26 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 0, i32 0, i64 1, i32 0, i64 1
  %27 = load double, ptr %26, align 8, !tbaa !8
  %28 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 0, i32 0, i64 1, i32 0, i64 1
  store double %27, ptr %28, align 8, !tbaa !8
  %29 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 0, i32 0, i64 1, i32 0, i64 2
  %30 = load double, ptr %29, align 8, !tbaa !8
  %31 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 0, i32 0, i64 1, i32 0, i64 2
  store double %30, ptr %31, align 8, !tbaa !8
  %32 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 0, i32 0, i64 2
  %33 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 0, i32 0, i64 2
  %34 = load double, ptr %32, align 8, !tbaa !8
  store double %34, ptr %33, align 8, !tbaa !8
  %35 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 0, i32 0, i64 2, i32 0, i64 1
  %36 = load double, ptr %35, align 8, !tbaa !8
  %37 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 0, i32 0, i64 2, i32 0, i64 1
  store double %36, ptr %37, align 8, !tbaa !8
  %38 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 0, i32 0, i64 2, i32 0, i64 2
  %39 = load double, ptr %38, align 8, !tbaa !8
  %40 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 0, i32 0, i64 2, i32 0, i64 2
  store double %39, ptr %40, align 8, !tbaa !8
  %41 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 1
  %42 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 1
  %43 = load double, ptr %41, align 8, !tbaa !8
  store double %43, ptr %42, align 8, !tbaa !8
  %44 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 1, i32 0, i64 0, i32 0, i64 1
  %45 = load double, ptr %44, align 8, !tbaa !8
  %46 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 1, i32 0, i64 0, i32 0, i64 1
  store double %45, ptr %46, align 8, !tbaa !8
  %47 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 1, i32 0, i64 0, i32 0, i64 2
  %48 = load double, ptr %47, align 8, !tbaa !8
  %49 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 1, i32 0, i64 0, i32 0, i64 2
  store double %48, ptr %49, align 8, !tbaa !8
  %50 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 1, i32 0, i64 1
  %51 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 1, i32 0, i64 1
  %52 = load double, ptr %50, align 8, !tbaa !8
  store double %52, ptr %51, align 8, !tbaa !8
  %53 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 1, i32 0, i64 1, i32 0, i64 1
  %54 = load double, ptr %53, align 8, !tbaa !8
  %55 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 1, i32 0, i64 1, i32 0, i64 1
  store double %54, ptr %55, align 8, !tbaa !8
  %56 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 1, i32 0, i64 1, i32 0, i64 2
  %57 = load double, ptr %56, align 8, !tbaa !8
  %58 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 1, i32 0, i64 1, i32 0, i64 2
  store double %57, ptr %58, align 8, !tbaa !8
  %59 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 1, i32 0, i64 2
  %60 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 1, i32 0, i64 2
  %61 = load double, ptr %59, align 8, !tbaa !8
  store double %61, ptr %60, align 8, !tbaa !8
  %62 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 1, i32 0, i64 2, i32 0, i64 1
  %63 = load double, ptr %62, align 8, !tbaa !8
  %64 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 1, i32 0, i64 2, i32 0, i64 1
  store double %63, ptr %64, align 8, !tbaa !8
  %65 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 1, i32 0, i64 2, i32 0, i64 2
  %66 = load double, ptr %65, align 8, !tbaa !8
  %67 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 1, i32 0, i64 2, i32 0, i64 2
  store double %66, ptr %67, align 8, !tbaa !8
  %68 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 2
  %69 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 2
  %70 = load double, ptr %68, align 8, !tbaa !8
  store double %70, ptr %69, align 8, !tbaa !8
  %71 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 2, i32 0, i64 0, i32 0, i64 1
  %72 = load double, ptr %71, align 8, !tbaa !8
  %73 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 2, i32 0, i64 0, i32 0, i64 1
  store double %72, ptr %73, align 8, !tbaa !8
  %74 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 2, i32 0, i64 0, i32 0, i64 2
  %75 = load double, ptr %74, align 8, !tbaa !8
  %76 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 2, i32 0, i64 0, i32 0, i64 2
  store double %75, ptr %76, align 8, !tbaa !8
  %77 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 2, i32 0, i64 1
  %78 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 2, i32 0, i64 1
  %79 = load double, ptr %77, align 8, !tbaa !8
  store double %79, ptr %78, align 8, !tbaa !8
  %80 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 2, i32 0, i64 1, i32 0, i64 1
  %81 = load double, ptr %80, align 8, !tbaa !8
  %82 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 2, i32 0, i64 1, i32 0, i64 1
  store double %81, ptr %82, align 8, !tbaa !8
  %83 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 2, i32 0, i64 1, i32 0, i64 2
  %84 = load double, ptr %83, align 8, !tbaa !8
  %85 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 2, i32 0, i64 1, i32 0, i64 2
  store double %84, ptr %85, align 8, !tbaa !8
  %86 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 2, i32 0, i64 2
  %87 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 2, i32 0, i64 2
  %88 = load double, ptr %86, align 8, !tbaa !8
  store double %88, ptr %87, align 8, !tbaa !8
  %89 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 2, i32 0, i64 2, i32 0, i64 1
  %90 = load double, ptr %89, align 8, !tbaa !8
  %91 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 2, i32 0, i64 2, i32 0, i64 1
  store double %90, ptr %91, align 8, !tbaa !8
  %92 = getelementptr %"class.dealii::Tensor.85", ptr %13, i64 -1, i32 0, i64 2, i32 0, i64 2, i32 0, i64 2
  %93 = load double, ptr %92, align 8, !tbaa !8
  %94 = getelementptr %"class.dealii::Tensor.85", ptr %12, i64 -1, i32 0, i64 2, i32 0, i64 2, i32 0, i64 2
  store double %93, ptr %94, align 8, !tbaa !8
  %95 = add nsw i64 %11, -1
  %96 = icmp ugt i64 %11, 1
  br i1 %96, label %10, label %97

97:                                               ; preds = %10, %3
  %98 = phi ptr [ %2, %3 ], [ %15, %10 ]
  ret ptr %98
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZSt18__do_uninit_fill_nIPN6dealii6TensorILi3ELi3EEEmS2_ET_S4_T0_RKT1_(ptr noundef %0, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(216) %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %91, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 1
  %7 = getelementptr inbounds [3 x double], ptr %2, i64 0, i64 2
  %8 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %2, i64 0, i64 1
  %9 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %2, i64 0, i64 1, i32 0, i64 1
  %10 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %2, i64 0, i64 1, i32 0, i64 2
  %11 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %2, i64 0, i64 2
  %12 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %2, i64 0, i64 2, i32 0, i64 1
  %13 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %2, i64 0, i64 2, i32 0, i64 2
  %14 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 1
  %15 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 1, i32 0, i64 0, i32 0, i64 1
  %16 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 1, i32 0, i64 0, i32 0, i64 2
  %17 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 1, i32 0, i64 1
  %18 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 1, i32 0, i64 1, i32 0, i64 1
  %19 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 1, i32 0, i64 1, i32 0, i64 2
  %20 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 1, i32 0, i64 2
  %21 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 1, i32 0, i64 2, i32 0, i64 1
  %22 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 1, i32 0, i64 2, i32 0, i64 2
  %23 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 2
  %24 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 2, i32 0, i64 0, i32 0, i64 1
  %25 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 2, i32 0, i64 0, i32 0, i64 2
  %26 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 2, i32 0, i64 1
  %27 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 2, i32 0, i64 1, i32 0, i64 1
  %28 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 2, i32 0, i64 1, i32 0, i64 2
  %29 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 2, i32 0, i64 2
  %30 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 2, i32 0, i64 2, i32 0, i64 1
  %31 = getelementptr inbounds [3 x %"class.dealii::Tensor.84"], ptr %2, i64 0, i64 2, i32 0, i64 2, i32 0, i64 2
  br label %32

32:                                               ; preds = %5, %32
  %33 = phi ptr [ %0, %5 ], [ %89, %32 ]
  %34 = phi i64 [ %1, %5 ], [ %88, %32 ]
  %35 = load double, ptr %2, align 8, !tbaa !8
  store double %35, ptr %33, align 8, !tbaa !8
  %36 = load double, ptr %6, align 8, !tbaa !8
  %37 = getelementptr inbounds [3 x double], ptr %33, i64 0, i64 1
  store double %36, ptr %37, align 8, !tbaa !8
  %38 = load double, ptr %7, align 8, !tbaa !8
  %39 = getelementptr inbounds [3 x double], ptr %33, i64 0, i64 2
  store double %38, ptr %39, align 8, !tbaa !8
  %40 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 1
  %41 = load double, ptr %8, align 8, !tbaa !8
  store double %41, ptr %40, align 8, !tbaa !8
  %42 = load double, ptr %9, align 8, !tbaa !8
  %43 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 1, i32 0, i64 1
  store double %42, ptr %43, align 8, !tbaa !8
  %44 = load double, ptr %10, align 8, !tbaa !8
  %45 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 1, i32 0, i64 2
  store double %44, ptr %45, align 8, !tbaa !8
  %46 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 2
  %47 = load double, ptr %11, align 8, !tbaa !8
  store double %47, ptr %46, align 8, !tbaa !8
  %48 = load double, ptr %12, align 8, !tbaa !8
  %49 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 2, i32 0, i64 1
  store double %48, ptr %49, align 8, !tbaa !8
  %50 = load double, ptr %13, align 8, !tbaa !8
  %51 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 2, i32 0, i64 2
  store double %50, ptr %51, align 8, !tbaa !8
  %52 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 1
  %53 = load double, ptr %14, align 8, !tbaa !8
  store double %53, ptr %52, align 8, !tbaa !8
  %54 = load double, ptr %15, align 8, !tbaa !8
  %55 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 1, i32 0, i64 0, i32 0, i64 1
  store double %54, ptr %55, align 8, !tbaa !8
  %56 = load double, ptr %16, align 8, !tbaa !8
  %57 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 1, i32 0, i64 0, i32 0, i64 2
  store double %56, ptr %57, align 8, !tbaa !8
  %58 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 1, i32 0, i64 1
  %59 = load double, ptr %17, align 8, !tbaa !8
  store double %59, ptr %58, align 8, !tbaa !8
  %60 = load double, ptr %18, align 8, !tbaa !8
  %61 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 1, i32 0, i64 1, i32 0, i64 1
  store double %60, ptr %61, align 8, !tbaa !8
  %62 = load double, ptr %19, align 8, !tbaa !8
  %63 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 1, i32 0, i64 1, i32 0, i64 2
  store double %62, ptr %63, align 8, !tbaa !8
  %64 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 1, i32 0, i64 2
  %65 = load double, ptr %20, align 8, !tbaa !8
  store double %65, ptr %64, align 8, !tbaa !8
  %66 = load double, ptr %21, align 8, !tbaa !8
  %67 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 1, i32 0, i64 2, i32 0, i64 1
  store double %66, ptr %67, align 8, !tbaa !8
  %68 = load double, ptr %22, align 8, !tbaa !8
  %69 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 1, i32 0, i64 2, i32 0, i64 2
  store double %68, ptr %69, align 8, !tbaa !8
  %70 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 2
  %71 = load double, ptr %23, align 8, !tbaa !8
  store double %71, ptr %70, align 8, !tbaa !8
  %72 = load double, ptr %24, align 8, !tbaa !8
  %73 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 2, i32 0, i64 0, i32 0, i64 1
  store double %72, ptr %73, align 8, !tbaa !8
  %74 = load double, ptr %25, align 8, !tbaa !8
  %75 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 2, i32 0, i64 0, i32 0, i64 2
  store double %74, ptr %75, align 8, !tbaa !8
  %76 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 2, i32 0, i64 1
  %77 = load double, ptr %26, align 8, !tbaa !8
  store double %77, ptr %76, align 8, !tbaa !8
  %78 = load double, ptr %27, align 8, !tbaa !8
  %79 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 2, i32 0, i64 1, i32 0, i64 1
  store double %78, ptr %79, align 8, !tbaa !8
  %80 = load double, ptr %28, align 8, !tbaa !8
  %81 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 2, i32 0, i64 1, i32 0, i64 2
  store double %80, ptr %81, align 8, !tbaa !8
  %82 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 2, i32 0, i64 2
  %83 = load double, ptr %29, align 8, !tbaa !8
  store double %83, ptr %82, align 8, !tbaa !8
  %84 = load double, ptr %30, align 8, !tbaa !8
  %85 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 2, i32 0, i64 2, i32 0, i64 1
  store double %84, ptr %85, align 8, !tbaa !8
  %86 = load double, ptr %31, align 8, !tbaa !8
  %87 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 2, i32 0, i64 2, i32 0, i64 2
  store double %86, ptr %87, align 8, !tbaa !8
  %88 = add i64 %34, -1
  %89 = getelementptr inbounds %"class.dealii::Tensor.85", ptr %33, i64 1
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %91, label %32

91:                                               ; preds = %32, %3
  %92 = phi ptr [ %0, %3 ], [ %89, %32 ]
  ret ptr %92
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IN6dealii6TensorILi1ELi3EEESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.std::vector.67", align 8
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %204, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<dealii::Tensor<1, 3> >, std::allocator<std::vector<dealii::Tensor<1, 3> > > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !691
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<dealii::Tensor<1, 3> >, std::allocator<std::vector<dealii::Tensor<1, 3> > > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !33
  %12 = ptrtoint ptr %9 to i64
  %13 = ptrtoint ptr %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 24
  %16 = icmp ult i64 %15, %2
  br i1 %16, label %122, label %17

17:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  %18 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !33
  %20 = load ptr, ptr %3, align 8, !tbaa !33
  %21 = ptrtoint ptr %19 to i64
  %22 = ptrtoint ptr %20 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 24
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  %25 = icmp eq ptr %19, %20
  br i1 %25, label %26, label %30

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %5, i64 0, i32 1
  %28 = getelementptr inbounds %"class.dealii::Tensor", ptr null, i64 %24
  %29 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %5, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, i8 0, i64 16, i1 false)
  store ptr %28, ptr %29, align 8, !tbaa !173
  br label %51

30:                                               ; preds = %17
  %31 = icmp ugt i64 %24, 384307168202282325
  br i1 %31, label %32, label %33, !prof !692

32:                                               ; preds = %30
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #18
  unreachable

33:                                               ; preds = %30
  %34 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %23) #16
  store ptr %34, ptr %5, align 8, !tbaa !25
  %35 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %5, i64 0, i32 1
  store ptr %34, ptr %35, align 8, !tbaa !23
  %36 = getelementptr inbounds %"class.dealii::Tensor", ptr %34, i64 %24
  %37 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %5, i64 0, i32 2
  store ptr %36, ptr %37, align 8, !tbaa !173
  br label %38

38:                                               ; preds = %33, %38
  %39 = phi ptr [ %49, %38 ], [ %34, %33 ]
  %40 = phi ptr [ %48, %38 ], [ %20, %33 ]
  %41 = load double, ptr %40, align 8, !tbaa !8
  store double %41, ptr %39, align 8, !tbaa !8
  %42 = getelementptr inbounds [3 x double], ptr %40, i64 0, i64 1
  %43 = load double, ptr %42, align 8, !tbaa !8
  %44 = getelementptr inbounds [3 x double], ptr %39, i64 0, i64 1
  store double %43, ptr %44, align 8, !tbaa !8
  %45 = getelementptr inbounds [3 x double], ptr %40, i64 0, i64 2
  %46 = load double, ptr %45, align 8, !tbaa !8
  %47 = getelementptr inbounds [3 x double], ptr %39, i64 0, i64 2
  store double %46, ptr %47, align 8, !tbaa !8
  %48 = getelementptr inbounds %"class.dealii::Tensor", ptr %40, i64 1
  %49 = getelementptr inbounds %"class.dealii::Tensor", ptr %39, i64 1
  %50 = icmp eq ptr %48, %19
  br i1 %50, label %51, label %38

51:                                               ; preds = %38, %26
  %52 = phi ptr [ %27, %26 ], [ %35, %38 ]
  %53 = phi ptr [ null, %26 ], [ %49, %38 ]
  store ptr %53, ptr %52, align 8, !tbaa !23
  %54 = ptrtoint ptr %1 to i64
  %55 = sub i64 %13, %54
  %56 = sdiv exact i64 %55, 24
  %57 = icmp ugt i64 %56, %2
  br i1 %57, label %58, label %100

58:                                               ; preds = %51
  %59 = sub i64 0, %2
  %60 = getelementptr inbounds %"class.std::vector.67", ptr %11, i64 %59
  %61 = invoke noundef ptr @_ZSt16__do_uninit_copyIPSt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EES6_ET0_T_S8_S7_(ptr noundef nonnull %60, ptr noundef %11, ptr noundef %11)
          to label %62 unwind label %94

62:                                               ; preds = %58
  %63 = load ptr, ptr %10, align 8, !tbaa !132
  %64 = getelementptr inbounds %"class.std::vector.67", ptr %63, i64 %2
  store ptr %64, ptr %10, align 8, !tbaa !132
  %65 = ptrtoint ptr %60 to i64
  %66 = sub i64 %65, %54
  %67 = icmp sgt i64 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %62
  %69 = udiv exact i64 %66, 24
  br label %70

70:                                               ; preds = %77, %68
  %71 = phi i64 [ %78, %77 ], [ %69, %68 ]
  %72 = phi ptr [ %75, %77 ], [ %11, %68 ]
  %73 = phi ptr [ %74, %77 ], [ %60, %68 ]
  %74 = getelementptr inbounds %"class.std::vector.67", ptr %73, i64 -1
  %75 = getelementptr inbounds %"class.std::vector.67", ptr %72, i64 -1
  %76 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %75, ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %77 unwind label %90

77:                                               ; preds = %70
  %78 = add nsw i64 %71, -1
  %79 = icmp ugt i64 %71, 1
  br i1 %79, label %70, label %80

80:                                               ; preds = %77, %62
  %81 = getelementptr inbounds %"class.std::vector.67", ptr %1, i64 %2
  br label %82

82:                                               ; preds = %80, %85
  %83 = phi ptr [ %86, %85 ], [ %1, %80 ]
  %84 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %83, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %85 unwind label %88

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.std::vector.67", ptr %83, i64 1
  %87 = icmp eq ptr %86, %81
  br i1 %87, label %115, label %82

88:                                               ; preds = %82
  %89 = landingpad { ptr, i32 }
          cleanup
  br label %96

90:                                               ; preds = %70
  %91 = landingpad { ptr, i32 }
          cleanup
  br label %96

92:                                               ; preds = %109
  %93 = landingpad { ptr, i32 }
          cleanup
  br label %96

94:                                               ; preds = %58, %100, %103
  %95 = landingpad { ptr, i32 }
          cleanup
  br label %96

96:                                               ; preds = %90, %94, %92, %88
  %97 = phi { ptr, i32 } [ %89, %88 ], [ %91, %90 ], [ %93, %92 ], [ %95, %94 ]
  %98 = load ptr, ptr %5, align 8, !tbaa !25
  %99 = icmp eq ptr %98, null
  br i1 %99, label %121, label %120

100:                                              ; preds = %51
  %101 = sub i64 %2, %56
  %102 = invoke noundef ptr @_ZSt18__do_uninit_fill_nIPSt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EEmS5_ET_S7_T0_RKT1_(ptr noundef %11, i64 noundef %101, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %103 unwind label %94

103:                                              ; preds = %100
  store ptr %102, ptr %10, align 8, !tbaa !132
  %104 = invoke noundef ptr @_ZSt16__do_uninit_copyIPSt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EES6_ET0_T_S8_S7_(ptr noundef %1, ptr noundef %11, ptr noundef %102)
          to label %105 unwind label %94

105:                                              ; preds = %103
  %106 = load ptr, ptr %10, align 8, !tbaa !132
  %107 = getelementptr inbounds %"class.std::vector.67", ptr %106, i64 %56
  store ptr %107, ptr %10, align 8, !tbaa !132
  %108 = icmp eq ptr %11, %1
  br i1 %108, label %115, label %109

109:                                              ; preds = %105, %112
  %110 = phi ptr [ %113, %112 ], [ %1, %105 ]
  %111 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %110, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %112 unwind label %92

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.std::vector.67", ptr %110, i64 1
  %114 = icmp eq ptr %113, %11
  br i1 %114, label %115, label %109

115:                                              ; preds = %112, %85, %105
  %116 = load ptr, ptr %5, align 8, !tbaa !25
  %117 = icmp eq ptr %116, null
  br i1 %117, label %119, label %118

118:                                              ; preds = %115
  call void @_ZdlPv(ptr noundef nonnull %116) #17
  br label %119

119:                                              ; preds = %115, %118
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  br label %204

120:                                              ; preds = %96
  call void @_ZdlPv(ptr noundef nonnull %98) #17
  br label %121

121:                                              ; preds = %120, %96
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  br label %205

122:                                              ; preds = %7
  %123 = load ptr, ptr %0, align 8, !tbaa !130
  %124 = ptrtoint ptr %123 to i64
  %125 = sub i64 %13, %124
  %126 = sdiv exact i64 %125, 24
  %127 = sub nsw i64 384307168202282325, %126
  %128 = icmp ult i64 %127, %2
  br i1 %128, label %129, label %130

129:                                              ; preds = %122
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.9) #18
  unreachable

130:                                              ; preds = %122
  %131 = tail call i64 @llvm.umax.i64(i64 %126, i64 %2)
  %132 = add i64 %131, %126
  %133 = icmp ult i64 %132, %126
  %134 = icmp ugt i64 %132, 384307168202282325
  %135 = or i1 %133, %134
  %136 = select i1 %135, i64 384307168202282325, i64 %132
  %137 = ptrtoint ptr %1 to i64
  %138 = sub i64 %137, %124
  %139 = sdiv exact i64 %138, 24
  %140 = icmp eq i64 %136, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %130
  %142 = mul nuw nsw i64 %136, 24
  %143 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %142) #16
  br label %144

144:                                              ; preds = %130, %141
  %145 = phi ptr [ %143, %141 ], [ null, %130 ]
  %146 = getelementptr inbounds %"class.std::vector.67", ptr %145, i64 %139
  %147 = invoke noundef ptr @_ZSt18__do_uninit_fill_nIPSt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EEmS5_ET_S7_T0_RKT1_(ptr noundef %146, i64 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3)
          to label %148 unwind label %172

148:                                              ; preds = %144
  %149 = invoke noundef ptr @_ZSt16__do_uninit_copyIPSt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EES6_ET0_T_S8_S7_(ptr noundef %123, ptr noundef %1, ptr noundef %145)
          to label %154 unwind label %150

150:                                              ; preds = %148
  %151 = landingpad { ptr, i32 }
          catch ptr null
  %152 = extractvalue { ptr, i32 } %151, 0
  %153 = tail call ptr @__cxa_begin_catch(ptr %152) #15
  br label %178

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.std::vector.67", ptr %149, i64 %2
  %156 = invoke noundef ptr @_ZSt16__do_uninit_copyIPSt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EES6_ET0_T_S8_S7_(ptr noundef %1, ptr noundef %11, ptr noundef nonnull %155)
          to label %157 unwind label %172

157:                                              ; preds = %154
  %158 = icmp eq ptr %123, %11
  br i1 %158, label %167, label %159

159:                                              ; preds = %157, %164
  %160 = phi ptr [ %165, %164 ], [ %123, %157 ]
  %161 = load ptr, ptr %160, align 8, !tbaa !25
  %162 = icmp eq ptr %161, null
  br i1 %162, label %164, label %163

163:                                              ; preds = %159
  tail call void @_ZdlPv(ptr noundef nonnull %161) #17
  br label %164

164:                                              ; preds = %163, %159
  %165 = getelementptr inbounds %"class.std::vector.67", ptr %160, i64 1
  %166 = icmp eq ptr %165, %11
  br i1 %166, label %167, label %159

167:                                              ; preds = %164, %157
  %168 = icmp eq ptr %123, null
  br i1 %168, label %170, label %169

169:                                              ; preds = %167
  tail call void @_ZdlPv(ptr noundef nonnull %123) #17
  br label %170

170:                                              ; preds = %167, %169
  store ptr %145, ptr %0, align 8, !tbaa !130
  store ptr %156, ptr %10, align 8, !tbaa !132
  %171 = getelementptr inbounds %"class.std::vector.67", ptr %145, i64 %136
  store ptr %171, ptr %8, align 8, !tbaa !691
  br label %204

172:                                              ; preds = %154, %144
  %173 = phi ptr [ %145, %144 ], [ %155, %154 ]
  %174 = landingpad { ptr, i32 }
          catch ptr null
  %175 = extractvalue { ptr, i32 } %174, 0
  %176 = tail call ptr @__cxa_begin_catch(ptr %175) #15
  %177 = icmp eq ptr %173, null
  br i1 %177, label %178, label %190

178:                                              ; preds = %150, %172
  %179 = getelementptr inbounds %"class.std::vector.67", ptr %146, i64 %2
  br label %180

180:                                              ; preds = %178, %185
  %181 = phi ptr [ %186, %185 ], [ %146, %178 ]
  %182 = load ptr, ptr %181, align 8, !tbaa !25
  %183 = icmp eq ptr %182, null
  br i1 %183, label %185, label %184

184:                                              ; preds = %180
  tail call void @_ZdlPv(ptr noundef nonnull %182) #17
  br label %185

185:                                              ; preds = %184, %180
  %186 = getelementptr inbounds %"class.std::vector.67", ptr %181, i64 1
  %187 = icmp eq ptr %186, %179
  br i1 %187, label %200, label %180

188:                                              ; preds = %203
  %189 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %205 unwind label %207

190:                                              ; preds = %172
  %191 = icmp eq ptr %145, %173
  br i1 %191, label %200, label %192

192:                                              ; preds = %190, %197
  %193 = phi ptr [ %198, %197 ], [ %145, %190 ]
  %194 = load ptr, ptr %193, align 8, !tbaa !25
  %195 = icmp eq ptr %194, null
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  tail call void @_ZdlPv(ptr noundef nonnull %194) #17
  br label %197

197:                                              ; preds = %196, %192
  %198 = getelementptr inbounds %"class.std::vector.67", ptr %193, i64 1
  %199 = icmp eq ptr %198, %173
  br i1 %199, label %200, label %192

200:                                              ; preds = %197, %185, %190
  %201 = icmp eq ptr %145, null
  br i1 %201, label %203, label %202

202:                                              ; preds = %200
  tail call void @_ZdlPv(ptr noundef nonnull %145) #17
  br label %203

203:                                              ; preds = %202, %200
  invoke void @__cxa_rethrow() #18
          to label %210 unwind label %188

204:                                              ; preds = %119, %170, %4
  ret void

205:                                              ; preds = %188, %121
  %206 = phi { ptr, i32 } [ %97, %121 ], [ %189, %188 ]
  resume { ptr, i32 } %206

207:                                              ; preds = %188
  %208 = landingpad { ptr, i32 }
          catch ptr null
  %209 = extractvalue { ptr, i32 } %208, 0
  tail call void @__clang_call_terminate(ptr %209) #14
  unreachable

210:                                              ; preds = %203
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZSt16__do_uninit_copyIPSt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EES6_ET0_T_S8_S7_(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %4 = icmp eq ptr %0, %1
  br i1 %4, label %66, label %5

5:                                                ; preds = %3, %43
  %6 = phi ptr [ %46, %43 ], [ %2, %3 ]
  %7 = phi ptr [ %45, %43 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !23
  %10 = load ptr, ptr %7, align 8, !tbaa !25
  %11 = ptrtoint ptr %9 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  %15 = icmp eq ptr %9, %10
  br i1 %15, label %22, label %16

16:                                               ; preds = %5
  %17 = icmp ugt i64 %14, 384307168202282325
  br i1 %17, label %18, label %20, !prof !692

18:                                               ; preds = %16
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #18
          to label %19 unwind label %50

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %16
  %21 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %13) #16
          to label %22 unwind label %48

22:                                               ; preds = %20, %5
  %23 = phi ptr [ null, %5 ], [ %21, %20 ]
  store ptr %23, ptr %6, align 8, !tbaa !25
  %24 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %6, i64 0, i32 1
  store ptr %23, ptr %24, align 8, !tbaa !23
  %25 = getelementptr inbounds %"class.dealii::Tensor", ptr %23, i64 %14
  %26 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %6, i64 0, i32 2
  store ptr %25, ptr %26, align 8, !tbaa !173
  %27 = load ptr, ptr %7, align 8, !tbaa !33
  %28 = load ptr, ptr %8, align 8, !tbaa !33
  %29 = icmp eq ptr %27, %28
  br i1 %29, label %43, label %30

30:                                               ; preds = %22, %30
  %31 = phi ptr [ %41, %30 ], [ %23, %22 ]
  %32 = phi ptr [ %40, %30 ], [ %27, %22 ]
  %33 = load double, ptr %32, align 8, !tbaa !8
  store double %33, ptr %31, align 8, !tbaa !8
  %34 = getelementptr inbounds [3 x double], ptr %32, i64 0, i64 1
  %35 = load double, ptr %34, align 8, !tbaa !8
  %36 = getelementptr inbounds [3 x double], ptr %31, i64 0, i64 1
  store double %35, ptr %36, align 8, !tbaa !8
  %37 = getelementptr inbounds [3 x double], ptr %32, i64 0, i64 2
  %38 = load double, ptr %37, align 8, !tbaa !8
  %39 = getelementptr inbounds [3 x double], ptr %31, i64 0, i64 2
  store double %38, ptr %39, align 8, !tbaa !8
  %40 = getelementptr inbounds %"class.dealii::Tensor", ptr %32, i64 1
  %41 = getelementptr inbounds %"class.dealii::Tensor", ptr %31, i64 1
  %42 = icmp eq ptr %40, %28
  br i1 %42, label %43, label %30

43:                                               ; preds = %30, %22
  %44 = phi ptr [ %23, %22 ], [ %41, %30 ]
  store ptr %44, ptr %24, align 8, !tbaa !23
  %45 = getelementptr inbounds %"class.std::vector.67", ptr %7, i64 1
  %46 = getelementptr inbounds %"class.std::vector.67", ptr %6, i64 1
  %47 = icmp eq ptr %45, %1
  br i1 %47, label %66, label %5

48:                                               ; preds = %20
  %49 = landingpad { ptr, i32 }
          catch ptr null
  br label %52

50:                                               ; preds = %18
  %51 = landingpad { ptr, i32 }
          catch ptr null
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi { ptr, i32 } [ %49, %48 ], [ %51, %50 ]
  %54 = extractvalue { ptr, i32 } %53, 0
  %55 = tail call ptr @__cxa_begin_catch(ptr %54) #15
  %56 = icmp eq ptr %6, %2
  br i1 %56, label %65, label %57

57:                                               ; preds = %52, %62
  %58 = phi ptr [ %63, %62 ], [ %2, %52 ]
  %59 = load ptr, ptr %58, align 8, !tbaa !25
  %60 = icmp eq ptr %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %57
  tail call void @_ZdlPv(ptr noundef nonnull %59) #17
  br label %62

62:                                               ; preds = %61, %57
  %63 = getelementptr inbounds %"class.std::vector.67", ptr %58, i64 1
  %64 = icmp eq ptr %63, %6
  br i1 %64, label %65, label %57

65:                                               ; preds = %62, %52
  invoke void @__cxa_rethrow() #18
          to label %74 unwind label %68

66:                                               ; preds = %43, %3
  %67 = phi ptr [ %2, %3 ], [ %46, %43 ]
  ret ptr %67

68:                                               ; preds = %65
  %69 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %70 unwind label %71

70:                                               ; preds = %68
  resume { ptr, i32 } %69

71:                                               ; preds = %68
  %72 = landingpad { ptr, i32 }
          catch ptr null
  %73 = extractvalue { ptr, i32 } %72, 0
  tail call void @__clang_call_terminate(ptr %73) #14
  unreachable

74:                                               ; preds = %65
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, %0
  br i1 %3, label %109, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !33
  %7 = load ptr, ptr %1, align 8, !tbaa !33
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = sdiv exact i64 %10, 24
  %12 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !173
  %14 = load ptr, ptr %0, align 8, !tbaa !33
  %15 = ptrtoint ptr %13 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = sdiv exact i64 %17, 24
  %19 = icmp ugt i64 %11, %18
  br i1 %19, label %20, label %44

20:                                               ; preds = %4
  %21 = icmp ugt i64 %11, 384307168202282325
  br i1 %21, label %22, label %23, !prof !692

22:                                               ; preds = %20
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #18
  unreachable

23:                                               ; preds = %20
  %24 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #16
  %25 = icmp eq ptr %7, %6
  br i1 %25, label %39, label %26

26:                                               ; preds = %23, %26
  %27 = phi ptr [ %37, %26 ], [ %24, %23 ]
  %28 = phi ptr [ %36, %26 ], [ %7, %23 ]
  %29 = load double, ptr %28, align 8, !tbaa !8
  store double %29, ptr %27, align 8, !tbaa !8
  %30 = getelementptr inbounds [3 x double], ptr %28, i64 0, i64 1
  %31 = load double, ptr %30, align 8, !tbaa !8
  %32 = getelementptr inbounds [3 x double], ptr %27, i64 0, i64 1
  store double %31, ptr %32, align 8, !tbaa !8
  %33 = getelementptr inbounds [3 x double], ptr %28, i64 0, i64 2
  %34 = load double, ptr %33, align 8, !tbaa !8
  %35 = getelementptr inbounds [3 x double], ptr %27, i64 0, i64 2
  store double %34, ptr %35, align 8, !tbaa !8
  %36 = getelementptr inbounds %"class.dealii::Tensor", ptr %28, i64 1
  %37 = getelementptr inbounds %"class.dealii::Tensor", ptr %27, i64 1
  %38 = icmp eq ptr %36, %6
  br i1 %38, label %39, label %26

39:                                               ; preds = %26, %23
  %40 = icmp eq ptr %14, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %39
  tail call void @_ZdlPv(ptr noundef nonnull %14) #17
  br label %42

42:                                               ; preds = %39, %41
  store ptr %24, ptr %0, align 8, !tbaa !25
  %43 = getelementptr inbounds %"class.dealii::Tensor", ptr %24, i64 %11
  store ptr %43, ptr %12, align 8, !tbaa !173
  br label %105

44:                                               ; preds = %4
  %45 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !23
  %47 = ptrtoint ptr %46 to i64
  %48 = sub i64 %47, %16
  %49 = sdiv exact i64 %48, 24
  %50 = icmp ult i64 %49, %11
  br i1 %50, label %70, label %51

51:                                               ; preds = %44
  %52 = icmp sgt i64 %10, 0
  br i1 %52, label %53, label %105

53:                                               ; preds = %51
  %54 = udiv exact i64 %10, 24
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ %68, %55 ], [ %54, %53 ]
  %57 = phi ptr [ %67, %55 ], [ %14, %53 ]
  %58 = phi ptr [ %66, %55 ], [ %7, %53 ]
  %59 = load double, ptr %58, align 8, !tbaa !8
  store double %59, ptr %57, align 8, !tbaa !8
  %60 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 1
  %61 = load double, ptr %60, align 8, !tbaa !8
  %62 = getelementptr inbounds [3 x double], ptr %57, i64 0, i64 1
  store double %61, ptr %62, align 8, !tbaa !8
  %63 = getelementptr inbounds [3 x double], ptr %58, i64 0, i64 2
  %64 = load double, ptr %63, align 8, !tbaa !8
  %65 = getelementptr inbounds [3 x double], ptr %57, i64 0, i64 2
  store double %64, ptr %65, align 8, !tbaa !8
  %66 = getelementptr inbounds %"class.dealii::Tensor", ptr %58, i64 1
  %67 = getelementptr inbounds %"class.dealii::Tensor", ptr %57, i64 1
  %68 = add nsw i64 %56, -1
  %69 = icmp ugt i64 %56, 1
  br i1 %69, label %55, label %105

70:                                               ; preds = %44
  %71 = getelementptr inbounds %"class.dealii::Tensor", ptr %7, i64 %49
  %72 = icmp sgt i64 %48, 0
  br i1 %72, label %73, label %90

73:                                               ; preds = %70
  %74 = udiv exact i64 %48, 24
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ %88, %75 ], [ %74, %73 ]
  %77 = phi ptr [ %87, %75 ], [ %14, %73 ]
  %78 = phi ptr [ %86, %75 ], [ %7, %73 ]
  %79 = load double, ptr %78, align 8, !tbaa !8
  store double %79, ptr %77, align 8, !tbaa !8
  %80 = getelementptr inbounds [3 x double], ptr %78, i64 0, i64 1
  %81 = load double, ptr %80, align 8, !tbaa !8
  %82 = getelementptr inbounds [3 x double], ptr %77, i64 0, i64 1
  store double %81, ptr %82, align 8, !tbaa !8
  %83 = getelementptr inbounds [3 x double], ptr %78, i64 0, i64 2
  %84 = load double, ptr %83, align 8, !tbaa !8
  %85 = getelementptr inbounds [3 x double], ptr %77, i64 0, i64 2
  store double %84, ptr %85, align 8, !tbaa !8
  %86 = getelementptr inbounds %"class.dealii::Tensor", ptr %78, i64 1
  %87 = getelementptr inbounds %"class.dealii::Tensor", ptr %77, i64 1
  %88 = add nsw i64 %76, -1
  %89 = icmp ugt i64 %76, 1
  br i1 %89, label %75, label %90

90:                                               ; preds = %75, %70
  %91 = icmp eq ptr %71, %6
  br i1 %91, label %105, label %92

92:                                               ; preds = %90, %92
  %93 = phi ptr [ %103, %92 ], [ %46, %90 ]
  %94 = phi ptr [ %102, %92 ], [ %71, %90 ]
  %95 = load double, ptr %94, align 8, !tbaa !8
  store double %95, ptr %93, align 8, !tbaa !8
  %96 = getelementptr inbounds [3 x double], ptr %94, i64 0, i64 1
  %97 = load double, ptr %96, align 8, !tbaa !8
  %98 = getelementptr inbounds [3 x double], ptr %93, i64 0, i64 1
  store double %97, ptr %98, align 8, !tbaa !8
  %99 = getelementptr inbounds [3 x double], ptr %94, i64 0, i64 2
  %100 = load double, ptr %99, align 8, !tbaa !8
  %101 = getelementptr inbounds [3 x double], ptr %93, i64 0, i64 2
  store double %100, ptr %101, align 8, !tbaa !8
  %102 = getelementptr inbounds %"class.dealii::Tensor", ptr %94, i64 1
  %103 = getelementptr inbounds %"class.dealii::Tensor", ptr %93, i64 1
  %104 = icmp eq ptr %102, %6
  br i1 %104, label %105, label %92

105:                                              ; preds = %55, %92, %51, %90, %42
  %106 = load ptr, ptr %0, align 8, !tbaa !25
  %107 = getelementptr inbounds %"class.dealii::Tensor", ptr %106, i64 %11
  %108 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %107, ptr %108, align 8, !tbaa !23
  br label %109

109:                                              ; preds = %105, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZSt18__do_uninit_fill_nIPSt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EEmS5_ET_S7_T0_RKT1_(ptr noundef %0, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %68, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %2, i64 0, i32 1
  %7 = load ptr, ptr %2, align 8, !tbaa !25
  br label %8

8:                                                ; preds = %5, %45
  %9 = phi ptr [ %7, %5 ], [ %29, %45 ]
  %10 = phi ptr [ %0, %5 ], [ %48, %45 ]
  %11 = phi i64 [ %1, %5 ], [ %47, %45 ]
  %12 = load ptr, ptr %6, align 8, !tbaa !23
  %13 = ptrtoint ptr %12 to i64
  %14 = ptrtoint ptr %9 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false)
  %17 = icmp eq ptr %12, %9
  br i1 %17, label %24, label %18

18:                                               ; preds = %8
  %19 = icmp ugt i64 %16, 384307168202282325
  br i1 %19, label %20, label %22, !prof !692

20:                                               ; preds = %18
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #18
          to label %21 unwind label %52

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %15) #16
          to label %24 unwind label %50

24:                                               ; preds = %22, %8
  %25 = phi ptr [ null, %8 ], [ %23, %22 ]
  store ptr %25, ptr %10, align 8, !tbaa !25
  %26 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %10, i64 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !23
  %27 = getelementptr inbounds %"class.dealii::Tensor", ptr %25, i64 %16
  %28 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data", ptr %10, i64 0, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !173
  %29 = load ptr, ptr %2, align 8, !tbaa !33
  %30 = load ptr, ptr %6, align 8, !tbaa !33
  %31 = icmp eq ptr %29, %30
  br i1 %31, label %45, label %32

32:                                               ; preds = %24, %32
  %33 = phi ptr [ %43, %32 ], [ %25, %24 ]
  %34 = phi ptr [ %42, %32 ], [ %29, %24 ]
  %35 = load double, ptr %34, align 8, !tbaa !8
  store double %35, ptr %33, align 8, !tbaa !8
  %36 = getelementptr inbounds [3 x double], ptr %34, i64 0, i64 1
  %37 = load double, ptr %36, align 8, !tbaa !8
  %38 = getelementptr inbounds [3 x double], ptr %33, i64 0, i64 1
  store double %37, ptr %38, align 8, !tbaa !8
  %39 = getelementptr inbounds [3 x double], ptr %34, i64 0, i64 2
  %40 = load double, ptr %39, align 8, !tbaa !8
  %41 = getelementptr inbounds [3 x double], ptr %33, i64 0, i64 2
  store double %40, ptr %41, align 8, !tbaa !8
  %42 = getelementptr inbounds %"class.dealii::Tensor", ptr %34, i64 1
  %43 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 1
  %44 = icmp eq ptr %42, %30
  br i1 %44, label %45, label %32

45:                                               ; preds = %32, %24
  %46 = phi ptr [ %25, %24 ], [ %43, %32 ]
  store ptr %46, ptr %26, align 8, !tbaa !23
  %47 = add i64 %11, -1
  %48 = getelementptr inbounds %"class.std::vector.67", ptr %10, i64 1
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %68, label %8

50:                                               ; preds = %22
  %51 = landingpad { ptr, i32 }
          catch ptr null
  br label %54

52:                                               ; preds = %20
  %53 = landingpad { ptr, i32 }
          catch ptr null
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi { ptr, i32 } [ %51, %50 ], [ %53, %52 ]
  %56 = extractvalue { ptr, i32 } %55, 0
  %57 = tail call ptr @__cxa_begin_catch(ptr %56) #15
  %58 = icmp eq ptr %10, %0
  br i1 %58, label %67, label %59

59:                                               ; preds = %54, %64
  %60 = phi ptr [ %65, %64 ], [ %0, %54 ]
  %61 = load ptr, ptr %60, align 8, !tbaa !25
  %62 = icmp eq ptr %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  tail call void @_ZdlPv(ptr noundef nonnull %61) #17
  br label %64

64:                                               ; preds = %63, %59
  %65 = getelementptr inbounds %"class.std::vector.67", ptr %60, i64 1
  %66 = icmp eq ptr %65, %10
  br i1 %66, label %67, label %59

67:                                               ; preds = %64, %54
  invoke void @__cxa_rethrow() #18
          to label %76 unwind label %70

68:                                               ; preds = %45, %3
  %69 = phi ptr [ %0, %3 ], [ %48, %45 ]
  ret ptr %69

70:                                               ; preds = %67
  %71 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %72 unwind label %73

72:                                               ; preds = %70
  resume { ptr, i32 } %71

73:                                               ; preds = %70
  %74 = landingpad { ptr, i32 }
          catch ptr null
  %75 = extractvalue { ptr, i32 } %74, 0
  tail call void @__clang_call_terminate(ptr %75) #14
  unreachable

76:                                               ; preds = %67
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIS_IN6dealii6TensorILi2ELi3EEESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.std::vector.72", align 8
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %222, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<dealii::Tensor<2, 3> >, std::allocator<std::vector<dealii::Tensor<2, 3> > > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !693
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<dealii::Tensor<2, 3> >, std::allocator<std::vector<dealii::Tensor<2, 3> > > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !33
  %12 = ptrtoint ptr %9 to i64
  %13 = ptrtoint ptr %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 24
  %16 = icmp ult i64 %15, %2
  br i1 %16, label %140, label %17

17:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #15
  %18 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %3, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !33
  %20 = load ptr, ptr %3, align 8, !tbaa !33
  %21 = ptrtoint ptr %19 to i64
  %22 = ptrtoint ptr %20 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 72
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  %25 = icmp eq ptr %19, %20
  br i1 %25, label %26, label %30

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %5, i64 0, i32 1
  %28 = getelementptr inbounds %"class.dealii::Tensor.84", ptr null, i64 %24
  %29 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %5, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, i8 0, i64 16, i1 false)
  store ptr %28, ptr %29, align 8, !tbaa !212
  br label %69

30:                                               ; preds = %17
  %31 = icmp ugt i64 %24, 128102389400760775
  br i1 %31, label %32, label %33, !prof !692

32:                                               ; preds = %30
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #18
  unreachable

33:                                               ; preds = %30
  %34 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %23) #16
  store ptr %34, ptr %5, align 8, !tbaa !51
  %35 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %5, i64 0, i32 1
  store ptr %34, ptr %35, align 8, !tbaa !49
  %36 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %34, i64 %24
  %37 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %5, i64 0, i32 2
  store ptr %36, ptr %37, align 8, !tbaa !212
  br label %38

38:                                               ; preds = %33, %38
  %39 = phi ptr [ %67, %38 ], [ %34, %33 ]
  %40 = phi ptr [ %66, %38 ], [ %20, %33 ]
  %41 = load double, ptr %40, align 8, !tbaa !8
  store double %41, ptr %39, align 8, !tbaa !8
  %42 = getelementptr inbounds [3 x double], ptr %40, i64 0, i64 1
  %43 = load double, ptr %42, align 8, !tbaa !8
  %44 = getelementptr inbounds [3 x double], ptr %39, i64 0, i64 1
  store double %43, ptr %44, align 8, !tbaa !8
  %45 = getelementptr inbounds [3 x double], ptr %40, i64 0, i64 2
  %46 = load double, ptr %45, align 8, !tbaa !8
  %47 = getelementptr inbounds [3 x double], ptr %39, i64 0, i64 2
  store double %46, ptr %47, align 8, !tbaa !8
  %48 = getelementptr inbounds %"class.dealii::Tensor", ptr %39, i64 1
  %49 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %40, i64 0, i64 1
  %50 = load double, ptr %49, align 8, !tbaa !8
  store double %50, ptr %48, align 8, !tbaa !8
  %51 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %40, i64 0, i64 1, i32 0, i64 1
  %52 = load double, ptr %51, align 8, !tbaa !8
  %53 = getelementptr inbounds %"class.dealii::Tensor", ptr %39, i64 1, i32 0, i64 1
  store double %52, ptr %53, align 8, !tbaa !8
  %54 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %40, i64 0, i64 1, i32 0, i64 2
  %55 = load double, ptr %54, align 8, !tbaa !8
  %56 = getelementptr inbounds %"class.dealii::Tensor", ptr %39, i64 1, i32 0, i64 2
  store double %55, ptr %56, align 8, !tbaa !8
  %57 = getelementptr inbounds %"class.dealii::Tensor", ptr %39, i64 2
  %58 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %40, i64 0, i64 2
  %59 = load double, ptr %58, align 8, !tbaa !8
  store double %59, ptr %57, align 8, !tbaa !8
  %60 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %40, i64 0, i64 2, i32 0, i64 1
  %61 = load double, ptr %60, align 8, !tbaa !8
  %62 = getelementptr inbounds %"class.dealii::Tensor", ptr %39, i64 2, i32 0, i64 1
  store double %61, ptr %62, align 8, !tbaa !8
  %63 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %40, i64 0, i64 2, i32 0, i64 2
  %64 = load double, ptr %63, align 8, !tbaa !8
  %65 = getelementptr inbounds %"class.dealii::Tensor", ptr %39, i64 2, i32 0, i64 2
  store double %64, ptr %65, align 8, !tbaa !8
  %66 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %40, i64 1
  %67 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %39, i64 1
  %68 = icmp eq ptr %66, %19
  br i1 %68, label %69, label %38

69:                                               ; preds = %38, %26
  %70 = phi ptr [ %27, %26 ], [ %35, %38 ]
  %71 = phi ptr [ null, %26 ], [ %67, %38 ]
  store ptr %71, ptr %70, align 8, !tbaa !49
  %72 = ptrtoint ptr %1 to i64
  %73 = sub i64 %13, %72
  %74 = sdiv exact i64 %73, 24
  %75 = icmp ugt i64 %74, %2
  br i1 %75, label %76, label %118

76:                                               ; preds = %69
  %77 = sub i64 0, %2
  %78 = getelementptr inbounds %"class.std::vector.72", ptr %11, i64 %77
  %79 = invoke noundef ptr @_ZSt16__do_uninit_copyIPSt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EES6_ET0_T_S8_S7_(ptr noundef nonnull %78, ptr noundef %11, ptr noundef %11)
          to label %80 unwind label %112

80:                                               ; preds = %76
  %81 = load ptr, ptr %10, align 8, !tbaa !135
  %82 = getelementptr inbounds %"class.std::vector.72", ptr %81, i64 %2
  store ptr %82, ptr %10, align 8, !tbaa !135
  %83 = ptrtoint ptr %78 to i64
  %84 = sub i64 %83, %72
  %85 = icmp sgt i64 %84, 0
  br i1 %85, label %86, label %98

86:                                               ; preds = %80
  %87 = udiv exact i64 %84, 24
  br label %88

88:                                               ; preds = %95, %86
  %89 = phi i64 [ %96, %95 ], [ %87, %86 ]
  %90 = phi ptr [ %93, %95 ], [ %11, %86 ]
  %91 = phi ptr [ %92, %95 ], [ %78, %86 ]
  %92 = getelementptr inbounds %"class.std::vector.72", ptr %91, i64 -1
  %93 = getelementptr inbounds %"class.std::vector.72", ptr %90, i64 -1
  %94 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %93, ptr noundef nonnull align 8 dereferenceable(24) %92)
          to label %95 unwind label %108

95:                                               ; preds = %88
  %96 = add nsw i64 %89, -1
  %97 = icmp ugt i64 %89, 1
  br i1 %97, label %88, label %98

98:                                               ; preds = %95, %80
  %99 = getelementptr inbounds %"class.std::vector.72", ptr %1, i64 %2
  br label %100

100:                                              ; preds = %98, %103
  %101 = phi ptr [ %104, %103 ], [ %1, %98 ]
  %102 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %101, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %103 unwind label %106

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.std::vector.72", ptr %101, i64 1
  %105 = icmp eq ptr %104, %99
  br i1 %105, label %133, label %100

106:                                              ; preds = %100
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %114

108:                                              ; preds = %88
  %109 = landingpad { ptr, i32 }
          cleanup
  br label %114

110:                                              ; preds = %127
  %111 = landingpad { ptr, i32 }
          cleanup
  br label %114

112:                                              ; preds = %76, %118, %121
  %113 = landingpad { ptr, i32 }
          cleanup
  br label %114

114:                                              ; preds = %108, %112, %110, %106
  %115 = phi { ptr, i32 } [ %107, %106 ], [ %109, %108 ], [ %111, %110 ], [ %113, %112 ]
  %116 = load ptr, ptr %5, align 8, !tbaa !51
  %117 = icmp eq ptr %116, null
  br i1 %117, label %139, label %138

118:                                              ; preds = %69
  %119 = sub i64 %2, %74
  %120 = invoke noundef ptr @_ZSt18__do_uninit_fill_nIPSt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EEmS5_ET_S7_T0_RKT1_(ptr noundef %11, i64 noundef %119, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %121 unwind label %112

121:                                              ; preds = %118
  store ptr %120, ptr %10, align 8, !tbaa !135
  %122 = invoke noundef ptr @_ZSt16__do_uninit_copyIPSt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EES6_ET0_T_S8_S7_(ptr noundef %1, ptr noundef %11, ptr noundef %120)
          to label %123 unwind label %112

123:                                              ; preds = %121
  %124 = load ptr, ptr %10, align 8, !tbaa !135
  %125 = getelementptr inbounds %"class.std::vector.72", ptr %124, i64 %74
  store ptr %125, ptr %10, align 8, !tbaa !135
  %126 = icmp eq ptr %11, %1
  br i1 %126, label %133, label %127

127:                                              ; preds = %123, %130
  %128 = phi ptr [ %131, %130 ], [ %1, %123 ]
  %129 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %128, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %130 unwind label %110

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.std::vector.72", ptr %128, i64 1
  %132 = icmp eq ptr %131, %11
  br i1 %132, label %133, label %127

133:                                              ; preds = %130, %103, %123
  %134 = load ptr, ptr %5, align 8, !tbaa !51
  %135 = icmp eq ptr %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  call void @_ZdlPv(ptr noundef nonnull %134) #17
  br label %137

137:                                              ; preds = %133, %136
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  br label %222

138:                                              ; preds = %114
  call void @_ZdlPv(ptr noundef nonnull %116) #17
  br label %139

139:                                              ; preds = %138, %114
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #15
  br label %223

140:                                              ; preds = %7
  %141 = load ptr, ptr %0, align 8, !tbaa !133
  %142 = ptrtoint ptr %141 to i64
  %143 = sub i64 %13, %142
  %144 = sdiv exact i64 %143, 24
  %145 = sub nsw i64 384307168202282325, %144
  %146 = icmp ult i64 %145, %2
  br i1 %146, label %147, label %148

147:                                              ; preds = %140
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.9) #18
  unreachable

148:                                              ; preds = %140
  %149 = tail call i64 @llvm.umax.i64(i64 %144, i64 %2)
  %150 = add i64 %149, %144
  %151 = icmp ult i64 %150, %144
  %152 = icmp ugt i64 %150, 384307168202282325
  %153 = or i1 %151, %152
  %154 = select i1 %153, i64 384307168202282325, i64 %150
  %155 = ptrtoint ptr %1 to i64
  %156 = sub i64 %155, %142
  %157 = sdiv exact i64 %156, 24
  %158 = icmp eq i64 %154, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %148
  %160 = mul nuw nsw i64 %154, 24
  %161 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %160) #16
  br label %162

162:                                              ; preds = %148, %159
  %163 = phi ptr [ %161, %159 ], [ null, %148 ]
  %164 = getelementptr inbounds %"class.std::vector.72", ptr %163, i64 %157
  %165 = invoke noundef ptr @_ZSt18__do_uninit_fill_nIPSt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EEmS5_ET_S7_T0_RKT1_(ptr noundef %164, i64 noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3)
          to label %166 unwind label %190

166:                                              ; preds = %162
  %167 = invoke noundef ptr @_ZSt16__do_uninit_copyIPSt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EES6_ET0_T_S8_S7_(ptr noundef %141, ptr noundef %1, ptr noundef %163)
          to label %172 unwind label %168

168:                                              ; preds = %166
  %169 = landingpad { ptr, i32 }
          catch ptr null
  %170 = extractvalue { ptr, i32 } %169, 0
  %171 = tail call ptr @__cxa_begin_catch(ptr %170) #15
  br label %196

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"class.std::vector.72", ptr %167, i64 %2
  %174 = invoke noundef ptr @_ZSt16__do_uninit_copyIPSt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EES6_ET0_T_S8_S7_(ptr noundef %1, ptr noundef %11, ptr noundef nonnull %173)
          to label %175 unwind label %190

175:                                              ; preds = %172
  %176 = icmp eq ptr %141, %11
  br i1 %176, label %185, label %177

177:                                              ; preds = %175, %182
  %178 = phi ptr [ %183, %182 ], [ %141, %175 ]
  %179 = load ptr, ptr %178, align 8, !tbaa !51
  %180 = icmp eq ptr %179, null
  br i1 %180, label %182, label %181

181:                                              ; preds = %177
  tail call void @_ZdlPv(ptr noundef nonnull %179) #17
  br label %182

182:                                              ; preds = %181, %177
  %183 = getelementptr inbounds %"class.std::vector.72", ptr %178, i64 1
  %184 = icmp eq ptr %183, %11
  br i1 %184, label %185, label %177

185:                                              ; preds = %182, %175
  %186 = icmp eq ptr %141, null
  br i1 %186, label %188, label %187

187:                                              ; preds = %185
  tail call void @_ZdlPv(ptr noundef nonnull %141) #17
  br label %188

188:                                              ; preds = %185, %187
  store ptr %163, ptr %0, align 8, !tbaa !133
  store ptr %174, ptr %10, align 8, !tbaa !135
  %189 = getelementptr inbounds %"class.std::vector.72", ptr %163, i64 %154
  store ptr %189, ptr %8, align 8, !tbaa !693
  br label %222

190:                                              ; preds = %172, %162
  %191 = phi ptr [ %163, %162 ], [ %173, %172 ]
  %192 = landingpad { ptr, i32 }
          catch ptr null
  %193 = extractvalue { ptr, i32 } %192, 0
  %194 = tail call ptr @__cxa_begin_catch(ptr %193) #15
  %195 = icmp eq ptr %191, null
  br i1 %195, label %196, label %208

196:                                              ; preds = %168, %190
  %197 = getelementptr inbounds %"class.std::vector.72", ptr %164, i64 %2
  br label %198

198:                                              ; preds = %196, %203
  %199 = phi ptr [ %204, %203 ], [ %164, %196 ]
  %200 = load ptr, ptr %199, align 8, !tbaa !51
  %201 = icmp eq ptr %200, null
  br i1 %201, label %203, label %202

202:                                              ; preds = %198
  tail call void @_ZdlPv(ptr noundef nonnull %200) #17
  br label %203

203:                                              ; preds = %202, %198
  %204 = getelementptr inbounds %"class.std::vector.72", ptr %199, i64 1
  %205 = icmp eq ptr %204, %197
  br i1 %205, label %218, label %198

206:                                              ; preds = %221
  %207 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %223 unwind label %225

208:                                              ; preds = %190
  %209 = icmp eq ptr %163, %191
  br i1 %209, label %218, label %210

210:                                              ; preds = %208, %215
  %211 = phi ptr [ %216, %215 ], [ %163, %208 ]
  %212 = load ptr, ptr %211, align 8, !tbaa !51
  %213 = icmp eq ptr %212, null
  br i1 %213, label %215, label %214

214:                                              ; preds = %210
  tail call void @_ZdlPv(ptr noundef nonnull %212) #17
  br label %215

215:                                              ; preds = %214, %210
  %216 = getelementptr inbounds %"class.std::vector.72", ptr %211, i64 1
  %217 = icmp eq ptr %216, %191
  br i1 %217, label %218, label %210

218:                                              ; preds = %215, %203, %208
  %219 = icmp eq ptr %163, null
  br i1 %219, label %221, label %220

220:                                              ; preds = %218
  tail call void @_ZdlPv(ptr noundef nonnull %163) #17
  br label %221

221:                                              ; preds = %220, %218
  invoke void @__cxa_rethrow() #18
          to label %228 unwind label %206

222:                                              ; preds = %137, %188, %4
  ret void

223:                                              ; preds = %206, %139
  %224 = phi { ptr, i32 } [ %115, %139 ], [ %207, %206 ]
  resume { ptr, i32 } %224

225:                                              ; preds = %206
  %226 = landingpad { ptr, i32 }
          catch ptr null
  %227 = extractvalue { ptr, i32 } %226, 0
  tail call void @__clang_call_terminate(ptr %227) #14
  unreachable

228:                                              ; preds = %221
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZSt16__do_uninit_copyIPSt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EES6_ET0_T_S8_S7_(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %4 = icmp eq ptr %0, %1
  br i1 %4, label %84, label %5

5:                                                ; preds = %3, %61
  %6 = phi ptr [ %64, %61 ], [ %2, %3 ]
  %7 = phi ptr [ %63, %61 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !49
  %10 = load ptr, ptr %7, align 8, !tbaa !51
  %11 = ptrtoint ptr %9 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 72
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  %15 = icmp eq ptr %9, %10
  br i1 %15, label %22, label %16

16:                                               ; preds = %5
  %17 = icmp ugt i64 %14, 128102389400760775
  br i1 %17, label %18, label %20, !prof !692

18:                                               ; preds = %16
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #18
          to label %19 unwind label %68

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %16
  %21 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %13) #16
          to label %22 unwind label %66

22:                                               ; preds = %20, %5
  %23 = phi ptr [ null, %5 ], [ %21, %20 ]
  store ptr %23, ptr %6, align 8, !tbaa !51
  %24 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %6, i64 0, i32 1
  store ptr %23, ptr %24, align 8, !tbaa !49
  %25 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %23, i64 %14
  %26 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %6, i64 0, i32 2
  store ptr %25, ptr %26, align 8, !tbaa !212
  %27 = load ptr, ptr %7, align 8, !tbaa !33
  %28 = load ptr, ptr %8, align 8, !tbaa !33
  %29 = icmp eq ptr %27, %28
  br i1 %29, label %61, label %30

30:                                               ; preds = %22, %30
  %31 = phi ptr [ %59, %30 ], [ %23, %22 ]
  %32 = phi ptr [ %58, %30 ], [ %27, %22 ]
  %33 = load double, ptr %32, align 8, !tbaa !8
  store double %33, ptr %31, align 8, !tbaa !8
  %34 = getelementptr inbounds [3 x double], ptr %32, i64 0, i64 1
  %35 = load double, ptr %34, align 8, !tbaa !8
  %36 = getelementptr inbounds [3 x double], ptr %31, i64 0, i64 1
  store double %35, ptr %36, align 8, !tbaa !8
  %37 = getelementptr inbounds [3 x double], ptr %32, i64 0, i64 2
  %38 = load double, ptr %37, align 8, !tbaa !8
  %39 = getelementptr inbounds [3 x double], ptr %31, i64 0, i64 2
  store double %38, ptr %39, align 8, !tbaa !8
  %40 = getelementptr inbounds %"class.dealii::Tensor", ptr %31, i64 1
  %41 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %32, i64 0, i64 1
  %42 = load double, ptr %41, align 8, !tbaa !8
  store double %42, ptr %40, align 8, !tbaa !8
  %43 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %32, i64 0, i64 1, i32 0, i64 1
  %44 = load double, ptr %43, align 8, !tbaa !8
  %45 = getelementptr inbounds %"class.dealii::Tensor", ptr %31, i64 1, i32 0, i64 1
  store double %44, ptr %45, align 8, !tbaa !8
  %46 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %32, i64 0, i64 1, i32 0, i64 2
  %47 = load double, ptr %46, align 8, !tbaa !8
  %48 = getelementptr inbounds %"class.dealii::Tensor", ptr %31, i64 1, i32 0, i64 2
  store double %47, ptr %48, align 8, !tbaa !8
  %49 = getelementptr inbounds %"class.dealii::Tensor", ptr %31, i64 2
  %50 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %32, i64 0, i64 2
  %51 = load double, ptr %50, align 8, !tbaa !8
  store double %51, ptr %49, align 8, !tbaa !8
  %52 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %32, i64 0, i64 2, i32 0, i64 1
  %53 = load double, ptr %52, align 8, !tbaa !8
  %54 = getelementptr inbounds %"class.dealii::Tensor", ptr %31, i64 2, i32 0, i64 1
  store double %53, ptr %54, align 8, !tbaa !8
  %55 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %32, i64 0, i64 2, i32 0, i64 2
  %56 = load double, ptr %55, align 8, !tbaa !8
  %57 = getelementptr inbounds %"class.dealii::Tensor", ptr %31, i64 2, i32 0, i64 2
  store double %56, ptr %57, align 8, !tbaa !8
  %58 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %32, i64 1
  %59 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %31, i64 1
  %60 = icmp eq ptr %58, %28
  br i1 %60, label %61, label %30

61:                                               ; preds = %30, %22
  %62 = phi ptr [ %23, %22 ], [ %59, %30 ]
  store ptr %62, ptr %24, align 8, !tbaa !49
  %63 = getelementptr inbounds %"class.std::vector.72", ptr %7, i64 1
  %64 = getelementptr inbounds %"class.std::vector.72", ptr %6, i64 1
  %65 = icmp eq ptr %63, %1
  br i1 %65, label %84, label %5

66:                                               ; preds = %20
  %67 = landingpad { ptr, i32 }
          catch ptr null
  br label %70

68:                                               ; preds = %18
  %69 = landingpad { ptr, i32 }
          catch ptr null
  br label %70

70:                                               ; preds = %68, %66
  %71 = phi { ptr, i32 } [ %67, %66 ], [ %69, %68 ]
  %72 = extractvalue { ptr, i32 } %71, 0
  %73 = tail call ptr @__cxa_begin_catch(ptr %72) #15
  %74 = icmp eq ptr %6, %2
  br i1 %74, label %83, label %75

75:                                               ; preds = %70, %80
  %76 = phi ptr [ %81, %80 ], [ %2, %70 ]
  %77 = load ptr, ptr %76, align 8, !tbaa !51
  %78 = icmp eq ptr %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  tail call void @_ZdlPv(ptr noundef nonnull %77) #17
  br label %80

80:                                               ; preds = %79, %75
  %81 = getelementptr inbounds %"class.std::vector.72", ptr %76, i64 1
  %82 = icmp eq ptr %81, %6
  br i1 %82, label %83, label %75

83:                                               ; preds = %80, %70
  invoke void @__cxa_rethrow() #18
          to label %92 unwind label %86

84:                                               ; preds = %61, %3
  %85 = phi ptr [ %2, %3 ], [ %64, %61 ]
  ret ptr %85

86:                                               ; preds = %83
  %87 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %88 unwind label %89

88:                                               ; preds = %86
  resume { ptr, i32 } %87

89:                                               ; preds = %86
  %90 = landingpad { ptr, i32 }
          catch ptr null
  %91 = extractvalue { ptr, i32 } %90, 0
  tail call void @__clang_call_terminate(ptr %91) #14
  unreachable

92:                                               ; preds = %83
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EEaSERKS4_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, %0
  br i1 %3, label %181, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !33
  %7 = load ptr, ptr %1, align 8, !tbaa !33
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = sdiv exact i64 %10, 72
  %12 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !212
  %14 = load ptr, ptr %0, align 8, !tbaa !33
  %15 = ptrtoint ptr %13 to i64
  %16 = ptrtoint ptr %14 to i64
  %17 = sub i64 %15, %16
  %18 = sdiv exact i64 %17, 72
  %19 = icmp ugt i64 %11, %18
  br i1 %19, label %20, label %62

20:                                               ; preds = %4
  %21 = icmp ugt i64 %11, 128102389400760775
  br i1 %21, label %22, label %23, !prof !692

22:                                               ; preds = %20
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #18
  unreachable

23:                                               ; preds = %20
  %24 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #16
  %25 = icmp eq ptr %7, %6
  br i1 %25, label %57, label %26

26:                                               ; preds = %23, %26
  %27 = phi ptr [ %55, %26 ], [ %24, %23 ]
  %28 = phi ptr [ %54, %26 ], [ %7, %23 ]
  %29 = load double, ptr %28, align 8, !tbaa !8
  store double %29, ptr %27, align 8, !tbaa !8
  %30 = getelementptr inbounds [3 x double], ptr %28, i64 0, i64 1
  %31 = load double, ptr %30, align 8, !tbaa !8
  %32 = getelementptr inbounds [3 x double], ptr %27, i64 0, i64 1
  store double %31, ptr %32, align 8, !tbaa !8
  %33 = getelementptr inbounds [3 x double], ptr %28, i64 0, i64 2
  %34 = load double, ptr %33, align 8, !tbaa !8
  %35 = getelementptr inbounds [3 x double], ptr %27, i64 0, i64 2
  store double %34, ptr %35, align 8, !tbaa !8
  %36 = getelementptr inbounds %"class.dealii::Tensor", ptr %27, i64 1
  %37 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %28, i64 0, i64 1
  %38 = load double, ptr %37, align 8, !tbaa !8
  store double %38, ptr %36, align 8, !tbaa !8
  %39 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %28, i64 0, i64 1, i32 0, i64 1
  %40 = load double, ptr %39, align 8, !tbaa !8
  %41 = getelementptr inbounds %"class.dealii::Tensor", ptr %27, i64 1, i32 0, i64 1
  store double %40, ptr %41, align 8, !tbaa !8
  %42 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %28, i64 0, i64 1, i32 0, i64 2
  %43 = load double, ptr %42, align 8, !tbaa !8
  %44 = getelementptr inbounds %"class.dealii::Tensor", ptr %27, i64 1, i32 0, i64 2
  store double %43, ptr %44, align 8, !tbaa !8
  %45 = getelementptr inbounds %"class.dealii::Tensor", ptr %27, i64 2
  %46 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %28, i64 0, i64 2
  %47 = load double, ptr %46, align 8, !tbaa !8
  store double %47, ptr %45, align 8, !tbaa !8
  %48 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %28, i64 0, i64 2, i32 0, i64 1
  %49 = load double, ptr %48, align 8, !tbaa !8
  %50 = getelementptr inbounds %"class.dealii::Tensor", ptr %27, i64 2, i32 0, i64 1
  store double %49, ptr %50, align 8, !tbaa !8
  %51 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %28, i64 0, i64 2, i32 0, i64 2
  %52 = load double, ptr %51, align 8, !tbaa !8
  %53 = getelementptr inbounds %"class.dealii::Tensor", ptr %27, i64 2, i32 0, i64 2
  store double %52, ptr %53, align 8, !tbaa !8
  %54 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %28, i64 1
  %55 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %27, i64 1
  %56 = icmp eq ptr %54, %6
  br i1 %56, label %57, label %26

57:                                               ; preds = %26, %23
  %58 = icmp eq ptr %14, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %57
  tail call void @_ZdlPv(ptr noundef nonnull %14) #17
  br label %60

60:                                               ; preds = %57, %59
  store ptr %24, ptr %0, align 8, !tbaa !51
  %61 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %24, i64 %11
  store ptr %61, ptr %12, align 8, !tbaa !212
  br label %177

62:                                               ; preds = %4
  %63 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !49
  %65 = ptrtoint ptr %64 to i64
  %66 = sub i64 %65, %16
  %67 = sdiv exact i64 %66, 72
  %68 = icmp ult i64 %67, %11
  br i1 %68, label %106, label %69

69:                                               ; preds = %62
  %70 = icmp sgt i64 %10, 0
  br i1 %70, label %71, label %177

71:                                               ; preds = %69
  %72 = udiv exact i64 %10, 72
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ %104, %73 ], [ %72, %71 ]
  %75 = phi ptr [ %103, %73 ], [ %14, %71 ]
  %76 = phi ptr [ %102, %73 ], [ %7, %71 ]
  %77 = load double, ptr %76, align 8, !tbaa !8
  store double %77, ptr %75, align 8, !tbaa !8
  %78 = getelementptr inbounds [3 x double], ptr %76, i64 0, i64 1
  %79 = load double, ptr %78, align 8, !tbaa !8
  %80 = getelementptr inbounds [3 x double], ptr %75, i64 0, i64 1
  store double %79, ptr %80, align 8, !tbaa !8
  %81 = getelementptr inbounds [3 x double], ptr %76, i64 0, i64 2
  %82 = load double, ptr %81, align 8, !tbaa !8
  %83 = getelementptr inbounds [3 x double], ptr %75, i64 0, i64 2
  store double %82, ptr %83, align 8, !tbaa !8
  %84 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %76, i64 0, i64 1
  %85 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %75, i64 0, i64 1
  %86 = load double, ptr %84, align 8, !tbaa !8
  store double %86, ptr %85, align 8, !tbaa !8
  %87 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %76, i64 0, i64 1, i32 0, i64 1
  %88 = load double, ptr %87, align 8, !tbaa !8
  %89 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %75, i64 0, i64 1, i32 0, i64 1
  store double %88, ptr %89, align 8, !tbaa !8
  %90 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %76, i64 0, i64 1, i32 0, i64 2
  %91 = load double, ptr %90, align 8, !tbaa !8
  %92 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %75, i64 0, i64 1, i32 0, i64 2
  store double %91, ptr %92, align 8, !tbaa !8
  %93 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %76, i64 0, i64 2
  %94 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %75, i64 0, i64 2
  %95 = load double, ptr %93, align 8, !tbaa !8
  store double %95, ptr %94, align 8, !tbaa !8
  %96 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %76, i64 0, i64 2, i32 0, i64 1
  %97 = load double, ptr %96, align 8, !tbaa !8
  %98 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %75, i64 0, i64 2, i32 0, i64 1
  store double %97, ptr %98, align 8, !tbaa !8
  %99 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %76, i64 0, i64 2, i32 0, i64 2
  %100 = load double, ptr %99, align 8, !tbaa !8
  %101 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %75, i64 0, i64 2, i32 0, i64 2
  store double %100, ptr %101, align 8, !tbaa !8
  %102 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %76, i64 1
  %103 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %75, i64 1
  %104 = add nsw i64 %74, -1
  %105 = icmp ugt i64 %74, 1
  br i1 %105, label %73, label %177

106:                                              ; preds = %62
  %107 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %7, i64 %67
  %108 = icmp sgt i64 %66, 0
  br i1 %108, label %109, label %144

109:                                              ; preds = %106
  %110 = udiv exact i64 %66, 72
  br label %111

111:                                              ; preds = %111, %109
  %112 = phi i64 [ %142, %111 ], [ %110, %109 ]
  %113 = phi ptr [ %141, %111 ], [ %14, %109 ]
  %114 = phi ptr [ %140, %111 ], [ %7, %109 ]
  %115 = load double, ptr %114, align 8, !tbaa !8
  store double %115, ptr %113, align 8, !tbaa !8
  %116 = getelementptr inbounds [3 x double], ptr %114, i64 0, i64 1
  %117 = load double, ptr %116, align 8, !tbaa !8
  %118 = getelementptr inbounds [3 x double], ptr %113, i64 0, i64 1
  store double %117, ptr %118, align 8, !tbaa !8
  %119 = getelementptr inbounds [3 x double], ptr %114, i64 0, i64 2
  %120 = load double, ptr %119, align 8, !tbaa !8
  %121 = getelementptr inbounds [3 x double], ptr %113, i64 0, i64 2
  store double %120, ptr %121, align 8, !tbaa !8
  %122 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %114, i64 0, i64 1
  %123 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %113, i64 0, i64 1
  %124 = load double, ptr %122, align 8, !tbaa !8
  store double %124, ptr %123, align 8, !tbaa !8
  %125 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %114, i64 0, i64 1, i32 0, i64 1
  %126 = load double, ptr %125, align 8, !tbaa !8
  %127 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %113, i64 0, i64 1, i32 0, i64 1
  store double %126, ptr %127, align 8, !tbaa !8
  %128 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %114, i64 0, i64 1, i32 0, i64 2
  %129 = load double, ptr %128, align 8, !tbaa !8
  %130 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %113, i64 0, i64 1, i32 0, i64 2
  store double %129, ptr %130, align 8, !tbaa !8
  %131 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %114, i64 0, i64 2
  %132 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %113, i64 0, i64 2
  %133 = load double, ptr %131, align 8, !tbaa !8
  store double %133, ptr %132, align 8, !tbaa !8
  %134 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %114, i64 0, i64 2, i32 0, i64 1
  %135 = load double, ptr %134, align 8, !tbaa !8
  %136 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %113, i64 0, i64 2, i32 0, i64 1
  store double %135, ptr %136, align 8, !tbaa !8
  %137 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %114, i64 0, i64 2, i32 0, i64 2
  %138 = load double, ptr %137, align 8, !tbaa !8
  %139 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %113, i64 0, i64 2, i32 0, i64 2
  store double %138, ptr %139, align 8, !tbaa !8
  %140 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %114, i64 1
  %141 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %113, i64 1
  %142 = add nsw i64 %112, -1
  %143 = icmp ugt i64 %112, 1
  br i1 %143, label %111, label %144

144:                                              ; preds = %111, %106
  %145 = icmp eq ptr %107, %6
  br i1 %145, label %177, label %146

146:                                              ; preds = %144, %146
  %147 = phi ptr [ %175, %146 ], [ %64, %144 ]
  %148 = phi ptr [ %174, %146 ], [ %107, %144 ]
  %149 = load double, ptr %148, align 8, !tbaa !8
  store double %149, ptr %147, align 8, !tbaa !8
  %150 = getelementptr inbounds [3 x double], ptr %148, i64 0, i64 1
  %151 = load double, ptr %150, align 8, !tbaa !8
  %152 = getelementptr inbounds [3 x double], ptr %147, i64 0, i64 1
  store double %151, ptr %152, align 8, !tbaa !8
  %153 = getelementptr inbounds [3 x double], ptr %148, i64 0, i64 2
  %154 = load double, ptr %153, align 8, !tbaa !8
  %155 = getelementptr inbounds [3 x double], ptr %147, i64 0, i64 2
  store double %154, ptr %155, align 8, !tbaa !8
  %156 = getelementptr inbounds %"class.dealii::Tensor", ptr %147, i64 1
  %157 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %148, i64 0, i64 1
  %158 = load double, ptr %157, align 8, !tbaa !8
  store double %158, ptr %156, align 8, !tbaa !8
  %159 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %148, i64 0, i64 1, i32 0, i64 1
  %160 = load double, ptr %159, align 8, !tbaa !8
  %161 = getelementptr inbounds %"class.dealii::Tensor", ptr %147, i64 1, i32 0, i64 1
  store double %160, ptr %161, align 8, !tbaa !8
  %162 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %148, i64 0, i64 1, i32 0, i64 2
  %163 = load double, ptr %162, align 8, !tbaa !8
  %164 = getelementptr inbounds %"class.dealii::Tensor", ptr %147, i64 1, i32 0, i64 2
  store double %163, ptr %164, align 8, !tbaa !8
  %165 = getelementptr inbounds %"class.dealii::Tensor", ptr %147, i64 2
  %166 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %148, i64 0, i64 2
  %167 = load double, ptr %166, align 8, !tbaa !8
  store double %167, ptr %165, align 8, !tbaa !8
  %168 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %148, i64 0, i64 2, i32 0, i64 1
  %169 = load double, ptr %168, align 8, !tbaa !8
  %170 = getelementptr inbounds %"class.dealii::Tensor", ptr %147, i64 2, i32 0, i64 1
  store double %169, ptr %170, align 8, !tbaa !8
  %171 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %148, i64 0, i64 2, i32 0, i64 2
  %172 = load double, ptr %171, align 8, !tbaa !8
  %173 = getelementptr inbounds %"class.dealii::Tensor", ptr %147, i64 2, i32 0, i64 2
  store double %172, ptr %173, align 8, !tbaa !8
  %174 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %148, i64 1
  %175 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %147, i64 1
  %176 = icmp eq ptr %174, %6
  br i1 %176, label %177, label %146

177:                                              ; preds = %73, %146, %69, %144, %60
  %178 = load ptr, ptr %0, align 8, !tbaa !51
  %179 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %178, i64 %11
  %180 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %179, ptr %180, align 8, !tbaa !49
  br label %181

181:                                              ; preds = %177, %2
  ret ptr %0
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZSt18__do_uninit_fill_nIPSt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EEmS5_ET_S7_T0_RKT1_(ptr noundef %0, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %86, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %2, i64 0, i32 1
  %7 = load ptr, ptr %2, align 8, !tbaa !51
  br label %8

8:                                                ; preds = %5, %63
  %9 = phi ptr [ %7, %5 ], [ %29, %63 ]
  %10 = phi ptr [ %0, %5 ], [ %66, %63 ]
  %11 = phi i64 [ %1, %5 ], [ %65, %63 ]
  %12 = load ptr, ptr %6, align 8, !tbaa !49
  %13 = ptrtoint ptr %12 to i64
  %14 = ptrtoint ptr %9 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 72
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false)
  %17 = icmp eq ptr %12, %9
  br i1 %17, label %24, label %18

18:                                               ; preds = %8
  %19 = icmp ugt i64 %16, 128102389400760775
  br i1 %19, label %20, label %22, !prof !692

20:                                               ; preds = %18
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #18
          to label %21 unwind label %70

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %15) #16
          to label %24 unwind label %68

24:                                               ; preds = %22, %8
  %25 = phi ptr [ null, %8 ], [ %23, %22 ]
  store ptr %25, ptr %10, align 8, !tbaa !51
  %26 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %10, i64 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !49
  %27 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %25, i64 %16
  %28 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data", ptr %10, i64 0, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !212
  %29 = load ptr, ptr %2, align 8, !tbaa !33
  %30 = load ptr, ptr %6, align 8, !tbaa !33
  %31 = icmp eq ptr %29, %30
  br i1 %31, label %63, label %32

32:                                               ; preds = %24, %32
  %33 = phi ptr [ %61, %32 ], [ %25, %24 ]
  %34 = phi ptr [ %60, %32 ], [ %29, %24 ]
  %35 = load double, ptr %34, align 8, !tbaa !8
  store double %35, ptr %33, align 8, !tbaa !8
  %36 = getelementptr inbounds [3 x double], ptr %34, i64 0, i64 1
  %37 = load double, ptr %36, align 8, !tbaa !8
  %38 = getelementptr inbounds [3 x double], ptr %33, i64 0, i64 1
  store double %37, ptr %38, align 8, !tbaa !8
  %39 = getelementptr inbounds [3 x double], ptr %34, i64 0, i64 2
  %40 = load double, ptr %39, align 8, !tbaa !8
  %41 = getelementptr inbounds [3 x double], ptr %33, i64 0, i64 2
  store double %40, ptr %41, align 8, !tbaa !8
  %42 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 1
  %43 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %34, i64 0, i64 1
  %44 = load double, ptr %43, align 8, !tbaa !8
  store double %44, ptr %42, align 8, !tbaa !8
  %45 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %34, i64 0, i64 1, i32 0, i64 1
  %46 = load double, ptr %45, align 8, !tbaa !8
  %47 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 1, i32 0, i64 1
  store double %46, ptr %47, align 8, !tbaa !8
  %48 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %34, i64 0, i64 1, i32 0, i64 2
  %49 = load double, ptr %48, align 8, !tbaa !8
  %50 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 1, i32 0, i64 2
  store double %49, ptr %50, align 8, !tbaa !8
  %51 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 2
  %52 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %34, i64 0, i64 2
  %53 = load double, ptr %52, align 8, !tbaa !8
  store double %53, ptr %51, align 8, !tbaa !8
  %54 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %34, i64 0, i64 2, i32 0, i64 1
  %55 = load double, ptr %54, align 8, !tbaa !8
  %56 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 2, i32 0, i64 1
  store double %55, ptr %56, align 8, !tbaa !8
  %57 = getelementptr inbounds [3 x %"class.dealii::Tensor"], ptr %34, i64 0, i64 2, i32 0, i64 2
  %58 = load double, ptr %57, align 8, !tbaa !8
  %59 = getelementptr inbounds %"class.dealii::Tensor", ptr %33, i64 2, i32 0, i64 2
  store double %58, ptr %59, align 8, !tbaa !8
  %60 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %34, i64 1
  %61 = getelementptr inbounds %"class.dealii::Tensor.84", ptr %33, i64 1
  %62 = icmp eq ptr %60, %30
  br i1 %62, label %63, label %32

63:                                               ; preds = %32, %24
  %64 = phi ptr [ %25, %24 ], [ %61, %32 ]
  store ptr %64, ptr %26, align 8, !tbaa !49
  %65 = add i64 %11, -1
  %66 = getelementptr inbounds %"class.std::vector.72", ptr %10, i64 1
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %86, label %8

68:                                               ; preds = %22
  %69 = landingpad { ptr, i32 }
          catch ptr null
  br label %72

70:                                               ; preds = %20
  %71 = landingpad { ptr, i32 }
          catch ptr null
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi { ptr, i32 } [ %69, %68 ], [ %71, %70 ]
  %74 = extractvalue { ptr, i32 } %73, 0
  %75 = tail call ptr @__cxa_begin_catch(ptr %74) #15
  %76 = icmp eq ptr %10, %0
  br i1 %76, label %85, label %77

77:                                               ; preds = %72, %82
  %78 = phi ptr [ %83, %82 ], [ %0, %72 ]
  %79 = load ptr, ptr %78, align 8, !tbaa !51
  %80 = icmp eq ptr %79, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %77
  tail call void @_ZdlPv(ptr noundef nonnull %79) #17
  br label %82

82:                                               ; preds = %81, %77
  %83 = getelementptr inbounds %"class.std::vector.72", ptr %78, i64 1
  %84 = icmp eq ptr %83, %10
  br i1 %84, label %85, label %77

85:                                               ; preds = %82, %72
  invoke void @__cxa_rethrow() #18
          to label %94 unwind label %88

86:                                               ; preds = %63, %3
  %87 = phi ptr [ %0, %3 ], [ %66, %63 ]
  ret ptr %87

88:                                               ; preds = %85
  %89 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %90 unwind label %91

90:                                               ; preds = %88
  resume { ptr, i32 } %89

91:                                               ; preds = %88
  %92 = landingpad { ptr, i32 }
          catch ptr null
  %93 = extractvalue { ptr, i32 } %92, 0
  tail call void @__clang_call_terminate(ptr %93) #14
  unreachable

94:                                               ; preds = %85
  unreachable
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #13

attributes #0 = { sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { noinline noreturn nounwind sspstrong uwtable "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #4 = { nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #5 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #7 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #8 = { inlinehint sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #9 = { inlinehint nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #12 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #13 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind }
attributes #16 = { builtin allocsize(0) }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"vtable pointer", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !9, i64 0}
!9 = !{!"double", !10, i64 0}
!10 = !{!"omnipotent char", !7, i64 0}
!11 = !{!12, !13, i64 44}
!12 = !{!"_ZTSN6dealii17FiniteElementDataILi3EEE", !13, i64 0, !13, i64 4, !13, i64 8, !13, i64 12, !13, i64 16, !13, i64 20, !13, i64 24, !13, i64 28, !13, i64 32, !13, i64 36, !13, i64 40, !13, i64 44, !13, i64 48, !13, i64 52, !14, i64 56}
!13 = !{!"int", !10, i64 0}
!14 = !{!"_ZTSN6dealii17FiniteElementDataILi3EE10ConformityE", !10, i64 0}
!15 = !{!16, !17, i64 0}
!16 = !{!"_ZTSNSt12_Vector_baseISt4pairIS0_IjjEjESaIS2_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!17 = !{!"any pointer", !10, i64 0}
!18 = !{!19, !13, i64 4}
!19 = !{!"_ZTSSt4pairIS_IjjEjE", !20, i64 0, !13, i64 8}
!20 = !{!"_ZTSSt4pairIjjE", !13, i64 0, !13, i64 4}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = !{!24, !17, i64 8}
!24 = !{!"_ZTSNSt12_Vector_baseIN6dealii6TensorILi1ELi3EEESaIS2_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!25 = !{!24, !17, i64 0}
!26 = !{!27, !13, i64 40}
!27 = !{!"_ZTSN6dealii24PolynomialsRaviartThomasILi3EEE", !13, i64 0, !28, i64 8, !13, i64 40}
!28 = !{!"_ZTSN6dealii22AnisotropicPolynomialsILi3EEE", !29, i64 0, !13, i64 24}
!29 = !{!"_ZTSSt6vectorIS_IN6dealii11Polynomials10PolynomialIdEESaIS3_EESaIS5_EE", !30, i64 0}
!30 = !{!"_ZTSSt12_Vector_baseISt6vectorIN6dealii11Polynomials10PolynomialIdEESaIS4_EESaIS6_EE", !31, i64 0}
!31 = !{!"_ZTSNSt12_Vector_baseISt6vectorIN6dealii11Polynomials10PolynomialIdEESaIS4_EESaIS6_EE12_Vector_implE", !32, i64 0}
!32 = !{!"_ZTSNSt12_Vector_baseISt6vectorIN6dealii11Polynomials10PolynomialIdEESaIS4_EESaIS6_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!33 = !{!17, !17, i64 0}
!34 = !{!13, !13, i64 0}
!35 = !{!36, !17, i64 72}
!36 = !{!"_ZTSN6dealii9TableBaseILi2EdEE", !37, i64 0, !17, i64 72, !13, i64 80, !47, i64 84}
!37 = !{!"_ZTSN6dealii11SubscriptorE", !13, i64 8, !38, i64 16, !17, i64 64}
!38 = !{!"_ZTSSt3mapIPKcjSt4lessIS1_ESaISt4pairIKS1_jEEE", !39, i64 0}
!39 = !{!"_ZTSSt8_Rb_treeIPKcSt4pairIKS1_jESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE", !40, i64 0}
!40 = !{!"_ZTSNSt8_Rb_treeIPKcSt4pairIKS1_jESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb0EEE", !41, i64 0, !43, i64 8}
!41 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessIPKcEE", !42, i64 0}
!42 = !{!"_ZTSSt4lessIPKcE"}
!43 = !{!"_ZTSSt15_Rb_tree_header", !44, i64 0, !46, i64 32}
!44 = !{!"_ZTSSt18_Rb_tree_node_base", !45, i64 0, !17, i64 8, !17, i64 16, !17, i64 24}
!45 = !{!"_ZTSSt14_Rb_tree_color", !10, i64 0}
!46 = !{!"long", !10, i64 0}
!47 = !{!"_ZTSN6dealii12TableIndicesILi2EEE", !48, i64 0}
!48 = !{!"_ZTSN6dealii16TableIndicesBaseILi2EEE", !10, i64 0}
!49 = !{!50, !17, i64 8}
!50 = !{!"_ZTSNSt12_Vector_baseIN6dealii6TensorILi2ELi3EEESaIS2_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!51 = !{!50, !17, i64 0}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!54 = distinct !{!54, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!55 = !{!56, !17, i64 8}
!56 = !{!"_ZTSNSt12_Vector_baseIN6dealii6TensorILi3ELi3EEESaIS2_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!57 = !{!56, !17, i64 0}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN6dealiimlILi2ELi3EEENS_6TensorIXT_EXT0_EEEdRKS2_: argument 0"}
!60 = distinct !{!60, !"_ZN6dealiimlILi2ELi3EEENS_6TensorIXT_EXT0_EEEdRKS2_"}
!61 = !{!62, !106, i64 728}
!62 = !{!"_ZTSN6dealii13FE_PolyTensorINS_24PolynomialsRaviartThomasILi3EEELi3ELi3EEE", !63, i64 0, !106, i64 728, !27, i64 736, !69, i64 784, !107, i64 880, !109, i64 904, !112, i64 928, !115, i64 952}
!63 = !{!"_ZTSN6dealii13FiniteElementILi3ELi3EEE", !37, i64 0, !12, i64 72, !64, i64 132, !65, i64 136, !65, i64 160, !69, i64 184, !71, i64 280, !75, i64 304, !71, i64 328, !75, i64 352, !79, i64 376, !81, i64 472, !85, i64 496, !85, i64 520, !89, i64 544, !89, i64 568, !92, i64 592, !89, i64 616, !96, i64 640, !102, i64 680, !92, i64 704}
!64 = !{!"bool", !10, i64 0}
!65 = !{!"_ZTSSt6vectorIS_IN6dealii10FullMatrixIdEESaIS2_EESaIS4_EE", !66, i64 0}
!66 = !{!"_ZTSSt12_Vector_baseISt6vectorIN6dealii10FullMatrixIdEESaIS3_EESaIS5_EE", !67, i64 0}
!67 = !{!"_ZTSNSt12_Vector_baseISt6vectorIN6dealii10FullMatrixIdEESaIS3_EESaIS5_EE12_Vector_implE", !68, i64 0}
!68 = !{!"_ZTSNSt12_Vector_baseISt6vectorIN6dealii10FullMatrixIdEESaIS3_EESaIS5_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!69 = !{!"_ZTSN6dealii10FullMatrixIdEE", !70, i64 0}
!70 = !{!"_ZTSN6dealii5TableILi2EdEE", !36, i64 0}
!71 = !{!"_ZTSSt6vectorIN6dealii5PointILi3EEESaIS2_EE", !72, i64 0}
!72 = !{!"_ZTSSt12_Vector_baseIN6dealii5PointILi3EEESaIS2_EE", !73, i64 0}
!73 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi3EEESaIS2_EE12_Vector_implE", !74, i64 0}
!74 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi3EEESaIS2_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!75 = !{!"_ZTSSt6vectorIN6dealii5PointILi2EEESaIS2_EE", !76, i64 0}
!76 = !{!"_ZTSSt12_Vector_baseIN6dealii5PointILi2EEESaIS2_EE", !77, i64 0}
!77 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi2EEESaIS2_EE12_Vector_implE", !78, i64 0}
!78 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi2EEESaIS2_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!79 = !{!"_ZTSN6dealii5TableILi2EiEE", !80, i64 0}
!80 = !{!"_ZTSN6dealii9TableBaseILi2EiEE", !37, i64 0, !17, i64 72, !13, i64 80, !47, i64 84}
!81 = !{!"_ZTSSt6vectorIiSaIiEE", !82, i64 0}
!82 = !{!"_ZTSSt12_Vector_baseIiSaIiEE", !83, i64 0}
!83 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !84, i64 0}
!84 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!85 = !{!"_ZTSSt6vectorISt4pairIjjESaIS1_EE", !86, i64 0}
!86 = !{!"_ZTSSt12_Vector_baseISt4pairIjjESaIS1_EE", !87, i64 0}
!87 = !{!"_ZTSNSt12_Vector_baseISt4pairIjjESaIS1_EE12_Vector_implE", !88, i64 0}
!88 = !{!"_ZTSNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!89 = !{!"_ZTSSt6vectorISt4pairIS0_IjjEjESaIS2_EE", !90, i64 0}
!90 = !{!"_ZTSSt12_Vector_baseISt4pairIS0_IjjEjESaIS2_EE", !91, i64 0}
!91 = !{!"_ZTSNSt12_Vector_baseISt4pairIS0_IjjEjESaIS2_EE12_Vector_implE", !16, i64 0}
!92 = !{!"_ZTSSt6vectorIjSaIjEE", !93, i64 0}
!93 = !{!"_ZTSSt12_Vector_baseIjSaIjEE", !94, i64 0}
!94 = !{!"_ZTSNSt12_Vector_baseIjSaIjEE12_Vector_implE", !95, i64 0}
!95 = !{!"_ZTSNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!96 = !{!"_ZTSSt6vectorIbSaIbEE", !97, i64 0}
!97 = !{!"_ZTSSt13_Bvector_baseISaIbEE", !98, i64 0}
!98 = !{!"_ZTSNSt13_Bvector_baseISaIbEE13_Bvector_implE", !99, i64 0}
!99 = !{!"_ZTSNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataE", !100, i64 0, !100, i64 16, !17, i64 32}
!100 = !{!"_ZTSSt13_Bit_iterator", !101, i64 0}
!101 = !{!"_ZTSSt18_Bit_iterator_base", !17, i64 0, !13, i64 8}
!102 = !{!"_ZTSSt6vectorIS_IbSaIbEESaIS1_EE", !103, i64 0}
!103 = !{!"_ZTSSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE", !104, i64 0}
!104 = !{!"_ZTSNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implE", !105, i64 0}
!105 = !{!"_ZTSNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!106 = !{!"_ZTSN6dealii11MappingTypeE", !10, i64 0}
!107 = !{!"_ZTSN6dealii5PointILi3EEE", !108, i64 0}
!108 = !{!"_ZTSN6dealii6TensorILi1ELi3EEE", !10, i64 0}
!109 = !{!"_ZTSSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE", !110, i64 0}
!110 = !{!"_ZTSSt12_Vector_baseIN6dealii6TensorILi1ELi3EEESaIS2_EE", !111, i64 0}
!111 = !{!"_ZTSNSt12_Vector_baseIN6dealii6TensorILi1ELi3EEESaIS2_EE12_Vector_implE", !24, i64 0}
!112 = !{!"_ZTSSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE", !113, i64 0}
!113 = !{!"_ZTSSt12_Vector_baseIN6dealii6TensorILi2ELi3EEESaIS2_EE", !114, i64 0}
!114 = !{!"_ZTSNSt12_Vector_baseIN6dealii6TensorILi2ELi3EEESaIS2_EE12_Vector_implE", !50, i64 0}
!115 = !{!"_ZTSSt6vectorIN6dealii6TensorILi3ELi3EEESaIS2_EE", !116, i64 0}
!116 = !{!"_ZTSSt12_Vector_baseIN6dealii6TensorILi3ELi3EEESaIS2_EE", !117, i64 0}
!117 = !{!"_ZTSNSt12_Vector_baseIN6dealii6TensorILi3ELi3EEESaIS2_EE12_Vector_implE", !56, i64 0}
!118 = !{!119, !120, i64 76}
!119 = !{!"_ZTSN6dealii7MappingILi3ELi3EE16InternalDataBaseE", !37, i64 0, !120, i64 72, !120, i64 76, !120, i64 80, !121, i64 88, !71, i64 112, !112, i64 136, !112, i64 160, !64, i64 184}
!120 = !{!"_ZTSN6dealii11UpdateFlagsE", !10, i64 0}
!121 = !{!"_ZTSSt6vectorIdSaIdEE", !122, i64 0}
!122 = !{!"_ZTSSt12_Vector_baseIdSaIdEE", !123, i64 0}
!123 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE12_Vector_implE", !124, i64 0}
!124 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!125 = !{!119, !120, i64 80}
!126 = !{!119, !120, i64 72}
!127 = !{!124, !17, i64 8}
!128 = !{!124, !17, i64 0}
!129 = !{!12, !13, i64 40}
!130 = !{!131, !17, i64 0}
!131 = !{!"_ZTSNSt12_Vector_baseISt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EESaIS5_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!132 = !{!131, !17, i64 8}
!133 = !{!134, !17, i64 0}
!134 = !{!"_ZTSNSt12_Vector_baseISt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EESaIS5_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!135 = !{!134, !17, i64 8}
!136 = !{!74, !17, i64 0}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!139 = distinct !{!139, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZN6dealiimlILi2ELi3EEENS_6TensorIXT_EXT0_EEEdRKS2_: argument 0"}
!142 = distinct !{!142, !"_ZN6dealiimlILi2ELi3EEENS_6TensorIXT_EXT0_EEEdRKS2_"}
!143 = !{!119, !64, i64 184}
!144 = !{i8 0, i8 2}
!145 = !{}
!146 = distinct !{!146, !147, !148}
!147 = !{!"llvm.loop.isvectorized", i32 1}
!148 = !{!"llvm.loop.unroll.runtime.disable"}
!149 = distinct !{!149, !148, !147}
!150 = distinct !{!150, !147, !148}
!151 = distinct !{!151, !148, !147}
!152 = !{!153, !153, i64 0}
!153 = !{!"_ZTSN6dealii14CellSimilarity10SimilarityE", !10, i64 0}
!154 = !{!95, !17, i64 0}
!155 = !{!156}
!156 = distinct !{!156, !157}
!157 = distinct !{!157, !"LVerDomain"}
!158 = !{!159}
!159 = distinct !{!159, !157}
!160 = !{!161, !162, !156, !163, !164}
!161 = distinct !{!161, !157}
!162 = distinct !{!162, !157}
!163 = distinct !{!163, !157}
!164 = distinct !{!164, !157}
!165 = !{!163}
!166 = !{!161}
!167 = !{!162, !156, !163, !164}
!168 = !{!164}
!169 = !{!162}
!170 = !{!156, !163, !164}
!171 = distinct !{!171, !147, !148}
!172 = distinct !{!172, !147}
!173 = !{!24, !17, i64 16}
!174 = !{!175}
!175 = distinct !{!175, !176}
!176 = distinct !{!176, !"LVerDomain"}
!177 = !{!178}
!178 = distinct !{!178, !176}
!179 = !{!180, !181, !175, !182, !183}
!180 = distinct !{!180, !176}
!181 = distinct !{!181, !176}
!182 = distinct !{!182, !176}
!183 = distinct !{!183, !176}
!184 = !{!182}
!185 = !{!180}
!186 = !{!181, !175, !182, !183}
!187 = !{!183}
!188 = !{!181}
!189 = !{!175, !182, !183}
!190 = distinct !{!190, !147, !148}
!191 = distinct !{!191, !147}
!192 = !{!193}
!193 = distinct !{!193, !194}
!194 = distinct !{!194, !"LVerDomain"}
!195 = !{!196}
!196 = distinct !{!196, !194}
!197 = !{!198}
!198 = distinct !{!198, !194}
!199 = !{!200, !201, !193, !196, !202, !203}
!200 = distinct !{!200, !194}
!201 = distinct !{!201, !194}
!202 = distinct !{!202, !194}
!203 = distinct !{!203, !194}
!204 = !{!202}
!205 = !{!200}
!206 = !{!201, !193, !196, !202, !203}
!207 = !{!203}
!208 = !{!201}
!209 = !{!193, !196, !202, !203}
!210 = distinct !{!210, !147, !148}
!211 = distinct !{!211, !147}
!212 = !{!50, !17, i64 16}
!213 = !{!214}
!214 = distinct !{!214, !215, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!215 = distinct !{!215, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!216 = !{!217, !17, i64 8}
!217 = !{!"_ZTSN6dealii16TriaAccessorBaseILi3ELi3ELi3EEE", !13, i64 0, !13, i64 4, !17, i64 8}
!218 = !{!217, !13, i64 0}
!219 = !{!220, !17, i64 0}
!220 = !{!"_ZTSNSt12_Vector_baseIPN6dealii8internal13Triangulation9TriaLevelILi3EEESaIS5_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!221 = !{!217, !13, i64 4}
!222 = !{!101, !17, i64 0}
!223 = !{!46, !46, i64 0}
!224 = distinct !{!224, !147, !148}
!225 = distinct !{!225, !148, !147}
!226 = distinct !{!226, !147, !148}
!227 = distinct !{!227, !148, !147}
!228 = !{!229}
!229 = distinct !{!229, !230}
!230 = distinct !{!230, !"LVerDomain"}
!231 = !{!232}
!232 = distinct !{!232, !230}
!233 = !{!234, !235, !229, !236, !237}
!234 = distinct !{!234, !230}
!235 = distinct !{!235, !230}
!236 = distinct !{!236, !230}
!237 = distinct !{!237, !230}
!238 = !{!236}
!239 = !{!234}
!240 = !{!235, !229, !236, !237}
!241 = !{!237}
!242 = !{!235}
!243 = !{!229, !236, !237}
!244 = distinct !{!244, !147, !148}
!245 = distinct !{!245, !147}
!246 = !{!247}
!247 = distinct !{!247, !248}
!248 = distinct !{!248, !"LVerDomain"}
!249 = !{!250}
!250 = distinct !{!250, !248}
!251 = !{!252}
!252 = distinct !{!252, !248}
!253 = !{!254, !255, !247, !250, !256, !257}
!254 = distinct !{!254, !248}
!255 = distinct !{!255, !248}
!256 = distinct !{!256, !248}
!257 = distinct !{!257, !248}
!258 = !{!256}
!259 = !{!254}
!260 = !{!255, !247, !250, !256, !257}
!261 = !{!257}
!262 = !{!255}
!263 = !{!247, !250, !256, !257}
!264 = distinct !{!264, !147, !148}
!265 = distinct !{!265, !147}
!266 = !{!267}
!267 = distinct !{!267, !268, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!268 = distinct !{!268, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!269 = !{!270, !17, i64 0}
!270 = !{!"_ZTSNSt12_Vector_baseIN6dealii8internal13Triangulation10TriaObjectILi3EEESaIS4_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!271 = !{!272, !17, i64 96}
!272 = !{!"_ZTSN6dealii13TriangulationILi3ELi3EEE", !37, i64 0, !273, i64 72, !17, i64 96, !71, i64 104, !96, i64 128, !10, i64 168, !10, i64 4248, !64, i64 8328, !276, i64 8332, !277, i64 8336, !280, i64 8528}
!273 = !{!"_ZTSSt6vectorIPN6dealii8internal13Triangulation9TriaLevelILi3EEESaIS5_EE", !274, i64 0}
!274 = !{!"_ZTSSt12_Vector_baseIPN6dealii8internal13Triangulation9TriaLevelILi3EEESaIS5_EE", !275, i64 0}
!275 = !{!"_ZTSNSt12_Vector_baseIPN6dealii8internal13Triangulation9TriaLevelILi3EEESaIS5_EE12_Vector_implE", !220, i64 0}
!276 = !{!"_ZTSN6dealii13TriangulationILi3ELi3EE13MeshSmoothingE", !10, i64 0}
!277 = !{!"_ZTSN6dealii8internal13Triangulation11NumberCacheILi3EEE", !278, i64 0, !13, i64 128, !92, i64 136, !13, i64 160, !92, i64 168}
!278 = !{!"_ZTSN6dealii8internal13Triangulation11NumberCacheILi2EEE", !279, i64 0, !13, i64 64, !92, i64 72, !13, i64 96, !92, i64 104}
!279 = !{!"_ZTSN6dealii8internal13Triangulation11NumberCacheILi1EEE", !13, i64 0, !92, i64 8, !13, i64 32, !92, i64 40}
!280 = !{!"_ZTSNSt7__cxx114listIPN6dealii13TriangulationILi3ELi3EE18RefinementListenerESaIS5_EEE", !281, i64 0}
!281 = !{!"_ZTSNSt7__cxx1110_List_baseIPN6dealii13TriangulationILi3ELi3EE18RefinementListenerESaIS5_EEE", !282, i64 0}
!282 = !{!"_ZTSNSt7__cxx1110_List_baseIPN6dealii13TriangulationILi3ELi3EE18RefinementListenerESaIS5_EE10_List_implE", !283, i64 0}
!283 = !{!"_ZTSNSt8__detail17_List_node_headerE", !284, i64 0, !46, i64 16}
!284 = !{!"_ZTSNSt8__detail15_List_node_baseE", !17, i64 0, !17, i64 8}
!285 = !{!286, !17, i64 0}
!286 = !{!"_ZTSNSt12_Vector_baseIN6dealii14RefinementCaseILi2EEESaIS2_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!287 = !{!84, !17, i64 0}
!288 = distinct !{!288, !147, !148}
!289 = distinct !{!289, !148, !147}
!290 = distinct !{!290, !147, !148}
!291 = distinct !{!291, !148, !147}
!292 = !{!293}
!293 = distinct !{!293, !294}
!294 = distinct !{!294, !"LVerDomain"}
!295 = !{!296}
!296 = distinct !{!296, !294}
!297 = !{!298, !299, !293, !300, !301}
!298 = distinct !{!298, !294}
!299 = distinct !{!299, !294}
!300 = distinct !{!300, !294}
!301 = distinct !{!301, !294}
!302 = !{!300}
!303 = !{!298}
!304 = !{!299, !293, !300, !301}
!305 = !{!301}
!306 = !{!299}
!307 = !{!293, !300, !301}
!308 = distinct !{!308, !147, !148}
!309 = distinct !{!309, !147}
!310 = !{!311}
!311 = distinct !{!311, !312}
!312 = distinct !{!312, !"LVerDomain"}
!313 = !{!314}
!314 = distinct !{!314, !312}
!315 = !{!316}
!316 = distinct !{!316, !312}
!317 = !{!318, !319, !311, !314, !320, !321}
!318 = distinct !{!318, !312}
!319 = distinct !{!319, !312}
!320 = distinct !{!320, !312}
!321 = distinct !{!321, !312}
!322 = !{!320}
!323 = !{!318}
!324 = !{!319, !311, !314, !320, !321}
!325 = !{!321}
!326 = !{!319}
!327 = !{!311, !314, !320, !321}
!328 = distinct !{!328, !147, !148}
!329 = distinct !{!329, !147}
!330 = !{!331}
!331 = distinct !{!331, !332, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!332 = distinct !{!332, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!333 = distinct !{!333, !22}
!334 = !{!335, !13, i64 16}
!335 = !{!"_ZTSN6dealii14PolynomialsABFILi3EEE", !13, i64 0, !17, i64 8, !13, i64 16, !121, i64 24, !109, i64 48, !112, i64 72}
!336 = !{!337}
!337 = distinct !{!337, !338, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!338 = distinct !{!338, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!339 = !{!340}
!340 = distinct !{!340, !341, !"_ZN6dealiimlILi2ELi3EEENS_6TensorIXT_EXT0_EEEdRKS2_: argument 0"}
!341 = distinct !{!341, !"_ZN6dealiimlILi2ELi3EEENS_6TensorIXT_EXT0_EEEdRKS2_"}
!342 = !{!343, !106, i64 728}
!343 = !{!"_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsABFILi3EEELi3ELi3EEE", !63, i64 0, !106, i64 728, !335, i64 736, !69, i64 832, !107, i64 928, !109, i64 952, !112, i64 976, !115, i64 1000}
!344 = !{!345}
!345 = distinct !{!345, !346, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!346 = distinct !{!346, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!347 = !{!348}
!348 = distinct !{!348, !349, !"_ZN6dealiimlILi2ELi3EEENS_6TensorIXT_EXT0_EEEdRKS2_: argument 0"}
!349 = distinct !{!349, !"_ZN6dealiimlILi2ELi3EEENS_6TensorIXT_EXT0_EEEdRKS2_"}
!350 = distinct !{!350, !147, !148}
!351 = distinct !{!351, !148, !147}
!352 = distinct !{!352, !147, !148}
!353 = distinct !{!353, !148, !147}
!354 = !{!355}
!355 = distinct !{!355, !356}
!356 = distinct !{!356, !"LVerDomain"}
!357 = !{!358}
!358 = distinct !{!358, !356}
!359 = !{!360, !361, !355, !362, !363}
!360 = distinct !{!360, !356}
!361 = distinct !{!361, !356}
!362 = distinct !{!362, !356}
!363 = distinct !{!363, !356}
!364 = !{!362}
!365 = !{!360}
!366 = !{!361, !355, !362, !363}
!367 = !{!363}
!368 = !{!361}
!369 = !{!355, !362, !363}
!370 = distinct !{!370, !147, !148}
!371 = distinct !{!371, !147}
!372 = !{!373}
!373 = distinct !{!373, !374}
!374 = distinct !{!374, !"LVerDomain"}
!375 = !{!376}
!376 = distinct !{!376, !374}
!377 = !{!378, !379, !373, !380, !381}
!378 = distinct !{!378, !374}
!379 = distinct !{!379, !374}
!380 = distinct !{!380, !374}
!381 = distinct !{!381, !374}
!382 = !{!380}
!383 = !{!378}
!384 = !{!379, !373, !380, !381}
!385 = !{!381}
!386 = !{!379}
!387 = !{!373, !380, !381}
!388 = distinct !{!388, !147, !148}
!389 = distinct !{!389, !147}
!390 = !{!391}
!391 = distinct !{!391, !392}
!392 = distinct !{!392, !"LVerDomain"}
!393 = !{!394}
!394 = distinct !{!394, !392}
!395 = !{!396}
!396 = distinct !{!396, !392}
!397 = !{!398, !399, !391, !394, !400, !401}
!398 = distinct !{!398, !392}
!399 = distinct !{!399, !392}
!400 = distinct !{!400, !392}
!401 = distinct !{!401, !392}
!402 = !{!400}
!403 = !{!398}
!404 = !{!399, !391, !394, !400, !401}
!405 = !{!401}
!406 = !{!399}
!407 = !{!391, !394, !400, !401}
!408 = distinct !{!408, !147, !148}
!409 = distinct !{!409, !147}
!410 = !{!411}
!411 = distinct !{!411, !412, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!412 = distinct !{!412, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!413 = distinct !{!413, !147, !148}
!414 = distinct !{!414, !148, !147}
!415 = distinct !{!415, !147, !148}
!416 = distinct !{!416, !148, !147}
!417 = !{!418}
!418 = distinct !{!418, !419}
!419 = distinct !{!419, !"LVerDomain"}
!420 = !{!421}
!421 = distinct !{!421, !419}
!422 = !{!423, !424, !418, !425, !426}
!423 = distinct !{!423, !419}
!424 = distinct !{!424, !419}
!425 = distinct !{!425, !419}
!426 = distinct !{!426, !419}
!427 = !{!425}
!428 = !{!423}
!429 = !{!424, !418, !425, !426}
!430 = !{!426}
!431 = !{!424}
!432 = !{!418, !425, !426}
!433 = distinct !{!433, !147, !148}
!434 = distinct !{!434, !147}
!435 = !{!436}
!436 = distinct !{!436, !437}
!437 = distinct !{!437, !"LVerDomain"}
!438 = !{!439}
!439 = distinct !{!439, !437}
!440 = !{!441}
!441 = distinct !{!441, !437}
!442 = !{!443, !444, !436, !439, !445, !446}
!443 = distinct !{!443, !437}
!444 = distinct !{!444, !437}
!445 = distinct !{!445, !437}
!446 = distinct !{!446, !437}
!447 = !{!445}
!448 = !{!443}
!449 = !{!444, !436, !439, !445, !446}
!450 = !{!446}
!451 = !{!444}
!452 = !{!436, !439, !445, !446}
!453 = distinct !{!453, !147, !148}
!454 = distinct !{!454, !147}
!455 = !{!456}
!456 = distinct !{!456, !457, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!457 = distinct !{!457, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!458 = distinct !{!458, !147, !148}
!459 = distinct !{!459, !148, !147}
!460 = distinct !{!460, !147, !148}
!461 = distinct !{!461, !148, !147}
!462 = !{!463}
!463 = distinct !{!463, !464}
!464 = distinct !{!464, !"LVerDomain"}
!465 = !{!466}
!466 = distinct !{!466, !464}
!467 = !{!468, !469, !463, !470, !471}
!468 = distinct !{!468, !464}
!469 = distinct !{!469, !464}
!470 = distinct !{!470, !464}
!471 = distinct !{!471, !464}
!472 = !{!470}
!473 = !{!468}
!474 = !{!469, !463, !470, !471}
!475 = !{!471}
!476 = !{!469}
!477 = !{!463, !470, !471}
!478 = distinct !{!478, !147, !148}
!479 = distinct !{!479, !147}
!480 = !{!481}
!481 = distinct !{!481, !482}
!482 = distinct !{!482, !"LVerDomain"}
!483 = !{!484}
!484 = distinct !{!484, !482}
!485 = !{!486}
!486 = distinct !{!486, !482}
!487 = !{!488, !489, !481, !484, !490, !491}
!488 = distinct !{!488, !482}
!489 = distinct !{!489, !482}
!490 = distinct !{!490, !482}
!491 = distinct !{!491, !482}
!492 = !{!490}
!493 = !{!488}
!494 = !{!489, !481, !484, !490, !491}
!495 = !{!491}
!496 = !{!489}
!497 = !{!481, !484, !490, !491}
!498 = distinct !{!498, !147, !148}
!499 = distinct !{!499, !147}
!500 = !{!501}
!501 = distinct !{!501, !502, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!502 = distinct !{!502, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!503 = distinct !{!503, !22}
!504 = !{!505, !17, i64 0}
!505 = !{!"_ZTSNSt12_Vector_baseIN6dealii11Polynomials10PolynomialIdEESaIS3_EE17_Vector_impl_dataE", !17, i64 0, !17, i64 8, !17, i64 16}
!506 = !{!505, !17, i64 8}
!507 = !{!508, !13, i64 104}
!508 = !{!"_ZTSN6dealii14PolynomialsBDMILi3EEE", !509, i64 0, !510, i64 80, !13, i64 104, !121, i64 112, !109, i64 136, !112, i64 160}
!509 = !{!"_ZTSN6dealii15PolynomialSpaceILi3EEE", !510, i64 0, !13, i64 24, !92, i64 32, !92, i64 56}
!510 = !{!"_ZTSSt6vectorIN6dealii11Polynomials10PolynomialIdEESaIS3_EE", !511, i64 0}
!511 = !{!"_ZTSSt12_Vector_baseIN6dealii11Polynomials10PolynomialIdEESaIS3_EE", !512, i64 0}
!512 = !{!"_ZTSNSt12_Vector_baseIN6dealii11Polynomials10PolynomialIdEESaIS3_EE12_Vector_implE", !505, i64 0}
!513 = !{!514}
!514 = distinct !{!514, !515, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!515 = distinct !{!515, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!516 = !{!517}
!517 = distinct !{!517, !518, !"_ZN6dealiimlILi2ELi3EEENS_6TensorIXT_EXT0_EEEdRKS2_: argument 0"}
!518 = distinct !{!518, !"_ZN6dealiimlILi2ELi3EEENS_6TensorIXT_EXT0_EEEdRKS2_"}
!519 = !{!520, !106, i64 728}
!520 = !{!"_ZTSN6dealii13FE_PolyTensorINS_14PolynomialsBDMILi3EEELi3ELi3EEE", !63, i64 0, !106, i64 728, !508, i64 736, !69, i64 920, !107, i64 1016, !109, i64 1040, !112, i64 1064, !115, i64 1088}
!521 = !{!522}
!522 = distinct !{!522, !523, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!523 = distinct !{!523, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!524 = !{!525}
!525 = distinct !{!525, !526, !"_ZN6dealiimlILi2ELi3EEENS_6TensorIXT_EXT0_EEEdRKS2_: argument 0"}
!526 = distinct !{!526, !"_ZN6dealiimlILi2ELi3EEENS_6TensorIXT_EXT0_EEEdRKS2_"}
!527 = distinct !{!527, !147, !148}
!528 = distinct !{!528, !148, !147}
!529 = distinct !{!529, !147, !148}
!530 = distinct !{!530, !148, !147}
!531 = !{!532}
!532 = distinct !{!532, !533}
!533 = distinct !{!533, !"LVerDomain"}
!534 = !{!535}
!535 = distinct !{!535, !533}
!536 = !{!537, !538, !532, !539, !540}
!537 = distinct !{!537, !533}
!538 = distinct !{!538, !533}
!539 = distinct !{!539, !533}
!540 = distinct !{!540, !533}
!541 = !{!539}
!542 = !{!537}
!543 = !{!538, !532, !539, !540}
!544 = !{!540}
!545 = !{!538}
!546 = !{!532, !539, !540}
!547 = distinct !{!547, !147, !148}
!548 = distinct !{!548, !147}
!549 = !{!550}
!550 = distinct !{!550, !551}
!551 = distinct !{!551, !"LVerDomain"}
!552 = !{!553}
!553 = distinct !{!553, !551}
!554 = !{!555, !556, !550, !557, !558}
!555 = distinct !{!555, !551}
!556 = distinct !{!556, !551}
!557 = distinct !{!557, !551}
!558 = distinct !{!558, !551}
!559 = !{!557}
!560 = !{!555}
!561 = !{!556, !550, !557, !558}
!562 = !{!558}
!563 = !{!556}
!564 = !{!550, !557, !558}
!565 = distinct !{!565, !147, !148}
!566 = distinct !{!566, !147}
!567 = !{!568}
!568 = distinct !{!568, !569}
!569 = distinct !{!569, !"LVerDomain"}
!570 = !{!571}
!571 = distinct !{!571, !569}
!572 = !{!573}
!573 = distinct !{!573, !569}
!574 = !{!575, !576, !568, !571, !577, !578}
!575 = distinct !{!575, !569}
!576 = distinct !{!576, !569}
!577 = distinct !{!577, !569}
!578 = distinct !{!578, !569}
!579 = !{!577}
!580 = !{!575}
!581 = !{!576, !568, !571, !577, !578}
!582 = !{!578}
!583 = !{!576}
!584 = !{!568, !571, !577, !578}
!585 = distinct !{!585, !147, !148}
!586 = distinct !{!586, !147}
!587 = !{!588}
!588 = distinct !{!588, !589, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!589 = distinct !{!589, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!590 = distinct !{!590, !147, !148}
!591 = distinct !{!591, !148, !147}
!592 = distinct !{!592, !147, !148}
!593 = distinct !{!593, !148, !147}
!594 = !{!595}
!595 = distinct !{!595, !596}
!596 = distinct !{!596, !"LVerDomain"}
!597 = !{!598}
!598 = distinct !{!598, !596}
!599 = !{!600, !601, !595, !602, !603}
!600 = distinct !{!600, !596}
!601 = distinct !{!601, !596}
!602 = distinct !{!602, !596}
!603 = distinct !{!603, !596}
!604 = !{!602}
!605 = !{!600}
!606 = !{!601, !595, !602, !603}
!607 = !{!603}
!608 = !{!601}
!609 = !{!595, !602, !603}
!610 = distinct !{!610, !147, !148}
!611 = distinct !{!611, !147}
!612 = !{!613}
!613 = distinct !{!613, !614}
!614 = distinct !{!614, !"LVerDomain"}
!615 = !{!616}
!616 = distinct !{!616, !614}
!617 = !{!618}
!618 = distinct !{!618, !614}
!619 = !{!620, !621, !613, !616, !622, !623}
!620 = distinct !{!620, !614}
!621 = distinct !{!621, !614}
!622 = distinct !{!622, !614}
!623 = distinct !{!623, !614}
!624 = !{!622}
!625 = !{!620}
!626 = !{!621, !613, !616, !622, !623}
!627 = !{!623}
!628 = !{!621}
!629 = !{!613, !616, !622, !623}
!630 = distinct !{!630, !147, !148}
!631 = distinct !{!631, !147}
!632 = !{!633}
!633 = distinct !{!633, !634, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!634 = distinct !{!634, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!635 = distinct !{!635, !147, !148}
!636 = distinct !{!636, !148, !147}
!637 = distinct !{!637, !147, !148}
!638 = distinct !{!638, !148, !147}
!639 = !{!640}
!640 = distinct !{!640, !641}
!641 = distinct !{!641, !"LVerDomain"}
!642 = !{!643}
!643 = distinct !{!643, !641}
!644 = !{!645, !646, !640, !647, !648}
!645 = distinct !{!645, !641}
!646 = distinct !{!646, !641}
!647 = distinct !{!647, !641}
!648 = distinct !{!648, !641}
!649 = !{!647}
!650 = !{!645}
!651 = !{!646, !640, !647, !648}
!652 = !{!648}
!653 = !{!646}
!654 = !{!640, !647, !648}
!655 = distinct !{!655, !147, !148}
!656 = distinct !{!656, !147}
!657 = !{!658}
!658 = distinct !{!658, !659}
!659 = distinct !{!659, !"LVerDomain"}
!660 = !{!661}
!661 = distinct !{!661, !659}
!662 = !{!663}
!663 = distinct !{!663, !659}
!664 = !{!665, !666, !658, !661, !667, !668}
!665 = distinct !{!665, !659}
!666 = distinct !{!666, !659}
!667 = distinct !{!667, !659}
!668 = distinct !{!668, !659}
!669 = !{!667}
!670 = !{!665}
!671 = !{!666, !658, !661, !667, !668}
!672 = !{!668}
!673 = !{!666}
!674 = !{!658, !661, !667, !668}
!675 = distinct !{!675, !147, !148}
!676 = distinct !{!676, !147}
!677 = !{!678}
!678 = distinct !{!678, !679, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_: argument 0"}
!679 = distinct !{!679, !"_ZN6dealiimlILi3EEENS_6TensorILi1EXT_EEEdRKS2_"}
!680 = !{!32, !17, i64 0}
!681 = !{!32, !17, i64 8}
!682 = distinct !{!682, !22}
!683 = !{!684}
!684 = distinct !{!684, !685}
!685 = distinct !{!685, !"LVerDomain"}
!686 = distinct !{!686, !147, !148}
!687 = distinct !{!687, !22}
!688 = distinct !{!688, !147}
!689 = distinct !{!689, !22}
!690 = !{!56, !17, i64 16}
!691 = !{!131, !17, i64 16}
!692 = !{!"branch_weights", i32 1, i32 2000}
!693 = !{!134, !17, i64 16}
